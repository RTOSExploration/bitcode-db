; ModuleID = 'build/96b_carbon/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [85 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [85 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229123 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229103 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229093 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229193 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229183 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229173 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229163 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229153 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229143 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231816 to i8*), void (i8*)* inttoptr (i32 134230469 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231792 to i8*), void (i8*)* inttoptr (i32 134230469 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229133 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231552 to i8*), void (i8*)* inttoptr (i32 134229113 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231768 to i8*), void (i8*)* inttoptr (i32 134230469 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [46 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_20 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_23 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_20 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_23 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_47 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_50 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !316
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !345
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !351
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !490
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !526
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !536
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !541
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !561
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !733
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !694
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !677
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !650
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !666
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !696
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !710
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !712
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !714
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !716
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !718
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !720
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !722
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !728
@__devicehdl_dts_ord_9 = dso_local constant [14 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 32767], section ".__device_handles_pass2", align 2, !dbg !738
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !769
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !866
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !855
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !907
@__devicehdl_dts_ord_25 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !758
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1001
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1280
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1250
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1236
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1178
@__devicehdl_dts_ord_20 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !756
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1282
@__devstate_dts_ord_20 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1254
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1252
@__init___device_dts_ord_20 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_20 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1192
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !754
@.str.2.48 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1295
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1258
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1256
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1201
@__devicehdl_dts_ord_23 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !752
@.str.3.49 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1297
@__devstate_dts_ord_23 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1262
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1260
@__init___device_dts_ord_23 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_23 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1210
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !750
@.str.4.50 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1299
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1216
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !748
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1301
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1222
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !746
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1303
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1228
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !744
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1305
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1234
@__devicehdl_dts_ord_47 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !764
@.str.57 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_47, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1307
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1559
@__devstate_dts_ord_47 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1505
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1561
@__device_dts_ord_47 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_47, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_47, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1484
@__init___device_dts_ord_47 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_47 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1486
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !762
@.str.1.58 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1570
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1507
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1602
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.58, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1495
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1497
@__devicehdl_dts_ord_50 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !760
@.str.2.59 = private unnamed_addr constant [16 x i8] c"serial@40011400\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073812480 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_50, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1604
@__devstate_dts_ord_50 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1509
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1619
@__device_dts_ord_50 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.59, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_50, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_50, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1501
@__init___device_dts_ord_50 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_50 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1503
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1511
@__pinctrl_dev_config__device_dts_ord_47 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_47, i32 0, i32 0), i8 1 }, align 4, !dbg !1519
@__pinctrl_states__device_dts_ord_47 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_47, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1542
@__pinctrl_state_pins_0__device_dts_ord_47 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1545
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_47 to i8*) }, section ".intList", align 4, !dbg !1548
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([14 x i16], [14 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !839
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1589
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1591
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1593
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1595
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1597
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 32 }], align 4, !dbg !1606
@__pinctrl_dev_config__device_dts_ord_50 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_50, i32 0, i32 0), i8 1 }, align 4, !dbg !1608
@__pinctrl_states__device_dts_ord_50 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_50, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1610
@__pinctrl_state_pins_0__device_dts_ord_50 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1224, i32 512 }, %struct._thread_arch { i32 1256, i32 0 }], align 4, !dbg !1612
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 71, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_50 to i8*) }, section ".intList", align 4, !dbg !1614
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1621
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1730
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1732
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1728
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1699
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_25, %struct.device* @__device_dts_ord_20, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_23, %struct.device* @__device_dts_ord_73, %struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1734
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1176
@__device_dts_ord_20 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_20, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_20, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1190
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1199
@__device_dts_ord_23 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_23, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_23, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1208
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1214
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1220
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1226
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1232
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1824
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1866
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1869
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1875
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1881
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2090
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2099
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2106
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2111
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.109 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.114, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.115, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.116, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.110, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.117, i32 0, i32 0)], align 4, !dbg !2137
@.str.111 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.112 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.113 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.114 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.115 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.116 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.110 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.117 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2249
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2262
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2370
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2373
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2375
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2104
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2101
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2377
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2413
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1968
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2411
@.str.185 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2416
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3167 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3225, !srcloc !3228
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3275, !srcloc !3276
  ret void, !dbg !3277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3280 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3282, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8* undef, metadata !3283, metadata !DIExpression()), !dbg !3285
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3286
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3287
  %5 = icmp eq i32 %4, 0, !dbg !3287
  br i1 %5, label %27, label %6, !dbg !3289

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3290
  %8 = icmp eq i32 %7, 0, !dbg !3291
  br i1 %8, label %27, label %9, !dbg !3291

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3284, metadata !DIExpression(DW_OP_deref)), !dbg !3285
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3292
  %10 = load i8, i8* %3, align 1, !dbg !3294
  call void @llvm.dbg.value(metadata i8 %10, metadata !3284, metadata !DIExpression()), !dbg !3285
  %11 = icmp eq i8 %10, 10, !dbg !3296
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3297
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3297
  br i1 %16, label %17, label %19, !dbg !3297

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3298
  store i8 0, i8* %18, align 1, !dbg !3300
  call fastcc void @k_msgq_put() #26, !dbg !3301
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3302
  br label %24, !dbg !3303

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3304
  br i1 %20, label %21, label %24, !dbg !3306

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3307
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3307
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3309
  store i8 %10, i8* %23, align 1, !dbg !3310
  br label %24, !dbg !3311

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3290
  %26 = icmp eq i32 %25, 0, !dbg !3291
  br i1 %26, label %27, label %9, !dbg !3291, !llvm.loop !3312

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3314
  ret void, !dbg !3314
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3315 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3318, metadata !DIExpression()), !dbg !3319
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3320, !srcloc !3322
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3323
  ret i32 %1, !dbg !3324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3325 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3327, metadata !DIExpression()), !dbg !3329
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3330
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3328, metadata !DIExpression()), !dbg !3329
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3331
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3331
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3333
  br i1 %4, label %7, label %5, !dbg !3334

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !3335
  br label %7, !dbg !3336

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3329
  ret i32 %8, !dbg !3337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3338 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3340, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i8* %0, metadata !3341, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 1, metadata !3342, metadata !DIExpression()), !dbg !3344
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3345
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3343, metadata !DIExpression()), !dbg !3344
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3346
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3346
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3348
  br i1 %5, label %8, label %6, !dbg !3349

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8* noundef %0, i32 noundef 1) #27, !dbg !3350
  br label %8, !dbg !3351

8:                                                ; preds = %1, %6
  ret void, !dbg !3352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3353 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3365, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3363, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3364, metadata !DIExpression()), !dbg !3366
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3367, !srcloc !3369
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3370
  ret void, !dbg !3371
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3372 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3374, metadata !DIExpression()), !dbg !3376
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3377
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3375, metadata !DIExpression()), !dbg !3376
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3378
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3378
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3380
  br i1 %4, label %7, label %5, !dbg !3381

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !3382
  br label %7, !dbg !3383

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3376
  ret i32 %8, !dbg !3384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3389, metadata !DIExpression()), !dbg !3393
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %2, metadata !3390, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 0, metadata !3391, metadata !DIExpression()), !dbg !3395
  %3 = icmp sgt i32 %2, 0, !dbg !3396
  br i1 %3, label %5, label %4, !dbg !3398

4:                                                ; preds = %5, %1
  ret void, !dbg !3399

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3391, metadata !DIExpression()), !dbg !3395
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3400
  %8 = load i8, i8* %7, align 1, !dbg !3400
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3402
  %9 = add nuw nsw i32 %6, 1, !dbg !3403
  call void @llvm.dbg.value(metadata i32 %9, metadata !3391, metadata !DIExpression()), !dbg !3395
  %10 = icmp eq i32 %9, %2, !dbg !3396
  br i1 %10, label %4, label %5, !dbg !3398, !llvm.loop !3404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3406 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3408, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i8 %0, metadata !3409, metadata !DIExpression()), !dbg !3410
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3411, !srcloc !3413
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3414
  ret void, !dbg !3415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3416 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3418, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.value(metadata i8 %0, metadata !3419, metadata !DIExpression()), !dbg !3421
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3422
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3420, metadata !DIExpression()), !dbg !3421
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3423
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3423
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !3424
  ret void, !dbg !3425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3426 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3429
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3429
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3428, metadata !DIExpression()), !dbg !3430
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3431
  br i1 %3, label %5, label %4, !dbg !3433

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3434
  br label %11, !dbg !3436

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3437
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3438
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3439
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3440
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3441
  %7 = icmp eq i32 %6, 0, !dbg !3442
  br i1 %7, label %8, label %11, !dbg !3443

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3444
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3446
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3447
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3441
  %10 = icmp eq i32 %9, 0, !dbg !3442
  br i1 %10, label %8, label %11, !dbg !3443, !llvm.loop !3448

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3450
  ret void, !dbg !3450
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3451 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3456, metadata !DIExpression()), !dbg !3457
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3458, !srcloc !3460
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3461
  ret i1 %1, !dbg !3462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3463 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3465, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3466, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i8* null, metadata !3467, metadata !DIExpression()), !dbg !3469
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3470
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3468, metadata !DIExpression()), !dbg !3469
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3471
  br i1 %2, label %8, label %3, !dbg !3473

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3474
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3474
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3475
  br i1 %6, label %8, label %7, !dbg !3476

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_47, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3477
  br label %8, !dbg !3479

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3481 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3483, metadata !DIExpression()), !dbg !3484
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3485, !srcloc !3487
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3488
  ret void, !dbg !3489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3490 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3496, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3494, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata i8* %0, metadata !3495, metadata !DIExpression()), !dbg !3497
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3498, !srcloc !3500
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3501
  ret i32 %2, !dbg !3502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3503 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3505, metadata !DIExpression()), !dbg !3507
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3508
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3506, metadata !DIExpression()), !dbg !3507
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3509
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3509
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3511
  br i1 %4, label %6, label %5, !dbg !3512

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !3513
  br label %6, !dbg !3515

6:                                                ; preds = %5, %0
  ret void, !dbg !3516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3517 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !3519, metadata !DIExpression()), !dbg !3520
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !3521
  ret i1 %1, !dbg !3522
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3525, metadata !DIExpression()), !dbg !3526
  ret i32 0, !dbg !3527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3528 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3532, metadata !DIExpression()), !dbg !3533
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3534
  ret void, !dbg !3535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3536 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3539
  ret i8* %1, !dbg !3540
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3541 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3553, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %0, metadata !3552, metadata !DIExpression()), !dbg !3562
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3563
  ret void, !dbg !3565
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3570, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.value(metadata i8* %1, metadata !3571, metadata !DIExpression()), !dbg !3572
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3573
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3573
  ret i32 %4, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3575 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3587, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3584, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i8* %1, metadata !3585, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i8* %2, metadata !3586, metadata !DIExpression()), !dbg !3588
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3589
  ret void, !dbg !3590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3595, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %1, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 0, metadata !3597, metadata !DIExpression()), !dbg !3598
  %3 = icmp eq i32 %1, 0, !dbg !3599
  br i1 %3, label %13, label %4, !dbg !3602

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3597, metadata !DIExpression()), !dbg !3598
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3603
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3605
  %8 = load i8, i8* %7, align 1, !dbg !3605
  %9 = zext i8 %8 to i32, !dbg !3605
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3603
  %11 = add nuw i32 %5, 1, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %11, metadata !3597, metadata !DIExpression()), !dbg !3598
  %12 = icmp eq i32 %11, %1, !dbg !3599
  br i1 %12, label %13, label %4, !dbg !3602, !llvm.loop !3607

13:                                               ; preds = %4, %2
  ret void, !dbg !3609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3610 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3614, metadata !DIExpression()), !dbg !3616
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3617
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3617
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3615, metadata !DIExpression()), !dbg !3618
  call void @llvm.va_start(i8* nonnull %3), !dbg !3619
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3620
  %5 = load i32, i32* %4, align 4, !dbg !3620
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3620
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3620
  call void @llvm.va_end(i8* nonnull %3), !dbg !3621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3622
  ret void, !dbg !3622
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3623 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3627, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %1, metadata !3628, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8* %2, metadata !3629, metadata !DIExpression()), !dbg !3632
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3633
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3633
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3630, metadata !DIExpression()), !dbg !3634
  call void @llvm.va_start(i8* nonnull %5), !dbg !3635
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3636
  %7 = load i32, i32* %6, align 4, !dbg !3636
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3636
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %9, metadata !3631, metadata !DIExpression()), !dbg !3632
  call void @llvm.va_end(i8* nonnull %5), !dbg !3637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3638
  ret i32 %9, !dbg !3639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3640 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3647, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i8* %0, metadata !3644, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %1, metadata !3645, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i8* %2, metadata !3646, metadata !DIExpression()), !dbg !3654
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3655
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3648, metadata !DIExpression()), !dbg !3656
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3657
  store i8* %0, i8** %7, align 4, !dbg !3657
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3657
  store i32 %1, i32* %8, align 4, !dbg !3657
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3657
  store i32 0, i32* %9, align 4, !dbg !3657
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3658
  %10 = load i32, i32* %9, align 4, !dbg !3659
  %11 = load i32, i32* %8, align 4, !dbg !3661
  %12 = icmp slt i32 %10, %11, !dbg !3662
  br i1 %12, label %13, label %15, !dbg !3663

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3664
  store i8 0, i8* %14, align 1, !dbg !3666
  br label %15, !dbg !3667

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3668
  ret i32 %10, !dbg !3669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3675, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3676, metadata !DIExpression()), !dbg !3677
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3678
  %4 = load i8*, i8** %3, align 4, !dbg !3678
  %5 = icmp eq i8* %4, null, !dbg !3680
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3681
  br i1 %5, label %12, label %8, !dbg !3682

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3683
  %10 = load i32, i32* %9, align 4, !dbg !3683
  %11 = icmp slt i32 %7, %10, !dbg !3684
  br i1 %11, label %15, label %12, !dbg !3685

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3686
  %14 = add nsw i32 %7, 1, !dbg !3688
  store i32 %14, i32* %13, align 4, !dbg !3688
  br label %25, !dbg !3689

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3690
  %17 = icmp eq i32 %7, %16, !dbg !3692
  br i1 %17, label %18, label %21, !dbg !3693

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3694
  store i32 %19, i32* %6, align 4, !dbg !3694
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3696
  store i8 0, i8* %20, align 1, !dbg !3697
  br label %25, !dbg !3698

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3699
  %23 = add nsw i32 %7, 1, !dbg !3701
  store i32 %23, i32* %6, align 4, !dbg !3701
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3702
  store i8 %22, i8* %24, align 1, !dbg !3703
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3704
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3705 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3715, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %1, metadata !3716, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %2, metadata !3717, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %3, metadata !3718, metadata !DIExpression()), !dbg !3719
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3720
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3721
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3722
  unreachable, !dbg !3723
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3724 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3828
  ret %struct.k_thread* %1, !dbg !3829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3834, metadata !DIExpression()), !dbg !3835
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3836, !srcloc !3838
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3839
  ret void, !dbg !3840
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3841 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3842, !srcloc !3844
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3845
  ret %struct.k_thread* %1, !dbg !3846
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3847 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3858, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i8* %1, metadata !3859, metadata !DIExpression()), !dbg !3862
  %3 = icmp eq i8* %1, null, !dbg !3863
  br i1 %3, label %8, label %4, !dbg !3865

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3866
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3866
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3860, metadata !DIExpression()), !dbg !3862
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3867, !range !3868
  call void @llvm.dbg.value(metadata i32 %7, metadata !3861, metadata !DIExpression()), !dbg !3862
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3869
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3870
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3872 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3876, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i8* %1, metadata !3877, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i8* %1, metadata !3878, metadata !DIExpression()), !dbg !3880
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3881
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3879, metadata !DIExpression()), !dbg !3880
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3882
  %5 = ptrtoint i8* %4 to i32, !dbg !3883
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3883
  %7 = sub i32 %5, %6, !dbg !3883
  %8 = lshr i32 %7, 3, !dbg !3884
  ret i32 %8, !dbg !3885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3886 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3890, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i32 %1, metadata !3891, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i1 %2, metadata !3892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3895
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3896
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3893, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3894, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3895
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3897
  %6 = bitcast i8* %5 to i16*, !dbg !3897
  %7 = load i16, i16* %6, align 2, !dbg !3897
  %8 = and i16 %7, -2, !dbg !3901
  %9 = zext i1 %2 to i16, !dbg !3901
  %10 = or i16 %8, %9, !dbg !3901
  store i16 %10, i16* %6, align 2, !dbg !3897
  ret void, !dbg !3902
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3903 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 %1, metadata !3908, metadata !DIExpression()), !dbg !3909
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3910
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3912
  br i1 %4, label %7, label %5, !dbg !3913

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3914
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3916
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3917
  br label %7, !dbg !3918

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3919, !range !3921
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3922
  br i1 %9, label %13, label %10, !dbg !3923

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3924
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3926, !range !3921
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3927
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %12, metadata !3908, metadata !DIExpression()), !dbg !3909
  br label %13, !dbg !3929

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3908, metadata !DIExpression()), !dbg !3909
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3930
  ret void, !dbg !3931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3936, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i32 %1, metadata !3937, metadata !DIExpression()), !dbg !3938
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3939
  %4 = add i32 %3, %1, !dbg !3940
  ret i32 %4, !dbg !3941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3942 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3949
  %4 = and i32 %3, 1, !dbg !3950
  %5 = icmp ne i32 %4, 0, !dbg !3949
  ret i1 %5, !dbg !3951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3954, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %1, metadata !3955, metadata !DIExpression()), !dbg !3959
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3960, !range !3961
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %4, metadata !3956, metadata !DIExpression()), !dbg !3963
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3964
  ret void, !dbg !3965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3966 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3970, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 %1, metadata !3971, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 %2, metadata !3972, metadata !DIExpression()), !dbg !3975
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3976
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3977
  %6 = add i32 %5, %4, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %6, metadata !3973, metadata !DIExpression()), !dbg !3975
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3979
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3980
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3981
  ret void, !dbg !3982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3983 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3985, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %1, metadata !3986, metadata !DIExpression()), !dbg !3987
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3988
  %4 = sub i32 %1, %3, !dbg !3989
  ret i32 %4, !dbg !3990
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3991 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3993, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.value(metadata i32 %1, metadata !3994, metadata !DIExpression()), !dbg !3998
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3999, !range !3961
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %4, metadata !3995, metadata !DIExpression()), !dbg !4001
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4002
  ret void, !dbg !4003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4004 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4008, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata i32 %1, metadata !4009, metadata !DIExpression()), !dbg !4010
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4011
  %4 = lshr i32 %3, 1, !dbg !4012
  ret i32 %4, !dbg !4013
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4014 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4018, metadata !DIExpression()), !dbg !4021
  call void @llvm.dbg.value(metadata i32 %1, metadata !4019, metadata !DIExpression()), !dbg !4021
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4022
  %4 = add i32 %1, 1, !dbg !4023
  %5 = sub i32 %4, %3, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %5, metadata !4020, metadata !DIExpression()), !dbg !4021
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4025, !range !4026
  %7 = sub nsw i32 31, %6, !dbg !4027
  ret i32 %7, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4033, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %1, metadata !4034, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %2, metadata !4035, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4036, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4042
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4043
  %5 = load i32, i32* %4, align 4, !dbg !4043
  %6 = icmp eq i32 %5, 0, !dbg !4044
  br i1 %6, label %7, label %12, !dbg !4045

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4046
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4048
  %10 = load i32, i32* %9, align 4, !dbg !4049
  %11 = or i32 %10, %8, !dbg !4049
  store i32 %11, i32* %9, align 4, !dbg !4049
  store i32 %1, i32* %4, align 4, !dbg !4050
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4051
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4052
  br label %14, !dbg !4053

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4038, metadata !DIExpression()), !dbg !4054
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4055, !range !4056
  call void @llvm.dbg.value(metadata i32 %13, metadata !4041, metadata !DIExpression()), !dbg !4054
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4057
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4058
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4059
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4060
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4062 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4064, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %1, metadata !4065, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %2, metadata !4066, metadata !DIExpression()), !dbg !4067
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4068
  ret void, !dbg !4069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4070 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4072, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i32 %1, metadata !4073, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i32 %2, metadata !4074, metadata !DIExpression()), !dbg !4075
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4076
  ret void, !dbg !4077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4078 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4080, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i32 %1, metadata !4081, metadata !DIExpression()), !dbg !4082
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4083
  ret i32 %3, !dbg !4084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4085 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4089, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %1, metadata !4090, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 %2, metadata !4091, metadata !DIExpression()), !dbg !4094
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4095
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4092, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4093, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4094
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4093, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4094
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %5, metadata !4093, metadata !DIExpression()), !dbg !4094
  %6 = bitcast i8* %5 to i16*, !dbg !4097
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4100
  %8 = load i16, i16* %7, align 2, !dbg !4100
  %9 = zext i16 %8 to i32, !dbg !4100
  ret i32 %9, !dbg !4101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4102 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4106, metadata !DIExpression()), !dbg !4107
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4108
  ret %struct.chunk_unit_t* %2, !dbg !4109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4110 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4114, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %1, metadata !4115, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %2, metadata !4116, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %3, metadata !4117, metadata !DIExpression()), !dbg !4120
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4118, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4119, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4120
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4122
  call void @llvm.dbg.value(metadata i8* %6, metadata !4119, metadata !DIExpression()), !dbg !4120
  %7 = trunc i32 %3 to i16, !dbg !4123
  %8 = bitcast i8* %6 to i16*, !dbg !4126
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4127
  store i16 %7, i16* %9, align 2, !dbg !4128
  ret void, !dbg !4129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4130 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4134, metadata !DIExpression()), !dbg !4135
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4136
  ret i32 %2, !dbg !4137
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4138 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4142, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i32 %1, metadata !4143, metadata !DIExpression()), !dbg !4144
  %3 = add i32 %1, 4, !dbg !4145
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4146
  ret i32 %4, !dbg !4147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4152, metadata !DIExpression()), !dbg !4153
  %2 = add i32 %0, 7, !dbg !4154
  %3 = lshr i32 %2, 3, !dbg !4155
  ret i32 %3, !dbg !4156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4157 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4161, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %1, metadata !4162, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %2, metadata !4163, metadata !DIExpression()), !dbg !4164
  %4 = shl i32 %2, 1, !dbg !4165
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4166
  ret void, !dbg !4167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4168 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4170, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 %1, metadata !4171, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 %2, metadata !4172, metadata !DIExpression()), !dbg !4173
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4174
  ret void, !dbg !4175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4176 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4178, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %1, metadata !4179, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %2, metadata !4180, metadata !DIExpression()), !dbg !4186
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4187
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4181, metadata !DIExpression()), !dbg !4186
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4188
  %6 = icmp eq i32 %5, %1, !dbg !4189
  br i1 %6, label %7, label %14, !dbg !4190

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4191
  %9 = xor i32 %8, -1, !dbg !4193
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4194
  %11 = load i32, i32* %10, align 4, !dbg !4195
  %12 = and i32 %11, %9, !dbg !4195
  store i32 %12, i32* %10, align 4, !dbg !4195
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4196
  store i32 0, i32* %13, align 4, !dbg !4197
  br label %17, !dbg !4198

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %15, metadata !4182, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %5, metadata !4185, metadata !DIExpression()), !dbg !4200
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4201
  store i32 %5, i32* %16, align 4, !dbg !4202
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4203
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4204
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4206 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4208, metadata !DIExpression()), !dbg !4210
  call void @llvm.dbg.value(metadata i32 %1, metadata !4209, metadata !DIExpression()), !dbg !4210
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4211
  ret i32 %3, !dbg !4212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4213 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4217, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %1, metadata !4218, metadata !DIExpression()), !dbg !4224
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4225
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4219, metadata !DIExpression()), !dbg !4224
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %5, metadata !4220, metadata !DIExpression()), !dbg !4224
  %6 = ptrtoint i8* %1 to i32, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %6, metadata !4221, metadata !DIExpression()), !dbg !4224
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4228
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4228
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %9, metadata !4222, metadata !DIExpression()), !dbg !4224
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4230
  %11 = shl i32 %10, 3, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %11, metadata !4223, metadata !DIExpression()), !dbg !4224
  %12 = sub i32 %9, %6, !dbg !4232
  %13 = add i32 %12, %11, !dbg !4233
  ret i32 %13, !dbg !4234
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4235 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4239, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4240, metadata !DIExpression()), !dbg !4245
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4246
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4241, metadata !DIExpression()), !dbg !4245
  %5 = icmp eq i32 %1, 0, !dbg !4247
  br i1 %5, label %19, label %6, !dbg !4249

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4250
  br i1 %7, label %19, label %8, !dbg !4251

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4252, !range !3868
  call void @llvm.dbg.value(metadata i32 %9, metadata !4243, metadata !DIExpression()), !dbg !4245
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %10, metadata !4244, metadata !DIExpression()), !dbg !4245
  %11 = icmp eq i32 %10, 0, !dbg !4254
  br i1 %11, label %19, label %12, !dbg !4256

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4257
  %14 = icmp ugt i32 %13, %9, !dbg !4259
  br i1 %14, label %15, label %17, !dbg !4260

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4261
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4263
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4264
  br label %17, !dbg !4265

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4266
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %18, metadata !4242, metadata !DIExpression()), !dbg !4245
  br label %19, !dbg !4268

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4245
  ret i8* %20, !dbg !4269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4270 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4274, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata i32 %1, metadata !4275, metadata !DIExpression()), !dbg !4276
  %3 = lshr i32 %1, 3, !dbg !4277
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4278
  %5 = load i32, i32* %4, align 4, !dbg !4278
  %6 = icmp uge i32 %3, %5, !dbg !4279
  ret i1 %6, !dbg !4280
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4281 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4285, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %1, metadata !4286, metadata !DIExpression()), !dbg !4300
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %3, metadata !4287, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4288, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4300
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4302
  %5 = load i32, i32* %4, align 4, !dbg !4302
  %6 = icmp eq i32 %5, 0, !dbg !4303
  br i1 %6, label %19, label %7, !dbg !4304

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4305
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4306
  call void @llvm.dbg.value(metadata i32 %9, metadata !4292, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i32 %8, metadata !4293, metadata !DIExpression()), !dbg !4307
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4308
  %11 = icmp ult i32 %10, %1, !dbg !4310
  br i1 %11, label %13, label %12, !dbg !4311

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4312
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4314
  store i32 %14, i32* %4, align 4, !dbg !4315
  %15 = add nsw i32 %9, -1, !dbg !4316
  call void @llvm.dbg.value(metadata i32 %15, metadata !4292, metadata !DIExpression()), !dbg !4306
  %16 = icmp eq i32 %15, 0, !dbg !4316
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4317
  br i1 %18, label %19, label %7, !dbg !4317, !llvm.loop !4318

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4321
  %21 = load i32, i32* %20, align 4, !dbg !4321
  %22 = add nsw i32 %3, 1, !dbg !4322
  %23 = shl nsw i32 -1, %22, !dbg !4322
  %24 = and i32 %21, %23, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %24, metadata !4295, metadata !DIExpression()), !dbg !4300
  %25 = icmp eq i32 %24, 0, !dbg !4324
  br i1 %25, label %30, label %26, !dbg !4325

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4326, !range !4026
  call void @llvm.dbg.value(metadata i32 %27, metadata !4296, metadata !DIExpression()), !dbg !4327
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4328
  %29 = load i32, i32* %28, align 4, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %29, metadata !4299, metadata !DIExpression()), !dbg !4327
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4329
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4300
  ret i32 %31, !dbg !4330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4331 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4333, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %1, metadata !4334, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %2, metadata !4335, metadata !DIExpression()), !dbg !4339
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %4, metadata !4336, metadata !DIExpression()), !dbg !4339
  %5 = sub i32 %2, %1, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %5, metadata !4337, metadata !DIExpression()), !dbg !4339
  %6 = sub i32 %4, %5, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %6, metadata !4338, metadata !DIExpression()), !dbg !4339
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4343
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4344
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4345
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4346
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4347
  ret void, !dbg !4348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4349 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4353, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 %1, metadata !4354, metadata !DIExpression()), !dbg !4357
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4358
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4355, metadata !DIExpression()), !dbg !4357
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4359
  call void @llvm.dbg.value(metadata i8* %4, metadata !4356, metadata !DIExpression()), !dbg !4357
  ret i8* %4, !dbg !4360
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4361 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4365, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %1, metadata !4366, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %2, metadata !4367, metadata !DIExpression()), !dbg !4377
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4378
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4378
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4368, metadata !DIExpression()), !dbg !4377
  %6 = sub i32 0, %1, !dbg !4379
  %7 = and i32 %6, %1, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %7, metadata !4370, metadata !DIExpression()), !dbg !4377
  %8 = icmp eq i32 %7, %1, !dbg !4381
  br i1 %8, label %13, label %9, !dbg !4383

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %10, metadata !4366, metadata !DIExpression()), !dbg !4377
  %11 = icmp ult i32 %7, 4, !dbg !4386
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4386
  br label %17, !dbg !4386

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4387
  br i1 %14, label %15, label %17, !dbg !4390

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4391
  br label %57, !dbg !4393

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4377
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4394
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4366, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %19, metadata !4369, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %18, metadata !4370, metadata !DIExpression()), !dbg !4377
  %21 = icmp eq i32 %2, 0, !dbg !4395
  br i1 %21, label %57, label %22, !dbg !4397

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4398
  br i1 %23, label %57, label %24, !dbg !4399

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4400
  %26 = add i32 %25, %20, !dbg !4401
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4402, !range !3868
  call void @llvm.dbg.value(metadata i32 %27, metadata !4371, metadata !DIExpression()), !dbg !4377
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %28, metadata !4372, metadata !DIExpression()), !dbg !4377
  %29 = icmp eq i32 %28, 0, !dbg !4404
  br i1 %29, label %57, label %30, !dbg !4406

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4407
  call void @llvm.dbg.value(metadata i8* %31, metadata !4373, metadata !DIExpression()), !dbg !4377
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4408
  %33 = ptrtoint i8* %32 to i32, !dbg !4408
  %34 = add i32 %20, -1, !dbg !4408
  %35 = add i32 %34, %33, !dbg !4408
  %36 = sub i32 0, %20, !dbg !4408
  %37 = and i32 %35, %36, !dbg !4408
  %38 = inttoptr i32 %37 to i8*, !dbg !4409
  %39 = sub i32 0, %18, !dbg !4410
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4410
  call void @llvm.dbg.value(metadata i8* %40, metadata !4373, metadata !DIExpression()), !dbg !4377
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4411
  %42 = ptrtoint i8* %41 to i32, !dbg !4411
  %43 = add i32 %42, 7, !dbg !4411
  %44 = and i32 %43, -8, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %44, metadata !4374, metadata !DIExpression()), !dbg !4377
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %45, metadata !4375, metadata !DIExpression()), !dbg !4377
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4413
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4414
  %48 = sub i32 %44, %47, !dbg !4414
  %49 = ashr exact i32 %48, 3, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %49, metadata !4376, metadata !DIExpression()), !dbg !4377
  %50 = icmp ugt i32 %45, %28, !dbg !4415
  br i1 %50, label %51, label %52, !dbg !4417

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4418
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4420
  br label %52, !dbg !4421

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4422
  %54 = icmp ugt i32 %53, %49, !dbg !4424
  br i1 %54, label %55, label %56, !dbg !4425

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4426
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4428
  br label %56, !dbg !4429

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4430
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4377
  ret i8* %58, !dbg !4431
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4432 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4436, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i8* %1, metadata !4437, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i32 %2, metadata !4438, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.value(metadata i32 %3, metadata !4439, metadata !DIExpression()), !dbg !4455
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4456
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4456
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4440, metadata !DIExpression()), !dbg !4455
  %7 = icmp eq i8* %1, null, !dbg !4457
  br i1 %7, label %8, label %10, !dbg !4459

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4460
  br label %59, !dbg !4462

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4463
  br i1 %11, label %12, label %13, !dbg !4465

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4466
  br label %59, !dbg !4468

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4469
  br i1 %14, label %59, label %15, !dbg !4471

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4472, !range !3868
  call void @llvm.dbg.value(metadata i32 %16, metadata !4441, metadata !DIExpression()), !dbg !4455
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %17, metadata !4442, metadata !DIExpression()), !dbg !4455
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4474
  %19 = ptrtoint i8* %1 to i32, !dbg !4475
  %20 = ptrtoint i8* %18 to i32, !dbg !4475
  %21 = sub i32 %19, %20, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %21, metadata !4443, metadata !DIExpression()), !dbg !4455
  %22 = add i32 %21, %3, !dbg !4476
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %23, metadata !4444, metadata !DIExpression()), !dbg !4455
  %24 = icmp eq i32 %2, 0, !dbg !4478
  br i1 %24, label %29, label %25, !dbg !4479

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4480
  %27 = and i32 %26, %19, !dbg !4481
  %28 = icmp eq i32 %27, 0, !dbg !4481
  br i1 %28, label %29, label %49, !dbg !4482

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4483
  %31 = icmp eq i32 %23, %30, !dbg !4484
  br i1 %31, label %59, label %32, !dbg !4485

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4486
  br i1 %33, label %34, label %36, !dbg !4487

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4488
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4490
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4491
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4492
  br label %59, !dbg !4493

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4494
  br i1 %37, label %49, label %38, !dbg !4495

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4496
  %40 = add i32 %39, %30, !dbg !4497
  %41 = icmp ult i32 %40, %23, !dbg !4498
  br i1 %41, label %49, label %42, !dbg !4499

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %43, metadata !4445, metadata !DIExpression()), !dbg !4501
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4502
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4503
  %45 = icmp ult i32 %43, %44, !dbg !4505
  br i1 %45, label %46, label %48, !dbg !4506

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4507
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4509
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4510
  br label %48, !dbg !4511

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4512
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4513
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4514
  call void @llvm.dbg.value(metadata i8* %50, metadata !4451, metadata !DIExpression()), !dbg !4455
  %51 = icmp eq i8* %50, null, !dbg !4515
  br i1 %51, label %59, label %52, !dbg !4516

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4517, !range !3961
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4518
  %55 = sub i32 %54, %21, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %55, metadata !4452, metadata !DIExpression()), !dbg !4520
  %56 = icmp ult i32 %55, %3, !dbg !4521
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4521
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4522
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4523
  br label %59, !dbg !4524

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4455
  ret i8* %60, !dbg !4525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4526 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4530, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32 %1, metadata !4531, metadata !DIExpression()), !dbg !4532
  %3 = shl i32 %1, 3, !dbg !4533
  %4 = add i32 %3, -4, !dbg !4534
  ret i32 %4, !dbg !4535
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4536 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4540, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i8* %1, metadata !4541, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 %2, metadata !4542, metadata !DIExpression()), !dbg !4551
  %4 = add i32 %2, -4, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %4, metadata !4542, metadata !DIExpression()), !dbg !4551
  %5 = ptrtoint i8* %1 to i32, !dbg !4553
  %6 = add i32 %5, 7, !dbg !4553
  %7 = and i32 %6, -8, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %7, metadata !4543, metadata !DIExpression()), !dbg !4551
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4554
  %9 = ptrtoint i8* %8 to i32, !dbg !4554
  %10 = and i32 %9, -8, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %10, metadata !4544, metadata !DIExpression()), !dbg !4551
  %11 = sub i32 %10, %7, !dbg !4555
  %12 = lshr exact i32 %11, 3, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %12, metadata !4545, metadata !DIExpression()), !dbg !4551
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4557
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4546, metadata !DIExpression()), !dbg !4551
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4558
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4559
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4560
  store i32 %12, i32* %15, align 8, !dbg !4561
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4562
  store i32 0, i32* %16, align 4, !dbg !4563
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4564
  call void @llvm.dbg.value(metadata i32 %17, metadata !4547, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4551
  %18 = shl i32 %17, 2, !dbg !4565
  %19 = add i32 %18, 20, !dbg !4566
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %20, metadata !4548, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4549, metadata !DIExpression()), !dbg !4568
  %21 = icmp slt i32 %17, 0, !dbg !4569
  br i1 %21, label %22, label %24, !dbg !4571

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4572
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4573
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4574
  %23 = sub i32 %12, %20, !dbg !4575
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4576
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4577
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4578
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4579
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4580
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4581
  ret void, !dbg !4582

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4549, metadata !DIExpression()), !dbg !4568
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4583
  store i32 0, i32* %26, align 4, !dbg !4585
  %27 = add nuw i32 %25, 1, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %27, metadata !4549, metadata !DIExpression()), !dbg !4568
  %28 = icmp eq i32 %25, %17, !dbg !4569
  br i1 %28, label %22, label %24, !dbg !4571, !llvm.loop !4587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4589 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4599, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %1, metadata !4600, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %2, metadata !4601, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %4, metadata !4603, metadata !DIExpression()), !dbg !4730
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4731
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4731
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4604, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.value(metadata i32 0, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i1 undef, metadata !4610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4730
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4733

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4733

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4734
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %30, metadata !4601, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %29, metadata !4608, metadata !DIExpression()), !dbg !4730
  %31 = load i8, i8* %30, align 1, !dbg !4735
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4733

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4735
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %34, metadata !4601, metadata !DIExpression()), !dbg !4730
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4736
  call void @llvm.dbg.value(metadata i32 %35, metadata !4612, metadata !DIExpression()), !dbg !4737
  %36 = icmp slt i32 %35, 0, !dbg !4738
  %37 = add i32 %29, 1, !dbg !4736
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %36, label %365, label %28, !llvm.loop !4740

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4742
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4743
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4662, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4665, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8* %30, metadata !4668, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i32 -1, metadata !4669, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i32 -1, metadata !4670, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8* null, metadata !4671, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8* %14, metadata !4672, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8 0, metadata !4673, metadata !DIExpression()), !dbg !4744
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4745
  call void @llvm.dbg.value(metadata i8* %39, metadata !4601, metadata !DIExpression()), !dbg !4730
  %40 = load i24, i24* %15, align 8, !dbg !4746
  %41 = and i24 %40, 256, !dbg !4746
  %42 = icmp eq i24 %41, 0, !dbg !4746
  br i1 %42, label %51, label %43, !dbg !4748

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %44, metadata !4602, metadata !DIExpression()), !dbg !4730
  %45 = bitcast i8* %27 to i32*, !dbg !4749
  %46 = load i32, i32* %45, align 4, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %46, metadata !4669, metadata !DIExpression()), !dbg !4744
  %47 = icmp slt i32 %46, 0, !dbg !4751
  br i1 %47, label %48, label %56, !dbg !4753

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4754
  store i24 %49, i24* %15, align 8, !dbg !4754
  %50 = sub nsw i32 0, %46, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %50, metadata !4669, metadata !DIExpression()), !dbg !4744
  br label %56, !dbg !4757

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4758
  %53 = icmp eq i24 %52, 0, !dbg !4758
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4760
  br label %56, !dbg !4760

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4761
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4744
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %58, metadata !4669, metadata !DIExpression()), !dbg !4744
  %60 = and i24 %57, 1024, !dbg !4761
  %61 = icmp eq i24 %60, 0, !dbg !4761
  br i1 %61, label %69, label %62, !dbg !4762

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4763
  call void @llvm.dbg.value(metadata i8* %63, metadata !4602, metadata !DIExpression()), !dbg !4730
  %64 = bitcast i8* %59 to i32*, !dbg !4763
  %65 = load i32, i32* %64, align 4, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %65, metadata !4674, metadata !DIExpression()), !dbg !4764
  %66 = icmp slt i32 %65, 0, !dbg !4765
  br i1 %66, label %67, label %74, !dbg !4767

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4768
  store i24 %68, i24* %15, align 8, !dbg !4768
  br label %74, !dbg !4770

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4771
  %71 = icmp eq i24 %70, 0, !dbg !4771
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4773
  br label %74, !dbg !4773

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4774
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4744
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4744
  call void @llvm.dbg.value(metadata i8* %77, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %76, metadata !4670, metadata !DIExpression()), !dbg !4744
  store i32 0, i32* %16, align 4, !dbg !4775
  store i32 0, i32* %17, align 8, !dbg !4776
  %78 = lshr i24 %75, 16, !dbg !4774
  call void @llvm.dbg.value(metadata i24 %78, metadata !4677, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4744
  %79 = lshr i24 %75, 11, !dbg !4777
  %80 = and i24 %79, 15, !dbg !4777
  %81 = zext i24 %80 to i32, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %81, metadata !4678, metadata !DIExpression()), !dbg !4744
  %82 = trunc i24 %78 to i3, !dbg !4778
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4778

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4779

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %85, metadata !4602, metadata !DIExpression()), !dbg !4730
  %86 = bitcast i8* %77 to i32*, !dbg !4782
  %87 = load i32, i32* %86, align 4, !dbg !4782
  %88 = sext i32 %87 to i64, !dbg !4782
  store i64 %88, i64* %20, align 8, !dbg !4784
  br label %115, !dbg !4785

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %90, metadata !4602, metadata !DIExpression()), !dbg !4730
  %91 = bitcast i8* %77 to i32*, !dbg !4786
  %92 = load i32, i32* %91, align 4, !dbg !4786
  %93 = sext i32 %92 to i64, !dbg !4786
  store i64 %93, i64* %20, align 8, !dbg !4789
  br label %115, !dbg !4790

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4791
  %96 = add i32 %95, 7, !dbg !4791
  %97 = and i32 %96, -8, !dbg !4791
  %98 = inttoptr i32 %97 to i8*, !dbg !4791
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %99, metadata !4602, metadata !DIExpression()), !dbg !4730
  %100 = inttoptr i32 %97 to i64*, !dbg !4791
  %101 = load i64, i64* %100, align 8, !dbg !4791
  store i64 %101, i64* %20, align 8, !dbg !4792
  br label %115, !dbg !4793

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4794
  %104 = add i32 %103, 7, !dbg !4794
  %105 = and i32 %104, -8, !dbg !4794
  %106 = inttoptr i32 %105 to i8*, !dbg !4794
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %107, metadata !4602, metadata !DIExpression()), !dbg !4730
  %108 = inttoptr i32 %105 to i64*, !dbg !4794
  %109 = load i64, i64* %108, align 8, !dbg !4794
  store i64 %109, i64* %20, align 8, !dbg !4795
  br label %115, !dbg !4796

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4797
  call void @llvm.dbg.value(metadata i8* %111, metadata !4602, metadata !DIExpression()), !dbg !4730
  %112 = bitcast i8* %77 to i32*, !dbg !4797
  %113 = load i32, i32* %112, align 4, !dbg !4797
  %114 = sext i32 %113 to i64, !dbg !4798
  store i64 %114, i64* %20, align 8, !dbg !4799
  br label %115, !dbg !4800

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4801
  call void @llvm.dbg.value(metadata i8* %117, metadata !4602, metadata !DIExpression()), !dbg !4730
  %118 = trunc i24 %79 to i4, !dbg !4802
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4802

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4803
  %121 = ashr exact i64 %120, 56, !dbg !4803
  store i64 %121, i64* %20, align 8, !dbg !4806
  br label %177, !dbg !4807

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4808
  %124 = ashr exact i64 %123, 48, !dbg !4808
  store i64 %124, i64* %20, align 8, !dbg !4811
  br label %177, !dbg !4812

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4813

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %127, metadata !4602, metadata !DIExpression()), !dbg !4730
  %128 = bitcast i8* %77 to i32*, !dbg !4816
  %129 = load i32, i32* %128, align 4, !dbg !4816
  %130 = zext i32 %129 to i64, !dbg !4816
  store i64 %130, i64* %20, align 8, !dbg !4818
  br label %157, !dbg !4819

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %132, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %132, metadata !4602, metadata !DIExpression()), !dbg !4730
  %133 = bitcast i8* %77 to i32*, !dbg !4820
  %134 = load i32, i32* %133, align 4, !dbg !4820
  %135 = zext i32 %134 to i64, !dbg !4820
  store i64 %135, i64* %20, align 8, !dbg !4820
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4822
  %138 = add i32 %137, 7, !dbg !4822
  %139 = and i32 %138, -8, !dbg !4822
  %140 = inttoptr i32 %139 to i8*, !dbg !4822
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4822
  call void @llvm.dbg.value(metadata i8* %141, metadata !4602, metadata !DIExpression()), !dbg !4730
  %142 = inttoptr i32 %139 to i64*, !dbg !4822
  %143 = load i64, i64* %142, align 8, !dbg !4822
  store i64 %143, i64* %20, align 8, !dbg !4823
  br label %157, !dbg !4824

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4825
  %146 = add i32 %145, 7, !dbg !4825
  %147 = and i32 %146, -8, !dbg !4825
  %148 = inttoptr i32 %147 to i8*, !dbg !4825
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4825
  call void @llvm.dbg.value(metadata i8* %149, metadata !4602, metadata !DIExpression()), !dbg !4730
  %150 = inttoptr i32 %147 to i64*, !dbg !4825
  %151 = load i64, i64* %150, align 8, !dbg !4825
  store i64 %151, i64* %20, align 8, !dbg !4826
  br label %157, !dbg !4827

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %153, metadata !4602, metadata !DIExpression()), !dbg !4730
  %154 = bitcast i8* %77 to i32*, !dbg !4828
  %155 = load i32, i32* %154, align 4, !dbg !4828
  %156 = zext i32 %155 to i64, !dbg !4829
  store i64 %156, i64* %20, align 8, !dbg !4830
  br label %157, !dbg !4831

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4832
  call void @llvm.dbg.value(metadata i8* %159, metadata !4602, metadata !DIExpression()), !dbg !4730
  %160 = trunc i24 %79 to i4, !dbg !4833
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4833

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4834
  store i64 %162, i64* %20, align 8, !dbg !4837
  br label %177, !dbg !4838

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4839
  store i64 %164, i64* %20, align 8, !dbg !4842
  br label %177, !dbg !4843

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4844
  %167 = add i32 %166, 7, !dbg !4844
  %168 = and i32 %167, -8, !dbg !4844
  %169 = inttoptr i32 %168 to i8*, !dbg !4844
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %170, metadata !4602, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %170, metadata !4602, metadata !DIExpression()), !dbg !4730
  %171 = inttoptr i32 %168 to double*, !dbg !4844
  %172 = load double, double* %171, align 8, !dbg !4844
  store double %172, double* %19, align 8, !dbg !4844
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %174, metadata !4602, metadata !DIExpression()), !dbg !4730
  %175 = bitcast i8* %77 to i8**, !dbg !4848
  %176 = load i8*, i8** %175, align 4, !dbg !4848
  store i8* %176, i8** %18, align 8, !dbg !4851
  br label %177, !dbg !4852

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4744
  call void @llvm.dbg.value(metadata i8* %178, metadata !4602, metadata !DIExpression()), !dbg !4730
  %179 = and i24 %75, 3, !dbg !4853
  %180 = icmp eq i24 %179, 0, !dbg !4853
  br i1 %180, label %185, label %181, !dbg !4853

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %182, metadata !4679, metadata !DIExpression()), !dbg !4855
  %183 = icmp slt i32 %182, 0, !dbg !4856
  %184 = add i32 %182, %29, !dbg !4854
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4858
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4859

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %188, metadata !4683, metadata !DIExpression()), !dbg !4861
  %189 = icmp slt i32 %188, 0, !dbg !4862
  %190 = add i32 %29, 1, !dbg !4860
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %192, metadata !4671, metadata !DIExpression()), !dbg !4744
  %193 = icmp sgt i32 %76, -1, !dbg !4865
  br i1 %193, label %194, label %196, !dbg !4867

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %195, metadata !4686, metadata !DIExpression()), !dbg !4870
  br label %241, !dbg !4871

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %197, metadata !4686, metadata !DIExpression()), !dbg !4870
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4671, metadata !DIExpression()), !dbg !4744
  %199 = load i64, i64* %20, align 8, !dbg !4874
  %200 = trunc i64 %199 to i8, !dbg !4875
  store i8 %200, i8* %10, align 1, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %23, metadata !4672, metadata !DIExpression()), !dbg !4744
  br label %245, !dbg !4877

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4878
  %203 = icmp eq i24 %202, 0, !dbg !4878
  %204 = trunc i24 %75 to i8, !dbg !4880
  %205 = shl i8 %204, 1, !dbg !4880
  %206 = and i8 %205, 32, !dbg !4880
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4880
  call void @llvm.dbg.value(metadata i8 %207, metadata !4673, metadata !DIExpression()), !dbg !4744
  %208 = load i64, i64* %20, align 8, !dbg !4881
  call void @llvm.dbg.value(metadata i64 %208, metadata !4609, metadata !DIExpression()), !dbg !4730
  %209 = icmp slt i64 %208, 0, !dbg !4882
  br i1 %209, label %210, label %212, !dbg !4884

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4673, metadata !DIExpression()), !dbg !4744
  %211 = sub nsw i64 0, %208, !dbg !4885
  store i64 %211, i64* %20, align 8, !dbg !4887
  br label %212, !dbg !4888

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4744
  call void @llvm.dbg.value(metadata i8 %213, metadata !4673, metadata !DIExpression()), !dbg !4744
  %214 = load i64, i64* %20, align 8, !dbg !4889
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %215, metadata !4671, metadata !DIExpression()), !dbg !4744
  br label %216, !dbg !4891

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4892
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4893
  call void @llvm.dbg.value(metadata i8* %218, metadata !4671, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8 %217, metadata !4673, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.label(metadata !4729), !dbg !4894
  %219 = icmp sgt i32 %76, -1, !dbg !4895
  br i1 %219, label %222, label %220, !dbg !4896

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4897
  br label %245, !dbg !4896

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4899
  %224 = sub i32 %22, %223, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %224, metadata !4688, metadata !DIExpression()), !dbg !4900
  %225 = load i24, i24* %15, align 8, !dbg !4901
  %226 = and i24 %225, -65, !dbg !4901
  store i24 %226, i24* %15, align 8, !dbg !4901
  %227 = icmp ugt i32 %76, %224, !dbg !4902
  br i1 %227, label %228, label %245, !dbg !4904

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4905
  store i32 %229, i32* %16, align 4, !dbg !4907
  br label %245, !dbg !4908

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4909
  %232 = icmp eq i8* %231, null, !dbg !4911
  br i1 %232, label %245, label %233, !dbg !4912

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4913
  %235 = zext i32 %234 to i64, !dbg !4913
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4915
  call void @llvm.dbg.value(metadata i8* %236, metadata !4671, metadata !DIExpression()), !dbg !4744
  %237 = load i24, i24* %15, align 8, !dbg !4916
  %238 = or i24 %237, 1048576, !dbg !4916
  store i24 %238, i24* %15, align 8, !dbg !4916
  store i8 120, i8* %21, align 1, !dbg !4917
  br label %216, !dbg !4918

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4919
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4922
  br label %363, !dbg !4923

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4924
  call void @llvm.dbg.value(metadata i32 %242, metadata !4686, metadata !DIExpression()), !dbg !4870
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4925
  call void @llvm.dbg.value(metadata i32 -1, metadata !4670, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i32 %29, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %192, metadata !4671, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8* %243, metadata !4672, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8 0, metadata !4673, metadata !DIExpression()), !dbg !4744
  %244 = icmp eq i8* %192, null, !dbg !4926
  br i1 %244, label %363, label %245, !dbg !4928, !llvm.loop !4740

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4897
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata i32 0, metadata !4692, metadata !DIExpression()), !dbg !4744
  %250 = zext i8 %249 to i32, !dbg !4929
  %251 = icmp eq i8 %249, 0, !dbg !4931
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata i32 undef, metadata !4691, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata i32 undef, metadata !4691, metadata !DIExpression()), !dbg !4744
  %252 = icmp sgt i32 %58, 0, !dbg !4932
  br i1 %252, label %253, label %302, !dbg !4933

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4897
  %255 = icmp eq i24 %254, 0, !dbg !4897
  %256 = ptrtoint i8* %248 to i32, !dbg !4934
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  %257 = ptrtoint i8* %247 to i32, !dbg !4934
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  %258 = xor i1 %251, true, !dbg !4935
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  %259 = sext i1 %258 to i32, !dbg !4935
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  %260 = lshr i24 %246, 19, !dbg !4936
  %261 = and i24 %260, 1, !dbg !4936
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4936
  %263 = zext i24 %262 to i32, !dbg !4936
  %264 = add i32 %257, %259, !dbg !4936
  %265 = add i32 %256, %263, !dbg !4936
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  %266 = and i24 %246, 4194304, !dbg !4937
  %267 = icmp eq i24 %266, 0, !dbg !4937
  %268 = load i32, i32* %16, align 4, !dbg !4939
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4744
  call void @llvm.dbg.value(metadata i32 undef, metadata !4691, metadata !DIExpression()), !dbg !4744
  %269 = load i32, i32* %17, align 8, !dbg !4940
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4940
  call void @llvm.dbg.value(metadata i32 undef, metadata !4691, metadata !DIExpression()), !dbg !4744
  %271 = add i32 %264, %58, !dbg !4940
  %272 = add i32 %265, %268, !dbg !4940
  %273 = add i32 %272, %270, !dbg !4941
  %274 = sub i32 %271, %273, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %274, metadata !4669, metadata !DIExpression()), !dbg !4744
  %275 = and i24 %246, 4, !dbg !4942
  %276 = icmp eq i24 %275, 0, !dbg !4942
  br i1 %276, label %277, label %302, !dbg !4943

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4693, metadata !DIExpression()), !dbg !4944
  %278 = and i24 %246, 64, !dbg !4945
  %279 = icmp eq i24 %278, 0, !dbg !4945
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4946
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4946
  %282 = select i1 %279, i32 32, i32 48, !dbg !4946
  br i1 %280, label %287, label %283, !dbg !4946

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %284, metadata !4698, metadata !DIExpression()), !dbg !4948
  %285 = icmp slt i32 %284, 0, !dbg !4949
  %286 = add i32 %29, 1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4744
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %290, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 undef, metadata !4693, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8 %288, metadata !4673, metadata !DIExpression()), !dbg !4744
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4951
  %292 = add i32 %291, -1, !dbg !4951
  br label %293, !dbg !4951

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4952
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %295, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %294, metadata !4669, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i32 %294, metadata !4669, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4744
  %296 = icmp sgt i32 %294, 0, !dbg !4953
  br i1 %296, label %297, label %302, !dbg !4951

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %298, metadata !4669, metadata !DIExpression()), !dbg !4744
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %299, metadata !4704, metadata !DIExpression()), !dbg !4956
  %300 = icmp slt i32 %299, 0, !dbg !4957
  %301 = add i32 %295, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %300, label %361, label %293, !llvm.loop !4959

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4744
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4744
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %305, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %304, metadata !4669, metadata !DIExpression()), !dbg !4744
  call void @llvm.dbg.value(metadata i8 %303, metadata !4673, metadata !DIExpression()), !dbg !4744
  %306 = icmp eq i8 %303, 0, !dbg !4961
  br i1 %306, label %312, label %307, !dbg !4962

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4963
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %309, metadata !4707, metadata !DIExpression()), !dbg !4965
  %310 = icmp slt i32 %309, 0, !dbg !4966
  %311 = add i32 %305, 1, !dbg !4964
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %313, metadata !4608, metadata !DIExpression()), !dbg !4730
  %314 = lshr i24 %246, 20, !dbg !4968
  %315 = lshr i24 %246, 19, !dbg !4969
  %316 = or i24 %314, %315, !dbg !4970
  %317 = and i24 %316, 1, !dbg !4970
  %318 = icmp eq i24 %317, 0, !dbg !4970
  br i1 %318, label %323, label %319, !dbg !4971

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %320, metadata !4711, metadata !DIExpression()), !dbg !4973
  %321 = icmp slt i32 %320, 0, !dbg !4974
  %322 = add i32 %313, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %324, metadata !4608, metadata !DIExpression()), !dbg !4730
  %325 = and i24 %246, 1048576, !dbg !4976
  %326 = icmp eq i24 %325, 0, !dbg !4976
  br i1 %326, label %333, label %327, !dbg !4977

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4978
  %329 = zext i8 %328 to i32, !dbg !4978
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %330, metadata !4717, metadata !DIExpression()), !dbg !4979
  %331 = icmp slt i32 %330, 0, !dbg !4980
  %332 = add i32 %324, 1, !dbg !4978
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %334, metadata !4608, metadata !DIExpression()), !dbg !4730
  %335 = load i32, i32* %16, align 4, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %335, metadata !4692, metadata !DIExpression()), !dbg !4744
  br label %336, !dbg !4983

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4984
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %338, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %337, metadata !4692, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4744
  %339 = icmp sgt i32 %337, 0, !dbg !4985
  br i1 %339, label %340, label %345, !dbg !4983

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %341, metadata !4692, metadata !DIExpression()), !dbg !4744
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %342, metadata !4721, metadata !DIExpression()), !dbg !4988
  %343 = icmp slt i32 %342, 0, !dbg !4989
  %344 = add i32 %338, 1, !dbg !4987
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %343, label %361, label %336, !llvm.loop !4991

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %346, metadata !4724, metadata !DIExpression()), !dbg !4994
  %347 = icmp slt i32 %346, 0, !dbg !4995
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %349, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %304, metadata !4669, metadata !DIExpression()), !dbg !4744
  %350 = icmp sgt i32 %304, 0, !dbg !4997
  br i1 %350, label %351, label %363, !dbg !4998

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4998
  %353 = add i32 %352, %338, !dbg !4998
  br label %354, !dbg !4998

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %355, metadata !4669, metadata !DIExpression()), !dbg !4744
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %356, metadata !4726, metadata !DIExpression()), !dbg !5000
  %357 = icmp slt i32 %356, 0, !dbg !5001
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5003
  call void @llvm.dbg.value(metadata i32 undef, metadata !4608, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %359, metadata !4669, metadata !DIExpression()), !dbg !4744
  %360 = icmp sgt i32 %355, 1, !dbg !4997
  br i1 %360, label %354, label %363, !dbg !4998, !llvm.loop !5004

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4741
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %364, metadata !4608, metadata !DIExpression()), !dbg !4730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4741
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4730
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5006
  ret i32 %366, !dbg !5006
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5007 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5013
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5014
  store i24 0, i24* %3, align 4, !dbg !5014
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5014
  store i8 0, i8* %4, align 1, !dbg !5014
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5014
  store i32 0, i32* %5, align 4, !dbg !5014
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5014
  store i32 0, i32* %6, align 4, !dbg !5014
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %7, metadata !5012, metadata !DIExpression()), !dbg !5013
  %8 = load i8, i8* %7, align 1, !dbg !5016
  %9 = icmp eq i8 %8, 37, !dbg !5018
  br i1 %9, label %10, label %12, !dbg !5019

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %11, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i8 37, i8* %4, align 1, !dbg !5022
  br label %18, !dbg !5023

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %13, metadata !5012, metadata !DIExpression()), !dbg !5013
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %14, metadata !5012, metadata !DIExpression()), !dbg !5013
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %15, metadata !5012, metadata !DIExpression()), !dbg !5013
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %16, metadata !5012, metadata !DIExpression()), !dbg !5013
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %17, metadata !5012, metadata !DIExpression()), !dbg !5013
  br label %18, !dbg !5029

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5013
  ret i8* %19, !dbg !5030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5031 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5035, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %1, metadata !5036, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %2, metadata !5037, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %3, metadata !5038, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i32 0, metadata !5039, metadata !DIExpression()), !dbg !5042
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5043

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5044
  call void @llvm.dbg.value(metadata i32 %9, metadata !5039, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.value(metadata i8* %8, metadata !5037, metadata !DIExpression()), !dbg !5042
  %10 = icmp ult i8* %8, %3, !dbg !5045
  br i1 %10, label %11, label %13, !dbg !5046

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5047
  br label %17, !dbg !5046

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5048

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5049
  %16 = icmp eq i8 %15, 0, !dbg !5048
  br i1 %16, label %24, label %17, !dbg !5043

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5047
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %19, metadata !5037, metadata !DIExpression()), !dbg !5042
  %20 = zext i8 %18 to i32, !dbg !5051
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %21, metadata !5040, metadata !DIExpression()), !dbg !5053
  %22 = icmp slt i32 %21, 0, !dbg !5054
  %23 = add i32 %9, 1, !dbg !5056
  call void @llvm.dbg.value(metadata i32 undef, metadata !5039, metadata !DIExpression()), !dbg !5042
  br i1 %22, label %24, label %7, !llvm.loop !5057

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5042
  ret i32 %25, !dbg !5059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5060 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5064, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5065, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.value(metadata i8* %2, metadata !5066, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.value(metadata i8* %3, metadata !5067, metadata !DIExpression()), !dbg !5074
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5075
  %6 = load i8, i8* %5, align 1, !dbg !5075
  %7 = zext i8 %6 to i32, !dbg !5076
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5077
  %9 = icmp eq i32 %8, 0, !dbg !5077
  call void @llvm.dbg.value(metadata i1 %9, metadata !5068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5074
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %10, metadata !5069, metadata !DIExpression()), !dbg !5074
  %11 = ptrtoint i8* %3 to i32, !dbg !5079
  %12 = ptrtoint i8* %2 to i32, !dbg !5079
  %13 = sub i32 %11, %12, !dbg !5079
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %14, metadata !5071, metadata !DIExpression()), !dbg !5074
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5081

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5074
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5064, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.value(metadata i8* %18, metadata !5071, metadata !DIExpression()), !dbg !5074
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5082
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5083
  call void @llvm.dbg.value(metadata i32 %25, metadata !5072, metadata !DIExpression()), !dbg !5084
  %26 = icmp ult i32 %25, 10, !dbg !5085
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5086
  %28 = add i32 %27, %25, !dbg !5084
  %29 = trunc i32 %28 to i8, !dbg !5086
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5087
  call void @llvm.dbg.value(metadata i8* %30, metadata !5071, metadata !DIExpression()), !dbg !5074
  store i8 %29, i8* %30, align 1, !dbg !5088
  call void @llvm.dbg.value(metadata i64 %22, metadata !5064, metadata !DIExpression()), !dbg !5074
  %31 = icmp uge i64 %19, %15, !dbg !5089
  %32 = icmp ugt i8* %30, %2, !dbg !5090
  %33 = and i1 %31, %32, !dbg !5090
  br i1 %33, label %17, label %34, !dbg !5091, !llvm.loop !5092

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5094
  %36 = load i24, i24* %35, align 4, !dbg !5094
  %37 = and i24 %36, 32, !dbg !5094
  %38 = icmp eq i24 %37, 0, !dbg !5094
  br i1 %38, label %44, label %39, !dbg !5096

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5097

40:                                               ; preds = %39
  br label %41, !dbg !5099

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5103
  store i24 %43, i24* %35, align 4, !dbg !5103
  br label %44, !dbg !5104

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5104
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5105 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5111, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i8* %1, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %2, metadata !5113, metadata !DIExpression()), !dbg !5114
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5115
  %5 = load i24, i24* %4, align 4, !dbg !5115
  %6 = lshr i24 %5, 11, !dbg !5115
  %7 = and i24 %6, 15, !dbg !5115
  %8 = zext i24 %7 to i32, !dbg !5115
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5116

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5117
  store i32 %2, i32* %10, align 4, !dbg !5119
  br label %28, !dbg !5120

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5121
  store i8 %12, i8* %1, align 1, !dbg !5122
  br label %28, !dbg !5123

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5124
  %15 = bitcast i8* %1 to i16*, !dbg !5125
  store i16 %14, i16* %15, align 2, !dbg !5126
  br label %28, !dbg !5127

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5128
  store i32 %2, i32* %17, align 4, !dbg !5129
  br label %28, !dbg !5130

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5131
  %20 = bitcast i8* %1 to i64*, !dbg !5132
  store i64 %19, i64* %20, align 8, !dbg !5133
  br label %28, !dbg !5134

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5135
  %23 = bitcast i8* %1 to i64*, !dbg !5136
  store i64 %22, i64* %23, align 8, !dbg !5137
  br label %28, !dbg !5138

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5139
  store i32 %2, i32* %25, align 4, !dbg !5140
  br label %28, !dbg !5141

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5142
  store i32 %2, i32* %27, align 4, !dbg !5143
  br label %28, !dbg !5144

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5145
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5149, metadata !DIExpression()), !dbg !5150
  %2 = add i32 %0, -65, !dbg !5151
  %3 = icmp ult i32 %2, 26, !dbg !5152
  %4 = zext i1 %3 to i32, !dbg !5152
  ret i32 %4, !dbg !5153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5154 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5158, metadata !DIExpression()), !dbg !5159
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5160

2:                                                ; preds = %1
  br label %4, !dbg !5161

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5163

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5164
  ret i32 %5, !dbg !5165
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5166 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5168, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %1, metadata !5169, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8 1, metadata !5170, metadata !DIExpression()), !dbg !5171
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5172

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %5, metadata !5169, metadata !DIExpression()), !dbg !5171
  %6 = load i8, i8* %5, align 1, !dbg !5173
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5175

7:                                                ; preds = %4
  br label %11, !dbg !5176

8:                                                ; preds = %4
  br label %11, !dbg !5178

9:                                                ; preds = %4
  br label %11, !dbg !5179

10:                                               ; preds = %4
  br label %11, !dbg !5180

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5181
  %14 = or i24 %13, %12, !dbg !5181
  store i24 %14, i24* %3, align 4, !dbg !5181
  call void @llvm.dbg.value(metadata i8 poison, metadata !5170, metadata !DIExpression()), !dbg !5171
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5169, metadata !DIExpression()), !dbg !5171
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %15, metadata !5169, metadata !DIExpression()), !dbg !5171
  %17 = load i24, i24* %3, align 4, !dbg !5182
  %18 = and i24 %17, 68, !dbg !5184
  %19 = icmp eq i24 %18, 68, !dbg !5184
  br i1 %19, label %20, label %22, !dbg !5184

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5185
  store i24 %21, i24* %3, align 4, !dbg !5185
  br label %22, !dbg !5187

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5189 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5191, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %1, metadata !5192, metadata !DIExpression()), !dbg !5195
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5196
  %5 = load i24, i24* %4, align 4, !dbg !5197
  %6 = or i24 %5, 128, !dbg !5197
  store i24 %6, i24* %4, align 4, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %1, metadata !5192, metadata !DIExpression()), !dbg !5195
  %7 = load i8, i8* %1, align 1, !dbg !5198
  %8 = icmp eq i8 %7, 42, !dbg !5200
  br i1 %8, label %9, label %12, !dbg !5201

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5202
  store i24 %10, i24* %4, align 4, !dbg !5202
  call void @llvm.dbg.value(metadata i8* %1, metadata !5192, metadata !DIExpression()), !dbg !5195
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %11, metadata !5192, metadata !DIExpression()), !dbg !5195
  store i8* %11, i8** %3, align 4, !dbg !5204
  br label %29, !dbg !5205

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8** %3, metadata !5192, metadata !DIExpression(DW_OP_deref)), !dbg !5195
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5206
  call void @llvm.dbg.value(metadata i32 %13, metadata !5194, metadata !DIExpression()), !dbg !5195
  %14 = load i8*, i8** %3, align 4, !dbg !5207
  call void @llvm.dbg.value(metadata i8* %14, metadata !5192, metadata !DIExpression()), !dbg !5195
  %15 = icmp eq i8* %14, %1, !dbg !5209
  br i1 %15, label %29, label %16, !dbg !5210

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5211
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5213
  store i32 %13, i32* %18, align 4, !dbg !5214
  %19 = lshr i32 %13, 31, !dbg !5215
  %20 = lshr i24 %17, 1, !dbg !5216
  %21 = and i24 %20, 1, !dbg !5216
  %22 = zext i24 %21 to i32, !dbg !5216
  %23 = or i32 %19, %22, !dbg !5216
  %24 = trunc i32 %23 to i24, !dbg !5216
  %25 = shl nuw nsw i24 %24, 1, !dbg !5216
  %26 = and i24 %17, -131, !dbg !5216
  %27 = or i24 %26, 128, !dbg !5216
  %28 = or i24 %25, %27, !dbg !5216
  store i24 %28, i24* %4, align 4, !dbg !5216
  br label %29, !dbg !5217

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5195
  ret i8* %30, !dbg !5218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5219 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5224
  %4 = load i8, i8* %1, align 1, !dbg !5225
  %5 = icmp eq i8 %4, 46, !dbg !5226
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5227
  %7 = load i24, i24* %6, align 4, !dbg !5228
  %8 = select i1 %5, i24 512, i24 0, !dbg !5228
  %9 = and i24 %7, -513, !dbg !5228
  %10 = or i24 %9, %8, !dbg !5228
  store i24 %10, i24* %6, align 4, !dbg !5228
  br i1 %5, label %11, label %32, !dbg !5229

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5224
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %12, metadata !5222, metadata !DIExpression()), !dbg !5224
  store i8* %12, i8** %3, align 4, !dbg !5230
  %13 = load i8, i8* %12, align 1, !dbg !5231
  %14 = icmp eq i8 %13, 42, !dbg !5233
  br i1 %14, label %15, label %18, !dbg !5234

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5235
  store i24 %16, i24* %6, align 4, !dbg !5235
  call void @llvm.dbg.value(metadata i8* %12, metadata !5222, metadata !DIExpression()), !dbg !5224
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %17, metadata !5222, metadata !DIExpression()), !dbg !5224
  store i8* %17, i8** %3, align 4, !dbg !5237
  br label %32, !dbg !5238

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5222, metadata !DIExpression(DW_OP_deref)), !dbg !5224
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %19, metadata !5223, metadata !DIExpression()), !dbg !5224
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5240
  store i32 %19, i32* %20, align 4, !dbg !5241
  %21 = lshr i32 %19, 31, !dbg !5242
  %22 = load i24, i24* %6, align 4, !dbg !5243
  %23 = lshr i24 %22, 1, !dbg !5243
  %24 = and i24 %23, 1, !dbg !5243
  %25 = zext i24 %24 to i32, !dbg !5243
  %26 = or i32 %21, %25, !dbg !5243
  %27 = trunc i32 %26 to i24, !dbg !5243
  %28 = shl nuw nsw i24 %27, 1, !dbg !5243
  %29 = and i24 %22, -3, !dbg !5243
  %30 = or i24 %28, %29, !dbg !5243
  store i24 %30, i24* %6, align 4, !dbg !5243
  %31 = load i8*, i8** %3, align 4, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %31, metadata !5222, metadata !DIExpression()), !dbg !5224
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5224
  ret i8* %33, !dbg !5245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5246 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5249, metadata !DIExpression()), !dbg !5250
  %3 = load i8, i8* %1, align 1, !dbg !5251
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5252

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5253
  call void @llvm.dbg.value(metadata i8* %5, metadata !5249, metadata !DIExpression()), !dbg !5250
  %6 = load i8, i8* %5, align 1, !dbg !5256
  %7 = icmp eq i8 %6, 104, !dbg !5257
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5258
  %9 = load i24, i24* %8, align 4, !dbg !5258
  %10 = and i24 %9, -30721, !dbg !5258
  br i1 %7, label %11, label %14, !dbg !5259

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5260
  store i24 %12, i24* %8, align 4, !dbg !5260
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %13, metadata !5249, metadata !DIExpression()), !dbg !5250
  br label %56, !dbg !5263

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5264
  store i24 %15, i24* %8, align 4, !dbg !5264
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %17, metadata !5249, metadata !DIExpression()), !dbg !5250
  %18 = load i8, i8* %17, align 1, !dbg !5268
  %19 = icmp eq i8 %18, 108, !dbg !5269
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5270
  %21 = load i24, i24* %20, align 4, !dbg !5270
  %22 = and i24 %21, -30721, !dbg !5270
  br i1 %19, label %23, label %26, !dbg !5271

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5272
  store i24 %24, i24* %20, align 4, !dbg !5272
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %25, metadata !5249, metadata !DIExpression()), !dbg !5250
  br label %56, !dbg !5275

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5276
  store i24 %27, i24* %20, align 4, !dbg !5276
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5278
  %30 = load i24, i24* %29, align 4, !dbg !5279
  %31 = and i24 %30, -30721, !dbg !5279
  %32 = or i24 %31, 10240, !dbg !5279
  store i24 %32, i24* %29, align 4, !dbg !5279
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5280
  call void @llvm.dbg.value(metadata i8* %33, metadata !5249, metadata !DIExpression()), !dbg !5250
  br label %56, !dbg !5281

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5282
  %36 = load i24, i24* %35, align 4, !dbg !5283
  %37 = and i24 %36, -30721, !dbg !5283
  %38 = or i24 %37, 12288, !dbg !5283
  store i24 %38, i24* %35, align 4, !dbg !5283
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5284
  call void @llvm.dbg.value(metadata i8* %39, metadata !5249, metadata !DIExpression()), !dbg !5250
  br label %56, !dbg !5285

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5286
  %42 = load i24, i24* %41, align 4, !dbg !5287
  %43 = and i24 %42, -30721, !dbg !5287
  %44 = or i24 %43, 14336, !dbg !5287
  store i24 %44, i24* %41, align 4, !dbg !5287
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5288
  call void @llvm.dbg.value(metadata i8* %45, metadata !5249, metadata !DIExpression()), !dbg !5250
  br label %56, !dbg !5289

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5290
  %48 = load i24, i24* %47, align 4, !dbg !5291
  %49 = and i24 %48, -30723, !dbg !5291
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %50, metadata !5249, metadata !DIExpression()), !dbg !5250
  %51 = or i24 %49, 16386, !dbg !5293
  store i24 %51, i24* %47, align 4, !dbg !5293
  br label %56, !dbg !5294

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %54 = load i24, i24* %53, align 4, !dbg !5296
  %55 = and i24 %54, -30721, !dbg !5296
  store i24 %55, i24* %53, align 4, !dbg !5296
  br label %56, !dbg !5297

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5249, metadata !DIExpression()), !dbg !5250
  ret i8* %57, !dbg !5298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5299 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5301, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8* %1, metadata !5302, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8 0, metadata !5303, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8* %1, metadata !5302, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5306
  %3 = load i8, i8* %1, align 1, !dbg !5307
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5308
  store i8 %3, i8* %4, align 1, !dbg !5309
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5310

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5311

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %9 = load i24, i24* %8, align 4, !dbg !5312
  %10 = and i24 %9, -458753, !dbg !5312
  %11 = or i24 %10, %7, !dbg !5312
  call void @llvm.dbg.label(metadata !5304), !dbg !5313
  %12 = and i24 %9, 30720, !dbg !5314
  %13 = icmp eq i24 %12, 16384, !dbg !5314
  %14 = zext i1 %13 to i24, !dbg !5316
  %15 = or i24 %11, %14, !dbg !5316
  %16 = icmp eq i8 %3, 99, !dbg !5317
  br i1 %16, label %17, label %43, !dbg !5319

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5320
  %19 = icmp ne i24 %18, 0, !dbg !5320
  call void @llvm.dbg.value(metadata i1 %19, metadata !5303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5306
  br label %43, !dbg !5322

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5323
  %22 = load i24, i24* %21, align 4, !dbg !5324
  %23 = and i24 %22, -458753, !dbg !5324
  %24 = or i24 %23, 262144, !dbg !5324
  call void @llvm.dbg.value(metadata i8 1, metadata !5303, metadata !DIExpression()), !dbg !5306
  br label %43, !dbg !5325

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5328
  %27 = load i24, i24* %26, align 4, !dbg !5329
  %28 = and i24 %27, -458753, !dbg !5329
  %29 = or i24 %28, 196608, !dbg !5329
  %30 = and i24 %27, 30720, !dbg !5330
  %31 = icmp eq i24 %30, 16384, !dbg !5330
  br label %43, !dbg !5332

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5333
  %34 = load i24, i24* %33, align 4, !dbg !5334
  %35 = and i24 %34, -458753, !dbg !5334
  %36 = or i24 %35, 196608, !dbg !5334
  %37 = and i24 %34, 30720, !dbg !5335
  %38 = icmp ne i24 %37, 0, !dbg !5335
  br label %43, !dbg !5337

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5338
  %41 = load i24, i24* %40, align 4, !dbg !5339
  %42 = or i24 %41, 1, !dbg !5339
  br label %43, !dbg !5340

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5341
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5342
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5343
  call void @llvm.dbg.value(metadata i8* %48, metadata !5302, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.value(metadata i8 poison, metadata !5303, metadata !DIExpression()), !dbg !5306
  %49 = lshr i24 %44, 1, !dbg !5341
  %50 = and i24 %49, 1, !dbg !5341
  %51 = zext i24 %50 to i32, !dbg !5341
  %52 = or i32 %51, %47, !dbg !5341
  %53 = trunc i32 %52 to i24, !dbg !5341
  %54 = shl nuw nsw i24 %53, 1, !dbg !5341
  %55 = and i24 %44, -3, !dbg !5341
  %56 = or i24 %54, %55, !dbg !5341
  store i24 %56, i24* %46, align 4, !dbg !5341
  ret i8* %48, !dbg !5344
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5345 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5350, metadata !DIExpression()), !dbg !5353
  %2 = load i8*, i8** %0, align 4, !dbg !5354
  call void @llvm.dbg.value(metadata i8* %2, metadata !5351, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 0, metadata !5352, metadata !DIExpression()), !dbg !5353
  %3 = load i8, i8* %2, align 1, !dbg !5355
  %4 = zext i8 %3 to i32, !dbg !5356
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5357
  %6 = icmp eq i32 %5, 0, !dbg !5358
  br i1 %6, label %19, label %7, !dbg !5358

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5352, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i8* %10, metadata !5351, metadata !DIExpression()), !dbg !5353
  %11 = mul i32 %9, 10, !dbg !5359
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5361
  call void @llvm.dbg.value(metadata i8* %12, metadata !5351, metadata !DIExpression()), !dbg !5353
  %13 = add i32 %11, -48, !dbg !5362
  %14 = add i32 %13, %8, !dbg !5363
  call void @llvm.dbg.value(metadata i32 %14, metadata !5352, metadata !DIExpression()), !dbg !5353
  %15 = load i8, i8* %12, align 1, !dbg !5355
  %16 = zext i8 %15 to i32, !dbg !5356
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5357
  %18 = icmp eq i32 %17, 0, !dbg !5358
  br i1 %18, label %19, label %7, !dbg !5358, !llvm.loop !5364

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5353
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5353
  store i8* %20, i8** %0, align 4, !dbg !5366
  ret i32 %21, !dbg !5367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5370, metadata !DIExpression()), !dbg !5371
  %2 = add i32 %0, -48, !dbg !5372
  %3 = icmp ult i32 %2, 10, !dbg !5373
  %4 = zext i1 %3 to i32, !dbg !5373
  ret i32 %4, !dbg !5374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5375 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,85\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_BT_HCI_SPI_ENABLED,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_CARBON\0A\09.equ\09CONFIG_BOARD_96B_CARBON,1\0A\09.type\09CONFIG_BOARD_96B_CARBON,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F401XE\0A\09.equ\09CONFIG_SOC_STM32F401XE,1\0A\09.type\09CONFIG_SOC_STM32F401XE,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5931, !srcloc !5932
  ret void, !dbg !5933
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5936, metadata !DIExpression()), !dbg !5938
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5939
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5940
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5941, !srcloc !5950
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %3, metadata !5947, metadata !DIExpression()) #25, !dbg !5951
  call void @llvm.dbg.value(metadata i32 undef, metadata !5948, metadata !DIExpression()) #25, !dbg !5951
  call void @llvm.dbg.value(metadata i32 %3, metadata !5937, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %3, metadata !5952, metadata !DIExpression()) #25, !dbg !5957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5959, !srcloc !5960
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5961
  ret i32 0, !dbg !5962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5963 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5965
  %2 = or i32 %1, 512, !dbg !5965
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5965
  ret void, !dbg !5966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5968
  %2 = or i32 %1, 1024, !dbg !5968
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5972, metadata !DIExpression()), !dbg !5973
  ret i32 0, !dbg !5974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6025, metadata !DIExpression()), !dbg !6026
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6027
  ret void, !dbg !6028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6029 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6046, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6047, metadata !DIExpression()), !dbg !6049
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6050
  %4 = load i32, i32* %3, align 4, !dbg !6050
  call void @llvm.dbg.value(metadata i32 %4, metadata !6048, metadata !DIExpression()), !dbg !6049
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6051
  ret void, !dbg !6052
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6053 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6057, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %0, metadata !6058, metadata !DIExpression()), !dbg !6060
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6061
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6062
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6063
  %5 = bitcast i8* %4 to i32*, !dbg !6063
  %6 = load i32, i32* %5, align 4, !dbg !6063
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6064
  store i32 %6, i32* %7, align 4, !dbg !6065
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6066
  unreachable, !dbg !6067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6071, metadata !DIExpression()), !dbg !6072
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6073
  ret void, !dbg !6074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6079, metadata !DIExpression()), !dbg !6080
  %2 = icmp sgt i32 %0, -1, !dbg !6081
  br i1 %2, label %3, label %8, !dbg !6083

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6084, !srcloc !6086
  %4 = and i32 %0, 31, !dbg !6087
  %5 = shl nuw i32 1, %4, !dbg !6088
  %6 = lshr i32 %0, 5, !dbg !6089
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6090
  store volatile i32 %5, i32* %7, align 4, !dbg !6091
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6092, !srcloc !6093
  br label %8, !dbg !6094

8:                                                ; preds = %3, %1
  ret void, !dbg !6095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6100
  ret void, !dbg !6101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6104, metadata !DIExpression()), !dbg !6105
  %2 = icmp sgt i32 %0, -1, !dbg !6106
  br i1 %2, label %3, label %8, !dbg !6108

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6109
  %5 = shl nuw i32 1, %4, !dbg !6111
  %6 = lshr i32 %0, 5, !dbg !6112
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6113
  store volatile i32 %5, i32* %7, align 4, !dbg !6114
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6115, !srcloc !6119
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6120, !srcloc !6123
  br label %8, !dbg !6124

8:                                                ; preds = %3, %1
  ret void, !dbg !6125
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6131
  %2 = lshr i32 %0, 5, !dbg !6132
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6133
  %4 = load volatile i32, i32* %3, align 4, !dbg !6133
  %5 = and i32 %0, 31, !dbg !6134
  %6 = shl nuw i32 1, %5, !dbg !6134
  %7 = and i32 %4, %6, !dbg !6135
  ret i32 %7, !dbg !6136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %1, metadata !6142, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 %2, metadata !6143, metadata !DIExpression()), !dbg !6144
  %4 = add i32 %1, 1, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %4, metadata !6142, metadata !DIExpression()), !dbg !6144
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6148
  ret void, !dbg !6149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.value(metadata i32 %1, metadata !6155, metadata !DIExpression()), !dbg !6156
  %3 = trunc i32 %1 to i8, !dbg !6157
  %4 = shl i8 %3, 4, !dbg !6157
  %5 = and i32 %0, 15, !dbg !6159
  %6 = add nsw i32 %5, -4, !dbg !6159
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6159
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6159
  %9 = icmp slt i32 %0, 0, !dbg !6159
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6159
  store volatile i8 %4, i8* %10, align 1, !dbg !6157
  ret void, !dbg !6160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6163, metadata !DIExpression()), !dbg !6164
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6165
  ret void, !dbg !6166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6167 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6169
  tail call void @z_arm_int_exit() #27, !dbg !6170
  ret void, !dbg !6171
}

; Function Attrs: optsize
declare !dbg !6172 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6173 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6175 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6177
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6178
  tail call void @z_bss_zero() #27, !dbg !6179
  tail call void @z_data_copy() #27, !dbg !6180
  tail call void @z_arm_interrupt_init() #27, !dbg !6181
  tail call void @z_cstart() #29, !dbg !6182
  unreachable, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6183 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6184
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6185, !srcloc !6188
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6189, !srcloc !6192
  ret void, !dbg !6193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6194 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6195
  %2 = and i32 %1, -15728641, !dbg !6195
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6195
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6196, !srcloc !6203
  call void @llvm.dbg.value(metadata i32 %3, metadata !6201, metadata !DIExpression()) #25, !dbg !6204
  %4 = and i32 %3, -5, !dbg !6205
  call void @llvm.dbg.value(metadata i32 %4, metadata !6206, metadata !DIExpression()) #25, !dbg !6211
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6215, !srcloc !6192
  ret void, !dbg !6217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6221, metadata !DIExpression()), !dbg !6222
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6223
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6224
  store i32 %0, i32* %3, align 4, !dbg !6225
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6226
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6227
  store i32 %4, i32* %5, align 4, !dbg !6228
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6229
  %7 = or i32 %6, 268435456, !dbg !6229
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6229
  call void @llvm.dbg.value(metadata i32 0, metadata !6230, metadata !DIExpression()) #25, !dbg !6233
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6235, !srcloc !6236
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6237
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6238
  %10 = load i32, i32* %9, align 4, !dbg !6238
  ret i32 %10, !dbg !6239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6350, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6351, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %2, metadata !6352, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6353, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %4, metadata !6354, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %5, metadata !6355, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata i8* %6, metadata !6356, metadata !DIExpression()), !dbg !6358
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6359
  call void @llvm.dbg.value(metadata i8* %8, metadata !6357, metadata !DIExpression()), !dbg !6358
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6360
  %10 = bitcast i8* %9 to i32*, !dbg !6360
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6361
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6362
  %12 = bitcast i8* %8 to i32*, !dbg !6363
  store i32 %11, i32* %12, align 4, !dbg !6364
  %13 = ptrtoint i8* %4 to i32, !dbg !6365
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6366
  %15 = bitcast i8* %14 to i32*, !dbg !6366
  store i32 %13, i32* %15, align 4, !dbg !6367
  %16 = ptrtoint i8* %5 to i32, !dbg !6368
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6369
  %18 = bitcast i8* %17 to i32*, !dbg !6369
  store i32 %16, i32* %18, align 4, !dbg !6370
  %19 = ptrtoint i8* %6 to i32, !dbg !6371
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6372
  %21 = bitcast i8* %20 to i32*, !dbg !6372
  store i32 %19, i32* %21, align 4, !dbg !6373
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6374
  %23 = bitcast i8* %22 to i32*, !dbg !6374
  store i32 16777216, i32* %23, align 4, !dbg !6375
  %24 = ptrtoint i8* %8 to i32, !dbg !6376
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6377
  store i32 %24, i32* %25, align 8, !dbg !6378
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6379
  store i32 0, i32* %26, align 4, !dbg !6380
  ret void, !dbg !6381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6387, metadata !DIExpression()), !dbg !6393
  call void @llvm.dbg.value(metadata i32 %1, metadata !6388, metadata !DIExpression()), !dbg !6393
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6394
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6389, metadata !DIExpression()), !dbg !6393
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6395
  br i1 %4, label %19, label %5, !dbg !6397

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6392, metadata !DIExpression()), !dbg !6393
  %6 = icmp eq i32 %0, -22, !dbg !6398
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6398
  %8 = load i32, i32* %7, align 4, !dbg !6398
  br i1 %6, label %16, label %9, !dbg !6400

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6398
  %11 = icmp ule i32 %10, %0, !dbg !6398
  %12 = icmp ugt i32 %8, %0, !dbg !6398
  %13 = and i1 %12, %11, !dbg !6398
  %14 = icmp ugt i32 %8, %1, !dbg !6398
  %15 = and i1 %14, %13, !dbg !6398
  br i1 %15, label %18, label %19, !dbg !6398

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6398
  br i1 %17, label %18, label %19, !dbg !6400

18:                                               ; preds = %9, %16
  br label %19, !dbg !6401

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6393
  ret i32 %20, !dbg !6403
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6408, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i8* %1, metadata !6409, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6410, metadata !DIExpression()), !dbg !6411
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6412
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6413
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6414, !srcloc !6415
  unreachable, !dbg !6416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6417 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6435, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %1, metadata !6436, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %2, metadata !6437, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6438, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 0, metadata !6439, metadata !DIExpression()), !dbg !6445
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6446
  %9 = and i32 %8, 511, !dbg !6447
  call void @llvm.dbg.value(metadata i32 %9, metadata !6440, metadata !DIExpression()), !dbg !6445
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6448
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6448
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6449
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6449
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6444, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()) #25, !dbg !6454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6456, !srcloc !6457
  call void @llvm.dbg.value(metadata i8* %6, metadata !6442, metadata !DIExpression(DW_OP_deref)), !dbg !6445
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6458
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6443, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i8* %5, metadata !6441, metadata !DIExpression(DW_OP_deref)), !dbg !6445
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6459
  call void @llvm.dbg.value(metadata i32 %12, metadata !6439, metadata !DIExpression()), !dbg !6445
  %13 = load i8, i8* %5, align 1, !dbg !6460, !range !6462
  call void @llvm.dbg.value(metadata i8 %13, metadata !6441, metadata !DIExpression()), !dbg !6445
  %14 = icmp eq i8 %13, 0, !dbg !6460
  br i1 %14, label %15, label %32, !dbg !6463

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6464
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6465
  %18 = load i8, i8* %6, align 1, !dbg !6466, !range !6462
  call void @llvm.dbg.value(metadata i8 %18, metadata !6442, metadata !DIExpression()), !dbg !6445
  %19 = icmp eq i8 %18, 0, !dbg !6466
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6468
  %21 = load i32, i32* %20, align 4, !dbg !6468
  br i1 %19, label %27, label %22, !dbg !6469

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6470
  %24 = icmp eq i32 %23, 0, !dbg !6473
  br i1 %24, label %25, label %31, !dbg !6474

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6475
  br label %29, !dbg !6477

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6478
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6468
  br label %31, !dbg !6480

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6480
  br label %32, !dbg !6481

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6481
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6481
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6481
  ret void, !dbg !6481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6487, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 %1, metadata !6488, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 %2, metadata !6489, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i8* %3, metadata !6490, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i8 0, metadata !6491, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6492, metadata !DIExpression()), !dbg !6493
  store i8 0, i8* %3, align 1, !dbg !6494
  %5 = icmp ult i32 %2, -16777216, !dbg !6495
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6497
  br i1 %8, label %16, label %9, !dbg !6497

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6498
  %11 = icmp eq i32 %10, 0, !dbg !6498
  br i1 %11, label %12, label %13, !dbg !6500

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6492, metadata !DIExpression()), !dbg !6493
  store i8 1, i8* %3, align 1, !dbg !6503
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6493
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6492, metadata !DIExpression()), !dbg !6493
  br label %16, !dbg !6506

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6493
  ret %struct.__esf* %17, !dbg !6507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6508 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6512, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 %1, metadata !6513, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i8* %2, metadata !6514, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  store i8 0, i8* %2, align 1, !dbg !6517
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6518

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6519
  call void @llvm.dbg.value(metadata i32 %5, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %11, !dbg !6521

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6522
  call void @llvm.dbg.value(metadata i32 %7, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %11, !dbg !6523

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6524
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %11, !dbg !6525

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6526
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %11, !dbg !6527

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6528
  br label %11, !dbg !6529

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6531 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6535, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata i8* %1, metadata !6536, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()), !dbg !6538
  store i8 0, i8* %1, align 1, !dbg !6539
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6540
  %4 = and i32 %3, 2, !dbg !6542
  %5 = icmp eq i32 %4, 0, !dbg !6543
  br i1 %5, label %6, label %33, !dbg !6544

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6545
  %8 = icmp sgt i32 %7, -1, !dbg !6547
  br i1 %8, label %9, label %33, !dbg !6548

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6549
  %11 = and i32 %10, 1073741824, !dbg !6551
  %12 = icmp eq i32 %11, 0, !dbg !6552
  br i1 %12, label %33, label %13, !dbg !6553

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6554
  br i1 %14, label %15, label %18, !dbg !6557

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6558
  %17 = load i32, i32* %16, align 4, !dbg !6558
  call void @llvm.dbg.value(metadata i32 %17, metadata !6537, metadata !DIExpression()), !dbg !6538
  br label %33, !dbg !6560

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6561
  %20 = and i32 %19, 255, !dbg !6563
  %21 = icmp eq i32 %20, 0, !dbg !6564
  br i1 %21, label %24, label %22, !dbg !6565

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6566
  call void @llvm.dbg.value(metadata i32 %23, metadata !6537, metadata !DIExpression()), !dbg !6538
  br label %33, !dbg !6568

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6569
  %26 = and i32 %25, 65280, !dbg !6571
  %27 = icmp eq i32 %26, 0, !dbg !6572
  br i1 %27, label %29, label %28, !dbg !6573

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6574
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()), !dbg !6538
  br label %33, !dbg !6576

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6577
  %31 = icmp ult i32 %30, 65536, !dbg !6579
  br i1 %31, label %33, label %32, !dbg !6580

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6581
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()), !dbg !6538
  br label %33, !dbg !6583

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6538
  call void @llvm.dbg.value(metadata i32 %34, metadata !6537, metadata !DIExpression()), !dbg !6538
  ret i32 %34, !dbg !6584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6585 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6587, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata i32 %1, metadata !6588, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata i8* %2, metadata !6589, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata i32 0, metadata !6590, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.value(metadata i32 -22, metadata !6591, metadata !DIExpression()), !dbg !6600
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6601
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6603
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6605
  %7 = and i32 %6, 2, !dbg !6606
  %8 = icmp eq i32 %7, 0, !dbg !6607
  br i1 %8, label %19, label %9, !dbg !6608

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6609
  call void @llvm.dbg.value(metadata i32 %10, metadata !6592, metadata !DIExpression()), !dbg !6610
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6611
  %12 = and i32 %11, 128, !dbg !6613
  %13 = icmp eq i32 %12, 0, !dbg !6614
  br i1 %13, label %19, label %14, !dbg !6615

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6591, metadata !DIExpression()), !dbg !6600
  %15 = icmp eq i32 %1, 0, !dbg !6616
  br i1 %15, label %19, label %16, !dbg !6619

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6620
  %18 = and i32 %17, -129, !dbg !6620
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6620
  br label %19, !dbg !6622

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6600
  call void @llvm.dbg.value(metadata i32 %20, metadata !6591, metadata !DIExpression()), !dbg !6600
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6623
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6625
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6627
  %24 = and i32 %23, 16, !dbg !6628
  %25 = icmp eq i32 %24, 0, !dbg !6628
  br i1 %25, label %26, label %30, !dbg !6629

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6630
  %28 = and i32 %27, 2, !dbg !6631
  %29 = icmp eq i32 %28, 0, !dbg !6631
  br i1 %29, label %39, label %30, !dbg !6632

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6633
  %32 = and i32 %31, 2048, !dbg !6634
  %33 = icmp eq i32 %32, 0, !dbg !6634
  br i1 %33, label %39, label %34, !dbg !6635

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6636
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6637
  call void @llvm.dbg.value(metadata i32 %36, metadata !6595, metadata !DIExpression()), !dbg !6638
  %37 = icmp eq i32 %36, 0, !dbg !6639
  br i1 %37, label %39, label %38, !dbg !6641

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6642, metadata !DIExpression()) #25, !dbg !6645
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6648, !srcloc !6649
  call void @llvm.dbg.value(metadata i32 2, metadata !6590, metadata !DIExpression()), !dbg !6600
  br label %39, !dbg !6650

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6600
  call void @llvm.dbg.value(metadata i32 %40, metadata !6590, metadata !DIExpression()), !dbg !6600
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6651
  %42 = and i32 %41, 32, !dbg !6653
  %43 = icmp eq i32 %42, 0, !dbg !6654
  br i1 %43, label %47, label %44, !dbg !6655

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6656
  %46 = and i32 %45, -8193, !dbg !6656
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6656
  br label %47, !dbg !6658

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %49 = or i32 %48, 255, !dbg !6659
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  store i8 0, i8* %2, align 1, !dbg !6660
  ret i32 %40, !dbg !6661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6662 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6666, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 %0, metadata !6667, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i8* %1, metadata !6668, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.value(metadata i32 0, metadata !6669, metadata !DIExpression()), !dbg !6673
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6674
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6676
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6678
  %6 = and i32 %5, 512, !dbg !6679
  %7 = icmp eq i32 %6, 0, !dbg !6679
  br i1 %7, label %18, label %8, !dbg !6680

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6681
  call void @llvm.dbg.value(metadata i32 %9, metadata !6670, metadata !DIExpression()), !dbg !6682
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6683
  %11 = and i32 %10, 32768, !dbg !6685
  %12 = icmp ne i32 %11, 0, !dbg !6686
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6687
  br i1 %14, label %15, label %18, !dbg !6687

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6688
  %17 = and i32 %16, -32769, !dbg !6688
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6688
  br label %18, !dbg !6692

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6693
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6695
  %21 = and i32 %20, 256, !dbg !6697
  %22 = icmp eq i32 %21, 0, !dbg !6698
  br i1 %22, label %23, label %25, !dbg !6699

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6700
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6702
  %27 = or i32 %26, 65280, !dbg !6702
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6702
  store i8 0, i8* %1, align 1, !dbg !6703
  ret void, !dbg !6704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6705 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6711, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i32 0, metadata !6712, metadata !DIExpression()), !dbg !6713
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6714
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6716
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6718
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6720
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6722
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6724
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6726
  %8 = or i32 %7, -65536, !dbg !6726
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6726
  ret void, !dbg !6727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6728 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6732, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i8* %0, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i8 0, i8* %0, align 1, !dbg !6735
  ret void, !dbg !6736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6737 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6741, metadata !DIExpression()), !dbg !6744
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6745
  %3 = load i32, i32* %2, align 4, !dbg !6745
  %4 = inttoptr i32 %3 to i16*, !dbg !6746
  call void @llvm.dbg.value(metadata i16* %4, metadata !6742, metadata !DIExpression()), !dbg !6744
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6747
  %6 = or i32 %5, 256, !dbg !6747
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6747
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6748, !srcloc !6751
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6752, !srcloc !6755
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6756
  %8 = load i16, i16* %7, align 2, !dbg !6757
  call void @llvm.dbg.value(metadata i16 %8, metadata !6743, metadata !DIExpression()), !dbg !6744
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6758
  %10 = and i32 %9, -257, !dbg !6758
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6758
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6759, !srcloc !6751
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6761, !srcloc !6755
  %11 = icmp eq i16 %8, -8446, !dbg !6763
  ret i1 %11, !dbg !6765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6766 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6767
  %2 = or i32 %1, 16, !dbg !6767
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6767
  ret void, !dbg !6768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6769 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6772, metadata !DIExpression()), !dbg !6773
  br label %1, !dbg !6774

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6772, metadata !DIExpression()), !dbg !6773
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6776
  %3 = add nuw nsw i32 %2, 1, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %3, metadata !6772, metadata !DIExpression()), !dbg !6773
  %4 = icmp eq i32 %3, 85, !dbg !6780
  br i1 %4, label %5, label %1, !dbg !6774, !llvm.loop !6781

5:                                                ; preds = %1
  ret void, !dbg !6783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #15 !dbg !6784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6786, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata i32 1, metadata !6787, metadata !DIExpression()), !dbg !6788
  %2 = and i32 %0, 15, !dbg !6789
  %3 = add nsw i32 %2, -4, !dbg !6789
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6789
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6789
  %6 = icmp slt i32 %0, 0, !dbg !6789
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6789
  store volatile i8 16, i8* %7, align 1, !dbg !6790
  ret void, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6899, metadata !DIExpression()), !dbg !6900
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6901
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6903
  br i1 %3, label %4, label %12, !dbg !6904

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6905, !srcloc !6917
  call void @llvm.dbg.value(metadata i32 %5, metadata !6908, metadata !DIExpression()) #25, !dbg !6918
  %6 = icmp eq i32 %5, 0, !dbg !6919
  br i1 %6, label %12, label %7, !dbg !6920

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6921
  %9 = or i32 %8, 268435456, !dbg !6921
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6921
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6923
  %11 = and i32 %10, -32769, !dbg !6923
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6923
  br label %12, !dbg !6924

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6925
  ret void, !dbg !6926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6927 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6928
  ret void, !dbg !6929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !470, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i8 0, metadata !471, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.value(metadata i32 64, metadata !473, metadata !DIExpression()), !dbg !6930
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6931
  %3 = load i32, i32* %2, align 4, !dbg !6931
  %4 = add i32 %3, -64, !dbg !6933
  call void @llvm.dbg.value(metadata i32 %4, metadata !472, metadata !DIExpression()), !dbg !6930
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6934
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6935
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6936
  call void @llvm.dbg.value(metadata i8 1, metadata !471, metadata !DIExpression()), !dbg !6930
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6937
  ret void, !dbg !6938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6939 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6940
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6941, !srcloc !6944
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6945, !srcloc !6948
  ret void, !dbg !6949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6950 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6951, !srcloc !6954
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6955
  ret void, !dbg !6956
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6957 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6972, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i8 %1, metadata !6973, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 %2, metadata !6974, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.value(metadata i32 %3, metadata !6975, metadata !DIExpression()), !dbg !6976
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6977
  ret void, !dbg !6979
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6980 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6985, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i8 %1, metadata !6986, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i32 undef, metadata !6987, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i32 undef, metadata !6988, metadata !DIExpression()), !dbg !6990
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6991
  call void @llvm.dbg.value(metadata i8 %3, metadata !6989, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6990
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %4, metadata !6989, metadata !DIExpression()), !dbg !6990
  %5 = trunc i32 %4 to i8, !dbg !6993
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6994
  ret void, !dbg !6995
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6996 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7000, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8 %1, metadata !7001, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8 %2, metadata !7002, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i1 %3, metadata !7003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7006
  %5 = zext i8 %2 to i32, !dbg !7007
  call void @llvm.dbg.value(metadata i32 %5, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 0, metadata !7004, metadata !DIExpression()), !dbg !7006
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 0, metadata !7004, metadata !DIExpression()), !dbg !7006
  %7 = icmp eq i8 %1, 0, !dbg !7008
  br i1 %7, label %29, label %8, !dbg !7011

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 %10, metadata !7004, metadata !DIExpression()), !dbg !7006
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7012
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7015
  %13 = load i32, i32* %12, align 4, !dbg !7015
  %14 = icmp eq i32 %13, 0, !dbg !7016
  br i1 %14, label %25, label %15, !dbg !7017

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7018

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7020
  %18 = icmp eq i32 %17, 0, !dbg !7020
  br i1 %18, label %29, label %19, !dbg !7021

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7022
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %21, metadata !7005, metadata !DIExpression()), !dbg !7006
  %22 = icmp eq i32 %21, -22, !dbg !7024
  br i1 %22, label %29, label %23, !dbg !7026

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7027
  call void @llvm.dbg.value(metadata i32 %24, metadata !7005, metadata !DIExpression()), !dbg !7006
  br label %25, !dbg !7028

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7006
  call void @llvm.dbg.value(metadata i32 %26, metadata !7005, metadata !DIExpression()), !dbg !7006
  %27 = add nuw nsw i32 %10, 1, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %27, metadata !7004, metadata !DIExpression()), !dbg !7006
  %28 = icmp eq i32 %27, %6, !dbg !7008
  br i1 %28, label %29, label %8, !dbg !7011, !llvm.loop !7030

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7006
  ret i32 %30, !dbg !7032
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7033 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7037, metadata !DIExpression()), !dbg !7039
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7040
  %3 = load i32, i32* %2, align 4, !dbg !7040
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7041, !range !4026
  %5 = icmp ult i32 %4, 2, !dbg !7041
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7042
  br i1 %7, label %8, label %15, !dbg !7042

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7043
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7044
  %11 = load i32, i32* %10, align 4, !dbg !7044
  %12 = and i32 %11, %9, !dbg !7045
  %13 = icmp eq i32 %12, 0, !dbg !7046
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7038, metadata !DIExpression()), !dbg !7039
  ret i32 %16, !dbg !7047
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7048 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7052, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7053, metadata !DIExpression()), !dbg !7055
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7056
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7056
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7054, metadata !DIExpression()), !dbg !7057
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7058
  %6 = load i32, i32* %5, align 4, !dbg !7058
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7059
  store i32 %6, i32* %7, align 4, !dbg !7060
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7061
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7062
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7063
  %11 = load i32, i32* %10, align 4, !dbg !7063
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7064
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7065
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7066
  ret i32 %12, !dbg !7067
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7068 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7075, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7076, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 undef, metadata !7077, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.value(metadata i32 %2, metadata !7078, metadata !DIExpression()), !dbg !7079
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7080
  %5 = load i32, i32* %4, align 4, !dbg !7080
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7081
  %7 = or i32 %6, %5, !dbg !7082
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7083
  store i32 %7, i32* %8, align 4, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7086 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7090, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7091, metadata !DIExpression()), !dbg !7092
  %3 = zext i8 %0 to i32, !dbg !7093
  %4 = icmp ugt i8 %0, 7, !dbg !7095
  br i1 %4, label %6, label %5, !dbg !7096

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7097
  br label %6, !dbg !7098

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7092
  ret i32 %7, !dbg !7099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7104, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7105, metadata !DIExpression()), !dbg !7106
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7107
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7108
  %4 = load i32, i32* %3, align 4, !dbg !7108
  %5 = and i32 %4, -32, !dbg !7109
  %6 = or i32 %5, %0, !dbg !7110
  %7 = or i32 %6, 16, !dbg !7110
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7111
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7112
  %9 = load i32, i32* %8, align 4, !dbg !7112
  %10 = or i32 %9, 1, !dbg !7113
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7114
  ret void, !dbg !7115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7119, metadata !DIExpression()), !dbg !7120
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7121
  ret void, !dbg !7122
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7127, metadata !DIExpression()), !dbg !7128
  %2 = icmp ult i32 %0, 33, !dbg !7129
  br i1 %2, label %11, label %3, !dbg !7131

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7132
  br i1 %4, label %11, label %5, !dbg !7134

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7135
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7136, !range !4026
  %8 = mul nsw i32 %7, -2, !dbg !7137
  %9 = add nsw i32 %8, 62, !dbg !7137
  %10 = and i32 %9, 62, !dbg !7138
  br label %11, !dbg !7139

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7128
  ret i32 %12, !dbg !7140
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7141 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7145, metadata !DIExpression()), !dbg !7147
  call void @llvm.dbg.value(metadata i8 %1, metadata !7146, metadata !DIExpression()), !dbg !7147
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7148
  ret void, !dbg !7150
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7151 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7155, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i8 %1, metadata !7156, metadata !DIExpression()), !dbg !7162
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7163
  call void @llvm.dbg.value(metadata i8 %3, metadata !7157, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7162
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %4, metadata !7157, metadata !DIExpression()), !dbg !7162
  %5 = icmp ne i32 %4, -22, !dbg !7165
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7166
  call void @llvm.dbg.value(metadata i32 %4, metadata !7158, metadata !DIExpression()), !dbg !7167
  br i1 %7, label %8, label %12, !dbg !7166

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7158, metadata !DIExpression()), !dbg !7167
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7168
  %10 = add i32 %9, 1, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %10, metadata !7158, metadata !DIExpression()), !dbg !7167
  %11 = icmp eq i32 %10, 8, !dbg !7172
  br i1 %11, label %12, label %8, !dbg !7173, !llvm.loop !7174

12:                                               ; preds = %8, %2
  ret void, !dbg !7176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7180, metadata !DIExpression()), !dbg !7181
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7182
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7183
  ret void, !dbg !7184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7185 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7190
  %2 = icmp ugt i32 %1, 8, !dbg !7192
  br i1 %2, label %14, label %3, !dbg !7193

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7194
  call void @llvm.dbg.value(metadata i32 0, metadata !7189, metadata !DIExpression()), !dbg !7195
  %4 = icmp eq i32 %1, 0, !dbg !7196
  br i1 %4, label %12, label %5, !dbg !7199

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7199

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7189, metadata !DIExpression()), !dbg !7195
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7200
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7202
  %10 = add nuw i32 %8, 1, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %10, metadata !7189, metadata !DIExpression()), !dbg !7195
  %11 = icmp eq i32 %10, %1, !dbg !7196
  br i1 %11, label %12, label %7, !dbg !7199, !llvm.loop !7204

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7206
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7207
  tail call void @arm_core_mpu_enable() #26, !dbg !7208
  br label %14, !dbg !7209

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7195
  ret i32 %15, !dbg !7210
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7211 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7218, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i8* %1, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i8* %0, metadata !7220, metadata !DIExpression()), !dbg !7221
  %3 = load i8, i8* %1, align 1, !dbg !7222
  %4 = icmp eq i8 %3, 0, !dbg !7223
  br i1 %4, label %13, label %5, !dbg !7224

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7218, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i8* %8, metadata !7219, metadata !DIExpression()), !dbg !7221
  store i8 %6, i8* %7, align 1, !dbg !7225
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7227
  call void @llvm.dbg.value(metadata i8* %9, metadata !7218, metadata !DIExpression()), !dbg !7221
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7228
  call void @llvm.dbg.value(metadata i8* %10, metadata !7219, metadata !DIExpression()), !dbg !7221
  %11 = load i8, i8* %10, align 1, !dbg !7222
  %12 = icmp eq i8 %11, 0, !dbg !7223
  br i1 %12, label %13, label %5, !dbg !7224, !llvm.loop !7229

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7231
  ret i8* %0, !dbg !7232
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7237, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %1, metadata !7238, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i32 %2, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %0, metadata !7240, metadata !DIExpression()), !dbg !7241
  %4 = icmp eq i32 %2, 0, !dbg !7242
  br i1 %4, label %22, label %5, !dbg !7243

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7237, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i32 %7, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %8, metadata !7238, metadata !DIExpression()), !dbg !7241
  %9 = load i8, i8* %8, align 1, !dbg !7244
  %10 = icmp eq i8 %9, 0, !dbg !7245
  br i1 %10, label %16, label %11, !dbg !7246

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7247
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7249
  call void @llvm.dbg.value(metadata i8* %12, metadata !7238, metadata !DIExpression()), !dbg !7241
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7250
  call void @llvm.dbg.value(metadata i8* %13, metadata !7237, metadata !DIExpression()), !dbg !7241
  %14 = add i32 %7, -1, !dbg !7251
  call void @llvm.dbg.value(metadata i32 %14, metadata !7239, metadata !DIExpression()), !dbg !7241
  %15 = icmp eq i32 %14, 0, !dbg !7242
  br i1 %15, label %22, label %5, !dbg !7243, !llvm.loop !7252

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7237, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i32 %18, metadata !7239, metadata !DIExpression()), !dbg !7241
  store i8 0, i8* %17, align 1, !dbg !7254
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7256
  call void @llvm.dbg.value(metadata i8* %19, metadata !7237, metadata !DIExpression()), !dbg !7241
  %20 = add i32 %18, -1, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %20, metadata !7239, metadata !DIExpression()), !dbg !7241
  %21 = icmp eq i32 %20, 0, !dbg !7258
  br i1 %21, label %22, label %16, !dbg !7259, !llvm.loop !7260

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7262
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7267, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7268, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i32 %1, metadata !7269, metadata !DIExpression()), !dbg !7270
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7271

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7267, metadata !DIExpression()), !dbg !7270
  %6 = load i8, i8* %5, align 1, !dbg !7272
  %7 = icmp eq i8 %6, %3, !dbg !7273
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7274
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7275
  call void @llvm.dbg.value(metadata i8* %10, metadata !7267, metadata !DIExpression()), !dbg !7270
  br i1 %9, label %11, label %4, !dbg !7274, !llvm.loop !7277

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7279
  ret i8* %12, !dbg !7280
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7283, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %1, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* null, metadata !7285, metadata !DIExpression()), !dbg !7286
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7287

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7286
  call void @llvm.dbg.value(metadata i8* %6, metadata !7285, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %5, metadata !7283, metadata !DIExpression()), !dbg !7286
  %7 = load i8, i8* %5, align 1, !dbg !7288
  %8 = icmp eq i8 %7, %3, !dbg !7291
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7292
  call void @llvm.dbg.value(metadata i8* %9, metadata !7285, metadata !DIExpression()), !dbg !7286
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7293
  call void @llvm.dbg.value(metadata i8* %10, metadata !7283, metadata !DIExpression()), !dbg !7286
  %11 = icmp eq i8 %7, 0, !dbg !7294
  br i1 %11, label %12, label %4, !dbg !7294, !llvm.loop !7295

12:                                               ; preds = %4
  ret i8* %9, !dbg !7297
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7298 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7302, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i32 0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %2 = load i8, i8* %0, align 1, !dbg !7305
  %3 = icmp eq i8 %2, 0, !dbg !7306
  br i1 %3, label %11, label %4, !dbg !7307

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %6, metadata !7302, metadata !DIExpression()), !dbg !7304
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7308
  call void @llvm.dbg.value(metadata i8* %7, metadata !7302, metadata !DIExpression()), !dbg !7304
  %8 = add i32 %5, 1, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %8, metadata !7303, metadata !DIExpression()), !dbg !7304
  %9 = load i8, i8* %7, align 1, !dbg !7305
  %10 = icmp eq i8 %9, 0, !dbg !7306
  br i1 %10, label %11, label %4, !dbg !7307, !llvm.loop !7311

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7304
  ret i32 %12, !dbg !7313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7318, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.value(metadata i32 %1, metadata !7319, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.value(metadata i32 0, metadata !7320, metadata !DIExpression()), !dbg !7321
  %3 = load i8, i8* %0, align 1, !dbg !7322
  %4 = icmp ne i8 %3, 0, !dbg !7323
  %5 = icmp ne i32 %1, 0, !dbg !7324
  %6 = and i1 %4, %5, !dbg !7324
  br i1 %6, label %7, label %16, !dbg !7325

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.value(metadata i8* %9, metadata !7318, metadata !DIExpression()), !dbg !7321
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7326
  call void @llvm.dbg.value(metadata i8* %10, metadata !7318, metadata !DIExpression()), !dbg !7321
  %11 = add nuw i32 %8, 1, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %11, metadata !7320, metadata !DIExpression()), !dbg !7321
  %12 = load i8, i8* %10, align 1, !dbg !7322
  %13 = icmp ne i8 %12, 0, !dbg !7323
  %14 = icmp ult i32 %11, %1, !dbg !7324
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7324
  br i1 %15, label %7, label %16, !dbg !7325, !llvm.loop !7329

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7321
  ret i32 %17, !dbg !7331
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7336, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8* %1, metadata !7337, metadata !DIExpression()), !dbg !7338
  %3 = load i8, i8* %0, align 1, !dbg !7339
  %4 = load i8, i8* %1, align 1, !dbg !7340
  %5 = icmp ne i8 %3, %4, !dbg !7341
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7342
  br i1 %7, label %18, label %8, !dbg !7342

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8* %10, metadata !7336, metadata !DIExpression()), !dbg !7338
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7343
  call void @llvm.dbg.value(metadata i8* %11, metadata !7336, metadata !DIExpression()), !dbg !7338
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7345
  call void @llvm.dbg.value(metadata i8* %12, metadata !7337, metadata !DIExpression()), !dbg !7338
  %13 = load i8, i8* %11, align 1, !dbg !7339
  %14 = load i8, i8* %12, align 1, !dbg !7340
  %15 = icmp ne i8 %13, %14, !dbg !7341
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7342
  br i1 %17, label %18, label %8, !dbg !7342, !llvm.loop !7346

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7339
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7340
  %21 = zext i8 %19 to i32, !dbg !7349
  %22 = zext i8 %20 to i32, !dbg !7350
  %23 = sub nsw i32 %21, %22, !dbg !7351
  ret i32 %23, !dbg !7352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7357, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %1, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %2, metadata !7359, metadata !DIExpression()), !dbg !7360
  %4 = icmp eq i32 %2, 0, !dbg !7361
  br i1 %4, label %23, label %5, !dbg !7361

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7359, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %7, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %8, metadata !7357, metadata !DIExpression()), !dbg !7360
  %9 = load i8, i8* %8, align 1, !dbg !7362
  %10 = load i8, i8* %7, align 1, !dbg !7363
  %11 = icmp ne i8 %9, %10, !dbg !7364
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7365
  br i1 %13, label %19, label %14, !dbg !7365

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7366
  call void @llvm.dbg.value(metadata i8* %15, metadata !7357, metadata !DIExpression()), !dbg !7360
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7368
  call void @llvm.dbg.value(metadata i8* %16, metadata !7358, metadata !DIExpression()), !dbg !7360
  %17 = add i32 %6, -1, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %17, metadata !7359, metadata !DIExpression()), !dbg !7360
  %18 = icmp eq i32 %17, 0, !dbg !7361
  br i1 %18, label %23, label %5, !dbg !7361, !llvm.loop !7370

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7373
  %21 = zext i8 %10 to i32, !dbg !7374
  %22 = sub nsw i32 %20, %21, !dbg !7375
  br label %23, !dbg !7376

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7376
  ret i32 %24, !dbg !7377
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7378 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7383, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8* %1, metadata !7384, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8** %2, metadata !7385, metadata !DIExpression()), !dbg !7388
  %4 = icmp eq i8* %0, null, !dbg !7389
  br i1 %4, label %5, label %7, !dbg !7389

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7390
  br label %7, !dbg !7389

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7389
  call void @llvm.dbg.value(metadata i8* %8, metadata !7386, metadata !DIExpression()), !dbg !7388
  %9 = load i8, i8* %8, align 1, !dbg !7391
  %10 = icmp eq i8 %9, 0, !dbg !7391
  br i1 %10, label %33, label %11, !dbg !7392

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7386, metadata !DIExpression()), !dbg !7388
  %14 = zext i8 %12 to i32, !dbg !7391
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7393
  %16 = icmp eq i8* %15, null, !dbg !7392
  br i1 %16, label %21, label %17, !dbg !7394

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7395
  call void @llvm.dbg.value(metadata i8* %18, metadata !7386, metadata !DIExpression()), !dbg !7388
  %19 = load i8, i8* %18, align 1, !dbg !7391
  %20 = icmp eq i8 %19, 0, !dbg !7391
  br i1 %20, label %33, label %11, !dbg !7392, !llvm.loop !7397

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7387, metadata !DIExpression()), !dbg !7388
  %24 = zext i8 %22 to i32, !dbg !7399
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7400
  %26 = icmp eq i8* %25, null, !dbg !7401
  br i1 %26, label %27, label %31, !dbg !7402

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7403
  call void @llvm.dbg.value(metadata i8* %28, metadata !7387, metadata !DIExpression()), !dbg !7388
  %29 = load i8, i8* %28, align 1, !dbg !7399
  %30 = icmp eq i8 %29, 0, !dbg !7399
  br i1 %30, label %33, label %21, !dbg !7405, !llvm.loop !7406

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7408
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7411
  br label %33, !dbg !7412

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7388
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7388
  store i8* %34, i8** %2, align 4, !dbg !7388
  ret i8* %35, !dbg !7413
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7414 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7416, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i8* %1, metadata !7417, metadata !DIExpression()), !dbg !7418
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7419
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7420
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7421
  ret i8* %0, !dbg !7422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8* %1, metadata !7426, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %2, metadata !7427, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8* %0, metadata !7428, metadata !DIExpression()), !dbg !7430
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %4, metadata !7429, metadata !DIExpression()), !dbg !7430
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7432
  call void @llvm.dbg.value(metadata i8* %5, metadata !7425, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8* %1, metadata !7426, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %2, metadata !7427, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %2, metadata !7427, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7430
  %6 = icmp eq i32 %2, 0, !dbg !7433
  br i1 %6, label %18, label %7, !dbg !7434

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7435
  call void @llvm.dbg.value(metadata i8* %9, metadata !7425, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i8* %10, metadata !7426, metadata !DIExpression()), !dbg !7430
  %12 = load i8, i8* %10, align 1, !dbg !7436
  %13 = icmp eq i8 %12, 0, !dbg !7437
  br i1 %13, label %18, label %14, !dbg !7438

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7439
  call void @llvm.dbg.value(metadata i8* %15, metadata !7426, metadata !DIExpression()), !dbg !7430
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7441
  call void @llvm.dbg.value(metadata i8* %16, metadata !7425, metadata !DIExpression()), !dbg !7430
  store i8 %12, i8* %9, align 1, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %11, metadata !7427, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %11, metadata !7427, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7430
  %17 = icmp eq i32 %11, 0, !dbg !7433
  br i1 %17, label %18, label %7, !dbg !7434, !llvm.loop !7443

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7430
  store i8 0, i8* %19, align 1, !dbg !7445
  ret i8* %0, !dbg !7446
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %1, metadata !7452, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %0, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %1, metadata !7455, metadata !DIExpression()), !dbg !7456
  %4 = icmp eq i32 %2, 0, !dbg !7457
  br i1 %4, label %31, label %5, !dbg !7459

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %0, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7456
  %6 = add i32 %2, -1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %6, metadata !7453, metadata !DIExpression()), !dbg !7456
  %7 = icmp eq i32 %6, 0, !dbg !7461
  br i1 %7, label %23, label %8, !dbg !7462

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7463
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7463
  br label %11, !dbg !7463

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %14, metadata !7454, metadata !DIExpression()), !dbg !7456
  %15 = load i8, i8* %14, align 1, !dbg !7464
  %16 = load i8, i8* %13, align 1, !dbg !7465
  %17 = icmp eq i8 %15, %16, !dbg !7466
  br i1 %17, label %18, label %23, !dbg !7463

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7467
  call void @llvm.dbg.value(metadata i8* %19, metadata !7454, metadata !DIExpression()), !dbg !7456
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7469
  call void @llvm.dbg.value(metadata i8* %20, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %12, metadata !7453, metadata !DIExpression()), !dbg !7456
  %21 = add i32 %12, -1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %21, metadata !7453, metadata !DIExpression()), !dbg !7456
  %22 = icmp eq i32 %21, 0, !dbg !7461
  br i1 %22, label %23, label %11, !dbg !7462, !llvm.loop !7470

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7456
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7456
  %26 = load i8, i8* %24, align 1, !dbg !7472
  %27 = zext i8 %26 to i32, !dbg !7472
  %28 = load i8, i8* %25, align 1, !dbg !7473
  %29 = zext i8 %28 to i32, !dbg !7473
  %30 = sub nsw i32 %27, %29, !dbg !7474
  br label %31, !dbg !7475

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7456
  ret i32 %32, !dbg !7476
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7477 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7481, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %1, metadata !7482, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %2, metadata !7483, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %0, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %1, metadata !7485, metadata !DIExpression()), !dbg !7486
  %4 = ptrtoint i8* %0 to i32, !dbg !7487
  %5 = ptrtoint i8* %1 to i32, !dbg !7487
  %6 = sub i32 %4, %5, !dbg !7487
  %7 = icmp ult i32 %6, %2, !dbg !7489
  br i1 %7, label %10, label %8, !dbg !7490

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %0, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %2, metadata !7483, metadata !DIExpression()), !dbg !7486
  %9 = icmp eq i32 %2, 0, !dbg !7491
  br i1 %9, label %26, label %17, !dbg !7493

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7483, metadata !DIExpression()), !dbg !7486
  %12 = add i32 %11, -1, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %12, metadata !7483, metadata !DIExpression()), !dbg !7486
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7497
  %14 = load i8, i8* %13, align 1, !dbg !7497
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7498
  store i8 %14, i8* %15, align 1, !dbg !7499
  %16 = icmp eq i32 %12, 0, !dbg !7500
  br i1 %16, label %26, label %10, !dbg !7501, !llvm.loop !7502

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %19, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %20, metadata !7483, metadata !DIExpression()), !dbg !7486
  %21 = load i8, i8* %18, align 1, !dbg !7504
  store i8 %21, i8* %19, align 1, !dbg !7506
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7507
  call void @llvm.dbg.value(metadata i8* %22, metadata !7484, metadata !DIExpression()), !dbg !7486
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7508
  call void @llvm.dbg.value(metadata i8* %23, metadata !7485, metadata !DIExpression()), !dbg !7486
  %24 = add i32 %20, -1, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %24, metadata !7483, metadata !DIExpression()), !dbg !7486
  %25 = icmp eq i32 %24, 0, !dbg !7491
  br i1 %25, label %26, label %17, !dbg !7493, !llvm.loop !7510

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7512
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7519, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %1, metadata !7520, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i32 %2, metadata !7521, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %0, metadata !7522, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %1, metadata !7523, metadata !DIExpression()), !dbg !7524
  %4 = icmp eq i32 %2, 0, !dbg !7525
  br i1 %4, label %14, label %5, !dbg !7526

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7523, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %7, metadata !7522, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i32 %8, metadata !7521, metadata !DIExpression()), !dbg !7524
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7527
  call void @llvm.dbg.value(metadata i8* %9, metadata !7523, metadata !DIExpression()), !dbg !7524
  %10 = load i8, i8* %6, align 1, !dbg !7529
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7530
  call void @llvm.dbg.value(metadata i8* %11, metadata !7522, metadata !DIExpression()), !dbg !7524
  store i8 %10, i8* %7, align 1, !dbg !7531
  %12 = add i32 %8, -1, !dbg !7532
  call void @llvm.dbg.value(metadata i32 %12, metadata !7521, metadata !DIExpression()), !dbg !7524
  %13 = icmp eq i32 %12, 0, !dbg !7525
  br i1 %13, label %14, label %5, !dbg !7526, !llvm.loop !7533

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7535
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7540, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %1, metadata !7541, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %2, metadata !7542, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  %4 = trunc i32 %1 to i8, !dbg !7546
  call void @llvm.dbg.value(metadata i8 %4, metadata !7544, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 %2, metadata !7542, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  %5 = icmp eq i32 %2, 0, !dbg !7547
  br i1 %5, label %12, label %6, !dbg !7548

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7542, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %8, metadata !7543, metadata !DIExpression()), !dbg !7545
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7549
  call void @llvm.dbg.value(metadata i8* %9, metadata !7543, metadata !DIExpression()), !dbg !7545
  store i8 %4, i8* %8, align 1, !dbg !7551
  %10 = add i32 %7, -1, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %10, metadata !7542, metadata !DIExpression()), !dbg !7545
  %11 = icmp eq i32 %10, 0, !dbg !7547
  br i1 %11, label %12, label %6, !dbg !7548, !llvm.loop !7553

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7560, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 %1, metadata !7561, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 %2, metadata !7562, metadata !DIExpression()), !dbg !7566
  %4 = icmp eq i32 %2, 0, !dbg !7567
  br i1 %4, label %17, label %5, !dbg !7568

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7569

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7570
  call void @llvm.dbg.value(metadata i8* %9, metadata !7563, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %8, metadata !7562, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i8* %9, metadata !7563, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7570
  %10 = load i8, i8* %9, align 1, !dbg !7571
  %11 = icmp eq i8 %10, %6, !dbg !7574
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7575
  call void @llvm.dbg.value(metadata i8* %12, metadata !7563, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %13, metadata !7562, metadata !DIExpression()), !dbg !7566
  br i1 %15, label %16, label %7, !dbg !7575, !llvm.loop !7576

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7578

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7566
  ret i8* %19, !dbg !7579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7580 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7584
  ret void, !dbg !7585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7588, metadata !DIExpression()), !dbg !7589
  ret i32 -1, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7597
  call void @llvm.dbg.value(metadata i32* %1, metadata !7596, metadata !DIExpression()), !dbg !7597
  %3 = ptrtoint i32* %1 to i32, !dbg !7598
  %4 = and i32 %3, -2, !dbg !7598
  %5 = icmp eq i32 %4, 2, !dbg !7598
  br i1 %5, label %6, label %9, !dbg !7598

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7599
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7599
  br label %9, !dbg !7600

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7600
  ret i32 %10, !dbg !7601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32* %1, metadata !7605, metadata !DIExpression()), !dbg !7606
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7607
  ret i32 %3, !dbg !7608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7612, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32* %1, metadata !7613, metadata !DIExpression()), !dbg !7614
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7615, !srcloc !7617
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7618
  ret i32 %3, !dbg !7619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7625, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32* %1, metadata !7626, metadata !DIExpression()), !dbg !7629
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7630
  call void @llvm.dbg.value(metadata i32 %3, metadata !7627, metadata !DIExpression()), !dbg !7629
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %4, metadata !7628, metadata !DIExpression()), !dbg !7629
  %5 = icmp ne i32 %3, %4, !dbg !7632
  %6 = sext i1 %5 to i32, !dbg !7633
  ret i32 %6, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32 %1, metadata !7640, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32* %3, metadata !7642, metadata !DIExpression()), !dbg !7643
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7644
  ret i32 %5, !dbg !7645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7648, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %2, metadata !7650, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32* %3, metadata !7651, metadata !DIExpression()), !dbg !7652
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7653, !srcloc !7655
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7656
  ret i32 %5, !dbg !7657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7660, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %1, metadata !7661, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %2, metadata !7662, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32* %3, metadata !7663, metadata !DIExpression()), !dbg !7668
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7669
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7671
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7671
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7671
  br i1 %11, label %33, label %12, !dbg !7671

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7668
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7668
  call void @llvm.dbg.value(metadata i8* %14, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %13, metadata !7664, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %1, metadata !7665, metadata !DIExpression()), !dbg !7668
  br label %15, !dbg !7672

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7674
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7668
  call void @llvm.dbg.value(metadata i8* %17, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %16, metadata !7665, metadata !DIExpression()), !dbg !7668
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7675
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7678
  call void @llvm.dbg.value(metadata i8* %19, metadata !7666, metadata !DIExpression()), !dbg !7668
  %20 = load i8, i8* %17, align 1, !dbg !7679
  %21 = zext i8 %20 to i32, !dbg !7680
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7675
  %23 = icmp eq i32 %22, -1, !dbg !7681
  br i1 %23, label %30, label %24, !dbg !7682

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7683
  call void @llvm.dbg.value(metadata i32 %25, metadata !7665, metadata !DIExpression()), !dbg !7668
  %26 = icmp eq i32 %25, 0, !dbg !7684
  br i1 %26, label %27, label %15, !dbg !7685, !llvm.loop !7686

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %28, metadata !7664, metadata !DIExpression()), !dbg !7668
  %29 = icmp eq i32 %28, 0, !dbg !7689
  br i1 %29, label %30, label %12, !dbg !7690, !llvm.loop !7691

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7668
  call void @llvm.dbg.value(metadata i32 %31, metadata !7664, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.label(metadata !7667), !dbg !7694
  %32 = sub i32 %2, %31, !dbg !7695
  br label %33, !dbg !7696

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7668
  ret i32 %34, !dbg !7697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7702, metadata !DIExpression()), !dbg !7703
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7704
  %3 = icmp eq i32 %2, -1, !dbg !7706
  br i1 %3, label %8, label %4, !dbg !7707

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7708
  %6 = icmp eq i32 %5, -1, !dbg !7709
  %7 = sext i1 %6 to i32, !dbg !7708
  br label %8, !dbg !7710

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7703
  ret i32 %9, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7714, metadata !DIExpression()), !dbg !7715
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7716
  ret void, !dbg !7717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7722, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %1, metadata !7723, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7724, metadata !DIExpression()), !dbg !7728
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7729
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7729
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7729
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %0, metadata !7727, metadata !DIExpression()), !dbg !7728
  %7 = icmp slt i32 %0, %1, !dbg !7730
  br i1 %7, label %8, label %22, !dbg !7733

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7727, metadata !DIExpression()), !dbg !7728
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7734
  %11 = icmp eq i32 %10, 0, !dbg !7734
  br i1 %11, label %19, label %12, !dbg !7737

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7738
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7740
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7740
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7742
  br i1 %15, label %19, label %16, !dbg !7743

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7744
  %18 = load i8*, i8** %17, align 4, !dbg !7744
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7745
  br label %19, !dbg !7746

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %20, metadata !7727, metadata !DIExpression()), !dbg !7728
  %21 = icmp eq i32 %20, %1, !dbg !7730
  br i1 %21, label %22, label %8, !dbg !7733, !llvm.loop !7748

22:                                               ; preds = %19, %3
  ret void, !dbg !7750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7753, metadata !DIExpression()), !dbg !7754
  %2 = shl nuw i32 1, %0, !dbg !7755
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7758
  ret i32 %3, !dbg !7759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  %2 = shl nuw i32 1, %0, !dbg !7766
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7769
  ret void, !dbg !7770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7775
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7780, metadata !DIExpression()), !dbg !7781
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7782
  %3 = and i32 %2, %0, !dbg !7782
  %4 = icmp eq i32 %3, %0, !dbg !7783
  %5 = zext i1 %4 to i32, !dbg !7783
  ret i32 %5, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7789
  ret void, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7795
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7799, metadata !DIExpression()), !dbg !7800
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7801
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7817, metadata !DIExpression()), !dbg !7818
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7819
  ret void, !dbg !7820
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7823, metadata !DIExpression()), !dbg !7824
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7829, metadata !DIExpression()), !dbg !7830
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7835, metadata !DIExpression()), !dbg !7836
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7847, metadata !DIExpression()), !dbg !7848
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7849
  ret i32 0, !dbg !7850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !698 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !702, metadata !DIExpression()), !dbg !7851
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7852
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7854
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7856
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7858
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7860
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7862
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7864
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !7866
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !7868
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !7870
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !7872
  ret void, !dbg !7874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 0, metadata !7878, metadata !DIExpression()), !dbg !7879
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7880
  %3 = load i32, i32* %2, align 4, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %3, metadata !7878, metadata !DIExpression()), !dbg !7879
  %4 = shl nuw i32 1, %0, !dbg !7881
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7882
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7889
  %3 = or i32 %2, %0, !dbg !7889
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7889
  ret void, !dbg !7890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7893, metadata !DIExpression()), !dbg !7894
  %2 = icmp slt i32 %0, 32, !dbg !7895
  br i1 %2, label %3, label %5, !dbg !7897

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7898
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7900
  br label %5, !dbg !7901

5:                                                ; preds = %1, %3
  ret void, !dbg !7902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = xor i32 %0, -1, !dbg !7907
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7907
  %4 = and i32 %3, %2, !dbg !7907
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7913, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %1, metadata !7914, metadata !DIExpression()), !dbg !7915
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7916

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7917
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7919
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7920
  br label %11, !dbg !7921

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7922
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7923
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7924
  br label %11, !dbg !7925

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7926
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7927
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7928
  br label %11, !dbg !7929

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7930
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7931
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7932
  br label %11, !dbg !7933

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = xor i32 %0, -1, !dbg !7939
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7939
  %4 = and i32 %3, %2, !dbg !7939
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7939
  ret void, !dbg !7940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = xor i32 %0, -1, !dbg !7945
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7945
  %4 = and i32 %3, %2, !dbg !7945
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7945
  ret void, !dbg !7946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7949, metadata !DIExpression()), !dbg !7950
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7951
  %3 = or i32 %2, %0, !dbg !7951
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7951
  ret void, !dbg !7952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7955, metadata !DIExpression()), !dbg !7956
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7957
  %3 = or i32 %2, %0, !dbg !7957
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7963, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7964, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %2, metadata !7965, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7966, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7968, metadata !DIExpression()), !dbg !7969
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7970
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7970
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7972
  br i1 %6, label %7, label %9, !dbg !7973

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7974
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7975
  store i8* %2, i8** %8, align 4, !dbg !7976
  br label %9, !dbg !7977

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7969
  ret i32 %10, !dbg !7978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7981, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7982, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7983, metadata !DIExpression()), !dbg !7984
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7985
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7986
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7987
  store i8* null, i8** %3, align 4, !dbg !7988
  ret void, !dbg !7989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7992, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %1, metadata !7993, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata i8* %1, metadata !7994, metadata !DIExpression()), !dbg !7997
  %3 = bitcast i8* %1 to i32*, !dbg !7998
  %4 = load i32, i32* %3, align 4, !dbg !7998
  %5 = add i32 %4, -169, !dbg !7998
  %6 = icmp ult i32 %5, -121, !dbg !7998
  br i1 %6, label %15, label %7, !dbg !8000

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8001
  %9 = inttoptr i32 %8 to i32*, !dbg !8002
  call void @llvm.dbg.value(metadata i32* %9, metadata !7995, metadata !DIExpression()), !dbg !7997
  %10 = load volatile i32, i32* %9, align 4, !dbg !8003
  call void @llvm.dbg.value(metadata i32 %10, metadata !7996, metadata !DIExpression()), !dbg !7997
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8004
  %12 = bitcast i8* %11 to i32*, !dbg !8004
  %13 = load i32, i32* %12, align 4, !dbg !8004
  %14 = or i32 %13, %10, !dbg !8005
  call void @llvm.dbg.value(metadata i32 %14, metadata !7996, metadata !DIExpression()), !dbg !7997
  store volatile i32 %14, i32* %9, align 4, !dbg !8006
  br label %15, !dbg !8007

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7997
  ret i32 %16, !dbg !8008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8009 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8011, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %1, metadata !8012, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8016
  %3 = bitcast i8* %1 to i32*, !dbg !8017
  %4 = load i32, i32* %3, align 4, !dbg !8017
  %5 = add i32 %4, -169, !dbg !8017
  %6 = icmp ult i32 %5, -121, !dbg !8017
  br i1 %6, label %16, label %7, !dbg !8019

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8020
  %9 = inttoptr i32 %8 to i32*, !dbg !8021
  call void @llvm.dbg.value(metadata i32* %9, metadata !8014, metadata !DIExpression()), !dbg !8016
  %10 = load volatile i32, i32* %9, align 4, !dbg !8022
  call void @llvm.dbg.value(metadata i32 %10, metadata !8015, metadata !DIExpression()), !dbg !8016
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8023
  %12 = bitcast i8* %11 to i32*, !dbg !8023
  %13 = load i32, i32* %12, align 4, !dbg !8023
  %14 = xor i32 %13, -1, !dbg !8024
  %15 = and i32 %10, %14, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %15, metadata !8015, metadata !DIExpression()), !dbg !8016
  store volatile i32 %15, i32* %9, align 4, !dbg !8026
  br label %16, !dbg !8027

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8016
  ret i32 %17, !dbg !8028
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8031, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i8* %1, metadata !8032, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i32* %2, metadata !8033, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i8* %1, metadata !8034, metadata !DIExpression()), !dbg !8039
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %4, metadata !8035, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i32 undef, metadata !8036, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i32 undef, metadata !8037, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i32 %4, metadata !8038, metadata !DIExpression()), !dbg !8039
  %5 = bitcast i8* %1 to i32*, !dbg !8041
  %6 = load i32, i32* %5, align 4, !dbg !8041
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8042

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %8, metadata !8036, metadata !DIExpression()), !dbg !8039
  br label %19, !dbg !8044

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %10, metadata !8037, metadata !DIExpression()), !dbg !8039
  br label %19, !dbg !8047

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8048
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 4) #26, !dbg !8049
  br label %19, !dbg !8050

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8051
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !8052
  br label %19, !dbg !8053

17:                                               ; preds = %3
  br label %19, !dbg !8054

18:                                               ; preds = %3
  br label %19, !dbg !8055

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8056
  br label %21, !dbg !8057

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8039
  ret i32 %22, !dbg !8057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8060, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i8* %1, metadata !8061, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i8* %2, metadata !8062, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i8* %1, metadata !8063, metadata !DIExpression()), !dbg !8068
  %4 = bitcast i8* %1 to i32*, !dbg !8069
  %5 = load i32, i32* %4, align 4, !dbg !8069
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8070
  call void @llvm.dbg.value(metadata i32 %6, metadata !8067, metadata !DIExpression()), !dbg !8068
  %7 = icmp slt i32 %6, 0, !dbg !8071
  br i1 %7, label %22, label %8, !dbg !8073

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8063, metadata !DIExpression()), !dbg !8068
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8074
  %10 = bitcast i8* %9 to i32*, !dbg !8074
  %11 = load i32, i32* %10, align 4, !dbg !8074
  %12 = lshr i32 %11, 16, !dbg !8074
  %13 = and i32 %12, 7, !dbg !8074
  %14 = lshr i32 %11, 8, !dbg !8075
  %15 = and i32 %14, 31, !dbg !8075
  %16 = shl i32 %13, %15, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %16, metadata !8066, metadata !DIExpression()), !dbg !8068
  %17 = and i32 %11, 255, !dbg !8077
  %18 = or i32 %17, 1073887232, !dbg !8078
  %19 = inttoptr i32 %18 to i32*, !dbg !8079
  call void @llvm.dbg.value(metadata i32* %19, metadata !8064, metadata !DIExpression()), !dbg !8068
  %20 = load volatile i32, i32* %19, align 4, !dbg !8080
  call void @llvm.dbg.value(metadata i32 %20, metadata !8065, metadata !DIExpression()), !dbg !8068
  %21 = or i32 %16, %20, !dbg !8081
  call void @llvm.dbg.value(metadata i32 %21, metadata !8065, metadata !DIExpression()), !dbg !8068
  store volatile i32 %21, i32* %19, align 4, !dbg !8082
  br label %22, !dbg !8083

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8068
  ret i32 %23, !dbg !8084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8089, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i32 0, metadata !8090, metadata !DIExpression()), !dbg !8091
  %2 = add i32 %0, -1, !dbg !8092
  %3 = icmp ult i32 %2, 6, !dbg !8092
  br i1 %3, label %4, label %7, !dbg !8092

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8092
  %6 = load i32, i32* %5, align 4, !dbg !8092
  call void @llvm.dbg.value(metadata i32 %6, metadata !8090, metadata !DIExpression()), !dbg !8091
  br label %7, !dbg !8093

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8091
  ret i32 %8, !dbg !8094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %1, metadata !8100, metadata !DIExpression()), !dbg !8101
  %3 = udiv i32 %0, %1, !dbg !8102
  ret i32 %3, !dbg !8103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8108, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 16, metadata !8109, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 336, metadata !8110, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 %1, metadata !8111, metadata !DIExpression()), !dbg !8112
  %3 = mul i32 %0, 336, !dbg !8113
  %4 = shl nsw i32 %1, 4, !dbg !8114
  %5 = udiv i32 %3, %4, !dbg !8115
  ret i32 %5, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8119, metadata !DIExpression()), !dbg !8122
  tail call void @config_enable_default_clocks() #27, !dbg !8123
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8124
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8124
  %4 = lshr i32 %3, 4, !dbg !8124
  %5 = and i32 %4, 15, !dbg !8124
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8124
  %7 = load i8, i8* %6, align 1, !dbg !8124
  %8 = zext i8 %7 to i32, !dbg !8124
  %9 = lshr i32 %2, %8, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %9, metadata !8120, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8121, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8122
  %10 = icmp ult i32 %9, 84000000, !dbg !8125
  br i1 %10, label %11, label %13, !dbg !8127

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8128
  br label %13, !dbg !8130

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8131
  tail call fastcc void @set_up_plls() #26, !dbg !8132
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8133
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8136
  br label %14, !dbg !8137

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8138
  %16 = icmp eq i32 %15, 8, !dbg !8139
  br i1 %16, label %17, label %14, !dbg !8137, !llvm.loop !8140

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8142
  br i1 %18, label %19, label %21, !dbg !8144

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8145
  br label %21, !dbg !8147

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8148
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8149
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8150
  ret i32 0, !dbg !8151
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8152 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8154
  %2 = and i32 %1, 240, !dbg !8154
  ret i32 %2, !dbg !8155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8156 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8157
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8162
  br label %1, !dbg !8163

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8164
  %3 = icmp eq i32 %2, 1, !dbg !8165
  br i1 %3, label %4, label %1, !dbg !8163, !llvm.loop !8166

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8168
  br label %5, !dbg !8171

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8172
  %7 = icmp eq i32 %6, 1, !dbg !8173
  br i1 %7, label %8, label %5, !dbg !8171, !llvm.loop !8174

8:                                                ; preds = %5
  ret void, !dbg !8176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8177 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8178
  %2 = icmp eq i32 %1, 8, !dbg !8180
  br i1 %2, label %3, label %4, !dbg !8181

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8182
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8184
  br label %4, !dbg !8185

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8186
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8187
  %6 = and i32 %5, -196609, !dbg !8187
  %7 = or i32 %6, 65536, !dbg !8187
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8187
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8188
  %9 = and i32 %8, -251658241, !dbg !8188
  %10 = or i32 %9, 117440512, !dbg !8188
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8188
  tail call void @config_pll_sysclock() #27, !dbg !8189
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8190
  br label %11, !dbg !8191

11:                                               ; preds = %11, %4
  %12 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8192
  %13 = icmp eq i32 %12, 1, !dbg !8193
  br i1 %13, label %14, label %11, !dbg !8191, !llvm.loop !8194

14:                                               ; preds = %11
  ret void, !dbg !8196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8197 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8201
  %2 = and i32 %1, -241, !dbg !8201
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8206
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8207
  %3 = and i32 %2, -4, !dbg !8207
  %4 = or i32 %3, %0, !dbg !8207
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8207
  ret void, !dbg !8208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8210
  %2 = and i32 %1, 12, !dbg !8210
  ret i32 %2, !dbg !8211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8212 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8214, metadata !DIExpression()), !dbg !8215
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8216
  %2 = and i32 %1, -7169, !dbg !8216
  %3 = or i32 %2, 4096, !dbg !8216
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8216
  ret void, !dbg !8217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8218 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8220, metadata !DIExpression()), !dbg !8221
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8222
  %2 = and i32 %1, -57345, !dbg !8222
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8224 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8225
  %2 = icmp eq i32 %1, 1, !dbg !8227
  br i1 %2, label %7, label %3, !dbg !8228

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8229
  br label %4, !dbg !8231

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8232
  %6 = icmp eq i32 %5, 1, !dbg !8233
  br i1 %6, label %7, label %4, !dbg !8231, !llvm.loop !8234

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8236
  br label %8, !dbg !8237

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8238
  %10 = icmp eq i32 %9, 0, !dbg !8239
  br i1 %10, label %11, label %8, !dbg !8237, !llvm.loop !8240

11:                                               ; preds = %8
  ret void, !dbg !8242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8243 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8244
  %2 = and i32 %1, -16777217, !dbg !8244
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8246 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8247
  %2 = or i32 %1, 16777216, !dbg !8247
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8247
  ret void, !dbg !8248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8249 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8250
  %2 = lshr i32 %1, 25, !dbg !8251
  %3 = and i32 %2, 1, !dbg !8251
  ret i32 %3, !dbg !8252
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8253 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8254
  %2 = lshr i32 %1, 1, !dbg !8255
  %3 = and i32 %2, 1, !dbg !8255
  ret i32 %3, !dbg !8256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8257 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8258
  %2 = or i32 %1, 1, !dbg !8258
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8260 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8261
  %2 = and i32 %1, -262145, !dbg !8261
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8261
  ret void, !dbg !8262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8263 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8264
  %2 = or i32 %1, 65536, !dbg !8264
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8264
  ret void, !dbg !8265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8266 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8267
  %2 = lshr i32 %1, 17, !dbg !8268
  %3 = and i32 %2, 1, !dbg !8268
  ret i32 %3, !dbg !8269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8270 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8271
  %2 = or i32 %1, 1, !dbg !8271
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8271
  ret void, !dbg !8272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8273 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8274
  %2 = lshr i32 %1, 1, !dbg !8275
  %3 = and i32 %2, 1, !dbg !8275
  ret i32 %3, !dbg !8276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8277 {
  ret i32 16000000, !dbg !8279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8283 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8284
  ret void, !dbg !8285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8286 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 16, metadata !8291, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 336, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 65536, metadata !8293, metadata !DIExpression()), !dbg !8294
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8295
  %2 = and i32 %1, -4227072, !dbg !8295
  %3 = or i32 %2, 4215824, !dbg !8295
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8295
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8296
  %5 = and i32 %4, -196609, !dbg !8296
  %6 = or i32 %5, 65536, !dbg !8296
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8298 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8299
  ret void, !dbg !8300
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8301 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8304, metadata !DIExpression()), !dbg !8306
  %2 = bitcast i32* %1 to i8*, !dbg !8307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8307
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8305, metadata !DIExpression()), !dbg !8308
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8309
  %4 = or i32 %3, 268435456, !dbg !8309
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8309
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8310
  %6 = and i32 %5, 268435456, !dbg !8310
  store volatile i32 %6, i32* %1, align 4, !dbg !8311
  %7 = load volatile i32, i32* %1, align 4, !dbg !8312
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8313
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8316, metadata !DIExpression()), !dbg !8317
  %2 = tail call fastcc zeroext i1 @device_is_ready.42() #26, !dbg !8318
  br i1 %2, label %3, label %4, !dbg !8320

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8321
  br label %4, !dbg !8322

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8317
  ret i32 %5, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.42() unnamed_addr #1 !dbg !8324 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8328, metadata !DIExpression()), !dbg !8329
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8330, !srcloc !8332
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #26, !dbg !8333
  ret i1 %1, !dbg !8334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8335 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8336
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8337
  ret void, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = icmp eq i32 %0, 10, !dbg !8343
  br i1 %2, label %3, label %4, !dbg !8345

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext 13) #26, !dbg !8346
  br label %4, !dbg !8348

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8349
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext %5) #26, !dbg !8350
  ret i32 %0, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.43(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8352 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i8 %0, metadata !8355, metadata !DIExpression()), !dbg !8356
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8357, !srcloc !8359
  tail call fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) #26, !dbg !8360
  ret void, !dbg !8361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8362 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8364, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i8 %0, metadata !8365, metadata !DIExpression()), !dbg !8367
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_47, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8368
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8366, metadata !DIExpression()), !dbg !8367
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8369
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8369
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_47, i8 noundef zeroext %0) #27, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8372 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_47, metadata !8374, metadata !DIExpression()), !dbg !8375
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_47) #27, !dbg !8376
  ret i1 %1, !dbg !8377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8378 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8425, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8426, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8427, metadata !DIExpression()), !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8430 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8432, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i8 %1, metadata !8433, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %2, metadata !8434, metadata !DIExpression()), !dbg !8437
  %5 = bitcast i32* %4 to i8*, !dbg !8438
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8438
  call void @llvm.dbg.value(metadata i32* %4, metadata !8436, metadata !DIExpression(DW_OP_deref)), !dbg !8437
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8439
  call void @llvm.dbg.value(metadata i32 %6, metadata !8435, metadata !DIExpression()), !dbg !8437
  %7 = icmp eq i32 %6, 0, !dbg !8440
  br i1 %7, label %8, label %31, !dbg !8442

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8435, metadata !DIExpression()), !dbg !8437
  %9 = and i32 %2, 131072, !dbg !8443
  %10 = icmp eq i32 %9, 0, !dbg !8445
  br i1 %10, label %28, label %11, !dbg !8446

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8447
  %13 = icmp eq i32 %12, 0, !dbg !8450
  br i1 %13, label %18, label %14, !dbg !8451

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8452
  %16 = shl nuw i32 1, %15, !dbg !8452
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8454
  br label %25, !dbg !8455

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8456
  %20 = icmp eq i32 %19, 0, !dbg !8458
  %21 = zext i8 %1 to i32, !dbg !8437
  br i1 %20, label %25, label %22, !dbg !8459

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8460
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8462
  br label %25, !dbg !8463

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8464
  %27 = load i32, i32* %4, align 4, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %30, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8466
  br label %31, !dbg !8467

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8464
  %30 = load i32, i32* %4, align 4, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %30, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8466
  call void @llvm.dbg.value(metadata i32 0, metadata !8435, metadata !DIExpression()), !dbg !8437
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8468
  ret i32 %6, !dbg !8468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8473, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32* %1, metadata !8474, metadata !DIExpression()), !dbg !8478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8479
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8479
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8475, metadata !DIExpression()), !dbg !8478
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8480
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8480
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8480
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8477, metadata !DIExpression()), !dbg !8478
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8481
  store i32 %9, i32* %1, align 4, !dbg !8482
  ret i32 0, !dbg !8483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8486, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.value(metadata i32 %1, metadata !8487, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.value(metadata i32 %2, metadata !8488, metadata !DIExpression()), !dbg !8492
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8493
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8493
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8493
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8489, metadata !DIExpression()), !dbg !8492
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8494
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8494
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8494
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8490, metadata !DIExpression()), !dbg !8492
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %10, metadata !8491, metadata !DIExpression()), !dbg !8492
  %11 = xor i32 %1, -1, !dbg !8496
  %12 = and i32 %10, %11, !dbg !8497
  %13 = and i32 %2, %1, !dbg !8498
  %14 = or i32 %12, %13, !dbg !8499
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8500
  ret i32 0, !dbg !8501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8504, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32 %1, metadata !8505, metadata !DIExpression()), !dbg !8508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8509
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8509
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8506, metadata !DIExpression()), !dbg !8508
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8510
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8510
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8510
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8507, metadata !DIExpression()), !dbg !8508
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8511
  store volatile i32 %1, i32* %9, align 4, !dbg !8511
  ret i32 0, !dbg !8512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8515, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %1, metadata !8516, metadata !DIExpression()), !dbg !8519
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8520
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8520
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8520
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8517, metadata !DIExpression()), !dbg !8519
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8521
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8521
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8521
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8518, metadata !DIExpression()), !dbg !8519
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8522
  ret i32 0, !dbg !8523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8526, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.value(metadata i32 %1, metadata !8527, metadata !DIExpression()), !dbg !8530
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8531
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8531
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8528, metadata !DIExpression()), !dbg !8530
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8532
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8532
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8532
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8529, metadata !DIExpression()), !dbg !8530
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8533
  %10 = load volatile i32, i32* %9, align 4, !dbg !8533
  %11 = xor i32 %10, %1, !dbg !8533
  store volatile i32 %11, i32* %9, align 4, !dbg !8533
  ret i32 0, !dbg !8534
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8537, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i8 %1, metadata !8538, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i32 %2, metadata !8539, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i32 %3, metadata !8540, metadata !DIExpression()), !dbg !8547
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8548
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8548
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8548
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8541, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i8* undef, metadata !8542, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i32 0, metadata !8544, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.value(metadata i32 0, metadata !8545, metadata !DIExpression()), !dbg !8547
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8549

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8550
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8554
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8555
  %12 = load i32, i32* %11, align 4, !dbg !8555
  %13 = icmp eq i32 %10, %12, !dbg !8556
  br i1 %13, label %14, label %29, !dbg !8557

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8558
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8560
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8561
  br label %29, !dbg !8562

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8563
  %17 = load i8*, i8** %16, align 4, !dbg !8563
  call void @llvm.dbg.value(metadata i8* %17, metadata !8542, metadata !DIExpression()), !dbg !8547
  %18 = zext i8 %1 to i32, !dbg !8564
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8566
  %20 = icmp eq i32 %19, 0, !dbg !8567
  br i1 %20, label %21, label %29, !dbg !8568

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8569
  %23 = load i32, i32* %22, align 4, !dbg !8569
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8570
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8571

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8544, metadata !DIExpression()), !dbg !8547
  br label %27, !dbg !8572

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8544, metadata !DIExpression()), !dbg !8547
  br label %27, !dbg !8574

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8544, metadata !DIExpression()), !dbg !8547
  br label %27, !dbg !8575

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8547
  call void @llvm.dbg.value(metadata i32 %28, metadata !8544, metadata !DIExpression()), !dbg !8547
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8576
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8577
  br label %29, !dbg !8577

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8547
  call void @llvm.dbg.value(metadata i32 %30, metadata !8545, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.label(metadata !8546), !dbg !8578
  ret i32 %30, !dbg !8579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8582, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8583, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i1 %2, metadata !8584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8586
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8587
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8587
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8587
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8585, metadata !DIExpression()), !dbg !8586
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8588
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8589
  ret i32 %8, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8591 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8597, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i1 %2, metadata !8599, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8600
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8601
  br i1 %4, label %10, label %5, !dbg !8603

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8604
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8607
  %8 = or i1 %7, %2, !dbg !8608
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8608
  br i1 %2, label %11, label %13, !dbg !8608

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8609

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8610
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8613
  br label %13, !dbg !8614

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8600
  ret i32 %14, !dbg !8615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8616 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8622
  %3 = icmp eq %struct._snode* %2, null, !dbg !8622
  ret i1 %3, !dbg !8622
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8627, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8628, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8629, metadata !DIExpression()), !dbg !8631
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8632
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8629, metadata !DIExpression()), !dbg !8631
  %4 = icmp eq %struct._snode* %3, null, !dbg !8634
  br i1 %4, label %15, label %5, !dbg !8632

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8629, metadata !DIExpression()), !dbg !8631
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8636
  br i1 %6, label %9, label %11, !dbg !8639

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8629, metadata !DIExpression()), !dbg !8631
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8636
  br i1 %8, label %9, label %11, !dbg !8639, !llvm.loop !8640

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8641
  br label %15, !dbg !8641

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8629, metadata !DIExpression()), !dbg !8631
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8634
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8630, metadata !DIExpression()), !dbg !8631
  %14 = icmp eq %struct._snode* %13, null, !dbg !8634
  br i1 %14, label %15, label %7, !dbg !8632, !llvm.loop !8640

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8648, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8649, metadata !DIExpression()), !dbg !8650
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8651
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8651
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8651
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8652
  %5 = icmp eq %struct._snode* %4, null, !dbg !8652
  br i1 %5, label %6, label %8, !dbg !8651

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8654
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8654
  br label %8, !dbg !8654

8:                                                ; preds = %6, %2
  ret void, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8660, metadata !DIExpression()), !dbg !8661
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8662
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8662
  ret %struct._snode* %3, !dbg !8663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8664 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8669, metadata !DIExpression()), !dbg !8670
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8671
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8672
  ret void, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8676, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8677, metadata !DIExpression()), !dbg !8678
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8679
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8680
  ret void, !dbg !8681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8682 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8684, metadata !DIExpression()), !dbg !8685
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8686
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8686
  ret %struct._snode* %3, !dbg !8687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8688 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8690, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8691, metadata !DIExpression()), !dbg !8692
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8693
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8694
  ret void, !dbg !8695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8696 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8700, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8701, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8702, metadata !DIExpression()), !dbg !8703
  %4 = icmp eq %struct._snode* %1, null, !dbg !8704
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8706
  br i1 %4, label %6, label %11, !dbg !8707

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8708
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8710
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8710
  br i1 %8, label %9, label %15, !dbg !8708

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8712
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8712
  br label %15, !dbg !8712

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8714
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8716
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8716
  br i1 %13, label %14, label %15, !dbg !8714

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8718
  br label %15, !dbg !8718

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8707
  ret void, !dbg !8707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8720 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = icmp eq %struct._snode* %0, null, !dbg !8726
  br i1 %2, label %5, label %3, !dbg !8726

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8726
  br label %5, !dbg !8726

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8726
  ret %struct._snode* %6, !dbg !8726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8727 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8729, metadata !DIExpression()), !dbg !8730
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8731
  ret %struct._snode* %2, !dbg !8731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8732 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8734, metadata !DIExpression()), !dbg !8735
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8736
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8736
  ret %struct._snode* %3, !dbg !8737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8740, metadata !DIExpression()), !dbg !8743
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8744, !range !8745
  call void @llvm.dbg.value(metadata i32 %2, metadata !8741, metadata !DIExpression()), !dbg !8743
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %3, metadata !8742, metadata !DIExpression()), !dbg !8743
  ret i32 %3, !dbg !8747
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8750, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i8* %1, metadata !8751, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i8* %1, metadata !8752, metadata !DIExpression()), !dbg !8753
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8754
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8754
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8755
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8755
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8755
  %8 = shl nuw i32 1, %0, !dbg !8756
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8757
  ret void, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8759 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8763, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8765, metadata !DIExpression()), !dbg !8769
  %4 = bitcast i64* %3 to i8*, !dbg !8770
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8770
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8767, metadata !DIExpression()), !dbg !8769
  store i64 70368744177732, i64* %3, align 8, !dbg !8771
  call void @llvm.dbg.value(metadata i64* %3, metadata !8767, metadata !DIExpression(DW_OP_deref)), !dbg !8769
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8772
  call void @llvm.dbg.value(metadata i32 %5, metadata !8768, metadata !DIExpression()), !dbg !8769
  %6 = icmp eq i32 %5, 0, !dbg !8773
  br i1 %6, label %7, label %8, !dbg !8775

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8776
  br label %8, !dbg !8777

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8778
  ret void, !dbg !8778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8779 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8781, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata i8* %0, metadata !8782, metadata !DIExpression()), !dbg !8784
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8785
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8783, metadata !DIExpression()), !dbg !8784
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8786
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8786
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !8787
  ret i32 %5, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 %1, metadata !8792, metadata !DIExpression()), !dbg !8794
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8795
  call void @llvm.dbg.value(metadata i32 %3, metadata !8793, metadata !DIExpression()), !dbg !8794
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8796
  ret void, !dbg !8797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8802, metadata !DIExpression()), !dbg !8803
  %2 = sdiv i32 %0, 4, !dbg !8804
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8805
  %6 = add nsw i32 %5, 16, !dbg !8806
  %7 = shl i32 15, %6, !dbg !8807
  %8 = or i32 %7, %2, !dbg !8808
  ret i32 %8, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8814, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8816
  %3 = and i32 %1, 255, !dbg !8817
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8817
  %5 = load volatile i32, i32* %4, align 4, !dbg !8817
  %6 = lshr i32 %1, 16, !dbg !8817
  %7 = xor i32 %6, -1, !dbg !8817
  %8 = and i32 %5, %7, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %6, metadata !8818, metadata !DIExpression()) #25, !dbg !8822
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8824, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %9, metadata !8821, metadata !DIExpression()) #25, !dbg !8822
  call void @llvm.dbg.value(metadata i32 %9, metadata !8826, metadata !DIExpression()) #25, !dbg !8831
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8833, !range !4026
  %11 = shl i32 %0, %10, !dbg !8817
  %12 = or i32 %11, %8, !dbg !8817
  store volatile i32 %12, i32* %4, align 4, !dbg !8817
  ret void, !dbg !8834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8835 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8839, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8840, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i32 %2, metadata !8841, metadata !DIExpression()), !dbg !8844
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8845
  %5 = icmp eq %struct._snode* %4, null, !dbg !8845
  br i1 %5, label %21, label %6, !dbg !8845

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8847
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8842, metadata !DIExpression()), !dbg !8844
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8848
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8848
  %11 = load i32, i32* %10, align 4, !dbg !8848
  %12 = and i32 %11, %2, !dbg !8852
  %13 = icmp eq i32 %12, 0, !dbg !8852
  br i1 %13, label %19, label %14, !dbg !8853

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8842, metadata !DIExpression()), !dbg !8844
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8854
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8854
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8854
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8856
  br label %19, !dbg !8857

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8842, metadata !DIExpression()), !dbg !8844
  %20 = icmp eq %struct._snode* %8, null, !dbg !8858
  br i1 %20, label %21, label %6, !dbg !8858

21:                                               ; preds = %19, %3
  ret void, !dbg !8859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8862, metadata !DIExpression()), !dbg !8863
  %2 = and i32 %0, 255, !dbg !8864
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8864
  %4 = load volatile i32, i32* %3, align 4, !dbg !8864
  %5 = lshr i32 %0, 16, !dbg !8864
  %6 = and i32 %4, %5, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %5, metadata !8818, metadata !DIExpression()) #25, !dbg !8865
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8867, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %7, metadata !8821, metadata !DIExpression()) #25, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %7, metadata !8826, metadata !DIExpression()) #25, !dbg !8868
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8870, !range !4026
  %9 = lshr i32 %6, %8, !dbg !8871
  ret i32 %9, !dbg !8872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata i32 %1, metadata !8879, metadata !DIExpression()), !dbg !8880
  %3 = shl i32 %1, 16, !dbg !8881
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8881
  store volatile i32 %3, i32* %4, align 4, !dbg !8881
  ret void, !dbg !8882
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8887, metadata !DIExpression()), !dbg !8888
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8889
  %3 = load volatile i32, i32* %2, align 4, !dbg !8889
  ret i32 %3, !dbg !8890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8891 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8893, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %1, metadata !8894, metadata !DIExpression()), !dbg !8895
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8896
  store volatile i32 %1, i32* %3, align 4, !dbg !8896
  ret void, !dbg !8897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8898 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8900, metadata !DIExpression()), !dbg !8901
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8902
  %3 = load volatile i32, i32* %2, align 4, !dbg !8902
  ret i32 %3, !dbg !8903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32* %1, metadata !8909, metadata !DIExpression()), !dbg !8910
  %3 = and i32 %0, 131072, !dbg !8911
  %4 = icmp eq i32 %3, 0, !dbg !8913
  br i1 %4, label %22, label %5, !dbg !8914

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8915
  %6 = and i32 %0, 2, !dbg !8917
  %7 = icmp eq i32 %6, 0, !dbg !8919
  br i1 %7, label %11, label %8, !dbg !8920

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8921
  %10 = icmp eq i32 %9, 0, !dbg !8921
  br i1 %10, label %33, label %11, !dbg !8924

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8925
  store i32 %12, i32* %1, align 4, !dbg !8925
  %13 = and i32 %0, 16, !dbg !8926
  %14 = icmp eq i32 %13, 0, !dbg !8928
  br i1 %14, label %17, label %15, !dbg !8929

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8930
  br label %31, !dbg !8932

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8933
  %19 = icmp eq i32 %18, 0, !dbg !8935
  br i1 %19, label %33, label %20, !dbg !8936

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8937
  br label %31, !dbg !8939

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8940
  %24 = icmp eq i32 %23, 0, !dbg !8942
  br i1 %24, label %31, label %25, !dbg !8943

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8944
  %27 = icmp eq i32 %26, 0, !dbg !8947
  br i1 %27, label %28, label %31, !dbg !8948

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8949
  br label %33, !dbg !8950

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8910
  ret i32 %34, !dbg !8950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8955, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %1, metadata !8956, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8957, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %3, metadata !8958, metadata !DIExpression()), !dbg !8966
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8967
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8967
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8967
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8959, metadata !DIExpression()), !dbg !8966
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8968
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8968
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8960, metadata !DIExpression()), !dbg !8966
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !8969
  call void @llvm.dbg.value(metadata i32 %11, metadata !8961, metadata !DIExpression()), !dbg !8966
  %12 = and i32 %2, 48, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %12, metadata !8962, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8964, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8965, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8966
  %13 = lshr i32 %2, 6, !dbg !8971
  %14 = and i32 %13, 1, !dbg !8971
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !8972
  %15 = lshr i32 %2, 7, !dbg !8973
  %16 = and i32 %15, 3, !dbg !8973
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !8974
  %17 = lshr i32 %2, 9, !dbg !8975
  %18 = and i32 %17, 3, !dbg !8975
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !8976
  %19 = icmp eq i32 %12, 32, !dbg !8977
  br i1 %19, label %20, label %24, !dbg !8979

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8980
  br i1 %21, label %22, label %23, !dbg !8983

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8984
  br label %24, !dbg !8986

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8987
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8989
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !8990
  ret void, !dbg !8991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !8992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8994, metadata !DIExpression()), !dbg !8996
  %2 = shl nuw i32 1, %0, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8995, metadata !DIExpression()), !dbg !8996
  ret i32 %2, !dbg !8998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !8999 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9003, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.value(metadata i32 %1, metadata !9004, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.value(metadata i32 %2, metadata !9005, metadata !DIExpression()), !dbg !9006
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9007
  %5 = load volatile i32, i32* %4, align 4, !dbg !9007
  %6 = xor i32 %1, -1, !dbg !9007
  %7 = and i32 %5, %6, !dbg !9007
  %8 = mul i32 %2, %1, !dbg !9007
  %9 = or i32 %7, %8, !dbg !9007
  store volatile i32 %9, i32* %4, align 4, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9009 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9011, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %1, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %2, metadata !9013, metadata !DIExpression()), !dbg !9014
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9015
  %5 = load volatile i32, i32* %4, align 4, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9016
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9018, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9019
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9021, !range !4026
  %8 = shl nuw nsw i32 %7, 1, !dbg !9015
  %9 = shl i32 3, %8, !dbg !9015
  %10 = xor i32 %9, -1, !dbg !9015
  %11 = and i32 %5, %10, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9024
  %12 = shl i32 %2, %8, !dbg !9015
  %13 = or i32 %11, %12, !dbg !9015
  store volatile i32 %13, i32* %4, align 4, !dbg !9015
  ret void, !dbg !9026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9029, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 %1, metadata !9030, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 %2, metadata !9031, metadata !DIExpression()), !dbg !9032
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9033
  %5 = load volatile i32, i32* %4, align 4, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9034
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9036, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9034
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9037
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9039, !range !4026
  %8 = shl nuw nsw i32 %7, 1, !dbg !9033
  %9 = shl i32 3, %8, !dbg !9033
  %10 = xor i32 %9, -1, !dbg !9033
  %11 = and i32 %5, %10, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9042
  %12 = shl i32 %2, %8, !dbg !9033
  %13 = or i32 %11, %12, !dbg !9033
  store volatile i32 %13, i32* %4, align 4, !dbg !9033
  ret void, !dbg !9044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9047, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %1, metadata !9048, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %2, metadata !9049, metadata !DIExpression()), !dbg !9050
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9051
  %5 = load volatile i32, i32* %4, align 4, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9052
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9054, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9055
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9057, !range !4026
  %8 = shl nuw nsw i32 %7, 2, !dbg !9051
  %9 = shl i32 15, %8, !dbg !9051
  %10 = xor i32 %9, -1, !dbg !9051
  %11 = and i32 %5, %10, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9060
  %12 = shl i32 %2, %8, !dbg !9051
  %13 = or i32 %11, %12, !dbg !9051
  store volatile i32 %13, i32* %4, align 4, !dbg !9051
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9063 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9065, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i32 %1, metadata !9066, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i32 %2, metadata !9067, metadata !DIExpression()), !dbg !9068
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9069
  %5 = load volatile i32, i32* %4, align 4, !dbg !9069
  %6 = lshr i32 %1, 8, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %6, metadata !8818, metadata !DIExpression()) #25, !dbg !9070
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9072, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %7, metadata !8821, metadata !DIExpression()) #25, !dbg !9070
  call void @llvm.dbg.value(metadata i32 %7, metadata !8826, metadata !DIExpression()) #25, !dbg !9073
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9075, !range !4026
  %9 = shl nuw nsw i32 %8, 2, !dbg !9069
  %10 = shl i32 15, %9, !dbg !9069
  %11 = xor i32 %10, -1, !dbg !9069
  %12 = and i32 %5, %11, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %6, metadata !8818, metadata !DIExpression()) #25, !dbg !9076
  call void @llvm.dbg.value(metadata i32 %7, metadata !8821, metadata !DIExpression()) #25, !dbg !9076
  call void @llvm.dbg.value(metadata i32 %7, metadata !8826, metadata !DIExpression()) #25, !dbg !9078
  %13 = shl i32 %2, %9, !dbg !9069
  %14 = or i32 %12, %13, !dbg !9069
  store volatile i32 %14, i32* %4, align 4, !dbg !9069
  ret void, !dbg !9080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9083, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %1, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32 %2, metadata !9085, metadata !DIExpression()), !dbg !9086
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9087
  %5 = load volatile i32, i32* %4, align 4, !dbg !9087
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9088
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9090, !srcloc !8825
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9091
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9093, !range !4026
  %8 = shl nuw nsw i32 %7, 1, !dbg !9087
  %9 = shl i32 3, %8, !dbg !9087
  %10 = xor i32 %9, -1, !dbg !9087
  %11 = and i32 %5, %10, !dbg !9087
  call void @llvm.dbg.value(metadata i32 %1, metadata !8818, metadata !DIExpression()) #25, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %6, metadata !8821, metadata !DIExpression()) #25, !dbg !9094
  call void @llvm.dbg.value(metadata i32 %6, metadata !8826, metadata !DIExpression()) #25, !dbg !9096
  %12 = shl i32 %2, %8, !dbg !9087
  %13 = or i32 %11, %12, !dbg !9087
  store volatile i32 %13, i32* %4, align 4, !dbg !9087
  ret void, !dbg !9098
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9104
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9105
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9105
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9105
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9102, metadata !DIExpression()), !dbg !9104
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9106
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9107
  %6 = tail call fastcc zeroext i1 @device_is_ready.53() #26, !dbg !9108
  br i1 %6, label %7, label %11, !dbg !9110

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9111
  call void @llvm.dbg.value(metadata i32 %8, metadata !9103, metadata !DIExpression()), !dbg !9104
  %9 = icmp slt i32 %8, 0, !dbg !9112
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9114
  br label %11, !dbg !9114

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9104
  ret i32 %12, !dbg !9115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53() unnamed_addr #1 !dbg !9116 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9120, metadata !DIExpression()), !dbg !9121
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9122, !srcloc !9124
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54() #26, !dbg !9125
  ret i1 %1, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9131, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i8 1, metadata !9132, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9133, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 0, metadata !9134, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9137
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9137
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9137
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9133, metadata !DIExpression()), !dbg !9136
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9138
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9141
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %7, metadata !9134, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %7, metadata !9134, metadata !DIExpression()), !dbg !9136
  ret i32 %7, !dbg !9143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54() unnamed_addr #1 !dbg !9144 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9146, metadata !DIExpression()), !dbg !9147
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !9148
  ret i1 %1, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9154, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %2, metadata !9156, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %3, metadata !9157, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 0, metadata !9158, metadata !DIExpression()), !dbg !9162
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9163
  %5 = icmp eq i32 %3, 17, !dbg !9164
  br i1 %5, label %6, label %14, !dbg !9165

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %7, metadata !9159, metadata !DIExpression()), !dbg !9167
  %8 = icmp eq i32 %7, 0, !dbg !9168
  %9 = shl nuw i32 1, %1, !dbg !9170
  br i1 %8, label %12, label %10, !dbg !9171

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9172
  br label %14, !dbg !9174

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9175
  br label %14, !dbg !9178

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9179
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9182, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.value(metadata i8* %1, metadata !9183, metadata !DIExpression()), !dbg !9186
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9187
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9187
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9184, metadata !DIExpression()), !dbg !9186
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9188
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9188
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9190
  %9 = icmp eq i32 %8, 0, !dbg !9190
  br i1 %9, label %12, label %10, !dbg !9191

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9192
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9194
  br label %12, !dbg !9195

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9196
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9198
  %15 = icmp eq i32 %14, 0, !dbg !9198
  br i1 %15, label %19, label %16, !dbg !9199

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9200
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9201
  store i8 %18, i8* %1, align 1, !dbg !9202
  br label %19, !dbg !9203

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9186
  ret i32 %20, !dbg !9204
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9207, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8 %1, metadata !9208, metadata !DIExpression()), !dbg !9211
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9212
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9212
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9209, metadata !DIExpression()), !dbg !9211
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9213

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9214
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9217
  %10 = icmp eq i32 %9, 0, !dbg !9217
  br i1 %10, label %18, label %11, !dbg !9218

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9219, !srcloc !9226
  call void @llvm.dbg.value(metadata i32 undef, metadata !9222, metadata !DIExpression()) #25, !dbg !9227
  call void @llvm.dbg.value(metadata i32 undef, metadata !9223, metadata !DIExpression()) #25, !dbg !9227
  call void @llvm.dbg.value(metadata i32 undef, metadata !9210, metadata !DIExpression()), !dbg !9211
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9228
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9230
  %15 = icmp eq i32 %14, 0, !dbg !9230
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9219
  br i1 %15, label %17, label %19, !dbg !9231

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9222, metadata !DIExpression()) #25, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %16, metadata !9210, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 undef, metadata !9232, metadata !DIExpression()) #25, !dbg !9235
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9237, !srcloc !9238
  br label %18, !dbg !9239

18:                                               ; preds = %17, %7
  br label %7, !dbg !9214, !llvm.loop !9240

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9219
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9242
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %20, metadata !9232, metadata !DIExpression()) #25, !dbg !9244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9246, !srcloc !9238
  ret void, !dbg !9247
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9250, metadata !DIExpression()), !dbg !9253
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9254
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9254
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9254
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9251, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata i32 0, metadata !9252, metadata !DIExpression()), !dbg !9253
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9255
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9255
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9257
  %8 = icmp ne i32 %7, 0, !dbg !9257
  %9 = zext i1 %8 to i32, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %9, metadata !9252, metadata !DIExpression()), !dbg !9253
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9259
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9261
  %12 = icmp eq i32 %11, 0, !dbg !9261
  %13 = or i32 %9, 2, !dbg !9262
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9262
  call void @llvm.dbg.value(metadata i32 %14, metadata !9252, metadata !DIExpression()), !dbg !9253
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9263
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9265
  %17 = icmp eq i32 %16, 0, !dbg !9265
  %18 = or i32 %14, 4, !dbg !9266
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %19, metadata !9252, metadata !DIExpression()), !dbg !9253
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9267
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9269
  %22 = icmp eq i32 %21, 0, !dbg !9269
  %23 = or i32 %19, 8, !dbg !9270
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %24, metadata !9252, metadata !DIExpression()), !dbg !9253
  %25 = and i32 %24, 8, !dbg !9271
  %26 = icmp eq i32 %25, 0, !dbg !9271
  br i1 %26, label %29, label %27, !dbg !9273

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9274
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9276
  br label %29, !dbg !9277

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9278
  %31 = icmp eq i32 %30, 0, !dbg !9278
  br i1 %31, label %34, label %32, !dbg !9280

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9281
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9283
  br label %34, !dbg !9284

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9285
  %36 = icmp eq i32 %35, 0, !dbg !9285
  br i1 %36, label %39, label %37, !dbg !9287

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9288
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9290
  br label %39, !dbg !9291

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9292
  %41 = icmp eq i32 %40, 0, !dbg !9292
  br i1 %41, label %44, label %42, !dbg !9294

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9295
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9297
  br label %44, !dbg !9298

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9299
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9300
  ret i32 %24, !dbg !9301
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9304, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9305, metadata !DIExpression()), !dbg !9313
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9314
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9314
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9314
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9306, metadata !DIExpression()), !dbg !9313
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9315
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9315
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9315
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9307, metadata !DIExpression()), !dbg !9313
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9316
  %10 = load i8, i8* %9, align 4, !dbg !9316
  %11 = zext i8 %10 to i32, !dbg !9317
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %12, metadata !9309, metadata !DIExpression()), !dbg !9313
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9319
  %14 = load i8, i8* %13, align 1, !dbg !9319
  %15 = zext i8 %14 to i32, !dbg !9320
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9321
  call void @llvm.dbg.value(metadata i32 %16, metadata !9310, metadata !DIExpression()), !dbg !9313
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9322
  %18 = load i8, i8* %17, align 2, !dbg !9322
  %19 = zext i8 %18 to i32, !dbg !9323
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %20, metadata !9311, metadata !DIExpression()), !dbg !9313
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9325
  %22 = load i8, i8* %21, align 1, !dbg !9325
  %23 = zext i8 %22 to i32, !dbg !9326
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %24, metadata !9312, metadata !DIExpression()), !dbg !9313
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9328

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9330
  br i1 %26, label %69, label %27, !dbg !9332

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9333

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9334
  br i1 %29, label %65, label %30, !dbg !9334

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9336
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9313
  br i1 %31, label %38, label %34, !dbg !9338

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9339
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9339

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9342
  br i1 %37, label %38, label %69, !dbg !9343

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9344
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9345
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9346
  %41 = icmp eq i32 %12, %40, !dbg !9348
  br i1 %41, label %43, label %42, !dbg !9349

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9350
  br label %43, !dbg !9352

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9353
  %45 = icmp eq i32 %16, %44, !dbg !9355
  br i1 %45, label %47, label %46, !dbg !9356

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9357
  br label %47, !dbg !9359

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9360
  %49 = icmp eq i32 %20, %48, !dbg !9362
  br i1 %49, label %51, label %50, !dbg !9363

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9364
  br label %51, !dbg !9366

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9367
  %53 = icmp eq i32 %24, %52, !dbg !9369
  br i1 %53, label %55, label %54, !dbg !9370

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9371
  br label %55, !dbg !9373

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9374
  %57 = load i32, i32* %56, align 4, !dbg !9374
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9376
  %59 = load i32, i32* %58, align 4, !dbg !9376
  %60 = icmp eq i32 %57, %59, !dbg !9377
  br i1 %60, label %63, label %61, !dbg !9378

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9379
  %62 = load i32, i32* %56, align 4, !dbg !9381
  store i32 %62, i32* %58, align 4, !dbg !9382
  br label %63, !dbg !9383

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9384
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9385
  br label %69, !dbg !9386

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9334
  %67 = and i8 %66, 1, !dbg !9334
  %68 = icmp eq i8 %67, 0, !dbg !9334
  br i1 %68, label %30, label %69, !dbg !9334

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9313
  ret i32 %70, !dbg !9387
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9394
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9394
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9394
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9392, metadata !DIExpression()), !dbg !9393
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9395
  %7 = load i32, i32* %6, align 4, !dbg !9395
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9396
  store i32 %7, i32* %8, align 4, !dbg !9397
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9398, !range !9399
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9400
  %11 = trunc i32 %10 to i8, !dbg !9400
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9401
  store i8 %11, i8* %12, align 4, !dbg !9402
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9403, !range !9404
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9405
  %15 = trunc i32 %14 to i8, !dbg !9405
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9406
  store i8 %15, i8* %16, align 1, !dbg !9407
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9408
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9409, !range !9399
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9410
  %20 = trunc i32 %19 to i8, !dbg !9410
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9411
  store i8 %20, i8* %21, align 2, !dbg !9412
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9413, !range !9414
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9415
  %24 = trunc i32 %23 to i8, !dbg !9415
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9416
  store i8 %24, i8* %25, align 1, !dbg !9417
  ret i32 0, !dbg !9418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9421, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i8* %1, metadata !9422, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i32 %2, metadata !9423, metadata !DIExpression()), !dbg !9427
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9428
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9428
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9424, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i8 0, metadata !9425, metadata !DIExpression()), !dbg !9427
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9429
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9429
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9431
  %10 = icmp eq i32 %9, 0, !dbg !9431
  br i1 %10, label %30, label %11, !dbg !9432

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9433, !srcloc !9226
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %13, metadata !9222, metadata !DIExpression()) #25, !dbg !9435
  call void @llvm.dbg.value(metadata i32 undef, metadata !9223, metadata !DIExpression()) #25, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %13, metadata !9426, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i8 0, metadata !9425, metadata !DIExpression()), !dbg !9427
  %14 = icmp sgt i32 %2, 0, !dbg !9436
  br i1 %14, label %15, label %28, !dbg !9437

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9425, metadata !DIExpression()), !dbg !9427
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9438
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9439
  %20 = icmp eq i32 %19, 0, !dbg !9437
  br i1 %20, label %28, label %21, !dbg !9440

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9441
  %23 = add i8 %17, 1, !dbg !9443
  call void @llvm.dbg.value(metadata i8 %23, metadata !9425, metadata !DIExpression()), !dbg !9427
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9444
  %25 = load i8, i8* %24, align 1, !dbg !9444
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9445
  %26 = zext i8 %23 to i32, !dbg !9446
  %27 = icmp slt i32 %26, %2, !dbg !9436
  br i1 %27, label %15, label %28, !dbg !9437, !llvm.loop !9447

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9446
  call void @llvm.dbg.value(metadata i32 %13, metadata !9232, metadata !DIExpression()) #25, !dbg !9449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9451, !srcloc !9238
  br label %30, !dbg !9452

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9427
  ret i32 %31, !dbg !9453
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9456, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i8* %1, metadata !9457, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32 %2, metadata !9458, metadata !DIExpression()), !dbg !9461
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9462
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9462
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9462
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9459, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i8 0, metadata !9460, metadata !DIExpression()), !dbg !9461
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9463
  call void @llvm.dbg.value(metadata i8 0, metadata !9460, metadata !DIExpression()), !dbg !9461
  %8 = icmp sgt i32 %2, 0, !dbg !9464
  br i1 %8, label %9, label %28, !dbg !9465

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9460, metadata !DIExpression()), !dbg !9461
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9463
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9466
  %14 = icmp eq i32 %13, 0, !dbg !9465
  br i1 %14, label %28, label %15, !dbg !9467

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9468
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9470
  %18 = add i8 %11, 1, !dbg !9471
  call void @llvm.dbg.value(metadata i8 %18, metadata !9460, metadata !DIExpression()), !dbg !9461
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9472
  store i8 %17, i8* %19, align 1, !dbg !9473
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9474
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9476
  %22 = icmp eq i32 %21, 0, !dbg !9476
  br i1 %22, label %25, label %23, !dbg !9477

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9478
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9480
  br label %25, !dbg !9481

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9460, metadata !DIExpression()), !dbg !9461
  %26 = zext i8 %18 to i32, !dbg !9482
  %27 = icmp slt i32 %26, %2, !dbg !9464
  br i1 %27, label %9, label %28, !dbg !9465, !llvm.loop !9483

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9482
  ret i32 %29, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9488, metadata !DIExpression()), !dbg !9490
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9491
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9491
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9491
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9489, metadata !DIExpression()), !dbg !9490
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9492
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9492
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9493
  ret void, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9497, metadata !DIExpression()), !dbg !9499
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9500
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9500
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9498, metadata !DIExpression()), !dbg !9499
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9501
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9501
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9502
  ret void, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9509
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9509
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9507, metadata !DIExpression()), !dbg !9508
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9510
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9510
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9511
  %8 = icmp eq i32 %7, 0, !dbg !9511
  br i1 %8, label %14, label %9, !dbg !9512

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9513
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9514
  %12 = icmp ne i32 %11, 0, !dbg !9512
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9515
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9518, metadata !DIExpression()), !dbg !9520
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9521
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9521
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9519, metadata !DIExpression()), !dbg !9520
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9522
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9522
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9523
  ret void, !dbg !9524
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9527, metadata !DIExpression()), !dbg !9529
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9530
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9530
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9528, metadata !DIExpression()), !dbg !9529
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9531
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9531
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9532
  ret void, !dbg !9533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9536, metadata !DIExpression()), !dbg !9538
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9539
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9539
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9539
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9537, metadata !DIExpression()), !dbg !9538
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9540
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9540
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9541
  ret i32 %7, !dbg !9542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9543 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9545, metadata !DIExpression()), !dbg !9547
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9548
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9548
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9548
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9546, metadata !DIExpression()), !dbg !9547
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9549
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9549
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9550
  ret i32 %7, !dbg !9551
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9552 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9554, metadata !DIExpression()), !dbg !9556
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9557
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9557
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9557
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9555, metadata !DIExpression()), !dbg !9556
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9558
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9558
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9559
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9560
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9560
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9560

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9562
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9564
  br label %11, !dbg !9565

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9564
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9566
  ret void, !dbg !9567
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9570, metadata !DIExpression()), !dbg !9572
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9573
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9573
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9573
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9571, metadata !DIExpression()), !dbg !9572
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9574
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9574
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9575
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9576
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9576
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !9576

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9578
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9580
  br label %11, !dbg !9581

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9580
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9586, metadata !DIExpression()), !dbg !9588
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9589
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9589
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9589
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9587, metadata !DIExpression()), !dbg !9588
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9590
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9590
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9591
  %8 = icmp eq i32 %7, 0, !dbg !9591
  br i1 %8, label %13, label %9, !dbg !9592

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9593
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9594
  %12 = icmp eq i32 %11, 0, !dbg !9594
  br i1 %12, label %13, label %22, !dbg !9595

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9596
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9597
  %16 = icmp eq i32 %15, 0, !dbg !9597
  br i1 %16, label %22, label %17, !dbg !9598

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9599
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9600
  %20 = icmp ne i32 %19, 0, !dbg !9598
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9604, metadata !DIExpression()), !dbg !9605
  ret i32 1, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9609, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9610, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i8* %2, metadata !9611, metadata !DIExpression()), !dbg !9613
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9614
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9614
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9614
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9612, metadata !DIExpression()), !dbg !9613
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9615
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9616
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9617
  store i8* %2, i8** %8, align 4, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9620 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9627
  %3 = load volatile i32, i32* %2, align 4, !dbg !9627
  %4 = lshr i32 %3, 5, !dbg !9628
  %5 = and i32 %4, 1, !dbg !9628
  ret i32 %5, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9630 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9632, metadata !DIExpression()), !dbg !9633
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9634
  %3 = load volatile i32, i32* %2, align 4, !dbg !9634
  %4 = lshr i32 %3, 5, !dbg !9635
  %5 = and i32 %4, 1, !dbg !9635
  ret i32 %5, !dbg !9636
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9641
  %3 = load volatile i32, i32* %2, align 4, !dbg !9641
  %4 = lshr i32 %3, 6, !dbg !9642
  %5 = and i32 %4, 1, !dbg !9642
  ret i32 %5, !dbg !9643
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9646, metadata !DIExpression()), !dbg !9647
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9648
  %3 = load volatile i32, i32* %2, align 4, !dbg !9648
  %4 = lshr i32 %3, 6, !dbg !9649
  %5 = and i32 %4, 1, !dbg !9649
  ret i32 %5, !dbg !9650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9655, metadata !DIExpression()), !dbg !9658
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9659

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9666
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9669, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9666
  %5 = and i32 %4, -2, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %5, metadata !9656, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9680
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9680
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9682, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9680
  %7 = icmp eq i32 %6, 0, !dbg !9659
  br i1 %7, label %8, label %3, !dbg !9671, !llvm.loop !9684

8:                                                ; preds = %3
  ret void, !dbg !9685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9686 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9690
  %3 = load volatile i32, i32* %2, align 4, !dbg !9690
  %4 = and i32 %3, -65, !dbg !9690
  store volatile i32 %4, i32* %2, align 4, !dbg !9690
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9698

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9699
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9702, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9699
  %5 = and i32 %4, -257, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %5, metadata !9695, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9705
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9705
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9707, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9705
  %7 = icmp eq i32 %6, 0, !dbg !9698
  br i1 %7, label %8, label %3, !dbg !9703, !llvm.loop !9708

8:                                                ; preds = %3
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9715
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9716

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9717
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9720, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9717
  %5 = or i32 %4, 1, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %5, metadata !9713, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9723
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9723
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9725, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9723
  %7 = icmp eq i32 %6, 0, !dbg !9716
  br i1 %7, label %8, label %3, !dbg !9721, !llvm.loop !9726

8:                                                ; preds = %3
  ret void, !dbg !9727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9730, metadata !DIExpression()), !dbg !9731
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9732
  %3 = load volatile i32, i32* %2, align 4, !dbg !9732
  %4 = or i32 %3, 64, !dbg !9732
  store volatile i32 %4, i32* %2, align 4, !dbg !9732
  ret void, !dbg !9733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9734 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9736, metadata !DIExpression()), !dbg !9739
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9740

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9741
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9744, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9741
  %5 = or i32 %4, 256, !dbg !9745
  call void @llvm.dbg.value(metadata i32 %5, metadata !9737, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9747
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9747
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9749, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9747
  %7 = icmp eq i32 %6, 0, !dbg !9740
  br i1 %7, label %8, label %3, !dbg !9745, !llvm.loop !9750

8:                                                ; preds = %3
  ret void, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9754, metadata !DIExpression()), !dbg !9757
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9758

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9759
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9762, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9759
  %5 = and i32 %4, -33, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %5, metadata !9755, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9765
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9765
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9767, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9765
  %7 = icmp eq i32 %6, 0, !dbg !9758
  br i1 %7, label %8, label %3, !dbg !9763, !llvm.loop !9768

8:                                                ; preds = %3
  ret void, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9772, metadata !DIExpression()), !dbg !9775
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9776

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9777
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9780, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9777
  %5 = or i32 %4, 32, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %5, metadata !9773, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9783
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9783
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9785, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9783
  %7 = icmp eq i32 %6, 0, !dbg !9776
  br i1 %7, label %8, label %3, !dbg !9781, !llvm.loop !9786

8:                                                ; preds = %3
  ret void, !dbg !9787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9788 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9790, metadata !DIExpression()), !dbg !9791
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9792
  %3 = load volatile i32, i32* %2, align 4, !dbg !9792
  %4 = lshr i32 %3, 7, !dbg !9793
  %5 = and i32 %4, 1, !dbg !9793
  ret i32 %5, !dbg !9794
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9795 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9797, metadata !DIExpression()), !dbg !9800
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9801

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9802
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9805, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9802
  %5 = and i32 %4, -65, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %5, metadata !9798, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9808
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9808
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9810, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9808
  %7 = icmp eq i32 %6, 0, !dbg !9801
  br i1 %7, label %8, label %3, !dbg !9806, !llvm.loop !9811

8:                                                ; preds = %3
  ret void, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9815, metadata !DIExpression()), !dbg !9818
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9819

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !9820
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9823, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !9820
  %5 = or i32 %4, 64, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %5, metadata !9816, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !9826
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9828, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !9826
  %7 = icmp eq i32 %6, 0, !dbg !9819
  br i1 %7, label %8, label %3, !dbg !9824, !llvm.loop !9829

8:                                                ; preds = %3
  ret void, !dbg !9830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9835, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9837
  %3 = load volatile i32, i32* %2, align 4, !dbg !9837
  %4 = trunc i32 %3 to i8, !dbg !9838
  ret i8 %4, !dbg !9839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9840 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9844
  %3 = load volatile i32, i32* %2, align 4, !dbg !9844
  %4 = lshr i32 %3, 3, !dbg !9845
  %5 = and i32 %4, 1, !dbg !9845
  ret i32 %5, !dbg !9846
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9847 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9849, metadata !DIExpression()), !dbg !9851
  %3 = bitcast i32* %2 to i8*, !dbg !9852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9852
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9850, metadata !DIExpression()), !dbg !9853
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9854
  %5 = load volatile i32, i32* %4, align 4, !dbg !9854
  store volatile i32 %5, i32* %2, align 4, !dbg !9855
  %6 = load volatile i32, i32* %2, align 4, !dbg !9856
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9857
  %8 = load volatile i32, i32* %7, align 4, !dbg !9857
  store volatile i32 %8, i32* %2, align 4, !dbg !9858
  %9 = load volatile i32, i32* %2, align 4, !dbg !9859
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9860
  ret void, !dbg !9860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9861 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9865, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata i8 %1, metadata !9866, metadata !DIExpression()), !dbg !9867
  %3 = zext i8 %1 to i32, !dbg !9868
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9869
  store volatile i32 %3, i32* %4, align 4, !dbg !9870
  ret void, !dbg !9871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9876, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9879
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9879
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9877, metadata !DIExpression()), !dbg !9878
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9880
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9880
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9881
  ret i32 %7, !dbg !9882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9887, metadata !DIExpression()), !dbg !9888
  %2 = icmp eq i32 %0, 1024, !dbg !9889
  %3 = select i1 %2, i32 2, i32 0, !dbg !9889
  %4 = icmp eq i32 %0, 1536, !dbg !9889
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9889
  ret i32 %5, !dbg !9890
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9893, metadata !DIExpression()), !dbg !9895
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9896
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9896
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9896
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9894, metadata !DIExpression()), !dbg !9895
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9897
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9897
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9898
  ret i32 %7, !dbg !9899
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9904, metadata !DIExpression()), !dbg !9905
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9906
  %3 = icmp ult i32 %2, 4, !dbg !9906
  br i1 %3, label %4, label %7, !dbg !9906

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9906
  %6 = load i32, i32* %5, align 4, !dbg !9906
  br label %7, !dbg !9906

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9907
  ret i32 %8, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9912, metadata !DIExpression()), !dbg !9914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9916
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9917
  ret i32 %7, !dbg !9918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %1, metadata !9924, metadata !DIExpression()), !dbg !9925
  %3 = icmp eq i32 %0, 4096, !dbg !9926
  %4 = icmp eq i32 %1, 0, !dbg !9926
  %5 = select i1 %4, i32 4, i32 3, !dbg !9926
  %6 = select i1 %4, i32 3, i32 2, !dbg !9926
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9926
  ret i32 %7, !dbg !9927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9933
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9933
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9931, metadata !DIExpression()), !dbg !9932
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9934
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9934
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9935
  ret i32 %7, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9941, metadata !DIExpression()), !dbg !9942
  %2 = icmp eq i32 %0, 768, !dbg !9943
  %3 = zext i1 %2 to i32, !dbg !9942
  ret i32 %3, !dbg !9945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9948, metadata !DIExpression()), !dbg !9949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9950
  %3 = load volatile i32, i32* %2, align 4, !dbg !9950
  %4 = and i32 %3, 768, !dbg !9950
  ret i32 %4, !dbg !9951
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9952 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9954, metadata !DIExpression()), !dbg !9955
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9956
  %3 = load volatile i32, i32* %2, align 4, !dbg !9956
  %4 = and i32 %3, 4096, !dbg !9956
  ret i32 %4, !dbg !9957
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9958 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9960, metadata !DIExpression()), !dbg !9961
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9962
  %3 = load volatile i32, i32* %2, align 4, !dbg !9962
  %4 = and i32 %3, 12288, !dbg !9962
  ret i32 %4, !dbg !9963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9964 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9966, metadata !DIExpression()), !dbg !9967
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9968
  %3 = load volatile i32, i32* %2, align 4, !dbg !9968
  %4 = and i32 %3, 1536, !dbg !9968
  ret i32 %4, !dbg !9969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9974, metadata !DIExpression()), !dbg !9975
  %2 = icmp eq i32 %0, 2, !dbg !9976
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9976
  %4 = icmp eq i32 %0, 1, !dbg !9976
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9976
  ret i32 %5, !dbg !9977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9982, metadata !DIExpression()), !dbg !9983
  %2 = icmp ult i32 %0, 3, !dbg !9984
  br i1 %2, label %3, label %6, !dbg !9984

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9984
  %5 = load i32, i32* %4, align 4, !dbg !9984
  br label %6, !dbg !9984

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9985
  ret i32 %7, !dbg !9987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9992, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata i32 %1, metadata !9993, metadata !DIExpression()), !dbg !9994
  %3 = icmp eq i32 %0, 4, !dbg !9995
  %4 = icmp eq i32 %1, 0, !dbg !9995
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9995
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9995
  ret i32 %6, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  %2 = icmp eq i32 %0, 1, !dbg !10003
  %3 = select i1 %2, i32 768, i32 0, !dbg !10002
  ret i32 %3, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10009
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10010
  %3 = load volatile i32, i32* %2, align 4, !dbg !10010
  %4 = and i32 %3, -8193, !dbg !10010
  store volatile i32 %4, i32* %2, align 4, !dbg !10010
  ret void, !dbg !10011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10020
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10020
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10018, metadata !DIExpression()), !dbg !10019
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10021
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10021
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i32 %1, metadata !10027, metadata !DIExpression()), !dbg !10029
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10030
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10030
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10030
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10028, metadata !DIExpression()), !dbg !10029
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10031
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10031
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10032
  ret void, !dbg !10033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10036, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata i32 %1, metadata !10037, metadata !DIExpression()), !dbg !10039
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10040
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10040
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10040
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10038, metadata !DIExpression()), !dbg !10039
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10041
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10041
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10042
  ret void, !dbg !10043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10046, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata i32 %1, metadata !10047, metadata !DIExpression()), !dbg !10049
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10050
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10050
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10050
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10048, metadata !DIExpression()), !dbg !10049
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10051
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10051
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10054 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10056, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %1, metadata !10057, metadata !DIExpression()), !dbg !10061
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10062
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10062
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10062
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10058, metadata !DIExpression()), !dbg !10061
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10063
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10063
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10063
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10059, metadata !DIExpression()), !dbg !10061
  %10 = bitcast i32* %3 to i8*, !dbg !10064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10064
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10065
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10065
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10069
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10069
  %15 = load i8*, i8** %14, align 4, !dbg !10069
  call void @llvm.dbg.value(metadata i32* %3, metadata !10060, metadata !DIExpression(DW_OP_deref)), !dbg !10061
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !10070
  %17 = icmp slt i32 %16, 0, !dbg !10071
  br i1 %17, label %23, label %18, !dbg !10072

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10073
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10073
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !10074
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10075
  %22 = load i32, i32* %3, align 4, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %22, metadata !10060, metadata !DIExpression()), !dbg !10061
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !10077
  br label %23, !dbg !10078

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10078
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10081, metadata !DIExpression()), !dbg !10082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10083
  %3 = load volatile i32, i32* %2, align 4, !dbg !10083
  %4 = or i32 %3, 8192, !dbg !10083
  store volatile i32 %4, i32* %2, align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10087, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i8* %1, metadata !10088, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32* %2, metadata !10089, metadata !DIExpression()), !dbg !10091
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10092
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10092
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10092
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10090, metadata !DIExpression()), !dbg !10091
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10093
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10093
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10095
  br i1 %9, label %12, label %10, !dbg !10096

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10097
  br label %12, !dbg !10098

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10091
  ret i32 %13, !dbg !10099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10105, metadata !DIExpression()), !dbg !10106
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10107
  %3 = load volatile i32, i32* %2, align 4, !dbg !10107
  %4 = and i32 %3, -32769, !dbg !10107
  store volatile i32 %4, i32* %2, align 4, !dbg !10107
  ret void, !dbg !10108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10113, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.value(metadata i32 %1, metadata !10114, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.value(metadata i32 0, metadata !10115, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.value(metadata i32 %2, metadata !10116, metadata !DIExpression()), !dbg !10117
  %4 = zext i32 %1 to i64, !dbg !10118
  %5 = mul nuw nsw i64 %4, 25, !dbg !10118
  %6 = zext i32 %2 to i64, !dbg !10118
  %7 = shl nuw nsw i64 %6, 2, !dbg !10118
  %8 = udiv i64 %5, %7, !dbg !10118
  %9 = trunc i64 %8 to i32, !dbg !10118
  %10 = udiv i32 %9, 100, !dbg !10118
  %11 = shl nuw nsw i32 %10, 4, !dbg !10118
  %12 = mul i32 %10, -100, !dbg !10118
  %13 = add i32 %12, %9, !dbg !10118
  %14 = shl i32 %13, 4, !dbg !10118
  %15 = add i32 %14, 50, !dbg !10118
  %16 = udiv i32 %15, 100, !dbg !10118
  %17 = and i32 %16, 240, !dbg !10118
  %18 = add nuw nsw i32 %17, %11, !dbg !10118
  %19 = and i32 %16, 15, !dbg !10118
  %20 = and i32 %18, 65520, !dbg !10121
  %21 = or i32 %20, %19, !dbg !10121
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10122
  store volatile i32 %21, i32* %22, align 4, !dbg !10123
  ret void, !dbg !10124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10125 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10127, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata i32 %1, metadata !10128, metadata !DIExpression()), !dbg !10129
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10130
  %4 = load volatile i32, i32* %3, align 4, !dbg !10130
  %5 = and i32 %4, -769, !dbg !10130
  %6 = or i32 %5, %1, !dbg !10130
  store volatile i32 %6, i32* %3, align 4, !dbg !10130
  ret void, !dbg !10131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10134, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32 %1, metadata !10135, metadata !DIExpression()), !dbg !10136
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10137
  %4 = load volatile i32, i32* %3, align 4, !dbg !10137
  %5 = and i32 %4, -4097, !dbg !10137
  %6 = or i32 %5, %1, !dbg !10137
  store volatile i32 %6, i32* %3, align 4, !dbg !10137
  ret void, !dbg !10138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 %1, metadata !10142, metadata !DIExpression()), !dbg !10143
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10144
  %4 = load volatile i32, i32* %3, align 4, !dbg !10144
  %5 = and i32 %4, -12289, !dbg !10144
  %6 = or i32 %5, %1, !dbg !10144
  store volatile i32 %6, i32* %3, align 4, !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10146 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10148, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %1, metadata !10149, metadata !DIExpression()), !dbg !10150
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10151
  %4 = load volatile i32, i32* %3, align 4, !dbg !10151
  %5 = and i32 %4, -1537, !dbg !10151
  %6 = or i32 %5, %1, !dbg !10151
  store volatile i32 %6, i32* %3, align 4, !dbg !10151
  ret void, !dbg !10152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10155, metadata !DIExpression()), !dbg !10156
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10157
  %3 = load volatile i32, i32* %2, align 4, !dbg !10157
  %4 = and i32 %3, 1, !dbg !10157
  ret i32 %4, !dbg !10158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10161, metadata !DIExpression()), !dbg !10162
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10163
  %3 = load volatile i32, i32* %2, align 4, !dbg !10163
  %4 = lshr i32 %3, 1, !dbg !10164
  %5 = and i32 %4, 1, !dbg !10164
  ret i32 %5, !dbg !10165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10166 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10168, metadata !DIExpression()), !dbg !10169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10170
  %3 = load volatile i32, i32* %2, align 4, !dbg !10170
  %4 = lshr i32 %3, 8, !dbg !10171
  %5 = and i32 %4, 1, !dbg !10171
  ret i32 %5, !dbg !10172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10175, metadata !DIExpression()), !dbg !10176
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10177
  store volatile i32 -257, i32* %2, align 4, !dbg !10177
  ret void, !dbg !10178
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10179 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10181, metadata !DIExpression()), !dbg !10183
  %3 = bitcast i32* %2 to i8*, !dbg !10184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10184
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10182, metadata !DIExpression()), !dbg !10185
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10186
  %5 = load volatile i32, i32* %4, align 4, !dbg !10186
  store volatile i32 %5, i32* %2, align 4, !dbg !10187
  %6 = load volatile i32, i32* %2, align 4, !dbg !10188
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10189
  %8 = load volatile i32, i32* %7, align 4, !dbg !10189
  store volatile i32 %8, i32* %2, align 4, !dbg !10190
  %9 = load volatile i32, i32* %2, align 4, !dbg !10191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10192
  ret void, !dbg !10192
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10193 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10195, metadata !DIExpression()), !dbg !10197
  %3 = bitcast i32* %2 to i8*, !dbg !10198
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10198
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10196, metadata !DIExpression()), !dbg !10199
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10200
  %5 = load volatile i32, i32* %4, align 4, !dbg !10200
  store volatile i32 %5, i32* %2, align 4, !dbg !10201
  %6 = load volatile i32, i32* %2, align 4, !dbg !10202
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10203
  %8 = load volatile i32, i32* %7, align 4, !dbg !10203
  store volatile i32 %8, i32* %2, align 4, !dbg !10204
  %9 = load volatile i32, i32* %2, align 4, !dbg !10205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10206
  ret void, !dbg !10206
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10207 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  %3 = bitcast i32* %2 to i8*, !dbg !10212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10212
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10210, metadata !DIExpression()), !dbg !10213
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10214
  %5 = load volatile i32, i32* %4, align 4, !dbg !10214
  store volatile i32 %5, i32* %2, align 4, !dbg !10215
  %6 = load volatile i32, i32* %2, align 4, !dbg !10216
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10217
  %8 = load volatile i32, i32* %7, align 4, !dbg !10217
  store volatile i32 %8, i32* %2, align 4, !dbg !10218
  %9 = load volatile i32, i32* %2, align 4, !dbg !10219
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10220
  ret void, !dbg !10220
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1552, metadata !DIExpression()), !dbg !10221
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #27, !dbg !10222
  tail call void @arch_irq_enable(i32 noundef 37) #27, !dbg !10224
  ret void, !dbg !10224
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1601, metadata !DIExpression()), !dbg !10225
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #27, !dbg !10226
  tail call void @arch_irq_enable(i32 noundef 38) #27, !dbg !10228
  ret void, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1618, metadata !DIExpression()), !dbg !10229
  tail call void @z_arm_irq_priority_set(i32 noundef 71, i32 noundef 0, i32 noundef 0) #27, !dbg !10230
  tail call void @arch_irq_enable(i32 noundef 71) #27, !dbg !10232
  ret void, !dbg !10232
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10235, metadata !DIExpression()), !dbg !10237
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10238
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10238
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10236, metadata !DIExpression()), !dbg !10237
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10239
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10239
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10241
  br i1 %7, label %11, label %8, !dbg !10242

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10243
  %10 = load i8*, i8** %9, align 4, !dbg !10243
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10245
  br label %11, !dbg !10246

11:                                               ; preds = %8, %1
  ret void, !dbg !10247
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10250, metadata !DIExpression()), !dbg !10256
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10257
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10257
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10257
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10251, metadata !DIExpression()), !dbg !10256
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10258
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10258
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10252, metadata !DIExpression()), !dbg !10256
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10259
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10260
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10260
  %10 = tail call fastcc zeroext i1 @device_is_ready.61(%struct.device* noundef %9) #26, !dbg !10262
  br i1 %10, label %11, label %51, !dbg !10263

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10264
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10265
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10265
  %15 = load i8*, i8** %14, align 4, !dbg !10265
  %16 = tail call fastcc i32 @clock_control_on.62(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %16, metadata !10255, metadata !DIExpression()), !dbg !10256
  %17 = icmp eq i32 %16, 0, !dbg !10267
  br i1 %17, label %18, label %51, !dbg !10269

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10270
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10270
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %21, metadata !10255, metadata !DIExpression()), !dbg !10256
  %22 = icmp slt i32 %21, 0, !dbg !10272
  br i1 %22, label %51, label %23, !dbg !10274

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10275
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10275
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10276
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10277
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10278
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10279
  %28 = load i32, i32* %27, align 4, !dbg !10279
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10281

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10253, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.value(metadata i32 4096, metadata !10254, metadata !DIExpression()), !dbg !10256
  br label %31, !dbg !10282

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10253, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.value(metadata i32 0, metadata !10254, metadata !DIExpression()), !dbg !10256
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10285
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10285
  call void @llvm.dbg.value(metadata i32 %33, metadata !10254, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.value(metadata i32 %32, metadata !10253, metadata !DIExpression()), !dbg !10256
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10286
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10287
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10288
  %36 = load i8, i8* %35, align 4, !dbg !10288, !range !6462
  %37 = icmp eq i8 %36, 0, !dbg !10288
  br i1 %37, label %39, label %38, !dbg !10290

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10291
  br label %39, !dbg !10293

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10294
  %41 = load i32, i32* %40, align 4, !dbg !10294
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10295
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10296
  %43 = load i8, i8* %42, align 4, !dbg !10296, !range !6462
  %44 = icmp eq i8 %43, 0, !dbg !10296
  br i1 %44, label %47, label %45, !dbg !10298

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10299
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10301
  br label %47, !dbg !10302

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10303
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10304
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10305
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10305
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10306
  br label %51, !dbg !10307

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10256
  ret i32 %52, !dbg !10308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10311, metadata !DIExpression()), !dbg !10315
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10316
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10316
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10312, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10313, metadata !DIExpression()), !dbg !10315
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10317
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10318
  ret void, !dbg !10319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10324, metadata !DIExpression()), !dbg !10325
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10326, !srcloc !10328
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.63(%struct.device* noundef %0) #26, !dbg !10329
  ret i1 %2, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.62(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10333, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i8* %1, metadata !10334, metadata !DIExpression()), !dbg !10336
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10337
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10337
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10337
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10335, metadata !DIExpression()), !dbg !10336
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10338
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10338
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10339
  ret i32 %8, !dbg !10340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10341 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10345, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.value(metadata i8 0, metadata !10346, metadata !DIExpression()), !dbg !10349
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10350
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10350
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10348, metadata !DIExpression(DW_OP_deref)), !dbg !10349
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %4, metadata !10347, metadata !DIExpression()), !dbg !10349
  %5 = icmp slt i32 %4, 0, !dbg !10352
  br i1 %5, label %9, label %6, !dbg !10354

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10348, metadata !DIExpression()), !dbg !10349
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10356
  br label %9, !dbg !10357

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10358
  ret i32 %10, !dbg !10358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10359 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10361, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 12, metadata !10362, metadata !DIExpression()), !dbg !10365
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10366

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9660, metadata !DIExpression()) #25, !dbg !10367
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10370, !srcloc !9670
  call void @llvm.dbg.value(metadata i32 %4, metadata !9665, metadata !DIExpression()) #25, !dbg !10367
  %5 = or i32 %4, 12, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %5, metadata !10363, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 %5, metadata !9673, metadata !DIExpression()) #25, !dbg !10373
  call void @llvm.dbg.value(metadata i32* %2, metadata !9678, metadata !DIExpression()) #25, !dbg !10373
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10375, !srcloc !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9679, metadata !DIExpression()) #25, !dbg !10373
  %7 = icmp eq i32 %6, 0, !dbg !10366
  br i1 %7, label %8, label %3, !dbg !10371, !llvm.loop !10376

8:                                                ; preds = %3
  ret void, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10380, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 0, metadata !10383, metadata !DIExpression()), !dbg !10384
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10385
  %5 = load volatile i32, i32* %4, align 4, !dbg !10385
  %6 = and i32 %5, -5633, !dbg !10385
  %7 = or i32 %2, %1, !dbg !10385
  %8 = or i32 %7, %6, !dbg !10385
  store volatile i32 %8, i32* %4, align 4, !dbg !10385
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10386
  %10 = load volatile i32, i32* %9, align 4, !dbg !10386
  %11 = and i32 %10, -12289, !dbg !10386
  store volatile i32 %11, i32* %9, align 4, !dbg !10386
  ret void, !dbg !10387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10392
  %3 = load volatile i32, i32* %2, align 4, !dbg !10392
  %4 = or i32 %3, 8, !dbg !10392
  store volatile i32 %4, i32* %2, align 4, !dbg !10392
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10399, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 0, metadata !10400, metadata !DIExpression()), !dbg !10401
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10402
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10402
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10403
  %5 = load i8, i8* %4, align 4, !dbg !10403
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10404
  ret i32 %6, !dbg !10405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.63(%struct.device* noundef %0) unnamed_addr #1 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10408, metadata !DIExpression()), !dbg !10409
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10410
  ret i1 %2, !dbg !10411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10414, metadata !DIExpression()), !dbg !10415
  tail call fastcc void @__NVIC_SetPriority.65() #26, !dbg !10416
  store i32 8399, i32* @last_load, align 4, !dbg !10417
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10418
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10419
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10420
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10421
  %3 = or i32 %2, 7, !dbg !10421
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10421
  ret i32 0, !dbg !10422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.65() unnamed_addr #15 !dbg !10423 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10425, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 1, metadata !10426, metadata !DIExpression()), !dbg !10427
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10428
  ret void, !dbg !10431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10434, metadata !DIExpression()), !dbg !10436
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10437
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10438
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10439
  %5 = add i32 %4, %3, !dbg !10439
  store i32 %5, i32* @cycle_count, align 4, !dbg !10439
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10440
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10441
  %7 = sub i32 %5, %6, !dbg !10444
  %8 = udiv i32 %7, 8400, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %8, metadata !10435, metadata !DIExpression()), !dbg !10436
  %9 = mul nuw i32 %8, 8400, !dbg !10446
  %10 = add i32 %9, %6, !dbg !10447
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10447
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10448
  tail call void @z_arm_int_exit() #27, !dbg !10449
  ret void, !dbg !10450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10451 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10457
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %2, metadata !10454, metadata !DIExpression()), !dbg !10457
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %3, metadata !10455, metadata !DIExpression()), !dbg !10457
  %4 = and i32 %2, 65536, !dbg !10460
  %5 = icmp ne i32 %4, 0, !dbg !10460
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10462
  %8 = load i32, i32* @last_load, align 4, !dbg !10457
  br i1 %7, label %9, label %13, !dbg !10462

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10463
  %11 = add i32 %10, %8, !dbg !10463
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10463
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10465
  br label %13, !dbg !10466

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10467
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10468
  %16 = add i32 %14, %15, !dbg !10469
  ret i32 %16, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10475, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i1 %1, metadata !10476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10488
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10489
  br i1 %4, label %5, label %8, !dbg !10489

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10491
  %7 = and i32 %6, -2, !dbg !10491
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10491
  store i32 -16777216, i32* @last_load, align 4, !dbg !10493
  br label %54, !dbg !10494

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %9, metadata !10480, metadata !DIExpression()), !dbg !10488
  br i1 %3, label %18, label %10, !dbg !10496

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10496
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10488
  %12 = icmp slt i32 %11, 1, !dbg !10497
  br i1 %12, label %18, label %13, !dbg !10497

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10497
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10497
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10497
  %17 = add nuw nsw i32 %16, 8399, !dbg !10497
  br label %18, !dbg !10497

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10498, metadata !DIExpression()) #25, !dbg !10505
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10507, !srcloc !10513
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %21, metadata !10510, metadata !DIExpression()) #25, !dbg !10514
  call void @llvm.dbg.value(metadata i32 undef, metadata !10511, metadata !DIExpression()) #25, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %21, metadata !10504, metadata !DIExpression()) #25, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %21, metadata !10481, metadata !DIExpression()), !dbg !10488
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %22, metadata !10486, metadata !DIExpression()), !dbg !10488
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %23, metadata !10478, metadata !DIExpression()), !dbg !10488
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10517
  %25 = add i32 %24, %22, !dbg !10517
  store i32 %25, i32* @cycle_count, align 4, !dbg !10517
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10518
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10519
  %27 = sub i32 %25, %26, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %27, metadata !10487, metadata !DIExpression()), !dbg !10488
  %28 = icmp slt i32 %27, 0, !dbg !10521
  br i1 %28, label %38, label %29, !dbg !10523

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10477, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.value(metadata i32 undef, metadata !10477, metadata !DIExpression()), !dbg !10488
  %30 = add nuw i32 %19, %27, !dbg !10524
  %31 = urem i32 %30, 8400, !dbg !10526
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10477, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10488
  %32 = sub nuw nsw i32 %19, %31, !dbg !10527
  call void @llvm.dbg.value(metadata i32 %32, metadata !10477, metadata !DIExpression()), !dbg !10488
  %33 = icmp ugt i32 %32, 1024, !dbg !10528
  br i1 %33, label %34, label %36, !dbg !10528

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10477, metadata !DIExpression()), !dbg !10488
  %35 = icmp ugt i32 %32, 16766400, !dbg !10529
  br i1 %35, label %38, label %36, !dbg !10531

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10532
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %40, metadata !10479, metadata !DIExpression()), !dbg !10488
  %41 = add nsw i32 %39, -1, !dbg !10534
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10535
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10536
  %42 = icmp ult i32 %23, %40, !dbg !10537
  br i1 %42, label %43, label %48, !dbg !10539

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10540
  %45 = add i32 %23, %9, !dbg !10542
  %46 = sub i32 %45, %40, !dbg !10543
  %47 = add i32 %46, %44, !dbg !10540
  br label %52, !dbg !10544

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10545
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10547
  %51 = add i32 %49, %50, !dbg !10547
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10548
  store i32 %53, i32* @cycle_count, align 4, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %21, metadata !10549, metadata !DIExpression()) #25, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10554, metadata !DIExpression()) #25, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %21, metadata !10557, metadata !DIExpression()) #25, !dbg !10560
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10562, !srcloc !10563
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10565 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10498, metadata !DIExpression()) #25, !dbg !10569
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10571, !srcloc !10513
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()) #25, !dbg !10573
  call void @llvm.dbg.value(metadata i32 undef, metadata !10511, metadata !DIExpression()) #25, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %2, metadata !10504, metadata !DIExpression()) #25, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %2, metadata !10567, metadata !DIExpression()), !dbg !10574
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10575
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10576
  %5 = add i32 %4, %3, !dbg !10577
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10578
  %7 = sub i32 %5, %6, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %7, metadata !10568, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i32 %2, metadata !10549, metadata !DIExpression()) #25, !dbg !10580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10554, metadata !DIExpression()) #25, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %2, metadata !10557, metadata !DIExpression()) #25, !dbg !10582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10584, !srcloc !10563
  %8 = udiv i32 %7, 8400, !dbg !10585
  ret i32 %8, !dbg !10586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10587 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10498, metadata !DIExpression()) #25, !dbg !10591
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10593, !srcloc !10513
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10593
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()) #25, !dbg !10595
  call void @llvm.dbg.value(metadata i32 undef, metadata !10511, metadata !DIExpression()) #25, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %2, metadata !10504, metadata !DIExpression()) #25, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %2, metadata !10589, metadata !DIExpression()), !dbg !10596
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10597
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10598
  %5 = add i32 %4, %3, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %5, metadata !10590, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata i32 %2, metadata !10549, metadata !DIExpression()) #25, !dbg !10600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10554, metadata !DIExpression()) #25, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %2, metadata !10557, metadata !DIExpression()) #25, !dbg !10602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10604, !srcloc !10563
  ret i32 %5, !dbg !10605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10606 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10607
  %2 = icmp eq i32 %1, -16777216, !dbg !10609
  br i1 %2, label %3, label %6, !dbg !10610

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10611
  %5 = or i32 %4, 1, !dbg !10611
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10611
  br label %6, !dbg !10613

6:                                                ; preds = %3, %0
  ret void, !dbg !10614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10615 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10616
  %2 = and i32 %1, -2, !dbg !10616
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10616
  ret void, !dbg !10617
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10644, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i8 %1, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10646, metadata !DIExpression()), !dbg !10647
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10648
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10648
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10647
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10649
  %8 = load i8, i8* %6, align 4, !dbg !10650
  %9 = zext i8 %8 to i32, !dbg !10651
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10651
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10652
  br i1 %11, label %18, label %24, !dbg !10653

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10647
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10649
  %14 = load i8, i8* %6, align 4, !dbg !10650
  %15 = zext i8 %14 to i32, !dbg !10651
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10651
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10652
  br i1 %17, label %18, label %24, !dbg !10653, !llvm.loop !10654

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10656
  %21 = load i8, i8* %20, align 1, !dbg !10656
  %22 = icmp eq i8 %21, %1, !dbg !10659
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10660
  br i1 %22, label %24, label %12, !dbg !10661

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10647
  ret i32 %25, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10674, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i8 %1, metadata !10675, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 %2, metadata !10676, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 0, metadata !10679, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 0, metadata !10680, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i8 0, metadata !10681, metadata !DIExpression()), !dbg !10691
  %4 = icmp eq i8 %1, 0, !dbg !10692
  br i1 %4, label %35, label %5, !dbg !10693

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10692
  br label %9, !dbg !10693

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10681, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 %29, metadata !10679, metadata !DIExpression()), !dbg !10690
  %8 = icmp eq i32 %34, %6, !dbg !10692
  br i1 %8, label %35, label %9, !dbg !10693, !llvm.loop !10694

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10681, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.value(metadata i32 %11, metadata !10679, metadata !DIExpression()), !dbg !10690
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10696
  %13 = load i32, i32* %12, align 4, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %13, metadata !10678, metadata !DIExpression()), !dbg !10690
  %14 = and i32 %13, 31, !dbg !10697
  %15 = icmp ult i32 %14, 16, !dbg !10698
  br i1 %15, label %16, label %20, !dbg !10699

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10700
  %18 = load i32, i32* %17, align 4, !dbg !10700
  %19 = or i32 %18, 32, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %19, metadata !10679, metadata !DIExpression()), !dbg !10690
  br label %28, !dbg !10703

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10704

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10705
  %23 = load i32, i32* %22, align 4, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %23, metadata !10683, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10706
  %24 = lshr i32 %23, 7, !dbg !10707
  %25 = and i32 %24, 16, !dbg !10707
  %26 = or i32 %25, %23, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %26, metadata !10679, metadata !DIExpression()), !dbg !10690
  br label %28, !dbg !10708

27:                                               ; preds = %20
  br label %28, !dbg !10709

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10690
  call void @llvm.dbg.value(metadata i32 %29, metadata !10679, metadata !DIExpression()), !dbg !10690
  %30 = lshr i32 %13, 5, !dbg !10709
  %31 = and i32 %30, 255, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %31, metadata !10677, metadata !DIExpression()), !dbg !10690
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %32, metadata !10680, metadata !DIExpression()), !dbg !10690
  %33 = icmp slt i32 %32, 0, !dbg !10711
  %34 = add nuw nsw i32 %10, 1, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %34, metadata !10681, metadata !DIExpression()), !dbg !10691
  br i1 %33, label %35, label %7, !dbg !10714

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10720, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %1, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %2, metadata !10722, metadata !DIExpression()), !dbg !10724
  %4 = icmp ugt i32 %0, 175, !dbg !10725
  br i1 %4, label %16, label %5, !dbg !10727

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10728
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10729
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10729
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10723, metadata !DIExpression()), !dbg !10724
  %9 = add nsw i32 %6, -8, !dbg !10730
  %10 = icmp ult i32 %9, 3, !dbg !10730
  br i1 %10, label %16, label %11, !dbg !10732

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.70(%struct.device* noundef %8) #26, !dbg !10733
  br i1 %12, label %13, label %16, !dbg !10734

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10735
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10736
  br label %16, !dbg !10737

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10724
  ret i32 %17, !dbg !10738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.70(%struct.device* noundef %0) unnamed_addr #1 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10743, metadata !DIExpression()), !dbg !10744
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10745, !srcloc !10747
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.71(%struct.device* noundef %0) #26, !dbg !10748
  ret i1 %2, !dbg !10749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.71(%struct.device* noundef %0) unnamed_addr #1 !dbg !10750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10752, metadata !DIExpression()), !dbg !10753
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10754
  ret i1 %2, !dbg !10755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10756 {
  ret void, !dbg !10757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10758 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10760, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 2, metadata !10762, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 2, metadata !10764, metadata !DIExpression()), !dbg !10765
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10766
  %2 = and i32 %1, 12, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %2, metadata !10760, metadata !DIExpression()), !dbg !10765
  %3 = icmp eq i32 %2, 8, !dbg !10768
  br i1 %3, label %4, label %18, !dbg !10768

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10769
  call void @llvm.dbg.value(metadata i32 %5, metadata !10763, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10765
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10771
  %7 = and i32 %6, 63, !dbg !10772
  call void @llvm.dbg.value(metadata i32 %7, metadata !10764, metadata !DIExpression()), !dbg !10765
  %8 = udiv i32 16000000, %7, !dbg !10773
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10773
  %10 = lshr i32 %9, 6, !dbg !10773
  %11 = and i32 %10, 511, !dbg !10773
  %12 = mul i32 %11, %8, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %12, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %12, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %12, metadata !10761, metadata !DIExpression()), !dbg !10765
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10775
  %14 = lshr i32 %13, 15, !dbg !10776
  %15 = and i32 %14, 6, !dbg !10776
  %16 = add nuw nsw i32 %15, 2, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %16, metadata !10762, metadata !DIExpression()), !dbg !10765
  %17 = udiv i32 %12, %16, !dbg !10777
  br label %18, !dbg !10778

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10779
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10780
  %21 = lshr i32 %20, 4, !dbg !10781
  %22 = and i32 %21, 15, !dbg !10781
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10782
  %24 = load i8, i8* %23, align 1, !dbg !10782
  %25 = zext i8 %24 to i32, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %25, metadata !10760, metadata !DIExpression()), !dbg !10765
  %26 = lshr i32 %19, %25, !dbg !10783
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10783
  ret void, !dbg !10784
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10785 {
  ret i32 0, !dbg !10790
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10791 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10817, metadata !DIExpression()), !dbg !10828
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10829
  br i1 %3, label %311, label %4, !dbg !10831

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10832
  %6 = load i32, i32* %5, align 4, !dbg !10832
  %7 = and i32 %6, 1, !dbg !10834
  %8 = icmp eq i32 %7, 0, !dbg !10835
  br i1 %8, label %66, label %9, !dbg !10836

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10837
  %11 = and i32 %10, 12, !dbg !10837
  %12 = icmp eq i32 %11, 4, !dbg !10840
  br i1 %12, label %21, label %13, !dbg !10841

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10842
  %15 = and i32 %14, 12, !dbg !10842
  %16 = icmp eq i32 %15, 8, !dbg !10843
  br i1 %16, label %17, label %29, !dbg !10844

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10845
  %19 = and i32 %18, 4194304, !dbg !10846
  %20 = icmp eq i32 %19, 0, !dbg !10847
  br i1 %20, label %29, label %21, !dbg !10848

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10849
  %23 = and i32 %22, 131072, !dbg !10849
  %24 = icmp eq i32 %23, 0, !dbg !10849
  br i1 %24, label %66, label %25, !dbg !10852

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10853
  %27 = load i32, i32* %26, align 4, !dbg !10853
  %28 = icmp eq i32 %27, 0, !dbg !10854
  br i1 %28, label %311, label %66, !dbg !10855

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10856
  %31 = load i32, i32* %30, align 4, !dbg !10856
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10860

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10861
  %34 = or i32 %33, 65536, !dbg !10861
  br label %45, !dbg !10861

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10863
  %37 = or i32 %36, 262144, !dbg !10863
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10863
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10863
  %39 = or i32 %38, 65536, !dbg !10863
  br label %45, !dbg !10863

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10866
  %42 = and i32 %41, -65537, !dbg !10866
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10866
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10866
  %44 = and i32 %43, -262145, !dbg !10866
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10868
  %47 = load i32, i32* %30, align 4, !dbg !10869
  %48 = icmp eq i32 %47, 0, !dbg !10871
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %49, metadata !10818, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %49, metadata !10818, metadata !DIExpression()), !dbg !10828
  br i1 %48, label %58, label %50, !dbg !10873

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10874
  %52 = and i32 %51, 131072, !dbg !10876
  %53 = icmp eq i32 %52, 0, !dbg !10876
  br i1 %53, label %54, label %66, !dbg !10877

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10878
  %56 = sub i32 %55, %49, !dbg !10881
  %57 = icmp ugt i32 %56, 100, !dbg !10882
  br i1 %57, label %311, label %50, !dbg !10883, !llvm.loop !10884

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10886
  %60 = and i32 %59, 131072, !dbg !10886
  %61 = icmp eq i32 %60, 0, !dbg !10886
  br i1 %61, label %66, label %62, !dbg !10888

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10889
  %64 = sub i32 %63, %49, !dbg !10892
  %65 = icmp ugt i32 %64, 100, !dbg !10893
  br i1 %65, label %311, label %58, !dbg !10894, !llvm.loop !10895

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10897
  %68 = and i32 %67, 2, !dbg !10899
  %69 = icmp eq i32 %68, 0, !dbg !10900
  br i1 %69, label %121, label %70, !dbg !10901

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10902
  %72 = and i32 %71, 12, !dbg !10902
  %73 = icmp eq i32 %72, 0, !dbg !10905
  br i1 %73, label %82, label %74, !dbg !10906

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10907
  %76 = and i32 %75, 12, !dbg !10907
  %77 = icmp eq i32 %76, 8, !dbg !10908
  br i1 %77, label %78, label %90, !dbg !10909

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10910
  %80 = and i32 %79, 4194304, !dbg !10911
  %81 = icmp eq i32 %80, 0, !dbg !10912
  br i1 %81, label %82, label %90, !dbg !10913

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10914
  %84 = and i32 %83, 2, !dbg !10914
  %85 = icmp eq i32 %84, 0, !dbg !10914
  br i1 %85, label %114, label %86, !dbg !10917

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10918
  %88 = load i32, i32* %87, align 4, !dbg !10918
  %89 = icmp eq i32 %88, 1, !dbg !10919
  br i1 %89, label %114, label %311, !dbg !10920

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10921
  %92 = load i32, i32* %91, align 4, !dbg !10921
  %93 = icmp eq i32 %92, 0, !dbg !10924
  br i1 %93, label %104, label %94, !dbg !10925

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10926
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %95, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %96, !dbg !10929

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10930
  %98 = and i32 %97, 2, !dbg !10931
  %99 = icmp eq i32 %98, 0, !dbg !10931
  br i1 %99, label %100, label %114, !dbg !10929

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10932
  %102 = sub i32 %101, %95, !dbg !10935
  %103 = icmp ugt i32 %102, 2, !dbg !10936
  br i1 %103, label %311, label %96, !dbg !10937, !llvm.loop !10938

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10940
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %105, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %106, !dbg !10943

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10944
  %108 = and i32 %107, 2, !dbg !10944
  %109 = icmp eq i32 %108, 0, !dbg !10944
  br i1 %109, label %121, label %110, !dbg !10943

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10945
  %112 = sub i32 %111, %105, !dbg !10948
  %113 = icmp ugt i32 %112, 2, !dbg !10949
  br i1 %113, label %311, label %106, !dbg !10950, !llvm.loop !10951

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10953
  %116 = and i32 %115, -249, !dbg !10953
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10953
  %118 = load i32, i32* %117, align 4, !dbg !10953
  %119 = shl i32 %118, 3, !dbg !10953
  %120 = or i32 %119, %116, !dbg !10953
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10953
  br label %121, !dbg !10954

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10954
  %123 = and i32 %122, 8, !dbg !10956
  %124 = icmp eq i32 %123, 0, !dbg !10957
  br i1 %124, label %149, label %125, !dbg !10958

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10959
  %127 = load i32, i32* %126, align 4, !dbg !10959
  %128 = icmp eq i32 %127, 0, !dbg !10962
  br i1 %128, label %139, label %129, !dbg !10963

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10964
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %130, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %131, !dbg !10967

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10968
  %133 = and i32 %132, 2, !dbg !10969
  %134 = icmp eq i32 %133, 0, !dbg !10969
  br i1 %134, label %135, label %149, !dbg !10967

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10970
  %137 = sub i32 %136, %130, !dbg !10973
  %138 = icmp ugt i32 %137, 2, !dbg !10974
  br i1 %138, label %311, label %131, !dbg !10975, !llvm.loop !10976

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10978
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %140, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %141, !dbg !10981

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10982
  %143 = and i32 %142, 2, !dbg !10982
  %144 = icmp eq i32 %143, 0, !dbg !10982
  br i1 %144, label %149, label %145, !dbg !10981

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10983
  %147 = sub i32 %146, %140, !dbg !10986
  %148 = icmp ugt i32 %147, 2, !dbg !10987
  br i1 %148, label %311, label %141, !dbg !10988, !llvm.loop !10989

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10991
  %151 = and i32 %150, 4, !dbg !10992
  %152 = icmp eq i32 %151, 0, !dbg !10993
  br i1 %152, label %221, label %153, !dbg !10994

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10820, metadata !DIExpression()), !dbg !10995
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10996
  %155 = and i32 %154, 268435456, !dbg !10996
  %156 = icmp eq i32 %155, 0, !dbg !10996
  br i1 %156, label %157, label %164, !dbg !10997

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10998
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10824, metadata !DIExpression()), !dbg !10998
  store volatile i32 0, i32* %2, align 4, !dbg !10998
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10998
  %160 = or i32 %159, 268435456, !dbg !10998
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10998
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10998
  %162 = and i32 %161, 268435456, !dbg !10998
  store volatile i32 %162, i32* %2, align 4, !dbg !10998
  %163 = load volatile i32, i32* %2, align 4, !dbg !10998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10999
  call void @llvm.dbg.value(metadata i32 1, metadata !10820, metadata !DIExpression()), !dbg !10995
  br label %164, !dbg !11000

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10820, metadata !DIExpression()), !dbg !10995
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11001
  %166 = and i32 %165, 256, !dbg !11001
  %167 = icmp eq i32 %166, 0, !dbg !11001
  br i1 %167, label %168, label %180, !dbg !11003

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11004
  %170 = or i32 %169, 256, !dbg !11004
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11004
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !11006
  call void @llvm.dbg.value(metadata i32 %171, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %172, !dbg !11007

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11008
  %174 = and i32 %173, 256, !dbg !11008
  %175 = icmp eq i32 %174, 0, !dbg !11008
  br i1 %175, label %176, label %180, !dbg !11007

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !11009
  %178 = sub i32 %177, %171, !dbg !11012
  %179 = icmp ugt i32 %178, 2, !dbg !11013
  br i1 %179, label %311, label %172, !dbg !11014, !llvm.loop !11015

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11017
  %182 = load i32, i32* %181, align 4, !dbg !11017
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11020

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11021
  %185 = or i32 %184, 1, !dbg !11021
  br label %196, !dbg !11021

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11023
  %188 = or i32 %187, 4, !dbg !11023
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11023
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11023
  %190 = or i32 %189, 1, !dbg !11023
  br label %196, !dbg !11023

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11026
  %193 = and i32 %192, -2, !dbg !11026
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11026
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11026
  %195 = and i32 %194, -5, !dbg !11026
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11028
  %198 = load i32, i32* %181, align 4, !dbg !11029
  %199 = icmp eq i32 %198, 0, !dbg !11031
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %200, metadata !10818, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %200, metadata !10818, metadata !DIExpression()), !dbg !10828
  br i1 %199, label %209, label %201, !dbg !11033

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11034
  %203 = and i32 %202, 2, !dbg !11036
  %204 = icmp eq i32 %203, 0, !dbg !11036
  br i1 %204, label %205, label %217, !dbg !11037

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !11038
  %207 = sub i32 %206, %200, !dbg !11041
  %208 = icmp ugt i32 %207, 5000, !dbg !11042
  br i1 %208, label %311, label %201, !dbg !11043, !llvm.loop !11044

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11046
  %211 = and i32 %210, 2, !dbg !11046
  %212 = icmp eq i32 %211, 0, !dbg !11046
  br i1 %212, label %217, label %213, !dbg !11048

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !11049
  %215 = sub i32 %214, %200, !dbg !11052
  %216 = icmp ugt i32 %215, 5000, !dbg !11053
  br i1 %216, label %311, label %209, !dbg !11054, !llvm.loop !11055

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11057

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11058
  %220 = and i32 %219, -268435457, !dbg !11058
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11058
  br label %221, !dbg !11061

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11062
  %223 = load i32, i32* %222, align 4, !dbg !11062
  %224 = icmp eq i32 %223, 0, !dbg !11064
  br i1 %224, label %310, label %225, !dbg !11065

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11066
  %227 = and i32 %226, 12, !dbg !11066
  %228 = icmp eq i32 %227, 8, !dbg !11069
  br i1 %228, label %277, label %229, !dbg !11070

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11071
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11074
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %231, metadata !10818, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %231, metadata !10818, metadata !DIExpression()), !dbg !10828
  br i1 %230, label %232, label %269, !dbg !11075

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11076
  %234 = and i32 %233, 33554432, !dbg !11076
  %235 = icmp eq i32 %234, 0, !dbg !11076
  br i1 %235, label %240, label %236, !dbg !11078

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !11079
  %238 = sub i32 %237, %231, !dbg !11082
  %239 = icmp ugt i32 %238, 2, !dbg !11083
  br i1 %239, label %311, label %232, !dbg !11084, !llvm.loop !11085

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11087
  %242 = load i32, i32* %241, align 4, !dbg !11087
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11087
  %244 = load i32, i32* %243, align 4, !dbg !11087
  %245 = or i32 %244, %242, !dbg !11087
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11087
  %247 = load i32, i32* %246, align 4, !dbg !11087
  %248 = shl i32 %247, 6, !dbg !11087
  %249 = or i32 %245, %248, !dbg !11087
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11087
  %251 = load i32, i32* %250, align 4, !dbg !11087
  %252 = shl i32 %251, 15, !dbg !11087
  %253 = add i32 %252, -65536, !dbg !11087
  %254 = and i32 %253, -65536, !dbg !11087
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11087
  %256 = load i32, i32* %255, align 4, !dbg !11087
  %257 = shl i32 %256, 24, !dbg !11087
  %258 = or i32 %249, %257, !dbg !11087
  %259 = or i32 %258, %254, !dbg !11087
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11087
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11088
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %260, metadata !10818, metadata !DIExpression()), !dbg !10828
  br label %261, !dbg !11090

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11091
  %263 = and i32 %262, 33554432, !dbg !11092
  %264 = icmp eq i32 %263, 0, !dbg !11092
  br i1 %264, label %265, label %310, !dbg !11090

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11093
  %267 = sub i32 %266, %260, !dbg !11096
  %268 = icmp ugt i32 %267, 2, !dbg !11097
  br i1 %268, label %311, label %261, !dbg !11098, !llvm.loop !11099

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11101
  %271 = and i32 %270, 33554432, !dbg !11101
  %272 = icmp eq i32 %271, 0, !dbg !11101
  br i1 %272, label %310, label %273, !dbg !11103

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11104
  %275 = sub i32 %274, %231, !dbg !11107
  %276 = icmp ugt i32 %275, 2, !dbg !11108
  br i1 %276, label %311, label %269, !dbg !11109, !llvm.loop !11110

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11112
  br i1 %278, label %311, label %279, !dbg !11115

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %280, metadata !10819, metadata !DIExpression()), !dbg !10828
  %281 = and i32 %280, 4194304, !dbg !11118
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11120
  %283 = load i32, i32* %282, align 4, !dbg !11120
  %284 = icmp eq i32 %281, %283, !dbg !11121
  br i1 %284, label %285, label %311, !dbg !11122

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11123
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11124
  %288 = load i32, i32* %287, align 4, !dbg !11124
  %289 = icmp eq i32 %286, %288, !dbg !11125
  br i1 %289, label %290, label %311, !dbg !11126

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11127
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11128
  %293 = load i32, i32* %292, align 4, !dbg !11128
  %294 = shl i32 %293, 6, !dbg !11129
  %295 = icmp eq i32 %291, %294, !dbg !11130
  br i1 %295, label %296, label %311, !dbg !11131

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11132
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11133
  %299 = load i32, i32* %298, align 4, !dbg !11133
  %300 = shl i32 %299, 15, !dbg !11134
  %301 = add i32 %300, -65536, !dbg !11134
  %302 = and i32 %301, -65536, !dbg !11134
  %303 = icmp eq i32 %297, %302, !dbg !11135
  br i1 %303, label %304, label %311, !dbg !11136

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11137
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11138
  %307 = load i32, i32* %306, align 4, !dbg !11138
  %308 = shl i32 %307, 24, !dbg !11139
  %309 = icmp eq i32 %305, %308, !dbg !11140
  br i1 %309, label %310, label %311, !dbg !11141

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11142

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10828
  ret i32 %312, !dbg !11143
}

; Function Attrs: optsize
declare !dbg !11144 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11146 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11159, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11160, metadata !DIExpression()), !dbg !11162
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11163
  br i1 %3, label %115, label %4, !dbg !11165

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11166
  %6 = and i32 %5, 7, !dbg !11166
  %7 = icmp ult i32 %6, %1, !dbg !11168
  br i1 %7, label %8, label %13, !dbg !11169

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11170
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11170
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11172
  %11 = and i32 %10, 7, !dbg !11172
  %12 = icmp eq i32 %11, %1, !dbg !11174
  br i1 %12, label %13, label %115, !dbg !11175

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11176
  %15 = load i32, i32* %14, align 4, !dbg !11176
  %16 = and i32 %15, 2, !dbg !11178
  %17 = icmp eq i32 %16, 0, !dbg !11179
  br i1 %17, label %39, label %18, !dbg !11180

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11181
  %20 = icmp eq i32 %19, 0, !dbg !11184
  br i1 %20, label %25, label %21, !dbg !11185

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11186
  %23 = or i32 %22, 7168, !dbg !11186
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11186
  %24 = load i32, i32* %14, align 4, !dbg !11188
  br label %25, !dbg !11190

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11188
  %27 = and i32 %26, 8, !dbg !11191
  %28 = icmp eq i32 %27, 0, !dbg !11192
  br i1 %28, label %32, label %29, !dbg !11193

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11194
  %31 = or i32 %30, 57344, !dbg !11194
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11194
  br label %32, !dbg !11196

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11197
  %34 = and i32 %33, -241, !dbg !11197
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11197
  %36 = load i32, i32* %35, align 4, !dbg !11197
  %37 = or i32 %34, %36, !dbg !11197
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11197
  %38 = load i32, i32* %14, align 4, !dbg !11198
  br label %39, !dbg !11200

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11198
  %41 = and i32 %40, 1, !dbg !11201
  %42 = icmp eq i32 %41, 0, !dbg !11202
  br i1 %42, label %73, label %43, !dbg !11203

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11204
  %45 = load i32, i32* %44, align 4, !dbg !11204
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11207

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11208
  %48 = and i32 %47, 131072, !dbg !11211
  %49 = icmp eq i32 %48, 0, !dbg !11211
  br i1 %49, label %115, label %58, !dbg !11212

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11213
  %52 = and i32 %51, 33554432, !dbg !11217
  %53 = icmp eq i32 %52, 0, !dbg !11217
  br i1 %53, label %115, label %58, !dbg !11218

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11219
  %56 = and i32 %55, 2, !dbg !11222
  %57 = icmp eq i32 %56, 0, !dbg !11222
  br i1 %57, label %115, label %58, !dbg !11223

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11224
  %60 = and i32 %59, -4, !dbg !11224
  %61 = or i32 %60, %45, !dbg !11224
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11224
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %62, metadata !11161, metadata !DIExpression()), !dbg !11162
  br label %63, !dbg !11226

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11227
  %65 = and i32 %64, 12, !dbg !11227
  %66 = load i32, i32* %44, align 4, !dbg !11228
  %67 = shl i32 %66, 2, !dbg !11229
  %68 = icmp eq i32 %65, %67, !dbg !11230
  br i1 %68, label %73, label %69, !dbg !11226

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11231
  %71 = sub i32 %70, %62, !dbg !11234
  %72 = icmp ugt i32 %71, 5000, !dbg !11235
  br i1 %72, label %115, label %63, !dbg !11236, !llvm.loop !11237

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11239
  %75 = and i32 %74, 7, !dbg !11239
  %76 = icmp ugt i32 %75, %1, !dbg !11241
  br i1 %76, label %77, label %82, !dbg !11242

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11243
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11243
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11245
  %80 = and i32 %79, 7, !dbg !11245
  %81 = icmp eq i32 %80, %1, !dbg !11247
  br i1 %81, label %82, label %115, !dbg !11248

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11249
  %84 = and i32 %83, 4, !dbg !11251
  %85 = icmp eq i32 %84, 0, !dbg !11252
  br i1 %85, label %93, label %86, !dbg !11253

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11254
  %88 = and i32 %87, -7169, !dbg !11254
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11254
  %90 = load i32, i32* %89, align 4, !dbg !11254
  %91 = or i32 %88, %90, !dbg !11254
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11254
  %92 = load i32, i32* %14, align 4, !dbg !11256
  br label %93, !dbg !11258

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11256
  %95 = and i32 %94, 8, !dbg !11259
  %96 = icmp eq i32 %95, 0, !dbg !11260
  br i1 %96, label %104, label %97, !dbg !11261

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11262
  %99 = and i32 %98, -57345, !dbg !11262
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11262
  %101 = load i32, i32* %100, align 4, !dbg !11262
  %102 = shl i32 %101, 3, !dbg !11262
  %103 = or i32 %102, %99, !dbg !11262
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11262
  br label %104, !dbg !11264

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11265
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11266
  %107 = lshr i32 %106, 4, !dbg !11267
  %108 = and i32 %107, 15, !dbg !11267
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11268
  %110 = load i8, i8* %109, align 1, !dbg !11268
  %111 = zext i8 %110 to i32, !dbg !11268
  %112 = lshr i32 %105, %111, !dbg !11269
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11270
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11271
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11272
  br label %115, !dbg !11273

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11162
  ret i32 %116, !dbg !11274
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11277, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11278, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 0, metadata !11280, metadata !DIExpression()), !dbg !11281
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11282
  %2 = and i32 %1, 12, !dbg !11283
  %3 = icmp eq i32 %2, 8, !dbg !11284
  br i1 %3, label %4, label %21, !dbg !11284

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11285
  %6 = and i32 %5, 63, !dbg !11288
  call void @llvm.dbg.value(metadata i32 %6, metadata !11277, metadata !DIExpression()), !dbg !11281
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11289
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11291
  %9 = lshr i32 %8, 6, !dbg !11291
  %10 = and i32 %9, 511, !dbg !11291
  %11 = zext i32 %10 to i64, !dbg !11291
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11291
  %13 = zext i32 %6 to i64, !dbg !11291
  %14 = udiv i64 %12, %13, !dbg !11291
  %15 = trunc i64 %14 to i32, !dbg !11291
  call void @llvm.dbg.value(metadata i32 %15, metadata !11278, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 %15, metadata !11278, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 %15, metadata !11278, metadata !DIExpression()), !dbg !11281
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11292
  %17 = lshr i32 %16, 15, !dbg !11293
  %18 = and i32 %17, 6, !dbg !11293
  %19 = add nuw nsw i32 %18, 2, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %19, metadata !11279, metadata !DIExpression()), !dbg !11281
  %20 = udiv i32 %15, %19, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %20, metadata !11280, metadata !DIExpression()), !dbg !11281
  br label %21, !dbg !11295

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11296
  call void @llvm.dbg.value(metadata i32 %22, metadata !11280, metadata !DIExpression()), !dbg !11281
  ret i32 %22, !dbg !11297
}

; Function Attrs: optsize
declare !dbg !11298 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11301 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11305, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.value(metadata i32 %1, metadata !11306, metadata !DIExpression()), !dbg !11325
  call void @llvm.dbg.value(metadata i32 %2, metadata !11307, metadata !DIExpression()), !dbg !11325
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11326
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11326
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11308, metadata !DIExpression()), !dbg !11327
  %8 = icmp eq i32 %0, 0, !dbg !11328
  br i1 %8, label %9, label %23, !dbg !11329

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11330
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11330
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11318, metadata !DIExpression()), !dbg !11330
  store volatile i32 0, i32* %5, align 4, !dbg !11330
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11330
  %12 = or i32 %11, 1, !dbg !11330
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11330
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11330
  %14 = and i32 %13, 1, !dbg !11330
  store volatile i32 %14, i32* %5, align 4, !dbg !11330
  %15 = load volatile i32, i32* %5, align 4, !dbg !11330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11331
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11332
  store i32 256, i32* %16, align 4, !dbg !11333
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11334
  store i32 2, i32* %17, align 4, !dbg !11335
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11336
  store i32 3, i32* %18, align 4, !dbg !11337
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11338
  store i32 0, i32* %19, align 4, !dbg !11339
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11340
  store i32 0, i32* %20, align 4, !dbg !11341
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11342
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11343
  %22 = and i32 %21, -123731969, !dbg !11343
  br label %38, !dbg !11344

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11345
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11322, metadata !DIExpression()), !dbg !11345
  store volatile i32 0, i32* %6, align 4, !dbg !11345
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11345
  %26 = or i32 %25, 4, !dbg !11345
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11345
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11345
  %28 = and i32 %27, 4, !dbg !11345
  store volatile i32 %28, i32* %6, align 4, !dbg !11345
  %29 = load volatile i32, i32* %6, align 4, !dbg !11345
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11346
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11347
  store i32 512, i32* %30, align 4, !dbg !11348
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11349
  store i32 2, i32* %31, align 4, !dbg !11350
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11351
  store i32 3, i32* %32, align 4, !dbg !11352
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11353
  store i32 0, i32* %33, align 4, !dbg !11354
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11355
  store i32 0, i32* %34, align 4, !dbg !11356
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11357
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11358
  %36 = and i32 %35, 134217727, !dbg !11358
  %37 = shl i32 %2, 3, !dbg !11358
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11359
  %42 = or i32 %41, %40, !dbg !11359
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11359
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11360
  ret void, !dbg !11360
}

; Function Attrs: optsize
declare !dbg !11361 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11365 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11366
  ret void, !dbg !11367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11368 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11369
  ret void, !dbg !11370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11371 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11372
  ret i32 %1, !dbg !11373
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11374 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11375
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11376
  %3 = lshr i32 %2, 10, !dbg !11377
  %4 = and i32 %3, 7, !dbg !11377
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11378
  %6 = load i8, i8* %5, align 1, !dbg !11378
  %7 = zext i8 %6 to i32, !dbg !11378
  %8 = lshr i32 %1, %7, !dbg !11379
  ret i32 %8, !dbg !11380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11381 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11382
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11383
  %3 = lshr i32 %2, 13, !dbg !11384
  %4 = and i32 %3, 7, !dbg !11384
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11385
  %6 = load i8, i8* %5, align 1, !dbg !11385
  %7 = zext i8 %6 to i32, !dbg !11385
  %8 = lshr i32 %1, %7, !dbg !11386
  ret i32 %8, !dbg !11387
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11392, metadata !DIExpression()), !dbg !11393
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11394
  store i32 15, i32* %2, align 4, !dbg !11395
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11396
  %4 = and i32 %3, 262144, !dbg !11398
  %5 = icmp eq i32 %4, 0, !dbg !11399
  br i1 %5, label %8, label %6, !dbg !11400

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11401
  store i32 327680, i32* %7, align 4, !dbg !11403
  br label %15, !dbg !11404

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11405
  %10 = and i32 %9, 65536, !dbg !11407
  %11 = icmp eq i32 %10, 0, !dbg !11408
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11409
  br i1 %11, label %14, label %13, !dbg !11410

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11411
  br label %15, !dbg !11413

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11414
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11416
  %17 = and i32 %16, 1, !dbg !11418
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11419
  store i32 %17, i32* %18, align 4, !dbg !11421
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11422
  %20 = lshr i32 %19, 3, !dbg !11423
  %21 = and i32 %20, 31, !dbg !11423
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11424
  store i32 %21, i32* %22, align 4, !dbg !11425
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11426
  %24 = and i32 %23, 4, !dbg !11428
  %25 = icmp eq i32 %24, 0, !dbg !11429
  br i1 %25, label %28, label %26, !dbg !11430

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11431
  store i32 5, i32* %27, align 4, !dbg !11433
  br label %35, !dbg !11434

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11435
  %30 = and i32 %29, 1, !dbg !11437
  %31 = icmp eq i32 %30, 0, !dbg !11438
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11439
  br i1 %31, label %34, label %33, !dbg !11440

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11441
  br label %35, !dbg !11443

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11444
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11446
  %37 = and i32 %36, 1, !dbg !11448
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11449
  store i32 %37, i32* %38, align 4, !dbg !11451
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11452
  %40 = and i32 %39, 16777216, !dbg !11454
  %41 = icmp eq i32 %40, 0, !dbg !11455
  %42 = select i1 %41, i32 1, i32 2, !dbg !11456
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11457
  store i32 %42, i32* %43, align 4, !dbg !11459
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11460
  %45 = and i32 %44, 4194304, !dbg !11461
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11462
  store i32 %45, i32* %46, align 4, !dbg !11463
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11464
  %48 = and i32 %47, 63, !dbg !11465
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11466
  store i32 %48, i32* %49, align 4, !dbg !11467
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11468
  %51 = lshr i32 %50, 6, !dbg !11469
  %52 = and i32 %51, 511, !dbg !11469
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11470
  store i32 %52, i32* %53, align 4, !dbg !11471
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11472
  %55 = shl i32 %54, 1, !dbg !11473
  %56 = and i32 %55, 393216, !dbg !11473
  %57 = add nuw nsw i32 %56, 131072, !dbg !11473
  %58 = lshr exact i32 %57, 16, !dbg !11474
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11475
  store i32 %58, i32* %59, align 4, !dbg !11476
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11477
  %61 = lshr i32 %60, 24, !dbg !11478
  %62 = and i32 %61, 15, !dbg !11478
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11479
  store i32 %62, i32* %63, align 4, !dbg !11480
  ret void, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11486, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata i32* %1, metadata !11487, metadata !DIExpression()), !dbg !11488
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11489
  store i32 15, i32* %3, align 4, !dbg !11490
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11491
  %5 = and i32 %4, 3, !dbg !11492
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11493
  store i32 %5, i32* %6, align 4, !dbg !11494
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11495
  %8 = and i32 %7, 240, !dbg !11496
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11497
  store i32 %8, i32* %9, align 4, !dbg !11498
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11499
  %11 = and i32 %10, 7168, !dbg !11500
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11501
  store i32 %11, i32* %12, align 4, !dbg !11502
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11503
  %14 = lshr i32 %13, 3, !dbg !11504
  %15 = and i32 %14, 7168, !dbg !11504
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11505
  store i32 %15, i32* %16, align 4, !dbg !11506
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11507
  %18 = and i32 %17, 7, !dbg !11508
  store i32 %18, i32* %1, align 4, !dbg !11509
  ret void, !dbg !11510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11511 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11512
  %2 = and i32 %1, 128, !dbg !11512
  %3 = icmp eq i32 %2, 0, !dbg !11512
  br i1 %3, label %5, label %4, !dbg !11514

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11515
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11517
  br label %5, !dbg !11518

5:                                                ; preds = %4, %0
  ret void, !dbg !11519
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11520 {
  ret void, !dbg !11521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11525, metadata !DIExpression()), !dbg !11526
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11527
  ret void, !dbg !11528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i32 1000, metadata !11533, metadata !DIExpression()), !dbg !11534
  %2 = udiv i32 %0, 1000, !dbg !11535
  %3 = add nsw i32 %2, -1, !dbg !11536
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11537
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11538
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11539
  ret void, !dbg !11540
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11541 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11543, metadata !DIExpression()), !dbg !11545
  %3 = bitcast i32* %2 to i8*, !dbg !11546
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11546
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11544, metadata !DIExpression()), !dbg !11547
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11548
  store volatile i32 %4, i32* %2, align 4, !dbg !11547
  %5 = load volatile i32, i32* %2, align 4, !dbg !11549
  %6 = icmp eq i32 %0, -1, !dbg !11550
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()), !dbg !11545
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %8, metadata !11543, metadata !DIExpression()), !dbg !11545
  br label %9, !dbg !11552

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11543, metadata !DIExpression()), !dbg !11545
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11553
  call void @llvm.dbg.value(metadata i32 undef, metadata !11543, metadata !DIExpression()), !dbg !11545
  %12 = shl i32 %11, 15, !dbg !11545
  %13 = ashr i32 %12, 31, !dbg !11545
  %14 = add i32 %13, %10, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %14, metadata !11543, metadata !DIExpression()), !dbg !11545
  %15 = icmp eq i32 %14, 0, !dbg !11552
  br i1 %15, label %16, label %9, !dbg !11552

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11556
  ret void, !dbg !11556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11559, metadata !DIExpression()), !dbg !11560
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11561
  ret void, !dbg !11562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11568, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11571, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11572, metadata !DIExpression()), !dbg !11573
  %2 = icmp eq i32 %0, 0, !dbg !11574
  br i1 %2, label %35, label %3, !dbg !11576

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11577
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11580
  %6 = icmp eq i32 %5, 32768, !dbg !11582
  br i1 %6, label %7, label %12, !dbg !11583

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 60000000, !dbg !11584
  br i1 %8, label %12, label %9, !dbg !11587

9:                                                ; preds = %7
  %10 = icmp ugt i32 %0, 30000000, !dbg !11588
  %11 = zext i1 %10 to i32, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %11, metadata !11571, metadata !DIExpression()), !dbg !11573
  br label %12, !dbg !11591

12:                                               ; preds = %7, %9, %3
  %13 = phi i32 [ %11, %9 ], [ 0, %3 ], [ 2, %7 ], !dbg !11573
  call void @llvm.dbg.value(metadata i32 %13, metadata !11571, metadata !DIExpression()), !dbg !11573
  %14 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11592
  %15 = icmp eq i32 %14, 16384, !dbg !11594
  br i1 %15, label %16, label %24, !dbg !11595

16:                                               ; preds = %12
  %17 = icmp ugt i32 %0, 60000000, !dbg !11596
  %18 = icmp eq i32 %13, 0
  %19 = and i1 %17, %18, !dbg !11599
  br i1 %19, label %24, label %20, !dbg !11599

20:                                               ; preds = %16
  %21 = icmp ugt i32 %0, 30000000, !dbg !11600
  %22 = and i1 %21, %18, !dbg !11603
  %23 = select i1 %22, i32 1, i32 %13, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %23, metadata !11571, metadata !DIExpression()), !dbg !11573
  br label %24, !dbg !11603

24:                                               ; preds = %16, %20, %12
  %25 = phi i32 [ %23, %20 ], [ %13, %12 ], [ 2, %16 ], !dbg !11604
  call void @llvm.dbg.value(metadata i32 %25, metadata !11571, metadata !DIExpression()), !dbg !11573
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %25) #26, !dbg !11605
  call void @llvm.dbg.value(metadata i32 2, metadata !11569, metadata !DIExpression()), !dbg !11573
  br label %26, !dbg !11606

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 2, %24 ], [ %29, %26 ], !dbg !11604
  call void @llvm.dbg.value(metadata i32 %27, metadata !11569, metadata !DIExpression()), !dbg !11573
  %28 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11607
  call void @llvm.dbg.value(metadata i32 %28, metadata !11570, metadata !DIExpression()), !dbg !11573
  %29 = add nsw i32 %27, -1, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %29, metadata !11569, metadata !DIExpression()), !dbg !11573
  %30 = icmp ne i32 %28, %25, !dbg !11610
  %31 = icmp ne i32 %29, 0, !dbg !11611
  %32 = select i1 %30, i1 %31, i1 false, !dbg !11611
  br i1 %32, label %26, label %33, !dbg !11612, !llvm.loop !11613

33:                                               ; preds = %26
  %34 = zext i1 %30 to i32
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi i32 [ 1, %1 ], [ %34, %33 ], !dbg !11615
  call void @llvm.dbg.value(metadata i32 %36, metadata !11572, metadata !DIExpression()), !dbg !11573
  ret i32 %36, !dbg !11616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11617 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11619
  %2 = and i32 %1, 49152, !dbg !11619
  ret i32 %2, !dbg !11620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11625
  %3 = and i32 %2, -8, !dbg !11625
  %4 = or i32 %3, %0, !dbg !11625
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11625
  ret void, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11628
  %2 = and i32 %1, 7, !dbg !11628
  ret i32 %2, !dbg !11629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11630 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11648, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11649, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 0, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11653
  %4 = icmp eq i32 %3, 0, !dbg !11655
  br i1 %4, label %5, label %21, !dbg !11656

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11651, metadata !DIExpression()), !dbg !11652
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.80() #26, !dbg !11659
  %8 = icmp eq i32 %7, 1, !dbg !11661
  br i1 %8, label %13, label %9, !dbg !11662

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.81() #26, !dbg !11663
  br label %10, !dbg !11665

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.80() #26, !dbg !11666
  %12 = icmp eq i32 %11, 1, !dbg !11667
  br i1 %12, label %13, label %10, !dbg !11665, !llvm.loop !11668

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11670
  %15 = load i32, i32* %14, align 4, !dbg !11670
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11671
  %17 = load i32, i32* %16, align 4, !dbg !11671
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11672
  %19 = load i32, i32* %18, align 4, !dbg !11672
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.82(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11673
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %20, metadata !11650, metadata !DIExpression()), !dbg !11652
  br label %21, !dbg !11675

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11676
  call void @llvm.dbg.value(metadata i32 %22, metadata !11650, metadata !DIExpression()), !dbg !11652
  ret i32 %22, !dbg !11677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11678 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11682, metadata !DIExpression()), !dbg !11683
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.84() #26, !dbg !11684
  %2 = icmp ne i32 %1, 0, !dbg !11686
  call void @llvm.dbg.value(metadata i1 %2, metadata !11682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11683
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11687
  %4 = icmp ne i32 %3, 0, !dbg !11689
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11690
  %6 = zext i1 %5 to i32, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %6, metadata !11682, metadata !DIExpression()), !dbg !11683
  ret i32 %6, !dbg !11691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11696, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11697, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.value(metadata i32 0, metadata !11698, metadata !DIExpression()), !dbg !11699
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11700
  %4 = load i32, i32* %3, align 4, !dbg !11700
  %5 = and i32 %4, 63, !dbg !11701
  %6 = udiv i32 %0, %5, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %6, metadata !11698, metadata !DIExpression()), !dbg !11699
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11703
  %8 = load i32, i32* %7, align 4, !dbg !11703
  %9 = and i32 %8, 511, !dbg !11704
  %10 = mul i32 %9, %6, !dbg !11705
  call void @llvm.dbg.value(metadata i32 %10, metadata !11698, metadata !DIExpression()), !dbg !11699
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11706
  %12 = load i32, i32* %11, align 4, !dbg !11706
  %13 = lshr i32 %12, 15, !dbg !11707
  %14 = and i32 %13, 131070, !dbg !11707
  %15 = add nuw nsw i32 %14, 2, !dbg !11707
  %16 = udiv i32 %10, %15, !dbg !11708
  call void @llvm.dbg.value(metadata i32 %16, metadata !11698, metadata !DIExpression()), !dbg !11699
  ret i32 %16, !dbg !11709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.80() unnamed_addr #16 !dbg !11710 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11711
  %2 = lshr i32 %1, 1, !dbg !11712
  %3 = and i32 %2, 1, !dbg !11712
  ret i32 %3, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.81() unnamed_addr #15 !dbg !11714 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11715
  %2 = or i32 %1, 1, !dbg !11715
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.82(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11719, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 %1, metadata !11720, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 %2, metadata !11721, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 %3, metadata !11722, metadata !DIExpression()), !dbg !11723
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11724
  %6 = and i32 %5, -4227072, !dbg !11724
  %7 = or i32 %1, %0, !dbg !11724
  %8 = shl i32 %2, 6, !dbg !11724
  %9 = or i32 %7, %8, !dbg !11724
  %10 = or i32 %9, %6, !dbg !11724
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11724
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11725
  %12 = and i32 %11, -196609, !dbg !11725
  %13 = or i32 %12, %3, !dbg !11725
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11731, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11732, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 0, metadata !11733, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 0, metadata !11734, metadata !DIExpression()), !dbg !11735
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11736
  %4 = load i32, i32* %3, align 4, !dbg !11736
  %5 = lshr i32 %4, 4, !dbg !11736
  %6 = and i32 %5, 15, !dbg !11736
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11736
  %8 = load i8, i8* %7, align 1, !dbg !11736
  %9 = zext i8 %8 to i32, !dbg !11736
  %10 = lshr i32 %0, %9, !dbg !11736
  call void @llvm.dbg.value(metadata i32 %10, metadata !11734, metadata !DIExpression()), !dbg !11735
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11737
  %12 = icmp ult i32 %11, %10, !dbg !11739
  br i1 %12, label %13, label %16, !dbg !11740

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %14, metadata !11733, metadata !DIExpression()), !dbg !11735
  %15 = icmp eq i32 %14, 0, !dbg !11743
  br i1 %15, label %16, label %30, !dbg !11745

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.83() #26, !dbg !11746
  br label %17, !dbg !11748

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.84() #26, !dbg !11749
  %19 = icmp eq i32 %18, 1, !dbg !11750
  br i1 %19, label %20, label %17, !dbg !11748, !llvm.loop !11751

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11753
  tail call fastcc void @LL_RCC_SetAHBPrescaler.85(i32 noundef %21) #26, !dbg !11754
  tail call fastcc void @LL_RCC_SetSysClkSource.86() #26, !dbg !11755
  br label %22, !dbg !11756

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.87() #26, !dbg !11757
  %24 = icmp eq i32 %23, 8, !dbg !11758
  br i1 %24, label %25, label %22, !dbg !11756, !llvm.loop !11759

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11761
  %27 = load i32, i32* %26, align 4, !dbg !11761
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.88(i32 noundef %27) #26, !dbg !11762
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11763
  %29 = load i32, i32* %28, align 4, !dbg !11763
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.89(i32 noundef %29) #26, !dbg !11764
  br label %30, !dbg !11765

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11766
  %33 = icmp ugt i32 %32, %10, !dbg !11768
  br i1 %33, label %34, label %36, !dbg !11769

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %35, metadata !11733, metadata !DIExpression()), !dbg !11735
  br label %36, !dbg !11772

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11735
  call void @llvm.dbg.value(metadata i32 %37, metadata !11733, metadata !DIExpression()), !dbg !11735
  %38 = icmp eq i32 %37, 0, !dbg !11773
  br i1 %38, label %39, label %40, !dbg !11775

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11776
  br label %40, !dbg !11778

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.83() unnamed_addr #15 !dbg !11780 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  %2 = or i32 %1, 16777216, !dbg !11781
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.84() unnamed_addr #16 !dbg !11783 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  %2 = lshr i32 %1, 25, !dbg !11785
  %3 = and i32 %2, 1, !dbg !11785
  ret i32 %3, !dbg !11786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.85(i32 noundef %0) unnamed_addr #15 !dbg !11787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11789, metadata !DIExpression()), !dbg !11790
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11791
  %3 = and i32 %2, -241, !dbg !11791
  %4 = or i32 %3, %0, !dbg !11791
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11791
  ret void, !dbg !11792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.86() unnamed_addr #15 !dbg !11793 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11795, metadata !DIExpression()), !dbg !11796
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11797
  %2 = and i32 %1, -4, !dbg !11797
  %3 = or i32 %2, 2, !dbg !11797
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11797
  ret void, !dbg !11798
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.87() unnamed_addr #16 !dbg !11799 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11800
  %2 = and i32 %1, 12, !dbg !11800
  ret i32 %2, !dbg !11801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.88(i32 noundef %0) unnamed_addr #15 !dbg !11802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11804, metadata !DIExpression()), !dbg !11805
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11806
  %3 = and i32 %2, -7169, !dbg !11806
  %4 = or i32 %3, %0, !dbg !11806
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11806
  ret void, !dbg !11807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.89(i32 noundef %0) unnamed_addr #15 !dbg !11808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11810, metadata !DIExpression()), !dbg !11811
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11812
  %3 = and i32 %2, -57345, !dbg !11812
  %4 = or i32 %3, %0, !dbg !11812
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11812
  ret void, !dbg !11813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11814 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11815
  %2 = lshr i32 %1, 27, !dbg !11816
  %3 = and i32 %2, 1, !dbg !11816
  ret i32 %3, !dbg !11817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11822, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11824, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11825, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11826, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11827, metadata !DIExpression()), !dbg !11828
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11829
  %6 = icmp eq i32 %5, 0, !dbg !11831
  br i1 %6, label %7, label %27, !dbg !11832

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %8, metadata !11827, metadata !DIExpression()), !dbg !11828
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.90() #26, !dbg !11835
  %10 = icmp eq i32 %9, 1, !dbg !11837
  br i1 %10, label %19, label %11, !dbg !11838

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11839
  br i1 %12, label %13, label %14, !dbg !11842

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11843
  br label %15, !dbg !11845

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.91() #26, !dbg !11846
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.92() #26, !dbg !11848
  br label %16, !dbg !11849

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.90() #26, !dbg !11850
  %18 = icmp eq i32 %17, 1, !dbg !11851
  br i1 %18, label %19, label %16, !dbg !11849, !llvm.loop !11852

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11854
  %21 = load i32, i32* %20, align 4, !dbg !11854
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11855
  %23 = load i32, i32* %22, align 4, !dbg !11855
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11856
  %25 = load i32, i32* %24, align 4, !dbg !11856
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.82(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11857
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %26, metadata !11826, metadata !DIExpression()), !dbg !11828
  br label %27, !dbg !11859

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11860
  call void @llvm.dbg.value(metadata i32 %28, metadata !11826, metadata !DIExpression()), !dbg !11828
  ret i32 %28, !dbg !11861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.90() unnamed_addr #16 !dbg !11862 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11863
  %2 = lshr i32 %1, 17, !dbg !11864
  %3 = and i32 %2, 1, !dbg !11864
  ret i32 %3, !dbg !11865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11866 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  %2 = or i32 %1, 262144, !dbg !11867
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11867
  ret void, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.91() unnamed_addr #15 !dbg !11869 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %2 = and i32 %1, -262145, !dbg !11870
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  ret void, !dbg !11871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.92() unnamed_addr #15 !dbg !11872 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11873
  %2 = or i32 %1, 65536, !dbg !11873
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11873
  ret void, !dbg !11874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11875 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11878, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11878, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11878, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11894
  ret void, !dbg !11895
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11900, metadata !DIExpression()), !dbg !11902
  %2 = icmp eq i8* %0, null, !dbg !11903
  br i1 %2, label %29, label %3, !dbg !11905

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11906
  %5 = icmp eq i8 %4, 0, !dbg !11907
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11908
  br i1 %6, label %29, label %8, !dbg !11908

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11901, metadata !DIExpression()), !dbg !11902
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11909

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11901, metadata !DIExpression()), !dbg !11902
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11911
  br i1 %10, label %11, label %15, !dbg !11916

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11917
  %13 = load i8*, i8** %12, align 4, !dbg !11917
  %14 = icmp eq i8* %13, %0, !dbg !11918
  br i1 %14, label %29, label %15, !dbg !11919

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11920
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11901, metadata !DIExpression()), !dbg !11902
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11921
  br i1 %17, label %7, label %8, !dbg !11922, !llvm.loop !11923

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11901, metadata !DIExpression()), !dbg !11902
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11925
  br i1 %20, label %21, label %26, !dbg !11929

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11930
  %23 = load i8*, i8** %22, align 4, !dbg !11930
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11931
  %25 = icmp eq i32 %24, 0, !dbg !11932
  br i1 %25, label %29, label %26, !dbg !11933

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11934
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11901, metadata !DIExpression()), !dbg !11902
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11935
  br i1 %28, label %29, label %18, !dbg !11909, !llvm.loop !11936

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11902
  ret %struct.device* %30, !dbg !11938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11943, metadata !DIExpression()), !dbg !11944
  %2 = icmp eq %struct.device* %0, null, !dbg !11945
  br i1 %2, label %14, label %3, !dbg !11947

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11948
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11948
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11949
  %7 = load i8, i8* %6, align 1, !dbg !11949
  %8 = and i8 %7, 1, !dbg !11949
  %9 = icmp eq i8 %8, 0, !dbg !11949
  br i1 %9, label %14, label %10, !dbg !11950

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11951
  %12 = load i8, i8* %11, align 1, !dbg !11951
  %13 = icmp eq i8 %12, 0, !dbg !11952
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11944
  ret i1 %15, !dbg !11953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11954 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11959, metadata !DIExpression()), !dbg !11960
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11961
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11963 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11971, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11972, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.value(metadata i8* %2, metadata !11973, metadata !DIExpression()), !dbg !11976
  %5 = bitcast i32* %4 to i8*, !dbg !11977
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11977
  call void @llvm.dbg.value(metadata i32 0, metadata !11974, metadata !DIExpression()), !dbg !11976
  store i32 0, i32* %4, align 4, !dbg !11978
  call void @llvm.dbg.value(metadata i32* %4, metadata !11974, metadata !DIExpression(DW_OP_deref)), !dbg !11976
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11979
  call void @llvm.dbg.value(metadata i16* %6, metadata !11975, metadata !DIExpression()), !dbg !11976
  %7 = load i32, i32* %4, align 4, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %7, metadata !11974, metadata !DIExpression()), !dbg !11976
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11981
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11982
  ret i32 %8, !dbg !11983
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11988, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32* %1, metadata !11989, metadata !DIExpression()), !dbg !11994
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11995
  %4 = load i16*, i16** %3, align 4, !dbg !11995
  call void @llvm.dbg.value(metadata i16* %4, metadata !11990, metadata !DIExpression()), !dbg !11994
  %5 = icmp eq i16* %4, null, !dbg !11996
  br i1 %5, label %14, label %6, !dbg !11997

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11998
  call void @llvm.dbg.value(metadata i32 %7, metadata !11991, metadata !DIExpression()), !dbg !11998
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11999
  %9 = load i16, i16* %8, align 2, !dbg !11999
  %10 = add i16 %9, -32767, !dbg !12000
  %11 = icmp ult i16 %10, 2, !dbg !12000
  %12 = add i32 %7, 1, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %12, metadata !11991, metadata !DIExpression()), !dbg !11998
  br i1 %11, label %13, label %6, !dbg !12000, !llvm.loop !12003

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12006
  br label %14, !dbg !12007

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12009 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12013, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %1, metadata !12014, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12015, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i8* %3, metadata !12016, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12017, metadata !DIExpression()), !dbg !12025
  %5 = icmp eq i32 %1, 0, !dbg !12026
  br i1 %5, label %16, label %8, !dbg !12027

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12017, metadata !DIExpression()), !dbg !12025
  %7 = icmp eq i32 %15, %1, !dbg !12026
  br i1 %7, label %16, label %8, !dbg !12027, !llvm.loop !12028

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12017, metadata !DIExpression()), !dbg !12025
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12030
  %11 = load i16, i16* %10, align 2, !dbg !12030
  call void @llvm.dbg.value(metadata i16 %11, metadata !12019, metadata !DIExpression()), !dbg !12031
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12032
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12022, metadata !DIExpression()), !dbg !12031
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %13, metadata !12023, metadata !DIExpression()), !dbg !12031
  %14 = icmp slt i32 %13, 0, !dbg !12034
  %15 = add nuw i32 %9, 1, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %15, metadata !12017, metadata !DIExpression()), !dbg !12025
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12038 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12042, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12043, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12044, metadata !DIExpression()), !dbg !12045
  %2 = sext i16 %0 to i32, !dbg !12046
  %3 = icmp slt i16 %0, 1, !dbg !12048
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12049
  %6 = add nsw i32 %2, -1, !dbg !12049
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12049
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12049
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12043, metadata !DIExpression()), !dbg !12045
  ret %struct.device* %8, !dbg !12050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12051 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12053, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12054, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i8* %2, metadata !12055, metadata !DIExpression()), !dbg !12058
  %5 = bitcast i32* %4 to i8*, !dbg !12059
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 0, metadata !12056, metadata !DIExpression()), !dbg !12058
  store i32 0, i32* %4, align 4, !dbg !12060
  call void @llvm.dbg.value(metadata i32* %4, metadata !12056, metadata !DIExpression(DW_OP_deref)), !dbg !12058
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12061
  call void @llvm.dbg.value(metadata i16* %6, metadata !12057, metadata !DIExpression()), !dbg !12058
  %7 = load i32, i32* %4, align 4, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %7, metadata !12056, metadata !DIExpression()), !dbg !12058
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12064
  ret i32 %8, !dbg !12065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12068, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32* %1, metadata !12069, metadata !DIExpression()), !dbg !12073
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12074
  %4 = load i16*, i16** %3, align 4, !dbg !12074
  call void @llvm.dbg.value(metadata i16* %4, metadata !12070, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 0, metadata !12072, metadata !DIExpression()), !dbg !12073
  %5 = icmp eq i16* %4, null, !dbg !12075
  br i1 %5, label %22, label %6, !dbg !12077

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i16* %8, metadata !12070, metadata !DIExpression()), !dbg !12073
  %9 = load i16, i16* %8, align 2, !dbg !12078
  %10 = icmp eq i16 %9, -32768, !dbg !12082
  call void @llvm.dbg.value(metadata i32 undef, metadata !12071, metadata !DIExpression()), !dbg !12073
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12083
  call void @llvm.dbg.value(metadata i16* %11, metadata !12070, metadata !DIExpression()), !dbg !12073
  %12 = zext i1 %10 to i32, !dbg !12084
  %13 = add i32 %7, %12, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %13, metadata !12071, metadata !DIExpression()), !dbg !12073
  %14 = icmp eq i32 %13, 2, !dbg !12085
  br i1 %14, label %15, label %6, !dbg !12086

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12073
  call void @llvm.dbg.value(metadata i32 %16, metadata !12072, metadata !DIExpression()), !dbg !12073
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12087
  %18 = load i16, i16* %17, align 2, !dbg !12087
  %19 = icmp eq i16 %18, 32767, !dbg !12088
  %20 = add i32 %16, 1, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %20, metadata !12072, metadata !DIExpression()), !dbg !12073
  br i1 %19, label %21, label %15, !dbg !12091, !llvm.loop !12092

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12094
  br label %22, !dbg !12095

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12096
  call void @llvm.dbg.value(metadata i16* %23, metadata !12070, metadata !DIExpression()), !dbg !12073
  ret i16* %23, !dbg !12097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12098 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12101
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12102
  ret i32* %2, !dbg !12103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12104 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12252, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12253, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12254, metadata !DIExpression()), !dbg !12255
  ret void, !dbg !12256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12261, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 %1, metadata !12262, metadata !DIExpression()), !dbg !12263
  ret void, !dbg !12264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12265 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12269, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %1, metadata !12270, metadata !DIExpression()), !dbg !12271
  ret void, !dbg !12272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12277, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i8* %1, metadata !12278, metadata !DIExpression()), !dbg !12279
  ret i32 -134, !dbg !12280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12285, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i8* %1, metadata !12286, metadata !DIExpression()), !dbg !12287
  ret i32 -134, !dbg !12288
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12292, metadata !DIExpression()), !dbg !12293
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12294, !srcloc !12300
  call void @llvm.dbg.value(metadata i32 undef, metadata !12297, metadata !DIExpression()) #25, !dbg !12301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #25, !dbg !12301
  br label %3, !dbg !12302

3:                                                ; preds = %3, %1
  br label %3, !dbg !12303, !llvm.loop !12306
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12313, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12314, metadata !DIExpression()), !dbg !12315
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12316
  unreachable, !dbg !12316
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12319, metadata !DIExpression()), !dbg !12320
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12321
  unreachable, !dbg !12321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12324, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12325, metadata !DIExpression()), !dbg !12328
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12329, !srcloc !12300
  call void @llvm.dbg.value(metadata i32 undef, metadata !12297, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 undef, metadata !12298, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 undef, metadata !12326, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12327, metadata !DIExpression()), !dbg !12328
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12332
  br i1 %4, label %6, label %5, !dbg !12334

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12335
  br label %7, !dbg !12336

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12335
  br label %7, !dbg !12339

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %8, metadata !12297, metadata !DIExpression()) #25, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %8, metadata !12326, metadata !DIExpression()), !dbg !12328
  %9 = tail call fastcc %struct.k_thread* @k_current_get.99() #28, !dbg !12341
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12327, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.value(metadata i32 undef, metadata !12342, metadata !DIExpression()) #25, !dbg !12345
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12347, !srcloc !12348
  tail call fastcc void @k_thread_abort.100(%struct.k_thread* noundef %9) #26, !dbg !12349
  ret void, !dbg !12352
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.99() unnamed_addr #9 !dbg !12353 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.101() #28, !dbg !12357
  ret %struct.k_thread* %1, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.100(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12363, metadata !DIExpression()), !dbg !12364
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12365, !srcloc !12367
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12368
  ret void, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.101() unnamed_addr #9 !dbg !12370 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12371, !srcloc !12373
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12374
  ret %struct.k_thread* %1, !dbg !12375
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12380, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %1, metadata !12381, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 %2, metadata !12382, metadata !DIExpression()), !dbg !12383
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12384
  ret void, !dbg !12385
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12386 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12390, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8* %1, metadata !12391, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i32 %2, metadata !12392, metadata !DIExpression()), !dbg !12393
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12396 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12397
  ret void, !dbg !12398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12401, metadata !DIExpression()), !dbg !12402
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12403
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12404
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12405
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12406
  %4 = trunc i32 %0 to i8, !dbg !12407
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12408
  store i8 %4, i8* %5, align 4, !dbg !12409
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12410
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12411
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12412
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12413
  store i8* %8, i8** %9, align 4, !dbg !12414
  ret void, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12418, metadata !DIExpression()), !dbg !12424
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12425
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12419, metadata !DIExpression()), !dbg !12424
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12426
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12420, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i8* null, metadata !12423, metadata !DIExpression()), !dbg !12424
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12427
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12428
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12429
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12430
  ret void, !dbg !12431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12432 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12436, metadata !DIExpression()), !dbg !12437
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12438
  ret i8* %2, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12445, metadata !DIExpression()), !dbg !12446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12447
  %3 = load i8, i8* %2, align 1, !dbg !12448
  %4 = and i8 %3, -5, !dbg !12448
  store i8 %4, i8* %2, align 1, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12450 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12453
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12454
  %3 = ptrtoint i8* %2 to i32, !dbg !12463
  %4 = add i32 %3, 2048, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %4, metadata !12458, metadata !DIExpression()) #25, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %4, metadata !12466, metadata !DIExpression()) #25, !dbg !12469
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12471, !srcloc !12472
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12473
  %6 = or i32 %5, 512, !dbg !12473
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12473
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -2, i32 noundef 255) #27, !dbg !12474
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -5, i32 noundef 0) #27, !dbg !12477
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -12, i32 noundef 0) #27, !dbg !12478
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -11, i32 noundef 0) #27, !dbg !12479
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -10, i32 noundef 0) #27, !dbg !12480
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -4, i32 noundef 0) #27, !dbg !12481
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12482
  %8 = or i32 %7, 458752, !dbg !12482
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12482
  tail call void @z_arm_fault_init() #27, !dbg !12483
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12484
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12485
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12488
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12489
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12490
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12491
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12491
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12452, metadata !DIExpression()), !dbg !12492
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12493
  call void @z_device_state_init() #27, !dbg !12494
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12495
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12496
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12497
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12498
  unreachable, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2117, metadata !DIExpression()), !dbg !12499
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12500
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12500
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2118, metadata !DIExpression()), !dbg !12499
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2118, metadata !DIExpression()), !dbg !12499
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12501
  br i1 %7, label %8, label %35, !dbg !12502

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2118, metadata !DIExpression()), !dbg !12499
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12503
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12503
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2128, metadata !DIExpression()), !dbg !12504
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12505
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12505
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %14, metadata !2132, metadata !DIExpression()), !dbg !12504
  %15 = icmp eq %struct.device* %11, null, !dbg !12507
  br i1 %15, label %32, label %16, !dbg !12509

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12510
  br i1 %17, label %26, label %18, !dbg !12513

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12514
  call void @llvm.dbg.value(metadata i32 %19, metadata !2132, metadata !DIExpression()), !dbg !12504
  %20 = icmp ult i32 %19, 255, !dbg !12516
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %21, metadata !2132, metadata !DIExpression()), !dbg !12504
  %22 = trunc i32 %21 to i8, !dbg !12517
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12518
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12518
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12519
  store i8 %22, i8* %25, align 1, !dbg !12520
  br label %26, !dbg !12521

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12522
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12522
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12523
  %30 = load i8, i8* %29, align 1, !dbg !12524
  %31 = or i8 %30, 1, !dbg !12524
  store i8 %31, i8* %29, align 1, !dbg !12524
  br label %32, !dbg !12525

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2118, metadata !DIExpression()), !dbg !12499
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12501
  br i1 %34, label %8, label %35, !dbg !12502, !llvm.loop !12527

35:                                               ; preds = %32, %1
  ret void, !dbg !12529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.108(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 %1, metadata !12533, metadata !DIExpression()), !dbg !12534
  %3 = trunc i32 %1 to i8, !dbg !12535
  %4 = shl i8 %3, 4, !dbg !12535
  %5 = and i32 %0, 15, !dbg !12538
  %6 = add nsw i32 %5, -4, !dbg !12539
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12540
  store volatile i8 %4, i8* %7, align 1, !dbg !12541
  ret void, !dbg !12542
}

; Function Attrs: optsize
declare !dbg !12543 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12547, metadata !DIExpression()), !dbg !12548
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12549
  store i8 1, i8* %2, align 1, !dbg !12550
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12551
  store i8 1, i8* %3, align 4, !dbg !12552
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12553
  store i32 0, i32* %4, align 4, !dbg !12554
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12555
  store i32 0, i32* %5, align 4, !dbg !12556
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12557
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12558
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12561 {
  tail call void @z_sched_init() #27, !dbg !12566
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12567
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0)) #27, !dbg !12568
  call void @llvm.dbg.value(metadata i8* %1, metadata !12565, metadata !DIExpression()), !dbg !12569
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12570
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12571
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12572
  ret i8* %1, !dbg !12573
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12576, metadata !DIExpression()), !dbg !12577
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12578
  unreachable, !dbg !12579
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %1, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %2, metadata !12584, metadata !DIExpression()), !dbg !12585
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12586
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12587
  tail call void @boot_banner() #27, !dbg !12588
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12589
  tail call void @z_init_static_threads() #27, !dbg !12590
  tail call void @main() #27, !dbg !12591
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12592
  %5 = and i8 %4, -2, !dbg !12592
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12592
  ret void, !dbg !12593
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12594 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12604, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8* %1, metadata !12605, metadata !DIExpression()), !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12608 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.value(metadata i8* %1, metadata !12611, metadata !DIExpression()), !dbg !12612
  ret void, !dbg !12613
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12614 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12615, !srcloc !12622
  call void @llvm.dbg.value(metadata i32 %1, metadata !12618, metadata !DIExpression()) #25, !dbg !12623
  %2 = icmp ne i32 %1, 0, !dbg !12624
  ret i1 %2, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12626 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12627
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12628
  %3 = load i8, i8* %2, align 4, !dbg !12629
  %4 = or i8 %3, 1, !dbg !12629
  store i8 %4, i8* %2, align 4, !dbg !12629
  ret void, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12631 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12633
  %3 = load i8, i8* %2, align 4, !dbg !12634
  %4 = and i8 %3, -2, !dbg !12634
  store i8 %4, i8* %2, align 4, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12636 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12638
  %3 = load i8, i8* %2, align 4, !dbg !12638
  %4 = and i8 %3, 1, !dbg !12639
  %5 = icmp ne i8 %4, 0, !dbg !12640
  ret i1 %5, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12646, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i8* %1, metadata !12647, metadata !DIExpression()), !dbg !12648
  ret i32 -88, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12654, metadata !DIExpression()), !dbg !12655
  ret i8* null, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12661, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i8* %1, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %2, metadata !12663, metadata !DIExpression()), !dbg !12664
  ret i32 -88, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2253, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* %1, metadata !2254, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %2, metadata !2255, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 0, metadata !2256, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8 undef, metadata !2258, metadata !DIExpression()), !dbg !12666
  %4 = icmp eq i8* %1, null, !dbg !12667
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12669
  br i1 %6, label %46, label %7, !dbg !12669

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12670
  %9 = load i8, i8* %8, align 1, !dbg !12670
  call void @llvm.dbg.value(metadata i8 %9, metadata !2258, metadata !DIExpression()), !dbg !12666
  %10 = add i32 %2, -1, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %10, metadata !2255, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8 0, metadata !2259, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i8 %9, metadata !2258, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 0, metadata !2256, metadata !DIExpression()), !dbg !12666
  %11 = icmp eq i8 %9, 0, !dbg !12673
  br i1 %11, label %12, label %15, !dbg !12675

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12676
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12677
  store i8 0, i8* %14, align 1, !dbg !12678
  br label %46, !dbg !12679

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2259, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i8 %17, metadata !2258, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %18, metadata !2256, metadata !DIExpression()), !dbg !12666
  %19 = zext i8 %17 to i32, !dbg !12680
  %20 = zext i8 %16 to i32, !dbg !12681
  %21 = shl nuw i32 1, %20, !dbg !12681
  call void @llvm.dbg.value(metadata i32 %21, metadata !2257, metadata !DIExpression()), !dbg !12666
  %22 = and i32 %21, %19, !dbg !12683
  %23 = icmp eq i32 %22, 0, !dbg !12685
  br i1 %23, label %42, label %24, !dbg !12686

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12687
  %26 = sub i32 %10, %18, !dbg !12688
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12689
  %28 = load i8*, i8** %27, align 4, !dbg !12689
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12690
  %30 = load i32, i32* %29, align 4, !dbg !12690
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12691
  %32 = add i32 %31, %18, !dbg !12692
  call void @llvm.dbg.value(metadata i32 %32, metadata !2256, metadata !DIExpression()), !dbg !12666
  %33 = trunc i32 %21 to i8, !dbg !12693
  %34 = xor i8 %33, -1, !dbg !12693
  %35 = and i8 %17, %34, !dbg !12693
  call void @llvm.dbg.value(metadata i8 %35, metadata !2258, metadata !DIExpression()), !dbg !12666
  %36 = icmp eq i8 %35, 0, !dbg !12694
  br i1 %36, label %12, label %37, !dbg !12696

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12697
  %39 = sub i32 %10, %32, !dbg !12699
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12700
  %41 = add i32 %40, %32, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %41, metadata !2256, metadata !DIExpression()), !dbg !12666
  br label %42, !dbg !12702

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12666
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12666
  call void @llvm.dbg.value(metadata i8 %44, metadata !2258, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %43, metadata !2256, metadata !DIExpression()), !dbg !12666
  %45 = add i8 %16, 1, !dbg !12703
  call void @llvm.dbg.value(metadata i8 %45, metadata !2259, metadata !DIExpression()), !dbg !12672
  br label %15, !dbg !12675

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.110, i32 0, i32 0), %3 ], !dbg !12666
  ret i8* %47, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12709, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 %1, metadata !12710, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i8* %2, metadata !12711, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 %3, metadata !12712, metadata !DIExpression()), !dbg !12714
  %5 = icmp ult i32 %1, %3, !dbg !12715
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12715
  call void @llvm.dbg.value(metadata i32 %6, metadata !12713, metadata !DIExpression()), !dbg !12714
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12716
  ret i32 %6, !dbg !12717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12722, metadata !DIExpression()), !dbg !12723
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12724
  ret void, !dbg !12725
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12735, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12736, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %2, metadata !12737, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12738, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %4, metadata !12739, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %5, metadata !12740, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* %6, metadata !12741, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %7, metadata !12742, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %8, metadata !12743, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i8* undef, metadata !12744, metadata !DIExpression()), !dbg !12746
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12747
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !12748
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12749
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12750
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12751
  call void @llvm.dbg.value(metadata i8* %13, metadata !12745, metadata !DIExpression()), !dbg !12746
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12752
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12753
  store i8* null, i8** %14, align 4, !dbg !12754
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12755
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12755
  br i1 %16, label %20, label %17, !dbg !12757

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12758
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12758
  br label %20, !dbg !12759

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12746
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12760
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12762
  ret i8* %13, !dbg !12763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !12764 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12771
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12779, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %1, metadata !12780, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %2, metadata !12781, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %3, metadata !12782, metadata !DIExpression()), !dbg !12783
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12784
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12785
  %6 = trunc i32 %3 to i8, !dbg !12786
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12787
  store i8 %6, i8* %7, align 4, !dbg !12788
  %8 = trunc i32 %2 to i8, !dbg !12789
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12790
  store i8 %8, i8* %9, align 1, !dbg !12791
  %10 = trunc i32 %1 to i8, !dbg !12792
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12793
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12793
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12793
  store i8 %10, i8* %13, align 2, !dbg !12794
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12795
  store i8 0, i8* %14, align 1, !dbg !12796
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12797
  ret void, !dbg !12798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12803, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12804, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %2, metadata !12805, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %4 = add i32 %2, 7, !dbg !12812
  %5 = and i32 %4, -8, !dbg !12812
  %6 = add i32 %5, 64, !dbg !12812
  call void @llvm.dbg.value(metadata i32 %6, metadata !12806, metadata !DIExpression()), !dbg !12811
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.120(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12814
  call void @llvm.dbg.value(metadata i8* %7, metadata !12809, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 %5, metadata !12807, metadata !DIExpression()), !dbg !12811
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12815
  call void @llvm.dbg.value(metadata i8* %8, metadata !12808, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 0, metadata !12810, metadata !DIExpression()), !dbg !12811
  %9 = ptrtoint i8* %7 to i32, !dbg !12816
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12817
  store i32 %9, i32* %10, align 4, !dbg !12818
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12819
  store i32 %5, i32* %11, align 4, !dbg !12820
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12821
  store i32 0, i32* %12, align 4, !dbg !12822
  call void @llvm.dbg.value(metadata i8* %8, metadata !12808, metadata !DIExpression()), !dbg !12811
  ret i8* %8, !dbg !12823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.120(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12828, metadata !DIExpression()), !dbg !12829
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12830
  ret i8* %2, !dbg !12831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12837, metadata !DIExpression()), !dbg !12838
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12839
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12840
  ret void, !dbg !12841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12842 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12844, metadata !DIExpression()), !dbg !12845
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12846
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12847
  ret void, !dbg !12848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12849 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12853, metadata !DIExpression()), !dbg !12854
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12855
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12856
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12857
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12858
  ret void, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12865, metadata !DIExpression()), !dbg !12866
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12867
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12868
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12869
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12870
  ret void, !dbg !12871
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12872 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12889, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12880, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12881, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %2, metadata !12882, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12883, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %4, metadata !12884, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %5, metadata !12885, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8* %6, metadata !12886, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %7, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %8, metadata !12888, metadata !DIExpression()), !dbg !12890
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12891
  %13 = icmp eq i64 %11, -1, !dbg !12892
  br i1 %13, label %15, label %14, !dbg !12894

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12895
  br label %15, !dbg !12897

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12899 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12903, metadata !DIExpression()), !dbg !12905
  %4 = icmp eq i64 %3, 0, !dbg !12906
  br i1 %4, label %5, label %6, !dbg !12908

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12909
  br label %7, !dbg !12911

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12912
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12919, metadata !DIExpression()), !dbg !12920
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12921, !srcloc !12923
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12926 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12929, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12928, metadata !DIExpression()), !dbg !12930
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12931
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12932
  ret void, !dbg !12933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12934 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12936, metadata !DIExpression()), !dbg !12956
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12957

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12958
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12954, metadata !DIExpression()), !dbg !12959
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12960

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12936, metadata !DIExpression()), !dbg !12956
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12961
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12961
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12964
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12964
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12965
  %9 = load i32, i32* %8, align 4, !dbg !12965
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12966
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12966
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12967
  %13 = load i8*, i8** %12, align 4, !dbg !12967
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12968
  %15 = load i8*, i8** %14, align 4, !dbg !12968
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12969
  %17 = load i8*, i8** %16, align 4, !dbg !12969
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12970
  %19 = load i32, i32* %18, align 4, !dbg !12970
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12971
  %21 = load i32, i32* %20, align 4, !dbg !12971
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12972
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12973
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12974
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12975
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12975
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12976
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12936, metadata !DIExpression()), !dbg !12956
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12977
  br i1 %27, label %2, label %1, !dbg !12957, !llvm.loop !12979

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !12958
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12954, metadata !DIExpression()), !dbg !12959
  br label %29, !dbg !12960

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !12981
  ret void, !dbg !12982

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12954, metadata !DIExpression()), !dbg !12959
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12983
  %33 = load i32, i32* %32, align 4, !dbg !12983
  %34 = icmp eq i32 %33, -1, !dbg !12987
  br i1 %34, label %43, label %35, !dbg !12988

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12989
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12989
  %38 = icmp sgt i32 %33, 0, !dbg !12991
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12991
  %40 = zext i32 %39 to i64, !dbg !12991
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12991
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12992
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12992
  br label %43, !dbg !12993

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12994
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12954, metadata !DIExpression()), !dbg !12959
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12995
  br i1 %45, label %30, label %29, !dbg !12960, !llvm.loop !12997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12999 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.value(metadata i64 %0, metadata !13006, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 1000, metadata !13011, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 10000, metadata !13012, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13013, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13014, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13015, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13016, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 1, metadata !13017, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8 0, metadata !13018, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i64 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i64 0, metadata !13019, metadata !DIExpression()), !dbg !13023
  %2 = mul i64 %0, 10, !dbg !13025
  ret i64 %2, !dbg !13031
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13032 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13034, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %1, metadata !13035, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %2, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %3, metadata !13037, metadata !DIExpression()), !dbg !13038
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13039
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13040
  %7 = load i8, i8* %6, align 4, !dbg !13041
  %8 = or i8 %7, 4, !dbg !13041
  store i8 %8, i8* %6, align 4, !dbg !13041
  tail call void @z_thread_essential_clear() #26, !dbg !13042
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13043
  unreachable, !dbg !13043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13048, metadata !DIExpression()), !dbg !13049
  ret i32 -134, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %1, metadata !13056, metadata !DIExpression()), !dbg !13057
  ret i32 -134, !dbg !13058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13066, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13067, metadata !DIExpression()), !dbg !13068
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13069
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13071
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13068
  ret i32 %6, !dbg !13072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13073 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13077, metadata !DIExpression()), !dbg !13078
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13079
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13078
  ret i32 %3, !dbg !13081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13082 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13086 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13088, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %1, metadata !13089, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %2, metadata !13090, metadata !DIExpression()), !dbg !13091
  br label %4, !dbg !13092

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13093, !srcloc !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13096, metadata !DIExpression()) #25, !dbg !13101
  call void @llvm.dbg.value(metadata i32 undef, metadata !13097, metadata !DIExpression()) #25, !dbg !13101
  tail call fastcc void @k_cpu_idle() #26, !dbg !13102
  br label %4, !dbg !13092, !llvm.loop !13103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13105 {
  tail call void @arch_cpu_idle() #27, !dbg !13106
  ret void, !dbg !13107
}

; Function Attrs: optsize
declare !dbg !13108 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13127, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* %1, metadata !13128, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %2, metadata !13129, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %3, metadata !13130, metadata !DIExpression()), !dbg !13131
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13132
  store i32 %2, i32* %5, align 4, !dbg !13133
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13134
  store i32 %3, i32* %6, align 4, !dbg !13135
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13136
  store i8* %1, i8** %7, align 4, !dbg !13137
  %8 = mul i32 %3, %2, !dbg !13138
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13139
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13140
  store i8* %9, i8** %10, align 4, !dbg !13141
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13142
  store i8* %1, i8** %11, align 4, !dbg !13143
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13144
  store i8* %1, i8** %12, align 4, !dbg !13145
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13146
  store i32 0, i32* %13, align 4, !dbg !13147
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13148
  store i8 0, i8* %14, align 4, !dbg !13149
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13150
  tail call fastcc void @z_waitq_init.125(%struct._wait_q_t* noundef %15) #26, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.125(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13153 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13157, metadata !DIExpression()), !dbg !13158
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13159
  tail call fastcc void @sys_dlist_init.126(%struct._dnode* noundef %2) #26, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.126(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13167, metadata !DIExpression()), !dbg !13168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13169
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13170
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13171
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13172
  ret void, !dbg !13173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13174 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13178, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 %1, metadata !13179, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.value(metadata i32 %2, metadata !13180, metadata !DIExpression()), !dbg !13184
  %5 = bitcast i32* %4 to i8*, !dbg !13185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13185
  call void @llvm.dbg.value(metadata i32* %4, metadata !13183, metadata !DIExpression(DW_OP_deref)), !dbg !13184
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13186
  br i1 %6, label %13, label %7, !dbg !13188

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %8, metadata !13183, metadata !DIExpression()), !dbg !13184
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13191
  call void @llvm.dbg.value(metadata i8* %9, metadata !13181, metadata !DIExpression()), !dbg !13184
  %10 = icmp eq i8* %9, null, !dbg !13192
  br i1 %10, label %13, label %11, !dbg !13194

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13195
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13197
  store i8 1, i8* %12, align 4, !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13182, metadata !DIExpression()), !dbg !13184
  br label %13, !dbg !13199

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13200
  call void @llvm.dbg.value(metadata i32 %14, metadata !13182, metadata !DIExpression()), !dbg !13184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13201
  ret i32 %14, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13208, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 %1, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32* %2, metadata !13210, metadata !DIExpression()), !dbg !13211
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13212
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13212
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13212
  store i32 %6, i32* %2, align 4, !dbg !13212
  ret i1 %5, !dbg !13213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13218, metadata !DIExpression()), !dbg !13219
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13220
  ret i8* %2, !dbg !13221
}

; Function Attrs: optsize
declare !dbg !13222 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13225 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13229, metadata !DIExpression()), !dbg !13230
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13231
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13231
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13231
  br i1 %4, label %5, label %15, !dbg !13233

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13234
  %7 = load i8, i8* %6, align 4, !dbg !13234
  %8 = and i8 %7, 1, !dbg !13236
  %9 = icmp eq i8 %8, 0, !dbg !13237
  br i1 %9, label %15, label %10, !dbg !13238

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13239
  %12 = load i8*, i8** %11, align 4, !dbg !13239
  tail call void @k_free(i8* noundef %12) #27, !dbg !13241
  %13 = load i8, i8* %6, align 4, !dbg !13242
  %14 = and i8 %13, -2, !dbg !13242
  store i8 %14, i8* %6, align 4, !dbg !13242
  br label %15, !dbg !13243

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13230
  ret i32 %16, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13249, metadata !DIExpression()), !dbg !13250
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13251
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13252
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13253
  ret %struct.k_thread* %4, !dbg !13254
}

; Function Attrs: optsize
declare !dbg !13255 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13260, metadata !DIExpression()), !dbg !13261
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13262
  br i1 %2, label %6, label %3, !dbg !13262

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13263
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13263
  br label %6, !dbg !13262

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13262
  ret %struct._dnode* %7, !dbg !13264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13265 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13269, metadata !DIExpression()), !dbg !13270
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13271
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13271
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13272
  ret i1 %4, !dbg !13273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13284, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13282, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i8* %1, metadata !13283, metadata !DIExpression()), !dbg !13292
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13301
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13303, !srcloc !13309
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %6, metadata !13306, metadata !DIExpression()) #25, !dbg !13310
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %6, metadata !13300, metadata !DIExpression()) #25, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %6, metadata !13286, metadata !DIExpression()), !dbg !13292
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13311
  %8 = load i32, i32* %7, align 4, !dbg !13311
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13313
  %10 = load i32, i32* %9, align 4, !dbg !13313
  %11 = icmp ult i32 %8, %10, !dbg !13314
  br i1 %11, label %12, label %42, !dbg !13315

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13316
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13285, metadata !DIExpression()), !dbg !13292
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13319
  br i1 %15, label %24, label %16, !dbg !13321

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13322
  %18 = load i8*, i8** %17, align 4, !dbg !13322
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13324
  %20 = load i32, i32* %19, align 4, !dbg !13324
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13326, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata i32 0, metadata !13331, metadata !DIExpression()), !dbg !13332
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13334
  store i32 0, i32* %22, align 4, !dbg !13335
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !13336
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13337
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !13337
  br label %53, !dbg !13338

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13339
  %26 = load i8*, i8** %25, align 4, !dbg !13339
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13341
  %28 = load i32, i32* %27, align 4, !dbg !13341
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !13342
  %30 = load i32, i32* %27, align 4, !dbg !13343
  %31 = load i8*, i8** %25, align 4, !dbg !13344
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13344
  store i8* %32, i8** %25, align 4, !dbg !13344
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13345
  %34 = load i8*, i8** %33, align 4, !dbg !13345
  %35 = icmp eq i8* %32, %34, !dbg !13347
  br i1 %35, label %36, label %39, !dbg !13348

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13349
  %38 = load i8*, i8** %37, align 4, !dbg !13349
  store i8* %38, i8** %25, align 4, !dbg !13351
  br label %39, !dbg !13352

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13353
  %41 = add i32 %40, 1, !dbg !13353
  store i32 %41, i32* %7, align 4, !dbg !13353
  call void @llvm.dbg.value(metadata i32 0, metadata !13291, metadata !DIExpression()), !dbg !13292
  br label %51, !dbg !13354

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13284, metadata !DIExpression()), !dbg !13292
  %44 = icmp eq i64 %43, 0, !dbg !13355
  br i1 %44, label %51, label %45, !dbg !13357

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13358
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13360
  store i8* %1, i8** %47, align 4, !dbg !13361
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13362
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13363
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %50, metadata !13291, metadata !DIExpression()), !dbg !13292
  br label %53, !dbg !13364

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13365
  call void @llvm.dbg.value(metadata i32 %52, metadata !13291, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 %6, metadata !13366, metadata !DIExpression()) #25, !dbg !13372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %6, metadata !13374, metadata !DIExpression()) #25, !dbg !13377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13379, !srcloc !13380
  br label %53, !dbg !13381

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13292
  ret i32 %54, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13383 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13393, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13394, metadata !DIExpression()), !dbg !13395
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13396
  %4 = load i32, i32* %3, align 4, !dbg !13396
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13397
  store i32 %4, i32* %5, align 4, !dbg !13398
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13399
  %7 = load i32, i32* %6, align 4, !dbg !13399
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13400
  store i32 %7, i32* %8, align 4, !dbg !13401
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13402
  %10 = load i32, i32* %9, align 4, !dbg !13402
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13403
  store i32 %10, i32* %11, align 4, !dbg !13404
  ret void, !dbg !13405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13406 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13410, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i8* %1, metadata !13411, metadata !DIExpression()), !dbg !13416
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13418
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13420, !srcloc !13309
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %6, metadata !13306, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %6, metadata !13300, metadata !DIExpression()) #25, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %6, metadata !13413, metadata !DIExpression()), !dbg !13416
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13423
  %8 = load i32, i32* %7, align 4, !dbg !13423
  %9 = icmp eq i32 %8, 0, !dbg !13425
  br i1 %9, label %51, label %10, !dbg !13426

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13427
  %12 = load i8*, i8** %11, align 4, !dbg !13427
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13429
  %14 = load i32, i32* %13, align 4, !dbg !13429
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !13430
  %16 = load i32, i32* %13, align 4, !dbg !13431
  %17 = load i8*, i8** %11, align 4, !dbg !13432
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13432
  store i8* %18, i8** %11, align 4, !dbg !13432
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13433
  %20 = load i8*, i8** %19, align 4, !dbg !13433
  %21 = icmp eq i8* %18, %20, !dbg !13435
  br i1 %21, label %22, label %25, !dbg !13436

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13437
  %24 = load i8*, i8** %23, align 4, !dbg !13437
  store i8* %24, i8** %11, align 4, !dbg !13439
  br label %25, !dbg !13440

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13441
  %27 = add i32 %26, -1, !dbg !13441
  store i32 %27, i32* %7, align 4, !dbg !13441
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13442
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13414, metadata !DIExpression()), !dbg !13416
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13444
  br i1 %30, label %60, label %31, !dbg !13446

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13447
  %33 = load i8*, i8** %32, align 4, !dbg !13447
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13449
  %35 = load i8*, i8** %34, align 4, !dbg !13449
  %36 = load i32, i32* %13, align 4, !dbg !13450
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !13451
  %38 = load i32, i32* %13, align 4, !dbg !13452
  %39 = load i8*, i8** %32, align 4, !dbg !13453
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13453
  store i8* %40, i8** %32, align 4, !dbg !13453
  %41 = load i8*, i8** %19, align 4, !dbg !13454
  %42 = icmp eq i8* %40, %41, !dbg !13456
  br i1 %42, label %43, label %46, !dbg !13457

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13458
  %45 = load i8*, i8** %44, align 4, !dbg !13458
  store i8* %45, i8** %32, align 4, !dbg !13460
  br label %46, !dbg !13461

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13462
  %48 = add i32 %47, 1, !dbg !13462
  store i32 %48, i32* %7, align 4, !dbg !13462
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13326, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.value(metadata i32 0, metadata !13331, metadata !DIExpression()), !dbg !13463
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13465
  store i32 0, i32* %49, align 4, !dbg !13466
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !13467
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13468
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !13468
  br label %62, !dbg !13469

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13412, metadata !DIExpression()), !dbg !13416
  %53 = icmp eq i64 %52, 0, !dbg !13470
  br i1 %53, label %60, label %54, !dbg !13472

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13473
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13475
  store i8* %1, i8** %56, align 4, !dbg !13476
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13477
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13478
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !13478
  call void @llvm.dbg.value(metadata i32 %59, metadata !13415, metadata !DIExpression()), !dbg !13416
  br label %62, !dbg !13479

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13480
  call void @llvm.dbg.value(metadata i32 %61, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 %6, metadata !13366, metadata !DIExpression()) #25, !dbg !13481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13481
  call void @llvm.dbg.value(metadata i32 %6, metadata !13374, metadata !DIExpression()) #25, !dbg !13483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13485, !srcloc !13380
  br label %62, !dbg !13486

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13416
  ret i32 %63, !dbg !13487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13492, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i8* %1, metadata !13493, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13497
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13499, !srcloc !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 undef, metadata !13300, metadata !DIExpression()) #25, !dbg !13497
  call void @llvm.dbg.value(metadata i32 undef, metadata !13494, metadata !DIExpression()), !dbg !13496
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13502
  %5 = load i32, i32* %4, align 4, !dbg !13502
  %6 = icmp eq i32 %5, 0, !dbg !13504
  br i1 %6, label %13, label %7, !dbg !13505

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13506
  %9 = load i8*, i8** %8, align 4, !dbg !13506
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13508
  %11 = load i32, i32* %10, align 4, !dbg !13508
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !13509
  call void @llvm.dbg.value(metadata i32 0, metadata !13495, metadata !DIExpression()), !dbg !13496
  br label %13, !dbg !13510

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13511
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %15, metadata !13306, metadata !DIExpression()) #25, !dbg !13501
  call void @llvm.dbg.value(metadata i32 %15, metadata !13300, metadata !DIExpression()) #25, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %15, metadata !13494, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i32 %14, metadata !13495, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.value(metadata i32 undef, metadata !13366, metadata !DIExpression()) #25, !dbg !13512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13371, metadata !DIExpression()) #25, !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13374, metadata !DIExpression()) #25, !dbg !13514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !13516, !srcloc !13380
  ret i32 %14, !dbg !13517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13518 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13522, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13294, metadata !DIExpression()) #25, !dbg !13526
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13528, !srcloc !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13306, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 undef, metadata !13300, metadata !DIExpression()) #25, !dbg !13526
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()), !dbg !13525
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13531
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13524, metadata !DIExpression()), !dbg !13525
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13532
  br i1 %5, label %11, label %6, !dbg !13533

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13326, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.value(metadata i32 -35, metadata !13331, metadata !DIExpression()), !dbg !13534
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13537
  store i32 -35, i32* %8, align 4, !dbg !13538
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !13539
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13531
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13524, metadata !DIExpression()), !dbg !13525
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13532
  br i1 %10, label %11, label %6, !dbg !13533, !llvm.loop !13540

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13528
  call void @llvm.dbg.value(metadata i32 %12, metadata !13306, metadata !DIExpression()) #25, !dbg !13530
  call void @llvm.dbg.value(metadata i32 %12, metadata !13300, metadata !DIExpression()) #25, !dbg !13526
  call void @llvm.dbg.value(metadata i32 %12, metadata !13523, metadata !DIExpression()), !dbg !13525
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13542
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13543
  store i32 0, i32* %14, align 4, !dbg !13544
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13545
  %16 = load i8*, i8** %15, align 4, !dbg !13545
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13546
  store i8* %16, i8** %17, align 4, !dbg !13547
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13548
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !13548
  ret void, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13554, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13555, metadata !DIExpression()), !dbg !13558
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13559
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13559
  %5 = load i8, i8* %4, align 2, !dbg !13559
  call void @llvm.dbg.value(metadata i8 %5, metadata !13556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13558
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13560
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13560
  %8 = load i8, i8* %7, align 2, !dbg !13560
  call void @llvm.dbg.value(metadata i8 %8, metadata !13557, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13558
  %9 = icmp eq i8 %8, %5, !dbg !13561
  %10 = sext i8 %5 to i32, !dbg !13563
  %11 = sext i8 %8 to i32, !dbg !13563
  %12 = sub nsw i32 %11, %10, !dbg !13563
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13563
  ret i32 %13, !dbg !13564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13569, metadata !DIExpression()), !dbg !13570
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13571
  %3 = icmp eq i32 %2, 0, !dbg !13573
  br i1 %3, label %8, label %4, !dbg !13574

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13575
  %6 = add i32 %5, %2, !dbg !13577
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13578
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13579
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13580
  br label %8, !dbg !13581

8:                                                ; preds = %4, %1
  ret void, !dbg !13582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13587, metadata !DIExpression()), !dbg !13589
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %1, metadata !13588, metadata !DIExpression()), !dbg !13589
  ret i32 %1, !dbg !13591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13596, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 %1, metadata !13597, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 0, metadata !13598, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !13614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13616, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13616
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !13614
  call void @llvm.dbg.value(metadata i32 %4, metadata !13604, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()), !dbg !13606
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13624
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13627
  %6 = icmp sgt i32 %0, 0, !dbg !13628
  %7 = icmp sgt i32 %5, 2, !dbg !13630
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13630
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13630
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13631
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13632
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !13640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !13645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !13647, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !13598, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13598, metadata !DIExpression()), !dbg !13606
  ret void, !dbg !13649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata i32 %0, metadata !13654, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i32 1000, metadata !13657, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 10000, metadata !13658, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i1 true, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i1 false, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  %2 = mul i32 %0, 10, !dbg !13671
  ret i32 %2, !dbg !13677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13680, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !13683
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13685, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13685
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !13687
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !13683
  call void @llvm.dbg.value(metadata i32 %3, metadata !13681, metadata !DIExpression()), !dbg !13682
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13688
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13690
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13691
  br i1 %6, label %7, label %8, !dbg !13692

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13693
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !13697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !13699, !srcloc !13648
  br label %24, !dbg !13700

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13701
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13702
  %10 = icmp eq i32 %9, 0, !dbg !13702
  br i1 %10, label %21, label %11, !dbg !13704

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13705
  br i1 %12, label %13, label %21, !dbg !13706

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13707
  %15 = icmp sgt i32 %14, %0, !dbg !13710
  br i1 %15, label %19, label %16, !dbg !13711

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13712
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13712
  call void @llvm.dbg.value(metadata i32 %18, metadata !13681, metadata !DIExpression()), !dbg !13682
  br label %22, !dbg !13714

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13715
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13715
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13717
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13682
  call void @llvm.dbg.value(metadata i32 %23, metadata !13681, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.value(metadata i32 %23, metadata !13634, metadata !DIExpression()) #25, !dbg !13719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !13719
  call void @llvm.dbg.value(metadata i32 %23, metadata !13642, metadata !DIExpression()) #25, !dbg !13721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !13723, !srcloc !13648
  br label %24, !dbg !13724

24:                                               ; preds = %22, %7
  ret void, !dbg !13724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13729, metadata !DIExpression()), !dbg !13731
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13732
  %3 = icmp eq i32 %2, 0, !dbg !13732
  br i1 %3, label %16, label %4, !dbg !13733

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13734
  br i1 %5, label %16, label %6, !dbg !13735

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13736
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13736
  %9 = load i8, i8* %8, align 2, !dbg !13736
  %10 = sext i8 %9 to i32, !dbg !13737
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13738
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13739
  br i1 %12, label %16, label %13, !dbg !13740

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13741
  %15 = xor i1 %14, true, !dbg !13742
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13731
  call void @llvm.dbg.value(metadata i1 %17, metadata !13730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13731
  ret i1 %17, !dbg !13743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13744 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13748, metadata !DIExpression()), !dbg !13750
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13749, metadata !DIExpression()), !dbg !13750
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13752
  br i1 %3, label %5, label %4, !dbg !13754

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13755
  br label %5, !dbg !13757

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13748, metadata !DIExpression()), !dbg !13750
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13758
  ret i32 %6, !dbg !13759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13762, metadata !DIExpression()), !dbg !13764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13765
  %3 = load i8, i8* %2, align 1, !dbg !13765
  call void @llvm.dbg.value(metadata i8 %3, metadata !13763, metadata !DIExpression()), !dbg !13764
  %4 = and i8 %3, 31, !dbg !13766
  %5 = icmp ne i8 %4, 0, !dbg !13767
  ret i1 %5, !dbg !13768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13771, metadata !DIExpression()), !dbg !13772
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13773
  br i1 %2, label %3, label %7, !dbg !13775

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !13779
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13782
  %5 = load i8, i8* %4, align 1, !dbg !13783
  %6 = and i8 %5, 127, !dbg !13783
  store i8 %6, i8* %4, align 1, !dbg !13783
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !13787
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !13791
  br label %7, !dbg !13792

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !13796
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13798
  %9 = load i8, i8* %8, align 1, !dbg !13799
  %10 = or i8 %9, -128, !dbg !13799
  store i8 %10, i8* %8, align 1, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !13803
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !13815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !13815
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13817
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13819
  br i1 %12, label %23, label %13, !dbg !13817

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13821
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !13822
  %17 = icmp sgt i32 %16, 0, !dbg !13825
  br i1 %17, label %18, label %20, !dbg !13826

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13827
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !13829
  br label %25, !dbg !13830

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !13819
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13814, metadata !DIExpression()) #25, !dbg !13815
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13819
  br i1 %22, label %23, label %13, !dbg !13817, !llvm.loop !13831

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13833
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !13834
  br label %25, !dbg !13835

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13836
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13837
  %28 = zext i1 %27 to i32, !dbg !13837
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13838
  ret void, !dbg !13839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13842, metadata !DIExpression()), !dbg !13843
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13844
  ret i1 %2, !dbg !13845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13846 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13848, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13849, metadata !DIExpression()), !dbg !13850
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13851
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13852
  ret void, !dbg !13853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.132(%struct._dnode* noundef %0) #26, !dbg !13860
  br i1 %2, label %6, label %3, !dbg !13860

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13861
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13861
  br label %6, !dbg !13860

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13860
  ret %struct._dnode* %7, !dbg !13862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13863 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13867, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13868, metadata !DIExpression()), !dbg !13871
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13872
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13872
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13869, metadata !DIExpression()), !dbg !13871
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13873
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13874
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13875
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13876
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13877
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13878
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13885, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13886, metadata !DIExpression()), !dbg !13887
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13888
  br i1 %3, label %6, label %4, !dbg !13889

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13890
  br label %6, !dbg !13889

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13889
  ret %struct._dnode* %7, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13896, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13897, metadata !DIExpression()), !dbg !13899
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13900
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13900
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13898, metadata !DIExpression()), !dbg !13899
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13901
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13902
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13903
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13904
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13905
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13906
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13907
  ret void, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13911, metadata !DIExpression()), !dbg !13913
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13914
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13921, metadata !DIExpression()) #25, !dbg !13923
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13924
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13925
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13912, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13926, metadata !DIExpression()) #25, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %0, metadata !13931, metadata !DIExpression()) #25, !dbg !13932
  %6 = icmp eq i32 %0, 0, !dbg !13935
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13937
  br i1 %6, label %8, label %15, !dbg !13938

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !13939
  br i1 %9, label %15, label %10, !dbg !13941

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !13942
  br i1 %11, label %15, label %12, !dbg !13944

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !13945
  %14 = icmp eq i32 %13, 0, !dbg !13945
  br i1 %14, label %18, label %15, !dbg !13947

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13948
  br i1 %16, label %18, label %17, !dbg !13951

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13952
  br label %18, !dbg !13954

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13937
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13937
  ret void, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13960, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13961, metadata !DIExpression()), !dbg !13963
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef %0) #26, !dbg !13964
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13962, metadata !DIExpression()), !dbg !13963
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13961, metadata !DIExpression()), !dbg !13963
  ret %struct.k_thread* %3, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13968, metadata !DIExpression()), !dbg !13969
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13970
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13971
  %4 = xor i1 %3, true, !dbg !13972
  ret i1 %4, !dbg !13973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13976, metadata !DIExpression()), !dbg !13977
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13978
  %3 = load i16, i16* %2, align 2, !dbg !13978
  %4 = icmp ult i16 %3, 128, !dbg !13979
  %5 = zext i1 %4 to i32, !dbg !13979
  ret i32 %5, !dbg !13980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13981 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13989
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13990
  %4 = xor i1 %3, true, !dbg !13991
  ret i1 %4, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13999, metadata !DIExpression()), !dbg !14000
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14001
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14001
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14002
  ret i1 %4, !dbg !14003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14006, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14007, metadata !DIExpression()), !dbg !14008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14009
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14009
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14010
  br i1 %5, label %9, label %6, !dbg !14011

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14012
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14012
  br label %9, !dbg !14011

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14011
  ret %struct._dnode* %10, !dbg !14013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.132(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14018, metadata !DIExpression()), !dbg !14019
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14020
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14020
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14021
  ret i1 %4, !dbg !14022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14023 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14027, metadata !DIExpression()), !dbg !14030
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14031
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14031
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14028, metadata !DIExpression()), !dbg !14030
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14032
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14032
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14029, metadata !DIExpression()), !dbg !14030
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14033
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14034
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14035
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14036
  tail call fastcc void @sys_dnode_init.133(%struct._dnode* noundef %0) #26, !dbg !14037
  ret void, !dbg !14038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.133(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14041, metadata !DIExpression()), !dbg !14042
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14043
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14044
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14045
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14046
  ret void, !dbg !14047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14052, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 128, metadata !14053, metadata !DIExpression()), !dbg !14054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14055
  %3 = load i8, i8* %2, align 1, !dbg !14055
  %4 = icmp slt i8 %3, 0, !dbg !14056
  ret i1 %4, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i32 %1, metadata !14063, metadata !DIExpression()), !dbg !14064
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14065
  ret i1 %3, !dbg !14066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14071
  ret i1 %2, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %1, metadata !14076, metadata !DIExpression()), !dbg !14077
  %3 = icmp slt i32 %0, %1, !dbg !14078
  ret i1 %3, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 0, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14088
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14090, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14088
  call void @llvm.dbg.value(metadata i32 %3, metadata !14085, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14083, metadata !DIExpression()), !dbg !14087
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14102, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14083, metadata !DIExpression()), !dbg !14087
  ret void, !dbg !14103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14106, metadata !DIExpression()), !dbg !14107
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14108
  br i1 %2, label %24, label %3, !dbg !14110

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14111
  br i1 %4, label %5, label %24, !dbg !14112

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !14113
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14116
  %7 = load i8, i8* %6, align 1, !dbg !14117
  %8 = or i8 %7, -128, !dbg !14117
  store i8 %8, i8* %6, align 1, !dbg !14117
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !14118
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14120
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14122
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14123
  br i1 %10, label %21, label %11, !dbg !14122

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14125
  %15 = icmp sgt i32 %14, 0, !dbg !14126
  br i1 %15, label %16, label %18, !dbg !14127

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14128
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14129
  br label %23, !dbg !14130

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14123
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13814, metadata !DIExpression()) #25, !dbg !14120
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14123
  br i1 %20, label %21, label %11, !dbg !14122, !llvm.loop !14131

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14133
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14134
  br label %23, !dbg !14135

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14136
  br label %24, !dbg !14137

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14143
  br i1 %2, label %6, label %3, !dbg !14144

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14145
  %5 = xor i1 %4, true, !dbg !14144
  br label %6, !dbg !14144

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14149, metadata !DIExpression()), !dbg !14153
  call void @llvm.dbg.value(metadata i32 0, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14155
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14157, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %3, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 undef, metadata !14150, metadata !DIExpression()), !dbg !14154
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14160
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14167, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 undef, metadata !14150, metadata !DIExpression()), !dbg !14154
  ret void, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14171, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14174
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14176, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14176
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14178
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %3, metadata !14172, metadata !DIExpression()), !dbg !14173
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14179
  br i1 %4, label %5, label %6, !dbg !14181

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14187, !srcloc !13648
  br label %8, !dbg !14188

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.138(%struct.k_thread* noundef %0) #26, !dbg !14189
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14190
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14191
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14191
  br label %8, !dbg !14192

8:                                                ; preds = %6, %5
  ret void, !dbg !14192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14195, metadata !DIExpression()), !dbg !14196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14197
  %3 = load i8, i8* %2, align 1, !dbg !14197
  %4 = and i8 %3, 4, !dbg !14198
  %5 = icmp eq i8 %4, 0, !dbg !14199
  ret i1 %5, !dbg !14200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.138(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14203, metadata !DIExpression()), !dbg !14204
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14205
  %3 = load i8, i8* %2, align 1, !dbg !14206
  %4 = and i8 %3, -5, !dbg !14206
  store i8 %4, i8* %2, align 1, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14208 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14210, metadata !DIExpression()), !dbg !14212
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14213
  br i1 %4, label %5, label %9, !dbg !14215

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14216
  br i1 %6, label %7, label %9, !dbg !14217

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14218, metadata !DIExpression()) #25, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !14224
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14227
  br label %10, !dbg !14228

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14234, !srcloc !13648
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.value(metadata i32 %0, metadata !14242, metadata !DIExpression()), !dbg !14247
  %2 = icmp eq i32 %0, 0, !dbg !14249
  br i1 %2, label %3, label %6, !dbg !14250

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14251, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %4, metadata !14254, metadata !DIExpression()) #25, !dbg !14259
  %5 = icmp eq i32 %4, 0, !dbg !14260
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14241
  ret i1 %7, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14262 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14265
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14264, metadata !DIExpression()), !dbg !14266
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14267
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14268
  ret i1 %3, !dbg !14269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14272, metadata !DIExpression()), !dbg !14274
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14275
  call void @llvm.dbg.value(metadata i32 %2, metadata !14273, metadata !DIExpression()), !dbg !14274
  ret i32 %2, !dbg !14276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14279, metadata !DIExpression()), !dbg !14283
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14284
  call void @llvm.dbg.value(metadata i32 0, metadata !14280, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14286
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14288, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14288
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !14290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %4, metadata !14282, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14280, metadata !DIExpression()), !dbg !14285
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14291
  br i1 %5, label %6, label %10, !dbg !14295

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14296
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14299
  %8 = load i8, i8* %7, align 1, !dbg !14300
  %9 = and i8 %8, 127, !dbg !14300
  store i8 %9, i8* %7, align 1, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14301
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14303
  br label %10, !dbg !14304

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14305
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14306
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14307
  %13 = zext i1 %12 to i32, !dbg !14307
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14308
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !14309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !14311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14313, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14280, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14280, metadata !DIExpression()), !dbg !14285
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14314
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14316
  br i1 %15, label %16, label %17, !dbg !14317

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14318
  br label %17, !dbg !14320

17:                                               ; preds = %16, %10
  ret void, !dbg !14321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14326
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14327
  ret i32 %3, !dbg !14328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14333
  %3 = load i8, i8* %2, align 1, !dbg !14334
  %4 = or i8 %3, 16, !dbg !14334
  store i8 %4, i8* %2, align 1, !dbg !14334
  ret void, !dbg !14335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14336 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14337, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14337
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14339
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14340
  ret void, !dbg !14341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14346
  br i1 %2, label %3, label %5, !dbg !14348

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14349
  br label %6, !dbg !14351

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13642, metadata !DIExpression()) #25, !dbg !14352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14355, !srcloc !13648
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14364, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %3, metadata !14360, metadata !DIExpression()), !dbg !14361
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14367
  br i1 %4, label %6, label %5, !dbg !14369

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14375, !srcloc !13648
  br label %8, !dbg !14376

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14377
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14378
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14379
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14379
  br label %8, !dbg !14380

8:                                                ; preds = %6, %5
  ret void, !dbg !14380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14384
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14385
  %3 = load i8, i8* %2, align 1, !dbg !14385
  %4 = and i8 %3, 16, !dbg !14386
  %5 = icmp ne i8 %4, 0, !dbg !14387
  ret i1 %5, !dbg !14388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14391, metadata !DIExpression()), !dbg !14392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14393
  %3 = load i8, i8* %2, align 1, !dbg !14394
  %4 = and i8 %3, -17, !dbg !14394
  store i8 %4, i8* %2, align 1, !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14396 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14406, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14404, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14405, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 0, metadata !14407, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14412
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14414, !srcloc !13622
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14414
  call void @llvm.dbg.value(metadata i32 %5, metadata !13619, metadata !DIExpression()) #25, !dbg !14416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14416
  call void @llvm.dbg.value(metadata i32 %5, metadata !13613, metadata !DIExpression()) #25, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %5, metadata !14409, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()), !dbg !14411
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14417
  call void @llvm.dbg.value(metadata i32 %5, metadata !13634, metadata !DIExpression()) #25, !dbg !14420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14420
  call void @llvm.dbg.value(metadata i32 %5, metadata !13642, metadata !DIExpression()) #25, !dbg !14422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14424, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14407, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14407, metadata !DIExpression()), !dbg !14411
  ret void, !dbg !14425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14426 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14430, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14428, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14429, metadata !DIExpression()), !dbg !14431
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14432
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14433
  ret void, !dbg !14434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14440, metadata !DIExpression()), !dbg !14441
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14442
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14443
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14444
  br i1 %3, label %21, label %4, !dbg !14446

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14447
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14449
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14450
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13807, metadata !DIExpression()) #25, !dbg !14451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14451
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef nonnull %6) #27, !dbg !14453
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14454
  br i1 %8, label %19, label %9, !dbg !14453

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !14456
  %13 = icmp sgt i32 %12, 0, !dbg !14457
  br i1 %13, label %14, label %16, !dbg !14458

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14459
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !14460
  br label %21, !dbg !14461

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !14454
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13814, metadata !DIExpression()) #25, !dbg !14451
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14454
  br i1 %18, label %19, label %9, !dbg !14453, !llvm.loop !14462

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14464
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !14465
  br label %21, !dbg !14466

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14468 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14473, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14472, metadata !DIExpression()), !dbg !14474
  %4 = icmp eq i64 %3, -1, !dbg !14475
  br i1 %4, label %6, label %5, !dbg !14477

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.141(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14478
  br label %6, !dbg !14480

6:                                                ; preds = %5, %2
  ret void, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.141(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14485, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14486
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14487
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14492, metadata !DIExpression()), !dbg !14500
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14501
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14493, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 0, metadata !14494, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14503
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14505, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14494, metadata !DIExpression()), !dbg !14502
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14508
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14509
  %7 = load i8, i8* %6, align 1, !dbg !14509
  %8 = and i8 %7, 40, !dbg !14510
  %9 = icmp eq i8 %8, 0, !dbg !14510
  call void @llvm.dbg.value(metadata i1 %9, metadata !14497, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  br i1 %9, label %10, label %17, !dbg !14512

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14513
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14513
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14513
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14517
  br i1 %14, label %16, label %15, !dbg !14518

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14519
  br label %16, !dbg !14521

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.138(%struct.k_thread* noundef nonnull %3) #26, !dbg !14522
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14523
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14524
  br label %17, !dbg !14525

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14505
  call void @llvm.dbg.value(metadata i32 %18, metadata !13619, metadata !DIExpression()) #25, !dbg !14507
  call void @llvm.dbg.value(metadata i32 %18, metadata !13613, metadata !DIExpression()) #25, !dbg !14503
  call void @llvm.dbg.value(metadata i32 %18, metadata !14496, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14526
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14530, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14494, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14494, metadata !DIExpression()), !dbg !14502
  ret void, !dbg !14531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14534, metadata !DIExpression()), !dbg !14535
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14536
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14538
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14539
  ret void, !dbg !14540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14543, metadata !DIExpression()), !dbg !14544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14545
  %3 = load i8, i8* %2, align 1, !dbg !14546
  %4 = and i8 %3, -3, !dbg !14546
  store i8 %4, i8* %2, align 1, !dbg !14546
  ret void, !dbg !14547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14551
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14552
  br i1 %2, label %3, label %7, !dbg !14554

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14555
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14558
  %5 = load i8, i8* %4, align 1, !dbg !14559
  %6 = and i8 %5, 127, !dbg !14559
  store i8 %6, i8* %4, align 1, !dbg !14559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14560
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14562
  br label %7, !dbg !14563

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14564
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14565
  %10 = zext i1 %9 to i32, !dbg !14565
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14566
  ret void, !dbg !14567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()), !dbg !14571
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14572
  %3 = load i8, i8* %2, align 1, !dbg !14573
  %4 = or i8 %3, 2, !dbg !14573
  store i8 %4, i8* %2, align 1, !dbg !14573
  ret void, !dbg !14574
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !14575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14585, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14587
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14583
  call void @llvm.dbg.value(metadata i32 %3, metadata !14580, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()), !dbg !14582
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14595, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14578, metadata !DIExpression()), !dbg !14582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()), !dbg !14582
  ret void, !dbg !14596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14597 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14603, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 %0, metadata !14601, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14602, metadata !DIExpression()), !dbg !14608
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14609
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14610
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14611
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14612
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %6, metadata !14604, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14615
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14617, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14614
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14620
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14624
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14625
  br i1 %10, label %11, label %12, !dbg !14626

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14627
  br label %12, !dbg !14629

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %13, metadata !13619, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %13, metadata !13613, metadata !DIExpression()) #25, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %13, metadata !14607, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !14634, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14605, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14614
  ret i32 %6, !dbg !14635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14636 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14641, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata i64 undef, metadata !14643, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14640, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14642, metadata !DIExpression()), !dbg !14644
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14645
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14647
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14649, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14651
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14647
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14652
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !14653
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14218, metadata !DIExpression()) #25, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !14654
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !14656
  ret i32 %9, !dbg !14657
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14662, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 0, metadata !14664, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14671, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14664, metadata !DIExpression()), !dbg !14668
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14663, metadata !DIExpression()), !dbg !14667
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14677
  br i1 %5, label %7, label %6, !dbg !14679

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14680
  br label %7, !dbg !14682

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14671
  call void @llvm.dbg.value(metadata i32 %8, metadata !13619, metadata !DIExpression()) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %8, metadata !13613, metadata !DIExpression()) #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %8, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14687, !srcloc !13648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14663, metadata !DIExpression()), !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14664, metadata !DIExpression()), !dbg !14668
  ret %struct.k_thread* %4, !dbg !14688
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14691, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14698
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14700, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14697
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14703
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14692, metadata !DIExpression()), !dbg !14696
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14706
  br i1 %5, label %8, label %6, !dbg !14708

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14709
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14711
  br label %8, !dbg !14712

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %9, metadata !13619, metadata !DIExpression()) #25, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %9, metadata !13613, metadata !DIExpression()) #25, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %9, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14717, !srcloc !13648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14692, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14697
  ret %struct.k_thread* %4, !dbg !14718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14721, metadata !DIExpression()), !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()) #25, !dbg !14723
  call void @llvm.dbg.value(metadata i32 0, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14726
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14728, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !14730
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14730
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !14726
  call void @llvm.dbg.value(metadata i32 %3, metadata !14580, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !14734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14736, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14578, metadata !DIExpression()) #25, !dbg !14725
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14741, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 %1, metadata !14742, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i8 0, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 0, metadata !14744, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14749
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14751, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !14749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i8 poison, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()), !dbg !14748
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14754
  call void @llvm.dbg.value(metadata i1 %6, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14747
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14757

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !14758
  %11 = load i8, i8* %4, align 1, !dbg !14764
  %12 = and i8 %11, 127, !dbg !14764
  store i8 %12, i8* %4, align 1, !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !14765
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14767
  store i8 %9, i8* %8, align 2, !dbg !14768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()) #25, !dbg !14769
  %13 = load i8, i8* %4, align 1, !dbg !14771
  %14 = or i8 %13, -128, !dbg !14771
  store i8 %14, i8* %4, align 1, !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #25, !dbg !14772
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !14774
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()) #25, !dbg !14774
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14776
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14777
  br i1 %16, label %26, label %17, !dbg !14776

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !14779
  %21 = icmp sgt i32 %20, 0, !dbg !14780
  br i1 %21, label %22, label %23, !dbg !14781

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !14782
  br label %27, !dbg !14783

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !14777
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13814, metadata !DIExpression()) #25, !dbg !14774
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14777
  br i1 %25, label %26, label %17, !dbg !14776, !llvm.loop !14784

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !14786
  br label %27, !dbg !14787

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14788
  br label %29, !dbg !14789

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14790
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %30, metadata !13619, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %30, metadata !13613, metadata !DIExpression()) #25, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %30, metadata !14746, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !14794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !14796, !srcloc !13648
  call void @llvm.dbg.value(metadata i8 poison, metadata !14743, metadata !DIExpression()), !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()), !dbg !14748
  ret i1 %6, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14802, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %1, metadata !14803, metadata !DIExpression()), !dbg !14805
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14806
  call void @llvm.dbg.value(metadata i1 %3, metadata !14804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14805
  br i1 %3, label %4, label %12, !dbg !14807

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14809
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14810
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14810
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14810
  %9 = load i8, i8* %8, align 1, !dbg !14810
  %10 = icmp eq i8 %9, 0, !dbg !14811
  br i1 %10, label %11, label %12, !dbg !14812

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14813
  br label %12, !dbg !14815

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14819, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14823
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14825, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14825
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %2, metadata !14821, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14822
  tail call fastcc void @z_sched_lock() #26, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %2, metadata !13642, metadata !DIExpression()) #25, !dbg !14833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14835, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14819, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14819, metadata !DIExpression()), !dbg !14822
  ret void, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14837 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14839
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14839
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14839
  %5 = load i8, i8* %4, align 1, !dbg !14840
  %6 = add i8 %5, -1, !dbg !14840
  store i8 %6, i8* %4, align 1, !dbg !14840
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14841, !srcloc !14843
  ret void, !dbg !14844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14845 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14847, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !14851
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14853, !srcloc !13622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #25, !dbg !14855
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()) #25, !dbg !14851
  call void @llvm.dbg.value(metadata i32 %2, metadata !14849, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14847, metadata !DIExpression()), !dbg !14850
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14856
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14859
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14859
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14859
  %7 = load i8, i8* %6, align 1, !dbg !14860
  %8 = add i8 %7, 1, !dbg !14860
  store i8 %8, i8* %6, align 1, !dbg !14860
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %2, metadata !13634, metadata !DIExpression()) #25, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !14862
  call void @llvm.dbg.value(metadata i32 %2, metadata !13642, metadata !DIExpression()) #25, !dbg !14864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14866, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 1, metadata !14847, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14847, metadata !DIExpression()), !dbg !14850
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14867
  ret void, !dbg !14868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14869 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14870
  ret %struct.k_thread* %1, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14872 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14876, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14877, metadata !DIExpression()), !dbg !14881
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14878, metadata !DIExpression()), !dbg !14881
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14879, metadata !DIExpression()), !dbg !14881
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14884
  call void @llvm.dbg.value(metadata i32 %5, metadata !14880, metadata !DIExpression()), !dbg !14881
  %6 = icmp sgt i32 %5, 0, !dbg !14885
  br i1 %6, label %17, label %7, !dbg !14887

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14888
  br i1 %8, label %17, label %9, !dbg !14890

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14891
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14891
  %12 = load i32, i32* %11, align 8, !dbg !14891
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14893
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14893
  %15 = load i32, i32* %14, align 8, !dbg !14893
  %16 = icmp ult i32 %12, %15, !dbg !14894
  br label %17, !dbg !14895

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14896
  ret i1 %18, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14898 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14915, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14916, metadata !DIExpression()), !dbg !14930
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14931
  %5 = load i32, i32* %4, align 4, !dbg !14932
  %6 = add nsw i32 %5, 1, !dbg !14932
  store i32 %6, i32* %4, align 4, !dbg !14932
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14933
  store i32 %5, i32* %7, align 8, !dbg !14934
  %8 = load i32, i32* %4, align 4, !dbg !14935
  %9 = icmp eq i32 %8, 0, !dbg !14936
  br i1 %9, label %10, label %32, !dbg !14937

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14938
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14938
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14918, metadata !DIExpression()), !dbg !14938
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14938
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14938
  %14 = load i32, i32* %13, align 4, !dbg !14938
  %15 = shl i32 %14, 2, !dbg !14938
  %16 = alloca i8, i32 %15, align 8, !dbg !14938
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14938
  store i8* %16, i8** %17, align 4, !dbg !14938
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14938
  %19 = alloca i8, i32 %14, align 8, !dbg !14938
  store i8* %19, i8** %18, align 4, !dbg !14938
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14938
  store i32 -1, i32* %20, align 4, !dbg !14938
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14927, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14917, metadata !DIExpression()), !dbg !14930
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14941
  br i1 %22, label %23, label %24, !dbg !14938

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14941
  br label %32, !dbg !14942

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14917, metadata !DIExpression()), !dbg !14930
  %26 = load i32, i32* %4, align 4, !dbg !14943
  %27 = add nsw i32 %26, 1, !dbg !14943
  store i32 %27, i32* %4, align 4, !dbg !14943
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14945
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14945
  store i32 %26, i32* %29, align 8, !dbg !14946
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14927, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14917, metadata !DIExpression()), !dbg !14930
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14941
  br i1 %31, label %23, label %24, !dbg !14938, !llvm.loop !14947

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14949
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14950
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !14951
  ret void, !dbg !14952
}

; Function Attrs: optsize
declare !dbg !14953 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14958 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14961 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14963, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14964, metadata !DIExpression()), !dbg !14965
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14966
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14967
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !14968
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14969
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14969
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14971
  br i1 %7, label %8, label %10, !dbg !14972

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14973
  store i32 0, i32* %9, align 4, !dbg !14975
  br label %10, !dbg !14976

10:                                               ; preds = %8, %2
  ret void, !dbg !14977
}

; Function Attrs: optsize
declare !dbg !14978 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14979 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14983, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14984, metadata !DIExpression()), !dbg !14986
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14987
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14988
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14985, metadata !DIExpression()), !dbg !14986
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14984, metadata !DIExpression()), !dbg !14986
  ret %struct.k_thread* %4, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !14996
  ret %struct.rbnode* %2, !dbg !14997
}

; Function Attrs: optsize
declare !dbg !14998 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15001 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15011, metadata !DIExpression()), !dbg !15015
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15016
  %3 = load i32, i32* %2, align 4, !dbg !15016
  %4 = icmp eq i32 %3, 0, !dbg !15018
  br i1 %4, label %10, label %5, !dbg !15019

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15012, metadata !DIExpression()), !dbg !15015
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15020, !range !4026
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15021
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15013, metadata !DIExpression()), !dbg !15015
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef %7) #26, !dbg !15022
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15014, metadata !DIExpression()), !dbg !15015
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15012, metadata !DIExpression()), !dbg !15015
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15015
  ret %struct.k_thread* %11, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15028, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 0, metadata !15029, metadata !DIExpression()), !dbg !15031
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.152(%struct._wait_q_t* noundef %0) #26, !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15030, metadata !DIExpression()), !dbg !15031
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15033
  br i1 %3, label %8, label %4, !dbg !15034

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15035
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15037
  call void @llvm.dbg.value(metadata i32 1, metadata !15029, metadata !DIExpression()), !dbg !15031
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.152(%struct._wait_q_t* noundef %0) #26, !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15030, metadata !DIExpression()), !dbg !15031
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15033
  br i1 %7, label %8, label %4, !dbg !15034, !llvm.loop !15038

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15031
  ret i32 %9, !dbg !15040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.152(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15041 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15043, metadata !DIExpression()), !dbg !15044
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15045
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef %2) #26, !dbg !15046
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15047
  ret %struct.k_thread* %4, !dbg !15048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15049 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15058, metadata !DIExpression()), !dbg !15059
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15060
  tail call fastcc void @sys_dlist_init.153(%struct._dnode* noundef nonnull %2) #26, !dbg !15061
  ret void, !dbg !15062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.153(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15063 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15069
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15070
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15071
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15072
  ret void, !dbg !15073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15074 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15075
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15076
  ret void, !dbg !15077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15085
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15085
  %4 = load i8, i8* %3, align 2, !dbg !15085
  %5 = sext i8 %4 to i32, !dbg !15086
  ret i32 %5, !dbg !15087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15092, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata i32 %1, metadata !15093, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15094, metadata !DIExpression()), !dbg !15095
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15096
  ret void, !dbg !15097
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15098 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15099
  br i1 %1, label %8, label %2, !dbg !15100

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15101
  br i1 %3, label %8, label %4, !dbg !15102

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15103
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15104
  %7 = xor i1 %6, true, !dbg !15102
  br label %8, !dbg !15102

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15106 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15107, !range !6462
  %2 = icmp eq i8 %1, 0, !dbg !15107
  ret i1 %2, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15112
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15114, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !15111, metadata !DIExpression()), !dbg !15117
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13776, metadata !DIExpression()) #25, !dbg !15121
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15123
  %4 = load i8, i8* %3, align 1, !dbg !15124
  %5 = and i8 %4, 127, !dbg !15124
  store i8 %5, i8* %3, align 1, !dbg !15124
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13784, metadata !DIExpression()) #25, !dbg !15125
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15127
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13793, metadata !DIExpression()) #25, !dbg !15129
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15131
  %8 = load i8, i8* %7, align 1, !dbg !15132
  %9 = or i8 %8, -128, !dbg !15132
  store i8 %9, i8* %7, align 1, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13800, metadata !DIExpression()) #25, !dbg !15133
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13807, metadata !DIExpression()) #25, !dbg !15135
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13813, metadata !DIExpression()) #25, !dbg !15135
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.131(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15137
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15138
  br i1 %11, label %22, label %12, !dbg !15137

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15139
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15140
  %16 = icmp sgt i32 %15, 0, !dbg !15141
  br i1 %16, label %17, label %19, !dbg !15142

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15143
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15144
  br label %24, !dbg !15145

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15138
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13814, metadata !DIExpression()) #25, !dbg !15135
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15138
  br i1 %21, label %22, label %12, !dbg !15137, !llvm.loop !15146

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15148
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15149
  br label %24, !dbg !15150

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %25, metadata !13619, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %25, metadata !13613, metadata !DIExpression()) #25, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %25, metadata !15111, metadata !DIExpression()), !dbg !15117
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14218, metadata !DIExpression()) #25, !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15152
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15154
  ret void, !dbg !15155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15156 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15160, metadata !DIExpression()), !dbg !15163
  %3 = icmp eq i64 %2, -1, !dbg !15164
  br i1 %3, label %4, label %6, !dbg !15166

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15167
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15169
  br label %11, !dbg !15170

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15161, metadata !DIExpression()), !dbg !15163
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15171
  %8 = sext i32 %7 to i64, !dbg !15171
  call void @llvm.dbg.value(metadata i64 %8, metadata !15161, metadata !DIExpression()), !dbg !15163
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15172
  %10 = trunc i64 %9 to i32, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %10, metadata !15162, metadata !DIExpression()), !dbg !15163
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15163
  ret i32 %12, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15178, metadata !DIExpression()), !dbg !15179
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15180, !srcloc !15182
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15183
  ret void, !dbg !15184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15185 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15189, metadata !DIExpression()), !dbg !15193
  %2 = icmp eq i64 %0, 0, !dbg !15194
  br i1 %2, label %3, label %4, !dbg !15196

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15197
  br label %29, !dbg !15199

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15191, metadata !DIExpression()), !dbg !15193
  %5 = icmp sgt i64 %0, -3, !dbg !15200
  br i1 %5, label %6, label %10, !dbg !15202

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15203
  %8 = trunc i64 %0 to i32, !dbg !15205
  %9 = add i32 %7, %8, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %9, metadata !15190, metadata !DIExpression()), !dbg !15193
  br label %13, !dbg !15206

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15207
  %12 = sub i32 -2, %11, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %12, metadata !15190, metadata !DIExpression()), !dbg !15193
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15209
  call void @llvm.dbg.value(metadata i32 %14, metadata !15190, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15210
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15212, !srcloc !13622
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15212
  call void @llvm.dbg.value(metadata i32 %16, metadata !13619, metadata !DIExpression()) #25, !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15214
  call void @llvm.dbg.value(metadata i32 %16, metadata !13613, metadata !DIExpression()) #25, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %16, metadata !15192, metadata !DIExpression()), !dbg !15193
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15215
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15216
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15217
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15218
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15219
  tail call fastcc void @z_add_thread_timeout.141(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15219
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15220
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %16, metadata !14218, metadata !DIExpression()) #25, !dbg !15222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15222
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15224
  %22 = zext i32 %14 to i64, !dbg !15225
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15226
  %24 = zext i32 %23 to i64, !dbg !15226
  %25 = sub nsw i64 %22, %24, !dbg !15227
  call void @llvm.dbg.value(metadata i64 %25, metadata !15189, metadata !DIExpression()), !dbg !15193
  %26 = icmp sgt i64 %25, 0, !dbg !15228
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15228
  %28 = trunc i64 %27 to i32, !dbg !15228
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15193
  ret i32 %30, !dbg !15229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15230 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15232, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 10000, metadata !13657, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 1000, metadata !13658, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i1 false, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i1 true, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15234
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15234
  %2 = udiv i64 %0, 10, !dbg !15236
  ret i64 %2, !dbg !15240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15241 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15242, !srcloc !15244
  tail call void @z_impl_k_yield() #26, !dbg !15245
  ret void, !dbg !15246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15251, metadata !DIExpression()), !dbg !15253
  %2 = sext i32 %0 to i64, !dbg !15254
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15255
  call void @llvm.dbg.value(metadata i64 %3, metadata !15252, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15253
  %4 = shl i64 %3, 32, !dbg !15256
  %5 = ashr exact i64 %4, 32, !dbg !15256
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %6, metadata !15252, metadata !DIExpression()), !dbg !15253
  %7 = sext i32 %6 to i64, !dbg !15258
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15259
  %9 = trunc i64 %8 to i32, !dbg !15259
  ret i32 %9, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15261 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13657, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 10000, metadata !13658, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i1 true, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i1 false, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i1 true, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15265
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15265
  %2 = add i64 %0, 99, !dbg !15267
  call void @llvm.dbg.value(metadata i64 %2, metadata !13654, metadata !DIExpression()), !dbg !15265
  %3 = udiv i64 %2, 100, !dbg !15268
  ret i64 %3, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15270 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15272, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 10000, metadata !13657, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13658, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i1 true, metadata !13663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i1 false, metadata !13664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15274
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !15274
  %2 = mul i64 %0, 100, !dbg !15276
  ret i64 %2, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15283
  br i1 %2, label %14, label %3, !dbg !15285

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15286
  %5 = icmp slt i32 %4, 0, !dbg !15288
  br i1 %5, label %6, label %10, !dbg !15289

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15290
  %8 = load i8, i8* %7, align 1, !dbg !15290
  %9 = icmp eq i8 %8, 16, !dbg !15293
  br i1 %9, label %10, label %14, !dbg !15294

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15295
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15296
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15297, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %11, metadata !14254, metadata !DIExpression()) #25, !dbg !15301
  %12 = icmp eq i32 %11, 0, !dbg !15302
  br i1 %12, label %13, label %14, !dbg !15303

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15304
  br label %14, !dbg !15306

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15310, metadata !DIExpression()), !dbg !15311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15312
  %3 = load i8, i8* %2, align 1, !dbg !15312
  %4 = and i8 %3, 2, !dbg !15313
  %5 = icmp ne i8 %4, 0, !dbg !15314
  ret i1 %5, !dbg !15315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15316 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15320, metadata !DIExpression()), !dbg !15322
  ret %struct.k_thread* %1, !dbg !15323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15324 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15325, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %1, metadata !14254, metadata !DIExpression()) #25, !dbg !15328
  %2 = icmp eq i32 %1, 0, !dbg !15329
  br i1 %2, label %3, label %8, !dbg !15330

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15331
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15332
  %6 = icmp ne i32 %5, 0, !dbg !15330
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15336, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15339
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15341, !srcloc !13622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15341
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %3, metadata !13613, metadata !DIExpression()) #25, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %3, metadata !15337, metadata !DIExpression()), !dbg !15338
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15344
  %5 = load i8, i8* %4, align 4, !dbg !15344
  %6 = and i8 %5, 1, !dbg !15346
  %7 = icmp eq i8 %6, 0, !dbg !15347
  br i1 %7, label %9, label %8, !dbg !15348

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15354, !srcloc !13648
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !15355, !srcloc !15357
  br label %24, !dbg !15358

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15359
  %11 = load i8, i8* %10, align 1, !dbg !15359
  %12 = and i8 %11, 8, !dbg !15361
  %13 = icmp eq i8 %12, 0, !dbg !15362
  br i1 %13, label %15, label %14, !dbg !15363

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15367
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15369, !srcloc !13648
  br label %24, !dbg !15370

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15371
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15372
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15374
  br i1 %17, label %18, label %23, !dbg !15375

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15376, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 %19, metadata !14254, metadata !DIExpression()) #25, !dbg !15379
  %20 = icmp eq i32 %19, 0, !dbg !15380
  br i1 %20, label %21, label %23, !dbg !15381

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14218, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15382
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15385
  br label %23, !dbg !15386

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13634, metadata !DIExpression()) #25, !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()) #25, !dbg !15389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15391, !srcloc !13648
  br label %24, !dbg !15392

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15395, metadata !DIExpression()), !dbg !15396
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15397
  %3 = load i8, i8* %2, align 1, !dbg !15397
  %4 = and i8 %3, 8, !dbg !15399
  %5 = icmp eq i8 %4, 0, !dbg !15400
  br i1 %5, label %6, label %20, !dbg !15401

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15402
  %8 = or i8 %7, 8, !dbg !15402
  store i8 %8, i8* %2, align 1, !dbg !15402
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15404
  br i1 %9, label %10, label %12, !dbg !15406

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()) #25, !dbg !15407
  %11 = and i8 %8, 95, !dbg !15410
  store i8 %11, i8* %2, align 1, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13784, metadata !DIExpression()) #25, !dbg !15411
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !15413
  br label %12, !dbg !15414

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15415
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15415
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15417
  br i1 %15, label %17, label %16, !dbg !15418

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15419
  br label %17, !dbg !15421

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15422
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15423
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !15424
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15425
  br label %20, !dbg !15426

20:                                               ; preds = %17, %1
  ret void, !dbg !15427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15428 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15432, metadata !DIExpression()), !dbg !15434
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.152(%struct._wait_q_t* noundef %0) #26, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15433, metadata !DIExpression()), !dbg !15434
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15436
  br i1 %3, label %10, label %4, !dbg !15437

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15438
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15440
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15441, metadata !DIExpression()), !dbg !15447
  call void @llvm.dbg.value(metadata i32 0, metadata !15446, metadata !DIExpression()), !dbg !15447
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15449
  store i32 0, i32* %7, align 4, !dbg !15450
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15451
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.152(%struct._wait_q_t* noundef %0) #26, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15433, metadata !DIExpression()), !dbg !15434
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15436
  br i1 %9, label %10, label %4, !dbg !15437, !llvm.loop !15452

10:                                               ; preds = %4, %1
  ret void, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15460, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15459, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15464
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15466, !srcloc !13622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %4, metadata !13619, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %4, metadata !13613, metadata !DIExpression()) #25, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %4, metadata !15461, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i32 0, metadata !15462, metadata !DIExpression()), !dbg !15463
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15469
  %6 = load i8, i8* %5, align 1, !dbg !15469
  %7 = and i8 %6, 8, !dbg !15471
  %8 = icmp eq i8 %7, 0, !dbg !15472
  br i1 %8, label %9, label %24, !dbg !15473

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15460, metadata !DIExpression()), !dbg !15463
  %11 = icmp eq i64 %10, 0, !dbg !15474
  br i1 %11, label %24, label %12, !dbg !15476

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15479
  br i1 %14, label %24, label %15, !dbg !15480

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15481
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15481
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15482
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15483
  br i1 %19, label %24, label %20, !dbg !15484

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15485
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !15487
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15488
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %4, metadata !14218, metadata !DIExpression()) #25, !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14223, metadata !DIExpression()) #25, !dbg !15490
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %23, metadata !15462, metadata !DIExpression()), !dbg !15463
  br label %26, !dbg !15493

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15494
  call void @llvm.dbg.value(metadata i32 %25, metadata !15462, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i32 %4, metadata !13634, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %4, metadata !13642, metadata !DIExpression()) #25, !dbg !15497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15499, !srcloc !13648
  br label %26, !dbg !15500

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15463
  ret i32 %27, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15502 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15506, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 %1, metadata !15507, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i8* %2, metadata !15508, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i8 0, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 0, metadata !15511, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13607, metadata !DIExpression()) #25, !dbg !15516
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15518, !srcloc !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13613, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i8 poison, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15515
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15509, metadata !DIExpression()), !dbg !15514
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15524
  br i1 %7, label %12, label %8, !dbg !15526

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15527, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i32 %1, metadata !15532, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata i8* %2, metadata !15533, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15441, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 %1, metadata !15446, metadata !DIExpression()), !dbg !15537
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15539
  store i32 %1, i32* %9, align 4, !dbg !15540
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15541
  store i8* %2, i8** %10, align 4, !dbg !15542
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15543
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15544
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15545
  call void @llvm.dbg.value(metadata i8 1, metadata !15510, metadata !DIExpression()), !dbg !15514
  br label %12, !dbg !15546

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15518
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %14, metadata !13619, metadata !DIExpression()) #25, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %14, metadata !13613, metadata !DIExpression()) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %14, metadata !15513, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i8 poison, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13634, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13639, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !13642, metadata !DIExpression()) #25, !dbg !15549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15551, !srcloc !13648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15515
  ret i1 %13, !dbg !15552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15553 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15559, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i64 undef, metadata !15561, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15558, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15560, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i8** %4, metadata !15562, metadata !DIExpression()), !dbg !15564
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %6, metadata !15563, metadata !DIExpression()), !dbg !15564
  %7 = icmp eq i8** %4, null, !dbg !15566
  br i1 %7, label %12, label %8, !dbg !15568

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15569
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15571
  %11 = load i8*, i8** %10, align 4, !dbg !15571
  store i8* %11, i8** %4, align 4, !dbg !15572
  br label %12, !dbg !15573

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15575 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !15577
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !15578
  ret void, !dbg !15579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15580 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15590, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15588, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15589, metadata !DIExpression()), !dbg !15607
  %5 = icmp eq i64 %4, -1, !dbg !15608
  br i1 %5, label %55, label %6, !dbg !15610

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15611
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15612
  call void @llvm.dbg.value(metadata i32 0, metadata !15591, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15621
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15623, !srcloc !15629
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15623
  call void @llvm.dbg.value(metadata i32 %9, metadata !15626, metadata !DIExpression()) #25, !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %9, metadata !15620, metadata !DIExpression()) #25, !dbg !15621
  call void @llvm.dbg.value(metadata i32 %9, metadata !15597, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15613
  %10 = icmp slt i64 %4, -1, !dbg !15631
  br i1 %10, label %11, label %17, !dbg !15632

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15633
  %13 = add i64 %4, %12, !dbg !15634
  %14 = sub i64 -2, %13, !dbg !15634
  call void @llvm.dbg.value(metadata i64 %14, metadata !15601, metadata !DIExpression()), !dbg !15635
  %15 = icmp sgt i64 %14, 1, !dbg !15636
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15636
  br label %22, !dbg !15637

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15638
  %19 = tail call fastcc i32 @elapsed.164() #26, !dbg !15640
  %20 = sext i32 %19 to i64, !dbg !15640
  %21 = add nsw i64 %18, %20, !dbg !15641
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15642
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15643
  store i64 %23, i64* %24, align 8, !dbg !15644
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15645
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15598, metadata !DIExpression()), !dbg !15647
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15648
  br i1 %26, label %42, label %27, !dbg !15648

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15649
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15598, metadata !DIExpression()), !dbg !15647
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15653
  %31 = load i64, i64* %30, align 8, !dbg !15653
  %32 = icmp slt i64 %28, %31, !dbg !15654
  br i1 %32, label %33, label %38, !dbg !15655

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15653
  %35 = sub nsw i64 %31, %28, !dbg !15656
  store i64 %35, i64* %34, align 8, !dbg !15656
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15658
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15659
  tail call fastcc void @sys_dlist_insert.165(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15660
  br label %44, !dbg !15661

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15662
  store i64 %39, i64* %24, align 8, !dbg !15662
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15663
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15598, metadata !DIExpression()), !dbg !15647
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15648
  br i1 %41, label %42, label %27, !dbg !15648, !llvm.loop !15664

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15666
  tail call fastcc void @sys_dlist_append.166(%struct._dnode* noundef %43) #26, !dbg !15669
  br label %44, !dbg !15670

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15671
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15672
  br i1 %46, label %47, label %54, !dbg !15673

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %48, metadata !15604, metadata !DIExpression()), !dbg !15675
  %49 = icmp ne i32 %48, 0, !dbg !15676
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15678
  br i1 %52, label %54, label %53, !dbg !15678

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !15679
  br label %54, !dbg !15681

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15682, metadata !DIExpression()) #25, !dbg !15688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15688
  call void @llvm.dbg.value(metadata i32 %9, metadata !15690, metadata !DIExpression()) #25, !dbg !15693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15695, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15613
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.164() unnamed_addr #1 !dbg !15698 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15701
  %2 = icmp eq i32 %1, 0, !dbg !15702
  br i1 %2, label %3, label %5, !dbg !15701

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !15703
  br label %5, !dbg !15701

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15701
  ret i32 %6, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15705 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.169() #26, !dbg !15711
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15709, metadata !DIExpression()), !dbg !15712
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15713
  ret %struct._timeout* %2, !dbg !15714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.165(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15715 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15719, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15720, metadata !DIExpression()), !dbg !15723
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15724
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15724
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15721, metadata !DIExpression()), !dbg !15723
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15725
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15726
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15727
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15728
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15729
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15730
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15731
  ret void, !dbg !15732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15737, metadata !DIExpression()), !dbg !15739
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15740
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.167(%struct._dnode* noundef %2) #26, !dbg !15741
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15738, metadata !DIExpression()), !dbg !15739
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15742
  ret %struct._timeout* %4, !dbg !15743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.166(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15744 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15749, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15750, metadata !DIExpression()), !dbg !15752
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15753
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15751, metadata !DIExpression()), !dbg !15752
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15754
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15755
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15756
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15757
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15758
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15759
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15760
  ret void, !dbg !15761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15762 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15767
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15764, metadata !DIExpression()), !dbg !15768
  %2 = tail call fastcc i32 @elapsed.164() #26, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %2, metadata !15765, metadata !DIExpression()), !dbg !15768
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15770
  br i1 %3, label %14, label %4, !dbg !15772

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15773
  %6 = load i64, i64* %5, align 8, !dbg !15773
  %7 = sext i32 %2 to i64, !dbg !15774
  %8 = sub nsw i64 %6, %7, !dbg !15775
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15776
  br i1 %9, label %14, label %10, !dbg !15777

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15778
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15778
  %13 = trunc i64 %12 to i32, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %13, metadata !15766, metadata !DIExpression()), !dbg !15768
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15780
  call void @llvm.dbg.value(metadata i32 %15, metadata !15766, metadata !DIExpression()), !dbg !15768
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15781
  %17 = icmp ne i32 %16, 0, !dbg !15783
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15784
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %20, metadata !15766, metadata !DIExpression()), !dbg !15768
  ret i32 %20, !dbg !15785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.167(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15786 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15790, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15791, metadata !DIExpression()), !dbg !15792
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15793
  br i1 %2, label %5, label %3, !dbg !15794

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.168(%struct._dnode* noundef nonnull %0) #26, !dbg !15795
  br label %5, !dbg !15794

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15794
  ret %struct._dnode* %6, !dbg !15796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.168(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15797 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15799, metadata !DIExpression()), !dbg !15801
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15800, metadata !DIExpression()), !dbg !15801
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15802
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15803
  br i1 %3, label %7, label %4, !dbg !15804

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15805
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15805
  br label %7, !dbg !15804

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15804
  ret %struct._dnode* %8, !dbg !15806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.169() unnamed_addr #5 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15811, metadata !DIExpression()), !dbg !15812
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.170() #26, !dbg !15813
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15813
  ret %struct._dnode* %3, !dbg !15814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.170() unnamed_addr #5 !dbg !15815 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15819, metadata !DIExpression()), !dbg !15820
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15821
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15822
  ret i1 %2, !dbg !15823
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15824 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15828, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 0, metadata !15830, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15835
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15837, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 undef, metadata !15832, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()), !dbg !15834
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15829, metadata !DIExpression()), !dbg !15833
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* noundef %3) #26, !dbg !15840
  br i1 %4, label %5, label %6, !dbg !15844

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15845
  call void @llvm.dbg.value(metadata i32 0, metadata !15829, metadata !DIExpression()), !dbg !15833
  br label %6, !dbg !15847

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15833
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %8, metadata !15626, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %8, metadata !15620, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %8, metadata !15832, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata i32 %7, metadata !15829, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15682, metadata !DIExpression()) #25, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !15850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15852, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()), !dbg !15834
  ret i32 %7, !dbg !15853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15862
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15862
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15863
  ret i1 %4, !dbg !15864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15865 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15867, metadata !DIExpression()), !dbg !15868
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15869
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15871
  br i1 %3, label %10, label %4, !dbg !15872

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15873
  %6 = load i64, i64* %5, align 8, !dbg !15873
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15875
  %8 = load i64, i64* %7, align 8, !dbg !15876
  %9 = add nsw i64 %8, %6, !dbg !15876
  store i64 %9, i64* %7, align 8, !dbg !15876
  br label %10, !dbg !15877

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15878
  tail call fastcc void @sys_dlist_remove.174(%struct._dnode* noundef %11) #26, !dbg !15879
  ret void, !dbg !15880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.174(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15885, metadata !DIExpression()), !dbg !15888
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15889
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15889
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15886, metadata !DIExpression()), !dbg !15888
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15890
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15890
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15887, metadata !DIExpression()), !dbg !15888
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15891
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15892
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15893
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15894
  tail call fastcc void @sys_dnode_init.175(%struct._dnode* noundef %0) #26, !dbg !15895
  ret void, !dbg !15896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.175(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15897 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15899, metadata !DIExpression()), !dbg !15900
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15901
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15902
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15903
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15904
  ret void, !dbg !15905
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15906 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15912, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 0, metadata !15914, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15919
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15921, !srcloc !15629
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %3, metadata !15626, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %3, metadata !15620, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %3, metadata !15916, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15924
  call void @llvm.dbg.value(metadata i64 %4, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 %3, metadata !15682, metadata !DIExpression()) #25, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()) #25, !dbg !15929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15931, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15914, metadata !DIExpression()), !dbg !15918
  ret i64 %4, !dbg !15932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15933 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i64 0, metadata !15936, metadata !DIExpression()), !dbg !15939
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.176(%struct._timeout* noundef %0) #26, !dbg !15940
  br i1 %2, label %21, label %3, !dbg !15942

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15943
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 0, metadata !15936, metadata !DIExpression()), !dbg !15939
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15945
  br i1 %5, label %16, label %6, !dbg !15947

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 %8, metadata !15936, metadata !DIExpression()), !dbg !15939
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15948
  %10 = load i64, i64* %9, align 8, !dbg !15948
  %11 = add nsw i64 %10, %8, !dbg !15950
  call void @llvm.dbg.value(metadata i64 %11, metadata !15936, metadata !DIExpression()), !dbg !15939
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15951
  br i1 %12, label %16, label %13, !dbg !15953

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15954
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15937, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.value(metadata i64 %11, metadata !15936, metadata !DIExpression()), !dbg !15939
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15945
  br i1 %15, label %16, label %6, !dbg !15947, !llvm.loop !15955

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15939
  call void @llvm.dbg.value(metadata i64 %17, metadata !15936, metadata !DIExpression()), !dbg !15939
  %18 = tail call fastcc i32 @elapsed.164() #26, !dbg !15957
  %19 = sext i32 %18 to i64, !dbg !15957
  %20 = sub nsw i64 %17, %19, !dbg !15958
  br label %21, !dbg !15959

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15939
  ret i64 %22, !dbg !15960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.176(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15961 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15965, metadata !DIExpression()), !dbg !15966
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15967
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.173(%struct._dnode* noundef %2) #26, !dbg !15968
  %4 = xor i1 %3, true, !dbg !15969
  ret i1 %4, !dbg !15970
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15973, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i64 0, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 0, metadata !15975, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !15980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15982, !srcloc !15629
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %3, metadata !15626, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %3, metadata !15620, metadata !DIExpression()) #25, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %3, metadata !15977, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 0, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15979
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15985
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15988
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15974, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15978
  call void @llvm.dbg.value(metadata i32 %3, metadata !15682, metadata !DIExpression()) #25, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()) #25, !dbg !15991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15993, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15979
  %6 = add i64 %5, %4, !dbg !15994
  ret i64 %6, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 0, metadata !15999, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16004
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16006, !srcloc !15629
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %2, metadata !15626, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %2, metadata !15620, metadata !DIExpression()) #25, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %2, metadata !16001, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i32 -1, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16003
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !16009
  call void @llvm.dbg.value(metadata i32 %3, metadata !15998, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata i32 %2, metadata !15682, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %2, metadata !15690, metadata !DIExpression()) #25, !dbg !16014
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16016, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15999, metadata !DIExpression()), !dbg !16003
  ret i32 %3, !dbg !16017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16020, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i1 %1, metadata !16021, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16030
  call void @llvm.dbg.value(metadata i32 0, metadata !16022, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16032
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16034, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16032
  call void @llvm.dbg.value(metadata i32 undef, metadata !16024, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16022, metadata !DIExpression()), !dbg !16031
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !16037
  call void @llvm.dbg.value(metadata i32 %4, metadata !16025, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.value(metadata i1 undef, metadata !16028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  %5 = icmp slt i32 %4, 2, !dbg !16039
  call void @llvm.dbg.value(metadata i1 %5, metadata !16029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16040
  call void @llvm.dbg.value(metadata i1 %6, metadata !16028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16038
  br i1 %7, label %11, label %8, !dbg !16040

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16042
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16042
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !16044
  br label %11, !dbg !16045

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %12, metadata !15626, metadata !DIExpression()) #25, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %12, metadata !15620, metadata !DIExpression()) #25, !dbg !16032
  call void @llvm.dbg.value(metadata i32 %12, metadata !16024, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !15682, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15690, metadata !DIExpression()) #25, !dbg !16048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16050, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 1, metadata !16022, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16022, metadata !DIExpression()), !dbg !16031
  ret void, !dbg !16051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16056, metadata !DIExpression()), !dbg !16061
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16065, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16063
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16061
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16068
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16069
  br i1 %4, label %28, label %5, !dbg !16070

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16071
  %10 = load i64, i64* %9, align 8, !dbg !16071
  %11 = sext i32 %8 to i64, !dbg !16072
  %12 = icmp sgt i64 %10, %11, !dbg !16073
  br i1 %12, label %26, label %13, !dbg !16074

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16061
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16058, metadata !DIExpression()), !dbg !16075
  %15 = trunc i64 %10 to i32, !dbg !16076
  call void @llvm.dbg.value(metadata i32 %15, metadata !16060, metadata !DIExpression()), !dbg !16075
  %16 = sext i32 %15 to i64, !dbg !16077
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16078
  %18 = add i64 %17, %16, !dbg !16078
  store i64 %18, i64* @curr_tick, align 8, !dbg !16078
  store i64 0, i64* %9, align 8, !dbg !16079
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16080
  call void @llvm.dbg.value(metadata i32 %14, metadata !15682, metadata !DIExpression()) #25, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %14, metadata !15690, metadata !DIExpression()) #25, !dbg !16083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16085, !srcloc !15696
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16086
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16086
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16088
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16090, !srcloc !15629
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !15620, metadata !DIExpression()) #25, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16093
  %23 = sub nsw i32 %22, %15, !dbg !16093
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16061
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16061
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16068
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16069
  br i1 %25, label %28, label %5, !dbg !16070, !llvm.loop !16094

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16096
  store i64 %27, i64* %9, align 8, !dbg !16096
  br label %32, !dbg !16099

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16061
  %31 = sext i32 %30 to i64, !dbg !16100
  br label %32, !dbg !16100

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16100
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16061
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16101
  %37 = add i64 %36, %33, !dbg !16101
  store i64 %37, i64* @curr_tick, align 8, !dbg !16101
  store i32 0, i32* @announce_remaining, align 4, !dbg !16102
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16103
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %35, metadata !15682, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 %35, metadata !15690, metadata !DIExpression()) #25, !dbg !16107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16109, !srcloc !15696
  ret void, !dbg !16110
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16111 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16115, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata i32 0, metadata !16116, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15614, metadata !DIExpression()) #25, !dbg !16121
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16123, !srcloc !15629
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %2, metadata !15626, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15627, metadata !DIExpression()) #25, !dbg !16125
  call void @llvm.dbg.value(metadata i32 %2, metadata !15620, metadata !DIExpression()) #25, !dbg !16121
  call void @llvm.dbg.value(metadata i32 %2, metadata !16118, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata i64 0, metadata !16115, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()), !dbg !16120
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16126
  %4 = tail call fastcc i32 @elapsed.164() #26, !dbg !16129
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16115, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16119
  call void @llvm.dbg.value(metadata i32 %2, metadata !15682, metadata !DIExpression()) #25, !dbg !16130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15687, metadata !DIExpression()) #25, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %2, metadata !15690, metadata !DIExpression()) #25, !dbg !16132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16134, !srcloc !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()), !dbg !16120
  %5 = sext i32 %4 to i64, !dbg !16129
  %6 = add i64 %3, %5, !dbg !16135
  ret i64 %6, !dbg !16136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16137 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16138
  %2 = trunc i64 %1 to i32, !dbg !16139
  ret i32 %2, !dbg !16140
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16141 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16142
  ret i64 %1, !dbg !16143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16146, metadata !DIExpression()), !dbg !16153
  %2 = icmp eq i32 %0, 0, !dbg !16154
  br i1 %2, label %10, label %3, !dbg !16156

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %4, metadata !16147, metadata !DIExpression()), !dbg !16153
  %5 = mul i32 %0, 84, !dbg !16158
  call void @llvm.dbg.value(metadata i32 %5, metadata !16148, metadata !DIExpression()), !dbg !16153
  br label %6, !dbg !16159

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16160
  call void @llvm.dbg.value(metadata i32 %7, metadata !16149, metadata !DIExpression()), !dbg !16161
  %8 = sub i32 %7, %4, !dbg !16162
  %9 = icmp ult i32 %8, %5, !dbg !16164
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16166 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16167
  ret i32 %1, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16169 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16171
  ret i32 %1, !dbg !16172
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16173 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16177, metadata !DIExpression()), !dbg !16179
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16180

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16181
  br label %14, !dbg !16185

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16178, metadata !DIExpression()), !dbg !16179
  %6 = icmp slt i64 %2, -1, !dbg !16186
  br i1 %6, label %7, label %9, !dbg !16189

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16190
  br label %14, !dbg !16191

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16193
  %11 = icmp ugt i64 %2, 1, !dbg !16194
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16194
  %13 = add nsw i64 %10, %12, !dbg !16195
  br label %14, !dbg !16196

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16197
  ret i64 %15, !dbg !16198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16199 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.185, i32 0, i32 0)) #27, !dbg !16201
  ret void, !dbg !16202
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16205, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16206, metadata !DIExpression()), !dbg !16226
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16227

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16228

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16206, metadata !DIExpression()), !dbg !16226
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16229
  %6 = load i8*, i8** %5, align 4, !dbg !16229
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16233
  %8 = load i32, i32* %7, align 4, !dbg !16233
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16234
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16235
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16206, metadata !DIExpression()), !dbg !16226
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16236
  br i1 %10, label %3, label %2, !dbg !16227, !llvm.loop !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16240 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16244, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i8* %1, metadata !16245, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 %2, metadata !16246, metadata !DIExpression()), !dbg !16247
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16248
  tail call fastcc void @z_waitq_init.187(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16249
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16250
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16251
  ret void, !dbg !16252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.187(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16253 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16258, metadata !DIExpression()), !dbg !16259
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16260
  tail call fastcc void @sys_dlist_init.188(%struct._dnode* noundef %2) #26, !dbg !16261
  ret void, !dbg !16262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.188(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16263 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16268, metadata !DIExpression()), !dbg !16269
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16270
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16271
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16272
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16273
  ret void, !dbg !16274
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16275 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16286, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16283, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %1, metadata !16284, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %2, metadata !16285, metadata !DIExpression()), !dbg !16296
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16297
  call void @llvm.dbg.value(metadata i64 %6, metadata !16288, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  %7 = icmp eq i64 %5, -1, !dbg !16298
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16298
  call void @llvm.dbg.value(metadata i64 %8, metadata !16288, metadata !DIExpression()), !dbg !16296
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16307
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16309, !srcloc !16315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16312, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16306, metadata !DIExpression()) #25, !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8 0, metadata !16295, metadata !DIExpression()), !dbg !16296
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8 0, metadata !16295, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16317
  call void @llvm.dbg.value(metadata i8* %12, metadata !16289, metadata !DIExpression()), !dbg !16296
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16319
  call void @llvm.dbg.value(metadata i64 %13, metadata !16287, metadata !DIExpression()), !dbg !16296
  %14 = icmp eq i8* %12, null, !dbg !16320
  br i1 %14, label %15, label %31, !dbg !16322

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16322

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16295, metadata !DIExpression()), !dbg !16296
  %20 = sub nsw i64 %8, %18, !dbg !16323
  %21 = icmp slt i64 %20, 1, !dbg !16324
  br i1 %21, label %31, label %22, !dbg !16325

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i8 undef, metadata !16295, metadata !DIExpression()), !dbg !16296
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16326
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16326
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16327
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16329, !srcloc !16315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16312, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16306, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i8* null, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()), !dbg !16296
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16317
  call void @llvm.dbg.value(metadata i8* %28, metadata !16289, metadata !DIExpression()), !dbg !16296
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16319
  call void @llvm.dbg.value(metadata i64 %29, metadata !16287, metadata !DIExpression()), !dbg !16296
  %30 = icmp eq i8* %28, null, !dbg !16320
  br i1 %30, label %17, label %31, !dbg !16322, !llvm.loop !16332

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16317
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i8* %33, metadata !16289, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.value(metadata i32 %34, metadata !16335, metadata !DIExpression()) #25, !dbg !16341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16341
  call void @llvm.dbg.value(metadata i32 %34, metadata !16343, metadata !DIExpression()) #25, !dbg !16346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !16348, !srcloc !16349
  ret i8* %33, !dbg !16350
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16351 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16357, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16355, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.value(metadata i32 %1, metadata !16356, metadata !DIExpression()), !dbg !16359
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !16360
  call void @llvm.dbg.value(metadata i8* %4, metadata !16358, metadata !DIExpression()), !dbg !16359
  ret i8* %4, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16362 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16366, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i8* %1, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16300, metadata !DIExpression()) #25, !dbg !16370
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16372, !srcloc !16315
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %4, metadata !16312, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()) #25, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %4, metadata !16306, metadata !DIExpression()) #25, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %4, metadata !16368, metadata !DIExpression()), !dbg !16369
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16375
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !16376
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16377
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !16379
  %8 = icmp eq i32 %7, 0, !dbg !16380
  br i1 %8, label %12, label %9, !dbg !16381

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16382
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16383
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !16383
  br label %13, !dbg !16385

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16335, metadata !DIExpression()) #25, !dbg !16386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %4, metadata !16343, metadata !DIExpression()) #25, !dbg !16389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16391, !srcloc !16349
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16392
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!735, !2, !2449, !27, !264, !2451, !2453, !2486, !2524, !274, !318, !2526, !2537, !2583, !2585, !2613, !2641, !2684, !2755, !2800, !347, !492, !2828, !528, !538, !563, !771, !2833, !909, !1003, !1309, !1623, !2872, !1736, !1826, !2874, !2960, !3025, !1877, !3028, !1883, !2244, !3046, !3048, !2264, !3152, !2379, !3155, !2418}
!llvm.ident = !{!3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157}
!llvm.module.flags = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 97, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5440, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 85)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2720, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !274, file: !291, line: 56, type: !292, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !290, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 258, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f401xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 249, size: 224, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !280, file: !279, line: 251, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !280, file: !279, line: 252, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !280, file: !279, line: 253, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !280, file: !279, line: 254, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 255, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !280, file: !279, line: 256, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !280, file: !279, line: 257, baseType: !283, size: 32, offset: 192)
!290 = !{!272}
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !295)
!294 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !{!296, !315}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !293, file: !294, line: 60, baseType: !297, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{!107, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !303)
!303 = !{!304, !305, !306, !307, !313, !314}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !120, line: 380, baseType: !123, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !302, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !302, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !302, file: !120, line: 386, baseType: !308, size: 32, offset: 96)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !309, file: !120, line: 359, baseType: !133, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !309, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !302, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !293, file: !294, line: 65, baseType: !300, size: 32, offset: 32)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !318, file: !321, line: 71, type: !322, isLocal: true, isDefinition: true, align: 32)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !320, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!320 = !{!316}
!321 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !324)
!324 = !{!325, !344}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !323, file: !294, line: 60, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{!107, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !332)
!332 = !{!333, !334, !335, !336, !342, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !120, line: 380, baseType: !123, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !331, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !331, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !120, line: 386, baseType: !337, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !338, file: !120, line: 359, baseType: !133, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !338, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !331, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !294, line: 65, baseType: !329, size: 32, offset: 32)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "static_regions", scope: !347, file: !354, line: 62, type: !488, isLocal: true, isDefinition: true)
!347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !349, globals: !350, splitDebugInlining: false, nameTableKind: None)
!348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!349 = !{!252, !107, !162, !102}
!350 = !{!351, !345}
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !353, file: !354, line: 198, type: !474, isLocal: true, isDefinition: true)
!353 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !354, file: !354, line: 175, type: !355, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !469)
!354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = !DISubroutineType(types: !356)
!356 = !{null, !357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !426, !439, !440, !441, !442, !448, !464}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !358, file: !359, line: 247, baseType: !362, size: 384)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !363)
!363 = !{!364, !391, !398, !399, !400, !413, !414, !415}
!364 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 60, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 60, size: 64, elements: !366)
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !365, file: !359, line: 61, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !233, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !233, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !233, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !233, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !365, file: !359, line: 62, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 50, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !389)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!389 = !{!390}
!390 = !DISubrange(count: 2)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !362, file: !359, line: 68, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !394, file: !228, line: 232, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !369)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !362, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !362, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 90, baseType: !401, size: 16, offset: 112)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 90, size: 16, elements: !402)
!402 = !{!403, !410}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !359, line: 91, baseType: !404, size: 16)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !359, line: 91, size: 16, elements: !405)
!405 = !{!406, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !404, file: !359, line: 96, baseType: !407, size: 8)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !408)
!408 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !404, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !401, file: !359, line: 100, baseType: !411, size: 16)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !362, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !362, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !362, file: !359, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !228, line: 245, baseType: !368, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !228, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !358, file: !359, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !429)
!428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !428, line: 26, baseType: !162, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !358, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !358, file: !359, line: 256, baseType: !393, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !358, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !358, file: !359, line: 300, baseType: !443, size: 96, offset: 800)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !443, file: !359, line: 153, baseType: !22, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !443, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !443, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !358, file: !359, line: 325, baseType: !449, size: 32, offset: 896)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !451)
!451 = !{!452, !461, !462}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !450, file: !224, line: 5074, baseType: !453, size: 96)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!456, !459, !460}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !453, file: !454, line: 57, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !454, line: 57, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !453, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !453, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !450, file: !224, line: 5075, baseType: !393, size: 64, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !450, file: !224, line: 5076, baseType: !463, offset: 160)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !358, file: !359, line: 343, baseType: !465, size: 64, offset: 928)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !465, file: !428, line: 63, baseType: !162, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !465, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!469 = !{!470, !471, !472, !473}
!470 = !DILocalVariable(name: "thread", arg: 1, scope: !353, file: !354, line: 175, type: !357)
!471 = !DILocalVariable(name: "region_num", scope: !353, file: !354, line: 200, type: !133)
!472 = !DILocalVariable(name: "guard_start", scope: !353, file: !354, line: 265, type: !22)
!473 = !DILocalVariable(name: "guard_size", scope: !353, file: !354, line: 266, type: !252)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 96, elements: !486)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !477)
!476 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = !{!478, !479, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !476, line: 53, baseType: !22, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !475, file: !476, line: 55, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !483)
!482 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !483, file: !482, line: 150, baseType: !162, size: 32)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 96, elements: !486)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !492, file: !525, line: 39, type: !133, isLocal: true, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !524, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!494 = !{!495, !102, !107, !512, !133}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !497, line: 1226, baseType: !498)
!497 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 1213, size: 352, elements: !499)
!499 = !{!500, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !498, file: !497, line: 1215, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !498, file: !497, line: 1216, baseType: !283, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !498, file: !497, line: 1217, baseType: !283, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !498, file: !497, line: 1218, baseType: !283, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !498, file: !497, line: 1219, baseType: !283, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !498, file: !497, line: 1220, baseType: !283, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !498, file: !497, line: 1221, baseType: !283, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !498, file: !497, line: 1222, baseType: !283, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !498, file: !497, line: 1223, baseType: !283, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !498, file: !497, line: 1224, baseType: !283, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !498, file: !497, line: 1225, baseType: !283, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !515, line: 29, baseType: !162, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 37, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !521, file: !482, line: 143, baseType: !162, size: 32)
!524 = !{!490}
!525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !528, file: !535, line: 21, type: !269, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !534, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!530 = !{!531, !107, !102}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !533, line: 22, baseType: !107)
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!526}
!535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !538, file: !543, line: 13, type: !560, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !540, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!540 = !{!541, !536}
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "mpu_config", scope: !538, file: !543, line: 37, type: !544, isLocal: false, isDefinition: true)
!543 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !515, line: 41, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !545, file: !515, line: 43, baseType: !162, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !545, file: !515, line: 45, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !515, line: 29, baseType: !162, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !551, file: !515, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !482, line: 143, baseType: !162, size: 32)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !389)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !563, file: !646, line: 72, type: !730, isLocal: true, isDefinition: true)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !632, globals: !643, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!565 = !{!30, !566}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 65, baseType: !107, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631}
!568 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!569 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!570 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!571 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!572 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!573 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!574 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!575 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!576 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!577 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!578 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!579 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!580 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!581 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!582 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!583 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!584 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!585 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!586 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!587 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!588 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!589 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!590 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!591 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!592 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!593 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!594 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!595 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!596 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!597 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!598 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!599 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!600 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!601 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!602 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!603 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!604 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!605 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!606 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!607 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!608 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!609 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!610 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!611 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!612 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!613 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!614 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!615 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!616 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!617 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!618 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!619 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!620 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!621 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!622 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!623 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!624 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!625 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!626 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!627 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!628 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!629 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!630 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!631 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!632 = !{!252, !107, !102, !633}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 243, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 235, size: 192, elements: !636)
!636 = !{!637, !638, !639, !640, !641, !642}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !635, file: !279, line: 237, baseType: !283, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !635, file: !279, line: 238, baseType: !283, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !635, file: !279, line: 239, baseType: !283, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !635, file: !279, line: 240, baseType: !283, size: 32, offset: 96)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !635, file: !279, line: 241, baseType: !283, size: 32, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !635, file: !279, line: 242, baseType: !283, size: 32, offset: 160)
!643 = !{!644, !650, !666, !677, !694, !561, !696, !710, !712, !714, !716, !718, !720, !722, !724, !726, !728}
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !563, file: !646, line: 424, type: !647, isLocal: false, isDefinition: true, align: 16)
!646 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !648)
!648 = !{!649}
!649 = !DISubrange(count: 4)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !563, file: !646, line: 424, type: !652, isLocal: false, isDefinition: true, align: 32)
!652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !653)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !654)
!654 = !{!655, !656, !657, !658, !664, !665}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !653, file: !120, line: 380, baseType: !123, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !653, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !653, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !653, file: !120, line: 386, baseType: !659, size: 32, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !660, file: !120, line: 359, baseType: !133, size: 8)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !660, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !653, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !653, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !563, file: !646, line: 424, type: !668, isLocal: true, isDefinition: true, align: 32)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !670)
!670 = !{!671, !676}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !669, file: !294, line: 60, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DISubroutineType(types: !674)
!674 = !{!107, !675}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !669, file: !294, line: 65, baseType: !675, size: 32, offset: 32)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "exti_data", scope: !563, file: !646, line: 423, type: !679, isLocal: true, isDefinition: true)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !646, line: 107, size: 1472, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !679, file: !646, line: 109, baseType: !682, size: 1472)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 1472, elements: !692)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !646, line: 101, size: 64, elements: !684)
!684 = !{!685, !691}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !683, file: !646, line: 102, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !687, line: 63, baseType: !688)
!687 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !107, !102}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !683, file: !646, line: 103, baseType: !102, size: 32, offset: 32)
!692 = !{!693}
!693 = !DISubrange(count: 23)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !563, file: !646, line: 424, type: !660, isLocal: true, isDefinition: true, align: 8)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !698, file: !646, line: 493, type: !703, isLocal: true, isDefinition: true, align: 32)
!698 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !646, file: !646, line: 460, type: !699, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !701)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !675}
!701 = !{!702}
!702 = !DILocalVariable(name: "dev", arg: 1, scope: !698, file: !646, line: 460, type: !675)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !704)
!704 = !{!705, !707, !708, !709}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !703, file: !10, line: 55, baseType: !706, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !703, file: !10, line: 57, baseType: !706, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !703, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !703, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !698, file: !646, line: 497, type: !703, isLocal: true, isDefinition: true, align: 32)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !698, file: !646, line: 507, type: !703, isLocal: true, isDefinition: true, align: 32)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !698, file: !646, line: 512, type: !703, isLocal: true, isDefinition: true, align: 32)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !698, file: !646, line: 516, type: !703, isLocal: true, isDefinition: true, align: 32)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !698, file: !646, line: 523, type: !703, isLocal: true, isDefinition: true, align: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !698, file: !646, line: 527, type: !703, isLocal: true, isDefinition: true, align: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !698, file: !646, line: 581, type: !703, isLocal: true, isDefinition: true, align: 32)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !698, file: !646, line: 586, type: !703, isLocal: true, isDefinition: true, align: 32)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !698, file: !646, line: 591, type: !703, isLocal: true, isDefinition: true, align: 32)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !698, file: !646, line: 595, type: !703, isLocal: true, isDefinition: true, align: 32)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 736, elements: !692)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !732)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 133, baseType: !566)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !735, file: !740, line: 24, type: !766, isLocal: false, isDefinition: true, align: 16)
!735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !737, splitDebugInlining: false, nameTableKind: None)
!736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!737 = !{!738, !733, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764}
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !735, file: !740, line: 19, type: !741, isLocal: false, isDefinition: true, align: 16)
!740 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 224, elements: !742)
!742 = !{!743}
!743 = !DISubrange(count: 14)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !735, file: !740, line: 31, type: !647, isLocal: false, isDefinition: true, align: 16)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !735, file: !740, line: 38, type: !647, isLocal: false, isDefinition: true, align: 16)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !735, file: !740, line: 45, type: !647, isLocal: false, isDefinition: true, align: 16)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !735, file: !740, line: 52, type: !647, isLocal: false, isDefinition: true, align: 16)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !735, file: !740, line: 59, type: !647, isLocal: false, isDefinition: true, align: 16)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !735, file: !740, line: 66, type: !647, isLocal: false, isDefinition: true, align: 16)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !735, file: !740, line: 73, type: !647, isLocal: false, isDefinition: true, align: 16)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !735, file: !740, line: 80, type: !647, isLocal: false, isDefinition: true, align: 16)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !735, file: !740, line: 87, type: !647, isLocal: false, isDefinition: true, align: 16)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !735, file: !740, line: 94, type: !647, isLocal: false, isDefinition: true, align: 16)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !735, file: !740, line: 101, type: !647, isLocal: false, isDefinition: true, align: 16)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !767)
!767 = !{!768}
!768 = !DISubrange(count: 3)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !771, file: !835, line: 398, type: !868, isLocal: true, isDefinition: true)
!771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !773, retainedTypes: !786, globals: !832, splitDebugInlining: false, nameTableKind: None)
!772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!773 = !{!774, !30, !779}
!774 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !775, line: 197, baseType: !32, size: 32, elements: !776)
!775 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!776 = !{!777, !778}
!777 = !DIEnumerator(name: "SUCCESS", value: 0)
!778 = !DIEnumerator(name: "ERROR", value: 1)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !780, line: 44, baseType: !32, size: 32, elements: !781)
!780 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!781 = !{!782, !783, !784, !785}
!782 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!783 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!784 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!785 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!786 = !{!102, !107, !162, !787, !825, !831}
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 369, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 335, size: 1152, elements: !790)
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !824}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !789, file: !279, line: 337, baseType: !283, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !789, file: !279, line: 338, baseType: !283, size: 32, offset: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !789, file: !279, line: 339, baseType: !283, size: 32, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !789, file: !279, line: 340, baseType: !283, size: 32, offset: 96)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !789, file: !279, line: 341, baseType: !283, size: 32, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !789, file: !279, line: 342, baseType: !283, size: 32, offset: 160)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !789, file: !279, line: 343, baseType: !283, size: 32, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !789, file: !279, line: 344, baseType: !162, size: 32, offset: 224)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !789, file: !279, line: 345, baseType: !283, size: 32, offset: 256)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !789, file: !279, line: 346, baseType: !283, size: 32, offset: 288)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !789, file: !279, line: 347, baseType: !802, size: 64, offset: 320)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !389)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !789, file: !279, line: 348, baseType: !283, size: 32, offset: 384)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !789, file: !279, line: 349, baseType: !283, size: 32, offset: 416)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !789, file: !279, line: 350, baseType: !283, size: 32, offset: 448)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !789, file: !279, line: 351, baseType: !162, size: 32, offset: 480)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !789, file: !279, line: 352, baseType: !283, size: 32, offset: 512)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !789, file: !279, line: 353, baseType: !283, size: 32, offset: 544)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !789, file: !279, line: 354, baseType: !802, size: 64, offset: 576)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !789, file: !279, line: 355, baseType: !283, size: 32, offset: 640)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !789, file: !279, line: 356, baseType: !283, size: 32, offset: 672)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !789, file: !279, line: 357, baseType: !283, size: 32, offset: 704)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !789, file: !279, line: 358, baseType: !162, size: 32, offset: 736)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !789, file: !279, line: 359, baseType: !283, size: 32, offset: 768)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !789, file: !279, line: 360, baseType: !283, size: 32, offset: 800)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !789, file: !279, line: 361, baseType: !802, size: 64, offset: 832)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !789, file: !279, line: 362, baseType: !283, size: 32, offset: 896)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !789, file: !279, line: 363, baseType: !283, size: 32, offset: 928)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !789, file: !279, line: 364, baseType: !802, size: 64, offset: 960)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !789, file: !279, line: 365, baseType: !283, size: 32, offset: 1024)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !789, file: !279, line: 366, baseType: !283, size: 32, offset: 1056)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !789, file: !279, line: 367, baseType: !823, size: 32, offset: 1088)
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 32, elements: !486)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !789, file: !279, line: 368, baseType: !283, size: 32, offset: 1120)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !827, line: 343, size: 64, elements: !828)
!827 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!828 = !{!829, !830}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !826, file: !827, line: 344, baseType: !162, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !826, file: !827, line: 345, baseType: !162, size: 32, offset: 32)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!832 = !{!833, !839, !855, !866, !769}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !771, file: !835, line: 752, type: !836, isLocal: false, isDefinition: true, align: 16)
!835 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 640, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 40)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !771, file: !835, line: 752, type: !841, isLocal: false, isDefinition: true, align: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !120, line: 380, baseType: !123, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !120, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !120, line: 359, baseType: !133, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !771, file: !835, line: 752, type: !857, isLocal: true, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !859)
!859 = !{!860, !865}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !294, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!107, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !294, line: 65, baseType: !864, size: 32, offset: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !771, file: !835, line: 752, type: !849, isLocal: true, isDefinition: true, align: 8)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !780, line: 100, size: 224, elements: !869)
!869 = !{!870, !876, !877, !886, !891, !896, !902}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !868, file: !780, line: 101, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !780, line: 76, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DISubroutineType(types: !874)
!874 = !{!107, !864, !875}
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !780, line: 56, baseType: !102)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !868, file: !780, line: 102, baseType: !871, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !868, file: !780, line: 103, baseType: !878, size: 32, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !780, line: 83, baseType: !879)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{!107, !864, !875, !882, !102}
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !780, line: 72, baseType: !883)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DISubroutineType(types: !885)
!885 = !{null, !864, !875, !102}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !868, file: !780, line: 104, baseType: !887, size: 32, offset: 96)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !780, line: 79, baseType: !888)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DISubroutineType(types: !890)
!890 = !{!107, !864, !875, !831}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !868, file: !780, line: 105, baseType: !892, size: 32, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !780, line: 88, baseType: !893)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!779, !864, !875}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !868, file: !780, line: 106, baseType: !897, size: 32, offset: 160)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !780, line: 92, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!107, !864, !875, !901}
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !780, line: 64, baseType: !102)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !868, file: !780, line: 107, baseType: !903, size: 32, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !780, line: 96, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{!107, !864, !875, !102}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !909, file: !994, line: 603, type: !996, isLocal: true, isDefinition: true, align: 32)
!909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !911, globals: !991, splitDebugInlining: false, nameTableKind: None)
!910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!911 = !{!102, !107, !912}
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !915)
!915 = !{!916, !935, !939, !943, !956, !961, !965, !969, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !914, file: !111, line: 365, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{!107, !920, !144}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !923)
!923 = !{!924, !925, !926, !927, !933, !934}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !922, file: !120, line: 380, baseType: !123, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !922, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !922, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !922, file: !120, line: 386, baseType: !928, size: 32, offset: 96)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !930)
!930 = !{!931, !932}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !929, file: !120, line: 359, baseType: !133, size: 8)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !929, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !922, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !922, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !914, file: !111, line: 366, baseType: !936, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !920, !134}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !914, file: !111, line: 374, baseType: !940, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!107, !920}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !914, file: !111, line: 377, baseType: !944, size: 32, offset: 96)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!107, !920, !947}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !950)
!950 = !{!951, !952, !953, !954, !955}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !949, file: !111, line: 123, baseType: !162, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !949, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !949, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !949, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !949, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !914, file: !111, line: 379, baseType: !957, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!107, !920, !960}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !914, file: !111, line: 384, baseType: !962, size: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!107, !920, !176, !107}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !914, file: !111, line: 393, baseType: !966, size: 32, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{!107, !920, !182, !183}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !914, file: !111, line: 402, baseType: !970, size: 32, offset: 224)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !920}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !914, file: !111, line: 405, baseType: !970, size: 32, offset: 256)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !914, file: !111, line: 408, baseType: !940, size: 32, offset: 288)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !914, file: !111, line: 411, baseType: !970, size: 32, offset: 320)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !914, file: !111, line: 414, baseType: !970, size: 32, offset: 352)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !914, file: !111, line: 417, baseType: !940, size: 32, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !914, file: !111, line: 420, baseType: !940, size: 32, offset: 416)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !914, file: !111, line: 423, baseType: !970, size: 32, offset: 448)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !914, file: !111, line: 426, baseType: !970, size: 32, offset: 480)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !914, file: !111, line: 429, baseType: !940, size: 32, offset: 512)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !914, file: !111, line: 432, baseType: !940, size: 32, offset: 544)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !914, file: !111, line: 435, baseType: !984, size: 32, offset: 576)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{null, !920, !987, !102}
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = !DISubroutineType(types: !990)
!990 = !{null, !920, !102}
!991 = !{!907, !992}
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !909, file: !994, line: 38, type: !995, isLocal: true, isDefinition: true)
!994 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !997, file: !294, line: 60, baseType: !940, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !997, file: !294, line: 65, baseType: !920, size: 32, offset: 32)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1003, file: !1172, line: 762, type: !1284, isLocal: true, isDefinition: true)
!1003 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1004, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1005, retainedTypes: !1023, globals: !1169, splitDebugInlining: false, nameTableKind: None)
!1004 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1005 = !{!30, !1006, !1012, !1017, !779}
!1006 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1007, line: 506, baseType: !32, size: 32, elements: !1008)
!1007 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1008 = !{!1009, !1010, !1011}
!1009 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1010 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1011 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1012 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1007, line: 512, baseType: !32, size: 32, elements: !1013)
!1013 = !{!1014, !1015, !1016}
!1014 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1015 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1016 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !687, line: 43, baseType: !32, size: 32, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022}
!1019 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1020 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1021 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1022 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1023 = !{!102, !107, !1024, !1094, !1099, !1059, !1012, !1006, !1104, !1105, !162, !1119, !1074, !256, !1129, !1130}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1007, line: 523, size: 288, elements: !1027)
!1027 = !{!1028, !1049, !1055, !1060, !1064, !1065, !1066, !1070, !1090}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1026, file: !1007, line: 524, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!107, !1032, !1047, !1048}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1039, !1045, !1046}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1034, file: !120, line: 380, baseType: !123, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1034, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1034, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1034, file: !120, line: 386, baseType: !1040, size: 32, offset: 96)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1041, file: !120, line: 359, baseType: !133, size: 8)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1041, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1034, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1034, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1007, line: 237, baseType: !133)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1007, line: 257, baseType: !162)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1026, file: !1007, line: 530, baseType: !1050, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!107, !1032, !1053}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1007, line: 229, baseType: !162)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1026, file: !1007, line: 532, baseType: !1056, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!107, !1032, !1059, !1054}
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1007, line: 216, baseType: !162)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1026, file: !1007, line: 535, baseType: !1061, size: 32, offset: 96)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!107, !1032, !1059}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1026, file: !1007, line: 537, baseType: !1061, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1026, file: !1007, line: 539, baseType: !1061, size: 32, offset: 160)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1026, file: !1007, line: 541, baseType: !1067, size: 32, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!107, !1032, !1047, !1006, !1012}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1026, file: !1007, line: 544, baseType: !1071, size: 32, offset: 224)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!107, !1032, !1074, !136}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1007, line: 478, size: 96, elements: !1076)
!1076 = !{!1077, !1084, !1089}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1075, file: !1007, line: 482, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1079, line: 33, baseType: !1080)
!1079 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1079, line: 29, size: 32, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1080, file: !1079, line: 30, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1075, file: !1007, line: 485, baseType: !1085, size: 32, offset: 32)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1007, line: 464, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !1032, !1074, !1059}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1075, file: !1007, line: 493, baseType: !1059, size: 32, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1026, file: !1007, line: 547, baseType: !1091, size: 32, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!162, !1032}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1007, line: 428, size: 32, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1096, file: !1007, line: 434, baseType: !1059, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1007, line: 441, size: 32, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1101, file: !1007, line: 447, baseType: !1059, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 275, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 264, size: 320, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1107, file: !279, line: 266, baseType: !283, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1107, file: !279, line: 267, baseType: !283, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1107, file: !279, line: 268, baseType: !283, size: 32, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1107, file: !279, line: 269, baseType: !283, size: 32, offset: 96)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1107, file: !279, line: 270, baseType: !283, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1107, file: !279, line: 271, baseType: !283, size: 32, offset: 160)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1107, file: !279, line: 272, baseType: !283, size: 32, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1107, file: !279, line: 273, baseType: !283, size: 32, offset: 224)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1107, file: !279, line: 274, baseType: !1118, size: 64, offset: 256)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !389)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 288, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 281, size: 288, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1127, !1128}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1121, file: !279, line: 283, baseType: !283, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1121, file: !279, line: 284, baseType: !283, size: 32, offset: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1121, file: !279, line: 285, baseType: !1126, size: 128, offset: 64)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !648)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1121, file: !279, line: 286, baseType: !802, size: 64, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1121, file: !279, line: 287, baseType: !283, size: 32, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !780, line: 100, size: 224, elements: !1133)
!1133 = !{!1134, !1139, !1140, !1149, !1154, !1159, !1164}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1132, file: !780, line: 101, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !780, line: 76, baseType: !1136)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!107, !1032, !875}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1132, file: !780, line: 102, baseType: !1135, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1132, file: !780, line: 103, baseType: !1141, size: 32, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !780, line: 83, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!107, !1032, !875, !1145, !102}
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !780, line: 72, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !1032, !875, !102}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1132, file: !780, line: 104, baseType: !1150, size: 32, offset: 96)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !780, line: 79, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!107, !1032, !875, !831}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1132, file: !780, line: 105, baseType: !1155, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !780, line: 88, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!779, !1032, !875}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1132, file: !780, line: 106, baseType: !1160, size: 32, offset: 160)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !780, line: 92, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!107, !1032, !875, !901}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1132, file: !780, line: 107, baseType: !1165, size: 32, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !780, line: 96, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!107, !1032, !875, !102}
!1169 = !{!1170, !1176, !1178, !1188, !1190, !1192, !1194, !1199, !1201, !1203, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1001, !1280, !1282, !1295, !1297, !1299, !1301, !1303, !1305}
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1003, file: !1172, line: 762, type: !1173, isLocal: false, isDefinition: true, align: 16)
!1172 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 112, elements: !1174)
!1174 = !{!1175}
!1175 = !DISubrange(count: 7)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1003, file: !1172, line: 762, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1003, file: !1172, line: 762, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1182)
!1182 = !{!1183, !1187}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1181, file: !294, line: 60, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!107, !1032}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1181, file: !294, line: 65, baseType: !1032, size: 32, offset: 32)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_20", scope: !1003, file: !1172, line: 766, type: !1173, isLocal: false, isDefinition: true, align: 16)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "__device_dts_ord_20", scope: !1003, file: !1172, line: 766, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_20", scope: !1003, file: !1172, line: 766, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1003, file: !1172, line: 770, type: !1196, isLocal: false, isDefinition: true, align: 16)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 5)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1003, file: !1172, line: 770, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1003, file: !1172, line: 770, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_23", scope: !1003, file: !1172, line: 774, type: !1205, isLocal: false, isDefinition: true, align: 16)
!1205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 96, elements: !1206)
!1206 = !{!1207}
!1207 = !DISubrange(count: 6)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__device_dts_ord_23", scope: !1003, file: !1172, line: 774, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_23", scope: !1003, file: !1172, line: 774, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1003, file: !1172, line: 778, type: !1196, isLocal: false, isDefinition: true, align: 16)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1003, file: !1172, line: 778, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1003, file: !1172, line: 778, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1003, file: !1172, line: 782, type: !1196, isLocal: false, isDefinition: true, align: 16)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1003, file: !1172, line: 782, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1003, file: !1172, line: 782, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1003, file: !1172, line: 786, type: !1196, isLocal: false, isDefinition: true, align: 16)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1003, file: !1172, line: 786, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1003, file: !1172, line: 786, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1003, file: !1172, line: 790, type: !1196, isLocal: false, isDefinition: true, align: 16)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1003, file: !1172, line: 790, type: !1033, isLocal: false, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1003, file: !1172, line: 790, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1003, file: !1172, line: 762, type: !1238, isLocal: true, isDefinition: true)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1239, line: 237, size: 128, elements: !1240)
!1239 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1240 = !{!1241, !1242, !1243}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1238, file: !1239, line: 239, baseType: !1101, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1238, file: !1239, line: 241, baseType: !1032, size: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1238, file: !1239, line: 243, baseType: !1244, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1079, line: 40, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1079, line: 35, size: 64, elements: !1246)
!1246 = !{!1247, !1249}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1245, file: !1079, line: 36, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1245, file: !1079, line: 37, baseType: !1248, size: 32, offset: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1003, file: !1172, line: 762, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1003, file: !1172, line: 766, type: !1238, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_20", scope: !1003, file: !1172, line: 766, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1003, file: !1172, line: 770, type: !1238, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1003, file: !1172, line: 770, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1003, file: !1172, line: 774, type: !1238, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_23", scope: !1003, file: !1172, line: 774, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1003, file: !1172, line: 778, type: !1238, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1003, file: !1172, line: 778, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1003, file: !1172, line: 782, type: !1238, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1003, file: !1172, line: 782, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1003, file: !1172, line: 786, type: !1238, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1003, file: !1172, line: 786, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1003, file: !1172, line: 790, type: !1238, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1003, file: !1172, line: 790, type: !1041, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1003, file: !1172, line: 656, type: !1025, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1003, file: !1172, line: 766, type: !1284, isLocal: true, isDefinition: true)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1239, line: 224, size: 160, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1285, file: !1239, line: 226, baseType: !1096, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1285, file: !1239, line: 228, baseType: !831, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1285, file: !1239, line: 230, baseType: !107, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1285, file: !1239, line: 231, baseType: !1291, size: 64, offset: 96)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !827, line: 343, size: 64, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1291, file: !827, line: 344, baseType: !162, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1291, file: !827, line: 345, baseType: !162, size: 32, offset: 32)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1003, file: !1172, line: 770, type: !1284, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1003, file: !1172, line: 774, type: !1284, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1003, file: !1172, line: 778, type: !1284, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1003, file: !1172, line: 782, type: !1284, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1003, file: !1172, line: 786, type: !1284, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1003, file: !1172, line: 790, type: !1284, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1309, file: !1480, line: 1914, type: !1572, isLocal: true, isDefinition: true)
!1309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1311, retainedTypes: !1344, globals: !1477, splitDebugInlining: false, nameTableKind: None)
!1310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1311 = !{!30, !1312, !1319, !1326, !1333, !1339, !779}
!1312 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318}
!1314 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1315 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1316 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1317 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1318 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1325}
!1321 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1322 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1323 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1324 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1325 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331, !1332}
!1328 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1329 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1330 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1331 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1332 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1333 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338}
!1335 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1336 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1337 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1338 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1339 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1340)
!1340 = !{!1341, !1342, !1343}
!1341 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1342 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1343 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1344 = !{!102, !107, !1345, !134, !133, !1424, !162, !875, !1435, !411, !1474, !1476}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1348)
!1348 = !{!1349, !1368, !1372, !1376, !1389, !1394, !1398, !1402, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1347, file: !111, line: 365, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!107, !1353, !144}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1366, !1367}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1355, file: !120, line: 380, baseType: !123, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1355, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1355, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1355, file: !120, line: 386, baseType: !1361, size: 32, offset: 96)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1362, file: !120, line: 359, baseType: !133, size: 8)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1362, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1355, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1355, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1347, file: !111, line: 366, baseType: !1369, size: 32, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{null, !1353, !134}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1347, file: !111, line: 374, baseType: !1373, size: 32, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!107, !1353}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1347, file: !111, line: 377, baseType: !1377, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!107, !1353, !1380}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1382, file: !111, line: 123, baseType: !162, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1382, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1382, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1382, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1382, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1347, file: !111, line: 379, baseType: !1390, size: 32, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!107, !1353, !1393}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1347, file: !111, line: 384, baseType: !1395, size: 32, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!107, !1353, !176, !107}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1347, file: !111, line: 393, baseType: !1399, size: 32, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!107, !1353, !182, !183}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1347, file: !111, line: 402, baseType: !1403, size: 32, offset: 224)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{null, !1353}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1347, file: !111, line: 405, baseType: !1403, size: 32, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1347, file: !111, line: 408, baseType: !1373, size: 32, offset: 288)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1347, file: !111, line: 411, baseType: !1403, size: 32, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1347, file: !111, line: 414, baseType: !1403, size: 32, offset: 352)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1347, file: !111, line: 417, baseType: !1373, size: 32, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1347, file: !111, line: 420, baseType: !1373, size: 32, offset: 416)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1347, file: !111, line: 423, baseType: !1403, size: 32, offset: 448)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1347, file: !111, line: 426, baseType: !1403, size: 32, offset: 480)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1347, file: !111, line: 429, baseType: !1373, size: 32, offset: 512)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1347, file: !111, line: 432, baseType: !1373, size: 32, offset: 544)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1347, file: !111, line: 435, baseType: !1417, size: 32, offset: 576)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{null, !1353, !1420, !102}
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{null, !1353, !102}
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 507, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 498, size: 224, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433, !1434}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1426, file: !279, line: 500, baseType: !283, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1426, file: !279, line: 501, baseType: !283, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1426, file: !279, line: 502, baseType: !283, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1426, file: !279, line: 503, baseType: !283, size: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1426, file: !279, line: 504, baseType: !283, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1426, file: !279, line: 505, baseType: !283, size: 32, offset: 160)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1426, file: !279, line: 506, baseType: !283, size: 32, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !780, line: 100, size: 224, elements: !1438)
!1438 = !{!1439, !1444, !1445, !1454, !1459, !1464, !1469}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1437, file: !780, line: 101, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !780, line: 76, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!107, !1353, !875}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1437, file: !780, line: 102, baseType: !1440, size: 32, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1437, file: !780, line: 103, baseType: !1446, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !780, line: 83, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!107, !1353, !875, !1450, !102}
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !780, line: 72, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1353, !875, !102}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1437, file: !780, line: 104, baseType: !1455, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !780, line: 79, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!107, !1353, !875, !831}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1437, file: !780, line: 105, baseType: !1460, size: 32, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !780, line: 88, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!779, !1353, !875}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1437, file: !780, line: 106, baseType: !1465, size: 32, offset: 160)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !780, line: 92, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!107, !1353, !875, !901}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1437, file: !780, line: 107, baseType: !1470, size: 32, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !780, line: 96, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!107, !1353, !875, !102}
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1475)
!1475 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!1477 = !{!1478, !1484, !1486, !1493, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !1307, !1511, !1519, !1542, !1545, !1548, !1559, !1561, !1570, !1589, !1591, !1593, !1595, !1597, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1619}
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1481, isLocal: false, isDefinition: true, align: 16)
!1480 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1482)
!1482 = !{!1483}
!1483 = !DISubrange(count: 8)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "__device_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1354, isLocal: false, isDefinition: true, align: 32)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1488, isLocal: true, isDefinition: true, align: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1490)
!1490 = !{!1491, !1492}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1489, file: !294, line: 60, baseType: !1373, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1489, file: !294, line: 65, baseType: !1353, size: 32, offset: 32)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1481, isLocal: false, isDefinition: true, align: 16)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1354, isLocal: false, isDefinition: true, align: 32)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1488, isLocal: true, isDefinition: true, align: 32)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1481, isLocal: false, isDefinition: true, align: 16)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__device_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1354, isLocal: false, isDefinition: true, align: 32)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1488, isLocal: true, isDefinition: true, align: 32)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1362, isLocal: true, isDefinition: true, align: 8)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1362, isLocal: true, isDefinition: true, align: 8)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1362, isLocal: true, isDefinition: true, align: 8)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1309, file: !1480, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1514, size: 64, elements: !486)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !827, line: 343, size: 64, elements: !1516)
!1516 = !{!1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1515, file: !827, line: 344, baseType: !162, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1515, file: !827, line: 345, baseType: !162, size: 32, offset: 32)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1521, isLocal: true, isDefinition: true)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1523, line: 60, size: 64, elements: !1524)
!1523 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1524 = !{!1525, !1541}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1522, file: !1523, line: 69, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1523, line: 50, size: 64, elements: !1529)
!1529 = !{!1530, !1539, !1540}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1528, file: !1523, line: 52, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1534, line: 37, baseType: !1535)
!1534 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1534, line: 32, size: 64, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1535, file: !1534, line: 34, baseType: !162, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1535, file: !1534, line: 36, baseType: !162, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1528, file: !1523, line: 54, baseType: !133, size: 8, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1528, file: !1523, line: 56, baseType: !133, size: 8, offset: 40)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1522, file: !1523, line: 71, baseType: !133, size: 8, offset: 32)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 64, elements: !486)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_47", scope: !1309, file: !1480, line: 1914, type: !1547, isLocal: true, isDefinition: true)
!1547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 128, elements: !389)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1550, file: !1480, line: 1914, type: !1553, isLocal: true, isDefinition: true, align: 32)
!1550 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1480, file: !1480, line: 1914, type: !1404, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !1551)
!1551 = !{!1552}
!1552 = !DILocalVariable(name: "dev", arg: 1, scope: !1550, file: !1480, line: 1914, type: !1353)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1553, file: !10, line: 55, baseType: !706, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1553, file: !10, line: 57, baseType: !706, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1553, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1553, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1309, file: !1480, line: 1539, type: !1346, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1309, file: !1480, line: 1914, type: !1563, isLocal: true, isDefinition: true)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1564, line: 74, size: 128, elements: !1565)
!1564 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1565 = !{!1566, !1567, !1568, !1569}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1563, file: !1564, line: 76, baseType: !162, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1563, file: !1564, line: 78, baseType: !1353, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1563, file: !1564, line: 80, baseType: !1420, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1563, file: !1564, line: 81, baseType: !102, size: 32, offset: 96)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1309, file: !1480, line: 1914, type: !1572, isLocal: true, isDefinition: true)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1564, line: 22, size: 256, elements: !1574)
!1574 = !{!1575, !1576, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1587}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1573, file: !1564, line: 24, baseType: !1424, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1573, file: !1564, line: 26, baseType: !1577, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1573, file: !1564, line: 28, baseType: !252, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1573, file: !1564, line: 30, baseType: !136, size: 8, offset: 96)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1573, file: !1564, line: 32, baseType: !107, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1573, file: !1564, line: 34, baseType: !136, size: 8, offset: 160)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1573, file: !1564, line: 36, baseType: !136, size: 8, offset: 168)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1573, file: !1564, line: 38, baseType: !136, size: 8, offset: 176)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1573, file: !1564, line: 40, baseType: !136, size: 8, offset: 184)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1573, file: !1564, line: 41, baseType: !1586, size: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1573, file: !1564, line: 44, baseType: !1588, size: 32, offset: 224)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1403)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1309, file: !1480, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1521, isLocal: true, isDefinition: true)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1309, file: !1480, line: 1914, type: !1547, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1599, file: !1480, line: 1914, type: !1553, isLocal: true, isDefinition: true, align: 32)
!1599 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1480, file: !1480, line: 1914, type: !1404, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !1600)
!1600 = !{!1601}
!1601 = !DILocalVariable(name: "dev", arg: 1, scope: !1599, file: !1480, line: 1914, type: !1353)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1309, file: !1480, line: 1914, type: !1563, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1309, file: !1480, line: 1914, type: !1572, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1309, file: !1480, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1521, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_50", scope: !1309, file: !1480, line: 1914, type: !1547, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1616, file: !1480, line: 1914, type: !1553, isLocal: true, isDefinition: true, align: 32)
!1616 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1480, file: !1480, line: 1914, type: !1404, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !1617)
!1617 = !{!1618}
!1618 = !DILocalVariable(name: "dev", arg: 1, scope: !1616, file: !1480, line: 1914, type: !1353)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1309, file: !1480, line: 1914, type: !1563, isLocal: true, isDefinition: true)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1623, file: !1701, line: 65, type: !283, isLocal: true, isDefinition: true)
!1623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1625, retainedTypes: !1626, globals: !1698, splitDebugInlining: false, nameTableKind: None)
!1624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1625 = !{!566}
!1626 = !{!103, !1627, !706, !133, !162, !1635, !1666}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !1630)
!1630 = !{!1631, !1632, !1633, !1634}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1629, file: !497, line: 766, baseType: !283, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1629, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1629, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1629, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1638)
!1638 = !{!1639, !1641, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1656, !1661, !1665}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1637, file: !497, line: 413, baseType: !1640, size: 256)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1482)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1637, file: !497, line: 414, baseType: !1642, size: 768, offset: 256)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1643)
!1643 = !{!1644}
!1644 = !DISubrange(count: 24)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1637, file: !497, line: 415, baseType: !1640, size: 256, offset: 1024)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1637, file: !497, line: 416, baseType: !1642, size: 768, offset: 1280)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1637, file: !497, line: 417, baseType: !1640, size: 256, offset: 2048)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1637, file: !497, line: 418, baseType: !1642, size: 768, offset: 2304)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1637, file: !497, line: 419, baseType: !1640, size: 256, offset: 3072)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1637, file: !497, line: 420, baseType: !1642, size: 768, offset: 3328)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1637, file: !497, line: 421, baseType: !1640, size: 256, offset: 4096)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1637, file: !497, line: 422, baseType: !1653, size: 1792, offset: 4352)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 56)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1637, file: !497, line: 423, baseType: !1657, size: 1920, offset: 6144)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 1920, elements: !1659)
!1658 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1659 = !{!1660}
!1660 = !DISubrange(count: 240)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1637, file: !497, line: 424, baseType: !1662, size: 20608, offset: 8064)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1663)
!1663 = !{!1664}
!1664 = !DISubrange(count: 644)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1637, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1689, !1690, !1691, !1693, !1695, !1697}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1668, file: !497, line: 447, baseType: !501, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1668, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1668, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1668, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1668, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1668, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1668, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 96, elements: !1678)
!1678 = !{!1679}
!1679 = !DISubrange(count: 12)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1668, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1668, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1668, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1668, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1668, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1668, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1668, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1668, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 64, elements: !389)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1668, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1668, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1668, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, elements: !648)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1668, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, elements: !1197)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1668, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1197)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1668, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1698 = !{!1699, !1725, !1728, !1730, !1732, !1621}
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1623, file: !1701, line: 285, type: !1702, isLocal: true, isDefinition: true, align: 32)
!1701 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1704)
!1704 = !{!1705, !1724}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1703, file: !294, line: 60, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!107, !1709}
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1711)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1712)
!1712 = !{!1713, !1714, !1715, !1716, !1722, !1723}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1711, file: !120, line: 380, baseType: !123, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1711, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1711, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1711, file: !120, line: 386, baseType: !1717, size: 32, offset: 96)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1718, file: !120, line: 359, baseType: !133, size: 8)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1718, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1711, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1711, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1703, file: !294, line: 65, baseType: !1709, size: 32, offset: 32)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "lock", scope: !1623, file: !1701, line: 34, type: !1727, isLocal: true, isDefinition: true)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "last_load", scope: !1623, file: !1701, line: 36, type: !162, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1623, file: !1701, line: 48, type: !162, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1623, file: !1701, line: 54, type: !162, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1736, file: !1818, line: 22, type: !1820, isLocal: true, isDefinition: true)
!1736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1738, retainedTypes: !1739, globals: !1815, splitDebugInlining: false, nameTableKind: None)
!1737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1738 = !{!1006, !1012}
!1739 = !{!1740, !1804, !1809, !1059, !1012, !1006, !1814, !102}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1007, line: 523, size: 288, elements: !1743)
!1743 = !{!1744, !1763, !1767, !1771, !1775, !1776, !1777, !1781, !1800}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1742, file: !1007, line: 524, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!107, !1748, !1047, !1048}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1761, !1762}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1750, file: !120, line: 380, baseType: !123, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1750, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1750, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1750, file: !120, line: 386, baseType: !1756, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1758)
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1757, file: !120, line: 359, baseType: !133, size: 8)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1757, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1750, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1750, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1742, file: !1007, line: 530, baseType: !1764, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!107, !1748, !1053}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1742, file: !1007, line: 532, baseType: !1768, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!107, !1748, !1059, !1054}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1742, file: !1007, line: 535, baseType: !1772, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!107, !1748, !1059}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1742, file: !1007, line: 537, baseType: !1772, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1742, file: !1007, line: 539, baseType: !1772, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1742, file: !1007, line: 541, baseType: !1778, size: 32, offset: 192)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!107, !1748, !1047, !1006, !1012}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1742, file: !1007, line: 544, baseType: !1782, size: 32, offset: 224)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!107, !1748, !1785, !136}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1007, line: 478, size: 96, elements: !1787)
!1787 = !{!1788, !1794, !1799}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1786, file: !1007, line: 482, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1079, line: 33, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1079, line: 29, size: 32, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1790, file: !1079, line: 30, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1786, file: !1007, line: 485, baseType: !1795, size: 32, offset: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1007, line: 464, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{null, !1748, !1785, !1059}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1786, file: !1007, line: 493, baseType: !1059, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1742, file: !1007, line: 547, baseType: !1801, size: 32, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!162, !1748}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1007, line: 428, size: 32, elements: !1807)
!1807 = !{!1808}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1806, file: !1007, line: 434, baseType: !1059, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1007, line: 441, size: 32, elements: !1812)
!1812 = !{!1813}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1811, file: !1007, line: 447, baseType: !1059, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1815 = !{!1816, !1734}
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1817 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1736, file: !1818, line: 37, type: !1819, isLocal: true, isDefinition: true)
!1818 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1821, size: 352, elements: !1822)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1822 = !{!1823}
!1823 = !DISubrange(count: 11)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1826, file: !1868, line: 139, type: !1874, isLocal: false, isDefinition: true)
!1826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1828, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!1827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 369, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 335, size: 1152, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1831, file: !279, line: 337, baseType: !283, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1831, file: !279, line: 338, baseType: !283, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1831, file: !279, line: 339, baseType: !283, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1831, file: !279, line: 340, baseType: !283, size: 32, offset: 96)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1831, file: !279, line: 341, baseType: !283, size: 32, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1831, file: !279, line: 342, baseType: !283, size: 32, offset: 160)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1831, file: !279, line: 343, baseType: !283, size: 32, offset: 192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1831, file: !279, line: 344, baseType: !162, size: 32, offset: 224)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1831, file: !279, line: 345, baseType: !283, size: 32, offset: 256)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1831, file: !279, line: 346, baseType: !283, size: 32, offset: 288)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1831, file: !279, line: 347, baseType: !802, size: 64, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1831, file: !279, line: 348, baseType: !283, size: 32, offset: 384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1831, file: !279, line: 349, baseType: !283, size: 32, offset: 416)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1831, file: !279, line: 350, baseType: !283, size: 32, offset: 448)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1831, file: !279, line: 351, baseType: !162, size: 32, offset: 480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1831, file: !279, line: 352, baseType: !283, size: 32, offset: 512)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1831, file: !279, line: 353, baseType: !283, size: 32, offset: 544)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1831, file: !279, line: 354, baseType: !802, size: 64, offset: 576)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1831, file: !279, line: 355, baseType: !283, size: 32, offset: 640)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1831, file: !279, line: 356, baseType: !283, size: 32, offset: 672)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1831, file: !279, line: 357, baseType: !283, size: 32, offset: 704)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1831, file: !279, line: 358, baseType: !162, size: 32, offset: 736)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1831, file: !279, line: 359, baseType: !283, size: 32, offset: 768)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1831, file: !279, line: 360, baseType: !283, size: 32, offset: 800)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1831, file: !279, line: 361, baseType: !802, size: 64, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1831, file: !279, line: 362, baseType: !283, size: 32, offset: 896)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1831, file: !279, line: 363, baseType: !283, size: 32, offset: 928)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1831, file: !279, line: 364, baseType: !802, size: 64, offset: 960)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1831, file: !279, line: 365, baseType: !283, size: 32, offset: 1024)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1831, file: !279, line: 366, baseType: !283, size: 32, offset: 1056)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1831, file: !279, line: 367, baseType: !823, size: 32, offset: 1088)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1831, file: !279, line: 368, baseType: !283, size: 32, offset: 1120)
!1865 = !{!1866, !1869, !1824}
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1826, file: !1868, line: 137, type: !162, isLocal: false, isDefinition: true)
!1868 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1826, file: !1868, line: 138, type: !1871, isLocal: false, isDefinition: true)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !1872)
!1872 = !{!1873}
!1873 = !DISubrange(count: 16)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1482)
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1877, file: !1880, line: 23, type: !183, isLocal: false, isDefinition: true)
!1877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1879, splitDebugInlining: false, nameTableKind: None)
!1878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1879 = !{!1875}
!1880 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1883, file: !1887, line: 86, type: !2134, isLocal: false, isDefinition: true, align: 512)
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1885, retainedTypes: !1894, globals: !1967, splitDebugInlining: false, nameTableKind: None)
!1884 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!1885 = !{!1886, !30, !566}
!1886 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1887, line: 63, baseType: !32, size: 32, elements: !1888)
!1887 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1888 = !{!1889, !1890, !1891, !1892, !1893}
!1889 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1890 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1891 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1892 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1893 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1894 = !{!252, !102, !107, !1895, !256, !162, !1925, !706, !133, !1950}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1898, line: 51, size: 64, elements: !1899)
!1898 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1899 = !{!1900, !1920}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1897, file: !1898, line: 52, baseType: !1901, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1898, line: 38, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!107, !1905, !182, !411}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1918, !1919}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1907, file: !120, line: 380, baseType: !123, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1907, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1907, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1907, file: !120, line: 386, baseType: !1913, size: 32, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1915)
!1915 = !{!1916, !1917}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1914, file: !120, line: 359, baseType: !133, size: 8)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1914, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1907, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1907, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1897, file: !1898, line: 53, baseType: !1921, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1898, line: 47, baseType: !1922)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!107, !1905, !182, !411, !162}
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1927)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1927, file: !497, line: 447, baseType: !501, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1927, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1927, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1927, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1927, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1927, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1927, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1927, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1927, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1927, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1927, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1927, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1927, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1927, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1927, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1927, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1927, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1927, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1927, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1927, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1927, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1952, file: !497, line: 413, baseType: !1640, size: 256)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1952, file: !497, line: 414, baseType: !1642, size: 768, offset: 256)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1952, file: !497, line: 415, baseType: !1640, size: 256, offset: 1024)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1952, file: !497, line: 416, baseType: !1642, size: 768, offset: 1280)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1952, file: !497, line: 417, baseType: !1640, size: 256, offset: 2048)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1952, file: !497, line: 418, baseType: !1642, size: 768, offset: 2304)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1952, file: !497, line: 419, baseType: !1640, size: 256, offset: 3072)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1952, file: !497, line: 420, baseType: !1642, size: 768, offset: 3328)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1952, file: !497, line: 421, baseType: !1640, size: 256, offset: 4096)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1952, file: !497, line: 422, baseType: !1653, size: 1792, offset: 4352)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1952, file: !497, line: 423, baseType: !1657, size: 1920, offset: 6144)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1952, file: !497, line: 424, baseType: !1662, size: 20608, offset: 8064)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1952, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1967 = !{!1968, !2090, !2099, !2101, !1881, !2104, !2106, !2111}
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "_kernel", scope: !1883, file: !1887, line: 40, type: !1970, isLocal: false, isDefinition: true)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !1971)
!1971 = !{!1972, !2085}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1970, file: !228, line: 159, baseType: !1973, size: 192)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 192, elements: !486)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !1975)
!1975 = !{!1976, !1977, !1978, !2079, !2080, !2081, !2082}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1974, file: !228, line: 102, baseType: !162, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1974, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1974, file: !228, line: 108, baseType: !1979, size: 32, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !1981)
!1981 = !{!1982, !2040, !2052, !2053, !2054, !2055, !2061, !2074}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1980, file: !359, line: 247, baseType: !1983, size: 384)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !1984)
!1984 = !{!1985, !2009, !2016, !2017, !2018, !2027, !2028, !2029}
!1985 = !DIDerivedType(tag: DW_TAG_member, scope: !1983, file: !359, line: 60, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1983, file: !359, line: 60, size: 64, elements: !1987)
!1987 = !{!1988, !2003}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1986, file: !359, line: 61, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !1991)
!1991 = !{!1992, !1998}
!1992 = !DIDerivedType(tag: DW_TAG_member, scope: !1990, file: !233, line: 38, baseType: !1993, size: 32)
!1993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1990, file: !233, line: 38, size: 32, elements: !1994)
!1994 = !{!1995, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1993, file: !233, line: 39, baseType: !1996, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1993, file: !233, line: 40, baseType: !1996, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, scope: !1990, file: !233, line: 42, baseType: !1999, size: 32, offset: 32)
!1999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1990, file: !233, line: 42, size: 32, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1999, file: !233, line: 43, baseType: !1996, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1999, file: !233, line: 44, baseType: !1996, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1986, file: !359, line: 62, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2005)
!2005 = !{!2006}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2004, file: !384, line: 50, baseType: !2007, size: 64)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2008, size: 64, elements: !389)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1983, file: !359, line: 68, baseType: !2010, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2013)
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2012, file: !228, line: 232, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !1990)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1983, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1983, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2018 = !DIDerivedType(tag: DW_TAG_member, scope: !1983, file: !359, line: 90, baseType: !2019, size: 16, offset: 112)
!2019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1983, file: !359, line: 90, size: 16, elements: !2020)
!2020 = !{!2021, !2026}
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !2019, file: !359, line: 91, baseType: !2022, size: 16)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2019, file: !359, line: 91, size: 16, elements: !2023)
!2023 = !{!2024, !2025}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2022, file: !359, line: 96, baseType: !407, size: 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2022, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2019, file: !359, line: 100, baseType: !411, size: 16)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1983, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1983, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1983, file: !359, line: 131, baseType: !2030, size: 192, offset: 192)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2031)
!2031 = !{!2032, !2033, !2039}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2030, file: !228, line: 245, baseType: !1989, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2030, file: !228, line: 246, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2035)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null, !2038}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2030, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1980, file: !359, line: 250, baseType: !2041, size: 288, offset: 384)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2041, file: !428, line: 26, baseType: !162, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2041, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2041, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2041, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2041, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2041, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2041, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2041, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2041, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1980, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1980, file: !359, line: 256, baseType: !2011, size: 64, offset: 704)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1980, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1980, file: !359, line: 300, baseType: !2056, size: 96, offset: 800)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2057)
!2057 = !{!2058, !2059, !2060}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2056, file: !359, line: 153, baseType: !22, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2056, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2056, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1980, file: !359, line: 325, baseType: !2062, size: 32, offset: 896)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2064)
!2064 = !{!2065, !2071, !2072}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2063, file: !224, line: 5074, baseType: !2066, size: 96)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2067)
!2067 = !{!2068, !2069, !2070}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2066, file: !454, line: 57, baseType: !457, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2066, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2066, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2063, file: !224, line: 5075, baseType: !2011, size: 64, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2063, file: !224, line: 5076, baseType: !2073, offset: 160)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1980, file: !359, line: 343, baseType: !2075, size: 64, offset: 928)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2076)
!2076 = !{!2077, !2078}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2075, file: !428, line: 63, baseType: !162, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2075, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1974, file: !228, line: 111, baseType: !1979, size: 32, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1974, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1974, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1974, file: !228, line: 153, baseType: !2083, offset: 168)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2084, line: 33, elements: !250)
!2084 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1970, file: !228, line: 170, baseType: !2086, size: 96, offset: 192)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2086, file: !228, line: 86, baseType: !1979, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2086, file: !228, line: 90, baseType: !2015, size: 64, offset: 32)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1883, file: !1887, line: 43, type: !2092, isLocal: false, isDefinition: true, align: 512)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 8704, elements: !2097)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2094, line: 47, size: 8, elements: !2095)
!2094 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2095 = !{!2096}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2093, file: !2094, line: 48, baseType: !125, size: 8)
!2097 = !{!2098}
!2098 = !DISubrange(count: 1088)
!2099 = !DIGlobalVariableExpression(var: !2100, expr: !DIExpression())
!2100 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1883, file: !1887, line: 44, type: !1980, isLocal: false, isDefinition: true)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1883, file: !1887, line: 48, type: !2103, isLocal: false, isDefinition: true)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 1024, elements: !486)
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1883, file: !1887, line: 217, type: !136, isLocal: false, isDefinition: true)
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1883, file: !1887, line: 50, type: !2108, isLocal: true, isDefinition: true, align: 512)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 3072, elements: !2109)
!2109 = !{!487, !2110}
!2110 = !DISubrange(count: 384)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "levels", scope: !2113, file: !1887, line: 232, type: !2133, isLocal: true, isDefinition: true)
!2113 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1887, file: !1887, line: 230, type: !2114, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !2116)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !1886}
!2116 = !{!2117, !2118, !2128, !2132}
!2117 = !DILocalVariable(name: "level", arg: 1, scope: !2113, file: !1887, line: 230, type: !1886)
!2118 = !DILocalVariable(name: "entry", scope: !2113, file: !1887, line: 244, type: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2122)
!2122 = !{!2123, !2127}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2121, file: !294, line: 60, baseType: !2124, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{!107, !1905}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2121, file: !294, line: 65, baseType: !1905, size: 32, offset: 32)
!2128 = !DILocalVariable(name: "dev", scope: !2129, file: !1887, line: 247, type: !1905)
!2129 = distinct !DILexicalBlock(scope: !2130, file: !1887, line: 246, column: 64)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !1887, line: 246, column: 2)
!2131 = distinct !DILexicalBlock(scope: !2113, file: !1887, line: 246, column: 2)
!2132 = !DILocalVariable(name: "rc", scope: !2129, file: !1887, line: 248, type: !107)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2119, size: 192, elements: !1206)
!2134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 16896, elements: !2135)
!2135 = !{!487, !2136}
!2136 = !DISubrange(count: 2112)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "states_str", scope: !2139, file: !2140, line: 276, type: !2261, isLocal: true, isDefinition: true)
!2139 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2140, file: !2140, line: 271, type: !2141, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !2252)
!2140 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!123, !2143, !256, !252}
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2146)
!2146 = !{!2147, !2205, !2217, !2218, !2219, !2220, !2226, !2239}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2145, file: !359, line: 247, baseType: !2148, size: 384)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2149)
!2149 = !{!2150, !2174, !2181, !2182, !2183, !2192, !2193, !2194}
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2148, file: !359, line: 60, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2148, file: !359, line: 60, size: 64, elements: !2152)
!2152 = !{!2153, !2168}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2151, file: !359, line: 61, baseType: !2154, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2156)
!2156 = !{!2157, !2163}
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !2155, file: !233, line: 38, baseType: !2158, size: 32)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2155, file: !233, line: 38, size: 32, elements: !2159)
!2159 = !{!2160, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2158, file: !233, line: 39, baseType: !2161, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2158, file: !233, line: 40, baseType: !2161, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, scope: !2155, file: !233, line: 42, baseType: !2164, size: 32, offset: 32)
!2164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2155, file: !233, line: 42, size: 32, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2164, file: !233, line: 43, baseType: !2161, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2164, file: !233, line: 44, baseType: !2161, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2151, file: !359, line: 62, baseType: !2169, size: 64)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2170)
!2170 = !{!2171}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2169, file: !384, line: 50, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2173, size: 64, elements: !389)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2148, file: !359, line: 68, baseType: !2175, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2178)
!2178 = !{!2179}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2177, file: !228, line: 232, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2155)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2148, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2148, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2183 = !DIDerivedType(tag: DW_TAG_member, scope: !2148, file: !359, line: 90, baseType: !2184, size: 16, offset: 112)
!2184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2148, file: !359, line: 90, size: 16, elements: !2185)
!2185 = !{!2186, !2191}
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !359, line: 91, baseType: !2187, size: 16)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2184, file: !359, line: 91, size: 16, elements: !2188)
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2187, file: !359, line: 96, baseType: !407, size: 8)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2187, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2184, file: !359, line: 100, baseType: !411, size: 16)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2148, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2148, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2148, file: !359, line: 131, baseType: !2195, size: 192, offset: 192)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2196)
!2196 = !{!2197, !2198, !2204}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2195, file: !228, line: 245, baseType: !2154, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2195, file: !228, line: 246, baseType: !2199, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{null, !2203}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2195, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2145, file: !359, line: 250, baseType: !2206, size: 288, offset: 384)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2206, file: !428, line: 26, baseType: !162, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2206, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2206, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2206, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2206, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2206, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2206, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2206, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2206, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2145, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2145, file: !359, line: 256, baseType: !2176, size: 64, offset: 704)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2145, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2145, file: !359, line: 300, baseType: !2221, size: 96, offset: 800)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2222)
!2222 = !{!2223, !2224, !2225}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2221, file: !359, line: 153, baseType: !22, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2221, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2221, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2145, file: !359, line: 325, baseType: !2227, size: 32, offset: 896)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2229)
!2229 = !{!2230, !2236, !2237}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2228, file: !224, line: 5074, baseType: !2231, size: 96)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2232)
!2232 = !{!2233, !2234, !2235}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2231, file: !454, line: 57, baseType: !457, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2231, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2231, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2228, file: !224, line: 5075, baseType: !2176, size: 64, offset: 96)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2228, file: !224, line: 5076, baseType: !2238, offset: 160)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2145, file: !359, line: 343, baseType: !2240, size: 64, offset: 928)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2241)
!2241 = !{!2242, !2243}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2240, file: !428, line: 63, baseType: !162, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2240, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2246, globals: !2248, splitDebugInlining: false, nameTableKind: None)
!2245 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2246 = !{!102, !123, !103, !133, !107, !2247, !24, !252, !256, !22, !162, !1474}
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2248 = !{!2137, !2249}
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "states_sz", scope: !2139, file: !2140, line: 279, type: !2251, isLocal: true, isDefinition: true)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 256, elements: !1482)
!2252 = !{!2253, !2254, !2255, !2256, !2257, !2258, !2259}
!2253 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2139, file: !2140, line: 271, type: !2143)
!2254 = !DILocalVariable(name: "buf", arg: 2, scope: !2139, file: !2140, line: 271, type: !256)
!2255 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2139, file: !2140, line: 271, type: !252)
!2256 = !DILocalVariable(name: "off", scope: !2139, file: !2140, line: 273, type: !252)
!2257 = !DILocalVariable(name: "bit", scope: !2139, file: !2140, line: 274, type: !133)
!2258 = !DILocalVariable(name: "thread_state", scope: !2139, file: !2140, line: 275, type: !133)
!2259 = !DILocalVariable(name: "index", scope: !2260, file: !2140, line: 293, type: !133)
!2260 = distinct !DILexicalBlock(scope: !2139, file: !2140, line: 293, column: 2)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1482)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2264, file: !2372, line: 56, type: !2361, isLocal: false, isDefinition: true)
!2264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2266, globals: !2369, splitDebugInlining: false, nameTableKind: None)
!2265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2266 = !{!2267, !256, !102, !2367, !182, !103, !706, !107, !162, !1474, !2368}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2269)
!2269 = !{!2270, !2328, !2340, !2341, !2342, !2343, !2349, !2362}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2268, file: !359, line: 247, baseType: !2271, size: 384)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2272)
!2272 = !{!2273, !2297, !2304, !2305, !2306, !2315, !2316, !2317}
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !359, line: 60, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !359, line: 60, size: 64, elements: !2275)
!2275 = !{!2276, !2291}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2274, file: !359, line: 61, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2278)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2279)
!2279 = !{!2280, !2286}
!2280 = !DIDerivedType(tag: DW_TAG_member, scope: !2278, file: !233, line: 38, baseType: !2281, size: 32)
!2281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2278, file: !233, line: 38, size: 32, elements: !2282)
!2282 = !{!2283, !2285}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2281, file: !233, line: 39, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2281, file: !233, line: 40, baseType: !2284, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, scope: !2278, file: !233, line: 42, baseType: !2287, size: 32, offset: 32)
!2287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2278, file: !233, line: 42, size: 32, elements: !2288)
!2288 = !{!2289, !2290}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2287, file: !233, line: 43, baseType: !2284, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2287, file: !233, line: 44, baseType: !2284, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2274, file: !359, line: 62, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2293)
!2293 = !{!2294}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2292, file: !384, line: 50, baseType: !2295, size: 64)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2296, size: 64, elements: !389)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2271, file: !359, line: 68, baseType: !2298, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2301)
!2301 = !{!2302}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2300, file: !228, line: 232, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2278)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2271, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2271, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !359, line: 90, baseType: !2307, size: 16, offset: 112)
!2307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !359, line: 90, size: 16, elements: !2308)
!2308 = !{!2309, !2314}
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !359, line: 91, baseType: !2310, size: 16)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2307, file: !359, line: 91, size: 16, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2310, file: !359, line: 96, baseType: !407, size: 8)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2310, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2307, file: !359, line: 100, baseType: !411, size: 16)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2271, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2271, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2271, file: !359, line: 131, baseType: !2318, size: 192, offset: 192)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2319)
!2319 = !{!2320, !2321, !2327}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2318, file: !228, line: 245, baseType: !2277, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2318, file: !228, line: 246, baseType: !2322, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{null, !2326}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2318, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2268, file: !359, line: 250, baseType: !2329, size: 288, offset: 384)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2329, file: !428, line: 26, baseType: !162, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2329, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2329, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2329, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2329, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2329, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2329, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2329, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2329, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2268, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2268, file: !359, line: 256, baseType: !2299, size: 64, offset: 704)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2268, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2268, file: !359, line: 300, baseType: !2344, size: 96, offset: 800)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2345)
!2345 = !{!2346, !2347, !2348}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2344, file: !359, line: 153, baseType: !22, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2344, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2344, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2268, file: !359, line: 325, baseType: !2350, size: 32, offset: 896)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2352)
!2352 = !{!2353, !2359, !2360}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2351, file: !224, line: 5074, baseType: !2354, size: 96)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2355)
!2355 = !{!2356, !2357, !2358}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2354, file: !454, line: 57, baseType: !457, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2354, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2354, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2351, file: !224, line: 5075, baseType: !2299, size: 64, offset: 96)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2351, file: !224, line: 5076, baseType: !2361, offset: 160)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2268, file: !359, line: 343, baseType: !2363, size: 64, offset: 928)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2364)
!2364 = !{!2365, !2366}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2363, file: !428, line: 63, baseType: !162, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2363, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2369 = !{!2262, !2370, !2373, !2375}
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2264, file: !2372, line: 404, type: !107, isLocal: true, isDefinition: true)
!2372 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2264, file: !2372, line: 405, type: !107, isLocal: true, isDefinition: true)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "pending_current", scope: !2264, file: !2372, line: 425, type: !2267, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2379, file: !2409, line: 15, type: !1474, isLocal: true, isDefinition: true)
!2379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2381, globals: !2406, splitDebugInlining: false, nameTableKind: None)
!2380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2381 = !{!103, !102, !706, !162, !1474, !107, !2382, !256, !105}
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2384)
!2384 = !{!2385, !2400, !2405}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2383, file: !228, line: 245, baseType: !2386, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2388)
!2388 = !{!2389, !2395}
!2389 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !233, line: 38, baseType: !2390, size: 32)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !233, line: 38, size: 32, elements: !2391)
!2391 = !{!2392, !2394}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2390, file: !233, line: 39, baseType: !2393, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2390, file: !233, line: 40, baseType: !2393, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !233, line: 42, baseType: !2396, size: 32, offset: 32)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !233, line: 42, size: 32, elements: !2397)
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2396, file: !233, line: 43, baseType: !2393, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2396, file: !233, line: 44, baseType: !2393, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2383, file: !228, line: 246, baseType: !2401, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{null, !2382}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2383, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2406 = !{!2377, !2407, !2411, !2413}
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2379, file: !2409, line: 19, type: !2410, isLocal: true, isDefinition: true)
!2409 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2411 = !DIGlobalVariableExpression(var: !2412, expr: !DIExpression())
!2412 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2379, file: !2409, line: 25, type: !107, isLocal: true, isDefinition: true)
!2413 = !DIGlobalVariableExpression(var: !2414, expr: !DIExpression())
!2414 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2379, file: !2409, line: 17, type: !2415, isLocal: true, isDefinition: true)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2387)
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2418, file: !2437, line: 55, type: !2438, isLocal: true, isDefinition: true, align: 32)
!2418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2420, globals: !2436, splitDebugInlining: false, nameTableKind: None)
!2419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2420 = !{!102, !103, !107, !2421}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2423)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2424)
!2424 = !{!2425, !2431}
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !233, line: 38, baseType: !2426, size: 32)
!2426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !233, line: 38, size: 32, elements: !2427)
!2427 = !{!2428, !2430}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2426, file: !233, line: 39, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2426, file: !233, line: 40, baseType: !2429, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !233, line: 42, baseType: !2432, size: 32, offset: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !233, line: 42, size: 32, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2432, file: !233, line: 43, baseType: !2429, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2432, file: !233, line: 44, baseType: !2429, size: 32)
!2436 = !{!2416}
!2437 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2440)
!2440 = !{!2441, !2448}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2439, file: !294, line: 60, baseType: !2442, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!107, !2445}
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2447)
!2447 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !294, line: 48, flags: DIFlagFwdDecl)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2439, file: !294, line: 65, baseType: !2445, size: 32, offset: 32)
!2449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2455, retainedTypes: !2463, splitDebugInlining: false, nameTableKind: None)
!2454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2455 = !{!30, !2456}
!2456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2457, line: 54, baseType: !32, size: 32, elements: !2458)
!2457 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2458 = !{!2459, !2460, !2461, !2462}
!2459 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2460 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2461 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2462 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2463 = !{!102, !252, !182, !24, !2464, !22, !2470, !107, !831, !2485}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2457, line: 58, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2457, line: 58, size: 64, elements: !2467)
!2467 = !{!2468}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2466, file: !2457, line: 58, baseType: !2469, size: 64)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1482)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2457, line: 68, size: 128, elements: !2472)
!2472 = !{!2473, !2476, !2477, !2478}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2471, file: !2457, line: 69, baseType: !2474, size: 64)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2475, size: 64, elements: !389)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2457, line: 61, baseType: !162)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2471, file: !2457, line: 70, baseType: !2475, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2471, file: !2457, line: 71, baseType: !162, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2471, file: !2457, line: 77, baseType: !2479, offset: 128)
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2480, elements: !2483)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2457, line: 64, size: 32, elements: !2481)
!2481 = !{!2482}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2480, file: !2457, line: 65, baseType: !2475, size: 32)
!2483 = !{!2484}
!2484 = !DISubrange(count: 0)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2488, retainedTypes: !2508, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2488 = !{!2489, !2497}
!2489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2490, line: 69, baseType: !32, size: 32, elements: !2491)
!2490 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2491 = !{!2492, !2493, !2494, !2495, !2496}
!2492 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2493 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2494 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2495 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2496 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2497 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2490, line: 56, baseType: !32, size: 32, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507}
!2499 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2500 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2501 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2502 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2503 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2504 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2505 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2506 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2507 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2508 = !{!107, !2489, !2497, !2509, !408, !143, !2511, !2512, !134, !412, !123, !252, !102, !22, !32, !2514, !2515, !2516, !2517, !2518, !106, !2519, !2510, !2520, !2521, !2522, !2523}
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2490, line: 31, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2490, line: 32, baseType: !2513)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1475)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2517 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2525, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2525 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2528, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2528 = !{!2529, !30}
!2529 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2530, line: 27, baseType: !32, size: 32, elements: !2531)
!2530 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2531 = !{!2532, !2533, !2534, !2535, !2536}
!2532 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2533 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2534 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2535 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2536 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2539, retainedTypes: !2540, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2539 = !{!566, !2529, !30}
!2540 = !{!732, !2541, !102, !107, !706, !162, !133, !2558}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2543, file: !497, line: 413, baseType: !1640, size: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2543, file: !497, line: 414, baseType: !1642, size: 768, offset: 256)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2543, file: !497, line: 415, baseType: !1640, size: 256, offset: 1024)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2543, file: !497, line: 416, baseType: !1642, size: 768, offset: 1280)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2543, file: !497, line: 417, baseType: !1640, size: 256, offset: 2048)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2543, file: !497, line: 418, baseType: !1642, size: 768, offset: 2304)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2543, file: !497, line: 419, baseType: !1640, size: 256, offset: 3072)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2543, file: !497, line: 420, baseType: !1642, size: 768, offset: 3328)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2543, file: !497, line: 421, baseType: !1640, size: 256, offset: 4096)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2543, file: !497, line: 422, baseType: !1653, size: 1792, offset: 4352)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2543, file: !497, line: 423, baseType: !1657, size: 1920, offset: 6144)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2543, file: !497, line: 424, baseType: !1662, size: 20608, offset: 8064)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2543, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2561)
!2561 = !{!2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2560, file: !497, line: 447, baseType: !501, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2560, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2560, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2560, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2560, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2560, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2560, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2560, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2560, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2560, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2560, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2560, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2560, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2560, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2560, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2560, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2560, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2560, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2560, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2560, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2560, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2587, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2587 = !{!102, !107, !22, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2591)
!2591 = !{!2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2590, file: !497, line: 447, baseType: !501, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2590, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2590, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2590, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2590, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2590, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2590, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2590, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2590, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2590, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2590, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2590, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2590, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2590, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2590, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2590, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2590, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2590, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2590, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2590, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2590, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2614, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2615, splitDebugInlining: false, nameTableKind: None)
!2614 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2615 = !{!2616, !102, !107}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2618)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2619)
!2619 = !{!2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2618, file: !497, line: 447, baseType: !501, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2618, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2618, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2618, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2618, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2618, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2618, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2618, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2618, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2618, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2618, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2618, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2618, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2618, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2618, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2618, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2618, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2618, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2618, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2618, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2618, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2643, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2643 = !{!2644, !162, !102, !107}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 32)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2646, line: 98, size: 256, elements: !2647)
!2646 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2647 = !{!2648, !2653, !2658, !2663, !2668, !2673, !2678, !2683}
!2648 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 99, baseType: !2649, size: 32)
!2649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 99, size: 32, elements: !2650)
!2650 = !{!2651, !2652}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2649, file: !2646, line: 99, baseType: !162, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2649, file: !2646, line: 99, baseType: !162, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 100, baseType: !2654, size: 32, offset: 32)
!2654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 100, size: 32, elements: !2655)
!2655 = !{!2656, !2657}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2654, file: !2646, line: 100, baseType: !162, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2654, file: !2646, line: 100, baseType: !162, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 101, baseType: !2659, size: 32, offset: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 101, size: 32, elements: !2660)
!2660 = !{!2661, !2662}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2659, file: !2646, line: 101, baseType: !162, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2659, file: !2646, line: 101, baseType: !162, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 102, baseType: !2664, size: 32, offset: 96)
!2664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 102, size: 32, elements: !2665)
!2665 = !{!2666, !2667}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2664, file: !2646, line: 102, baseType: !162, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2664, file: !2646, line: 102, baseType: !162, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 103, baseType: !2669, size: 32, offset: 128)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 103, size: 32, elements: !2670)
!2670 = !{!2671, !2672}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2669, file: !2646, line: 103, baseType: !162, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2669, file: !2646, line: 103, baseType: !162, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 104, baseType: !2674, size: 32, offset: 160)
!2674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 104, size: 32, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2674, file: !2646, line: 104, baseType: !162, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2674, file: !2646, line: 104, baseType: !162, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !2646, line: 105, baseType: !2679, size: 32, offset: 192)
!2679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !2646, line: 105, size: 32, elements: !2680)
!2680 = !{!2681, !2682}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2679, file: !2646, line: 105, baseType: !162, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2679, file: !2646, line: 105, baseType: !162, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2645, file: !2646, line: 106, baseType: !162, size: 32, offset: 224)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2528, retainedTypes: !2686, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2686 = !{!2687, !102, !107, !2712, !2485, !162}
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2689)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2689, file: !497, line: 447, baseType: !501, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2689, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2689, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2689, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2689, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2689, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2689, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2689, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2689, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2689, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2689, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2689, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2689, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2689, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2689, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2689, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2689, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2689, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2689, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2689, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2689, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2646, line: 141, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2646, line: 97, size: 256, elements: !2715)
!2715 = !{!2716}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2714, file: !2646, line: 107, baseType: !2717, size: 256)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2646, line: 98, size: 256, elements: !2718)
!2718 = !{!2719, !2724, !2729, !2734, !2739, !2744, !2749, !2754}
!2719 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 99, baseType: !2720, size: 32)
!2720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 99, size: 32, elements: !2721)
!2721 = !{!2722, !2723}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2720, file: !2646, line: 99, baseType: !162, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2720, file: !2646, line: 99, baseType: !162, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 100, baseType: !2725, size: 32, offset: 32)
!2725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 100, size: 32, elements: !2726)
!2726 = !{!2727, !2728}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2725, file: !2646, line: 100, baseType: !162, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2725, file: !2646, line: 100, baseType: !162, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 101, baseType: !2730, size: 32, offset: 64)
!2730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 101, size: 32, elements: !2731)
!2731 = !{!2732, !2733}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2730, file: !2646, line: 101, baseType: !162, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2730, file: !2646, line: 101, baseType: !162, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 102, baseType: !2735, size: 32, offset: 96)
!2735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 102, size: 32, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2735, file: !2646, line: 102, baseType: !162, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2735, file: !2646, line: 102, baseType: !162, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 103, baseType: !2740, size: 32, offset: 128)
!2740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 103, size: 32, elements: !2741)
!2741 = !{!2742, !2743}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2740, file: !2646, line: 103, baseType: !162, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2740, file: !2646, line: 103, baseType: !162, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 104, baseType: !2745, size: 32, offset: 160)
!2745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 104, size: 32, elements: !2746)
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2745, file: !2646, line: 104, baseType: !162, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2745, file: !2646, line: 104, baseType: !162, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2717, file: !2646, line: 105, baseType: !2750, size: 32, offset: 192)
!2750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2717, file: !2646, line: 105, size: 32, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2750, file: !2646, line: 105, baseType: !162, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2750, file: !2646, line: 105, baseType: !162, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2717, file: !2646, line: 106, baseType: !162, size: 32, offset: 224)
!2755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1625, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2756 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2757 = !{!732, !706, !133, !162, !2758, !2775}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2760, file: !497, line: 413, baseType: !1640, size: 256)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2760, file: !497, line: 414, baseType: !1642, size: 768, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2760, file: !497, line: 415, baseType: !1640, size: 256, offset: 1024)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2760, file: !497, line: 416, baseType: !1642, size: 768, offset: 1280)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2760, file: !497, line: 417, baseType: !1640, size: 256, offset: 2048)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2760, file: !497, line: 418, baseType: !1642, size: 768, offset: 2304)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2760, file: !497, line: 419, baseType: !1640, size: 256, offset: 3072)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2760, file: !497, line: 420, baseType: !1642, size: 768, offset: 3328)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2760, file: !497, line: 421, baseType: !1640, size: 256, offset: 4096)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2760, file: !497, line: 422, baseType: !1653, size: 1792, offset: 4352)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2760, file: !497, line: 423, baseType: !1657, size: 1920, offset: 6144)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2760, file: !497, line: 424, baseType: !1662, size: 20608, offset: 8064)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2760, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2777, file: !497, line: 447, baseType: !501, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2777, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2777, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2777, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2777, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2777, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2777, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2777, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2777, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2777, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2777, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2777, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2777, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2777, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2777, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2777, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2777, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2777, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2777, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2777, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2802 = !{!2803, !102, !107}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2805, file: !497, line: 447, baseType: !501, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2805, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2805, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2805, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2805, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2805, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2805, file: !497, line: 453, baseType: !1677, size: 96, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2805, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2805, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2805, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2805, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2805, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2805, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2805, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2805, file: !497, line: 461, baseType: !1688, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2805, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2805, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2805, file: !497, line: 464, baseType: !1692, size: 128, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2805, file: !497, line: 465, baseType: !1694, size: 160, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2805, file: !497, line: 466, baseType: !1696, size: 160, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2805, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2830 = !{!125, !256, !252, !144, !2831, !134, !102}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2835, splitDebugInlining: false, nameTableKind: None)
!2834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2835 = !{!2836}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 369, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 335, size: 1152, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2838, file: !279, line: 337, baseType: !283, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2838, file: !279, line: 338, baseType: !283, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2838, file: !279, line: 339, baseType: !283, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2838, file: !279, line: 340, baseType: !283, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2838, file: !279, line: 341, baseType: !283, size: 32, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2838, file: !279, line: 342, baseType: !283, size: 32, offset: 160)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2838, file: !279, line: 343, baseType: !283, size: 32, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2838, file: !279, line: 344, baseType: !162, size: 32, offset: 224)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2838, file: !279, line: 345, baseType: !283, size: 32, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2838, file: !279, line: 346, baseType: !283, size: 32, offset: 288)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2838, file: !279, line: 347, baseType: !802, size: 64, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2838, file: !279, line: 348, baseType: !283, size: 32, offset: 384)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2838, file: !279, line: 349, baseType: !283, size: 32, offset: 416)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2838, file: !279, line: 350, baseType: !283, size: 32, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2838, file: !279, line: 351, baseType: !162, size: 32, offset: 480)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2838, file: !279, line: 352, baseType: !283, size: 32, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2838, file: !279, line: 353, baseType: !283, size: 32, offset: 544)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2838, file: !279, line: 354, baseType: !802, size: 64, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2838, file: !279, line: 355, baseType: !283, size: 32, offset: 640)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2838, file: !279, line: 356, baseType: !283, size: 32, offset: 672)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2838, file: !279, line: 357, baseType: !283, size: 32, offset: 704)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2838, file: !279, line: 358, baseType: !162, size: 32, offset: 736)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2838, file: !279, line: 359, baseType: !283, size: 32, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2838, file: !279, line: 360, baseType: !283, size: 32, offset: 800)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2838, file: !279, line: 361, baseType: !802, size: 64, offset: 832)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2838, file: !279, line: 362, baseType: !283, size: 32, offset: 896)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2838, file: !279, line: 363, baseType: !283, size: 32, offset: 928)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2838, file: !279, line: 364, baseType: !802, size: 64, offset: 960)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2838, file: !279, line: 365, baseType: !283, size: 32, offset: 1024)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2838, file: !279, line: 366, baseType: !283, size: 32, offset: 1056)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2838, file: !279, line: 367, baseType: !823, size: 32, offset: 1088)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2838, file: !279, line: 368, baseType: !283, size: 32, offset: 1120)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2876, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2876 = !{!2877, !2884, !2888}
!2877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2878, line: 38, baseType: !32, size: 32, elements: !2879)
!2878 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2879 = !{!2880, !2881, !2882, !2883}
!2880 = !DIEnumerator(name: "HAL_OK", value: 0)
!2881 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2882 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2883 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2884 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !775, line: 184, baseType: !32, size: 32, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIEnumerator(name: "RESET", value: 0)
!2887 = !DIEnumerator(name: "SET", value: 1)
!2888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !775, line: 190, baseType: !32, size: 32, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIEnumerator(name: "DISABLE", value: 0)
!2891 = !DIEnumerator(name: "ENABLE", value: 1)
!2892 = !{!102, !2893, !133, !162, !1476, !2929, !2935, !2946, !411, !2947, !1474}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 369, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 335, size: 1152, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2895, file: !279, line: 337, baseType: !283, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2895, file: !279, line: 338, baseType: !283, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2895, file: !279, line: 339, baseType: !283, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2895, file: !279, line: 340, baseType: !283, size: 32, offset: 96)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2895, file: !279, line: 341, baseType: !283, size: 32, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2895, file: !279, line: 342, baseType: !283, size: 32, offset: 160)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2895, file: !279, line: 343, baseType: !283, size: 32, offset: 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2895, file: !279, line: 344, baseType: !162, size: 32, offset: 224)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2895, file: !279, line: 345, baseType: !283, size: 32, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2895, file: !279, line: 346, baseType: !283, size: 32, offset: 288)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2895, file: !279, line: 347, baseType: !802, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2895, file: !279, line: 348, baseType: !283, size: 32, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2895, file: !279, line: 349, baseType: !283, size: 32, offset: 416)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2895, file: !279, line: 350, baseType: !283, size: 32, offset: 448)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2895, file: !279, line: 351, baseType: !162, size: 32, offset: 480)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2895, file: !279, line: 352, baseType: !283, size: 32, offset: 512)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2895, file: !279, line: 353, baseType: !283, size: 32, offset: 544)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2895, file: !279, line: 354, baseType: !802, size: 64, offset: 576)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2895, file: !279, line: 355, baseType: !283, size: 32, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2895, file: !279, line: 356, baseType: !283, size: 32, offset: 672)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2895, file: !279, line: 357, baseType: !283, size: 32, offset: 704)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2895, file: !279, line: 358, baseType: !162, size: 32, offset: 736)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2895, file: !279, line: 359, baseType: !283, size: 32, offset: 768)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2895, file: !279, line: 360, baseType: !283, size: 32, offset: 800)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2895, file: !279, line: 361, baseType: !802, size: 64, offset: 832)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2895, file: !279, line: 362, baseType: !283, size: 32, offset: 896)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2895, file: !279, line: 363, baseType: !283, size: 32, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2895, file: !279, line: 364, baseType: !802, size: 64, offset: 960)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2895, file: !279, line: 365, baseType: !283, size: 32, offset: 1024)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2895, file: !279, line: 366, baseType: !283, size: 32, offset: 1056)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2895, file: !279, line: 367, baseType: !823, size: 32, offset: 1088)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2895, file: !279, line: 368, baseType: !283, size: 32, offset: 1120)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 329, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 325, size: 64, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2931, file: !279, line: 327, baseType: !283, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2931, file: !279, line: 328, baseType: !283, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 258, baseType: !2937)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 249, size: 224, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2937, file: !279, line: 251, baseType: !283, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2937, file: !279, line: 252, baseType: !283, size: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2937, file: !279, line: 253, baseType: !283, size: 32, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2937, file: !279, line: 254, baseType: !283, size: 32, offset: 96)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2937, file: !279, line: 255, baseType: !283, size: 32, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2937, file: !279, line: 256, baseType: !283, size: 32, offset: 160)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2937, file: !279, line: 257, baseType: !283, size: 32, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 275, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 264, size: 320, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2949, file: !279, line: 266, baseType: !283, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2949, file: !279, line: 267, baseType: !283, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2949, file: !279, line: 268, baseType: !283, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2949, file: !279, line: 269, baseType: !283, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2949, file: !279, line: 270, baseType: !283, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2949, file: !279, line: 271, baseType: !283, size: 32, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2949, file: !279, line: 272, baseType: !283, size: 32, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2949, file: !279, line: 273, baseType: !283, size: 32, offset: 224)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2949, file: !279, line: 274, baseType: !1118, size: 64, offset: 256)
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2962, retainedTypes: !2963, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!2962 = !{!774}
!2963 = !{!2964, !162, !2972, !2978, !2989}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2966, file: !497, line: 766, baseType: !283, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2966, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2966, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2966, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 329, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 325, size: 64, elements: !2975)
!2975 = !{!2976, !2977}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2974, file: !279, line: 327, baseType: !283, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2974, file: !279, line: 328, baseType: !283, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 258, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 249, size: 224, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2980, file: !279, line: 251, baseType: !283, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2980, file: !279, line: 252, baseType: !283, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2980, file: !279, line: 253, baseType: !283, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2980, file: !279, line: 254, baseType: !283, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !279, line: 255, baseType: !283, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2980, file: !279, line: 256, baseType: !283, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2980, file: !279, line: 257, baseType: !283, size: 32, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 369, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 335, size: 1152, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2991, file: !279, line: 337, baseType: !283, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2991, file: !279, line: 338, baseType: !283, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2991, file: !279, line: 339, baseType: !283, size: 32, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2991, file: !279, line: 340, baseType: !283, size: 32, offset: 96)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2991, file: !279, line: 341, baseType: !283, size: 32, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2991, file: !279, line: 342, baseType: !283, size: 32, offset: 160)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2991, file: !279, line: 343, baseType: !283, size: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2991, file: !279, line: 344, baseType: !162, size: 32, offset: 224)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2991, file: !279, line: 345, baseType: !283, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2991, file: !279, line: 346, baseType: !283, size: 32, offset: 288)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2991, file: !279, line: 347, baseType: !802, size: 64, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2991, file: !279, line: 348, baseType: !283, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2991, file: !279, line: 349, baseType: !283, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2991, file: !279, line: 350, baseType: !283, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2991, file: !279, line: 351, baseType: !162, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2991, file: !279, line: 352, baseType: !283, size: 32, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2991, file: !279, line: 353, baseType: !283, size: 32, offset: 544)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2991, file: !279, line: 354, baseType: !802, size: 64, offset: 576)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2991, file: !279, line: 355, baseType: !283, size: 32, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2991, file: !279, line: 356, baseType: !283, size: 32, offset: 672)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2991, file: !279, line: 357, baseType: !283, size: 32, offset: 704)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2991, file: !279, line: 358, baseType: !162, size: 32, offset: 736)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2991, file: !279, line: 359, baseType: !283, size: 32, offset: 768)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2991, file: !279, line: 360, baseType: !283, size: 32, offset: 800)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2991, file: !279, line: 361, baseType: !802, size: 64, offset: 832)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2991, file: !279, line: 362, baseType: !283, size: 32, offset: 896)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2991, file: !279, line: 363, baseType: !283, size: 32, offset: 928)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2991, file: !279, line: 364, baseType: !802, size: 64, offset: 960)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2991, file: !279, line: 365, baseType: !283, size: 32, offset: 1024)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2991, file: !279, line: 366, baseType: !283, size: 32, offset: 1056)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2991, file: !279, line: 367, baseType: !823, size: 32, offset: 1088)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2991, file: !279, line: 368, baseType: !283, size: 32, offset: 1120)
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3027, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3027 = !{!102, !252}
!3028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3030, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3030 = !{!3031, !3038, !30}
!3031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3032, line: 14, baseType: !32, size: 32, elements: !3033)
!3032 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3033 = !{!3034, !3035, !3036, !3037}
!3034 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3035 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3036 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3037 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3032, line: 42, baseType: !32, size: 32, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045}
!3040 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3041 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3042 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3043 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3044 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3045 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3050, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3050 = !{!102, !107, !3051, !3066}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3054)
!3054 = !{!3055, !3061}
!3055 = !DIDerivedType(tag: DW_TAG_member, scope: !3053, file: !233, line: 38, baseType: !3056, size: 32)
!3056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3053, file: !233, line: 38, size: 32, elements: !3057)
!3057 = !{!3058, !3060}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3056, file: !233, line: 39, baseType: !3059, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3056, file: !233, line: 40, baseType: !3059, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !3053, file: !233, line: 42, baseType: !3062, size: 32, offset: 32)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3053, file: !233, line: 42, size: 32, elements: !3063)
!3063 = !{!3064, !3065}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3062, file: !233, line: 43, baseType: !3059, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3062, file: !233, line: 44, baseType: !3059, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 32)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3068)
!3068 = !{!3069, !3113, !3125, !3126, !3127, !3128, !3134, !3147}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3067, file: !359, line: 247, baseType: !3070, size: 384)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3071)
!3071 = !{!3072, !3082, !3089, !3090, !3091, !3100, !3101, !3102}
!3072 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !359, line: 60, baseType: !3073, size: 64)
!3073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !359, line: 60, size: 64, elements: !3074)
!3074 = !{!3075, !3076}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3073, file: !359, line: 61, baseType: !3052, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3073, file: !359, line: 62, baseType: !3077, size: 64)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3078)
!3078 = !{!3079}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3077, file: !384, line: 50, baseType: !3080, size: 64)
!3080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3081, size: 64, elements: !389)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3070, file: !359, line: 68, baseType: !3083, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3086)
!3086 = !{!3087}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3085, file: !228, line: 232, baseType: !3088, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3053)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3070, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3070, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !359, line: 90, baseType: !3092, size: 16, offset: 112)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !359, line: 90, size: 16, elements: !3093)
!3093 = !{!3094, !3099}
!3094 = !DIDerivedType(tag: DW_TAG_member, scope: !3092, file: !359, line: 91, baseType: !3095, size: 16)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3092, file: !359, line: 91, size: 16, elements: !3096)
!3096 = !{!3097, !3098}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3095, file: !359, line: 96, baseType: !407, size: 8)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3095, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3092, file: !359, line: 100, baseType: !411, size: 16)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3070, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3070, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3070, file: !359, line: 131, baseType: !3103, size: 192, offset: 192)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3104)
!3104 = !{!3105, !3106, !3112}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3103, file: !228, line: 245, baseType: !3052, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3103, file: !228, line: 246, baseType: !3107, size: 32, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3108)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{null, !3111}
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3103, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3067, file: !359, line: 250, baseType: !3114, size: 288, offset: 384)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3114, file: !428, line: 26, baseType: !162, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3114, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3114, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3114, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3114, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3114, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3114, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3114, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3114, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3067, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3067, file: !359, line: 256, baseType: !3084, size: 64, offset: 704)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3067, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3067, file: !359, line: 300, baseType: !3129, size: 96, offset: 800)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3130)
!3130 = !{!3131, !3132, !3133}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3129, file: !359, line: 153, baseType: !22, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3129, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3129, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3067, file: !359, line: 325, baseType: !3135, size: 32, offset: 896)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 32)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3137)
!3137 = !{!3138, !3144, !3145}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3136, file: !224, line: 5074, baseType: !3139, size: 96)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3140)
!3140 = !{!3141, !3142, !3143}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3139, file: !454, line: 57, baseType: !457, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3139, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3139, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3136, file: !224, line: 5075, baseType: !3084, size: 64, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3136, file: !224, line: 5076, baseType: !3146, offset: 160)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3067, file: !359, line: 343, baseType: !3148, size: 64, offset: 928)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3149)
!3149 = !{!3150, !3151}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3148, file: !428, line: 63, baseType: !162, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3148, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3154, splitDebugInlining: false, nameTableKind: None)
!3153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3154 = !{!22, !102, !107}
!3155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3156, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3156 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3157 = !{!"Ubuntu clang version 14.0.6"}
!3158 = !{i32 7, !"Dwarf Version", i32 4}
!3159 = !{i32 2, !"Debug Info Version", i32 3}
!3160 = !{i32 1, !"wchar_size", i32 4}
!3161 = !{i32 1, !"min_enum_size", i32 4}
!3162 = !{i32 1, !"branch-target-enforcement", i32 0}
!3163 = !{i32 1, !"sign-return-address", i32 0}
!3164 = !{i32 1, !"sign-return-address-all", i32 0}
!3165 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3166 = !{i32 7, !"frame-pointer", i32 2}
!3167 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3168, file: !3168, line: 26, type: !3169, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !250)
!3168 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null}
!3171 = !DILocation(line: 28, column: 1, scope: !3167)
!3172 = !{i64 2154438694, i64 2154438714, i64 2154438777}
!3173 = !DILocation(line: 29, column: 1, scope: !3167)
!3174 = !{i64 2154439109, i64 2154439129, i64 2154439192}
!3175 = !DILocation(line: 30, column: 1, scope: !3167)
!3176 = !{i64 2154439528, i64 2154439548, i64 2154439611}
!3177 = !DILocation(line: 31, column: 1, scope: !3167)
!3178 = !{i64 2154439947, i64 2154439967, i64 2154440030}
!3179 = !DILocation(line: 33, column: 1, scope: !3167)
!3180 = !{i64 2154440239, i64 2154440259, i64 2154440322}
!3181 = !DILocation(line: 35, column: 1, scope: !3167)
!3182 = !{i64 2154440564, i64 2154440584, i64 2154440647}
!3183 = !DILocation(line: 50, column: 1, scope: !3167)
!3184 = !{i64 2154440991, i64 2154441011, i64 2154441074}
!3185 = !DILocation(line: 54, column: 1, scope: !3167)
!3186 = !{i64 2154441430, i64 2154441450, i64 2154441513}
!3187 = !DILocation(line: 61, column: 1, scope: !3167)
!3188 = !{i64 2154441747, i64 2154441767, i64 2154441830}
!3189 = !DILocation(line: 63, column: 1, scope: !3167)
!3190 = !{i64 2154442127, i64 2154442147, i64 2154442210}
!3191 = !DILocation(line: 64, column: 1, scope: !3167)
!3192 = !{i64 2154442649, i64 2154442669, i64 2154442732}
!3193 = !DILocation(line: 65, column: 1, scope: !3167)
!3194 = !{i64 2154443147, i64 2154443167, i64 2154443230}
!3195 = !DILocation(line: 66, column: 1, scope: !3167)
!3196 = !{i64 2154443629, i64 2154443649, i64 2154443712}
!3197 = !DILocation(line: 67, column: 1, scope: !3167)
!3198 = !{i64 2154448197, i64 2154448217, i64 2154448280}
!3199 = !DILocation(line: 68, column: 1, scope: !3167)
!3200 = !{i64 2154448685, i64 2154448705, i64 2154448768}
!3201 = !DILocation(line: 70, column: 1, scope: !3167)
!3202 = !{i64 2154449153, i64 2154449173, i64 2154449236}
!3203 = !DILocation(line: 71, column: 1, scope: !3167)
!3204 = !{i64 2154449595, i64 2154449615, i64 2154449678}
!3205 = !DILocation(line: 72, column: 1, scope: !3167)
!3206 = !{i64 2154450053, i64 2154450073, i64 2154450136}
!3207 = !DILocation(line: 79, column: 1, scope: !3167)
!3208 = !{i64 2154450507, i64 2154450527, i64 2154450590}
!3209 = !DILocation(line: 80, column: 1, scope: !3167)
!3210 = !{i64 2154451018, i64 2154451038, i64 2154451101}
!3211 = !DILocation(line: 82, column: 1, scope: !3167)
!3212 = !{i64 2154451509, i64 2154451529, i64 2154451592}
!3213 = !DILocation(line: 97, column: 1, scope: !3167)
!3214 = !{i64 2154451846, i64 2154451866, i64 2154451929}
!3215 = !DILocation(line: 99, column: 1, scope: !3167)
!3216 = !{i64 2154452064, i64 2154452084, i64 2154452147}
!3217 = !DILocation(line: 102, column: 1, scope: !3167)
!3218 = !{i64 2154452321, i64 2154452341, i64 2154452404}
!3219 = !DILocation(line: 105, column: 1, scope: !3167)
!3220 = !{i64 2154452561, i64 2154452581, i64 2154452644}
!3221 = !DILocation(line: 115, column: 1, scope: !3167)
!3222 = !{i64 2154452900, i64 2154452920, i64 2154452983}
!3223 = !DILocation(line: 118, column: 1, scope: !3167)
!3224 = !{i64 2154453244, i64 2154453264, i64 2154453327}
!3225 = !DILocation(line: 32, column: 1, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3167, file: !3227, discriminator: 0)
!3227 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3228 = !{i64 2154453600, i64 2154453620, i64 2154453683}
!3229 = !DILocation(line: 33, column: 1, scope: !3226)
!3230 = !{i64 2154454112, i64 2154454132, i64 2154454195}
!3231 = !DILocation(line: 53, column: 1, scope: !3226)
!3232 = !{i64 2154454620, i64 2154454640, i64 2154454703}
!3233 = !DILocation(line: 54, column: 1, scope: !3226)
!3234 = !{i64 2154455038, i64 2154455058, i64 2154455121}
!3235 = !DILocation(line: 55, column: 1, scope: !3226)
!3236 = !{i64 2154455456, i64 2154455476, i64 2154455539}
!3237 = !DILocation(line: 56, column: 1, scope: !3226)
!3238 = !{i64 2154455874, i64 2154455894, i64 2154455957}
!3239 = !DILocation(line: 57, column: 1, scope: !3226)
!3240 = !{i64 2154456292, i64 2154456312, i64 2154456375}
!3241 = !DILocation(line: 58, column: 1, scope: !3226)
!3242 = !{i64 2154456710, i64 2154456730, i64 2154456793}
!3243 = !DILocation(line: 59, column: 1, scope: !3226)
!3244 = !{i64 2154457128, i64 2154457148, i64 2154457211}
!3245 = !DILocation(line: 60, column: 1, scope: !3226)
!3246 = !{i64 2154457552, i64 2154457572, i64 2154457635}
!3247 = !DILocation(line: 61, column: 1, scope: !3226)
!3248 = !{i64 2154461930, i64 2154461950, i64 2154462013}
!3249 = !DILocation(line: 70, column: 1, scope: !3226)
!3250 = !{i64 2154462159, i64 2154462179, i64 2154462242}
!3251 = !DILocation(line: 72, column: 1, scope: !3226)
!3252 = !{i64 2154462491, i64 2154462511, i64 2154462574}
!3253 = !DILocation(line: 73, column: 1, scope: !3226)
!3254 = !{i64 2154462941, i64 2154462961, i64 2154463024}
!3255 = !DILocation(line: 74, column: 1, scope: !3226)
!3256 = !{i64 2154463391, i64 2154463411, i64 2154463474}
!3257 = !DILocation(line: 75, column: 1, scope: !3226)
!3258 = !{i64 2154463841, i64 2154463861, i64 2154463924}
!3259 = !DILocation(line: 76, column: 1, scope: !3226)
!3260 = !{i64 2154464291, i64 2154464311, i64 2154464374}
!3261 = !DILocation(line: 77, column: 1, scope: !3226)
!3262 = !{i64 2154464741, i64 2154464761, i64 2154464824}
!3263 = !DILocation(line: 78, column: 1, scope: !3226)
!3264 = !{i64 2154465191, i64 2154465211, i64 2154465274}
!3265 = !DILocation(line: 79, column: 1, scope: !3226)
!3266 = !{i64 2154465641, i64 2154465661, i64 2154465724}
!3267 = !DILocation(line: 80, column: 1, scope: !3226)
!3268 = !{i64 2154466094, i64 2154466114, i64 2154466177}
!3269 = !DILocation(line: 84, column: 1, scope: !3226)
!3270 = !{i64 2154466426, i64 2154466446, i64 2154466509}
!3271 = !DILocation(line: 91, column: 1, scope: !3226)
!3272 = !{i64 2154466823, i64 2154466843, i64 2154466906}
!3273 = !DILocation(line: 93, column: 1, scope: !3226)
!3274 = !{i64 2154467190, i64 2154467210, i64 2154467273}
!3275 = !DILocation(line: 106, column: 1, scope: !3226)
!3276 = !{i64 2154467460, i64 2154467480, i64 2154467543}
!3277 = !DILocation(line: 11, column: 1, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !3167, file: !3279, discriminator: 0)
!3279 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3280 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3281)
!3281 = !{!3282, !3283, !3284}
!3282 = !DILocalVariable(name: "dev", arg: 1, scope: !3280, file: !209, line: 31, type: !117)
!3283 = !DILocalVariable(name: "user_data", arg: 2, scope: !3280, file: !209, line: 31, type: !102)
!3284 = !DILocalVariable(name: "c", scope: !3280, file: !209, line: 33, type: !133)
!3285 = !DILocation(line: 0, scope: !3280)
!3286 = !DILocation(line: 33, column: 2, scope: !3280)
!3287 = !DILocation(line: 35, column: 7, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3280, file: !209, line: 35, column: 6)
!3289 = !DILocation(line: 35, column: 6, scope: !3280)
!3290 = !DILocation(line: 39, column: 9, scope: !3280)
!3291 = !DILocation(line: 39, column: 2, scope: !3280)
!3292 = !DILocation(line: 41, column: 3, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3280, file: !209, line: 39, column: 38)
!3294 = !DILocation(line: 43, column: 8, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3293, file: !209, line: 43, column: 7)
!3296 = !DILocation(line: 43, column: 10, scope: !3295)
!3297 = !DILocation(line: 43, column: 18, scope: !3295)
!3298 = !DILocation(line: 45, column: 4, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !209, line: 43, column: 51)
!3300 = !DILocation(line: 45, column: 23, scope: !3299)
!3301 = !DILocation(line: 48, column: 4, scope: !3299)
!3302 = !DILocation(line: 51, column: 15, scope: !3299)
!3303 = !DILocation(line: 52, column: 3, scope: !3299)
!3304 = !DILocation(line: 52, column: 25, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3295, file: !209, line: 52, column: 14)
!3306 = !DILocation(line: 52, column: 14, scope: !3295)
!3307 = !DILocation(line: 53, column: 21, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !209, line: 52, column: 49)
!3309 = !DILocation(line: 53, column: 4, scope: !3308)
!3310 = !DILocation(line: 53, column: 25, scope: !3308)
!3311 = !DILocation(line: 54, column: 3, scope: !3308)
!3312 = distinct !{!3312, !3291, !3313}
!3313 = !DILocation(line: 56, column: 2, scope: !3280)
!3314 = !DILocation(line: 57, column: 1, scope: !3280)
!3315 = distinct !DISubprogram(name: "uart_irq_update", scope: !3316, file: !3316, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3317)
!3316 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3317 = !{!3318}
!3318 = !DILocalVariable(name: "dev", arg: 1, scope: !3315, file: !3316, line: 360, type: !117)
!3319 = !DILocation(line: 0, scope: !3315)
!3320 = !DILocation(line: 368, column: 2, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3315, file: !3316, line: 368, column: 2)
!3322 = !{i64 2154421000}
!3323 = !DILocation(line: 369, column: 9, scope: !3315)
!3324 = !DILocation(line: 369, column: 2, scope: !3315)
!3325 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3326)
!3326 = !{!3327, !3328}
!3327 = !DILocalVariable(name: "dev", arg: 1, scope: !3325, file: !111, line: 1024, type: !117)
!3328 = !DILocalVariable(name: "api", scope: !3325, file: !111, line: 1027, type: !108)
!3329 = !DILocation(line: 0, scope: !3325)
!3330 = !DILocation(line: 1028, column: 40, scope: !3325)
!3331 = !DILocation(line: 1030, column: 11, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3325, file: !111, line: 1030, column: 6)
!3333 = !DILocation(line: 1030, column: 24, scope: !3332)
!3334 = !DILocation(line: 1030, column: 6, scope: !3325)
!3335 = !DILocation(line: 1033, column: 9, scope: !3325)
!3336 = !DILocation(line: 1033, column: 2, scope: !3325)
!3337 = !DILocation(line: 1038, column: 1, scope: !3325)
!3338 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3339)
!3339 = !{!3340, !3341, !3342, !3343}
!3340 = !DILocalVariable(name: "dev", arg: 1, scope: !3338, file: !111, line: 785, type: !117)
!3341 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3338, file: !111, line: 785, type: !182)
!3342 = !DILocalVariable(name: "size", arg: 3, scope: !3338, file: !111, line: 786, type: !183)
!3343 = !DILocalVariable(name: "api", scope: !3338, file: !111, line: 789, type: !108)
!3344 = !DILocation(line: 0, scope: !3338)
!3345 = !DILocation(line: 790, column: 40, scope: !3338)
!3346 = !DILocation(line: 792, column: 11, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3338, file: !111, line: 792, column: 6)
!3348 = !DILocation(line: 792, column: 21, scope: !3347)
!3349 = !DILocation(line: 792, column: 6, scope: !3338)
!3350 = !DILocation(line: 796, column: 9, scope: !3338)
!3351 = !DILocation(line: 796, column: 2, scope: !3338)
!3352 = !DILocation(line: 803, column: 1, scope: !3338)
!3353 = distinct !DISubprogram(name: "k_msgq_put", scope: !3354, file: !3354, line: 1129, type: !3355, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3362)
!3354 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!107, !3357, !13, !3358}
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3359)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3360)
!3360 = !{!3361}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3359, file: !104, line: 66, baseType: !103, size: 64)
!3362 = !{!3363, !3364, !3365}
!3363 = !DILocalVariable(name: "msgq", arg: 1, scope: !3353, file: !3354, line: 1129, type: !3357)
!3364 = !DILocalVariable(name: "data", arg: 2, scope: !3353, file: !3354, line: 1129, type: !13)
!3365 = !DILocalVariable(name: "timeout", arg: 3, scope: !3353, file: !3354, line: 1129, type: !3358)
!3366 = !DILocation(line: 0, scope: !3353)
!3367 = !DILocation(line: 1139, column: 2, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3353, file: !3354, line: 1139, column: 2)
!3369 = !{i64 2154151569}
!3370 = !DILocation(line: 1140, column: 9, scope: !3353)
!3371 = !DILocation(line: 1140, column: 2, scope: !3353)
!3372 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3373)
!3373 = !{!3374, !3375}
!3374 = !DILocalVariable(name: "dev", arg: 1, scope: !3372, file: !111, line: 1136, type: !117)
!3375 = !DILocalVariable(name: "api", scope: !3372, file: !111, line: 1139, type: !108)
!3376 = !DILocation(line: 0, scope: !3372)
!3377 = !DILocation(line: 1140, column: 40, scope: !3372)
!3378 = !DILocation(line: 1142, column: 11, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3372, file: !111, line: 1142, column: 6)
!3380 = !DILocation(line: 1142, column: 22, scope: !3379)
!3381 = !DILocation(line: 1142, column: 6, scope: !3372)
!3382 = !DILocation(line: 1145, column: 9, scope: !3372)
!3383 = !DILocation(line: 1145, column: 2, scope: !3372)
!3384 = !DILocation(line: 1150, column: 1, scope: !3372)
!3385 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3386, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{null, !256}
!3388 = !{!3389, !3390, !3391}
!3389 = !DILocalVariable(name: "buf", arg: 1, scope: !3385, file: !209, line: 62, type: !256)
!3390 = !DILocalVariable(name: "msg_len", scope: !3385, file: !209, line: 64, type: !107)
!3391 = !DILocalVariable(name: "i", scope: !3392, file: !209, line: 66, type: !107)
!3392 = distinct !DILexicalBlock(scope: !3385, file: !209, line: 66, column: 2)
!3393 = !DILocation(line: 0, scope: !3385)
!3394 = !DILocation(line: 64, column: 16, scope: !3385)
!3395 = !DILocation(line: 0, scope: !3392)
!3396 = !DILocation(line: 66, column: 20, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3392, file: !209, line: 66, column: 2)
!3398 = !DILocation(line: 66, column: 2, scope: !3392)
!3399 = !DILocation(line: 69, column: 1, scope: !3385)
!3400 = !DILocation(line: 67, column: 27, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3397, file: !209, line: 66, column: 36)
!3402 = !DILocation(line: 67, column: 3, scope: !3401)
!3403 = !DILocation(line: 66, column: 32, scope: !3397)
!3404 = distinct !{!3404, !3398, !3405}
!3405 = !DILocation(line: 68, column: 2, scope: !3392)
!3406 = distinct !DISubprogram(name: "uart_poll_out", scope: !3316, file: !3316, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3407)
!3407 = !{!3408, !3409}
!3408 = !DILocalVariable(name: "dev", arg: 1, scope: !3406, file: !3316, line: 95, type: !117)
!3409 = !DILocalVariable(name: "out_char", arg: 2, scope: !3406, file: !3316, line: 95, type: !134)
!3410 = !DILocation(line: 0, scope: !3406)
!3411 = !DILocation(line: 105, column: 2, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3406, file: !3316, line: 105, column: 2)
!3413 = !{i64 2154420252}
!3414 = !DILocation(line: 106, column: 2, scope: !3406)
!3415 = !DILocation(line: 107, column: 1, scope: !3406)
!3416 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3417)
!3417 = !{!3418, !3419, !3420}
!3418 = !DILocalVariable(name: "dev", arg: 1, scope: !3416, file: !111, line: 574, type: !117)
!3419 = !DILocalVariable(name: "out_char", arg: 2, scope: !3416, file: !111, line: 575, type: !134)
!3420 = !DILocalVariable(name: "api", scope: !3416, file: !111, line: 577, type: !108)
!3421 = !DILocation(line: 0, scope: !3416)
!3422 = !DILocation(line: 578, column: 40, scope: !3416)
!3423 = !DILocation(line: 580, column: 7, scope: !3416)
!3424 = !DILocation(line: 580, column: 2, scope: !3416)
!3425 = !DILocation(line: 581, column: 1, scope: !3416)
!3426 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3169, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3427)
!3427 = !{!3428}
!3428 = !DILocalVariable(name: "tx_buf", scope: !3426, file: !209, line: 73, type: !218)
!3429 = !DILocation(line: 73, column: 2, scope: !3426)
!3430 = !DILocation(line: 73, column: 7, scope: !3426)
!3431 = !DILocation(line: 75, column: 7, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3426, file: !209, line: 75, column: 6)
!3433 = !DILocation(line: 75, column: 6, scope: !3426)
!3434 = !DILocation(line: 76, column: 3, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3432, file: !209, line: 75, column: 34)
!3436 = !DILocation(line: 77, column: 3, scope: !3435)
!3437 = !DILocation(line: 81, column: 2, scope: !3426)
!3438 = !DILocation(line: 82, column: 2, scope: !3426)
!3439 = !DILocation(line: 84, column: 2, scope: !3426)
!3440 = !DILocation(line: 85, column: 2, scope: !3426)
!3441 = !DILocation(line: 88, column: 9, scope: !3426)
!3442 = !DILocation(line: 88, column: 52, scope: !3426)
!3443 = !DILocation(line: 88, column: 2, scope: !3426)
!3444 = !DILocation(line: 89, column: 3, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3426, file: !209, line: 88, column: 58)
!3446 = !DILocation(line: 90, column: 3, scope: !3445)
!3447 = !DILocation(line: 91, column: 3, scope: !3445)
!3448 = distinct !{!3448, !3443, !3449}
!3449 = !DILocation(line: 92, column: 2, scope: !3426)
!3450 = !DILocation(line: 93, column: 1, scope: !3426)
!3451 = distinct !DISubprogram(name: "device_is_ready", scope: !3452, file: !3452, line: 47, type: !3453, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3455)
!3452 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!136, !117}
!3455 = !{!3456}
!3456 = !DILocalVariable(name: "dev", arg: 1, scope: !3451, file: !3452, line: 47, type: !117)
!3457 = !DILocation(line: 0, scope: !3451)
!3458 = !DILocation(line: 55, column: 2, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3451, file: !3452, line: 55, column: 2)
!3460 = !{i64 2154337007}
!3461 = !DILocation(line: 56, column: 9, scope: !3451)
!3462 = !DILocation(line: 56, column: 2, scope: !3451)
!3463 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3464)
!3464 = !{!3465, !3466, !3467, !3468}
!3465 = !DILocalVariable(name: "dev", arg: 1, scope: !3463, file: !111, line: 1163, type: !117)
!3466 = !DILocalVariable(name: "cb", arg: 2, scope: !3463, file: !111, line: 1164, type: !202)
!3467 = !DILocalVariable(name: "user_data", arg: 3, scope: !3463, file: !111, line: 1165, type: !102)
!3468 = !DILocalVariable(name: "api", scope: !3463, file: !111, line: 1168, type: !108)
!3469 = !DILocation(line: 0, scope: !3463)
!3470 = !DILocation(line: 1169, column: 40, scope: !3463)
!3471 = !DILocation(line: 1171, column: 11, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3463, file: !111, line: 1171, column: 6)
!3473 = !DILocation(line: 1171, column: 20, scope: !3472)
!3474 = !DILocation(line: 1171, column: 29, scope: !3472)
!3475 = !DILocation(line: 1171, column: 46, scope: !3472)
!3476 = !DILocation(line: 1171, column: 6, scope: !3463)
!3477 = !DILocation(line: 1172, column: 3, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3472, file: !111, line: 1171, column: 56)
!3479 = !DILocation(line: 1173, column: 2, scope: !3478)
!3480 = !DILocation(line: 1179, column: 1, scope: !3463)
!3481 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3316, file: !3316, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3482)
!3482 = !{!3483}
!3483 = !DILocalVariable(name: "dev", arg: 1, scope: !3481, file: !3316, line: 241, type: !117)
!3484 = !DILocation(line: 0, scope: !3481)
!3485 = !DILocation(line: 250, column: 2, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3481, file: !3316, line: 250, column: 2)
!3487 = !{i64 2154420660}
!3488 = !DILocation(line: 251, column: 2, scope: !3481)
!3489 = !DILocation(line: 252, column: 1, scope: !3481)
!3490 = distinct !DISubprogram(name: "k_msgq_get", scope: !3354, file: !3354, line: 1147, type: !3491, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3493)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!107, !3357, !102, !3358}
!3493 = !{!3494, !3495, !3496}
!3494 = !DILocalVariable(name: "msgq", arg: 1, scope: !3490, file: !3354, line: 1147, type: !3357)
!3495 = !DILocalVariable(name: "data", arg: 2, scope: !3490, file: !3354, line: 1147, type: !102)
!3496 = !DILocalVariable(name: "timeout", arg: 3, scope: !3490, file: !3354, line: 1147, type: !3358)
!3497 = !DILocation(line: 0, scope: !3490)
!3498 = !DILocation(line: 1157, column: 2, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3490, file: !3354, line: 1157, column: 2)
!3500 = !{i64 2154151637}
!3501 = !DILocation(line: 1158, column: 9, scope: !3490)
!3502 = !DILocation(line: 1158, column: 2, scope: !3490)
!3503 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3504)
!3504 = !{!3505, !3506}
!3505 = !DILocalVariable(name: "dev", arg: 1, scope: !3503, file: !111, line: 934, type: !117)
!3506 = !DILocalVariable(name: "api", scope: !3503, file: !111, line: 937, type: !108)
!3507 = !DILocation(line: 0, scope: !3503)
!3508 = !DILocation(line: 938, column: 40, scope: !3503)
!3509 = !DILocation(line: 940, column: 11, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3503, file: !111, line: 940, column: 6)
!3511 = !DILocation(line: 940, column: 25, scope: !3510)
!3512 = !DILocation(line: 940, column: 6, scope: !3503)
!3513 = !DILocation(line: 941, column: 3, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3510, file: !111, line: 940, column: 34)
!3515 = !DILocation(line: 942, column: 2, scope: !3514)
!3516 = !DILocation(line: 946, column: 1, scope: !3503)
!3517 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3453, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3518)
!3518 = !{!3519}
!3519 = !DILocalVariable(name: "dev", arg: 1, scope: !3517, file: !120, line: 730, type: !117)
!3520 = !DILocation(line: 0, scope: !3517)
!3521 = !DILocation(line: 732, column: 9, scope: !3517)
!3522 = !DILocation(line: 732, column: 2, scope: !3517)
!3523 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3524)
!3524 = !{!3525}
!3525 = !DILocalVariable(name: "c", arg: 1, scope: !3523, file: !268, line: 45, type: !107)
!3526 = !DILocation(line: 0, scope: !3523)
!3527 = !DILocation(line: 50, column: 2, scope: !3523)
!3528 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3529, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !269}
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "fn", arg: 1, scope: !3528, file: !268, line: 63, type: !269)
!3533 = !DILocation(line: 0, scope: !3528)
!3534 = !DILocation(line: 65, column: 12, scope: !3528)
!3535 = !DILocation(line: 66, column: 1, scope: !3528)
!3536 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3537, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!102}
!3539 = !DILocation(line: 78, column: 9, scope: !3536)
!3540 = !DILocation(line: 78, column: 2, scope: !3536)
!3541 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3542, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3551)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{null, !123, !3544}
!3544 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3545, line: 99, baseType: !3546)
!3545 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3545, line: 40, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3548)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3549)
!3549 = !{!3550}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3548, file: !268, line: 79, baseType: !102, size: 32)
!3551 = !{!3552, !3553, !3554}
!3552 = !DILocalVariable(name: "fmt", arg: 1, scope: !3541, file: !268, line: 113, type: !123)
!3553 = !DILocalVariable(name: "ap", arg: 2, scope: !3541, file: !268, line: 113, type: !3544)
!3554 = !DILocalVariable(name: "ctx", scope: !3555, file: !268, line: 121, type: !3557)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !268, line: 120, column: 27)
!3556 = distinct !DILexicalBlock(scope: !3541, file: !268, line: 120, column: 6)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3558)
!3558 = !{!3559, !3560}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3557, file: !268, line: 85, baseType: !32, size: 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3557, file: !268, line: 86, baseType: !3561, offset: 32)
!3561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2483)
!3562 = !DILocation(line: 0, scope: !3541)
!3563 = !DILocation(line: 148, column: 3, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3556, file: !268, line: 138, column: 9)
!3565 = !DILocation(line: 155, column: 1, scope: !3541)
!3566 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3567, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3569)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!107, !107, !102}
!3569 = !{!3570, !3571}
!3570 = !DILocalVariable(name: "c", arg: 1, scope: !3566, file: !268, line: 107, type: !107)
!3571 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3566, file: !268, line: 107, type: !102)
!3572 = !DILocation(line: 0, scope: !3566)
!3573 = !DILocation(line: 110, column: 9, scope: !3566)
!3574 = !DILocation(line: 110, column: 2, scope: !3566)
!3575 = distinct !DISubprogram(name: "cbvprintf", scope: !3576, file: !3576, line: 739, type: !3577, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3583)
!3576 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!107, !3579, !102, !123, !3544}
!3579 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3576, line: 297, baseType: !3580)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 32)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!107, null}
!3583 = !{!3584, !3585, !3586, !3587}
!3584 = !DILocalVariable(name: "out", arg: 1, scope: !3575, file: !3576, line: 739, type: !3579)
!3585 = !DILocalVariable(name: "ctx", arg: 2, scope: !3575, file: !3576, line: 739, type: !102)
!3586 = !DILocalVariable(name: "format", arg: 3, scope: !3575, file: !3576, line: 739, type: !123)
!3587 = !DILocalVariable(name: "ap", arg: 4, scope: !3575, file: !3576, line: 739, type: !3544)
!3588 = !DILocation(line: 0, scope: !3575)
!3589 = !DILocation(line: 741, column: 9, scope: !3575)
!3590 = !DILocation(line: 741, column: 2, scope: !3575)
!3591 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3592, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3594)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{null, !256, !252}
!3594 = !{!3595, !3596, !3597}
!3595 = !DILocalVariable(name: "c", arg: 1, scope: !3591, file: !268, line: 157, type: !256)
!3596 = !DILocalVariable(name: "n", arg: 2, scope: !3591, file: !268, line: 157, type: !252)
!3597 = !DILocalVariable(name: "i", scope: !3591, file: !268, line: 159, type: !252)
!3598 = !DILocation(line: 0, scope: !3591)
!3599 = !DILocation(line: 164, column: 16, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !268, line: 164, column: 2)
!3601 = distinct !DILexicalBlock(scope: !3591, file: !268, line: 164, column: 2)
!3602 = !DILocation(line: 164, column: 2, scope: !3601)
!3603 = !DILocation(line: 165, column: 3, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !268, line: 164, column: 26)
!3605 = !DILocation(line: 165, column: 13, scope: !3604)
!3606 = !DILocation(line: 164, column: 22, scope: !3600)
!3607 = distinct !{!3607, !3602, !3608}
!3608 = !DILocation(line: 166, column: 2, scope: !3601)
!3609 = !DILocation(line: 171, column: 1, scope: !3591)
!3610 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3611, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !123, null}
!3613 = !{!3614, !3615}
!3614 = !DILocalVariable(name: "fmt", arg: 1, scope: !3610, file: !268, line: 203, type: !123)
!3615 = !DILocalVariable(name: "ap", scope: !3610, file: !268, line: 205, type: !3544)
!3616 = !DILocation(line: 0, scope: !3610)
!3617 = !DILocation(line: 205, column: 2, scope: !3610)
!3618 = !DILocation(line: 205, column: 10, scope: !3610)
!3619 = !DILocation(line: 207, column: 2, scope: !3610)
!3620 = !DILocation(line: 209, column: 2, scope: !3610)
!3621 = !DILocation(line: 211, column: 2, scope: !3610)
!3622 = !DILocation(line: 212, column: 1, scope: !3610)
!3623 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3624, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3626)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!107, !256, !252, !123, null}
!3626 = !{!3627, !3628, !3629, !3630, !3631}
!3627 = !DILocalVariable(name: "str", arg: 1, scope: !3623, file: !268, line: 239, type: !256)
!3628 = !DILocalVariable(name: "size", arg: 2, scope: !3623, file: !268, line: 239, type: !252)
!3629 = !DILocalVariable(name: "fmt", arg: 3, scope: !3623, file: !268, line: 239, type: !123)
!3630 = !DILocalVariable(name: "ap", scope: !3623, file: !268, line: 241, type: !3544)
!3631 = !DILocalVariable(name: "ret", scope: !3623, file: !268, line: 242, type: !107)
!3632 = !DILocation(line: 0, scope: !3623)
!3633 = !DILocation(line: 241, column: 2, scope: !3623)
!3634 = !DILocation(line: 241, column: 10, scope: !3623)
!3635 = !DILocation(line: 244, column: 2, scope: !3623)
!3636 = !DILocation(line: 245, column: 8, scope: !3623)
!3637 = !DILocation(line: 246, column: 2, scope: !3623)
!3638 = !DILocation(line: 249, column: 1, scope: !3623)
!3639 = !DILocation(line: 248, column: 2, scope: !3623)
!3640 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3641, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3643)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!107, !256, !252, !123, !3544}
!3643 = !{!3644, !3645, !3646, !3647, !3648}
!3644 = !DILocalVariable(name: "str", arg: 1, scope: !3640, file: !268, line: 251, type: !256)
!3645 = !DILocalVariable(name: "size", arg: 2, scope: !3640, file: !268, line: 251, type: !252)
!3646 = !DILocalVariable(name: "fmt", arg: 3, scope: !3640, file: !268, line: 251, type: !123)
!3647 = !DILocalVariable(name: "ap", arg: 4, scope: !3640, file: !268, line: 251, type: !3544)
!3648 = !DILocalVariable(name: "ctx", scope: !3640, file: !268, line: 253, type: !3649)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3650)
!3650 = !{!3651, !3652, !3653}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3649, file: !268, line: 218, baseType: !256, size: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3649, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3649, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3654 = !DILocation(line: 0, scope: !3640)
!3655 = !DILocation(line: 253, column: 2, scope: !3640)
!3656 = !DILocation(line: 253, column: 21, scope: !3640)
!3657 = !DILocation(line: 253, column: 27, scope: !3640)
!3658 = !DILocation(line: 255, column: 2, scope: !3640)
!3659 = !DILocation(line: 257, column: 10, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3640, file: !268, line: 257, column: 6)
!3661 = !DILocation(line: 257, column: 22, scope: !3660)
!3662 = !DILocation(line: 257, column: 16, scope: !3660)
!3663 = !DILocation(line: 257, column: 6, scope: !3640)
!3664 = !DILocation(line: 258, column: 3, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3660, file: !268, line: 257, column: 27)
!3666 = !DILocation(line: 258, column: 18, scope: !3665)
!3667 = !DILocation(line: 259, column: 2, scope: !3665)
!3668 = !DILocation(line: 262, column: 1, scope: !3640)
!3669 = !DILocation(line: 261, column: 2, scope: !3640)
!3670 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3671, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3674)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!107, !107, !3673}
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3674 = !{!3675, !3676}
!3675 = !DILocalVariable(name: "c", arg: 1, scope: !3670, file: !268, line: 223, type: !107)
!3676 = !DILocalVariable(name: "ctx", arg: 2, scope: !3670, file: !268, line: 223, type: !3673)
!3677 = !DILocation(line: 0, scope: !3670)
!3678 = !DILocation(line: 225, column: 11, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3670, file: !268, line: 225, column: 6)
!3680 = !DILocation(line: 225, column: 15, scope: !3679)
!3681 = !DILocation(line: 0, scope: !3679)
!3682 = !DILocation(line: 225, column: 23, scope: !3679)
!3683 = !DILocation(line: 225, column: 45, scope: !3679)
!3684 = !DILocation(line: 225, column: 37, scope: !3679)
!3685 = !DILocation(line: 225, column: 6, scope: !3670)
!3686 = !DILocation(line: 226, column: 8, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3679, file: !268, line: 225, column: 50)
!3688 = !DILocation(line: 226, column: 13, scope: !3687)
!3689 = !DILocation(line: 227, column: 3, scope: !3687)
!3690 = !DILocation(line: 230, column: 29, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3670, file: !268, line: 230, column: 6)
!3692 = !DILocation(line: 230, column: 17, scope: !3691)
!3693 = !DILocation(line: 230, column: 6, scope: !3670)
!3694 = !DILocation(line: 231, column: 22, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !268, line: 230, column: 34)
!3696 = !DILocation(line: 231, column: 3, scope: !3695)
!3697 = !DILocation(line: 231, column: 26, scope: !3695)
!3698 = !DILocation(line: 232, column: 2, scope: !3695)
!3699 = !DILocation(line: 233, column: 28, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3691, file: !268, line: 232, column: 9)
!3701 = !DILocation(line: 233, column: 22, scope: !3700)
!3702 = !DILocation(line: 233, column: 3, scope: !3700)
!3703 = !DILocation(line: 233, column: 26, scope: !3700)
!3704 = !DILocation(line: 237, column: 1, scope: !3670)
!3705 = distinct !DISubprogram(name: "z_thread_entry", scope: !3706, file: !3706, line: 30, type: !3707, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !3714)
!3706 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !3709, !102, !102, !102}
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3710, line: 46, baseType: !3711)
!3710 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 32)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{null, !102, !102, !102}
!3714 = !{!3715, !3716, !3717, !3718}
!3715 = !DILocalVariable(name: "entry", arg: 1, scope: !3705, file: !3706, line: 30, type: !3709)
!3716 = !DILocalVariable(name: "p1", arg: 2, scope: !3705, file: !3706, line: 31, type: !102)
!3717 = !DILocalVariable(name: "p2", arg: 3, scope: !3705, file: !3706, line: 31, type: !102)
!3718 = !DILocalVariable(name: "p3", arg: 4, scope: !3705, file: !3706, line: 31, type: !102)
!3719 = !DILocation(line: 0, scope: !3705)
!3720 = !DILocation(line: 36, column: 2, scope: !3705)
!3721 = !DILocation(line: 38, column: 17, scope: !3705)
!3722 = !DILocation(line: 38, column: 2, scope: !3705)
!3723 = !DILocation(line: 45, column: 2, scope: !3705)
!3724 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3725, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !250)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!3727}
!3727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !3728)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 32)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3730)
!3730 = !{!3731, !3789, !3801, !3802, !3803, !3804, !3810, !3823}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3729, file: !359, line: 247, baseType: !3732, size: 384)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3733)
!3733 = !{!3734, !3758, !3765, !3766, !3767, !3776, !3777, !3778}
!3734 = !DIDerivedType(tag: DW_TAG_member, scope: !3732, file: !359, line: 60, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3732, file: !359, line: 60, size: 64, elements: !3736)
!3736 = !{!3737, !3752}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3735, file: !359, line: 61, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3739)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3740)
!3740 = !{!3741, !3747}
!3741 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !233, line: 38, baseType: !3742, size: 32)
!3742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !233, line: 38, size: 32, elements: !3743)
!3743 = !{!3744, !3746}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3742, file: !233, line: 39, baseType: !3745, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3742, file: !233, line: 40, baseType: !3745, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !233, line: 42, baseType: !3748, size: 32, offset: 32)
!3748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !233, line: 42, size: 32, elements: !3749)
!3749 = !{!3750, !3751}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3748, file: !233, line: 43, baseType: !3745, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3748, file: !233, line: 44, baseType: !3745, size: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3735, file: !359, line: 62, baseType: !3753, size: 64)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3754)
!3754 = !{!3755}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3753, file: !384, line: 50, baseType: !3756, size: 64)
!3756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3757, size: 64, elements: !389)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3732, file: !359, line: 68, baseType: !3759, size: 32, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3761)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3762)
!3762 = !{!3763}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3761, file: !228, line: 232, baseType: !3764, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3739)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3732, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3732, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3767 = !DIDerivedType(tag: DW_TAG_member, scope: !3732, file: !359, line: 90, baseType: !3768, size: 16, offset: 112)
!3768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3732, file: !359, line: 90, size: 16, elements: !3769)
!3769 = !{!3770, !3775}
!3770 = !DIDerivedType(tag: DW_TAG_member, scope: !3768, file: !359, line: 91, baseType: !3771, size: 16)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3768, file: !359, line: 91, size: 16, elements: !3772)
!3772 = !{!3773, !3774}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3771, file: !359, line: 96, baseType: !407, size: 8)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3771, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3768, file: !359, line: 100, baseType: !411, size: 16)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3732, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3732, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3732, file: !359, line: 131, baseType: !3779, size: 192, offset: 192)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3780)
!3780 = !{!3781, !3782, !3788}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3779, file: !228, line: 245, baseType: !3738, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3779, file: !228, line: 246, baseType: !3783, size: 32, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3784)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 32)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{null, !3787}
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3779, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3729, file: !359, line: 250, baseType: !3790, size: 288, offset: 384)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3791)
!3791 = !{!3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3790, file: !428, line: 26, baseType: !162, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3790, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3790, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3790, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3790, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3790, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3790, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3790, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3790, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3729, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3729, file: !359, line: 256, baseType: !3760, size: 64, offset: 704)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3729, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3729, file: !359, line: 300, baseType: !3805, size: 96, offset: 800)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3806)
!3806 = !{!3807, !3808, !3809}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3805, file: !359, line: 153, baseType: !22, size: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3805, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3805, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3729, file: !359, line: 325, baseType: !3811, size: 32, offset: 896)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 32)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3813)
!3813 = !{!3814, !3820, !3821}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3812, file: !224, line: 5074, baseType: !3815, size: 96)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3816)
!3816 = !{!3817, !3818, !3819}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3815, file: !454, line: 57, baseType: !457, size: 32)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3815, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3815, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3812, file: !224, line: 5075, baseType: !3760, size: 64, offset: 96)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3812, file: !224, line: 5076, baseType: !3822, offset: 160)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3729, file: !359, line: 343, baseType: !3824, size: 64, offset: 928)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3825)
!3825 = !{!3826, !3827}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3824, file: !428, line: 63, baseType: !162, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3824, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3828 = !DILocation(line: 535, column: 9, scope: !3724)
!3829 = !DILocation(line: 535, column: 2, scope: !3724)
!3830 = distinct !DISubprogram(name: "k_thread_abort", scope: !3354, file: !3354, line: 188, type: !3831, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !3833)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !3727}
!3833 = !{!3834}
!3834 = !DILocalVariable(name: "thread", arg: 1, scope: !3830, file: !3354, line: 188, type: !3727)
!3835 = !DILocation(line: 0, scope: !3830)
!3836 = !DILocation(line: 197, column: 2, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3830, file: !3354, line: 197, column: 2)
!3838 = !{i64 2154146761}
!3839 = !DILocation(line: 198, column: 2, scope: !3830)
!3840 = !DILocation(line: 199, column: 1, scope: !3830)
!3841 = distinct !DISubprogram(name: "z_current_get", scope: !3354, file: !3354, line: 173, type: !3725, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !250)
!3842 = !DILocation(line: 180, column: 2, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3841, file: !3354, line: 180, column: 2)
!3844 = !{i64 2154146693}
!3845 = !DILocation(line: 181, column: 9, scope: !3841)
!3846 = !DILocation(line: 181, column: 2, scope: !3841)
!3847 = distinct !DISubprogram(name: "sys_heap_free", scope: !3848, file: !3848, line: 163, type: !3849, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3857)
!3848 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !3851, !102}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 32)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3853)
!3853 = !{!3854, !3855, !3856}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3852, file: !454, line: 57, baseType: !2470, size: 32)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3852, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3852, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3857 = !{!3858, !3859, !3860, !3861}
!3858 = !DILocalVariable(name: "heap", arg: 1, scope: !3847, file: !3848, line: 163, type: !3851)
!3859 = !DILocalVariable(name: "mem", arg: 2, scope: !3847, file: !3848, line: 163, type: !102)
!3860 = !DILocalVariable(name: "h", scope: !3847, file: !3848, line: 168, type: !2470)
!3861 = !DILocalVariable(name: "c", scope: !3847, file: !3848, line: 169, type: !2475)
!3862 = !DILocation(line: 0, scope: !3847)
!3863 = !DILocation(line: 165, column: 10, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3847, file: !3848, line: 165, column: 6)
!3865 = !DILocation(line: 165, column: 6, scope: !3847)
!3866 = !DILocation(line: 168, column: 27, scope: !3847)
!3867 = !DILocation(line: 169, column: 16, scope: !3847)
!3868 = !{i32 0, i32 536870912}
!3869 = !DILocation(line: 187, column: 2, scope: !3847)
!3870 = !DILocation(line: 197, column: 2, scope: !3847)
!3871 = !DILocation(line: 198, column: 1, scope: !3847)
!3872 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3848, file: !3848, line: 157, type: !3873, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3875)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!2475, !2470, !102}
!3875 = !{!3876, !3877, !3878, !3879}
!3876 = !DILocalVariable(name: "h", arg: 1, scope: !3872, file: !3848, line: 157, type: !2470)
!3877 = !DILocalVariable(name: "p", arg: 2, scope: !3872, file: !3848, line: 157, type: !102)
!3878 = !DILocalVariable(name: "mem", scope: !3872, file: !3848, line: 159, type: !182)
!3879 = !DILocalVariable(name: "base", scope: !3872, file: !3848, line: 159, type: !182)
!3880 = !DILocation(line: 0, scope: !3872)
!3881 = !DILocation(line: 159, column: 39, scope: !3872)
!3882 = !DILocation(line: 160, column: 14, scope: !3872)
!3883 = !DILocation(line: 160, column: 38, scope: !3872)
!3884 = !DILocation(line: 160, column: 46, scope: !3872)
!3885 = !DILocation(line: 160, column: 2, scope: !3872)
!3886 = distinct !DISubprogram(name: "set_chunk_used", scope: !2457, file: !2457, line: 147, type: !3887, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3889)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !2470, !2475, !136}
!3889 = !{!3890, !3891, !3892, !3893, !3894}
!3890 = !DILocalVariable(name: "h", arg: 1, scope: !3886, file: !2457, line: 147, type: !2470)
!3891 = !DILocalVariable(name: "c", arg: 2, scope: !3886, file: !2457, line: 147, type: !2475)
!3892 = !DILocalVariable(name: "used", arg: 3, scope: !3886, file: !2457, line: 147, type: !136)
!3893 = !DILocalVariable(name: "buf", scope: !3886, file: !2457, line: 149, type: !2464)
!3894 = !DILocalVariable(name: "cmem", scope: !3886, file: !2457, line: 150, type: !102)
!3895 = !DILocation(line: 0, scope: !3886)
!3896 = !DILocation(line: 149, column: 22, scope: !3886)
!3897 = !DILocation(line: 0, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !2457, line: 159, column: 7)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !2457, line: 158, column: 9)
!3900 = distinct !DILexicalBlock(scope: !3886, file: !2457, line: 152, column: 6)
!3901 = !DILocation(line: 159, column: 7, scope: !3899)
!3902 = !DILocation(line: 165, column: 1, scope: !3886)
!3903 = distinct !DISubprogram(name: "free_chunk", scope: !3848, file: !3848, line: 133, type: !3904, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{null, !2470, !2475}
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "h", arg: 1, scope: !3903, file: !3848, line: 133, type: !2470)
!3908 = !DILocalVariable(name: "c", arg: 2, scope: !3903, file: !3848, line: 133, type: !2475)
!3909 = !DILocation(line: 0, scope: !3903)
!3910 = !DILocation(line: 136, column: 21, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3903, file: !3848, line: 136, column: 6)
!3912 = !DILocation(line: 136, column: 7, scope: !3911)
!3913 = !DILocation(line: 136, column: 6, scope: !3903)
!3914 = !DILocation(line: 137, column: 3, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3911, file: !3848, line: 136, column: 41)
!3916 = !DILocation(line: 138, column: 22, scope: !3915)
!3917 = !DILocation(line: 138, column: 3, scope: !3915)
!3918 = !DILocation(line: 139, column: 2, scope: !3915)
!3919 = !DILocation(line: 142, column: 21, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3903, file: !3848, line: 142, column: 6)
!3921 = !{i32 -65535, i32 536903678}
!3922 = !DILocation(line: 142, column: 7, scope: !3920)
!3923 = !DILocation(line: 142, column: 6, scope: !3903)
!3924 = !DILocation(line: 143, column: 3, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3920, file: !3848, line: 142, column: 40)
!3926 = !DILocation(line: 144, column: 19, scope: !3925)
!3927 = !DILocation(line: 144, column: 3, scope: !3925)
!3928 = !DILocation(line: 145, column: 7, scope: !3925)
!3929 = !DILocation(line: 146, column: 2, scope: !3925)
!3930 = !DILocation(line: 148, column: 2, scope: !3903)
!3931 = !DILocation(line: 149, column: 1, scope: !3903)
!3932 = distinct !DISubprogram(name: "right_chunk", scope: !2457, file: !2457, line: 204, type: !3933, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3935)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!2475, !2470, !2475}
!3935 = !{!3936, !3937}
!3936 = !DILocalVariable(name: "h", arg: 1, scope: !3932, file: !2457, line: 204, type: !2470)
!3937 = !DILocalVariable(name: "c", arg: 2, scope: !3932, file: !2457, line: 204, type: !2475)
!3938 = !DILocation(line: 0, scope: !3932)
!3939 = !DILocation(line: 206, column: 13, scope: !3932)
!3940 = !DILocation(line: 206, column: 11, scope: !3932)
!3941 = !DILocation(line: 206, column: 2, scope: !3932)
!3942 = distinct !DISubprogram(name: "chunk_used", scope: !2457, file: !2457, line: 137, type: !3943, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3945)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!136, !2470, !2475}
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3942, file: !2457, line: 137, type: !2470)
!3947 = !DILocalVariable(name: "c", arg: 2, scope: !3942, file: !2457, line: 137, type: !2475)
!3948 = !DILocation(line: 0, scope: !3942)
!3949 = !DILocation(line: 139, column: 9, scope: !3942)
!3950 = !DILocation(line: 139, column: 42, scope: !3942)
!3951 = !DILocation(line: 139, column: 2, scope: !3942)
!3952 = distinct !DISubprogram(name: "free_list_remove", scope: !3848, file: !3848, line: 60, type: !3904, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3953)
!3953 = !{!3954, !3955, !3956}
!3954 = !DILocalVariable(name: "h", arg: 1, scope: !3952, file: !3848, line: 60, type: !2470)
!3955 = !DILocalVariable(name: "c", arg: 2, scope: !3952, file: !3848, line: 60, type: !2475)
!3956 = !DILocalVariable(name: "bidx", scope: !3957, file: !3848, line: 63, type: !107)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3848, line: 62, column: 31)
!3958 = distinct !DILexicalBlock(scope: !3952, file: !3848, line: 62, column: 6)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 63, column: 28, scope: !3957)
!3961 = !{i32 0, i32 32768}
!3962 = !DILocation(line: 63, column: 14, scope: !3957)
!3963 = !DILocation(line: 0, scope: !3957)
!3964 = !DILocation(line: 64, column: 3, scope: !3957)
!3965 = !DILocation(line: 66, column: 1, scope: !3952)
!3966 = distinct !DISubprogram(name: "merge_chunks", scope: !3848, file: !3848, line: 125, type: !3967, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !2470, !2475, !2475}
!3969 = !{!3970, !3971, !3972, !3973}
!3970 = !DILocalVariable(name: "h", arg: 1, scope: !3966, file: !3848, line: 125, type: !2470)
!3971 = !DILocalVariable(name: "lc", arg: 2, scope: !3966, file: !3848, line: 125, type: !2475)
!3972 = !DILocalVariable(name: "rc", arg: 3, scope: !3966, file: !3848, line: 125, type: !2475)
!3973 = !DILocalVariable(name: "newsz", scope: !3966, file: !3848, line: 127, type: !3974)
!3974 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2457, line: 62, baseType: !162)
!3975 = !DILocation(line: 0, scope: !3966)
!3976 = !DILocation(line: 127, column: 20, scope: !3966)
!3977 = !DILocation(line: 127, column: 40, scope: !3966)
!3978 = !DILocation(line: 127, column: 38, scope: !3966)
!3979 = !DILocation(line: 129, column: 2, scope: !3966)
!3980 = !DILocation(line: 130, column: 25, scope: !3966)
!3981 = !DILocation(line: 130, column: 2, scope: !3966)
!3982 = !DILocation(line: 131, column: 1, scope: !3966)
!3983 = distinct !DISubprogram(name: "left_chunk", scope: !2457, file: !2457, line: 199, type: !3933, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3984)
!3984 = !{!3985, !3986}
!3985 = !DILocalVariable(name: "h", arg: 1, scope: !3983, file: !2457, line: 199, type: !2470)
!3986 = !DILocalVariable(name: "c", arg: 2, scope: !3983, file: !2457, line: 199, type: !2475)
!3987 = !DILocation(line: 0, scope: !3983)
!3988 = !DILocation(line: 201, column: 13, scope: !3983)
!3989 = !DILocation(line: 201, column: 11, scope: !3983)
!3990 = !DILocation(line: 201, column: 2, scope: !3983)
!3991 = distinct !DISubprogram(name: "free_list_add", scope: !3848, file: !3848, line: 98, type: !3904, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !3992)
!3992 = !{!3993, !3994, !3995}
!3993 = !DILocalVariable(name: "h", arg: 1, scope: !3991, file: !3848, line: 98, type: !2470)
!3994 = !DILocalVariable(name: "c", arg: 2, scope: !3991, file: !3848, line: 98, type: !2475)
!3995 = !DILocalVariable(name: "bidx", scope: !3996, file: !3848, line: 101, type: !107)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !3848, line: 100, column: 31)
!3997 = distinct !DILexicalBlock(scope: !3991, file: !3848, line: 100, column: 6)
!3998 = !DILocation(line: 0, scope: !3991)
!3999 = !DILocation(line: 101, column: 28, scope: !3996)
!4000 = !DILocation(line: 101, column: 14, scope: !3996)
!4001 = !DILocation(line: 0, scope: !3996)
!4002 = !DILocation(line: 102, column: 3, scope: !3996)
!4003 = !DILocation(line: 104, column: 1, scope: !3991)
!4004 = distinct !DISubprogram(name: "chunk_size", scope: !2457, file: !2457, line: 142, type: !4005, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4007)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!3974, !2470, !2475}
!4007 = !{!4008, !4009}
!4008 = !DILocalVariable(name: "h", arg: 1, scope: !4004, file: !2457, line: 142, type: !2470)
!4009 = !DILocalVariable(name: "c", arg: 2, scope: !4004, file: !2457, line: 142, type: !2475)
!4010 = !DILocation(line: 0, scope: !4004)
!4011 = !DILocation(line: 144, column: 9, scope: !4004)
!4012 = !DILocation(line: 144, column: 42, scope: !4004)
!4013 = !DILocation(line: 144, column: 2, scope: !4004)
!4014 = distinct !DISubprogram(name: "bucket_idx", scope: !2457, file: !2457, line: 250, type: !4015, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4017)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!107, !2470, !3974}
!4017 = !{!4018, !4019, !4020}
!4018 = !DILocalVariable(name: "h", arg: 1, scope: !4014, file: !2457, line: 250, type: !2470)
!4019 = !DILocalVariable(name: "sz", arg: 2, scope: !4014, file: !2457, line: 250, type: !3974)
!4020 = !DILocalVariable(name: "usable_sz", scope: !4014, file: !2457, line: 252, type: !32)
!4021 = !DILocation(line: 0, scope: !4014)
!4022 = !DILocation(line: 252, column: 32, scope: !4014)
!4023 = !DILocation(line: 252, column: 30, scope: !4014)
!4024 = !DILocation(line: 252, column: 50, scope: !4014)
!4025 = !DILocation(line: 253, column: 14, scope: !4014)
!4026 = !{i32 0, i32 33}
!4027 = !DILocation(line: 253, column: 12, scope: !4014)
!4028 = !DILocation(line: 253, column: 2, scope: !4014)
!4029 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3848, file: !3848, line: 68, type: !4030, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4032)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{null, !2470, !2475, !107}
!4032 = !{!4033, !4034, !4035, !4036, !4038, !4041}
!4033 = !DILocalVariable(name: "h", arg: 1, scope: !4029, file: !3848, line: 68, type: !2470)
!4034 = !DILocalVariable(name: "c", arg: 2, scope: !4029, file: !3848, line: 68, type: !2475)
!4035 = !DILocalVariable(name: "bidx", arg: 3, scope: !4029, file: !3848, line: 68, type: !107)
!4036 = !DILocalVariable(name: "b", scope: !4029, file: !3848, line: 70, type: !4037)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!4038 = !DILocalVariable(name: "second", scope: !4039, file: !3848, line: 84, type: !2475)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3848, line: 80, column: 9)
!4040 = distinct !DILexicalBlock(scope: !4029, file: !3848, line: 72, column: 6)
!4041 = !DILocalVariable(name: "first", scope: !4039, file: !3848, line: 85, type: !2475)
!4042 = !DILocation(line: 0, scope: !4029)
!4043 = !DILocation(line: 72, column: 9, scope: !4040)
!4044 = !DILocation(line: 72, column: 14, scope: !4040)
!4045 = !DILocation(line: 72, column: 6, scope: !4029)
!4046 = !DILocation(line: 76, column: 23, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4040, file: !3848, line: 72, column: 21)
!4048 = !DILocation(line: 76, column: 6, scope: !4047)
!4049 = !DILocation(line: 76, column: 20, scope: !4047)
!4050 = !DILocation(line: 77, column: 11, scope: !4047)
!4051 = !DILocation(line: 78, column: 3, scope: !4047)
!4052 = !DILocation(line: 79, column: 3, scope: !4047)
!4053 = !DILocation(line: 80, column: 2, scope: !4047)
!4054 = !DILocation(line: 0, scope: !4039)
!4055 = !DILocation(line: 85, column: 21, scope: !4039)
!4056 = !{i32 0, i32 65536}
!4057 = !DILocation(line: 87, column: 3, scope: !4039)
!4058 = !DILocation(line: 88, column: 3, scope: !4039)
!4059 = !DILocation(line: 89, column: 3, scope: !4039)
!4060 = !DILocation(line: 90, column: 3, scope: !4039)
!4061 = !DILocation(line: 96, column: 1, scope: !4029)
!4062 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2457, file: !2457, line: 187, type: !3967, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4063)
!4063 = !{!4064, !4065, !4066}
!4064 = !DILocalVariable(name: "h", arg: 1, scope: !4062, file: !2457, line: 187, type: !2470)
!4065 = !DILocalVariable(name: "c", arg: 2, scope: !4062, file: !2457, line: 187, type: !2475)
!4066 = !DILocalVariable(name: "prev", arg: 3, scope: !4062, file: !2457, line: 188, type: !2475)
!4067 = !DILocation(line: 0, scope: !4062)
!4068 = !DILocation(line: 190, column: 2, scope: !4062)
!4069 = !DILocation(line: 191, column: 1, scope: !4062)
!4070 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2457, file: !2457, line: 193, type: !3967, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4071)
!4071 = !{!4072, !4073, !4074}
!4072 = !DILocalVariable(name: "h", arg: 1, scope: !4070, file: !2457, line: 193, type: !2470)
!4073 = !DILocalVariable(name: "c", arg: 2, scope: !4070, file: !2457, line: 193, type: !2475)
!4074 = !DILocalVariable(name: "next", arg: 3, scope: !4070, file: !2457, line: 194, type: !2475)
!4075 = !DILocation(line: 0, scope: !4070)
!4076 = !DILocation(line: 196, column: 2, scope: !4070)
!4077 = !DILocation(line: 197, column: 1, scope: !4070)
!4078 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2457, file: !2457, line: 177, type: !3933, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4079)
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "h", arg: 1, scope: !4078, file: !2457, line: 177, type: !2470)
!4081 = !DILocalVariable(name: "c", arg: 2, scope: !4078, file: !2457, line: 177, type: !2475)
!4082 = !DILocation(line: 0, scope: !4078)
!4083 = !DILocation(line: 179, column: 9, scope: !4078)
!4084 = !DILocation(line: 179, column: 2, scope: !4078)
!4085 = distinct !DISubprogram(name: "chunk_field", scope: !2457, file: !2457, line: 107, type: !4086, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4088)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!2475, !2470, !2475, !2456}
!4088 = !{!4089, !4090, !4091, !4092, !4093}
!4089 = !DILocalVariable(name: "h", arg: 1, scope: !4085, file: !2457, line: 107, type: !2470)
!4090 = !DILocalVariable(name: "c", arg: 2, scope: !4085, file: !2457, line: 107, type: !2475)
!4091 = !DILocalVariable(name: "f", arg: 3, scope: !4085, file: !2457, line: 108, type: !2456)
!4092 = !DILocalVariable(name: "buf", scope: !4085, file: !2457, line: 110, type: !2464)
!4093 = !DILocalVariable(name: "cmem", scope: !4085, file: !2457, line: 111, type: !102)
!4094 = !DILocation(line: 0, scope: !4085)
!4095 = !DILocation(line: 110, column: 22, scope: !4085)
!4096 = !DILocation(line: 111, column: 15, scope: !4085)
!4097 = !DILocation(line: 116, column: 11, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !2457, line: 115, column: 9)
!4099 = distinct !DILexicalBlock(scope: !4085, file: !2457, line: 113, column: 6)
!4100 = !DILocation(line: 116, column: 10, scope: !4098)
!4101 = !DILocation(line: 118, column: 1, scope: !4085)
!4102 = distinct !DISubprogram(name: "chunk_buf", scope: !2457, file: !2457, line: 101, type: !4103, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4105)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!2464, !2470}
!4105 = !{!4106}
!4106 = !DILocalVariable(name: "h", arg: 1, scope: !4102, file: !2457, line: 101, type: !2470)
!4107 = !DILocation(line: 0, scope: !4102)
!4108 = !DILocation(line: 104, column: 9, scope: !4102)
!4109 = !DILocation(line: 104, column: 2, scope: !4102)
!4110 = distinct !DISubprogram(name: "chunk_set", scope: !2457, file: !2457, line: 120, type: !4111, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4113)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{null, !2470, !2475, !2456, !2475}
!4113 = !{!4114, !4115, !4116, !4117, !4118, !4119}
!4114 = !DILocalVariable(name: "h", arg: 1, scope: !4110, file: !2457, line: 120, type: !2470)
!4115 = !DILocalVariable(name: "c", arg: 2, scope: !4110, file: !2457, line: 120, type: !2475)
!4116 = !DILocalVariable(name: "f", arg: 3, scope: !4110, file: !2457, line: 121, type: !2456)
!4117 = !DILocalVariable(name: "val", arg: 4, scope: !4110, file: !2457, line: 121, type: !2475)
!4118 = !DILocalVariable(name: "buf", scope: !4110, file: !2457, line: 125, type: !2464)
!4119 = !DILocalVariable(name: "cmem", scope: !4110, file: !2457, line: 126, type: !102)
!4120 = !DILocation(line: 0, scope: !4110)
!4121 = !DILocation(line: 125, column: 22, scope: !4110)
!4122 = !DILocation(line: 126, column: 15, scope: !4110)
!4123 = !DILocation(line: 133, column: 27, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !2457, line: 131, column: 9)
!4125 = distinct !DILexicalBlock(scope: !4110, file: !2457, line: 128, column: 6)
!4126 = !DILocation(line: 133, column: 4, scope: !4124)
!4127 = !DILocation(line: 133, column: 3, scope: !4124)
!4128 = !DILocation(line: 133, column: 25, scope: !4124)
!4129 = !DILocation(line: 135, column: 1, scope: !4110)
!4130 = distinct !DISubprogram(name: "min_chunk_size", scope: !2457, file: !2457, line: 240, type: !4131, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4133)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!3974, !2470}
!4133 = !{!4134}
!4134 = !DILocalVariable(name: "h", arg: 1, scope: !4130, file: !2457, line: 240, type: !2470)
!4135 = !DILocation(line: 0, scope: !4130)
!4136 = !DILocation(line: 242, column: 9, scope: !4130)
!4137 = !DILocation(line: 242, column: 2, scope: !4130)
!4138 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2457, file: !2457, line: 235, type: !4139, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4141)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!3974, !2470, !252}
!4141 = !{!4142, !4143}
!4142 = !DILocalVariable(name: "h", arg: 1, scope: !4138, file: !2457, line: 235, type: !2470)
!4143 = !DILocalVariable(name: "bytes", arg: 2, scope: !4138, file: !2457, line: 235, type: !252)
!4144 = !DILocation(line: 0, scope: !4138)
!4145 = !DILocation(line: 237, column: 39, scope: !4138)
!4146 = !DILocation(line: 237, column: 9, scope: !4138)
!4147 = !DILocation(line: 237, column: 2, scope: !4138)
!4148 = distinct !DISubprogram(name: "chunksz", scope: !2457, file: !2457, line: 230, type: !4149, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!3974, !252}
!4151 = !{!4152}
!4152 = !DILocalVariable(name: "bytes", arg: 1, scope: !4148, file: !2457, line: 230, type: !252)
!4153 = !DILocation(line: 0, scope: !4148)
!4154 = !DILocation(line: 232, column: 29, scope: !4148)
!4155 = !DILocation(line: 232, column: 35, scope: !4148)
!4156 = !DILocation(line: 232, column: 2, scope: !4148)
!4157 = distinct !DISubprogram(name: "set_chunk_size", scope: !2457, file: !2457, line: 172, type: !4158, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4160)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{null, !2470, !2475, !3974}
!4160 = !{!4161, !4162, !4163}
!4161 = !DILocalVariable(name: "h", arg: 1, scope: !4157, file: !2457, line: 172, type: !2470)
!4162 = !DILocalVariable(name: "c", arg: 2, scope: !4157, file: !2457, line: 172, type: !2475)
!4163 = !DILocalVariable(name: "size", arg: 3, scope: !4157, file: !2457, line: 172, type: !3974)
!4164 = !DILocation(line: 0, scope: !4157)
!4165 = !DILocation(line: 174, column: 38, scope: !4157)
!4166 = !DILocation(line: 174, column: 2, scope: !4157)
!4167 = !DILocation(line: 175, column: 1, scope: !4157)
!4168 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2457, file: !2457, line: 209, type: !4158, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4169)
!4169 = !{!4170, !4171, !4172}
!4170 = !DILocalVariable(name: "h", arg: 1, scope: !4168, file: !2457, line: 209, type: !2470)
!4171 = !DILocalVariable(name: "c", arg: 2, scope: !4168, file: !2457, line: 209, type: !2475)
!4172 = !DILocalVariable(name: "size", arg: 3, scope: !4168, file: !2457, line: 210, type: !3974)
!4173 = !DILocation(line: 0, scope: !4168)
!4174 = !DILocation(line: 212, column: 2, scope: !4168)
!4175 = !DILocation(line: 213, column: 1, scope: !4168)
!4176 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3848, file: !3848, line: 34, type: !4030, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4177)
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4185}
!4178 = !DILocalVariable(name: "h", arg: 1, scope: !4176, file: !3848, line: 34, type: !2470)
!4179 = !DILocalVariable(name: "c", arg: 2, scope: !4176, file: !3848, line: 34, type: !2475)
!4180 = !DILocalVariable(name: "bidx", arg: 3, scope: !4176, file: !3848, line: 34, type: !107)
!4181 = !DILocalVariable(name: "b", scope: !4176, file: !3848, line: 36, type: !4037)
!4182 = !DILocalVariable(name: "first", scope: !4183, file: !3848, line: 47, type: !2475)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !3848, line: 46, column: 9)
!4184 = distinct !DILexicalBlock(scope: !4176, file: !3848, line: 42, column: 6)
!4185 = !DILocalVariable(name: "second", scope: !4183, file: !3848, line: 48, type: !2475)
!4186 = !DILocation(line: 0, scope: !4176)
!4187 = !DILocation(line: 36, column: 29, scope: !4176)
!4188 = !DILocation(line: 42, column: 6, scope: !4184)
!4189 = !DILocation(line: 42, column: 28, scope: !4184)
!4190 = !DILocation(line: 42, column: 6, scope: !4176)
!4191 = !DILocation(line: 44, column: 24, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4184, file: !3848, line: 42, column: 34)
!4193 = !DILocation(line: 44, column: 23, scope: !4192)
!4194 = !DILocation(line: 44, column: 6, scope: !4192)
!4195 = !DILocation(line: 44, column: 20, scope: !4192)
!4196 = !DILocation(line: 45, column: 6, scope: !4192)
!4197 = !DILocation(line: 45, column: 11, scope: !4192)
!4198 = !DILocation(line: 46, column: 2, scope: !4192)
!4199 = !DILocation(line: 47, column: 21, scope: !4183)
!4200 = !DILocation(line: 0, scope: !4183)
!4201 = !DILocation(line: 50, column: 6, scope: !4183)
!4202 = !DILocation(line: 50, column: 11, scope: !4183)
!4203 = !DILocation(line: 51, column: 3, scope: !4183)
!4204 = !DILocation(line: 52, column: 3, scope: !4183)
!4205 = !DILocation(line: 58, column: 1, scope: !4176)
!4206 = distinct !DISubprogram(name: "next_free_chunk", scope: !2457, file: !2457, line: 182, type: !3933, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4207)
!4207 = !{!4208, !4209}
!4208 = !DILocalVariable(name: "h", arg: 1, scope: !4206, file: !2457, line: 182, type: !2470)
!4209 = !DILocalVariable(name: "c", arg: 2, scope: !4206, file: !2457, line: 182, type: !2475)
!4210 = !DILocation(line: 0, scope: !4206)
!4211 = !DILocation(line: 184, column: 9, scope: !4206)
!4212 = !DILocation(line: 184, column: 2, scope: !4206)
!4213 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3848, file: !3848, line: 200, type: !4214, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4216)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!252, !3851, !102}
!4216 = !{!4217, !4218, !4219, !4220, !4221, !4222, !4223}
!4217 = !DILocalVariable(name: "heap", arg: 1, scope: !4213, file: !3848, line: 200, type: !3851)
!4218 = !DILocalVariable(name: "mem", arg: 2, scope: !4213, file: !3848, line: 200, type: !102)
!4219 = !DILocalVariable(name: "h", scope: !4213, file: !3848, line: 202, type: !2470)
!4220 = !DILocalVariable(name: "c", scope: !4213, file: !3848, line: 203, type: !2475)
!4221 = !DILocalVariable(name: "addr", scope: !4213, file: !3848, line: 204, type: !252)
!4222 = !DILocalVariable(name: "chunk_base", scope: !4213, file: !3848, line: 205, type: !252)
!4223 = !DILocalVariable(name: "chunk_sz", scope: !4213, file: !3848, line: 206, type: !252)
!4224 = !DILocation(line: 0, scope: !4213)
!4225 = !DILocation(line: 202, column: 27, scope: !4213)
!4226 = !DILocation(line: 203, column: 16, scope: !4213)
!4227 = !DILocation(line: 204, column: 16, scope: !4213)
!4228 = !DILocation(line: 205, column: 31, scope: !4213)
!4229 = !DILocation(line: 205, column: 22, scope: !4213)
!4230 = !DILocation(line: 206, column: 20, scope: !4213)
!4231 = !DILocation(line: 206, column: 37, scope: !4213)
!4232 = !DILocation(line: 208, column: 26, scope: !4213)
!4233 = !DILocation(line: 208, column: 18, scope: !4213)
!4234 = !DILocation(line: 208, column: 2, scope: !4213)
!4235 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3848, file: !3848, line: 263, type: !4236, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4238)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!102, !3851, !252}
!4238 = !{!4239, !4240, !4241, !4242, !4243, !4244}
!4239 = !DILocalVariable(name: "heap", arg: 1, scope: !4235, file: !3848, line: 263, type: !3851)
!4240 = !DILocalVariable(name: "bytes", arg: 2, scope: !4235, file: !3848, line: 263, type: !252)
!4241 = !DILocalVariable(name: "h", scope: !4235, file: !3848, line: 265, type: !2470)
!4242 = !DILocalVariable(name: "mem", scope: !4235, file: !3848, line: 266, type: !102)
!4243 = !DILocalVariable(name: "chunk_sz", scope: !4235, file: !3848, line: 272, type: !3974)
!4244 = !DILocalVariable(name: "c", scope: !4235, file: !3848, line: 273, type: !2475)
!4245 = !DILocation(line: 0, scope: !4235)
!4246 = !DILocation(line: 265, column: 27, scope: !4235)
!4247 = !DILocation(line: 268, column: 12, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4235, file: !3848, line: 268, column: 6)
!4249 = !DILocation(line: 268, column: 18, scope: !4248)
!4250 = !DILocation(line: 268, column: 21, scope: !4248)
!4251 = !DILocation(line: 268, column: 6, scope: !4235)
!4252 = !DILocation(line: 272, column: 23, scope: !4235)
!4253 = !DILocation(line: 273, column: 16, scope: !4235)
!4254 = !DILocation(line: 274, column: 8, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4235, file: !3848, line: 274, column: 6)
!4256 = !DILocation(line: 274, column: 6, scope: !4235)
!4257 = !DILocation(line: 279, column: 6, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4235, file: !3848, line: 279, column: 6)
!4259 = !DILocation(line: 279, column: 23, scope: !4258)
!4260 = !DILocation(line: 279, column: 6, scope: !4235)
!4261 = !DILocation(line: 280, column: 24, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !3848, line: 279, column: 35)
!4263 = !DILocation(line: 280, column: 3, scope: !4262)
!4264 = !DILocation(line: 281, column: 3, scope: !4262)
!4265 = !DILocation(line: 282, column: 2, scope: !4262)
!4266 = !DILocation(line: 284, column: 2, scope: !4235)
!4267 = !DILocation(line: 286, column: 8, scope: !4235)
!4268 = !DILocation(line: 298, column: 2, scope: !4235)
!4269 = !DILocation(line: 299, column: 1, scope: !4235)
!4270 = distinct !DISubprogram(name: "size_too_big", scope: !2457, file: !2457, line: 256, type: !4271, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!136, !2470, !252}
!4273 = !{!4274, !4275}
!4274 = !DILocalVariable(name: "h", arg: 1, scope: !4270, file: !2457, line: 256, type: !2470)
!4275 = !DILocalVariable(name: "bytes", arg: 2, scope: !4270, file: !2457, line: 256, type: !252)
!4276 = !DILocation(line: 0, scope: !4270)
!4277 = !DILocation(line: 262, column: 16, scope: !4270)
!4278 = !DILocation(line: 262, column: 36, scope: !4270)
!4279 = !DILocation(line: 262, column: 30, scope: !4270)
!4280 = !DILocation(line: 262, column: 2, scope: !4270)
!4281 = distinct !DISubprogram(name: "alloc_chunk", scope: !3848, file: !3848, line: 211, type: !4282, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4284)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!2475, !2470, !3974}
!4284 = !{!4285, !4286, !4287, !4288, !4289, !4292, !4293, !4295, !4296, !4299}
!4285 = !DILocalVariable(name: "h", arg: 1, scope: !4281, file: !3848, line: 211, type: !2470)
!4286 = !DILocalVariable(name: "sz", arg: 2, scope: !4281, file: !3848, line: 211, type: !3974)
!4287 = !DILocalVariable(name: "bi", scope: !4281, file: !3848, line: 213, type: !107)
!4288 = !DILocalVariable(name: "b", scope: !4281, file: !3848, line: 214, type: !4037)
!4289 = !DILocalVariable(name: "first", scope: !4290, file: !3848, line: 233, type: !2475)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !3848, line: 232, column: 15)
!4291 = distinct !DILexicalBlock(scope: !4281, file: !3848, line: 232, column: 6)
!4292 = !DILocalVariable(name: "i", scope: !4290, file: !3848, line: 234, type: !107)
!4293 = !DILocalVariable(name: "c", scope: !4294, file: !3848, line: 236, type: !2475)
!4294 = distinct !DILexicalBlock(scope: !4290, file: !3848, line: 235, column: 6)
!4295 = !DILocalVariable(name: "bmask", scope: !4281, file: !3848, line: 249, type: !162)
!4296 = !DILocalVariable(name: "minbucket", scope: !4297, file: !3848, line: 252, type: !107)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !3848, line: 251, column: 19)
!4298 = distinct !DILexicalBlock(scope: !4281, file: !3848, line: 251, column: 6)
!4299 = !DILocalVariable(name: "c", scope: !4297, file: !3848, line: 253, type: !2475)
!4300 = !DILocation(line: 0, scope: !4281)
!4301 = !DILocation(line: 213, column: 11, scope: !4281)
!4302 = !DILocation(line: 232, column: 9, scope: !4291)
!4303 = !DILocation(line: 232, column: 6, scope: !4291)
!4304 = !DILocation(line: 232, column: 6, scope: !4281)
!4305 = !DILocation(line: 236, column: 21, scope: !4294)
!4306 = !DILocation(line: 0, scope: !4290)
!4307 = !DILocation(line: 0, scope: !4294)
!4308 = !DILocation(line: 237, column: 8, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4294, file: !3848, line: 237, column: 8)
!4310 = !DILocation(line: 237, column: 25, scope: !4309)
!4311 = !DILocation(line: 237, column: 8, scope: !4294)
!4312 = !DILocation(line: 238, column: 5, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !3848, line: 237, column: 32)
!4314 = !DILocation(line: 241, column: 14, scope: !4294)
!4315 = !DILocation(line: 241, column: 12, scope: !4294)
!4316 = !DILocation(line: 243, column: 12, scope: !4290)
!4317 = !DILocation(line: 243, column: 16, scope: !4290)
!4318 = distinct !{!4318, !4319, !4320}
!4319 = !DILocation(line: 235, column: 3, scope: !4290)
!4320 = !DILocation(line: 243, column: 35, scope: !4290)
!4321 = !DILocation(line: 249, column: 22, scope: !4281)
!4322 = !DILocation(line: 249, column: 39, scope: !4281)
!4323 = !DILocation(line: 249, column: 36, scope: !4281)
!4324 = !DILocation(line: 251, column: 12, scope: !4298)
!4325 = !DILocation(line: 251, column: 6, scope: !4281)
!4326 = !DILocation(line: 252, column: 19, scope: !4297)
!4327 = !DILocation(line: 0, scope: !4297)
!4328 = !DILocation(line: 253, column: 39, scope: !4297)
!4329 = !DILocation(line: 255, column: 3, scope: !4297)
!4330 = !DILocation(line: 261, column: 1, scope: !4281)
!4331 = distinct !DISubprogram(name: "split_chunks", scope: !3848, file: !3848, line: 109, type: !3967, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4332)
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338}
!4333 = !DILocalVariable(name: "h", arg: 1, scope: !4331, file: !3848, line: 109, type: !2470)
!4334 = !DILocalVariable(name: "lc", arg: 2, scope: !4331, file: !3848, line: 109, type: !2475)
!4335 = !DILocalVariable(name: "rc", arg: 3, scope: !4331, file: !3848, line: 109, type: !2475)
!4336 = !DILocalVariable(name: "sz0", scope: !4331, file: !3848, line: 114, type: !3974)
!4337 = !DILocalVariable(name: "lsz", scope: !4331, file: !3848, line: 115, type: !3974)
!4338 = !DILocalVariable(name: "rsz", scope: !4331, file: !3848, line: 116, type: !3974)
!4339 = !DILocation(line: 0, scope: !4331)
!4340 = !DILocation(line: 114, column: 18, scope: !4331)
!4341 = !DILocation(line: 115, column: 21, scope: !4331)
!4342 = !DILocation(line: 116, column: 22, scope: !4331)
!4343 = !DILocation(line: 118, column: 2, scope: !4331)
!4344 = !DILocation(line: 119, column: 2, scope: !4331)
!4345 = !DILocation(line: 120, column: 2, scope: !4331)
!4346 = !DILocation(line: 121, column: 25, scope: !4331)
!4347 = !DILocation(line: 121, column: 2, scope: !4331)
!4348 = !DILocation(line: 122, column: 1, scope: !4331)
!4349 = distinct !DISubprogram(name: "chunk_mem", scope: !3848, file: !3848, line: 24, type: !4350, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4352)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!102, !2470, !2475}
!4352 = !{!4353, !4354, !4355, !4356}
!4353 = !DILocalVariable(name: "h", arg: 1, scope: !4349, file: !3848, line: 24, type: !2470)
!4354 = !DILocalVariable(name: "c", arg: 2, scope: !4349, file: !3848, line: 24, type: !2475)
!4355 = !DILocalVariable(name: "buf", scope: !4349, file: !3848, line: 26, type: !2464)
!4356 = !DILocalVariable(name: "ret", scope: !4349, file: !3848, line: 27, type: !182)
!4357 = !DILocation(line: 0, scope: !4349)
!4358 = !DILocation(line: 26, column: 22, scope: !4349)
!4359 = !DILocation(line: 27, column: 38, scope: !4349)
!4360 = !DILocation(line: 31, column: 2, scope: !4349)
!4361 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3848, file: !3848, line: 301, type: !4362, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4364)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!102, !3851, !252, !252}
!4364 = !{!4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376}
!4365 = !DILocalVariable(name: "heap", arg: 1, scope: !4361, file: !3848, line: 301, type: !3851)
!4366 = !DILocalVariable(name: "align", arg: 2, scope: !4361, file: !3848, line: 301, type: !252)
!4367 = !DILocalVariable(name: "bytes", arg: 3, scope: !4361, file: !3848, line: 301, type: !252)
!4368 = !DILocalVariable(name: "h", scope: !4361, file: !3848, line: 303, type: !2470)
!4369 = !DILocalVariable(name: "gap", scope: !4361, file: !3848, line: 304, type: !252)
!4370 = !DILocalVariable(name: "rew", scope: !4361, file: !3848, line: 304, type: !252)
!4371 = !DILocalVariable(name: "padded_sz", scope: !4361, file: !3848, line: 335, type: !3974)
!4372 = !DILocalVariable(name: "c0", scope: !4361, file: !3848, line: 336, type: !2475)
!4373 = !DILocalVariable(name: "mem", scope: !4361, file: !3848, line: 341, type: !182)
!4374 = !DILocalVariable(name: "end", scope: !4361, file: !3848, line: 345, type: !2464)
!4375 = !DILocalVariable(name: "c", scope: !4361, file: !3848, line: 348, type: !2475)
!4376 = !DILocalVariable(name: "c_end", scope: !4361, file: !3848, line: 349, type: !2475)
!4377 = !DILocation(line: 0, scope: !4361)
!4378 = !DILocation(line: 303, column: 27, scope: !4361)
!4379 = !DILocation(line: 313, column: 16, scope: !4361)
!4380 = !DILocation(line: 313, column: 14, scope: !4361)
!4381 = !DILocation(line: 314, column: 12, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4361, file: !3848, line: 314, column: 6)
!4383 = !DILocation(line: 314, column: 6, scope: !4361)
!4384 = !DILocation(line: 315, column: 9, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4382, file: !3848, line: 314, column: 20)
!4386 = !DILocation(line: 316, column: 9, scope: !4385)
!4387 = !DILocation(line: 318, column: 13, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3848, line: 318, column: 7)
!4389 = distinct !DILexicalBlock(scope: !4382, file: !3848, line: 317, column: 9)
!4390 = !DILocation(line: 318, column: 7, scope: !4389)
!4391 = !DILocation(line: 319, column: 11, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4388, file: !3848, line: 318, column: 39)
!4393 = !DILocation(line: 319, column: 4, scope: !4392)
!4394 = !DILocation(line: 0, scope: !4382)
!4395 = !DILocation(line: 326, column: 12, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4361, file: !3848, line: 326, column: 6)
!4397 = !DILocation(line: 326, column: 17, scope: !4396)
!4398 = !DILocation(line: 326, column: 20, scope: !4396)
!4399 = !DILocation(line: 326, column: 6, scope: !4361)
!4400 = !DILocation(line: 335, column: 50, scope: !4361)
!4401 = !DILocation(line: 335, column: 58, scope: !4361)
!4402 = !DILocation(line: 335, column: 24, scope: !4361)
!4403 = !DILocation(line: 336, column: 17, scope: !4361)
!4404 = !DILocation(line: 338, column: 9, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4361, file: !3848, line: 338, column: 6)
!4406 = !DILocation(line: 338, column: 6, scope: !4361)
!4407 = !DILocation(line: 341, column: 17, scope: !4361)
!4408 = !DILocation(line: 344, column: 20, scope: !4361)
!4409 = !DILocation(line: 344, column: 8, scope: !4361)
!4410 = !DILocation(line: 344, column: 47, scope: !4361)
!4411 = !DILocation(line: 345, column: 39, scope: !4361)
!4412 = !DILocation(line: 348, column: 16, scope: !4361)
!4413 = !DILocation(line: 349, column: 26, scope: !4361)
!4414 = !DILocation(line: 349, column: 24, scope: !4361)
!4415 = !DILocation(line: 353, column: 8, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4361, file: !3848, line: 353, column: 6)
!4417 = !DILocation(line: 353, column: 6, scope: !4361)
!4418 = !DILocation(line: 354, column: 3, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4416, file: !3848, line: 353, column: 14)
!4420 = !DILocation(line: 355, column: 3, scope: !4419)
!4421 = !DILocation(line: 356, column: 2, scope: !4419)
!4422 = !DILocation(line: 359, column: 6, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4361, file: !3848, line: 359, column: 6)
!4424 = !DILocation(line: 359, column: 24, scope: !4423)
!4425 = !DILocation(line: 359, column: 6, scope: !4361)
!4426 = !DILocation(line: 360, column: 3, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4423, file: !3848, line: 359, column: 33)
!4428 = !DILocation(line: 361, column: 3, scope: !4427)
!4429 = !DILocation(line: 362, column: 2, scope: !4427)
!4430 = !DILocation(line: 364, column: 2, scope: !4361)
!4431 = !DILocation(line: 377, column: 1, scope: !4361)
!4432 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3848, file: !3848, line: 379, type: !4433, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4435)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!102, !3851, !102, !252, !252}
!4435 = !{!4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4451, !4452}
!4436 = !DILocalVariable(name: "heap", arg: 1, scope: !4432, file: !3848, line: 379, type: !3851)
!4437 = !DILocalVariable(name: "ptr", arg: 2, scope: !4432, file: !3848, line: 379, type: !102)
!4438 = !DILocalVariable(name: "align", arg: 3, scope: !4432, file: !3848, line: 380, type: !252)
!4439 = !DILocalVariable(name: "bytes", arg: 4, scope: !4432, file: !3848, line: 380, type: !252)
!4440 = !DILocalVariable(name: "h", scope: !4432, file: !3848, line: 382, type: !2470)
!4441 = !DILocalVariable(name: "c", scope: !4432, file: !3848, line: 399, type: !2475)
!4442 = !DILocalVariable(name: "rc", scope: !4432, file: !3848, line: 400, type: !2475)
!4443 = !DILocalVariable(name: "align_gap", scope: !4432, file: !3848, line: 401, type: !252)
!4444 = !DILocalVariable(name: "chunks_need", scope: !4432, file: !3848, line: 402, type: !3974)
!4445 = !DILocalVariable(name: "split_size", scope: !4446, file: !3848, line: 435, type: !3974)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !3848, line: 433, column: 61)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !3848, line: 432, column: 13)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3848, line: 409, column: 13)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3848, line: 406, column: 13)
!4450 = distinct !DILexicalBlock(scope: !4432, file: !3848, line: 404, column: 6)
!4451 = !DILocalVariable(name: "ptr2", scope: !4432, file: !3848, line: 474, type: !102)
!4452 = !DILocalVariable(name: "prev_size", scope: !4453, file: !3848, line: 477, type: !252)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !3848, line: 476, column: 20)
!4454 = distinct !DILexicalBlock(scope: !4432, file: !3848, line: 476, column: 6)
!4455 = !DILocation(line: 0, scope: !4432)
!4456 = !DILocation(line: 382, column: 27, scope: !4432)
!4457 = !DILocation(line: 385, column: 10, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4432, file: !3848, line: 385, column: 6)
!4459 = !DILocation(line: 385, column: 6, scope: !4432)
!4460 = !DILocation(line: 386, column: 10, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !3848, line: 385, column: 19)
!4462 = !DILocation(line: 386, column: 3, scope: !4461)
!4463 = !DILocation(line: 388, column: 12, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4432, file: !3848, line: 388, column: 6)
!4465 = !DILocation(line: 388, column: 6, scope: !4432)
!4466 = !DILocation(line: 389, column: 3, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4464, file: !3848, line: 388, column: 18)
!4468 = !DILocation(line: 390, column: 3, scope: !4467)
!4469 = !DILocation(line: 395, column: 6, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4432, file: !3848, line: 395, column: 6)
!4471 = !DILocation(line: 395, column: 6, scope: !4432)
!4472 = !DILocation(line: 399, column: 16, scope: !4432)
!4473 = !DILocation(line: 400, column: 17, scope: !4432)
!4474 = !DILocation(line: 401, column: 49, scope: !4432)
!4475 = !DILocation(line: 401, column: 36, scope: !4432)
!4476 = !DILocation(line: 402, column: 52, scope: !4432)
!4477 = !DILocation(line: 402, column: 26, scope: !4432)
!4478 = !DILocation(line: 404, column: 6, scope: !4450)
!4479 = !DILocation(line: 404, column: 12, scope: !4450)
!4480 = !DILocation(line: 404, column: 40, scope: !4450)
!4481 = !DILocation(line: 404, column: 31, scope: !4450)
!4482 = !DILocation(line: 404, column: 6, scope: !4432)
!4483 = !DILocation(line: 406, column: 13, scope: !4449)
!4484 = !DILocation(line: 406, column: 30, scope: !4449)
!4485 = !DILocation(line: 406, column: 13, scope: !4450)
!4486 = !DILocation(line: 409, column: 30, scope: !4448)
!4487 = !DILocation(line: 409, column: 13, scope: !4449)
!4488 = !DILocation(line: 420, column: 24, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4448, file: !3848, line: 409, column: 45)
!4490 = !DILocation(line: 420, column: 3, scope: !4489)
!4491 = !DILocation(line: 421, column: 3, scope: !4489)
!4492 = !DILocation(line: 422, column: 3, scope: !4489)
!4493 = !DILocation(line: 431, column: 3, scope: !4489)
!4494 = !DILocation(line: 432, column: 14, scope: !4447)
!4495 = !DILocation(line: 432, column: 32, scope: !4447)
!4496 = !DILocation(line: 433, column: 26, scope: !4447)
!4497 = !DILocation(line: 433, column: 24, scope: !4447)
!4498 = !DILocation(line: 433, column: 44, scope: !4447)
!4499 = !DILocation(line: 432, column: 13, scope: !4448)
!4500 = !DILocation(line: 435, column: 38, scope: !4446)
!4501 = !DILocation(line: 0, scope: !4446)
!4502 = !DILocation(line: 445, column: 3, scope: !4446)
!4503 = !DILocation(line: 447, column: 20, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4446, file: !3848, line: 447, column: 7)
!4505 = !DILocation(line: 447, column: 18, scope: !4504)
!4506 = !DILocation(line: 447, column: 7, scope: !4446)
!4507 = !DILocation(line: 448, column: 27, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4504, file: !3848, line: 447, column: 39)
!4509 = !DILocation(line: 448, column: 4, scope: !4508)
!4510 = !DILocation(line: 449, column: 4, scope: !4508)
!4511 = !DILocation(line: 450, column: 3, scope: !4508)
!4512 = !DILocation(line: 452, column: 3, scope: !4446)
!4513 = !DILocation(line: 453, column: 3, scope: !4446)
!4514 = !DILocation(line: 474, column: 15, scope: !4432)
!4515 = !DILocation(line: 476, column: 11, scope: !4454)
!4516 = !DILocation(line: 476, column: 6, scope: !4432)
!4517 = !DILocation(line: 477, column: 42, scope: !4453)
!4518 = !DILocation(line: 477, column: 22, scope: !4453)
!4519 = !DILocation(line: 477, column: 60, scope: !4453)
!4520 = !DILocation(line: 0, scope: !4453)
!4521 = !DILocation(line: 479, column: 21, scope: !4453)
!4522 = !DILocation(line: 479, column: 3, scope: !4453)
!4523 = !DILocation(line: 480, column: 3, scope: !4453)
!4524 = !DILocation(line: 481, column: 2, scope: !4453)
!4525 = !DILocation(line: 483, column: 1, scope: !4432)
!4526 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2457, file: !2457, line: 245, type: !4527, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4529)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{!252, !2470, !3974}
!4529 = !{!4530, !4531}
!4530 = !DILocalVariable(name: "h", arg: 1, scope: !4526, file: !2457, line: 245, type: !2470)
!4531 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4526, file: !2457, line: 245, type: !3974)
!4532 = !DILocation(line: 0, scope: !4526)
!4533 = !DILocation(line: 247, column: 20, scope: !4526)
!4534 = !DILocation(line: 247, column: 33, scope: !4526)
!4535 = !DILocation(line: 247, column: 2, scope: !4526)
!4536 = distinct !DISubprogram(name: "sys_heap_init", scope: !3848, file: !3848, line: 485, type: !4537, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !4539)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{null, !3851, !102, !252}
!4539 = !{!4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549}
!4540 = !DILocalVariable(name: "heap", arg: 1, scope: !4536, file: !3848, line: 485, type: !3851)
!4541 = !DILocalVariable(name: "mem", arg: 2, scope: !4536, file: !3848, line: 485, type: !102)
!4542 = !DILocalVariable(name: "bytes", arg: 3, scope: !4536, file: !3848, line: 485, type: !252)
!4543 = !DILocalVariable(name: "addr", scope: !4536, file: !3848, line: 502, type: !22)
!4544 = !DILocalVariable(name: "end", scope: !4536, file: !3848, line: 503, type: !22)
!4545 = !DILocalVariable(name: "heap_sz", scope: !4536, file: !3848, line: 504, type: !3974)
!4546 = !DILocalVariable(name: "h", scope: !4536, file: !3848, line: 509, type: !2470)
!4547 = !DILocalVariable(name: "nb_buckets", scope: !4536, file: !3848, line: 520, type: !107)
!4548 = !DILocalVariable(name: "chunk0_size", scope: !4536, file: !3848, line: 521, type: !3974)
!4549 = !DILocalVariable(name: "i", scope: !4550, file: !3848, line: 526, type: !107)
!4550 = distinct !DILexicalBlock(scope: !4536, file: !3848, line: 526, column: 2)
!4551 = !DILocation(line: 0, scope: !4536)
!4552 = !DILocation(line: 499, column: 8, scope: !4536)
!4553 = !DILocation(line: 502, column: 19, scope: !4536)
!4554 = !DILocation(line: 503, column: 18, scope: !4536)
!4555 = !DILocation(line: 504, column: 27, scope: !4536)
!4556 = !DILocation(line: 504, column: 35, scope: !4536)
!4557 = !DILocation(line: 509, column: 21, scope: !4536)
!4558 = !DILocation(line: 510, column: 8, scope: !4536)
!4559 = !DILocation(line: 510, column: 13, scope: !4536)
!4560 = !DILocation(line: 511, column: 5, scope: !4536)
!4561 = !DILocation(line: 511, column: 15, scope: !4536)
!4562 = !DILocation(line: 512, column: 5, scope: !4536)
!4563 = !DILocation(line: 512, column: 19, scope: !4536)
!4564 = !DILocation(line: 520, column: 19, scope: !4536)
!4565 = !DILocation(line: 522, column: 21, scope: !4536)
!4566 = !DILocation(line: 521, column: 56, scope: !4536)
!4567 = !DILocation(line: 521, column: 26, scope: !4536)
!4568 = !DILocation(line: 0, scope: !4550)
!4569 = !DILocation(line: 526, column: 20, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4550, file: !3848, line: 526, column: 2)
!4571 = !DILocation(line: 526, column: 2, scope: !4550)
!4572 = !DILocation(line: 531, column: 2, scope: !4536)
!4573 = !DILocation(line: 532, column: 2, scope: !4536)
!4574 = !DILocation(line: 533, column: 2, scope: !4536)
!4575 = !DILocation(line: 536, column: 41, scope: !4536)
!4576 = !DILocation(line: 536, column: 2, scope: !4536)
!4577 = !DILocation(line: 537, column: 2, scope: !4536)
!4578 = !DILocation(line: 540, column: 2, scope: !4536)
!4579 = !DILocation(line: 541, column: 2, scope: !4536)
!4580 = !DILocation(line: 542, column: 2, scope: !4536)
!4581 = !DILocation(line: 544, column: 2, scope: !4536)
!4582 = !DILocation(line: 545, column: 1, scope: !4536)
!4583 = !DILocation(line: 527, column: 17, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4570, file: !3848, line: 526, column: 39)
!4585 = !DILocation(line: 527, column: 22, scope: !4584)
!4586 = !DILocation(line: 526, column: 35, scope: !4570)
!4587 = distinct !{!4587, !4571, !4588}
!4588 = !DILocation(line: 528, column: 2, scope: !4550)
!4589 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2490, file: !2490, line: 1338, type: !4590, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !4598)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!107, !3579, !102, !123, !4592, !162}
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3545, line: 99, baseType: !4593)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3545, line: 40, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2490, baseType: !4595)
!4595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4596)
!4596 = !{!4597}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4595, file: !2490, baseType: !102, size: 32)
!4598 = !{!4599, !4600, !4601, !4602, !4603, !4604, !4608, !4609, !4610, !4612, !4617, !4662, !4665, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4677, !4678, !4679, !4683, !4686, !4688, !4691, !4692, !4693, !4698, !4704, !4707, !4711, !4717, !4721, !4724, !4726, !4729}
!4599 = !DILocalVariable(name: "out", arg: 1, scope: !4589, file: !2490, line: 1338, type: !3579)
!4600 = !DILocalVariable(name: "ctx", arg: 2, scope: !4589, file: !2490, line: 1338, type: !102)
!4601 = !DILocalVariable(name: "fp", arg: 3, scope: !4589, file: !2490, line: 1338, type: !123)
!4602 = !DILocalVariable(name: "ap", arg: 4, scope: !4589, file: !2490, line: 1339, type: !4592)
!4603 = !DILocalVariable(name: "flags", arg: 5, scope: !4589, file: !2490, line: 1339, type: !162)
!4604 = !DILocalVariable(name: "buf", scope: !4589, file: !2490, line: 1341, type: !4605)
!4605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4606)
!4606 = !{!4607}
!4607 = !DISubrange(count: 22)
!4608 = !DILocalVariable(name: "count", scope: !4589, file: !2490, line: 1342, type: !252)
!4609 = !DILocalVariable(name: "sint", scope: !4589, file: !2490, line: 1343, type: !2509)
!4610 = !DILocalVariable(name: "tagged_ap", scope: !4589, file: !2490, line: 1345, type: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4612 = !DILocalVariable(name: "rc", scope: !4613, file: !2490, line: 1377, type: !107)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2490, line: 1377, column: 4)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2490, line: 1376, column: 19)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1376, column: 7)
!4616 = distinct !DILexicalBlock(scope: !4589, file: !2490, line: 1375, column: 19)
!4617 = !DILocalVariable(name: "state", scope: !4616, file: !2490, line: 1395, type: !4618)
!4618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4589, file: !2490, line: 1392, size: 192, elements: !4619)
!4619 = !{!4620, !4630}
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4618, file: !2490, line: 1393, baseType: !4621, size: 64)
!4621 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2490, line: 166, size: 64, elements: !4622)
!4622 = !{!4623, !4624, !4625, !4627, !4629}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4621, file: !2490, line: 168, baseType: !2509, size: 64)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4621, file: !2490, line: 171, baseType: !2512, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4621, file: !2490, line: 174, baseType: !4626, size: 64)
!4626 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4621, file: !2490, line: 177, baseType: !4628, size: 64)
!4628 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4621, file: !2490, line: 180, baseType: !102, size: 32)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4618, file: !2490, line: 1394, baseType: !4631, size: 96, offset: 64)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2490, line: 189, size: 96, elements: !4632)
!4632 = !{!4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4657}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4631, file: !2490, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4631, file: !2490, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4631, file: !2490, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4631, file: !2490, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4631, file: !2490, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4631, file: !2490, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4631, file: !2490, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4631, file: !2490, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4631, file: !2490, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4631, file: !2490, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4631, file: !2490, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4631, file: !2490, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4631, file: !2490, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4631, file: !2490, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4631, file: !2490, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4631, file: !2490, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4631, file: !2490, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4631, file: !2490, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4631, file: !2490, line: 260, baseType: !134, size: 8, offset: 24)
!4652 = !DIDerivedType(tag: DW_TAG_member, scope: !4631, file: !2490, line: 262, baseType: !4653, size: 32, offset: 32)
!4653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4631, file: !2490, line: 262, size: 32, elements: !4654)
!4654 = !{!4655, !4656}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4653, file: !2490, line: 267, baseType: !107, size: 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4653, file: !2490, line: 289, baseType: !107, size: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, scope: !4631, file: !2490, line: 292, baseType: !4658, size: 32, offset: 64)
!4658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4631, file: !2490, line: 292, size: 32, elements: !4659)
!4659 = !{!4660, !4661}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4658, file: !2490, line: 297, baseType: !107, size: 32)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4658, file: !2490, line: 306, baseType: !107, size: 32)
!4662 = !DILocalVariable(name: "conv", scope: !4616, file: !2490, line: 1400, type: !4663)
!4663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4664)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 32)
!4665 = !DILocalVariable(name: "value", scope: !4616, file: !2490, line: 1401, type: !4666)
!4666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4667)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 32)
!4668 = !DILocalVariable(name: "sp", scope: !4616, file: !2490, line: 1402, type: !123)
!4669 = !DILocalVariable(name: "width", scope: !4616, file: !2490, line: 1403, type: !107)
!4670 = !DILocalVariable(name: "precision", scope: !4616, file: !2490, line: 1404, type: !107)
!4671 = !DILocalVariable(name: "bps", scope: !4616, file: !2490, line: 1405, type: !123)
!4672 = !DILocalVariable(name: "bpe", scope: !4616, file: !2490, line: 1406, type: !123)
!4673 = !DILocalVariable(name: "sign", scope: !4616, file: !2490, line: 1407, type: !125)
!4674 = !DILocalVariable(name: "arg", scope: !4675, file: !2490, line: 1432, type: !107)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2490, line: 1431, column: 24)
!4676 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1431, column: 7)
!4677 = !DILocalVariable(name: "specifier_cat", scope: !4616, file: !2490, line: 1468, type: !2489)
!4678 = !DILocalVariable(name: "length_mod", scope: !4616, file: !2490, line: 1470, type: !2497)
!4679 = !DILocalVariable(name: "rc", scope: !4680, file: !2490, line: 1575, type: !107)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2490, line: 1575, column: 4)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !2490, line: 1574, column: 43)
!4682 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1574, column: 7)
!4683 = !DILocalVariable(name: "rc", scope: !4684, file: !2490, line: 1584, type: !107)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1584, column: 4)
!4685 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1582, column: 28)
!4686 = !DILocalVariable(name: "len", scope: !4687, file: !2490, line: 1589, type: !252)
!4687 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1586, column: 13)
!4688 = !DILocalVariable(name: "len", scope: !4689, file: !2490, line: 1641, type: !252)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2490, line: 1640, column: 24)
!4690 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1640, column: 8)
!4691 = !DILocalVariable(name: "nj_len", scope: !4616, file: !2490, line: 1722, type: !252)
!4692 = !DILocalVariable(name: "pad_len", scope: !4616, file: !2490, line: 1723, type: !107)
!4693 = !DILocalVariable(name: "pad", scope: !4694, file: !2490, line: 1751, type: !125)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2490, line: 1750, column: 26)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2490, line: 1750, column: 8)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2490, line: 1747, column: 18)
!4697 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1747, column: 7)
!4698 = !DILocalVariable(name: "rc", scope: !4699, file: !2490, line: 1758, type: !107)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2490, line: 1758, column: 7)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !2490, line: 1757, column: 21)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2490, line: 1757, column: 10)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2490, line: 1756, column: 26)
!4703 = distinct !DILexicalBlock(scope: !4694, file: !2490, line: 1756, column: 9)
!4704 = !DILocalVariable(name: "rc", scope: !4705, file: !2490, line: 1765, type: !107)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2490, line: 1765, column: 6)
!4706 = distinct !DILexicalBlock(scope: !4694, file: !2490, line: 1764, column: 25)
!4707 = !DILocalVariable(name: "rc", scope: !4708, file: !2490, line: 1774, type: !107)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2490, line: 1774, column: 4)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2490, line: 1773, column: 18)
!4710 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1773, column: 7)
!4711 = !DILocalVariable(name: "rc", scope: !4712, file: !2490, line: 1819, type: !107)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2490, line: 1819, column: 5)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2490, line: 1818, column: 44)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2490, line: 1818, column: 8)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2490, line: 1817, column: 10)
!4716 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1777, column: 7)
!4717 = !DILocalVariable(name: "rc", scope: !4718, file: !2490, line: 1823, type: !107)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2490, line: 1823, column: 5)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !2490, line: 1822, column: 26)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !2490, line: 1822, column: 8)
!4721 = !DILocalVariable(name: "rc", scope: !4722, file: !2490, line: 1828, type: !107)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2490, line: 1828, column: 5)
!4723 = distinct !DILexicalBlock(scope: !4715, file: !2490, line: 1827, column: 26)
!4724 = !DILocalVariable(name: "rc", scope: !4725, file: !2490, line: 1831, type: !107)
!4725 = distinct !DILexicalBlock(scope: !4715, file: !2490, line: 1831, column: 4)
!4726 = !DILocalVariable(name: "rc", scope: !4727, file: !2490, line: 1836, type: !107)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2490, line: 1836, column: 4)
!4728 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1835, column: 21)
!4729 = !DILabel(scope: !4685, name: "prec_int_pad0", file: !2490, line: 1634)
!4730 = !DILocation(line: 0, scope: !4589)
!4731 = !DILocation(line: 1341, column: 2, scope: !4589)
!4732 = !DILocation(line: 1341, column: 7, scope: !4589)
!4733 = !DILocation(line: 1375, column: 2, scope: !4589)
!4734 = !DILocation(line: 1342, column: 9, scope: !4589)
!4735 = !DILocation(line: 1375, column: 9, scope: !4589)
!4736 = !DILocation(line: 1377, column: 4, scope: !4613)
!4737 = !DILocation(line: 0, scope: !4613)
!4738 = !DILocation(line: 1377, column: 4, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4613, file: !2490, line: 1377, column: 4)
!4740 = distinct !{!4740, !4733, !4741}
!4741 = !DILocation(line: 1839, column: 2, scope: !4589)
!4742 = !DILocation(line: 1392, column: 3, scope: !4616)
!4743 = !DILocation(line: 1395, column: 5, scope: !4616)
!4744 = !DILocation(line: 0, scope: !4616)
!4745 = !DILocation(line: 1409, column: 8, scope: !4616)
!4746 = !DILocation(line: 1414, column: 13, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1414, column: 7)
!4748 = !DILocation(line: 1414, column: 7, scope: !4616)
!4749 = !DILocation(line: 1415, column: 12, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4747, file: !2490, line: 1414, column: 25)
!4751 = !DILocation(line: 1417, column: 14, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4750, file: !2490, line: 1417, column: 8)
!4753 = !DILocation(line: 1417, column: 8, scope: !4750)
!4754 = !DILocation(line: 1418, column: 21, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !2490, line: 1417, column: 19)
!4756 = !DILocation(line: 1419, column: 13, scope: !4755)
!4757 = !DILocation(line: 1420, column: 4, scope: !4755)
!4758 = !DILocation(line: 1421, column: 20, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4747, file: !2490, line: 1421, column: 14)
!4760 = !DILocation(line: 1421, column: 14, scope: !4747)
!4761 = !DILocation(line: 1431, column: 13, scope: !4676)
!4762 = !DILocation(line: 1431, column: 7, scope: !4616)
!4763 = !DILocation(line: 1432, column: 14, scope: !4675)
!4764 = !DILocation(line: 0, scope: !4675)
!4765 = !DILocation(line: 1434, column: 12, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4675, file: !2490, line: 1434, column: 8)
!4767 = !DILocation(line: 1434, column: 8, scope: !4675)
!4768 = !DILocation(line: 1435, column: 24, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !2490, line: 1434, column: 17)
!4770 = !DILocation(line: 1436, column: 4, scope: !4769)
!4771 = !DILocation(line: 1439, column: 20, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4676, file: !2490, line: 1439, column: 14)
!4773 = !DILocation(line: 1439, column: 14, scope: !4676)
!4774 = !DILocation(line: 1469, column: 37, scope: !4616)
!4775 = !DILocation(line: 1448, column: 20, scope: !4616)
!4776 = !DILocation(line: 1449, column: 22, scope: !4616)
!4777 = !DILocation(line: 1471, column: 34, scope: !4616)
!4778 = !DILocation(line: 1478, column: 7, scope: !4616)
!4779 = !DILocation(line: 1479, column: 4, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !2490, line: 1478, column: 40)
!4781 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1478, column: 7)
!4782 = !DILocation(line: 1484, column: 19, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !2490, line: 1479, column: 24)
!4784 = !DILocation(line: 1484, column: 17, scope: !4783)
!4785 = !DILocation(line: 1485, column: 5, scope: !4783)
!4786 = !DILocation(line: 1492, column: 20, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2490, line: 1491, column: 12)
!4788 = distinct !DILexicalBlock(scope: !4783, file: !2490, line: 1487, column: 9)
!4789 = !DILocation(line: 1492, column: 18, scope: !4787)
!4790 = !DILocation(line: 1494, column: 5, scope: !4783)
!4791 = !DILocation(line: 1497, column: 23, scope: !4783)
!4792 = !DILocation(line: 1496, column: 17, scope: !4783)
!4793 = !DILocation(line: 1498, column: 5, scope: !4783)
!4794 = !DILocation(line: 1501, column: 23, scope: !4783)
!4795 = !DILocation(line: 1500, column: 17, scope: !4783)
!4796 = !DILocation(line: 1502, column: 5, scope: !4783)
!4797 = !DILocation(line: 1513, column: 23, scope: !4783)
!4798 = !DILocation(line: 1513, column: 6, scope: !4783)
!4799 = !DILocation(line: 1512, column: 17, scope: !4783)
!4800 = !DILocation(line: 1514, column: 5, scope: !4783)
!4801 = !DILocation(line: 0, scope: !4783)
!4802 = !DILocation(line: 1516, column: 8, scope: !4780)
!4803 = !DILocation(line: 1517, column: 19, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !2490, line: 1516, column: 33)
!4805 = distinct !DILexicalBlock(scope: !4780, file: !2490, line: 1516, column: 8)
!4806 = !DILocation(line: 1517, column: 17, scope: !4804)
!4807 = !DILocation(line: 1518, column: 4, scope: !4804)
!4808 = !DILocation(line: 1519, column: 19, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !2490, line: 1518, column: 39)
!4810 = distinct !DILexicalBlock(scope: !4805, file: !2490, line: 1518, column: 15)
!4811 = !DILocation(line: 1519, column: 17, scope: !4809)
!4812 = !DILocation(line: 1520, column: 4, scope: !4809)
!4813 = !DILocation(line: 1522, column: 4, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !2490, line: 1521, column: 47)
!4815 = distinct !DILexicalBlock(scope: !4781, file: !2490, line: 1521, column: 14)
!4816 = !DILocation(line: 1527, column: 19, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4814, file: !2490, line: 1522, column: 24)
!4818 = !DILocation(line: 1527, column: 17, scope: !4817)
!4819 = !DILocation(line: 1528, column: 5, scope: !4817)
!4820 = !DILocation(line: 0, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !2490, line: 1530, column: 9)
!4822 = !DILocation(line: 1540, column: 23, scope: !4817)
!4823 = !DILocation(line: 1539, column: 17, scope: !4817)
!4824 = !DILocation(line: 1542, column: 5, scope: !4817)
!4825 = !DILocation(line: 1545, column: 23, scope: !4817)
!4826 = !DILocation(line: 1544, column: 17, scope: !4817)
!4827 = !DILocation(line: 1547, column: 5, scope: !4817)
!4828 = !DILocation(line: 1551, column: 23, scope: !4817)
!4829 = !DILocation(line: 1551, column: 6, scope: !4817)
!4830 = !DILocation(line: 1550, column: 17, scope: !4817)
!4831 = !DILocation(line: 1552, column: 5, scope: !4817)
!4832 = !DILocation(line: 0, scope: !4817)
!4833 = !DILocation(line: 1554, column: 8, scope: !4814)
!4834 = !DILocation(line: 1555, column: 19, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2490, line: 1554, column: 33)
!4836 = distinct !DILexicalBlock(scope: !4814, file: !2490, line: 1554, column: 8)
!4837 = !DILocation(line: 1555, column: 17, scope: !4835)
!4838 = !DILocation(line: 1556, column: 4, scope: !4835)
!4839 = !DILocation(line: 1557, column: 19, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !2490, line: 1556, column: 39)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !2490, line: 1556, column: 15)
!4842 = !DILocation(line: 1557, column: 17, scope: !4840)
!4843 = !DILocation(line: 1558, column: 4, scope: !4840)
!4844 = !DILocation(line: 0, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !2490, line: 1560, column: 8)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2490, line: 1559, column: 45)
!4847 = distinct !DILexicalBlock(scope: !4815, file: !2490, line: 1559, column: 14)
!4848 = !DILocation(line: 1566, column: 17, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !2490, line: 1565, column: 46)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !2490, line: 1565, column: 14)
!4851 = !DILocation(line: 1566, column: 15, scope: !4849)
!4852 = !DILocation(line: 1567, column: 3, scope: !4849)
!4853 = !DILocation(line: 1574, column: 21, scope: !4682)
!4854 = !DILocation(line: 1575, column: 4, scope: !4680)
!4855 = !DILocation(line: 0, scope: !4680)
!4856 = !DILocation(line: 1575, column: 4, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4680, file: !2490, line: 1575, column: 4)
!4858 = !DILocation(line: 1582, column: 17, scope: !4616)
!4859 = !DILocation(line: 1582, column: 3, scope: !4616)
!4860 = !DILocation(line: 1584, column: 4, scope: !4684)
!4861 = !DILocation(line: 0, scope: !4684)
!4862 = !DILocation(line: 1584, column: 4, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4684, file: !2490, line: 1584, column: 4)
!4864 = !DILocation(line: 1587, column: 31, scope: !4687)
!4865 = !DILocation(line: 1591, column: 18, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4687, file: !2490, line: 1591, column: 8)
!4867 = !DILocation(line: 1591, column: 8, scope: !4687)
!4868 = !DILocation(line: 1592, column: 11, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4866, file: !2490, line: 1591, column: 24)
!4870 = !DILocation(line: 0, scope: !4687)
!4871 = !DILocation(line: 1593, column: 4, scope: !4869)
!4872 = !DILocation(line: 1594, column: 11, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4866, file: !2490, line: 1593, column: 11)
!4874 = !DILocation(line: 1604, column: 51, scope: !4685)
!4875 = !DILocation(line: 1604, column: 13, scope: !4685)
!4876 = !DILocation(line: 1604, column: 11, scope: !4685)
!4877 = !DILocation(line: 1606, column: 4, scope: !4685)
!4878 = !DILocation(line: 1609, column: 14, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1609, column: 8)
!4880 = !DILocation(line: 1609, column: 8, scope: !4685)
!4881 = !DILocation(line: 1619, column: 18, scope: !4685)
!4882 = !DILocation(line: 1620, column: 13, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1620, column: 8)
!4884 = !DILocation(line: 1620, column: 8, scope: !4685)
!4885 = !DILocation(line: 1622, column: 36, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !2490, line: 1620, column: 18)
!4887 = !DILocation(line: 1622, column: 17, scope: !4886)
!4888 = !DILocation(line: 1623, column: 4, scope: !4886)
!4889 = !DILocation(line: 1632, column: 29, scope: !4685)
!4890 = !DILocation(line: 1632, column: 10, scope: !4685)
!4891 = !DILocation(line: 1632, column: 4, scope: !4685)
!4892 = !DILocation(line: 1407, column: 8, scope: !4616)
!4893 = !DILocation(line: 0, scope: !4685)
!4894 = !DILocation(line: 1634, column: 3, scope: !4685)
!4895 = !DILocation(line: 1640, column: 18, scope: !4690)
!4896 = !DILocation(line: 1640, column: 8, scope: !4685)
!4897 = !DILocation(line: 1729, column: 13, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1729, column: 7)
!4899 = !DILocation(line: 1641, column: 22, scope: !4689)
!4900 = !DILocation(line: 0, scope: !4689)
!4901 = !DILocation(line: 1646, column: 21, scope: !4689)
!4902 = !DILocation(line: 1649, column: 13, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4689, file: !2490, line: 1649, column: 9)
!4904 = !DILocation(line: 1649, column: 9, scope: !4689)
!4905 = !DILocation(line: 1650, column: 35, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !2490, line: 1649, column: 34)
!4907 = !DILocation(line: 1650, column: 23, scope: !4906)
!4908 = !DILocation(line: 1651, column: 5, scope: !4906)
!4909 = !DILocation(line: 1660, column: 15, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1660, column: 8)
!4911 = !DILocation(line: 1660, column: 19, scope: !4910)
!4912 = !DILocation(line: 1660, column: 8, scope: !4685)
!4913 = !DILocation(line: 1661, column: 23, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4910, file: !2490, line: 1660, column: 28)
!4915 = !DILocation(line: 1661, column: 11, scope: !4914)
!4916 = !DILocation(line: 1665, column: 22, scope: !4914)
!4917 = !DILocation(line: 1666, column: 21, scope: !4914)
!4918 = !DILocation(line: 1668, column: 5, scope: !4914)
!4919 = !DILocation(line: 1677, column: 30, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2490, line: 1676, column: 49)
!4921 = distinct !DILexicalBlock(scope: !4685, file: !2490, line: 1676, column: 8)
!4922 = !DILocation(line: 1677, column: 5, scope: !4920)
!4923 = !DILocation(line: 1680, column: 4, scope: !4685)
!4924 = !DILocation(line: 0, scope: !4866)
!4925 = !DILocation(line: 1597, column: 14, scope: !4687)
!4926 = !DILocation(line: 1699, column: 11, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1699, column: 7)
!4928 = !DILocation(line: 1699, column: 7, scope: !4616)
!4929 = !DILocation(line: 1725, column: 7, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1725, column: 7)
!4931 = !DILocation(line: 1725, column: 12, scope: !4930)
!4932 = !DILocation(line: 1747, column: 13, scope: !4697)
!4933 = !DILocation(line: 1747, column: 7, scope: !4616)
!4934 = !DILocation(line: 1722, column: 24, scope: !4616)
!4935 = !DILocation(line: 1725, column: 7, scope: !4616)
!4936 = !DILocation(line: 1729, column: 7, scope: !4616)
!4937 = !DILocation(line: 1736, column: 13, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4616, file: !2490, line: 1736, column: 7)
!4939 = !DILocation(line: 1735, column: 19, scope: !4616)
!4940 = !DILocation(line: 1736, column: 7, scope: !4616)
!4941 = !DILocation(line: 1748, column: 10, scope: !4696)
!4942 = !DILocation(line: 1750, column: 15, scope: !4695)
!4943 = !DILocation(line: 1750, column: 8, scope: !4696)
!4944 = !DILocation(line: 0, scope: !4694)
!4945 = !DILocation(line: 1756, column: 15, scope: !4703)
!4946 = !DILocation(line: 1756, column: 9, scope: !4694)
!4947 = !DILocation(line: 1758, column: 7, scope: !4699)
!4948 = !DILocation(line: 0, scope: !4699)
!4949 = !DILocation(line: 1758, column: 7, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4699, file: !2490, line: 1758, column: 7)
!4951 = !DILocation(line: 1764, column: 5, scope: !4694)
!4952 = !DILocation(line: 0, scope: !4696)
!4953 = !DILocation(line: 1764, column: 20, scope: !4694)
!4954 = !DILocation(line: 1764, column: 17, scope: !4694)
!4955 = !DILocation(line: 1765, column: 6, scope: !4705)
!4956 = !DILocation(line: 0, scope: !4705)
!4957 = !DILocation(line: 1765, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4705, file: !2490, line: 1765, column: 6)
!4959 = distinct !{!4959, !4951, !4960}
!4960 = !DILocation(line: 1766, column: 5, scope: !4694)
!4961 = !DILocation(line: 1773, column: 12, scope: !4710)
!4962 = !DILocation(line: 1773, column: 7, scope: !4616)
!4963 = !DILocation(line: 1773, column: 7, scope: !4710)
!4964 = !DILocation(line: 1774, column: 4, scope: !4708)
!4965 = !DILocation(line: 0, scope: !4708)
!4966 = !DILocation(line: 1774, column: 4, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4708, file: !2490, line: 1774, column: 4)
!4968 = !DILocation(line: 1818, column: 8, scope: !4714)
!4969 = !DILocation(line: 1818, column: 27, scope: !4714)
!4970 = !DILocation(line: 1818, column: 25, scope: !4714)
!4971 = !DILocation(line: 1818, column: 8, scope: !4715)
!4972 = !DILocation(line: 1819, column: 5, scope: !4712)
!4973 = !DILocation(line: 0, scope: !4712)
!4974 = !DILocation(line: 1819, column: 5, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4712, file: !2490, line: 1819, column: 5)
!4976 = !DILocation(line: 1822, column: 14, scope: !4720)
!4977 = !DILocation(line: 1822, column: 8, scope: !4715)
!4978 = !DILocation(line: 1823, column: 5, scope: !4718)
!4979 = !DILocation(line: 0, scope: !4718)
!4980 = !DILocation(line: 1823, column: 5, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4718, file: !2490, line: 1823, column: 5)
!4982 = !DILocation(line: 1826, column: 20, scope: !4715)
!4983 = !DILocation(line: 1827, column: 4, scope: !4715)
!4984 = !DILocation(line: 0, scope: !4715)
!4985 = !DILocation(line: 1827, column: 21, scope: !4715)
!4986 = !DILocation(line: 1827, column: 18, scope: !4715)
!4987 = !DILocation(line: 1828, column: 5, scope: !4722)
!4988 = !DILocation(line: 0, scope: !4722)
!4989 = !DILocation(line: 1828, column: 5, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4722, file: !2490, line: 1828, column: 5)
!4991 = distinct !{!4991, !4983, !4992}
!4992 = !DILocation(line: 1829, column: 4, scope: !4715)
!4993 = !DILocation(line: 1831, column: 4, scope: !4725)
!4994 = !DILocation(line: 0, scope: !4725)
!4995 = !DILocation(line: 1831, column: 4, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4725, file: !2490, line: 1831, column: 4)
!4997 = !DILocation(line: 1835, column: 16, scope: !4616)
!4998 = !DILocation(line: 1835, column: 3, scope: !4616)
!4999 = !DILocation(line: 1836, column: 4, scope: !4727)
!5000 = !DILocation(line: 0, scope: !4727)
!5001 = !DILocation(line: 1836, column: 4, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4727, file: !2490, line: 1836, column: 4)
!5003 = !DILocation(line: 1837, column: 4, scope: !4728)
!5004 = distinct !{!5004, !4998, !5005}
!5005 = !DILocation(line: 1838, column: 3, scope: !4616)
!5006 = !DILocation(line: 1844, column: 1, scope: !4589)
!5007 = distinct !DISubprogram(name: "extract_conversion", scope: !2490, file: !2490, line: 642, type: !5008, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5010)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!123, !4664, !123}
!5010 = !{!5011, !5012}
!5011 = !DILocalVariable(name: "conv", arg: 1, scope: !5007, file: !2490, line: 642, type: !4664)
!5012 = !DILocalVariable(name: "sp", arg: 2, scope: !5007, file: !2490, line: 643, type: !123)
!5013 = !DILocation(line: 0, scope: !5007)
!5014 = !DILocation(line: 645, column: 10, scope: !5007)
!5015 = !DILocation(line: 653, column: 2, scope: !5007)
!5016 = !DILocation(line: 654, column: 6, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5007, file: !2490, line: 654, column: 6)
!5018 = !DILocation(line: 654, column: 10, scope: !5017)
!5019 = !DILocation(line: 654, column: 6, scope: !5007)
!5020 = !DILocation(line: 655, column: 24, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5017, file: !2490, line: 654, column: 18)
!5022 = !DILocation(line: 655, column: 19, scope: !5021)
!5023 = !DILocation(line: 656, column: 3, scope: !5021)
!5024 = !DILocation(line: 659, column: 7, scope: !5007)
!5025 = !DILocation(line: 660, column: 7, scope: !5007)
!5026 = !DILocation(line: 661, column: 7, scope: !5007)
!5027 = !DILocation(line: 662, column: 7, scope: !5007)
!5028 = !DILocation(line: 663, column: 7, scope: !5007)
!5029 = !DILocation(line: 665, column: 2, scope: !5007)
!5030 = !DILocation(line: 666, column: 1, scope: !5007)
!5031 = distinct !DISubprogram(name: "outs", scope: !2490, file: !2490, line: 1319, type: !5032, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5034)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!107, !3579, !102, !123, !123}
!5034 = !{!5035, !5036, !5037, !5038, !5039, !5040}
!5035 = !DILocalVariable(name: "out", arg: 1, scope: !5031, file: !2490, line: 1319, type: !3579)
!5036 = !DILocalVariable(name: "ctx", arg: 2, scope: !5031, file: !2490, line: 1320, type: !102)
!5037 = !DILocalVariable(name: "sp", arg: 3, scope: !5031, file: !2490, line: 1321, type: !123)
!5038 = !DILocalVariable(name: "ep", arg: 4, scope: !5031, file: !2490, line: 1322, type: !123)
!5039 = !DILocalVariable(name: "count", scope: !5031, file: !2490, line: 1324, type: !252)
!5040 = !DILocalVariable(name: "rc", scope: !5041, file: !2490, line: 1327, type: !107)
!5041 = distinct !DILexicalBlock(scope: !5031, file: !2490, line: 1326, column: 45)
!5042 = !DILocation(line: 0, scope: !5031)
!5043 = !DILocation(line: 1326, column: 2, scope: !5031)
!5044 = !DILocation(line: 1324, column: 9, scope: !5031)
!5045 = !DILocation(line: 1326, column: 13, scope: !5031)
!5046 = !DILocation(line: 1326, column: 19, scope: !5031)
!5047 = !DILocation(line: 1327, column: 21, scope: !5041)
!5048 = !DILocation(line: 1326, column: 36, scope: !5031)
!5049 = !DILocation(line: 1326, column: 39, scope: !5031)
!5050 = !DILocation(line: 1327, column: 24, scope: !5041)
!5051 = !DILocation(line: 1327, column: 16, scope: !5041)
!5052 = !DILocation(line: 1327, column: 12, scope: !5041)
!5053 = !DILocation(line: 0, scope: !5041)
!5054 = !DILocation(line: 1329, column: 10, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5041, file: !2490, line: 1329, column: 7)
!5056 = !DILocation(line: 1329, column: 7, scope: !5041)
!5057 = distinct !{!5057, !5043, !5058}
!5058 = !DILocation(line: 1333, column: 2, scope: !5031)
!5059 = !DILocation(line: 1336, column: 1, scope: !5031)
!5060 = distinct !DISubprogram(name: "encode_uint", scope: !2490, file: !2490, line: 788, type: !5061, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5063)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!256, !2512, !4664, !256, !123}
!5063 = !{!5064, !5065, !5066, !5067, !5068, !5069, !5071, !5072}
!5064 = !DILocalVariable(name: "value", arg: 1, scope: !5060, file: !2490, line: 788, type: !2512)
!5065 = !DILocalVariable(name: "conv", arg: 2, scope: !5060, file: !2490, line: 789, type: !4664)
!5066 = !DILocalVariable(name: "bps", arg: 3, scope: !5060, file: !2490, line: 790, type: !256)
!5067 = !DILocalVariable(name: "bpe", arg: 4, scope: !5060, file: !2490, line: 791, type: !123)
!5068 = !DILocalVariable(name: "upcase", scope: !5060, file: !2490, line: 793, type: !136)
!5069 = !DILocalVariable(name: "radix", scope: !5060, file: !2490, line: 794, type: !5070)
!5070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5071 = !DILocalVariable(name: "bp", scope: !5060, file: !2490, line: 795, type: !256)
!5072 = !DILocalVariable(name: "lsv", scope: !5073, file: !2490, line: 798, type: !32)
!5073 = distinct !DILexicalBlock(scope: !5060, file: !2490, line: 797, column: 5)
!5074 = !DILocation(line: 0, scope: !5060)
!5075 = !DILocation(line: 793, column: 35, scope: !5060)
!5076 = !DILocation(line: 793, column: 24, scope: !5060)
!5077 = !DILocation(line: 793, column: 16, scope: !5060)
!5078 = !DILocation(line: 794, column: 29, scope: !5060)
!5079 = !DILocation(line: 795, column: 24, scope: !5060)
!5080 = !DILocation(line: 795, column: 17, scope: !5060)
!5081 = !DILocation(line: 797, column: 2, scope: !5060)
!5082 = !DILocation(line: 802, column: 9, scope: !5073)
!5083 = !DILocation(line: 798, column: 22, scope: !5073)
!5084 = !DILocation(line: 0, scope: !5073)
!5085 = !DILocation(line: 800, column: 16, scope: !5073)
!5086 = !DILocation(line: 800, column: 11, scope: !5073)
!5087 = !DILocation(line: 800, column: 4, scope: !5073)
!5088 = !DILocation(line: 800, column: 9, scope: !5073)
!5089 = !DILocation(line: 803, column: 18, scope: !5060)
!5090 = !DILocation(line: 803, column: 24, scope: !5060)
!5091 = !DILocation(line: 803, column: 2, scope: !5073)
!5092 = distinct !{!5092, !5081, !5093}
!5093 = !DILocation(line: 803, column: 37, scope: !5060)
!5094 = !DILocation(line: 808, column: 12, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5060, file: !2490, line: 808, column: 6)
!5096 = !DILocation(line: 808, column: 6, scope: !5060)
!5097 = !DILocation(line: 809, column: 7, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !2490, line: 808, column: 23)
!5099 = !DILocation(line: 813, column: 3, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !2490, line: 811, column: 27)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !2490, line: 811, column: 14)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !2490, line: 809, column: 7)
!5103 = !DILocation(line: 0, scope: !5102)
!5104 = !DILocation(line: 818, column: 2, scope: !5060)
!5105 = distinct !DISubprogram(name: "store_count", scope: !2490, file: !2490, line: 1280, type: !5106, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5110)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{null, !5108, !102, !107}
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 32)
!5109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4631)
!5110 = !{!5111, !5112, !5113}
!5111 = !DILocalVariable(name: "conv", arg: 1, scope: !5105, file: !2490, line: 1280, type: !5108)
!5112 = !DILocalVariable(name: "dp", arg: 2, scope: !5105, file: !2490, line: 1281, type: !102)
!5113 = !DILocalVariable(name: "count", arg: 3, scope: !5105, file: !2490, line: 1282, type: !107)
!5114 = !DILocation(line: 0, scope: !5105)
!5115 = !DILocation(line: 1284, column: 38, scope: !5105)
!5116 = !DILocation(line: 1284, column: 2, scope: !5105)
!5117 = !DILocation(line: 1286, column: 4, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5105, file: !2490, line: 1284, column: 50)
!5119 = !DILocation(line: 1286, column: 14, scope: !5118)
!5120 = !DILocation(line: 1287, column: 3, scope: !5118)
!5121 = !DILocation(line: 1289, column: 24, scope: !5118)
!5122 = !DILocation(line: 1289, column: 22, scope: !5118)
!5123 = !DILocation(line: 1290, column: 3, scope: !5118)
!5124 = !DILocation(line: 1292, column: 18, scope: !5118)
!5125 = !DILocation(line: 1292, column: 4, scope: !5118)
!5126 = !DILocation(line: 1292, column: 16, scope: !5118)
!5127 = !DILocation(line: 1293, column: 3, scope: !5118)
!5128 = !DILocation(line: 1295, column: 4, scope: !5118)
!5129 = !DILocation(line: 1295, column: 15, scope: !5118)
!5130 = !DILocation(line: 1296, column: 3, scope: !5118)
!5131 = !DILocation(line: 1298, column: 22, scope: !5118)
!5132 = !DILocation(line: 1298, column: 4, scope: !5118)
!5133 = !DILocation(line: 1298, column: 20, scope: !5118)
!5134 = !DILocation(line: 1299, column: 3, scope: !5118)
!5135 = !DILocation(line: 1301, column: 21, scope: !5118)
!5136 = !DILocation(line: 1301, column: 4, scope: !5118)
!5137 = !DILocation(line: 1301, column: 19, scope: !5118)
!5138 = !DILocation(line: 1302, column: 3, scope: !5118)
!5139 = !DILocation(line: 1304, column: 4, scope: !5118)
!5140 = !DILocation(line: 1304, column: 17, scope: !5118)
!5141 = !DILocation(line: 1305, column: 3, scope: !5118)
!5142 = !DILocation(line: 1307, column: 4, scope: !5118)
!5143 = !DILocation(line: 1307, column: 20, scope: !5118)
!5144 = !DILocation(line: 1308, column: 3, scope: !5118)
!5145 = !DILocation(line: 1316, column: 1, scope: !5105)
!5146 = distinct !DISubprogram(name: "isupper", scope: !5147, file: !5147, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5148)
!5147 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5148 = !{!5149}
!5149 = !DILocalVariable(name: "a", arg: 1, scope: !5146, file: !5147, line: 16, type: !107)
!5150 = !DILocation(line: 0, scope: !5146)
!5151 = !DILocation(line: 18, column: 29, scope: !5146)
!5152 = !DILocation(line: 18, column: 45, scope: !5146)
!5153 = !DILocation(line: 18, column: 2, scope: !5146)
!5154 = distinct !DISubprogram(name: "conversion_radix", scope: !2490, file: !2490, line: 761, type: !5155, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5157)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{!252, !125}
!5157 = !{!5158}
!5158 = !DILocalVariable(name: "specifier", arg: 1, scope: !5154, file: !2490, line: 761, type: !125)
!5159 = !DILocation(line: 0, scope: !5154)
!5160 = !DILocation(line: 763, column: 2, scope: !5154)
!5161 = !DILocation(line: 770, column: 3, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5154, file: !2490, line: 763, column: 21)
!5163 = !DILocation(line: 774, column: 3, scope: !5162)
!5164 = !DILocation(line: 0, scope: !5162)
!5165 = !DILocation(line: 776, column: 1, scope: !5154)
!5166 = distinct !DISubprogram(name: "extract_flags", scope: !2490, file: !2490, line: 339, type: !5008, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5167)
!5167 = !{!5168, !5169, !5170}
!5168 = !DILocalVariable(name: "conv", arg: 1, scope: !5166, file: !2490, line: 339, type: !4664)
!5169 = !DILocalVariable(name: "sp", arg: 2, scope: !5166, file: !2490, line: 340, type: !123)
!5170 = !DILocalVariable(name: "loop", scope: !5166, file: !2490, line: 342, type: !136)
!5171 = !DILocation(line: 0, scope: !5166)
!5172 = !DILocation(line: 344, column: 2, scope: !5166)
!5173 = !DILocation(line: 345, column: 11, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5166, file: !2490, line: 344, column: 5)
!5175 = !DILocation(line: 345, column: 3, scope: !5174)
!5176 = !DILocation(line: 351, column: 4, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !2490, line: 345, column: 16)
!5178 = !DILocation(line: 354, column: 4, scope: !5177)
!5179 = !DILocation(line: 357, column: 4, scope: !5177)
!5180 = !DILocation(line: 360, column: 4, scope: !5177)
!5181 = !DILocation(line: 0, scope: !5177)
!5182 = !DILocation(line: 370, column: 12, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5166, file: !2490, line: 370, column: 6)
!5184 = !DILocation(line: 370, column: 22, scope: !5183)
!5185 = !DILocation(line: 371, column: 19, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !2490, line: 370, column: 42)
!5187 = !DILocation(line: 372, column: 2, scope: !5186)
!5188 = !DILocation(line: 376, column: 2, scope: !5166)
!5189 = distinct !DISubprogram(name: "extract_width", scope: !2490, file: !2490, line: 388, type: !5008, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5190)
!5190 = !{!5191, !5192, !5193, !5194}
!5191 = !DILocalVariable(name: "conv", arg: 1, scope: !5189, file: !2490, line: 388, type: !4664)
!5192 = !DILocalVariable(name: "sp", arg: 2, scope: !5189, file: !2490, line: 389, type: !123)
!5193 = !DILocalVariable(name: "wp", scope: !5189, file: !2490, line: 398, type: !123)
!5194 = !DILocalVariable(name: "width", scope: !5189, file: !2490, line: 399, type: !252)
!5195 = !DILocation(line: 0, scope: !5189)
!5196 = !DILocation(line: 391, column: 8, scope: !5189)
!5197 = !DILocation(line: 391, column: 22, scope: !5189)
!5198 = !DILocation(line: 393, column: 6, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5189, file: !2490, line: 393, column: 6)
!5200 = !DILocation(line: 393, column: 10, scope: !5199)
!5201 = !DILocation(line: 393, column: 6, scope: !5189)
!5202 = !DILocation(line: 394, column: 20, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5199, file: !2490, line: 393, column: 18)
!5204 = !DILocation(line: 395, column: 10, scope: !5203)
!5205 = !DILocation(line: 395, column: 3, scope: !5203)
!5206 = !DILocation(line: 399, column: 17, scope: !5189)
!5207 = !DILocation(line: 401, column: 6, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5189, file: !2490, line: 401, column: 6)
!5209 = !DILocation(line: 401, column: 9, scope: !5208)
!5210 = !DILocation(line: 401, column: 6, scope: !5189)
!5211 = !DILocation(line: 402, column: 23, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !2490, line: 401, column: 16)
!5213 = !DILocation(line: 403, column: 9, scope: !5212)
!5214 = !DILocation(line: 403, column: 21, scope: !5212)
!5215 = !DILocation(line: 405, column: 11, scope: !5212)
!5216 = !DILocation(line: 404, column: 21, scope: !5212)
!5217 = !DILocation(line: 406, column: 2, scope: !5212)
!5218 = !DILocation(line: 409, column: 1, scope: !5189)
!5219 = distinct !DISubprogram(name: "extract_prec", scope: !2490, file: !2490, line: 420, type: !5008, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5220)
!5220 = !{!5221, !5222, !5223}
!5221 = !DILocalVariable(name: "conv", arg: 1, scope: !5219, file: !2490, line: 420, type: !4664)
!5222 = !DILocalVariable(name: "sp", arg: 2, scope: !5219, file: !2490, line: 421, type: !123)
!5223 = !DILocalVariable(name: "prec", scope: !5219, file: !2490, line: 435, type: !252)
!5224 = !DILocation(line: 0, scope: !5219)
!5225 = !DILocation(line: 423, column: 24, scope: !5219)
!5226 = !DILocation(line: 423, column: 28, scope: !5219)
!5227 = !DILocation(line: 423, column: 8, scope: !5219)
!5228 = !DILocation(line: 423, column: 21, scope: !5219)
!5229 = !DILocation(line: 425, column: 6, scope: !5219)
!5230 = !DILocation(line: 428, column: 2, scope: !5219)
!5231 = !DILocation(line: 430, column: 6, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5219, file: !2490, line: 430, column: 6)
!5233 = !DILocation(line: 430, column: 10, scope: !5232)
!5234 = !DILocation(line: 430, column: 6, scope: !5219)
!5235 = !DILocation(line: 431, column: 19, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !2490, line: 430, column: 18)
!5237 = !DILocation(line: 432, column: 10, scope: !5236)
!5238 = !DILocation(line: 432, column: 3, scope: !5236)
!5239 = !DILocation(line: 435, column: 16, scope: !5219)
!5240 = !DILocation(line: 437, column: 8, scope: !5219)
!5241 = !DILocation(line: 437, column: 19, scope: !5219)
!5242 = !DILocation(line: 439, column: 10, scope: !5219)
!5243 = !DILocation(line: 438, column: 20, scope: !5219)
!5244 = !DILocation(line: 441, column: 9, scope: !5219)
!5245 = !DILocation(line: 442, column: 1, scope: !5219)
!5246 = distinct !DISubprogram(name: "extract_length", scope: !2490, file: !2490, line: 453, type: !5008, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5247)
!5247 = !{!5248, !5249}
!5248 = !DILocalVariable(name: "conv", arg: 1, scope: !5246, file: !2490, line: 453, type: !4664)
!5249 = !DILocalVariable(name: "sp", arg: 2, scope: !5246, file: !2490, line: 454, type: !123)
!5250 = !DILocation(line: 0, scope: !5246)
!5251 = !DILocation(line: 456, column: 10, scope: !5246)
!5252 = !DILocation(line: 456, column: 2, scope: !5246)
!5253 = !DILocation(line: 458, column: 8, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !2490, line: 458, column: 7)
!5255 = distinct !DILexicalBlock(scope: !5246, file: !2490, line: 456, column: 15)
!5256 = !DILocation(line: 458, column: 7, scope: !5254)
!5257 = !DILocation(line: 458, column: 13, scope: !5254)
!5258 = !DILocation(line: 0, scope: !5254)
!5259 = !DILocation(line: 458, column: 7, scope: !5255)
!5260 = !DILocation(line: 459, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5254, file: !2490, line: 458, column: 21)
!5262 = !DILocation(line: 460, column: 4, scope: !5261)
!5263 = !DILocation(line: 461, column: 3, scope: !5261)
!5264 = !DILocation(line: 462, column: 21, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5254, file: !2490, line: 461, column: 10)
!5266 = !DILocation(line: 466, column: 8, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5255, file: !2490, line: 466, column: 7)
!5268 = !DILocation(line: 466, column: 7, scope: !5267)
!5269 = !DILocation(line: 466, column: 13, scope: !5267)
!5270 = !DILocation(line: 0, scope: !5267)
!5271 = !DILocation(line: 466, column: 7, scope: !5255)
!5272 = !DILocation(line: 467, column: 21, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5267, file: !2490, line: 466, column: 21)
!5274 = !DILocation(line: 468, column: 4, scope: !5273)
!5275 = !DILocation(line: 469, column: 3, scope: !5273)
!5276 = !DILocation(line: 470, column: 21, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5267, file: !2490, line: 469, column: 10)
!5278 = !DILocation(line: 474, column: 9, scope: !5255)
!5279 = !DILocation(line: 474, column: 20, scope: !5255)
!5280 = !DILocation(line: 475, column: 3, scope: !5255)
!5281 = !DILocation(line: 476, column: 3, scope: !5255)
!5282 = !DILocation(line: 478, column: 9, scope: !5255)
!5283 = !DILocation(line: 478, column: 20, scope: !5255)
!5284 = !DILocation(line: 479, column: 3, scope: !5255)
!5285 = !DILocation(line: 480, column: 3, scope: !5255)
!5286 = !DILocation(line: 482, column: 9, scope: !5255)
!5287 = !DILocation(line: 482, column: 20, scope: !5255)
!5288 = !DILocation(line: 483, column: 3, scope: !5255)
!5289 = !DILocation(line: 484, column: 3, scope: !5255)
!5290 = !DILocation(line: 486, column: 9, scope: !5255)
!5291 = !DILocation(line: 486, column: 20, scope: !5255)
!5292 = !DILocation(line: 487, column: 3, scope: !5255)
!5293 = !DILocation(line: 492, column: 21, scope: !5255)
!5294 = !DILocation(line: 493, column: 3, scope: !5255)
!5295 = !DILocation(line: 495, column: 9, scope: !5255)
!5296 = !DILocation(line: 495, column: 20, scope: !5255)
!5297 = !DILocation(line: 496, column: 3, scope: !5255)
!5298 = !DILocation(line: 498, column: 2, scope: !5246)
!5299 = distinct !DISubprogram(name: "extract_specifier", scope: !2490, file: !2490, line: 513, type: !5008, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5300)
!5300 = !{!5301, !5302, !5303, !5304}
!5301 = !DILocalVariable(name: "conv", arg: 1, scope: !5299, file: !2490, line: 513, type: !4664)
!5302 = !DILocalVariable(name: "sp", arg: 2, scope: !5299, file: !2490, line: 514, type: !123)
!5303 = !DILocalVariable(name: "unsupported", scope: !5299, file: !2490, line: 516, type: !136)
!5304 = !DILabel(scope: !5305, name: "int_conv", file: !2490, line: 526)
!5305 = distinct !DILexicalBlock(scope: !5299, file: !2490, line: 520, column: 27)
!5306 = !DILocation(line: 0, scope: !5299)
!5307 = !DILocation(line: 518, column: 20, scope: !5299)
!5308 = !DILocation(line: 518, column: 8, scope: !5299)
!5309 = !DILocation(line: 518, column: 18, scope: !5299)
!5310 = !DILocation(line: 520, column: 2, scope: !5299)
!5311 = !DILocation(line: 525, column: 3, scope: !5305)
!5312 = !DILocation(line: 0, scope: !5305)
!5313 = !DILocation(line: 526, column: 1, scope: !5305)
!5314 = !DILocation(line: 528, column: 24, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5305, file: !2490, line: 528, column: 7)
!5316 = !DILocation(line: 528, column: 7, scope: !5305)
!5317 = !DILocation(line: 535, column: 23, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5305, file: !2490, line: 535, column: 7)
!5319 = !DILocation(line: 535, column: 7, scope: !5305)
!5320 = !DILocation(line: 536, column: 36, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5318, file: !2490, line: 535, column: 31)
!5322 = !DILocation(line: 537, column: 3, scope: !5321)
!5323 = !DILocation(line: 570, column: 9, scope: !5305)
!5324 = !DILocation(line: 570, column: 23, scope: !5305)
!5325 = !DILocation(line: 575, column: 4, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !2490, line: 573, column: 48)
!5327 = distinct !DILexicalBlock(scope: !5305, file: !2490, line: 573, column: 7)
!5328 = !DILocation(line: 603, column: 9, scope: !5305)
!5329 = !DILocation(line: 603, column: 23, scope: !5305)
!5330 = !DILocation(line: 605, column: 24, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5305, file: !2490, line: 605, column: 7)
!5332 = !DILocation(line: 605, column: 7, scope: !5305)
!5333 = !DILocation(line: 612, column: 9, scope: !5305)
!5334 = !DILocation(line: 612, column: 23, scope: !5305)
!5335 = !DILocation(line: 619, column: 24, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5305, file: !2490, line: 619, column: 7)
!5337 = !DILocation(line: 619, column: 7, scope: !5305)
!5338 = !DILocation(line: 625, column: 9, scope: !5305)
!5339 = !DILocation(line: 625, column: 17, scope: !5305)
!5340 = !DILocation(line: 626, column: 3, scope: !5305)
!5341 = !DILocation(line: 629, column: 20, scope: !5299)
!5342 = !DILocation(line: 629, column: 8, scope: !5299)
!5343 = !DILocation(line: 518, column: 23, scope: !5299)
!5344 = !DILocation(line: 631, column: 2, scope: !5299)
!5345 = distinct !DISubprogram(name: "extract_decimal", scope: !2490, file: !2490, line: 318, type: !5346, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5349)
!5346 = !DISubroutineType(types: !5347)
!5347 = !{!252, !5348}
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5349 = !{!5350, !5351, !5352}
!5350 = !DILocalVariable(name: "str", arg: 1, scope: !5345, file: !2490, line: 318, type: !5348)
!5351 = !DILocalVariable(name: "sp", scope: !5345, file: !2490, line: 320, type: !123)
!5352 = !DILocalVariable(name: "val", scope: !5345, file: !2490, line: 321, type: !252)
!5353 = !DILocation(line: 0, scope: !5345)
!5354 = !DILocation(line: 320, column: 19, scope: !5345)
!5355 = !DILocation(line: 323, column: 37, scope: !5345)
!5356 = !DILocation(line: 323, column: 17, scope: !5345)
!5357 = !DILocation(line: 323, column: 9, scope: !5345)
!5358 = !DILocation(line: 323, column: 2, scope: !5345)
!5359 = !DILocation(line: 324, column: 13, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5345, file: !2490, line: 323, column: 43)
!5361 = !DILocation(line: 324, column: 24, scope: !5360)
!5362 = !DILocation(line: 324, column: 19, scope: !5360)
!5363 = !DILocation(line: 324, column: 27, scope: !5360)
!5364 = distinct !{!5364, !5358, !5365}
!5365 = !DILocation(line: 325, column: 2, scope: !5345)
!5366 = !DILocation(line: 326, column: 7, scope: !5345)
!5367 = !DILocation(line: 327, column: 2, scope: !5345)
!5368 = distinct !DISubprogram(name: "isdigit", scope: !5147, file: !5147, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !5369)
!5369 = !{!5370}
!5370 = !DILocalVariable(name: "a", arg: 1, scope: !5368, file: !5147, line: 43, type: !107)
!5371 = !DILocation(line: 0, scope: !5368)
!5372 = !DILocation(line: 45, column: 29, scope: !5368)
!5373 = !DILocation(line: 45, column: 45, scope: !5368)
!5374 = !DILocation(line: 45, column: 2, scope: !5368)
!5375 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5376, file: !5376, line: 9, type: !3169, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !250)
!5376 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!5377 = !DILocation(line: 11, column: 1, scope: !5375)
!5378 = !{i64 2147561215, i64 2147561258, i64 2147561298}
!5379 = !DILocation(line: 12, column: 1, scope: !5375)
!5380 = !{i64 2147565442, i64 2147565485, i64 2147565525}
!5381 = !DILocation(line: 13, column: 1, scope: !5375)
!5382 = !{i64 2147565651, i64 2147565694, i64 2147565734}
!5383 = !DILocation(line: 14, column: 1, scope: !5375)
!5384 = !{i64 2147565868, i64 2147565911, i64 2147565951}
!5385 = !DILocation(line: 15, column: 1, scope: !5375)
!5386 = !{i64 2147566037, i64 2147566080, i64 2147566120}
!5387 = !DILocation(line: 16, column: 1, scope: !5375)
!5388 = !{i64 2147566200, i64 2147566243, i64 2147566283}
!5389 = !DILocation(line: 17, column: 1, scope: !5375)
!5390 = !{i64 2147566384, i64 2147566427, i64 2147566467}
!5391 = !DILocation(line: 18, column: 1, scope: !5375)
!5392 = !{i64 2147566563, i64 2147566606, i64 2147566646}
!5393 = !DILocation(line: 19, column: 1, scope: !5375)
!5394 = !{i64 2147566805, i64 2147566848, i64 2147566888}
!5395 = !DILocation(line: 20, column: 1, scope: !5375)
!5396 = !{i64 2147567040, i64 2147567083, i64 2147567123}
!5397 = !DILocation(line: 21, column: 1, scope: !5375)
!5398 = !{i64 2147567226, i64 2147567269, i64 2147567309}
!5399 = !DILocation(line: 22, column: 1, scope: !5375)
!5400 = !{i64 2147567442, i64 2147567485, i64 2147567525}
!5401 = !DILocation(line: 23, column: 1, scope: !5375)
!5402 = !{i64 2147567645, i64 2147567688, i64 2147567728}
!5403 = !DILocation(line: 24, column: 1, scope: !5375)
!5404 = !{i64 2147567848, i64 2147567891, i64 2147567931}
!5405 = !DILocation(line: 25, column: 1, scope: !5375)
!5406 = !{i64 2147568023, i64 2147568066, i64 2147568106}
!5407 = !DILocation(line: 26, column: 1, scope: !5375)
!5408 = !{i64 2147568231, i64 2147568274, i64 2147568314}
!5409 = !DILocation(line: 27, column: 1, scope: !5375)
!5410 = !{i64 2147568435, i64 2147568478, i64 2147568518}
!5411 = !DILocation(line: 28, column: 1, scope: !5375)
!5412 = !{i64 2147568628, i64 2147568671, i64 2147568711}
!5413 = !DILocation(line: 29, column: 1, scope: !5375)
!5414 = !{i64 2147568830, i64 2147568873, i64 2147568913}
!5415 = !DILocation(line: 30, column: 1, scope: !5375)
!5416 = !{i64 2147569057, i64 2147569100, i64 2147569140}
!5417 = !DILocation(line: 31, column: 1, scope: !5375)
!5418 = !{i64 2147569259, i64 2147569302, i64 2147569342}
!5419 = !DILocation(line: 32, column: 1, scope: !5375)
!5420 = !{i64 2147569474, i64 2147569517, i64 2147569557}
!5421 = !DILocation(line: 33, column: 1, scope: !5375)
!5422 = !{i64 2147569646, i64 2147569689, i64 2147569729}
!5423 = !DILocation(line: 34, column: 1, scope: !5375)
!5424 = !{i64 2147569848, i64 2147569891, i64 2147569931}
!5425 = !DILocation(line: 35, column: 1, scope: !5375)
!5426 = !{i64 2147570074, i64 2147570117, i64 2147570157}
!5427 = !DILocation(line: 36, column: 1, scope: !5375)
!5428 = !{i64 2147570273, i64 2147570316, i64 2147570356}
!5429 = !DILocation(line: 37, column: 1, scope: !5375)
!5430 = !{i64 2147570448, i64 2147570491, i64 2147570531}
!5431 = !DILocation(line: 38, column: 1, scope: !5375)
!5432 = !{i64 2147570701, i64 2147570744, i64 2147570784}
!5433 = !DILocation(line: 39, column: 1, scope: !5375)
!5434 = !{i64 2147570942, i64 2147570985, i64 2147571025}
!5435 = !DILocation(line: 40, column: 1, scope: !5375)
!5436 = !{i64 2147571177, i64 2147571220, i64 2147571260}
!5437 = !DILocation(line: 41, column: 1, scope: !5375)
!5438 = !{i64 2147571409, i64 2147571452, i64 2147571492}
!5439 = !DILocation(line: 42, column: 1, scope: !5375)
!5440 = !{i64 2147571656, i64 2147571699, i64 2147571739}
!5441 = !DILocation(line: 43, column: 1, scope: !5375)
!5442 = !{i64 2147571882, i64 2147571925, i64 2147571965}
!5443 = !DILocation(line: 44, column: 1, scope: !5375)
!5444 = !{i64 2147572108, i64 2147572151, i64 2147572191}
!5445 = !DILocation(line: 45, column: 1, scope: !5375)
!5446 = !{i64 2147572367, i64 2147572410, i64 2147572450}
!5447 = !DILocation(line: 46, column: 1, scope: !5375)
!5448 = !{i64 2147572593, i64 2147572636, i64 2147572676}
!5449 = !DILocation(line: 47, column: 1, scope: !5375)
!5450 = !{i64 2147572828, i64 2147572871, i64 2147572911}
!5451 = !DILocation(line: 48, column: 1, scope: !5375)
!5452 = !{i64 2147573066, i64 2147573109, i64 2147573149}
!5453 = !DILocation(line: 49, column: 1, scope: !5375)
!5454 = !{i64 2147573340, i64 2147573383, i64 2147573423}
!5455 = !DILocation(line: 50, column: 1, scope: !5375)
!5456 = !{i64 2147573578, i64 2147573621, i64 2147573661}
!5457 = !DILocation(line: 51, column: 1, scope: !5375)
!5458 = !{i64 2147573831, i64 2147573874, i64 2147573914}
!5459 = !DILocation(line: 52, column: 1, scope: !5375)
!5460 = !{i64 2147574075, i64 2147574118, i64 2147574158}
!5461 = !DILocation(line: 53, column: 1, scope: !5375)
!5462 = !{i64 2147578386, i64 2147578429, i64 2147578469}
!5463 = !DILocation(line: 54, column: 1, scope: !5375)
!5464 = !{i64 2147578627, i64 2147578670, i64 2147578710}
!5465 = !DILocation(line: 55, column: 1, scope: !5375)
!5466 = !{i64 2147578874, i64 2147578917, i64 2147578957}
!5467 = !DILocation(line: 56, column: 1, scope: !5375)
!5468 = !{i64 2147579109, i64 2147579152, i64 2147579192}
!5469 = !DILocation(line: 57, column: 1, scope: !5375)
!5470 = !{i64 2147579344, i64 2147579387, i64 2147579427}
!5471 = !DILocation(line: 58, column: 1, scope: !5375)
!5472 = !{i64 2147579579, i64 2147579622, i64 2147579662}
!5473 = !DILocation(line: 59, column: 1, scope: !5375)
!5474 = !{i64 2147579817, i64 2147579860, i64 2147579900}
!5475 = !DILocation(line: 60, column: 1, scope: !5375)
!5476 = !{i64 2147580058, i64 2147580101, i64 2147580141}
!5477 = !DILocation(line: 61, column: 1, scope: !5375)
!5478 = !{i64 2147580338, i64 2147580381, i64 2147580421}
!5479 = !DILocation(line: 62, column: 1, scope: !5375)
!5480 = !{i64 2147580597, i64 2147580640, i64 2147580680}
!5481 = !DILocation(line: 63, column: 1, scope: !5375)
!5482 = !{i64 2147580835, i64 2147580878, i64 2147580918}
!5483 = !DILocation(line: 64, column: 1, scope: !5375)
!5484 = !{i64 2147581085, i64 2147581128, i64 2147581168}
!5485 = !DILocation(line: 65, column: 1, scope: !5375)
!5486 = !{i64 2147581314, i64 2147581357, i64 2147581397}
!5487 = !DILocation(line: 66, column: 1, scope: !5375)
!5488 = !{i64 2147581522, i64 2147581565, i64 2147581605}
!5489 = !DILocation(line: 67, column: 1, scope: !5375)
!5490 = !{i64 2147581733, i64 2147581776, i64 2147581816}
!5491 = !DILocation(line: 68, column: 1, scope: !5375)
!5492 = !{i64 2147581968, i64 2147582011, i64 2147582051}
!5493 = !DILocation(line: 69, column: 1, scope: !5375)
!5494 = !{i64 2147582197, i64 2147582240, i64 2147582280}
!5495 = !DILocation(line: 70, column: 1, scope: !5375)
!5496 = !{i64 2147582435, i64 2147582478, i64 2147582518}
!5497 = !DILocation(line: 71, column: 1, scope: !5375)
!5498 = !{i64 2147582667, i64 2147582710, i64 2147582750}
!5499 = !DILocation(line: 72, column: 1, scope: !5375)
!5500 = !{i64 2147582893, i64 2147582936, i64 2147582976}
!5501 = !DILocation(line: 73, column: 1, scope: !5375)
!5502 = !{i64 2147583110, i64 2147583153, i64 2147583193}
!5503 = !DILocation(line: 74, column: 1, scope: !5375)
!5504 = !{i64 2147583342, i64 2147583385, i64 2147583425}
!5505 = !DILocation(line: 75, column: 1, scope: !5375)
!5506 = !{i64 2147583568, i64 2147583611, i64 2147583651}
!5507 = !DILocation(line: 76, column: 1, scope: !5375)
!5508 = !{i64 2147583782, i64 2147583825, i64 2147583865}
!5509 = !DILocation(line: 77, column: 1, scope: !5375)
!5510 = !{i64 2147584002, i64 2147584045, i64 2147584085}
!5511 = !DILocation(line: 78, column: 1, scope: !5375)
!5512 = !{i64 2147584234, i64 2147584277, i64 2147584317}
!5513 = !DILocation(line: 79, column: 1, scope: !5375)
!5514 = !{i64 2147584442, i64 2147584485, i64 2147584525}
!5515 = !DILocation(line: 80, column: 1, scope: !5375)
!5516 = !{i64 2147584647, i64 2147584690, i64 2147584730}
!5517 = !DILocation(line: 81, column: 1, scope: !5375)
!5518 = !{i64 2147584864, i64 2147584907, i64 2147584947}
!5519 = !DILocation(line: 82, column: 1, scope: !5375)
!5520 = !{i64 2147585078, i64 2147585121, i64 2147585161}
!5521 = !DILocation(line: 83, column: 1, scope: !5375)
!5522 = !{i64 2147585304, i64 2147585347, i64 2147585387}
!5523 = !DILocation(line: 84, column: 1, scope: !5375)
!5524 = !{i64 2147585524, i64 2147585567, i64 2147585607}
!5525 = !DILocation(line: 85, column: 1, scope: !5375)
!5526 = !{i64 2147585729, i64 2147585772, i64 2147585812}
!5527 = !DILocation(line: 86, column: 1, scope: !5375)
!5528 = !{i64 2147585961, i64 2147586004, i64 2147586044}
!5529 = !DILocation(line: 87, column: 1, scope: !5375)
!5530 = !{i64 2147586196, i64 2147586239, i64 2147586279}
!5531 = !DILocation(line: 88, column: 1, scope: !5375)
!5532 = !{i64 2147590507, i64 2147590550, i64 2147590590}
!5533 = !DILocation(line: 89, column: 1, scope: !5375)
!5534 = !{i64 2147590757, i64 2147590800, i64 2147590840}
!5535 = !DILocation(line: 90, column: 1, scope: !5375)
!5536 = !{i64 2147590995, i64 2147591038, i64 2147591078}
!5537 = !DILocation(line: 91, column: 1, scope: !5375)
!5538 = !{i64 2147591206, i64 2147591249, i64 2147591289}
!5539 = !DILocation(line: 92, column: 1, scope: !5375)
!5540 = !{i64 2147591423, i64 2147591466, i64 2147591506}
!5541 = !DILocation(line: 93, column: 1, scope: !5375)
!5542 = !{i64 2147591619, i64 2147591662, i64 2147591702}
!5543 = !DILocation(line: 94, column: 1, scope: !5375)
!5544 = !{i64 2147591821, i64 2147591864, i64 2147591904}
!5545 = !DILocation(line: 95, column: 1, scope: !5375)
!5546 = !{i64 2147592014, i64 2147592057, i64 2147592097}
!5547 = !DILocation(line: 96, column: 1, scope: !5375)
!5548 = !{i64 2147592222, i64 2147592265, i64 2147592305}
!5549 = !DILocation(line: 97, column: 1, scope: !5375)
!5550 = !{i64 2147592418, i64 2147592461, i64 2147592501}
!5551 = !DILocation(line: 98, column: 1, scope: !5375)
!5552 = !{i64 2147592620, i64 2147592663, i64 2147592703}
!5553 = !DILocation(line: 99, column: 1, scope: !5375)
!5554 = !{i64 2147592831, i64 2147592874, i64 2147592914}
!5555 = !DILocation(line: 100, column: 1, scope: !5375)
!5556 = !{i64 2147593030, i64 2147593073, i64 2147593113}
!5557 = !DILocation(line: 101, column: 1, scope: !5375)
!5558 = !{i64 2147593205, i64 2147593248, i64 2147593288}
!5559 = !DILocation(line: 102, column: 1, scope: !5375)
!5560 = !{i64 2147593389, i64 2147593432, i64 2147593472}
!5561 = !DILocation(line: 103, column: 1, scope: !5375)
!5562 = !{i64 2147593591, i64 2147593634, i64 2147593674}
!5563 = !DILocation(line: 104, column: 1, scope: !5375)
!5564 = !{i64 2147593790, i64 2147593833, i64 2147593873}
!5565 = !DILocation(line: 105, column: 1, scope: !5375)
!5566 = !{i64 2147593956, i64 2147593999, i64 2147594039}
!5567 = !DILocation(line: 106, column: 1, scope: !5375)
!5568 = !{i64 2147594140, i64 2147594183, i64 2147594223}
!5569 = !DILocation(line: 107, column: 1, scope: !5375)
!5570 = !{i64 2147594330, i64 2147594373, i64 2147594413}
!5571 = !DILocation(line: 108, column: 1, scope: !5375)
!5572 = !{i64 2147594514, i64 2147594557, i64 2147594597}
!5573 = !DILocation(line: 109, column: 1, scope: !5375)
!5574 = !{i64 2147594728, i64 2147594771, i64 2147594811}
!5575 = !DILocation(line: 110, column: 1, scope: !5375)
!5576 = !{i64 2147594939, i64 2147594982, i64 2147595022}
!5577 = !DILocation(line: 111, column: 1, scope: !5375)
!5578 = !{i64 2147595162, i64 2147595205, i64 2147595245}
!5579 = !DILocation(line: 112, column: 1, scope: !5375)
!5580 = !{i64 2147595346, i64 2147595389, i64 2147595429}
!5581 = !DILocation(line: 113, column: 1, scope: !5375)
!5582 = !{i64 2147595560, i64 2147595603, i64 2147595643}
!5583 = !DILocation(line: 114, column: 1, scope: !5375)
!5584 = !{i64 2147595726, i64 2147595769, i64 2147595809}
!5585 = !DILocation(line: 115, column: 1, scope: !5375)
!5586 = !{i64 2147595907, i64 2147595950, i64 2147595990}
!5587 = !DILocation(line: 116, column: 1, scope: !5375)
!5588 = !{i64 2147596100, i64 2147596143, i64 2147596183}
!5589 = !DILocation(line: 117, column: 1, scope: !5375)
!5590 = !{i64 2147596326, i64 2147596369, i64 2147596409}
!5591 = !DILocation(line: 118, column: 1, scope: !5375)
!5592 = !{i64 2147596540, i64 2147596583, i64 2147596623}
!5593 = !DILocation(line: 119, column: 1, scope: !5375)
!5594 = !{i64 2147596766, i64 2147596809, i64 2147596849}
!5595 = !DILocation(line: 120, column: 1, scope: !5375)
!5596 = !{i64 2147596983, i64 2147597026, i64 2147597066}
!5597 = !DILocation(line: 121, column: 1, scope: !5375)
!5598 = !{i64 2147597260, i64 2147597303, i64 2147597343}
!5599 = !DILocation(line: 122, column: 1, scope: !5375)
!5600 = !{i64 2147597486, i64 2147597529, i64 2147597569}
!5601 = !DILocation(line: 123, column: 1, scope: !5375)
!5602 = !{i64 2147597694, i64 2147597737, i64 2147597777}
!5603 = !DILocation(line: 124, column: 1, scope: !5375)
!5604 = !{i64 2147597890, i64 2147597933, i64 2147597973}
!5605 = !DILocation(line: 125, column: 1, scope: !5375)
!5606 = !{i64 2147598155, i64 2147598198, i64 2147598238}
!5607 = !DILocation(line: 126, column: 1, scope: !5375)
!5608 = !{i64 2147598369, i64 2147598412, i64 2147598452}
!5609 = !DILocation(line: 127, column: 1, scope: !5375)
!5610 = !{i64 2147598544, i64 2147598587, i64 2147598627}
!5611 = !DILocation(line: 128, column: 1, scope: !5375)
!5612 = !{i64 2147598798, i64 2147598841, i64 2147598881}
!5613 = !DILocation(line: 129, column: 1, scope: !5375)
!5614 = !{i64 2147598997, i64 2147599040, i64 2147599080}
!5615 = !DILocation(line: 130, column: 1, scope: !5375)
!5616 = !{i64 2147599239, i64 2147599282, i64 2147599322}
!5617 = !DILocation(line: 131, column: 1, scope: !5375)
!5618 = !{i64 2147599402, i64 2147599445, i64 2147599485}
!5619 = !DILocation(line: 132, column: 1, scope: !5375)
!5620 = !{i64 2147603650, i64 2147603693, i64 2147603733}
!5621 = !DILocation(line: 133, column: 1, scope: !5375)
!5622 = !{i64 2147603843, i64 2147603886, i64 2147603926}
!5623 = !DILocation(line: 134, column: 1, scope: !5375)
!5624 = !{i64 2147604025, i64 2147604068, i64 2147604108}
!5625 = !DILocation(line: 135, column: 1, scope: !5375)
!5626 = !{i64 2147604239, i64 2147604282, i64 2147604322}
!5627 = !DILocation(line: 136, column: 1, scope: !5375)
!5628 = !{i64 2147604450, i64 2147604493, i64 2147604533}
!5629 = !DILocation(line: 137, column: 1, scope: !5375)
!5630 = !{i64 2147604670, i64 2147604713, i64 2147604753}
!5631 = !DILocation(line: 138, column: 1, scope: !5375)
!5632 = !{i64 2147604877, i64 2147604920, i64 2147604960}
!5633 = !DILocation(line: 139, column: 1, scope: !5375)
!5634 = !{i64 2147605150, i64 2147605193, i64 2147605233}
!5635 = !DILocation(line: 140, column: 1, scope: !5375)
!5636 = !{i64 2147605398, i64 2147605441, i64 2147605481}
!5637 = !DILocation(line: 141, column: 1, scope: !5375)
!5638 = !{i64 2147605597, i64 2147605640, i64 2147605680}
!5639 = !DILocation(line: 142, column: 1, scope: !5375)
!5640 = !{i64 2147605832, i64 2147605875, i64 2147605915}
!5641 = !DILocation(line: 143, column: 1, scope: !5375)
!5642 = !{i64 2147606082, i64 2147606125, i64 2147606165}
!5643 = !DILocation(line: 144, column: 1, scope: !5375)
!5644 = !{i64 2147606284, i64 2147606327, i64 2147606367}
!5645 = !DILocation(line: 145, column: 1, scope: !5375)
!5646 = !{i64 2147606507, i64 2147606550, i64 2147606590}
!5647 = !DILocation(line: 146, column: 1, scope: !5375)
!5648 = !{i64 2147606721, i64 2147606764, i64 2147606804}
!5649 = !DILocation(line: 147, column: 1, scope: !5375)
!5650 = !{i64 2147606965, i64 2147607008, i64 2147607048}
!5651 = !DILocation(line: 148, column: 1, scope: !5375)
!5652 = !{i64 2147607194, i64 2147607237, i64 2147607277}
!5653 = !DILocation(line: 149, column: 1, scope: !5375)
!5654 = !{i64 2147607423, i64 2147607466, i64 2147607506}
!5655 = !DILocation(line: 150, column: 1, scope: !5375)
!5656 = !{i64 2147607631, i64 2147607674, i64 2147607714}
!5657 = !DILocation(line: 151, column: 1, scope: !5375)
!5658 = !{i64 2147607869, i64 2147607912, i64 2147607952}
!5659 = !DILocation(line: 152, column: 1, scope: !5375)
!5660 = !{i64 2147608095, i64 2147608138, i64 2147608178}
!5661 = !DILocation(line: 153, column: 1, scope: !5375)
!5662 = !{i64 2147608354, i64 2147608397, i64 2147608437}
!5663 = !DILocation(line: 154, column: 1, scope: !5375)
!5664 = !{i64 2147608574, i64 2147608617, i64 2147608657}
!5665 = !DILocation(line: 155, column: 1, scope: !5375)
!5666 = !{i64 2147608806, i64 2147608849, i64 2147608889}
!5667 = !DILocation(line: 156, column: 1, scope: !5375)
!5668 = !{i64 2147609047, i64 2147609090, i64 2147609130}
!5669 = !DILocation(line: 157, column: 1, scope: !5375)
!5670 = !{i64 2147609288, i64 2147609331, i64 2147609371}
!5671 = !DILocation(line: 158, column: 1, scope: !5375)
!5672 = !{i64 2147609511, i64 2147609554, i64 2147609594}
!5673 = !DILocation(line: 159, column: 1, scope: !5375)
!5674 = !{i64 2147609728, i64 2147609771, i64 2147609811}
!5675 = !DILocation(line: 160, column: 1, scope: !5375)
!5676 = !{i64 2147609969, i64 2147610012, i64 2147610052}
!5677 = !DILocation(line: 161, column: 1, scope: !5375)
!5678 = !{i64 2147610156, i64 2147610199, i64 2147610239}
!5679 = !DILocation(line: 162, column: 1, scope: !5375)
!5680 = !{i64 2147610343, i64 2147610386, i64 2147610426}
!5681 = !DILocation(line: 163, column: 1, scope: !5375)
!5682 = !{i64 2147610506, i64 2147610549, i64 2147610589}
!5683 = !DILocation(line: 164, column: 1, scope: !5375)
!5684 = !{i64 2147610765, i64 2147610808, i64 2147610848}
!5685 = !DILocation(line: 165, column: 1, scope: !5375)
!5686 = !{i64 2147610988, i64 2147611031, i64 2147611071}
!5687 = !DILocation(line: 166, column: 1, scope: !5375)
!5688 = !{i64 2147611217, i64 2147611260, i64 2147611300}
!5689 = !DILocation(line: 167, column: 1, scope: !5375)
!5690 = !{i64 2147611413, i64 2147611456, i64 2147611496}
!5691 = !DILocation(line: 168, column: 1, scope: !5375)
!5692 = !{i64 2147611625, i64 2147611668, i64 2147611708}
!5693 = !DILocation(line: 169, column: 1, scope: !5375)
!5694 = !{i64 2147611846, i64 2147611889, i64 2147611929}
!5695 = !DILocation(line: 170, column: 1, scope: !5375)
!5696 = !{i64 2147612060, i64 2147612103, i64 2147612143}
!5697 = !DILocation(line: 171, column: 1, scope: !5375)
!5698 = !{i64 2147616311, i64 2147616354, i64 2147616394}
!5699 = !DILocation(line: 172, column: 1, scope: !5375)
!5700 = !{i64 2147616510, i64 2147616553, i64 2147616593}
!5701 = !DILocation(line: 173, column: 1, scope: !5375)
!5702 = !{i64 2147616715, i64 2147616758, i64 2147616798}
!5703 = !DILocation(line: 174, column: 1, scope: !5375)
!5704 = !{i64 2147616935, i64 2147616978, i64 2147617018}
!5705 = !DILocation(line: 175, column: 1, scope: !5375)
!5706 = !{i64 2147617136, i64 2147617179, i64 2147617219}
!5707 = !DILocation(line: 176, column: 1, scope: !5375)
!5708 = !{i64 2147617335, i64 2147617378, i64 2147617418}
!5709 = !DILocation(line: 177, column: 1, scope: !5375)
!5710 = !{i64 2147617540, i64 2147617583, i64 2147617623}
!5711 = !DILocation(line: 178, column: 1, scope: !5375)
!5712 = !{i64 2147617709, i64 2147617752, i64 2147617792}
!5713 = !DILocation(line: 179, column: 1, scope: !5375)
!5714 = !{i64 2147617893, i64 2147617936, i64 2147617976}
!5715 = !DILocation(line: 180, column: 1, scope: !5375)
!5716 = !{i64 2147618077, i64 2147618120, i64 2147618160}
!5717 = !DILocation(line: 181, column: 1, scope: !5375)
!5718 = !{i64 2147618264, i64 2147618307, i64 2147618347}
!5719 = !DILocation(line: 182, column: 1, scope: !5375)
!5720 = !{i64 2147618448, i64 2147618491, i64 2147618531}
!5721 = !DILocation(line: 183, column: 1, scope: !5375)
!5722 = !{i64 2147618686, i64 2147618729, i64 2147618769}
!5723 = !DILocation(line: 184, column: 1, scope: !5375)
!5724 = !{i64 2147618916, i64 2147618959, i64 2147618999}
!5725 = !DILocation(line: 185, column: 1, scope: !5375)
!5726 = !{i64 2147619145, i64 2147619188, i64 2147619228}
!5727 = !DILocation(line: 186, column: 1, scope: !5375)
!5728 = !{i64 2147619332, i64 2147619375, i64 2147619415}
!5729 = !DILocation(line: 187, column: 1, scope: !5375)
!5730 = !{i64 2147619528, i64 2147619571, i64 2147619611}
!5731 = !DILocation(line: 188, column: 1, scope: !5375)
!5732 = !{i64 2147619736, i64 2147619779, i64 2147619819}
!5733 = !DILocation(line: 189, column: 1, scope: !5375)
!5734 = !{i64 2147619948, i64 2147619991, i64 2147620031}
!5735 = !DILocation(line: 190, column: 1, scope: !5375)
!5736 = !{i64 2147620147, i64 2147620190, i64 2147620230}
!5737 = !DILocation(line: 191, column: 1, scope: !5375)
!5738 = !{i64 2147620385, i64 2147620428, i64 2147620468}
!5739 = !DILocation(line: 192, column: 1, scope: !5375)
!5740 = !{i64 2147620581, i64 2147620624, i64 2147620664}
!5741 = !DILocation(line: 193, column: 1, scope: !5375)
!5742 = !{i64 2147620783, i64 2147620826, i64 2147620866}
!5743 = !DILocation(line: 194, column: 1, scope: !5375)
!5744 = !{i64 2147620976, i64 2147621019, i64 2147621059}
!5745 = !DILocation(line: 195, column: 1, scope: !5375)
!5746 = !{i64 2147621210, i64 2147621253, i64 2147621293}
!5747 = !DILocation(line: 196, column: 1, scope: !5375)
!5748 = !{i64 2147621373, i64 2147621416, i64 2147621456}
!5749 = !DILocation(line: 197, column: 1, scope: !5375)
!5750 = !{i64 2147621612, i64 2147621655, i64 2147621695}
!5751 = !DILocation(line: 198, column: 1, scope: !5375)
!5752 = !{i64 2147621851, i64 2147621894, i64 2147621934}
!5753 = !DILocation(line: 199, column: 1, scope: !5375)
!5754 = !{i64 2147622087, i64 2147622130, i64 2147622170}
!5755 = !DILocation(line: 200, column: 1, scope: !5375)
!5756 = !{i64 2147622317, i64 2147622360, i64 2147622400}
!5757 = !DILocation(line: 201, column: 1, scope: !5375)
!5758 = !{i64 2147622504, i64 2147622547, i64 2147622587}
!5759 = !DILocation(line: 202, column: 1, scope: !5375)
!5760 = !{i64 2147622703, i64 2147622746, i64 2147622786}
!5761 = !DILocation(line: 203, column: 1, scope: !5375)
!5762 = !{i64 2147622974, i64 2147623017, i64 2147623057}
!5763 = !DILocation(line: 204, column: 1, scope: !5375)
!5764 = !{i64 2147623149, i64 2147623192, i64 2147623232}
!5765 = !DILocation(line: 205, column: 1, scope: !5375)
!5766 = !{i64 2147623383, i64 2147623426, i64 2147623466}
!5767 = !DILocation(line: 206, column: 1, scope: !5375)
!5768 = !{i64 2147623591, i64 2147623634, i64 2147623674}
!5769 = !DILocation(line: 207, column: 1, scope: !5375)
!5770 = !{i64 2147623809, i64 2147623852, i64 2147623892}
!5771 = !DILocation(line: 208, column: 1, scope: !5375)
!5772 = !{i64 2147623999, i64 2147624042, i64 2147624082}
!5773 = !DILocation(line: 209, column: 1, scope: !5375)
!5774 = !{i64 2147624195, i64 2147624238, i64 2147624278}
!5775 = !DILocation(line: 210, column: 1, scope: !5375)
!5776 = !{i64 2147624401, i64 2147624444, i64 2147624484}
!5777 = !DILocation(line: 211, column: 1, scope: !5375)
!5778 = !{i64 2147624606, i64 2147624649, i64 2147624689}
!5779 = !DILocation(line: 212, column: 1, scope: !5375)
!5780 = !{i64 2147624832, i64 2147624875, i64 2147624915}
!5781 = !DILocation(line: 213, column: 1, scope: !5375)
!5782 = !{i64 2147625064, i64 2147625107, i64 2147625147}
!5783 = !DILocation(line: 214, column: 1, scope: !5375)
!5784 = !{i64 2147625248, i64 2147625291, i64 2147625331}
!5785 = !DILocation(line: 215, column: 1, scope: !5375)
!5786 = !{i64 2147629518, i64 2147629561, i64 2147629601}
!5787 = !DILocation(line: 216, column: 1, scope: !5375)
!5788 = !{i64 2147629702, i64 2147629745, i64 2147629785}
!5789 = !DILocation(line: 217, column: 1, scope: !5375)
!5790 = !{i64 2147629928, i64 2147629971, i64 2147630011}
!5791 = !DILocation(line: 218, column: 1, scope: !5375)
!5792 = !{i64 2147630154, i64 2147630197, i64 2147630237}
!5793 = !DILocation(line: 219, column: 1, scope: !5375)
!5794 = !{i64 2147630380, i64 2147630423, i64 2147630463}
!5795 = !DILocation(line: 220, column: 1, scope: !5375)
!5796 = !{i64 2147630606, i64 2147630649, i64 2147630689}
!5797 = !DILocation(line: 221, column: 1, scope: !5375)
!5798 = !{i64 2147630832, i64 2147630875, i64 2147630915}
!5799 = !DILocation(line: 222, column: 1, scope: !5375)
!5800 = !{i64 2147631064, i64 2147631107, i64 2147631147}
!5801 = !DILocation(line: 223, column: 1, scope: !5375)
!5802 = !{i64 2147631302, i64 2147631345, i64 2147631385}
!5803 = !DILocation(line: 224, column: 1, scope: !5375)
!5804 = !{i64 2147631522, i64 2147631565, i64 2147631605}
!5805 = !DILocation(line: 225, column: 1, scope: !5375)
!5806 = !{i64 2147631766, i64 2147631809, i64 2147631849}
!5807 = !DILocation(line: 226, column: 1, scope: !5375)
!5808 = !{i64 2147632007, i64 2147632050, i64 2147632090}
!5809 = !DILocation(line: 227, column: 1, scope: !5375)
!5810 = !{i64 2147632242, i64 2147632285, i64 2147632325}
!5811 = !DILocation(line: 228, column: 1, scope: !5375)
!5812 = !{i64 2147632474, i64 2147632517, i64 2147632557}
!5813 = !DILocation(line: 229, column: 1, scope: !5375)
!5814 = !{i64 2147632676, i64 2147632719, i64 2147632759}
!5815 = !DILocation(line: 230, column: 1, scope: !5375)
!5816 = !{i64 2147632926, i64 2147632969, i64 2147633009}
!5817 = !DILocation(line: 231, column: 1, scope: !5375)
!5818 = !{i64 2147633164, i64 2147633207, i64 2147633247}
!5819 = !DILocation(line: 232, column: 1, scope: !5375)
!5820 = !{i64 2147633348, i64 2147633391, i64 2147633431}
!5821 = !DILocation(line: 233, column: 1, scope: !5375)
!5822 = !{i64 2147633572, i64 2147633615, i64 2147633655}
!5823 = !DILocation(line: 234, column: 1, scope: !5375)
!5824 = !{i64 2147633810, i64 2147633853, i64 2147633893}
!5825 = !DILocation(line: 235, column: 1, scope: !5375)
!5826 = !{i64 2147634048, i64 2147634091, i64 2147634131}
!5827 = !DILocation(line: 236, column: 1, scope: !5375)
!5828 = !{i64 2147634241, i64 2147634284, i64 2147634324}
!5829 = !DILocation(line: 237, column: 1, scope: !5375)
!5830 = !{i64 2147634494, i64 2147634537, i64 2147634577}
!5831 = !DILocation(line: 238, column: 1, scope: !5375)
!5832 = !{i64 2147634708, i64 2147634751, i64 2147634791}
!5833 = !DILocation(line: 239, column: 1, scope: !5375)
!5834 = !{i64 2147634916, i64 2147634959, i64 2147634999}
!5835 = !DILocation(line: 240, column: 1, scope: !5375)
!5836 = !{i64 2147635106, i64 2147635149, i64 2147635189}
!5837 = !DILocation(line: 241, column: 1, scope: !5375)
!5838 = !{i64 2147635320, i64 2147635363, i64 2147635403}
!5839 = !DILocation(line: 242, column: 1, scope: !5375)
!5840 = !{i64 2147635582, i64 2147635625, i64 2147635665}
!5841 = !DILocation(line: 243, column: 1, scope: !5375)
!5842 = !{i64 2147635793, i64 2147635836, i64 2147635876}
!5843 = !DILocation(line: 244, column: 1, scope: !5375)
!5844 = !{i64 2147636037, i64 2147636080, i64 2147636120}
!5845 = !DILocation(line: 245, column: 1, scope: !5375)
!5846 = !{i64 2147636248, i64 2147636291, i64 2147636331}
!5847 = !DILocation(line: 246, column: 1, scope: !5375)
!5848 = !{i64 2147636477, i64 2147636520, i64 2147636560}
!5849 = !DILocation(line: 247, column: 1, scope: !5375)
!5850 = !{i64 2147636742, i64 2147636785, i64 2147636825}
!5851 = !DILocation(line: 248, column: 1, scope: !5375)
!5852 = !{i64 2147636947, i64 2147636990, i64 2147637030}
!5853 = !DILocation(line: 249, column: 1, scope: !5375)
!5854 = !{i64 2147637143, i64 2147637186, i64 2147637226}
!5855 = !DILocation(line: 250, column: 1, scope: !5375)
!5856 = !{i64 2147637366, i64 2147637409, i64 2147637449}
!5857 = !DILocation(line: 251, column: 1, scope: !5375)
!5858 = !{i64 2147637529, i64 2147637572, i64 2147637612}
!5859 = !DILocation(line: 252, column: 1, scope: !5375)
!5860 = !{i64 2147637734, i64 2147637777, i64 2147637817}
!5861 = !DILocation(line: 253, column: 1, scope: !5375)
!5862 = !{i64 2147642015, i64 2147642058, i64 2147642098}
!5863 = !DILocation(line: 254, column: 1, scope: !5375)
!5864 = !{i64 2147642229, i64 2147642272, i64 2147642312}
!5865 = !DILocation(line: 255, column: 1, scope: !5375)
!5866 = !{i64 2147642443, i64 2147642486, i64 2147642526}
!5867 = !DILocation(line: 256, column: 1, scope: !5375)
!5868 = !{i64 2147642654, i64 2147642697, i64 2147642737}
!5869 = !DILocation(line: 257, column: 1, scope: !5375)
!5870 = !{i64 2147642847, i64 2147642890, i64 2147642930}
!5871 = !DILocation(line: 258, column: 1, scope: !5375)
!5872 = !{i64 2147643046, i64 2147643089, i64 2147643129}
!5873 = !DILocation(line: 259, column: 1, scope: !5375)
!5874 = !{i64 2147643218, i64 2147643261, i64 2147643301}
!5875 = !DILocation(line: 260, column: 1, scope: !5375)
!5876 = !{i64 2147643411, i64 2147643454, i64 2147643494}
!5877 = !DILocation(line: 261, column: 1, scope: !5375)
!5878 = !{i64 2147643607, i64 2147643650, i64 2147643690}
!5879 = !DILocation(line: 262, column: 1, scope: !5375)
!5880 = !{i64 2147643834, i64 2147643877, i64 2147643917}
!5881 = !DILocation(line: 263, column: 1, scope: !5375)
!5882 = !{i64 2147644051, i64 2147644094, i64 2147644134}
!5883 = !DILocation(line: 264, column: 1, scope: !5375)
!5884 = !{i64 2147644343, i64 2147644386, i64 2147644426}
!5885 = !DILocation(line: 265, column: 1, scope: !5375)
!5886 = !{i64 2147644575, i64 2147644618, i64 2147644658}
!5887 = !DILocation(line: 266, column: 1, scope: !5375)
!5888 = !{i64 2147644792, i64 2147644835, i64 2147644875}
!5889 = !DILocation(line: 267, column: 1, scope: !5375)
!5890 = !{i64 2147644999, i64 2147645042, i64 2147645082}
!5891 = !DILocation(line: 268, column: 1, scope: !5375)
!5892 = !{i64 2147645200, i64 2147645243, i64 2147645283}
!5893 = !DILocation(line: 269, column: 1, scope: !5375)
!5894 = !{i64 2147645432, i64 2147645475, i64 2147645515}
!5895 = !DILocation(line: 270, column: 1, scope: !5375)
!5896 = !{i64 2147645640, i64 2147645683, i64 2147645723}
!5897 = !DILocation(line: 271, column: 1, scope: !5375)
!5898 = !{i64 2147645830, i64 2147645873, i64 2147645913}
!5899 = !DILocation(line: 272, column: 1, scope: !5375)
!5900 = !{i64 2147646056, i64 2147646099, i64 2147646139}
!5901 = !DILocation(line: 273, column: 1, scope: !5375)
!5902 = !{i64 2147646245, i64 2147646288, i64 2147646328}
!5903 = !DILocation(line: 274, column: 1, scope: !5375)
!5904 = !{i64 2147646516, i64 2147646559, i64 2147646599}
!5905 = !DILocation(line: 275, column: 1, scope: !5375)
!5906 = !{i64 2147646736, i64 2147646779, i64 2147646819}
!5907 = !DILocation(line: 276, column: 1, scope: !5375)
!5908 = !{i64 2147646989, i64 2147647032, i64 2147647072}
!5909 = !DILocation(line: 277, column: 1, scope: !5375)
!5910 = !{i64 2147647197, i64 2147647240, i64 2147647280}
!5911 = !DILocation(line: 278, column: 1, scope: !5375)
!5912 = !{i64 2147647429, i64 2147647472, i64 2147647512}
!5913 = !DILocation(line: 279, column: 1, scope: !5375)
!5914 = !{i64 2147647640, i64 2147647683, i64 2147647723}
!5915 = !DILocation(line: 280, column: 1, scope: !5375)
!5916 = !{i64 2147647830, i64 2147647873, i64 2147647913}
!5917 = !DILocation(line: 281, column: 1, scope: !5375)
!5918 = !{i64 2147648044, i64 2147648087, i64 2147648127}
!5919 = !DILocation(line: 282, column: 1, scope: !5375)
!5920 = !{i64 2147648243, i64 2147648286, i64 2147648326}
!5921 = !DILocation(line: 283, column: 1, scope: !5375)
!5922 = !{i64 2147648430, i64 2147648473, i64 2147648513}
!5923 = !DILocation(line: 284, column: 1, scope: !5375)
!5924 = !{i64 2147648638, i64 2147648681, i64 2147648721}
!5925 = !DILocation(line: 285, column: 1, scope: !5375)
!5926 = !{i64 2147648867, i64 2147648910, i64 2147648950}
!5927 = !DILocation(line: 286, column: 1, scope: !5375)
!5928 = !{i64 2147649069, i64 2147649112, i64 2147649152}
!5929 = !DILocation(line: 287, column: 1, scope: !5375)
!5930 = !{i64 2147649268, i64 2147649311, i64 2147649351}
!5931 = !DILocation(line: 288, column: 1, scope: !5375)
!5932 = !{i64 2147649485, i64 2147649528, i64 2147649568}
!5933 = !DILocation(line: 290, column: 1, scope: !5375)
!5934 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !291, file: !291, line: 30, type: !298, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5935)
!5935 = !{!5936, !5937}
!5936 = !DILocalVariable(name: "arg", arg: 1, scope: !5934, file: !291, line: 30, type: !300)
!5937 = !DILocalVariable(name: "key", scope: !5934, file: !291, line: 32, type: !162)
!5938 = !DILocation(line: 0, scope: !5934)
!5939 = !DILocation(line: 37, column: 2, scope: !5934)
!5940 = !DILocation(line: 38, column: 2, scope: !5934)
!5941 = !DILocation(line: 55, column: 2, scope: !5942, inlinedAt: !5949)
!5942 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5946)
!5943 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!32}
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "key", scope: !5942, file: !5943, line: 44, type: !32)
!5948 = !DILocalVariable(name: "tmp", scope: !5942, file: !5943, line: 53, type: !32)
!5949 = distinct !DILocation(line: 40, column: 8, scope: !5934)
!5950 = !{i64 1932698}
!5951 = !DILocation(line: 0, scope: !5942, inlinedAt: !5949)
!5952 = !DILocalVariable(name: "key", arg: 1, scope: !5953, file: !5943, line: 84, type: !32)
!5953 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !32}
!5956 = !{!5952}
!5957 = !DILocation(line: 0, scope: !5953, inlinedAt: !5958)
!5958 = distinct !DILocation(line: 47, column: 2, scope: !5934)
!5959 = !DILocation(line: 95, column: 2, scope: !5953, inlinedAt: !5958)
!5960 = !{i64 1933515}
!5961 = !DILocation(line: 51, column: 18, scope: !5934)
!5962 = !DILocation(line: 53, column: 2, scope: !5934)
!5963 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5964, file: !5964, line: 1609, type: !3169, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5964 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5965 = !DILocation(line: 1611, column: 3, scope: !5963)
!5966 = !DILocation(line: 1612, column: 1, scope: !5963)
!5967 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5964, file: !5964, line: 1629, type: !3169, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5968 = !DILocation(line: 1631, column: 3, scope: !5967)
!5969 = !DILocation(line: 1632, column: 1, scope: !5967)
!5970 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !321, file: !321, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !318, retainedNodes: !5971)
!5971 = !{!5972}
!5972 = !DILocalVariable(name: "dev", arg: 1, scope: !5970, file: !321, line: 26, type: !329)
!5973 = !DILocation(line: 0, scope: !5970)
!5974 = !DILocation(line: 68, column: 2, scope: !5970)
!5975 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5976, file: !5976, line: 57, type: !5977, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6023)
!5976 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !32, !5979}
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 32)
!5980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5981)
!5981 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2646, line: 141, baseType: !5982)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2646, line: 97, size: 256, elements: !5983)
!5983 = !{!5984}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5982, file: !2646, line: 107, baseType: !5985, size: 256)
!5985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2646, line: 98, size: 256, elements: !5986)
!5986 = !{!5987, !5992, !5997, !6002, !6007, !6012, !6017, !6022}
!5987 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 99, baseType: !5988, size: 32)
!5988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 99, size: 32, elements: !5989)
!5989 = !{!5990, !5991}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5988, file: !2646, line: 99, baseType: !162, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5988, file: !2646, line: 99, baseType: !162, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 100, baseType: !5993, size: 32, offset: 32)
!5993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 100, size: 32, elements: !5994)
!5994 = !{!5995, !5996}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5993, file: !2646, line: 100, baseType: !162, size: 32)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5993, file: !2646, line: 100, baseType: !162, size: 32)
!5997 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 101, baseType: !5998, size: 32, offset: 64)
!5998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 101, size: 32, elements: !5999)
!5999 = !{!6000, !6001}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5998, file: !2646, line: 101, baseType: !162, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5998, file: !2646, line: 101, baseType: !162, size: 32)
!6002 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 102, baseType: !6003, size: 32, offset: 96)
!6003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 102, size: 32, elements: !6004)
!6004 = !{!6005, !6006}
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6003, file: !2646, line: 102, baseType: !162, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6003, file: !2646, line: 102, baseType: !162, size: 32)
!6007 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 103, baseType: !6008, size: 32, offset: 128)
!6008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 103, size: 32, elements: !6009)
!6009 = !{!6010, !6011}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6008, file: !2646, line: 103, baseType: !162, size: 32)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6008, file: !2646, line: 103, baseType: !162, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 104, baseType: !6013, size: 32, offset: 160)
!6013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 104, size: 32, elements: !6014)
!6014 = !{!6015, !6016}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6013, file: !2646, line: 104, baseType: !162, size: 32)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6013, file: !2646, line: 104, baseType: !162, size: 32)
!6017 = !DIDerivedType(tag: DW_TAG_member, scope: !5985, file: !2646, line: 105, baseType: !6018, size: 32, offset: 192)
!6018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5985, file: !2646, line: 105, size: 32, elements: !6019)
!6019 = !{!6020, !6021}
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6018, file: !2646, line: 105, baseType: !162, size: 32)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6018, file: !2646, line: 105, baseType: !162, size: 32)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5985, file: !2646, line: 106, baseType: !162, size: 32, offset: 224)
!6023 = !{!6024, !6025}
!6024 = !DILocalVariable(name: "reason", arg: 1, scope: !5975, file: !5976, line: 57, type: !32)
!6025 = !DILocalVariable(name: "esf", arg: 2, scope: !5975, file: !5976, line: 57, type: !5979)
!6026 = !DILocation(line: 0, scope: !5975)
!6027 = !DILocation(line: 63, column: 2, scope: !5975)
!6028 = !DILocation(line: 64, column: 1, scope: !5975)
!6029 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5976, file: !5976, line: 82, type: !6030, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6045)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{null, !5979, !6032}
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 32)
!6033 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6035)
!6035 = !{!6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6034, file: !428, line: 26, baseType: !162, size: 32)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6034, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6034, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6034, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6034, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6034, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6034, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6034, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6034, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6045 = !{!6046, !6047, !6048}
!6046 = !DILocalVariable(name: "esf", arg: 1, scope: !6029, file: !5976, line: 82, type: !5979)
!6047 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6029, file: !5976, line: 82, type: !6032)
!6048 = !DILocalVariable(name: "reason", scope: !6029, file: !5976, line: 88, type: !32)
!6049 = !DILocation(line: 0, scope: !6029)
!6050 = !DILocation(line: 88, column: 35, scope: !6029)
!6051 = !DILocation(line: 108, column: 2, scope: !6029)
!6052 = !DILocation(line: 131, column: 1, scope: !6029)
!6053 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5976, file: !5976, line: 133, type: !6054, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !6056)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !102}
!6056 = !{!6057, !6058, !6059}
!6057 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6053, file: !5976, line: 133, type: !102)
!6058 = !DILocalVariable(name: "ssf_contents", scope: !6053, file: !5976, line: 135, type: !831)
!6059 = !DILocalVariable(name: "oops_esf", scope: !6053, file: !5976, line: 136, type: !5981)
!6060 = !DILocation(line: 0, scope: !6053)
!6061 = !DILocation(line: 136, column: 2, scope: !6053)
!6062 = !DILocation(line: 136, column: 15, scope: !6053)
!6063 = !DILocation(line: 139, column: 22, scope: !6053)
!6064 = !DILocation(line: 139, column: 17, scope: !6053)
!6065 = !DILocation(line: 139, column: 20, scope: !6053)
!6066 = !DILocation(line: 141, column: 2, scope: !6053)
!6067 = !DILocation(line: 142, column: 2, scope: !6053)
!6068 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6069, file: !6069, line: 40, type: !5954, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6070)
!6069 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "irq", arg: 1, scope: !6068, file: !6069, line: 40, type: !32)
!6072 = !DILocation(line: 0, scope: !6068)
!6073 = !DILocation(line: 42, column: 2, scope: !6068)
!6074 = !DILocation(line: 43, column: 1, scope: !6068)
!6075 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !497, file: !497, line: 1684, type: !6076, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6078)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{null, !732}
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6075, file: !497, line: 1684, type: !732)
!6080 = !DILocation(line: 0, scope: !6075)
!6081 = !DILocation(line: 1686, column: 23, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6075, file: !497, line: 1686, column: 7)
!6083 = !DILocation(line: 1686, column: 7, scope: !6075)
!6084 = !DILocation(line: 1688, column: 5, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6082, file: !497, line: 1687, column: 3)
!6086 = !{i64 2150441163}
!6087 = !DILocation(line: 1689, column: 81, scope: !6085)
!6088 = !DILocation(line: 1689, column: 60, scope: !6085)
!6089 = !DILocation(line: 1689, column: 34, scope: !6085)
!6090 = !DILocation(line: 1689, column: 5, scope: !6085)
!6091 = !DILocation(line: 1689, column: 43, scope: !6085)
!6092 = !DILocation(line: 1690, column: 5, scope: !6085)
!6093 = !{i64 2150441277}
!6094 = !DILocation(line: 1691, column: 3, scope: !6085)
!6095 = !DILocation(line: 1692, column: 1, scope: !6075)
!6096 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6069, file: !6069, line: 45, type: !5954, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6097)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "irq", arg: 1, scope: !6096, file: !6069, line: 45, type: !32)
!6099 = !DILocation(line: 0, scope: !6096)
!6100 = !DILocation(line: 47, column: 2, scope: !6096)
!6101 = !DILocation(line: 48, column: 1, scope: !6096)
!6102 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !497, file: !497, line: 1722, type: !6076, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6103)
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6102, file: !497, line: 1722, type: !732)
!6105 = !DILocation(line: 0, scope: !6102)
!6106 = !DILocation(line: 1724, column: 23, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !497, line: 1724, column: 7)
!6108 = !DILocation(line: 1724, column: 7, scope: !6102)
!6109 = !DILocation(line: 1726, column: 81, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !497, line: 1725, column: 3)
!6111 = !DILocation(line: 1726, column: 60, scope: !6110)
!6112 = !DILocation(line: 1726, column: 34, scope: !6110)
!6113 = !DILocation(line: 1726, column: 5, scope: !6110)
!6114 = !DILocation(line: 1726, column: 43, scope: !6110)
!6115 = !DILocation(line: 271, column: 3, scope: !6116, inlinedAt: !6118)
!6116 = distinct !DISubprogram(name: "__DSB", scope: !6117, file: !6117, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !250)
!6117 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = distinct !DILocation(line: 1727, column: 5, scope: !6110)
!6119 = !{i64 2895546}
!6120 = !DILocation(line: 260, column: 3, scope: !6121, inlinedAt: !6122)
!6121 = distinct !DISubprogram(name: "__ISB", scope: !6117, file: !6117, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !250)
!6122 = distinct !DILocation(line: 1728, column: 5, scope: !6110)
!6123 = !{i64 2895263}
!6124 = !DILocation(line: 1729, column: 3, scope: !6110)
!6125 = !DILocation(line: 1730, column: 1, scope: !6102)
!6126 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6069, file: !6069, line: 50, type: !6127, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!107, !32}
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "irq", arg: 1, scope: !6126, file: !6069, line: 50, type: !32)
!6131 = !DILocation(line: 0, scope: !6126)
!6132 = !DILocation(line: 52, column: 20, scope: !6126)
!6133 = !DILocation(line: 52, column: 9, scope: !6126)
!6134 = !DILocation(line: 52, column: 41, scope: !6126)
!6135 = !DILocation(line: 52, column: 39, scope: !6126)
!6136 = !DILocation(line: 52, column: 2, scope: !6126)
!6137 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6069, file: !6069, line: 64, type: !6138, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !32, !32, !162}
!6140 = !{!6141, !6142, !6143}
!6141 = !DILocalVariable(name: "irq", arg: 1, scope: !6137, file: !6069, line: 64, type: !32)
!6142 = !DILocalVariable(name: "prio", arg: 2, scope: !6137, file: !6069, line: 64, type: !32)
!6143 = !DILocalVariable(name: "flags", arg: 3, scope: !6137, file: !6069, line: 64, type: !162)
!6144 = !DILocation(line: 0, scope: !6137)
!6145 = !DILocation(line: 83, column: 8, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !6069, line: 82, column: 9)
!6147 = distinct !DILexicalBlock(scope: !6137, file: !6069, line: 76, column: 6)
!6148 = !DILocation(line: 95, column: 2, scope: !6137)
!6149 = !DILocation(line: 96, column: 1, scope: !6137)
!6150 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6151, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6153)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{null, !732, !162}
!6153 = !{!6154, !6155}
!6154 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6150, file: !497, line: 1814, type: !732)
!6155 = !DILocalVariable(name: "priority", arg: 2, scope: !6150, file: !497, line: 1814, type: !162)
!6156 = !DILocation(line: 0, scope: !6150)
!6157 = !DILocation(line: 0, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6150, file: !497, line: 1816, column: 7)
!6159 = !DILocation(line: 1816, column: 7, scope: !6150)
!6160 = !DILocation(line: 1824, column: 1, scope: !6150)
!6161 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6069, file: !6069, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !6162)
!6162 = !{!6163}
!6163 = !DILocalVariable(name: "unused", arg: 1, scope: !6161, file: !6069, line: 155, type: !13)
!6164 = !DILocation(line: 0, scope: !6161)
!6165 = !DILocation(line: 159, column: 2, scope: !6161)
!6166 = !DILocation(line: 160, column: 1, scope: !6161)
!6167 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6168, file: !6168, line: 87, type: !3169, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !250)
!6168 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6169 = !DILocation(line: 89, column: 2, scope: !6167)
!6170 = !DILocation(line: 90, column: 2, scope: !6167)
!6171 = !DILocation(line: 91, column: 1, scope: !6167)
!6172 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6168, file: !6168, line: 23, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6173 = !DISubprogram(name: "z_arm_int_exit", scope: !6174, file: !6174, line: 153, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6174 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6175 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6176, file: !6176, line: 256, type: !3169, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!6176 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6177 = !DILocation(line: 258, column: 2, scope: !6175)
!6178 = !DILocation(line: 260, column: 2, scope: !6175)
!6179 = !DILocation(line: 262, column: 2, scope: !6175)
!6180 = !DILocation(line: 263, column: 2, scope: !6175)
!6181 = !DILocation(line: 267, column: 2, scope: !6175)
!6182 = !DILocation(line: 268, column: 2, scope: !6175)
!6183 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6176, file: !6176, line: 53, type: !3169, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!6184 = !DILocation(line: 55, column: 12, scope: !6183)
!6185 = !DILocation(line: 271, column: 3, scope: !6186, inlinedAt: !6187)
!6186 = distinct !DISubprogram(name: "__DSB", scope: !6117, file: !6117, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!6187 = distinct !DILocation(line: 56, column: 2, scope: !6183)
!6188 = !{i64 2894217}
!6189 = !DILocation(line: 260, column: 3, scope: !6190, inlinedAt: !6191)
!6190 = distinct !DISubprogram(name: "__ISB", scope: !6117, file: !6117, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!6191 = distinct !DILocation(line: 57, column: 2, scope: !6183)
!6192 = !{i64 2893934}
!6193 = !DILocation(line: 58, column: 1, scope: !6183)
!6194 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6176, file: !6176, line: 96, type: !3169, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!6195 = !DILocation(line: 103, column: 13, scope: !6194)
!6196 = !DILocation(line: 975, column: 3, scope: !6197, inlinedAt: !6202)
!6197 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6117, file: !6117, line: 971, type: !6198, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6200)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!162}
!6200 = !{!6201}
!6201 = !DILocalVariable(name: "result", scope: !6197, file: !6117, line: 973, type: !162)
!6202 = distinct !DILocation(line: 189, column: 16, scope: !6194)
!6203 = !{i64 2915047}
!6204 = !DILocation(line: 0, scope: !6197, inlinedAt: !6202)
!6205 = !DILocation(line: 189, column: 32, scope: !6194)
!6206 = !DILocalVariable(name: "control", arg: 1, scope: !6207, file: !6117, line: 1001, type: !162)
!6207 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6117, file: !6117, line: 1001, type: !6208, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6210)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{null, !162}
!6210 = !{!6206}
!6211 = !DILocation(line: 0, scope: !6207, inlinedAt: !6212)
!6212 = distinct !DILocation(line: 189, column: 2, scope: !6194)
!6213 = !DILocation(line: 1003, column: 3, scope: !6207, inlinedAt: !6212)
!6214 = !{i64 2915767}
!6215 = !DILocation(line: 260, column: 3, scope: !6190, inlinedAt: !6216)
!6216 = distinct !DILocation(line: 1004, column: 3, scope: !6207, inlinedAt: !6212)
!6217 = !DILocation(line: 191, column: 1, scope: !6194)
!6218 = distinct !DISubprogram(name: "arch_swap", scope: !6219, file: !6219, line: 33, type: !6127, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !6220)
!6219 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "key", arg: 1, scope: !6218, file: !6219, line: 33, type: !32)
!6222 = !DILocation(line: 0, scope: !6218)
!6223 = !DILocation(line: 36, column: 2, scope: !6218)
!6224 = !DILocation(line: 36, column: 17, scope: !6218)
!6225 = !DILocation(line: 36, column: 25, scope: !6218)
!6226 = !DILocation(line: 37, column: 37, scope: !6218)
!6227 = !DILocation(line: 37, column: 17, scope: !6218)
!6228 = !DILocation(line: 37, column: 35, scope: !6218)
!6229 = !DILocation(line: 41, column: 12, scope: !6218)
!6230 = !DILocalVariable(name: "key", arg: 1, scope: !6231, file: !5943, line: 84, type: !32)
!6231 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !6232)
!6232 = !{!6230}
!6233 = !DILocation(line: 0, scope: !6231, inlinedAt: !6234)
!6234 = distinct !DILocation(line: 44, column: 2, scope: !6218)
!6235 = !DILocation(line: 95, column: 2, scope: !6231, inlinedAt: !6234)
!6236 = !{i64 2036577}
!6237 = !DILocation(line: 53, column: 9, scope: !6218)
!6238 = !DILocation(line: 53, column: 24, scope: !6218)
!6239 = !DILocation(line: 53, column: 2, scope: !6218)
!6240 = distinct !DISubprogram(name: "arch_new_thread", scope: !6241, file: !6241, line: 56, type: !6242, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6349)
!6241 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6242 = !DISubroutineType(types: !6243)
!6243 = !{null, !6244, !6344, !256, !3709, !102, !102, !102}
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6245, size: 32)
!6245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6246)
!6246 = !{!6247, !6305, !6317, !6318, !6319, !6320, !6326, !6339}
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6245, file: !359, line: 247, baseType: !6248, size: 384)
!6248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6249)
!6249 = !{!6250, !6274, !6281, !6282, !6283, !6292, !6293, !6294}
!6250 = !DIDerivedType(tag: DW_TAG_member, scope: !6248, file: !359, line: 60, baseType: !6251, size: 64)
!6251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6248, file: !359, line: 60, size: 64, elements: !6252)
!6252 = !{!6253, !6268}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6251, file: !359, line: 61, baseType: !6254, size: 64)
!6254 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6255)
!6255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6256)
!6256 = !{!6257, !6263}
!6257 = !DIDerivedType(tag: DW_TAG_member, scope: !6255, file: !233, line: 38, baseType: !6258, size: 32)
!6258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6255, file: !233, line: 38, size: 32, elements: !6259)
!6259 = !{!6260, !6262}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6258, file: !233, line: 39, baseType: !6261, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6258, file: !233, line: 40, baseType: !6261, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, scope: !6255, file: !233, line: 42, baseType: !6264, size: 32, offset: 32)
!6264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6255, file: !233, line: 42, size: 32, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6264, file: !233, line: 43, baseType: !6261, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6264, file: !233, line: 44, baseType: !6261, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6251, file: !359, line: 62, baseType: !6269, size: 64)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6270)
!6270 = !{!6271}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6269, file: !384, line: 50, baseType: !6272, size: 64)
!6272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6273, size: 64, elements: !389)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6248, file: !359, line: 68, baseType: !6275, size: 32, offset: 64)
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 32)
!6276 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6277)
!6277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6278)
!6278 = !{!6279}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6277, file: !228, line: 232, baseType: !6280, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6255)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6248, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6248, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6283 = !DIDerivedType(tag: DW_TAG_member, scope: !6248, file: !359, line: 90, baseType: !6284, size: 16, offset: 112)
!6284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6248, file: !359, line: 90, size: 16, elements: !6285)
!6285 = !{!6286, !6291}
!6286 = !DIDerivedType(tag: DW_TAG_member, scope: !6284, file: !359, line: 91, baseType: !6287, size: 16)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6284, file: !359, line: 91, size: 16, elements: !6288)
!6288 = !{!6289, !6290}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6287, file: !359, line: 96, baseType: !407, size: 8)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6287, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6284, file: !359, line: 100, baseType: !411, size: 16)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6248, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6248, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6248, file: !359, line: 131, baseType: !6295, size: 192, offset: 192)
!6295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6296)
!6296 = !{!6297, !6298, !6304}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6295, file: !228, line: 245, baseType: !6254, size: 64)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6295, file: !228, line: 246, baseType: !6299, size: 32, offset: 64)
!6299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6300)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 32)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{null, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6295, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6245, file: !359, line: 250, baseType: !6306, size: 288, offset: 384)
!6306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6307)
!6307 = !{!6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6306, file: !428, line: 26, baseType: !162, size: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6306, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6306, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6306, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6306, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6306, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6306, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6306, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6306, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6245, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6245, file: !359, line: 256, baseType: !6276, size: 64, offset: 704)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6245, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6245, file: !359, line: 300, baseType: !6321, size: 96, offset: 800)
!6321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6322)
!6322 = !{!6323, !6324, !6325}
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6321, file: !359, line: 153, baseType: !22, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6321, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6321, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6245, file: !359, line: 325, baseType: !6327, size: 32, offset: 896)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 32)
!6328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6329)
!6329 = !{!6330, !6336, !6337}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6328, file: !224, line: 5074, baseType: !6331, size: 96)
!6331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6332)
!6332 = !{!6333, !6334, !6335}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6331, file: !454, line: 57, baseType: !457, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6331, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6331, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6328, file: !224, line: 5075, baseType: !6276, size: 64, offset: 96)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6328, file: !224, line: 5076, baseType: !6338, offset: 160)
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6245, file: !359, line: 343, baseType: !6340, size: 64, offset: 928)
!6340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6341)
!6341 = !{!6342, !6343}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6340, file: !428, line: 63, baseType: !162, size: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6340, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 32)
!6345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3710, line: 44, baseType: !6346)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2094, line: 47, size: 8, elements: !6347)
!6347 = !{!6348}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6346, file: !2094, line: 48, baseType: !125, size: 8)
!6349 = !{!6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357}
!6350 = !DILocalVariable(name: "thread", arg: 1, scope: !6240, file: !6241, line: 56, type: !6244)
!6351 = !DILocalVariable(name: "stack", arg: 2, scope: !6240, file: !6241, line: 56, type: !6344)
!6352 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6240, file: !6241, line: 57, type: !256)
!6353 = !DILocalVariable(name: "entry", arg: 4, scope: !6240, file: !6241, line: 57, type: !3709)
!6354 = !DILocalVariable(name: "p1", arg: 5, scope: !6240, file: !6241, line: 58, type: !102)
!6355 = !DILocalVariable(name: "p2", arg: 6, scope: !6240, file: !6241, line: 58, type: !102)
!6356 = !DILocalVariable(name: "p3", arg: 7, scope: !6240, file: !6241, line: 58, type: !102)
!6357 = !DILocalVariable(name: "iframe", scope: !6240, file: !6241, line: 60, type: !2644)
!6358 = !DILocation(line: 0, scope: !6240)
!6359 = !DILocation(line: 85, column: 11, scope: !6240)
!6360 = !DILocation(line: 93, column: 10, scope: !6240)
!6361 = !DILocation(line: 98, column: 13, scope: !6240)
!6362 = !DILocation(line: 100, column: 15, scope: !6240)
!6363 = !DILocation(line: 100, column: 10, scope: !6240)
!6364 = !DILocation(line: 100, column: 13, scope: !6240)
!6365 = !DILocation(line: 101, column: 15, scope: !6240)
!6366 = !DILocation(line: 101, column: 10, scope: !6240)
!6367 = !DILocation(line: 101, column: 13, scope: !6240)
!6368 = !DILocation(line: 102, column: 15, scope: !6240)
!6369 = !DILocation(line: 102, column: 10, scope: !6240)
!6370 = !DILocation(line: 102, column: 13, scope: !6240)
!6371 = !DILocation(line: 103, column: 15, scope: !6240)
!6372 = !DILocation(line: 103, column: 10, scope: !6240)
!6373 = !DILocation(line: 103, column: 13, scope: !6240)
!6374 = !DILocation(line: 106, column: 10, scope: !6240)
!6375 = !DILocation(line: 106, column: 15, scope: !6240)
!6376 = !DILocation(line: 122, column: 29, scope: !6240)
!6377 = !DILocation(line: 122, column: 23, scope: !6240)
!6378 = !DILocation(line: 122, column: 27, scope: !6240)
!6379 = !DILocation(line: 123, column: 15, scope: !6240)
!6380 = !DILocation(line: 123, column: 23, scope: !6240)
!6381 = !DILocation(line: 143, column: 1, scope: !6240)
!6382 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6241, file: !6241, line: 385, type: !6383, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6386)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!162, !6385, !6385}
!6385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6386 = !{!6387, !6388, !6389, !6392}
!6387 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6382, file: !6241, line: 385, type: !6385)
!6388 = !DILocalVariable(name: "psp", arg: 2, scope: !6382, file: !6241, line: 385, type: !6385)
!6389 = !DILocalVariable(name: "thread", scope: !6382, file: !6241, line: 388, type: !6390)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 32)
!6391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6245)
!6392 = !DILocalVariable(name: "guard_len", scope: !6382, file: !6241, line: 405, type: !162)
!6393 = !DILocation(line: 0, scope: !6382)
!6394 = !DILocation(line: 388, column: 34, scope: !6382)
!6395 = !DILocation(line: 390, column: 13, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6382, file: !6241, line: 390, column: 6)
!6397 = !DILocation(line: 390, column: 6, scope: !6382)
!6398 = !DILocation(line: 438, column: 6, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6382, file: !6241, line: 438, column: 6)
!6400 = !DILocation(line: 438, column: 6, scope: !6382)
!6401 = !DILocation(line: 442, column: 3, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6399, file: !6241, line: 440, column: 22)
!6403 = !DILocation(line: 455, column: 1, scope: !6382)
!6404 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6241, file: !6241, line: 530, type: !6405, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !6407)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !6244, !256, !3709}
!6407 = !{!6408, !6409, !6410}
!6408 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6404, file: !6241, line: 530, type: !6244)
!6409 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6404, file: !6241, line: 530, type: !256)
!6410 = !DILocalVariable(name: "_main", arg: 3, scope: !6404, file: !6241, line: 531, type: !3709)
!6411 = !DILocation(line: 0, scope: !6404)
!6412 = !DILocation(line: 535, column: 11, scope: !6404)
!6413 = !DILocation(line: 560, column: 2, scope: !6404)
!6414 = !DILocation(line: 576, column: 2, scope: !6404)
!6415 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6416 = !DILocation(line: 603, column: 2, scope: !6404)
!6417 = distinct !DISubprogram(name: "z_arm_fault", scope: !6418, file: !6418, line: 1036, type: !6419, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6434)
!6418 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6419 = !DISubroutineType(types: !6420)
!6420 = !{null, !162, !162, !162, !6421}
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6423)
!6423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6424)
!6424 = !{!6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6423, file: !428, line: 26, baseType: !162, size: 32)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6423, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6423, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6423, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6423, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6423, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6423, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6423, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6423, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6434 = !{!6435, !6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444}
!6435 = !DILocalVariable(name: "msp", arg: 1, scope: !6417, file: !6418, line: 1036, type: !162)
!6436 = !DILocalVariable(name: "psp", arg: 2, scope: !6417, file: !6418, line: 1036, type: !162)
!6437 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6417, file: !6418, line: 1036, type: !162)
!6438 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6417, file: !6418, line: 1037, type: !6421)
!6439 = !DILocalVariable(name: "reason", scope: !6417, file: !6418, line: 1039, type: !162)
!6440 = !DILocalVariable(name: "fault", scope: !6417, file: !6418, line: 1040, type: !107)
!6441 = !DILocalVariable(name: "recoverable", scope: !6417, file: !6418, line: 1041, type: !136)
!6442 = !DILocalVariable(name: "nested_exc", scope: !6417, file: !6418, line: 1041, type: !136)
!6443 = !DILocalVariable(name: "esf", scope: !6417, file: !6418, line: 1042, type: !2712)
!6444 = !DILocalVariable(name: "esf_copy", scope: !6417, file: !6418, line: 1047, type: !2713)
!6445 = !DILocation(line: 0, scope: !6417)
!6446 = !DILocation(line: 1040, column: 19, scope: !6417)
!6447 = !DILocation(line: 1040, column: 24, scope: !6417)
!6448 = !DILocation(line: 1041, column: 2, scope: !6417)
!6449 = !DILocation(line: 1047, column: 2, scope: !6417)
!6450 = !DILocation(line: 1047, column: 15, scope: !6417)
!6451 = !DILocalVariable(name: "key", arg: 1, scope: !6452, file: !5943, line: 84, type: !32)
!6452 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6453)
!6453 = !{!6451}
!6454 = !DILocation(line: 0, scope: !6452, inlinedAt: !6455)
!6455 = distinct !DILocation(line: 1050, column: 2, scope: !6417)
!6456 = !DILocation(line: 95, column: 2, scope: !6452, inlinedAt: !6455)
!6457 = !{i64 2069821}
!6458 = !DILocation(line: 1055, column: 9, scope: !6417)
!6459 = !DILocation(line: 1063, column: 11, scope: !6417)
!6460 = !DILocation(line: 1064, column: 6, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6417, file: !6418, line: 1064, column: 6)
!6462 = !{i8 0, i8 2}
!6463 = !DILocation(line: 1064, column: 6, scope: !6417)
!6464 = !DILocation(line: 1070, column: 20, scope: !6417)
!6465 = !DILocation(line: 1070, column: 2, scope: !6417)
!6466 = !DILocation(line: 1089, column: 6, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6417, file: !6418, line: 1089, column: 6)
!6468 = !DILocation(line: 0, scope: !6467)
!6469 = !DILocation(line: 1089, column: 6, scope: !6417)
!6470 = !DILocation(line: 1090, column: 28, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !6418, line: 1090, column: 7)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !6418, line: 1089, column: 18)
!6473 = !DILocation(line: 1090, column: 44, scope: !6471)
!6474 = !DILocation(line: 1090, column: 7, scope: !6472)
!6475 = !DILocation(line: 1091, column: 24, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6471, file: !6418, line: 1090, column: 50)
!6477 = !DILocation(line: 1092, column: 3, scope: !6476)
!6478 = !DILocation(line: 1094, column: 23, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6467, file: !6418, line: 1093, column: 9)
!6480 = !DILocation(line: 1097, column: 2, scope: !6417)
!6481 = !DILocation(line: 1098, column: 1, scope: !6417)
!6482 = distinct !DISubprogram(name: "get_esf", scope: !6418, file: !6418, line: 894, type: !6483, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6486)
!6483 = !DISubroutineType(types: !6484)
!6484 = !{!2712, !162, !162, !162, !6485}
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6486 = !{!6487, !6488, !6489, !6490, !6491, !6492}
!6487 = !DILocalVariable(name: "msp", arg: 1, scope: !6482, file: !6418, line: 894, type: !162)
!6488 = !DILocalVariable(name: "psp", arg: 2, scope: !6482, file: !6418, line: 894, type: !162)
!6489 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6482, file: !6418, line: 894, type: !162)
!6490 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6482, file: !6418, line: 895, type: !6485)
!6491 = !DILocalVariable(name: "alternative_state_exc", scope: !6482, file: !6418, line: 897, type: !136)
!6492 = !DILocalVariable(name: "ptr_esf", scope: !6482, file: !6418, line: 898, type: !2712)
!6493 = !DILocation(line: 0, scope: !6482)
!6494 = !DILocation(line: 900, column: 14, scope: !6482)
!6495 = !DILocation(line: 902, column: 49, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6482, file: !6418, line: 902, column: 6)
!6497 = !DILocation(line: 902, column: 6, scope: !6482)
!6498 = !DILocation(line: 983, column: 18, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6482, file: !6418, line: 983, column: 6)
!6500 = !DILocation(line: 991, column: 7, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !6418, line: 990, column: 30)
!6502 = distinct !DILexicalBlock(scope: !6482, file: !6418, line: 990, column: 6)
!6503 = !DILocation(line: 998, column: 16, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6505, file: !6418, line: 995, column: 10)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !6418, line: 991, column: 7)
!6506 = !DILocation(line: 1002, column: 2, scope: !6482)
!6507 = !DILocation(line: 1003, column: 1, scope: !6482)
!6508 = distinct !DISubprogram(name: "fault_handle", scope: !6418, file: !6418, line: 786, type: !6509, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6511)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!162, !2712, !107, !6485}
!6511 = !{!6512, !6513, !6514, !6515}
!6512 = !DILocalVariable(name: "esf", arg: 1, scope: !6508, file: !6418, line: 786, type: !2712)
!6513 = !DILocalVariable(name: "fault", arg: 2, scope: !6508, file: !6418, line: 786, type: !107)
!6514 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6508, file: !6418, line: 786, type: !6485)
!6515 = !DILocalVariable(name: "reason", scope: !6508, file: !6418, line: 788, type: !162)
!6516 = !DILocation(line: 0, scope: !6508)
!6517 = !DILocation(line: 790, column: 15, scope: !6508)
!6518 = !DILocation(line: 792, column: 2, scope: !6508)
!6519 = !DILocation(line: 794, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6508, file: !6418, line: 792, column: 17)
!6521 = !DILocation(line: 795, column: 3, scope: !6520)
!6522 = !DILocation(line: 800, column: 12, scope: !6520)
!6523 = !DILocation(line: 801, column: 3, scope: !6520)
!6524 = !DILocation(line: 803, column: 12, scope: !6520)
!6525 = !DILocation(line: 804, column: 3, scope: !6520)
!6526 = !DILocation(line: 806, column: 12, scope: !6520)
!6527 = !DILocation(line: 807, column: 3, scope: !6520)
!6528 = !DILocation(line: 814, column: 3, scope: !6520)
!6529 = !DILocation(line: 815, column: 3, scope: !6520)
!6530 = !DILocation(line: 829, column: 2, scope: !6508)
!6531 = distinct !DISubprogram(name: "hard_fault", scope: !6418, file: !6418, line: 709, type: !6532, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6534)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{!162, !2712, !6485}
!6534 = !{!6535, !6536, !6537}
!6535 = !DILocalVariable(name: "esf", arg: 1, scope: !6531, file: !6418, line: 709, type: !2712)
!6536 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6531, file: !6418, line: 709, type: !6485)
!6537 = !DILocalVariable(name: "reason", scope: !6531, file: !6418, line: 711, type: !162)
!6538 = !DILocation(line: 0, scope: !6531)
!6539 = !DILocation(line: 732, column: 15, scope: !6531)
!6540 = !DILocation(line: 734, column: 12, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6531, file: !6418, line: 734, column: 6)
!6542 = !DILocation(line: 734, column: 17, scope: !6541)
!6543 = !DILocation(line: 734, column: 41, scope: !6541)
!6544 = !DILocation(line: 734, column: 6, scope: !6531)
!6545 = !DILocation(line: 736, column: 19, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !6418, line: 736, column: 13)
!6547 = !DILocation(line: 736, column: 49, scope: !6546)
!6548 = !DILocation(line: 736, column: 13, scope: !6541)
!6549 = !DILocation(line: 738, column: 19, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !6418, line: 738, column: 13)
!6551 = !DILocation(line: 738, column: 24, scope: !6550)
!6552 = !DILocation(line: 738, column: 47, scope: !6550)
!6553 = !DILocation(line: 738, column: 13, scope: !6546)
!6554 = !DILocation(line: 740, column: 7, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !6418, line: 740, column: 7)
!6556 = distinct !DILexicalBlock(scope: !6550, file: !6418, line: 738, column: 53)
!6557 = !DILocation(line: 740, column: 7, scope: !6556)
!6558 = !DILocation(line: 742, column: 24, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6555, file: !6418, line: 740, column: 38)
!6560 = !DILocation(line: 743, column: 3, scope: !6559)
!6561 = !DILocation(line: 743, column: 20, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6555, file: !6418, line: 743, column: 14)
!6563 = !DILocation(line: 743, column: 25, scope: !6562)
!6564 = !DILocation(line: 743, column: 52, scope: !6562)
!6565 = !DILocation(line: 743, column: 14, scope: !6555)
!6566 = !DILocation(line: 744, column: 13, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !6418, line: 743, column: 58)
!6568 = !DILocation(line: 745, column: 3, scope: !6567)
!6569 = !DILocation(line: 745, column: 20, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6562, file: !6418, line: 745, column: 14)
!6571 = !DILocation(line: 745, column: 25, scope: !6570)
!6572 = !DILocation(line: 745, column: 52, scope: !6570)
!6573 = !DILocation(line: 745, column: 14, scope: !6562)
!6574 = !DILocation(line: 746, column: 13, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6570, file: !6418, line: 745, column: 58)
!6576 = !DILocation(line: 747, column: 3, scope: !6575)
!6577 = !DILocation(line: 747, column: 20, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6570, file: !6418, line: 747, column: 14)
!6579 = !DILocation(line: 747, column: 52, scope: !6578)
!6580 = !DILocation(line: 747, column: 14, scope: !6570)
!6581 = !DILocation(line: 748, column: 13, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !6418, line: 747, column: 58)
!6583 = !DILocation(line: 753, column: 3, scope: !6582)
!6584 = !DILocation(line: 766, column: 2, scope: !6531)
!6585 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6418, file: !6418, line: 229, type: !6509, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6586)
!6586 = !{!6587, !6588, !6589, !6590, !6591, !6592, !6595}
!6587 = !DILocalVariable(name: "esf", arg: 1, scope: !6585, file: !6418, line: 229, type: !2712)
!6588 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6585, file: !6418, line: 229, type: !107)
!6589 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6585, file: !6418, line: 230, type: !6485)
!6590 = !DILocalVariable(name: "reason", scope: !6585, file: !6418, line: 232, type: !162)
!6591 = !DILocalVariable(name: "mmfar", scope: !6585, file: !6418, line: 233, type: !162)
!6592 = !DILocalVariable(name: "temp", scope: !6593, file: !6418, line: 254, type: !162)
!6593 = distinct !DILexicalBlock(scope: !6594, file: !6418, line: 244, column: 48)
!6594 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 244, column: 6)
!6595 = !DILocalVariable(name: "min_stack_ptr", scope: !6596, file: !6418, line: 309, type: !162)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !6418, line: 308, column: 43)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !6418, line: 308, column: 7)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !6418, line: 289, column: 40)
!6599 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 288, column: 6)
!6600 = !DILocation(line: 0, scope: !6585)
!6601 = !DILocation(line: 237, column: 12, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 237, column: 6)
!6603 = !DILocation(line: 241, column: 12, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 241, column: 6)
!6605 = !DILocation(line: 244, column: 12, scope: !6594)
!6606 = !DILocation(line: 244, column: 17, scope: !6594)
!6607 = !DILocation(line: 244, column: 42, scope: !6594)
!6608 = !DILocation(line: 244, column: 6, scope: !6585)
!6609 = !DILocation(line: 254, column: 24, scope: !6593)
!6610 = !DILocation(line: 0, scope: !6593)
!6611 = !DILocation(line: 256, column: 13, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6593, file: !6418, line: 256, column: 7)
!6613 = !DILocation(line: 256, column: 18, scope: !6612)
!6614 = !DILocation(line: 256, column: 44, scope: !6612)
!6615 = !DILocation(line: 256, column: 7, scope: !6593)
!6616 = !DILocation(line: 259, column: 24, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !6418, line: 259, column: 8)
!6618 = distinct !DILexicalBlock(scope: !6612, file: !6418, line: 256, column: 50)
!6619 = !DILocation(line: 259, column: 8, scope: !6618)
!6620 = !DILocation(line: 261, column: 15, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !6418, line: 259, column: 30)
!6622 = !DILocation(line: 262, column: 4, scope: !6621)
!6623 = !DILocation(line: 265, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 265, column: 6)
!6625 = !DILocation(line: 269, column: 12, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 269, column: 6)
!6627 = !DILocation(line: 288, column: 12, scope: !6599)
!6628 = !DILocation(line: 288, column: 17, scope: !6599)
!6629 = !DILocation(line: 288, column: 41, scope: !6599)
!6630 = !DILocation(line: 289, column: 9, scope: !6599)
!6631 = !DILocation(line: 289, column: 14, scope: !6599)
!6632 = !DILocation(line: 288, column: 6, scope: !6585)
!6633 = !DILocation(line: 308, column: 12, scope: !6597)
!6634 = !DILocation(line: 308, column: 17, scope: !6597)
!6635 = !DILocation(line: 308, column: 7, scope: !6598)
!6636 = !DILocation(line: 310, column: 6, scope: !6596)
!6637 = !DILocation(line: 309, column: 29, scope: !6596)
!6638 = !DILocation(line: 0, scope: !6596)
!6639 = !DILocation(line: 312, column: 8, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6596, file: !6418, line: 312, column: 8)
!6641 = !DILocation(line: 312, column: 8, scope: !6596)
!6642 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6643, file: !6117, line: 1099, type: !162)
!6643 = distinct !DISubprogram(name: "__set_PSP", scope: !6117, file: !6117, line: 1099, type: !6208, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6644)
!6644 = !{!6642}
!6645 = !DILocation(line: 0, scope: !6643, inlinedAt: !6646)
!6646 = distinct !DILocation(line: 338, column: 5, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6640, file: !6418, line: 312, column: 23)
!6648 = !DILocation(line: 1101, column: 3, scope: !6643, inlinedAt: !6646)
!6649 = !{i64 2945186}
!6650 = !DILocation(line: 341, column: 4, scope: !6647)
!6651 = !DILocation(line: 360, column: 12, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6585, file: !6418, line: 360, column: 6)
!6653 = !DILocation(line: 360, column: 17, scope: !6652)
!6654 = !DILocation(line: 360, column: 41, scope: !6652)
!6655 = !DILocation(line: 360, column: 6, scope: !6585)
!6656 = !DILocation(line: 361, column: 14, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !6418, line: 360, column: 47)
!6658 = !DILocation(line: 362, column: 2, scope: !6657)
!6659 = !DILocation(line: 366, column: 12, scope: !6585)
!6660 = !DILocation(line: 369, column: 15, scope: !6585)
!6661 = !DILocation(line: 371, column: 2, scope: !6585)
!6662 = distinct !DISubprogram(name: "bus_fault", scope: !6418, file: !6418, line: 383, type: !6663, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6665)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!107, !2712, !107, !6485}
!6665 = !{!6666, !6667, !6668, !6669, !6670}
!6666 = !DILocalVariable(name: "esf", arg: 1, scope: !6662, file: !6418, line: 383, type: !2712)
!6667 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6662, file: !6418, line: 383, type: !107)
!6668 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6662, file: !6418, line: 383, type: !6485)
!6669 = !DILocalVariable(name: "reason", scope: !6662, file: !6418, line: 385, type: !162)
!6670 = !DILocalVariable(name: "bfar", scope: !6671, file: !6418, line: 405, type: !162)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !6418, line: 395, column: 42)
!6672 = distinct !DILexicalBlock(scope: !6662, file: !6418, line: 395, column: 6)
!6673 = !DILocation(line: 0, scope: !6662)
!6674 = !DILocation(line: 389, column: 11, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6662, file: !6418, line: 389, column: 6)
!6676 = !DILocation(line: 392, column: 11, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6662, file: !6418, line: 392, column: 6)
!6678 = !DILocation(line: 395, column: 11, scope: !6672)
!6679 = !DILocation(line: 395, column: 16, scope: !6672)
!6680 = !DILocation(line: 395, column: 6, scope: !6662)
!6681 = !DILocation(line: 405, column: 3, scope: !6671)
!6682 = !DILocation(line: 0, scope: !6671)
!6683 = !DILocation(line: 407, column: 13, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6671, file: !6418, line: 407, column: 7)
!6685 = !DILocation(line: 407, column: 18, scope: !6684)
!6686 = !DILocation(line: 407, column: 44, scope: !6684)
!6687 = !DILocation(line: 407, column: 7, scope: !6671)
!6688 = !DILocation(line: 411, column: 15, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !6418, line: 409, column: 30)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !6418, line: 409, column: 8)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !6418, line: 407, column: 50)
!6692 = !DILocation(line: 412, column: 4, scope: !6689)
!6693 = !DILocation(line: 415, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6662, file: !6418, line: 415, column: 6)
!6695 = !DILocation(line: 418, column: 12, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6662, file: !6418, line: 418, column: 6)
!6697 = !DILocation(line: 418, column: 17, scope: !6696)
!6698 = !DILocation(line: 418, column: 41, scope: !6696)
!6699 = !DILocation(line: 418, column: 6, scope: !6662)
!6700 = !DILocation(line: 423, column: 18, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6696, file: !6418, line: 423, column: 13)
!6702 = !DILocation(line: 524, column: 12, scope: !6662)
!6703 = !DILocation(line: 526, column: 15, scope: !6662)
!6704 = !DILocation(line: 528, column: 2, scope: !6662)
!6705 = distinct !DISubprogram(name: "usage_fault", scope: !6418, file: !6418, line: 539, type: !6706, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6710)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{!162, !6708}
!6708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6709, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2713)
!6710 = !{!6711, !6712}
!6711 = !DILocalVariable(name: "esf", arg: 1, scope: !6705, file: !6418, line: 539, type: !6708)
!6712 = !DILocalVariable(name: "reason", scope: !6705, file: !6418, line: 541, type: !162)
!6713 = !DILocation(line: 0, scope: !6705)
!6714 = !DILocation(line: 546, column: 12, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 546, column: 6)
!6716 = !DILocation(line: 549, column: 12, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 549, column: 6)
!6718 = !DILocation(line: 567, column: 12, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 567, column: 6)
!6720 = !DILocation(line: 570, column: 12, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 570, column: 6)
!6722 = !DILocation(line: 573, column: 12, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 573, column: 6)
!6724 = !DILocation(line: 576, column: 12, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6705, file: !6418, line: 576, column: 6)
!6726 = !DILocation(line: 581, column: 12, scope: !6705)
!6727 = !DILocation(line: 583, column: 2, scope: !6705)
!6728 = distinct !DISubprogram(name: "debug_monitor", scope: !6418, file: !6418, line: 632, type: !6729, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6731)
!6729 = !DISubroutineType(types: !6730)
!6730 = !{null, !2712, !6485}
!6731 = !{!6732, !6733}
!6732 = !DILocalVariable(name: "esf", arg: 1, scope: !6728, file: !6418, line: 632, type: !2712)
!6733 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6728, file: !6418, line: 632, type: !6485)
!6734 = !DILocation(line: 0, scope: !6728)
!6735 = !DILocation(line: 634, column: 15, scope: !6728)
!6736 = !DILocation(line: 652, column: 1, scope: !6728)
!6737 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6418, file: !6418, line: 658, type: !6738, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6740)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{!136, !2712}
!6740 = !{!6741, !6742, !6743}
!6741 = !DILocalVariable(name: "esf", arg: 1, scope: !6737, file: !6418, line: 658, type: !2712)
!6742 = !DILocalVariable(name: "ret_addr", scope: !6737, file: !6418, line: 660, type: !2485)
!6743 = !DILocalVariable(name: "fault_insn", scope: !6737, file: !6418, line: 686, type: !411)
!6744 = !DILocation(line: 0, scope: !6737)
!6745 = !DILocation(line: 660, column: 46, scope: !6737)
!6746 = !DILocation(line: 660, column: 23, scope: !6737)
!6747 = !DILocation(line: 682, column: 11, scope: !6737)
!6748 = !DILocation(line: 271, column: 3, scope: !6749, inlinedAt: !6750)
!6749 = distinct !DISubprogram(name: "__DSB", scope: !6117, file: !6117, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !250)
!6750 = distinct !DILocation(line: 683, column: 2, scope: !6737)
!6751 = !{i64 2921321}
!6752 = !DILocation(line: 260, column: 3, scope: !6753, inlinedAt: !6754)
!6753 = distinct !DISubprogram(name: "__ISB", scope: !6117, file: !6117, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !250)
!6754 = distinct !DILocation(line: 684, column: 2, scope: !6737)
!6755 = !{i64 2921038}
!6756 = !DILocation(line: 686, column: 35, scope: !6737)
!6757 = !DILocation(line: 686, column: 24, scope: !6737)
!6758 = !DILocation(line: 688, column: 11, scope: !6737)
!6759 = !DILocation(line: 271, column: 3, scope: !6749, inlinedAt: !6760)
!6760 = distinct !DILocation(line: 689, column: 2, scope: !6737)
!6761 = !DILocation(line: 260, column: 3, scope: !6753, inlinedAt: !6762)
!6762 = distinct !DILocation(line: 690, column: 2, scope: !6737)
!6763 = !DILocation(line: 693, column: 45, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6737, file: !6418, line: 693, column: 6)
!6765 = !DILocation(line: 699, column: 1, scope: !6737)
!6766 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6418, file: !6418, line: 1107, type: !3169, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !250)
!6767 = !DILocation(line: 1111, column: 11, scope: !6766)
!6768 = !DILocation(line: 1136, column: 1, scope: !6766)
!6769 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6770, file: !6770, line: 26, type: !3169, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !6771)
!6770 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6771 = !{!6772}
!6772 = !DILocalVariable(name: "irq", scope: !6769, file: !6770, line: 28, type: !107)
!6773 = !DILocation(line: 0, scope: !6769)
!6774 = !DILocation(line: 30, column: 2, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6769, file: !6770, line: 30, column: 2)
!6776 = !DILocation(line: 31, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6770, line: 30, column: 39)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !6770, line: 30, column: 2)
!6779 = !DILocation(line: 30, column: 35, scope: !6778)
!6780 = !DILocation(line: 30, column: 13, scope: !6778)
!6781 = distinct !{!6781, !6774, !6782}
!6782 = !DILocation(line: 32, column: 2, scope: !6775)
!6783 = !DILocation(line: 33, column: 1, scope: !6769)
!6784 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6151, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !6785)
!6785 = !{!6786, !6787}
!6786 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6784, file: !497, line: 1814, type: !732)
!6787 = !DILocalVariable(name: "priority", arg: 2, scope: !6784, file: !497, line: 1814, type: !162)
!6788 = !DILocation(line: 0, scope: !6784)
!6789 = !DILocation(line: 1816, column: 7, scope: !6784)
!6790 = !DILocation(line: 0, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6784, file: !497, line: 1816, column: 7)
!6792 = !DILocation(line: 1824, column: 1, scope: !6784)
!6793 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6794, file: !6794, line: 27, type: !6795, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !6898)
!6794 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !6797}
!6797 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !6798)
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6799, size: 32)
!6799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6800)
!6800 = !{!6801, !6859, !6871, !6872, !6873, !6874, !6880, !6893}
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6799, file: !359, line: 247, baseType: !6802, size: 384)
!6802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6803)
!6803 = !{!6804, !6828, !6835, !6836, !6837, !6846, !6847, !6848}
!6804 = !DIDerivedType(tag: DW_TAG_member, scope: !6802, file: !359, line: 60, baseType: !6805, size: 64)
!6805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6802, file: !359, line: 60, size: 64, elements: !6806)
!6806 = !{!6807, !6822}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6805, file: !359, line: 61, baseType: !6808, size: 64)
!6808 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6809)
!6809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6810)
!6810 = !{!6811, !6817}
!6811 = !DIDerivedType(tag: DW_TAG_member, scope: !6809, file: !233, line: 38, baseType: !6812, size: 32)
!6812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6809, file: !233, line: 38, size: 32, elements: !6813)
!6813 = !{!6814, !6816}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6812, file: !233, line: 39, baseType: !6815, size: 32)
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6809, size: 32)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6812, file: !233, line: 40, baseType: !6815, size: 32)
!6817 = !DIDerivedType(tag: DW_TAG_member, scope: !6809, file: !233, line: 42, baseType: !6818, size: 32, offset: 32)
!6818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6809, file: !233, line: 42, size: 32, elements: !6819)
!6819 = !{!6820, !6821}
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6818, file: !233, line: 43, baseType: !6815, size: 32)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6818, file: !233, line: 44, baseType: !6815, size: 32)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6805, file: !359, line: 62, baseType: !6823, size: 64)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6824)
!6824 = !{!6825}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6823, file: !384, line: 50, baseType: !6826, size: 64)
!6826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6827, size: 64, elements: !389)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 32)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6802, file: !359, line: 68, baseType: !6829, size: 32, offset: 64)
!6829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6830, size: 32)
!6830 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6831)
!6831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6832)
!6832 = !{!6833}
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6831, file: !228, line: 232, baseType: !6834, size: 64)
!6834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6809)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6802, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6802, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6837 = !DIDerivedType(tag: DW_TAG_member, scope: !6802, file: !359, line: 90, baseType: !6838, size: 16, offset: 112)
!6838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6802, file: !359, line: 90, size: 16, elements: !6839)
!6839 = !{!6840, !6845}
!6840 = !DIDerivedType(tag: DW_TAG_member, scope: !6838, file: !359, line: 91, baseType: !6841, size: 16)
!6841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6838, file: !359, line: 91, size: 16, elements: !6842)
!6842 = !{!6843, !6844}
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6841, file: !359, line: 96, baseType: !407, size: 8)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6841, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6838, file: !359, line: 100, baseType: !411, size: 16)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6802, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6802, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6802, file: !359, line: 131, baseType: !6849, size: 192, offset: 192)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6850)
!6850 = !{!6851, !6852, !6858}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6849, file: !228, line: 245, baseType: !6808, size: 64)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6849, file: !228, line: 246, baseType: !6853, size: 32, offset: 64)
!6853 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6854)
!6854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6855, size: 32)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{null, !6857}
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 32)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6849, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6799, file: !359, line: 250, baseType: !6860, size: 288, offset: 384)
!6860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6861)
!6861 = !{!6862, !6863, !6864, !6865, !6866, !6867, !6868, !6869, !6870}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6860, file: !428, line: 26, baseType: !162, size: 32)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6860, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6860, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6860, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6860, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6860, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6860, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6860, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6860, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6799, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6799, file: !359, line: 256, baseType: !6830, size: 64, offset: 704)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6799, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6799, file: !359, line: 300, baseType: !6875, size: 96, offset: 800)
!6875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6876)
!6876 = !{!6877, !6878, !6879}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6875, file: !359, line: 153, baseType: !22, size: 32)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6875, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6875, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6799, file: !359, line: 325, baseType: !6881, size: 32, offset: 896)
!6881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6882, size: 32)
!6882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6883)
!6883 = !{!6884, !6890, !6891}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6882, file: !224, line: 5074, baseType: !6885, size: 96)
!6885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6886)
!6886 = !{!6887, !6888, !6889}
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6885, file: !454, line: 57, baseType: !457, size: 32)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6885, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6885, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6882, file: !224, line: 5075, baseType: !6830, size: 64, offset: 96)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6882, file: !224, line: 5076, baseType: !6892, offset: 160)
!6892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6799, file: !359, line: 343, baseType: !6894, size: 64, offset: 928)
!6894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6895)
!6895 = !{!6896, !6897}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6894, file: !428, line: 63, baseType: !162, size: 32)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6894, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6898 = !{!6899}
!6899 = !DILocalVariable(name: "thread", arg: 1, scope: !6793, file: !6794, line: 27, type: !6797)
!6900 = !DILocation(line: 0, scope: !6793)
!6901 = !DILocation(line: 29, column: 6, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6793, file: !6794, line: 29, column: 6)
!6903 = !DILocation(line: 29, column: 15, scope: !6902)
!6904 = !DILocation(line: 29, column: 6, scope: !6793)
!6905 = !DILocation(line: 1031, column: 3, scope: !6906, inlinedAt: !6909)
!6906 = distinct !DISubprogram(name: "__get_IPSR", scope: !6117, file: !6117, line: 1027, type: !6198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !6907)
!6907 = !{!6908}
!6908 = !DILocalVariable(name: "result", scope: !6906, file: !6117, line: 1029, type: !162)
!6909 = distinct !DILocation(line: 48, column: 10, scope: !6910, inlinedAt: !6914)
!6910 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6911, file: !6911, line: 46, type: !6912, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !250)
!6911 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!136}
!6914 = distinct !DILocation(line: 30, column: 7, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6794, line: 30, column: 7)
!6916 = distinct !DILexicalBlock(scope: !6902, file: !6794, line: 29, column: 26)
!6917 = !{i64 2910169}
!6918 = !DILocation(line: 0, scope: !6906, inlinedAt: !6909)
!6919 = !DILocation(line: 48, column: 9, scope: !6910, inlinedAt: !6914)
!6920 = !DILocation(line: 30, column: 7, scope: !6916)
!6921 = !DILocation(line: 42, column: 14, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6915, file: !6794, line: 30, column: 25)
!6923 = !DILocation(line: 48, column: 15, scope: !6922)
!6924 = !DILocation(line: 49, column: 3, scope: !6922)
!6925 = !DILocation(line: 52, column: 2, scope: !6793)
!6926 = !DILocation(line: 53, column: 1, scope: !6793)
!6927 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !354, file: !354, line: 127, type: !3169, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !250)
!6928 = !DILocation(line: 134, column: 2, scope: !6927)
!6929 = !DILocation(line: 156, column: 1, scope: !6927)
!6930 = !DILocation(line: 0, scope: !353)
!6931 = !DILocation(line: 289, column: 36, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !353, file: !354, line: 285, column: 2)
!6933 = !DILocation(line: 289, column: 42, scope: !6932)
!6934 = !DILocation(line: 300, column: 36, scope: !353)
!6935 = !DILocation(line: 301, column: 35, scope: !353)
!6936 = !DILocation(line: 302, column: 37, scope: !353)
!6937 = !DILocation(line: 311, column: 2, scope: !353)
!6938 = !DILocation(line: 316, column: 1, scope: !353)
!6939 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !525, file: !525, line: 180, type: !3169, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6940 = !DILocation(line: 188, column: 12, scope: !6939)
!6941 = !DILocation(line: 271, column: 3, scope: !6942, inlinedAt: !6943)
!6942 = distinct !DISubprogram(name: "__DSB", scope: !6117, file: !6117, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6943 = distinct !DILocation(line: 192, column: 2, scope: !6939)
!6944 = !{i64 3083208}
!6945 = !DILocation(line: 260, column: 3, scope: !6946, inlinedAt: !6947)
!6946 = distinct !DISubprogram(name: "__ISB", scope: !6117, file: !6117, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6947 = distinct !DILocation(line: 193, column: 2, scope: !6939)
!6948 = !{i64 3082925}
!6949 = !DILocation(line: 194, column: 1, scope: !6939)
!6950 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !525, file: !525, line: 199, type: !3169, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6951 = !DILocation(line: 282, column: 3, scope: !6952, inlinedAt: !6953)
!6952 = distinct !DISubprogram(name: "__DMB", scope: !6117, file: !6117, line: 280, type: !3169, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6953 = distinct !DILocation(line: 202, column: 2, scope: !6950)
!6954 = !{i64 3083484}
!6955 = !DILocation(line: 205, column: 12, scope: !6950)
!6956 = !DILocation(line: 206, column: 1, scope: !6950)
!6957 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !525, file: !525, line: 275, type: !6958, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6971)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{null, !6960, !177, !6385, !6385}
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 32)
!6961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6962)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !6963)
!6963 = !{!6964, !6965, !6966}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6962, file: !476, line: 53, baseType: !22, size: 32)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6962, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6962, file: !476, line: 55, baseType: !6967, size: 32, offset: 64)
!6967 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !6968)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !6969)
!6969 = !{!6970}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6968, file: !482, line: 150, baseType: !162, size: 32)
!6971 = !{!6972, !6973, !6974, !6975}
!6972 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6957, file: !525, line: 276, type: !6960)
!6973 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6957, file: !525, line: 276, type: !177)
!6974 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6957, file: !525, line: 277, type: !6385)
!6975 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6957, file: !525, line: 277, type: !6385)
!6976 = !DILocation(line: 0, scope: !6957)
!6977 = !DILocation(line: 279, column: 6, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6957, file: !525, line: 279, column: 6)
!6979 = !DILocation(line: 285, column: 1, scope: !6957)
!6980 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6981, file: !6981, line: 220, type: !6982, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6984)
!6981 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!107, !6960, !177, !6385, !6385}
!6984 = !{!6985, !6986, !6987, !6988, !6989}
!6985 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6980, file: !6981, line: 221, type: !6960)
!6986 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6980, file: !6981, line: 221, type: !177)
!6987 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6980, file: !6981, line: 222, type: !6385)
!6988 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6980, file: !6981, line: 223, type: !6385)
!6989 = !DILocalVariable(name: "mpu_reg_index", scope: !6980, file: !6981, line: 225, type: !107)
!6990 = !DILocation(line: 0, scope: !6980)
!6991 = !DILocation(line: 225, column: 22, scope: !6980)
!6992 = !DILocation(line: 233, column: 18, scope: !6980)
!6993 = !DILocation(line: 236, column: 23, scope: !6980)
!6994 = !DILocation(line: 236, column: 21, scope: !6980)
!6995 = !DILocation(line: 238, column: 2, scope: !6980)
!6996 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !525, file: !525, line: 105, type: !6997, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6999)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!107, !6960, !133, !133, !136}
!6999 = !{!7000, !7001, !7002, !7003, !7004, !7005}
!7000 = !DILocalVariable(name: "regions", arg: 1, scope: !6996, file: !525, line: 106, type: !6960)
!7001 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6996, file: !525, line: 106, type: !133)
!7002 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6996, file: !525, line: 106, type: !133)
!7003 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6996, file: !525, line: 107, type: !136)
!7004 = !DILocalVariable(name: "i", scope: !6996, file: !525, line: 109, type: !107)
!7005 = !DILocalVariable(name: "reg_index", scope: !6996, file: !525, line: 110, type: !107)
!7006 = !DILocation(line: 0, scope: !6996)
!7007 = !DILocation(line: 110, column: 18, scope: !6996)
!7008 = !DILocation(line: 112, column: 16, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !525, line: 112, column: 2)
!7010 = distinct !DILexicalBlock(scope: !6996, file: !525, line: 112, column: 2)
!7011 = !DILocation(line: 112, column: 2, scope: !7010)
!7012 = !DILocation(line: 113, column: 7, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !525, line: 113, column: 7)
!7014 = distinct !DILexicalBlock(scope: !7009, file: !525, line: 112, column: 36)
!7015 = !DILocation(line: 113, column: 18, scope: !7013)
!7016 = !DILocation(line: 113, column: 23, scope: !7013)
!7017 = !DILocation(line: 113, column: 7, scope: !7014)
!7018 = !DILocation(line: 118, column: 23, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7014, file: !525, line: 118, column: 7)
!7020 = !DILocation(line: 119, column: 7, scope: !7019)
!7021 = !DILocation(line: 118, column: 7, scope: !7014)
!7022 = !DILocation(line: 124, column: 36, scope: !7014)
!7023 = !DILocation(line: 124, column: 15, scope: !7014)
!7024 = !DILocation(line: 126, column: 17, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7014, file: !525, line: 126, column: 7)
!7026 = !DILocation(line: 126, column: 7, scope: !7014)
!7027 = !DILocation(line: 131, column: 12, scope: !7014)
!7028 = !DILocation(line: 132, column: 2, scope: !7014)
!7029 = !DILocation(line: 112, column: 32, scope: !7009)
!7030 = distinct !{!7030, !7011, !7031}
!7031 = !DILocation(line: 132, column: 2, scope: !7010)
!7032 = !DILocation(line: 135, column: 1, scope: !6996)
!7033 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6981, file: !6981, line: 63, type: !7034, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7036)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!107, !6960}
!7036 = !{!7037, !7038}
!7037 = !DILocalVariable(name: "part", arg: 1, scope: !7033, file: !6981, line: 63, type: !6960)
!7038 = !DILocalVariable(name: "partition_is_valid", scope: !7033, file: !6981, line: 70, type: !107)
!7039 = !DILocation(line: 0, scope: !7033)
!7040 = !DILocation(line: 71, column: 11, scope: !7033)
!7041 = !DILocation(line: 71, column: 37, scope: !7033)
!7042 = !DILocation(line: 72, column: 3, scope: !7033)
!7043 = !DILocation(line: 71, column: 30, scope: !7033)
!7044 = !DILocation(line: 75, column: 11, scope: !7033)
!7045 = !DILocation(line: 75, column: 17, scope: !7033)
!7046 = !DILocation(line: 75, column: 38, scope: !7033)
!7047 = !DILocation(line: 77, column: 2, scope: !7033)
!7048 = distinct !DISubprogram(name: "mpu_configure_region", scope: !525, file: !525, line: 79, type: !7049, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7051)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!107, !177, !6960}
!7051 = !{!7052, !7053, !7054}
!7052 = !DILocalVariable(name: "index", arg: 1, scope: !7048, file: !525, line: 79, type: !177)
!7053 = !DILocalVariable(name: "new_region", arg: 2, scope: !7048, file: !525, line: 80, type: !6960)
!7054 = !DILocalVariable(name: "region_conf", scope: !7048, file: !525, line: 82, type: !514)
!7055 = !DILocation(line: 0, scope: !7048)
!7056 = !DILocation(line: 82, column: 2, scope: !7048)
!7057 = !DILocation(line: 82, column: 24, scope: !7048)
!7058 = !DILocation(line: 87, column: 33, scope: !7048)
!7059 = !DILocation(line: 87, column: 14, scope: !7048)
!7060 = !DILocation(line: 87, column: 19, scope: !7048)
!7061 = !DILocation(line: 91, column: 55, scope: !7048)
!7062 = !DILocation(line: 92, column: 16, scope: !7048)
!7063 = !DILocation(line: 92, column: 53, scope: !7048)
!7064 = !DILocation(line: 91, column: 2, scope: !7048)
!7065 = !DILocation(line: 95, column: 9, scope: !7048)
!7066 = !DILocation(line: 97, column: 1, scope: !7048)
!7067 = !DILocation(line: 95, column: 2, scope: !7048)
!7068 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6981, file: !6981, line: 113, type: !7069, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7074)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{null, !7071, !7072, !162, !162}
!7071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7073, size: 32)
!7073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6967)
!7074 = !{!7075, !7076, !7077, !7078}
!7075 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7068, file: !6981, line: 114, type: !7071)
!7076 = !DILocalVariable(name: "attr", arg: 2, scope: !7068, file: !6981, line: 115, type: !7072)
!7077 = !DILocalVariable(name: "base", arg: 3, scope: !7068, file: !6981, line: 115, type: !162)
!7078 = !DILocalVariable(name: "size", arg: 4, scope: !7068, file: !6981, line: 115, type: !162)
!7079 = !DILocation(line: 0, scope: !7068)
!7080 = !DILocation(line: 127, column: 23, scope: !7068)
!7081 = !DILocation(line: 127, column: 35, scope: !7068)
!7082 = !DILocation(line: 127, column: 33, scope: !7068)
!7083 = !DILocation(line: 127, column: 10, scope: !7068)
!7084 = !DILocation(line: 127, column: 15, scope: !7068)
!7085 = !DILocation(line: 129, column: 1, scope: !7068)
!7086 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !525, file: !525, line: 57, type: !7087, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7089)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{!107, !177, !512}
!7089 = !{!7090, !7091}
!7090 = !DILocalVariable(name: "index", arg: 1, scope: !7086, file: !525, line: 57, type: !177)
!7091 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7086, file: !525, line: 58, type: !512)
!7092 = !DILocation(line: 0, scope: !7086)
!7093 = !DILocation(line: 61, column: 6, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7086, file: !525, line: 61, column: 6)
!7095 = !DILocation(line: 61, column: 12, scope: !7094)
!7096 = !DILocation(line: 61, column: 6, scope: !7086)
!7097 = !DILocation(line: 71, column: 2, scope: !7086)
!7098 = !DILocation(line: 73, column: 2, scope: !7086)
!7099 = !DILocation(line: 74, column: 1, scope: !7086)
!7100 = distinct !DISubprogram(name: "region_init", scope: !6981, file: !6981, line: 29, type: !7101, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7103)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{null, !6385, !512}
!7103 = !{!7104, !7105}
!7104 = !DILocalVariable(name: "index", arg: 1, scope: !7100, file: !6981, line: 29, type: !6385)
!7105 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7100, file: !6981, line: 30, type: !512)
!7106 = !DILocation(line: 0, scope: !7100)
!7107 = !DILocation(line: 33, column: 2, scope: !7100)
!7108 = !DILocation(line: 47, column: 28, scope: !7100)
!7109 = !DILocation(line: 47, column: 33, scope: !7100)
!7110 = !DILocation(line: 48, column: 26, scope: !7100)
!7111 = !DILocation(line: 47, column: 12, scope: !7100)
!7112 = !DILocation(line: 49, column: 32, scope: !7100)
!7113 = !DILocation(line: 49, column: 37, scope: !7100)
!7114 = !DILocation(line: 49, column: 12, scope: !7100)
!7115 = !DILocation(line: 53, column: 1, scope: !7100)
!7116 = distinct !DISubprogram(name: "set_region_number", scope: !7117, file: !7117, line: 32, type: !6208, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7118)
!7117 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7118 = !{!7119}
!7119 = !DILocalVariable(name: "index", arg: 1, scope: !7116, file: !7117, line: 32, type: !162)
!7120 = !DILocation(line: 0, scope: !7116)
!7121 = !DILocation(line: 34, column: 11, scope: !7116)
!7122 = !DILocation(line: 35, column: 1, scope: !7116)
!7123 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6981, file: !6981, line: 88, type: !7124, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7126)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{!162, !162}
!7126 = !{!7127}
!7127 = !DILocalVariable(name: "size", arg: 1, scope: !7123, file: !6981, line: 88, type: !162)
!7128 = !DILocation(line: 0, scope: !7123)
!7129 = !DILocation(line: 91, column: 11, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7123, file: !6981, line: 91, column: 6)
!7131 = !DILocation(line: 91, column: 6, scope: !7123)
!7132 = !DILocation(line: 100, column: 11, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7123, file: !6981, line: 100, column: 6)
!7134 = !DILocation(line: 100, column: 6, scope: !7123)
!7135 = !DILocation(line: 104, column: 35, scope: !7123)
!7136 = !DILocation(line: 104, column: 16, scope: !7123)
!7137 = !DILocation(line: 104, column: 50, scope: !7123)
!7138 = !DILocation(line: 104, column: 72, scope: !7123)
!7139 = !DILocation(line: 104, column: 2, scope: !7123)
!7140 = !DILocation(line: 106, column: 1, scope: !7123)
!7141 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !525, file: !525, line: 307, type: !7142, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7144)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !6960, !133}
!7144 = !{!7145, !7146}
!7145 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7141, file: !525, line: 308, type: !6960)
!7146 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7141, file: !525, line: 308, type: !133)
!7147 = !DILocation(line: 0, scope: !7141)
!7148 = !DILocation(line: 310, column: 6, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7141, file: !525, line: 310, column: 6)
!7150 = !DILocation(line: 316, column: 1, scope: !7141)
!7151 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6981, file: !6981, line: 249, type: !7152, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!107, !6960, !133}
!7154 = !{!7155, !7156, !7157, !7158}
!7155 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7151, file: !6981, line: 250, type: !6960)
!7156 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7151, file: !6981, line: 250, type: !133)
!7157 = !DILocalVariable(name: "mpu_reg_index", scope: !7151, file: !6981, line: 252, type: !107)
!7158 = !DILocalVariable(name: "i", scope: !7159, file: !6981, line: 264, type: !107)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6981, line: 264, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6981, line: 261, column: 32)
!7161 = distinct !DILexicalBlock(scope: !7151, file: !6981, line: 261, column: 6)
!7162 = !DILocation(line: 0, scope: !7151)
!7163 = !DILocation(line: 252, column: 22, scope: !7151)
!7164 = !DILocation(line: 258, column: 18, scope: !7151)
!7165 = !DILocation(line: 261, column: 20, scope: !7161)
!7166 = !DILocation(line: 261, column: 6, scope: !7151)
!7167 = !DILocation(line: 0, scope: !7159)
!7168 = !DILocation(line: 265, column: 4, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6981, line: 264, column: 59)
!7170 = distinct !DILexicalBlock(scope: !7159, file: !6981, line: 264, column: 3)
!7171 = !DILocation(line: 264, column: 55, scope: !7170)
!7172 = !DILocation(line: 264, column: 33, scope: !7170)
!7173 = !DILocation(line: 264, column: 3, scope: !7159)
!7174 = distinct !{!7174, !7173, !7175}
!7175 = !DILocation(line: 266, column: 3, scope: !7159)
!7176 = !DILocation(line: 269, column: 2, scope: !7151)
!7177 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7178, file: !7178, line: 218, type: !6208, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7179)
!7178 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7179 = !{!7180}
!7180 = !DILocalVariable(name: "rnr", arg: 1, scope: !7177, file: !7178, line: 218, type: !162)
!7181 = !DILocation(line: 0, scope: !7177)
!7182 = !DILocation(line: 220, column: 12, scope: !7177)
!7183 = !DILocation(line: 221, column: 13, scope: !7177)
!7184 = !DILocation(line: 222, column: 1, scope: !7177)
!7185 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !525, file: !525, line: 326, type: !7186, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7188)
!7186 = !DISubroutineType(types: !7187)
!7187 = !{!107}
!7188 = !{!7189}
!7189 = !DILocalVariable(name: "r_index", scope: !7185, file: !525, line: 328, type: !162)
!7190 = !DILocation(line: 330, column: 17, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7185, file: !525, line: 330, column: 6)
!7192 = !DILocation(line: 330, column: 29, scope: !7191)
!7193 = !DILocation(line: 330, column: 6, scope: !7185)
!7194 = !DILocation(line: 347, column: 2, scope: !7185)
!7195 = !DILocation(line: 0, scope: !7185)
!7196 = !DILocation(line: 364, column: 29, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !525, line: 364, column: 2)
!7198 = distinct !DILexicalBlock(scope: !7185, file: !525, line: 364, column: 2)
!7199 = !DILocation(line: 364, column: 2, scope: !7198)
!7200 = !DILocation(line: 365, column: 25, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7197, file: !525, line: 364, column: 66)
!7202 = !DILocation(line: 365, column: 3, scope: !7201)
!7203 = !DILocation(line: 364, column: 62, scope: !7197)
!7204 = distinct !{!7204, !7199, !7205}
!7205 = !DILocation(line: 366, column: 2, scope: !7198)
!7206 = !DILocation(line: 369, column: 23, scope: !7185)
!7207 = !DILocation(line: 369, column: 21, scope: !7185)
!7208 = !DILocation(line: 372, column: 2, scope: !7185)
!7209 = !DILocation(line: 443, column: 2, scope: !7185)
!7210 = !DILocation(line: 444, column: 1, scope: !7185)
!7211 = distinct !DISubprogram(name: "strcpy", scope: !7212, file: !7212, line: 20, type: !7213, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7217)
!7212 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7213 = !DISubroutineType(types: !7214)
!7214 = !{!256, !7215, !7216}
!7215 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7216 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7217 = !{!7218, !7219, !7220}
!7218 = !DILocalVariable(name: "d", arg: 1, scope: !7211, file: !7212, line: 20, type: !7215)
!7219 = !DILocalVariable(name: "s", arg: 2, scope: !7211, file: !7212, line: 20, type: !7216)
!7220 = !DILocalVariable(name: "dest", scope: !7211, file: !7212, line: 22, type: !256)
!7221 = !DILocation(line: 0, scope: !7211)
!7222 = !DILocation(line: 24, column: 9, scope: !7211)
!7223 = !DILocation(line: 24, column: 12, scope: !7211)
!7224 = !DILocation(line: 24, column: 2, scope: !7211)
!7225 = !DILocation(line: 25, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7211, file: !7212, line: 24, column: 21)
!7227 = !DILocation(line: 26, column: 4, scope: !7226)
!7228 = !DILocation(line: 27, column: 4, scope: !7226)
!7229 = distinct !{!7229, !7224, !7230}
!7230 = !DILocation(line: 28, column: 2, scope: !7211)
!7231 = !DILocation(line: 30, column: 5, scope: !7211)
!7232 = !DILocation(line: 32, column: 2, scope: !7211)
!7233 = distinct !DISubprogram(name: "strncpy", scope: !7212, file: !7212, line: 42, type: !7234, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7236)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!256, !7215, !7216, !252}
!7236 = !{!7237, !7238, !7239, !7240}
!7237 = !DILocalVariable(name: "d", arg: 1, scope: !7233, file: !7212, line: 42, type: !7215)
!7238 = !DILocalVariable(name: "s", arg: 2, scope: !7233, file: !7212, line: 42, type: !7216)
!7239 = !DILocalVariable(name: "n", arg: 3, scope: !7233, file: !7212, line: 42, type: !252)
!7240 = !DILocalVariable(name: "dest", scope: !7233, file: !7212, line: 44, type: !256)
!7241 = !DILocation(line: 0, scope: !7233)
!7242 = !DILocation(line: 46, column: 12, scope: !7233)
!7243 = !DILocation(line: 46, column: 17, scope: !7233)
!7244 = !DILocation(line: 46, column: 20, scope: !7233)
!7245 = !DILocation(line: 46, column: 23, scope: !7233)
!7246 = !DILocation(line: 46, column: 2, scope: !7233)
!7247 = !DILocation(line: 47, column: 6, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7233, file: !7212, line: 46, column: 32)
!7249 = !DILocation(line: 48, column: 4, scope: !7248)
!7250 = !DILocation(line: 49, column: 4, scope: !7248)
!7251 = !DILocation(line: 50, column: 4, scope: !7248)
!7252 = distinct !{!7252, !7246, !7253}
!7253 = !DILocation(line: 51, column: 2, scope: !7233)
!7254 = !DILocation(line: 54, column: 6, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7233, file: !7212, line: 53, column: 16)
!7256 = !DILocation(line: 55, column: 4, scope: !7255)
!7257 = !DILocation(line: 56, column: 4, scope: !7255)
!7258 = !DILocation(line: 53, column: 11, scope: !7233)
!7259 = !DILocation(line: 53, column: 2, scope: !7233)
!7260 = distinct !{!7260, !7259, !7261}
!7261 = !DILocation(line: 57, column: 2, scope: !7233)
!7262 = !DILocation(line: 59, column: 2, scope: !7233)
!7263 = distinct !DISubprogram(name: "strchr", scope: !7212, file: !7212, line: 69, type: !7264, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7266)
!7264 = !DISubroutineType(types: !7265)
!7265 = !{!256, !123, !107}
!7266 = !{!7267, !7268, !7269}
!7267 = !DILocalVariable(name: "s", arg: 1, scope: !7263, file: !7212, line: 69, type: !123)
!7268 = !DILocalVariable(name: "c", arg: 2, scope: !7263, file: !7212, line: 69, type: !107)
!7269 = !DILocalVariable(name: "tmp", scope: !7263, file: !7212, line: 71, type: !125)
!7270 = !DILocation(line: 0, scope: !7263)
!7271 = !DILocation(line: 73, column: 2, scope: !7263)
!7272 = !DILocation(line: 73, column: 10, scope: !7263)
!7273 = !DILocation(line: 73, column: 13, scope: !7263)
!7274 = !DILocation(line: 73, column: 21, scope: !7263)
!7275 = !DILocation(line: 74, column: 4, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7263, file: !7212, line: 73, column: 38)
!7277 = distinct !{!7277, !7271, !7278}
!7278 = !DILocation(line: 75, column: 2, scope: !7263)
!7279 = !DILocation(line: 77, column: 9, scope: !7263)
!7280 = !DILocation(line: 77, column: 2, scope: !7263)
!7281 = distinct !DISubprogram(name: "strrchr", scope: !7212, file: !7212, line: 87, type: !7264, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7282)
!7282 = !{!7283, !7284, !7285}
!7283 = !DILocalVariable(name: "s", arg: 1, scope: !7281, file: !7212, line: 87, type: !123)
!7284 = !DILocalVariable(name: "c", arg: 2, scope: !7281, file: !7212, line: 87, type: !107)
!7285 = !DILocalVariable(name: "match", scope: !7281, file: !7212, line: 89, type: !256)
!7286 = !DILocation(line: 0, scope: !7281)
!7287 = !DILocation(line: 91, column: 2, scope: !7281)
!7288 = !DILocation(line: 92, column: 7, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !7212, line: 92, column: 7)
!7290 = distinct !DILexicalBlock(scope: !7281, file: !7212, line: 91, column: 5)
!7291 = !DILocation(line: 92, column: 10, scope: !7289)
!7292 = !DILocation(line: 92, column: 7, scope: !7290)
!7293 = !DILocation(line: 95, column: 13, scope: !7281)
!7294 = !DILocation(line: 95, column: 2, scope: !7290)
!7295 = distinct !{!7295, !7287, !7296}
!7296 = !DILocation(line: 95, column: 15, scope: !7281)
!7297 = !DILocation(line: 97, column: 2, scope: !7281)
!7298 = distinct !DISubprogram(name: "strlen", scope: !7212, file: !7212, line: 107, type: !7299, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7301)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{!252, !123}
!7301 = !{!7302, !7303}
!7302 = !DILocalVariable(name: "s", arg: 1, scope: !7298, file: !7212, line: 107, type: !123)
!7303 = !DILocalVariable(name: "n", scope: !7298, file: !7212, line: 109, type: !252)
!7304 = !DILocation(line: 0, scope: !7298)
!7305 = !DILocation(line: 111, column: 9, scope: !7298)
!7306 = !DILocation(line: 111, column: 12, scope: !7298)
!7307 = !DILocation(line: 111, column: 2, scope: !7298)
!7308 = !DILocation(line: 112, column: 4, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7298, file: !7212, line: 111, column: 21)
!7310 = !DILocation(line: 113, column: 4, scope: !7309)
!7311 = distinct !{!7311, !7307, !7312}
!7312 = !DILocation(line: 114, column: 2, scope: !7298)
!7313 = !DILocation(line: 116, column: 2, scope: !7298)
!7314 = distinct !DISubprogram(name: "strnlen", scope: !7212, file: !7212, line: 126, type: !7315, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7317)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!252, !123, !252}
!7317 = !{!7318, !7319, !7320}
!7318 = !DILocalVariable(name: "s", arg: 1, scope: !7314, file: !7212, line: 126, type: !123)
!7319 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7314, file: !7212, line: 126, type: !252)
!7320 = !DILocalVariable(name: "n", scope: !7314, file: !7212, line: 128, type: !252)
!7321 = !DILocation(line: 0, scope: !7314)
!7322 = !DILocation(line: 130, column: 9, scope: !7314)
!7323 = !DILocation(line: 130, column: 12, scope: !7314)
!7324 = !DILocation(line: 130, column: 20, scope: !7314)
!7325 = !DILocation(line: 130, column: 2, scope: !7314)
!7326 = !DILocation(line: 131, column: 4, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7314, file: !7212, line: 130, column: 35)
!7328 = !DILocation(line: 132, column: 4, scope: !7327)
!7329 = distinct !{!7329, !7325, !7330}
!7330 = !DILocation(line: 133, column: 2, scope: !7314)
!7331 = !DILocation(line: 135, column: 2, scope: !7314)
!7332 = distinct !DISubprogram(name: "strcmp", scope: !7212, file: !7212, line: 145, type: !7333, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7335)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{!107, !123, !123}
!7335 = !{!7336, !7337}
!7336 = !DILocalVariable(name: "s1", arg: 1, scope: !7332, file: !7212, line: 145, type: !123)
!7337 = !DILocalVariable(name: "s2", arg: 2, scope: !7332, file: !7212, line: 145, type: !123)
!7338 = !DILocation(line: 0, scope: !7332)
!7339 = !DILocation(line: 147, column: 10, scope: !7332)
!7340 = !DILocation(line: 147, column: 17, scope: !7332)
!7341 = !DILocation(line: 147, column: 14, scope: !7332)
!7342 = !DILocation(line: 147, column: 22, scope: !7332)
!7343 = !DILocation(line: 148, column: 5, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7332, file: !7212, line: 147, column: 40)
!7345 = !DILocation(line: 149, column: 5, scope: !7344)
!7346 = distinct !{!7346, !7347, !7348}
!7347 = !DILocation(line: 147, column: 2, scope: !7332)
!7348 = !DILocation(line: 150, column: 2, scope: !7332)
!7349 = !DILocation(line: 152, column: 9, scope: !7332)
!7350 = !DILocation(line: 152, column: 15, scope: !7332)
!7351 = !DILocation(line: 152, column: 13, scope: !7332)
!7352 = !DILocation(line: 152, column: 2, scope: !7332)
!7353 = distinct !DISubprogram(name: "strncmp", scope: !7212, file: !7212, line: 162, type: !7354, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7356)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{!107, !123, !123, !252}
!7356 = !{!7357, !7358, !7359}
!7357 = !DILocalVariable(name: "s1", arg: 1, scope: !7353, file: !7212, line: 162, type: !123)
!7358 = !DILocalVariable(name: "s2", arg: 2, scope: !7353, file: !7212, line: 162, type: !123)
!7359 = !DILocalVariable(name: "n", arg: 3, scope: !7353, file: !7212, line: 162, type: !252)
!7360 = !DILocation(line: 0, scope: !7353)
!7361 = !DILocation(line: 164, column: 17, scope: !7353)
!7362 = !DILocation(line: 164, column: 21, scope: !7353)
!7363 = !DILocation(line: 164, column: 28, scope: !7353)
!7364 = !DILocation(line: 164, column: 25, scope: !7353)
!7365 = !DILocation(line: 164, column: 33, scope: !7353)
!7366 = !DILocation(line: 165, column: 5, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7353, file: !7212, line: 164, column: 51)
!7368 = !DILocation(line: 166, column: 5, scope: !7367)
!7369 = !DILocation(line: 167, column: 4, scope: !7367)
!7370 = distinct !{!7370, !7371, !7372}
!7371 = !DILocation(line: 164, column: 2, scope: !7353)
!7372 = !DILocation(line: 168, column: 2, scope: !7353)
!7373 = !DILocation(line: 170, column: 25, scope: !7353)
!7374 = !DILocation(line: 170, column: 31, scope: !7353)
!7375 = !DILocation(line: 170, column: 29, scope: !7353)
!7376 = !DILocation(line: 170, column: 9, scope: !7353)
!7377 = !DILocation(line: 170, column: 2, scope: !7353)
!7378 = distinct !DISubprogram(name: "strtok_r", scope: !7212, file: !7212, line: 180, type: !7379, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7382)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!256, !256, !123, !7381}
!7381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7382 = !{!7383, !7384, !7385, !7386, !7387}
!7383 = !DILocalVariable(name: "str", arg: 1, scope: !7378, file: !7212, line: 180, type: !256)
!7384 = !DILocalVariable(name: "sep", arg: 2, scope: !7378, file: !7212, line: 180, type: !123)
!7385 = !DILocalVariable(name: "state", arg: 3, scope: !7378, file: !7212, line: 180, type: !7381)
!7386 = !DILocalVariable(name: "start", scope: !7378, file: !7212, line: 182, type: !256)
!7387 = !DILocalVariable(name: "end", scope: !7378, file: !7212, line: 182, type: !256)
!7388 = !DILocation(line: 0, scope: !7378)
!7389 = !DILocation(line: 184, column: 10, scope: !7378)
!7390 = !DILocation(line: 184, column: 22, scope: !7378)
!7391 = !DILocation(line: 187, column: 9, scope: !7378)
!7392 = !DILocation(line: 187, column: 16, scope: !7378)
!7393 = !DILocation(line: 187, column: 19, scope: !7378)
!7394 = !DILocation(line: 187, column: 2, scope: !7378)
!7395 = !DILocation(line: 188, column: 8, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7378, file: !7212, line: 187, column: 40)
!7397 = distinct !{!7397, !7394, !7398}
!7398 = !DILocation(line: 189, column: 2, scope: !7378)
!7399 = !DILocation(line: 198, column: 9, scope: !7378)
!7400 = !DILocation(line: 198, column: 18, scope: !7378)
!7401 = !DILocation(line: 198, column: 17, scope: !7378)
!7402 = !DILocation(line: 198, column: 2, scope: !7378)
!7403 = !DILocation(line: 199, column: 6, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7378, file: !7212, line: 198, column: 37)
!7405 = !DILocation(line: 198, column: 14, scope: !7378)
!7406 = distinct !{!7406, !7402, !7407}
!7407 = !DILocation(line: 200, column: 2, scope: !7378)
!7408 = !DILocation(line: 203, column: 8, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !7212, line: 202, column: 20)
!7410 = distinct !DILexicalBlock(scope: !7378, file: !7212, line: 202, column: 6)
!7411 = !DILocation(line: 204, column: 16, scope: !7409)
!7412 = !DILocation(line: 205, column: 2, scope: !7409)
!7413 = !DILocation(line: 210, column: 1, scope: !7378)
!7414 = distinct !DISubprogram(name: "strcat", scope: !7212, file: !7212, line: 212, type: !7213, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7415)
!7415 = !{!7416, !7417}
!7416 = !DILocalVariable(name: "dest", arg: 1, scope: !7414, file: !7212, line: 212, type: !7215)
!7417 = !DILocalVariable(name: "src", arg: 2, scope: !7414, file: !7212, line: 212, type: !7216)
!7418 = !DILocation(line: 0, scope: !7414)
!7419 = !DILocation(line: 214, column: 16, scope: !7414)
!7420 = !DILocation(line: 214, column: 14, scope: !7414)
!7421 = !DILocation(line: 214, column: 2, scope: !7414)
!7422 = !DILocation(line: 215, column: 2, scope: !7414)
!7423 = distinct !DISubprogram(name: "strncat", scope: !7212, file: !7212, line: 218, type: !7234, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7424)
!7424 = !{!7425, !7426, !7427, !7428, !7429}
!7425 = !DILocalVariable(name: "dest", arg: 1, scope: !7423, file: !7212, line: 218, type: !7215)
!7426 = !DILocalVariable(name: "src", arg: 2, scope: !7423, file: !7212, line: 218, type: !7216)
!7427 = !DILocalVariable(name: "n", arg: 3, scope: !7423, file: !7212, line: 219, type: !252)
!7428 = !DILocalVariable(name: "orig_dest", scope: !7423, file: !7212, line: 221, type: !256)
!7429 = !DILocalVariable(name: "len", scope: !7423, file: !7212, line: 222, type: !252)
!7430 = !DILocation(line: 0, scope: !7423)
!7431 = !DILocation(line: 222, column: 15, scope: !7423)
!7432 = !DILocation(line: 224, column: 7, scope: !7423)
!7433 = !DILocation(line: 225, column: 14, scope: !7423)
!7434 = !DILocation(line: 225, column: 19, scope: !7423)
!7435 = !DILocation(line: 225, column: 11, scope: !7423)
!7436 = !DILocation(line: 225, column: 23, scope: !7423)
!7437 = !DILocation(line: 225, column: 28, scope: !7423)
!7438 = !DILocation(line: 225, column: 2, scope: !7423)
!7439 = !DILocation(line: 226, column: 17, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7423, file: !7212, line: 225, column: 38)
!7441 = !DILocation(line: 226, column: 8, scope: !7440)
!7442 = !DILocation(line: 226, column: 11, scope: !7440)
!7443 = distinct !{!7443, !7438, !7444}
!7444 = !DILocation(line: 227, column: 2, scope: !7423)
!7445 = !DILocation(line: 228, column: 8, scope: !7423)
!7446 = !DILocation(line: 230, column: 2, scope: !7423)
!7447 = distinct !DISubprogram(name: "memcmp", scope: !7212, file: !7212, line: 239, type: !7448, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!107, !13, !13, !252}
!7450 = !{!7451, !7452, !7453, !7454, !7455}
!7451 = !DILocalVariable(name: "m1", arg: 1, scope: !7447, file: !7212, line: 239, type: !13)
!7452 = !DILocalVariable(name: "m2", arg: 2, scope: !7447, file: !7212, line: 239, type: !13)
!7453 = !DILocalVariable(name: "n", arg: 3, scope: !7447, file: !7212, line: 239, type: !252)
!7454 = !DILocalVariable(name: "c1", scope: !7447, file: !7212, line: 241, type: !123)
!7455 = !DILocalVariable(name: "c2", scope: !7447, file: !7212, line: 242, type: !123)
!7456 = !DILocation(line: 0, scope: !7447)
!7457 = !DILocation(line: 244, column: 7, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7447, file: !7212, line: 244, column: 6)
!7459 = !DILocation(line: 244, column: 6, scope: !7447)
!7460 = !DILocation(line: 248, column: 10, scope: !7447)
!7461 = !DILocation(line: 248, column: 14, scope: !7447)
!7462 = !DILocation(line: 248, column: 19, scope: !7447)
!7463 = !DILocation(line: 248, column: 2, scope: !7447)
!7464 = !DILocation(line: 248, column: 23, scope: !7447)
!7465 = !DILocation(line: 248, column: 30, scope: !7447)
!7466 = !DILocation(line: 248, column: 27, scope: !7447)
!7467 = !DILocation(line: 249, column: 5, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7447, file: !7212, line: 248, column: 36)
!7469 = !DILocation(line: 250, column: 5, scope: !7468)
!7470 = distinct !{!7470, !7463, !7471}
!7471 = !DILocation(line: 251, column: 2, scope: !7447)
!7472 = !DILocation(line: 253, column: 9, scope: !7447)
!7473 = !DILocation(line: 253, column: 15, scope: !7447)
!7474 = !DILocation(line: 253, column: 13, scope: !7447)
!7475 = !DILocation(line: 253, column: 2, scope: !7447)
!7476 = !DILocation(line: 254, column: 1, scope: !7447)
!7477 = distinct !DISubprogram(name: "memmove", scope: !7212, file: !7212, line: 263, type: !7478, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7480)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{!102, !102, !13, !252}
!7480 = !{!7481, !7482, !7483, !7484, !7485}
!7481 = !DILocalVariable(name: "d", arg: 1, scope: !7477, file: !7212, line: 263, type: !102)
!7482 = !DILocalVariable(name: "s", arg: 2, scope: !7477, file: !7212, line: 263, type: !13)
!7483 = !DILocalVariable(name: "n", arg: 3, scope: !7477, file: !7212, line: 263, type: !252)
!7484 = !DILocalVariable(name: "dest", scope: !7477, file: !7212, line: 265, type: !256)
!7485 = !DILocalVariable(name: "src", scope: !7477, file: !7212, line: 266, type: !123)
!7486 = !DILocation(line: 0, scope: !7477)
!7487 = !DILocation(line: 268, column: 21, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7477, file: !7212, line: 268, column: 6)
!7489 = !DILocation(line: 268, column: 28, scope: !7488)
!7490 = !DILocation(line: 268, column: 6, scope: !7477)
!7491 = !DILocation(line: 280, column: 12, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7488, file: !7212, line: 278, column: 9)
!7493 = !DILocation(line: 280, column: 3, scope: !7492)
!7494 = !DILocation(line: 275, column: 5, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !7212, line: 274, column: 17)
!7496 = distinct !DILexicalBlock(scope: !7488, file: !7212, line: 268, column: 33)
!7497 = !DILocation(line: 276, column: 14, scope: !7495)
!7498 = !DILocation(line: 276, column: 4, scope: !7495)
!7499 = !DILocation(line: 276, column: 12, scope: !7495)
!7500 = !DILocation(line: 274, column: 12, scope: !7496)
!7501 = !DILocation(line: 274, column: 3, scope: !7496)
!7502 = distinct !{!7502, !7501, !7503}
!7503 = !DILocation(line: 277, column: 3, scope: !7496)
!7504 = !DILocation(line: 281, column: 12, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7492, file: !7212, line: 280, column: 17)
!7506 = !DILocation(line: 281, column: 10, scope: !7505)
!7507 = !DILocation(line: 282, column: 8, scope: !7505)
!7508 = !DILocation(line: 283, column: 7, scope: !7505)
!7509 = !DILocation(line: 284, column: 5, scope: !7505)
!7510 = distinct !{!7510, !7493, !7511}
!7511 = !DILocation(line: 285, column: 3, scope: !7492)
!7512 = !DILocation(line: 288, column: 2, scope: !7477)
!7513 = distinct !DISubprogram(name: "memcpy", scope: !7212, file: !7212, line: 298, type: !7514, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7518)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!102, !7516, !7517, !252}
!7516 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7517 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7518 = !{!7519, !7520, !7521, !7522, !7523}
!7519 = !DILocalVariable(name: "d", arg: 1, scope: !7513, file: !7212, line: 298, type: !7516)
!7520 = !DILocalVariable(name: "s", arg: 2, scope: !7513, file: !7212, line: 298, type: !7517)
!7521 = !DILocalVariable(name: "n", arg: 3, scope: !7513, file: !7212, line: 298, type: !252)
!7522 = !DILocalVariable(name: "d_byte", scope: !7513, file: !7212, line: 302, type: !144)
!7523 = !DILocalVariable(name: "s_byte", scope: !7513, file: !7212, line: 303, type: !2831)
!7524 = !DILocation(line: 0, scope: !7513)
!7525 = !DILocation(line: 337, column: 11, scope: !7513)
!7526 = !DILocation(line: 337, column: 2, scope: !7513)
!7527 = !DILocation(line: 338, column: 25, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7513, file: !7212, line: 337, column: 16)
!7529 = !DILocation(line: 338, column: 17, scope: !7528)
!7530 = !DILocation(line: 338, column: 11, scope: !7528)
!7531 = !DILocation(line: 338, column: 15, scope: !7528)
!7532 = !DILocation(line: 339, column: 4, scope: !7528)
!7533 = distinct !{!7533, !7526, !7534}
!7534 = !DILocation(line: 340, column: 2, scope: !7513)
!7535 = !DILocation(line: 342, column: 2, scope: !7513)
!7536 = distinct !DISubprogram(name: "memset", scope: !7212, file: !7212, line: 352, type: !7537, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!102, !102, !107, !252}
!7539 = !{!7540, !7541, !7542, !7543, !7544}
!7540 = !DILocalVariable(name: "buf", arg: 1, scope: !7536, file: !7212, line: 352, type: !102)
!7541 = !DILocalVariable(name: "c", arg: 2, scope: !7536, file: !7212, line: 352, type: !107)
!7542 = !DILocalVariable(name: "n", arg: 3, scope: !7536, file: !7212, line: 352, type: !252)
!7543 = !DILocalVariable(name: "d_byte", scope: !7536, file: !7212, line: 356, type: !144)
!7544 = !DILocalVariable(name: "c_byte", scope: !7536, file: !7212, line: 357, type: !134)
!7545 = !DILocation(line: 0, scope: !7536)
!7546 = !DILocation(line: 357, column: 25, scope: !7536)
!7547 = !DILocation(line: 389, column: 11, scope: !7536)
!7548 = !DILocation(line: 389, column: 2, scope: !7536)
!7549 = !DILocation(line: 390, column: 11, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7536, file: !7212, line: 389, column: 16)
!7551 = !DILocation(line: 390, column: 15, scope: !7550)
!7552 = !DILocation(line: 391, column: 4, scope: !7550)
!7553 = distinct !{!7553, !7548, !7554}
!7554 = !DILocation(line: 392, column: 2, scope: !7536)
!7555 = !DILocation(line: 394, column: 2, scope: !7536)
!7556 = distinct !DISubprogram(name: "memchr", scope: !7212, file: !7212, line: 404, type: !7557, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7559)
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!102, !13, !107, !252}
!7559 = !{!7560, !7561, !7562, !7563}
!7560 = !DILocalVariable(name: "s", arg: 1, scope: !7556, file: !7212, line: 404, type: !13)
!7561 = !DILocalVariable(name: "c", arg: 2, scope: !7556, file: !7212, line: 404, type: !107)
!7562 = !DILocalVariable(name: "n", arg: 3, scope: !7556, file: !7212, line: 404, type: !252)
!7563 = !DILocalVariable(name: "p", scope: !7564, file: !7212, line: 407, type: !2831)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !7212, line: 406, column: 14)
!7565 = distinct !DILexicalBlock(scope: !7556, file: !7212, line: 406, column: 6)
!7566 = !DILocation(line: 0, scope: !7556)
!7567 = !DILocation(line: 406, column: 8, scope: !7565)
!7568 = !DILocation(line: 406, column: 6, scope: !7556)
!7569 = !DILocation(line: 409, column: 3, scope: !7564)
!7570 = !DILocation(line: 0, scope: !7564)
!7571 = !DILocation(line: 410, column: 8, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !7212, line: 410, column: 8)
!7573 = distinct !DILexicalBlock(scope: !7564, file: !7212, line: 409, column: 6)
!7574 = !DILocation(line: 410, column: 13, scope: !7572)
!7575 = !DILocation(line: 410, column: 8, scope: !7573)
!7576 = distinct !{!7576, !7569, !7577}
!7577 = !DILocation(line: 414, column: 20, scope: !7564)
!7578 = !DILocation(line: 417, column: 2, scope: !7556)
!7579 = !DILocation(line: 418, column: 1, scope: !7556)
!7580 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !535, file: !535, line: 23, type: !3529, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7581)
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "hook", arg: 1, scope: !7580, file: !535, line: 23, type: !269)
!7583 = !DILocation(line: 0, scope: !7580)
!7584 = !DILocation(line: 25, column: 15, scope: !7580)
!7585 = !DILocation(line: 26, column: 1, scope: !7580)
!7586 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !535, file: !535, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7587)
!7587 = !{!7588}
!7588 = !DILocalVariable(name: "c", arg: 1, scope: !7586, file: !535, line: 14, type: !107)
!7589 = !DILocation(line: 0, scope: !7586)
!7590 = !DILocation(line: 18, column: 2, scope: !7586)
!7591 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !535, file: !535, line: 28, type: !7592, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!107, !107, !531}
!7594 = !{!7595, !7596}
!7595 = !DILocalVariable(name: "c", arg: 1, scope: !7591, file: !535, line: 28, type: !107)
!7596 = !DILocalVariable(name: "stream", arg: 2, scope: !7591, file: !535, line: 28, type: !531)
!7597 = !DILocation(line: 0, scope: !7591)
!7598 = !DILocation(line: 30, column: 27, scope: !7591)
!7599 = !DILocation(line: 30, column: 50, scope: !7591)
!7600 = !DILocation(line: 30, column: 9, scope: !7591)
!7601 = !DILocation(line: 30, column: 2, scope: !7591)
!7602 = distinct !DISubprogram(name: "fputc", scope: !535, file: !535, line: 41, type: !7592, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7603)
!7603 = !{!7604, !7605}
!7604 = !DILocalVariable(name: "c", arg: 1, scope: !7602, file: !535, line: 41, type: !107)
!7605 = !DILocalVariable(name: "stream", arg: 2, scope: !7602, file: !535, line: 41, type: !531)
!7606 = !DILocation(line: 0, scope: !7602)
!7607 = !DILocation(line: 43, column: 9, scope: !7602)
!7608 = !DILocation(line: 43, column: 2, scope: !7602)
!7609 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7610, file: !7610, line: 72, type: !7592, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7611)
!7610 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_carbon/echo_bot")
!7611 = !{!7612, !7613}
!7612 = !DILocalVariable(name: "c", arg: 1, scope: !7609, file: !7610, line: 72, type: !107)
!7613 = !DILocalVariable(name: "stream", arg: 2, scope: !7609, file: !7610, line: 72, type: !531)
!7614 = !DILocation(line: 0, scope: !7609)
!7615 = !DILocation(line: 81, column: 2, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7609, file: !7610, line: 81, column: 2)
!7617 = !{i64 2154212310}
!7618 = !DILocation(line: 82, column: 9, scope: !7609)
!7619 = !DILocation(line: 82, column: 2, scope: !7609)
!7620 = distinct !DISubprogram(name: "fputs", scope: !535, file: !535, line: 46, type: !7621, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7624)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{!107, !7216, !7623}
!7623 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!7624 = !{!7625, !7626, !7627, !7628}
!7625 = !DILocalVariable(name: "s", arg: 1, scope: !7620, file: !535, line: 46, type: !7216)
!7626 = !DILocalVariable(name: "stream", arg: 2, scope: !7620, file: !535, line: 46, type: !7623)
!7627 = !DILocalVariable(name: "len", scope: !7620, file: !535, line: 48, type: !107)
!7628 = !DILocalVariable(name: "ret", scope: !7620, file: !535, line: 49, type: !107)
!7629 = !DILocation(line: 0, scope: !7620)
!7630 = !DILocation(line: 48, column: 12, scope: !7620)
!7631 = !DILocation(line: 51, column: 8, scope: !7620)
!7632 = !DILocation(line: 53, column: 13, scope: !7620)
!7633 = !DILocation(line: 53, column: 9, scope: !7620)
!7634 = !DILocation(line: 53, column: 2, scope: !7620)
!7635 = distinct !DISubprogram(name: "fwrite", scope: !535, file: !535, line: 99, type: !7636, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!252, !7517, !252, !252, !7623}
!7638 = !{!7639, !7640, !7641, !7642}
!7639 = !DILocalVariable(name: "ptr", arg: 1, scope: !7635, file: !535, line: 99, type: !7517)
!7640 = !DILocalVariable(name: "size", arg: 2, scope: !7635, file: !535, line: 99, type: !252)
!7641 = !DILocalVariable(name: "nitems", arg: 3, scope: !7635, file: !535, line: 99, type: !252)
!7642 = !DILocalVariable(name: "stream", arg: 4, scope: !7635, file: !535, line: 100, type: !7623)
!7643 = !DILocation(line: 0, scope: !7635)
!7644 = !DILocation(line: 102, column: 9, scope: !7635)
!7645 = !DILocation(line: 102, column: 2, scope: !7635)
!7646 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7610, file: !7610, line: 96, type: !7636, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7647)
!7647 = !{!7648, !7649, !7650, !7651}
!7648 = !DILocalVariable(name: "ptr", arg: 1, scope: !7646, file: !7610, line: 96, type: !7517)
!7649 = !DILocalVariable(name: "size", arg: 2, scope: !7646, file: !7610, line: 96, type: !252)
!7650 = !DILocalVariable(name: "nitems", arg: 3, scope: !7646, file: !7610, line: 96, type: !252)
!7651 = !DILocalVariable(name: "stream", arg: 4, scope: !7646, file: !7610, line: 96, type: !7623)
!7652 = !DILocation(line: 0, scope: !7646)
!7653 = !DILocation(line: 107, column: 2, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7646, file: !7610, line: 107, column: 2)
!7655 = !{i64 2154212414}
!7656 = !DILocation(line: 108, column: 9, scope: !7646)
!7657 = !DILocation(line: 108, column: 2, scope: !7646)
!7658 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !535, file: !535, line: 56, type: !7636, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7659)
!7659 = !{!7660, !7661, !7662, !7663, !7664, !7665, !7666, !7667}
!7660 = !DILocalVariable(name: "ptr", arg: 1, scope: !7658, file: !535, line: 56, type: !7517)
!7661 = !DILocalVariable(name: "size", arg: 2, scope: !7658, file: !535, line: 56, type: !252)
!7662 = !DILocalVariable(name: "nitems", arg: 3, scope: !7658, file: !535, line: 57, type: !252)
!7663 = !DILocalVariable(name: "stream", arg: 4, scope: !7658, file: !535, line: 57, type: !7623)
!7664 = !DILocalVariable(name: "i", scope: !7658, file: !535, line: 59, type: !252)
!7665 = !DILocalVariable(name: "j", scope: !7658, file: !535, line: 60, type: !252)
!7666 = !DILocalVariable(name: "p", scope: !7658, file: !535, line: 61, type: !2831)
!7667 = !DILabel(scope: !7658, name: "done", file: !535, line: 82)
!7668 = !DILocation(line: 0, scope: !7658)
!7669 = !DILocation(line: 63, column: 14, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7658, file: !535, line: 63, column: 6)
!7671 = !DILocation(line: 63, column: 24, scope: !7670)
!7672 = !DILocation(line: 72, column: 3, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7658, file: !535, line: 70, column: 5)
!7674 = !DILocation(line: 0, scope: !7673)
!7675 = !DILocation(line: 73, column: 8, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !535, line: 73, column: 8)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !535, line: 72, column: 6)
!7678 = !DILocation(line: 73, column: 29, scope: !7676)
!7679 = !DILocation(line: 73, column: 27, scope: !7676)
!7680 = !DILocation(line: 73, column: 21, scope: !7676)
!7681 = !DILocation(line: 73, column: 33, scope: !7676)
!7682 = !DILocation(line: 73, column: 8, scope: !7677)
!7683 = !DILocation(line: 76, column: 5, scope: !7677)
!7684 = !DILocation(line: 77, column: 14, scope: !7673)
!7685 = !DILocation(line: 77, column: 3, scope: !7677)
!7686 = distinct !{!7686, !7672, !7687}
!7687 = !DILocation(line: 77, column: 17, scope: !7673)
!7688 = !DILocation(line: 79, column: 4, scope: !7673)
!7689 = !DILocation(line: 80, column: 13, scope: !7658)
!7690 = !DILocation(line: 80, column: 2, scope: !7673)
!7691 = distinct !{!7691, !7692, !7693}
!7692 = !DILocation(line: 70, column: 2, scope: !7658)
!7693 = !DILocation(line: 80, column: 16, scope: !7658)
!7694 = !DILocation(line: 82, column: 1, scope: !7658)
!7695 = !DILocation(line: 83, column: 17, scope: !7658)
!7696 = !DILocation(line: 83, column: 2, scope: !7658)
!7697 = !DILocation(line: 84, column: 1, scope: !7658)
!7698 = distinct !DISubprogram(name: "puts", scope: !535, file: !535, line: 106, type: !7699, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7701)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!107, !123}
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "s", arg: 1, scope: !7698, file: !535, line: 106, type: !123)
!7703 = !DILocation(line: 0, scope: !7698)
!7704 = !DILocation(line: 108, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7698, file: !535, line: 108, column: 6)
!7706 = !DILocation(line: 108, column: 23, scope: !7705)
!7707 = !DILocation(line: 108, column: 6, scope: !7698)
!7708 = !DILocation(line: 112, column: 9, scope: !7698)
!7709 = !DILocation(line: 112, column: 29, scope: !7698)
!7710 = !DILocation(line: 112, column: 2, scope: !7698)
!7711 = !DILocation(line: 113, column: 1, scope: !7698)
!7712 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !646, file: !646, line: 368, type: !699, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7713)
!7713 = !{!7714}
!7714 = !DILocalVariable(name: "dev", arg: 1, scope: !7712, file: !646, line: 368, type: !675)
!7715 = !DILocation(line: 0, scope: !7712)
!7716 = !DILocation(line: 370, column: 2, scope: !7712)
!7717 = !DILocation(line: 371, column: 1, scope: !7712)
!7718 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !646, file: !646, line: 243, type: !7719, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7721)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{null, !107, !107, !675}
!7721 = !{!7722, !7723, !7724, !7725, !7727}
!7722 = !DILocalVariable(name: "min", arg: 1, scope: !7718, file: !646, line: 243, type: !107)
!7723 = !DILocalVariable(name: "max", arg: 2, scope: !7718, file: !646, line: 243, type: !107)
!7724 = !DILocalVariable(name: "dev", arg: 3, scope: !7718, file: !646, line: 243, type: !675)
!7725 = !DILocalVariable(name: "data", scope: !7718, file: !646, line: 245, type: !7726)
!7726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!7727 = !DILocalVariable(name: "line", scope: !7718, file: !646, line: 246, type: !107)
!7728 = !DILocation(line: 0, scope: !7718)
!7729 = !DILocation(line: 245, column: 38, scope: !7718)
!7730 = !DILocation(line: 249, column: 24, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !646, line: 249, column: 2)
!7732 = distinct !DILexicalBlock(scope: !7718, file: !646, line: 249, column: 2)
!7733 = !DILocation(line: 249, column: 2, scope: !7732)
!7734 = !DILocation(line: 251, column: 7, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !646, line: 251, column: 7)
!7736 = distinct !DILexicalBlock(scope: !7731, file: !646, line: 249, column: 39)
!7737 = !DILocation(line: 251, column: 7, scope: !7736)
!7738 = !DILocation(line: 253, column: 4, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7735, file: !646, line: 251, column: 36)
!7740 = !DILocation(line: 256, column: 24, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7739, file: !646, line: 256, column: 8)
!7742 = !DILocation(line: 256, column: 9, scope: !7741)
!7743 = !DILocation(line: 256, column: 8, scope: !7739)
!7744 = !DILocation(line: 260, column: 43, scope: !7739)
!7745 = !DILocation(line: 260, column: 4, scope: !7739)
!7746 = !DILocation(line: 261, column: 3, scope: !7739)
!7747 = !DILocation(line: 249, column: 35, scope: !7731)
!7748 = distinct !{!7748, !7733, !7749}
!7749 = !DILocation(line: 262, column: 2, scope: !7732)
!7750 = !DILocation(line: 263, column: 1, scope: !7718)
!7751 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !646, file: !646, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "line", arg: 1, scope: !7751, file: !646, line: 158, type: !107)
!7754 = !DILocation(line: 0, scope: !7751)
!7755 = !DILocation(line: 170, column: 38, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !646, line: 160, column: 17)
!7757 = distinct !DILexicalBlock(scope: !7751, file: !646, line: 160, column: 6)
!7758 = !DILocation(line: 170, column: 10, scope: !7756)
!7759 = !DILocation(line: 176, column: 1, scope: !7751)
!7760 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !646, file: !646, line: 183, type: !7761, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7763)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{null, !107}
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "line", arg: 1, scope: !7760, file: !646, line: 183, type: !107)
!7765 = !DILocation(line: 0, scope: !7760)
!7766 = !DILocation(line: 195, column: 28, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !646, line: 185, column: 17)
!7768 = distinct !DILexicalBlock(scope: !7760, file: !646, line: 185, column: 6)
!7769 = !DILocation(line: 195, column: 3, scope: !7767)
!7770 = !DILocation(line: 200, column: 1, scope: !7760)
!7771 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7772, file: !7772, line: 910, type: !6208, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7773)
!7772 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7771, file: !7772, line: 910, type: !162)
!7775 = !DILocation(line: 0, scope: !7771)
!7776 = !DILocation(line: 912, column: 3, scope: !7771)
!7777 = !DILocation(line: 913, column: 1, scope: !7771)
!7778 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7772, file: !7772, line: 834, type: !7124, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7779)
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7778, file: !7772, line: 834, type: !162)
!7781 = !DILocation(line: 0, scope: !7778)
!7782 = !DILocation(line: 836, column: 11, scope: !7778)
!7783 = !DILocation(line: 836, column: 40, scope: !7778)
!7784 = !DILocation(line: 836, column: 3, scope: !7778)
!7785 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !646, file: !646, line: 304, type: !699, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7786)
!7786 = !{!7787}
!7787 = !DILocalVariable(name: "dev", arg: 1, scope: !7785, file: !646, line: 304, type: !675)
!7788 = !DILocation(line: 0, scope: !7785)
!7789 = !DILocation(line: 306, column: 2, scope: !7785)
!7790 = !DILocation(line: 307, column: 1, scope: !7785)
!7791 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !646, file: !646, line: 299, type: !699, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7792)
!7792 = !{!7793}
!7793 = !DILocalVariable(name: "dev", arg: 1, scope: !7791, file: !646, line: 299, type: !675)
!7794 = !DILocation(line: 0, scope: !7791)
!7795 = !DILocation(line: 301, column: 2, scope: !7791)
!7796 = !DILocation(line: 302, column: 1, scope: !7791)
!7797 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !646, file: !646, line: 294, type: !699, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7798)
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "dev", arg: 1, scope: !7797, file: !646, line: 294, type: !675)
!7800 = !DILocation(line: 0, scope: !7797)
!7801 = !DILocation(line: 296, column: 2, scope: !7797)
!7802 = !DILocation(line: 297, column: 1, scope: !7797)
!7803 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !646, file: !646, line: 397, type: !699, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7804)
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7803, file: !646, line: 397, type: !675)
!7806 = !DILocation(line: 0, scope: !7803)
!7807 = !DILocation(line: 399, column: 2, scope: !7803)
!7808 = !DILocation(line: 400, column: 1, scope: !7803)
!7809 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !646, file: !646, line: 392, type: !699, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "dev", arg: 1, scope: !7809, file: !646, line: 392, type: !675)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 394, column: 2, scope: !7809)
!7814 = !DILocation(line: 395, column: 1, scope: !7809)
!7815 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !646, file: !646, line: 289, type: !699, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7816)
!7816 = !{!7817}
!7817 = !DILocalVariable(name: "dev", arg: 1, scope: !7815, file: !646, line: 289, type: !675)
!7818 = !DILocation(line: 0, scope: !7815)
!7819 = !DILocation(line: 291, column: 2, scope: !7815)
!7820 = !DILocation(line: 292, column: 1, scope: !7815)
!7821 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !646, file: !646, line: 387, type: !699, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7822)
!7822 = !{!7823}
!7823 = !DILocalVariable(name: "dev", arg: 1, scope: !7821, file: !646, line: 387, type: !675)
!7824 = !DILocation(line: 0, scope: !7821)
!7825 = !DILocation(line: 389, column: 2, scope: !7821)
!7826 = !DILocation(line: 390, column: 1, scope: !7821)
!7827 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !646, file: !646, line: 382, type: !699, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !646, line: 382, type: !675)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 384, column: 2, scope: !7827)
!7832 = !DILocation(line: 385, column: 1, scope: !7827)
!7833 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !646, file: !646, line: 373, type: !699, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7834)
!7834 = !{!7835}
!7835 = !DILocalVariable(name: "dev", arg: 1, scope: !7833, file: !646, line: 373, type: !675)
!7836 = !DILocation(line: 0, scope: !7833)
!7837 = !DILocation(line: 375, column: 2, scope: !7833)
!7838 = !DILocation(line: 376, column: 1, scope: !7833)
!7839 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !646, file: !646, line: 284, type: !699, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7840)
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !646, line: 284, type: !675)
!7842 = !DILocation(line: 0, scope: !7839)
!7843 = !DILocation(line: 286, column: 2, scope: !7839)
!7844 = !DILocation(line: 287, column: 1, scope: !7839)
!7845 = distinct !DISubprogram(name: "stm32_exti_init", scope: !646, file: !646, line: 416, type: !673, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7846)
!7846 = !{!7847}
!7847 = !DILocalVariable(name: "dev", arg: 1, scope: !7845, file: !646, line: 416, type: !675)
!7848 = !DILocation(line: 0, scope: !7845)
!7849 = !DILocation(line: 418, column: 2, scope: !7845)
!7850 = !DILocation(line: 420, column: 2, scope: !7845)
!7851 = !DILocation(line: 0, scope: !698)
!7852 = !DILocation(line: 493, column: 2, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !698, file: !646, line: 493, column: 2)
!7854 = !DILocation(line: 497, column: 2, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !698, file: !646, line: 497, column: 2)
!7856 = !DILocation(line: 507, column: 2, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !698, file: !646, line: 507, column: 2)
!7858 = !DILocation(line: 512, column: 2, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !698, file: !646, line: 512, column: 2)
!7860 = !DILocation(line: 516, column: 2, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !698, file: !646, line: 516, column: 2)
!7862 = !DILocation(line: 523, column: 2, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !698, file: !646, line: 523, column: 2)
!7864 = !DILocation(line: 527, column: 2, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !698, file: !646, line: 527, column: 2)
!7866 = !DILocation(line: 581, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !698, file: !646, line: 581, column: 2)
!7868 = !DILocation(line: 586, column: 2, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !698, file: !646, line: 586, column: 2)
!7870 = !DILocation(line: 591, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !698, file: !646, line: 591, column: 2)
!7872 = !DILocation(line: 595, column: 2, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !698, file: !646, line: 595, column: 2)
!7874 = !DILocation(line: 607, column: 1, scope: !698)
!7875 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !646, file: !646, line: 112, type: !7761, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7876)
!7876 = !{!7877, !7878}
!7877 = !DILocalVariable(name: "line", arg: 1, scope: !7875, file: !646, line: 112, type: !107)
!7878 = !DILocalVariable(name: "irqnum", scope: !7875, file: !646, line: 114, type: !107)
!7879 = !DILocation(line: 0, scope: !7875)
!7880 = !DILocation(line: 121, column: 11, scope: !7875)
!7881 = !DILocation(line: 130, column: 26, scope: !7875)
!7882 = !DILocation(line: 130, column: 2, scope: !7875)
!7883 = !DILocation(line: 134, column: 2, scope: !7875)
!7884 = !DILocation(line: 135, column: 1, scope: !7875)
!7885 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7772, file: !7772, line: 268, type: !6208, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7885, file: !7772, line: 268, type: !162)
!7888 = !DILocation(line: 0, scope: !7885)
!7889 = !DILocation(line: 270, column: 3, scope: !7885)
!7890 = !DILocation(line: 271, column: 1, scope: !7885)
!7891 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !646, file: !646, line: 137, type: !7761, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7892)
!7892 = !{!7893}
!7893 = !DILocalVariable(name: "line", arg: 1, scope: !7891, file: !646, line: 137, type: !107)
!7894 = !DILocation(line: 0, scope: !7891)
!7895 = !DILocation(line: 141, column: 11, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7891, file: !646, line: 141, column: 6)
!7897 = !DILocation(line: 141, column: 6, scope: !7891)
!7898 = !DILocation(line: 145, column: 28, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7896, file: !646, line: 141, column: 17)
!7900 = !DILocation(line: 145, column: 3, scope: !7899)
!7901 = !DILocation(line: 147, column: 2, scope: !7899)
!7902 = !DILocation(line: 151, column: 1, scope: !7891)
!7903 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7772, file: !7772, line: 309, type: !6208, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7904)
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7903, file: !7772, line: 309, type: !162)
!7906 = !DILocation(line: 0, scope: !7903)
!7907 = !DILocation(line: 311, column: 3, scope: !7903)
!7908 = !DILocation(line: 312, column: 1, scope: !7903)
!7909 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !646, file: !646, line: 202, type: !7910, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7912)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{null, !107, !107}
!7912 = !{!7913, !7914}
!7913 = !DILocalVariable(name: "line", arg: 1, scope: !7909, file: !646, line: 202, type: !107)
!7914 = !DILocalVariable(name: "trigger", arg: 2, scope: !7909, file: !646, line: 202, type: !107)
!7915 = !DILocation(line: 0, scope: !7909)
!7916 = !DILocation(line: 211, column: 2, scope: !7909)
!7917 = !DILocation(line: 213, column: 36, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7909, file: !646, line: 211, column: 19)
!7919 = !DILocation(line: 213, column: 3, scope: !7918)
!7920 = !DILocation(line: 214, column: 3, scope: !7918)
!7921 = !DILocation(line: 215, column: 3, scope: !7918)
!7922 = !DILocation(line: 217, column: 35, scope: !7918)
!7923 = !DILocation(line: 217, column: 3, scope: !7918)
!7924 = !DILocation(line: 218, column: 3, scope: !7918)
!7925 = !DILocation(line: 219, column: 3, scope: !7918)
!7926 = !DILocation(line: 221, column: 36, scope: !7918)
!7927 = !DILocation(line: 221, column: 3, scope: !7918)
!7928 = !DILocation(line: 222, column: 3, scope: !7918)
!7929 = !DILocation(line: 223, column: 3, scope: !7918)
!7930 = !DILocation(line: 225, column: 35, scope: !7918)
!7931 = !DILocation(line: 225, column: 3, scope: !7918)
!7932 = !DILocation(line: 226, column: 3, scope: !7918)
!7933 = !DILocation(line: 227, column: 3, scope: !7918)
!7934 = !DILocation(line: 232, column: 1, scope: !7909)
!7935 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7772, file: !7772, line: 573, type: !6208, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7935, file: !7772, line: 573, type: !162)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 575, column: 3, scope: !7935)
!7940 = !DILocation(line: 577, column: 1, scope: !7935)
!7941 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7772, file: !7772, line: 703, type: !6208, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7942)
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7941, file: !7772, line: 703, type: !162)
!7944 = !DILocation(line: 0, scope: !7941)
!7945 = !DILocation(line: 705, column: 3, scope: !7941)
!7946 = !DILocation(line: 706, column: 1, scope: !7941)
!7947 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7772, file: !7772, line: 529, type: !6208, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7948)
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7947, file: !7772, line: 529, type: !162)
!7950 = !DILocation(line: 0, scope: !7947)
!7951 = !DILocation(line: 531, column: 3, scope: !7947)
!7952 = !DILocation(line: 533, column: 1, scope: !7947)
!7953 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7772, file: !7772, line: 661, type: !6208, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7954)
!7954 = !{!7955}
!7955 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7953, file: !7772, line: 661, type: !162)
!7956 = !DILocation(line: 0, scope: !7953)
!7957 = !DILocation(line: 663, column: 3, scope: !7953)
!7958 = !DILocation(line: 664, column: 1, scope: !7953)
!7959 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !646, file: !646, line: 433, type: !7960, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!107, !107, !686, !102}
!7962 = !{!7963, !7964, !7965, !7966, !7968}
!7963 = !DILocalVariable(name: "line", arg: 1, scope: !7959, file: !646, line: 433, type: !107)
!7964 = !DILocalVariable(name: "cb", arg: 2, scope: !7959, file: !646, line: 433, type: !686)
!7965 = !DILocalVariable(name: "arg", arg: 3, scope: !7959, file: !646, line: 433, type: !102)
!7966 = !DILocalVariable(name: "dev", scope: !7959, file: !646, line: 435, type: !7967)
!7967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!7968 = !DILocalVariable(name: "data", scope: !7959, file: !646, line: 436, type: !7726)
!7969 = !DILocation(line: 0, scope: !7959)
!7970 = !DILocation(line: 438, column: 21, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7959, file: !646, line: 438, column: 6)
!7972 = !DILocation(line: 438, column: 6, scope: !7971)
!7973 = !DILocation(line: 438, column: 6, scope: !7959)
!7974 = !DILocation(line: 442, column: 20, scope: !7959)
!7975 = !DILocation(line: 443, column: 17, scope: !7959)
!7976 = !DILocation(line: 443, column: 22, scope: !7959)
!7977 = !DILocation(line: 445, column: 2, scope: !7959)
!7978 = !DILocation(line: 446, column: 1, scope: !7959)
!7979 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !646, file: !646, line: 448, type: !7761, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7980)
!7980 = !{!7981, !7982, !7983}
!7981 = !DILocalVariable(name: "line", arg: 1, scope: !7979, file: !646, line: 448, type: !107)
!7982 = !DILocalVariable(name: "dev", scope: !7979, file: !646, line: 450, type: !7967)
!7983 = !DILocalVariable(name: "data", scope: !7979, file: !646, line: 451, type: !7726)
!7984 = !DILocation(line: 0, scope: !7979)
!7985 = !DILocation(line: 453, column: 17, scope: !7979)
!7986 = !DILocation(line: 453, column: 20, scope: !7979)
!7987 = !DILocation(line: 454, column: 17, scope: !7979)
!7988 = !DILocation(line: 454, column: 22, scope: !7979)
!7989 = !DILocation(line: 455, column: 1, scope: !7979)
!7990 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !835, file: !835, line: 183, type: !873, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !7991)
!7991 = !{!7992, !7993, !7994, !7995, !7996}
!7992 = !DILocalVariable(name: "dev", arg: 1, scope: !7990, file: !835, line: 183, type: !864)
!7993 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7990, file: !835, line: 184, type: !875)
!7994 = !DILocalVariable(name: "pclken", scope: !7990, file: !835, line: 186, type: !825)
!7995 = !DILocalVariable(name: "reg", scope: !7990, file: !835, line: 187, type: !1476)
!7996 = !DILocalVariable(name: "reg_val", scope: !7990, file: !835, line: 188, type: !162)
!7997 = !DILocation(line: 0, scope: !7990)
!7998 = !DILocation(line: 192, column: 6, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7990, file: !835, line: 192, column: 6)
!8000 = !DILocation(line: 192, column: 6, scope: !7990)
!8001 = !DILocation(line: 197, column: 52, scope: !7990)
!8002 = !DILocation(line: 197, column: 8, scope: !7990)
!8003 = !DILocation(line: 198, column: 12, scope: !7990)
!8004 = !DILocation(line: 199, column: 21, scope: !7990)
!8005 = !DILocation(line: 199, column: 10, scope: !7990)
!8006 = !DILocation(line: 200, column: 7, scope: !7990)
!8007 = !DILocation(line: 202, column: 2, scope: !7990)
!8008 = !DILocation(line: 203, column: 1, scope: !7990)
!8009 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !835, file: !835, line: 205, type: !873, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8010)
!8010 = !{!8011, !8012, !8013, !8014, !8015}
!8011 = !DILocalVariable(name: "dev", arg: 1, scope: !8009, file: !835, line: 205, type: !864)
!8012 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8009, file: !835, line: 206, type: !875)
!8013 = !DILocalVariable(name: "pclken", scope: !8009, file: !835, line: 208, type: !825)
!8014 = !DILocalVariable(name: "reg", scope: !8009, file: !835, line: 209, type: !1476)
!8015 = !DILocalVariable(name: "reg_val", scope: !8009, file: !835, line: 210, type: !162)
!8016 = !DILocation(line: 0, scope: !8009)
!8017 = !DILocation(line: 214, column: 6, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8009, file: !835, line: 214, column: 6)
!8019 = !DILocation(line: 214, column: 6, scope: !8009)
!8020 = !DILocation(line: 219, column: 52, scope: !8009)
!8021 = !DILocation(line: 219, column: 8, scope: !8009)
!8022 = !DILocation(line: 220, column: 12, scope: !8009)
!8023 = !DILocation(line: 221, column: 22, scope: !8009)
!8024 = !DILocation(line: 221, column: 13, scope: !8009)
!8025 = !DILocation(line: 221, column: 10, scope: !8009)
!8026 = !DILocation(line: 222, column: 7, scope: !8009)
!8027 = !DILocation(line: 224, column: 2, scope: !8009)
!8028 = !DILocation(line: 225, column: 1, scope: !8009)
!8029 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !835, file: !835, line: 262, type: !889, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8030)
!8030 = !{!8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038}
!8031 = !DILocalVariable(name: "clock", arg: 1, scope: !8029, file: !835, line: 262, type: !864)
!8032 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8029, file: !835, line: 263, type: !875)
!8033 = !DILocalVariable(name: "rate", arg: 3, scope: !8029, file: !835, line: 264, type: !831)
!8034 = !DILocalVariable(name: "pclken", scope: !8029, file: !835, line: 266, type: !825)
!8035 = !DILocalVariable(name: "ahb_clock", scope: !8029, file: !835, line: 273, type: !162)
!8036 = !DILocalVariable(name: "apb1_clock", scope: !8029, file: !835, line: 274, type: !162)
!8037 = !DILocalVariable(name: "apb2_clock", scope: !8029, file: !835, line: 276, type: !162)
!8038 = !DILocalVariable(name: "ahb3_clock", scope: !8029, file: !835, line: 286, type: !162)
!8039 = !DILocation(line: 0, scope: !8029)
!8040 = !DILocation(line: 273, column: 23, scope: !8029)
!8041 = !DILocation(line: 299, column: 18, scope: !8029)
!8042 = !DILocation(line: 299, column: 2, scope: !8029)
!8043 = !DILocation(line: 274, column: 24, scope: !8029)
!8044 = !DILocation(line: 319, column: 3, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8029, file: !835, line: 299, column: 23)
!8046 = !DILocation(line: 276, column: 24, scope: !8029)
!8047 = !DILocation(line: 323, column: 3, scope: !8045)
!8048 = !DILocation(line: 346, column: 33, scope: !8045)
!8049 = !DILocation(line: 346, column: 11, scope: !8045)
!8050 = !DILocation(line: 350, column: 3, scope: !8045)
!8051 = !DILocation(line: 354, column: 33, scope: !8045)
!8052 = !DILocation(line: 354, column: 11, scope: !8045)
!8053 = !DILocation(line: 358, column: 3, scope: !8045)
!8054 = !DILocation(line: 374, column: 3, scope: !8045)
!8055 = !DILocation(line: 379, column: 3, scope: !8045)
!8056 = !DILocation(line: 0, scope: !8045)
!8057 = !DILocation(line: 396, column: 1, scope: !8029)
!8058 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !835, file: !835, line: 227, type: !905, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8059)
!8059 = !{!8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067}
!8060 = !DILocalVariable(name: "dev", arg: 1, scope: !8058, file: !835, line: 227, type: !864)
!8061 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8058, file: !835, line: 228, type: !875)
!8062 = !DILocalVariable(name: "data", arg: 3, scope: !8058, file: !835, line: 229, type: !102)
!8063 = !DILocalVariable(name: "pclken", scope: !8058, file: !835, line: 233, type: !825)
!8064 = !DILocalVariable(name: "reg", scope: !8058, file: !835, line: 234, type: !1476)
!8065 = !DILocalVariable(name: "reg_val", scope: !8058, file: !835, line: 235, type: !162)
!8066 = !DILocalVariable(name: "dt_val", scope: !8058, file: !835, line: 235, type: !162)
!8067 = !DILocalVariable(name: "err", scope: !8058, file: !835, line: 236, type: !107)
!8068 = !DILocation(line: 0, scope: !8058)
!8069 = !DILocation(line: 241, column: 30, scope: !8058)
!8070 = !DILocation(line: 241, column: 8, scope: !8058)
!8071 = !DILocation(line: 242, column: 10, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8058, file: !835, line: 242, column: 6)
!8073 = !DILocation(line: 242, column: 6, scope: !8058)
!8074 = !DILocation(line: 247, column: 11, scope: !8058)
!8075 = !DILocation(line: 248, column: 6, scope: !8058)
!8076 = !DILocation(line: 247, column: 44, scope: !8058)
!8077 = !DILocation(line: 250, column: 6, scope: !8058)
!8078 = !DILocation(line: 249, column: 52, scope: !8058)
!8079 = !DILocation(line: 249, column: 8, scope: !8058)
!8080 = !DILocation(line: 251, column: 12, scope: !8058)
!8081 = !DILocation(line: 252, column: 10, scope: !8058)
!8082 = !DILocation(line: 253, column: 7, scope: !8058)
!8083 = !DILocation(line: 255, column: 2, scope: !8058)
!8084 = !DILocation(line: 260, column: 1, scope: !8058)
!8085 = distinct !DISubprogram(name: "enabled_clock", scope: !835, file: !835, line: 100, type: !8086, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8088)
!8086 = !DISubroutineType(types: !8087)
!8087 = !{!107, !162}
!8088 = !{!8089, !8090}
!8089 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8085, file: !835, line: 100, type: !162)
!8090 = !DILocalVariable(name: "r", scope: !8085, file: !835, line: 102, type: !107)
!8091 = !DILocation(line: 0, scope: !8085)
!8092 = !DILocation(line: 104, column: 2, scope: !8085)
!8093 = !DILocation(line: 180, column: 2, scope: !8085)
!8094 = !DILocation(line: 181, column: 1, scope: !8085)
!8095 = distinct !DISubprogram(name: "get_bus_clock", scope: !835, file: !835, line: 79, type: !8096, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8098)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{!162, !162, !162}
!8098 = !{!8099, !8100}
!8099 = !DILocalVariable(name: "clock", arg: 1, scope: !8095, file: !835, line: 79, type: !162)
!8100 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8095, file: !835, line: 79, type: !162)
!8101 = !DILocation(line: 0, scope: !8095)
!8102 = !DILocation(line: 81, column: 15, scope: !8095)
!8103 = !DILocation(line: 81, column: 2, scope: !8095)
!8104 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !835, file: !835, line: 68, type: !8105, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8107)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{!162, !162, !107, !107, !107}
!8107 = !{!8108, !8109, !8110, !8111}
!8108 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8104, file: !835, line: 68, type: !162)
!8109 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8104, file: !835, line: 69, type: !107)
!8110 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8104, file: !835, line: 70, type: !107)
!8111 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8104, file: !835, line: 71, type: !107)
!8112 = !DILocation(line: 0, scope: !8104)
!8113 = !DILocation(line: 75, column: 22, scope: !8104)
!8114 = !DILocation(line: 76, column: 13, scope: !8104)
!8115 = !DILocation(line: 75, column: 34, scope: !8104)
!8116 = !DILocation(line: 75, column: 2, scope: !8104)
!8117 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !835, file: !835, line: 641, type: !862, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8118)
!8118 = !{!8119, !8120, !8121}
!8119 = !DILocalVariable(name: "dev", arg: 1, scope: !8117, file: !835, line: 641, type: !864)
!8120 = !DILocalVariable(name: "old_flash_freq", scope: !8117, file: !835, line: 664, type: !162)
!8121 = !DILocalVariable(name: "new_flash_freq", scope: !8117, file: !835, line: 665, type: !162)
!8122 = !DILocation(line: 0, scope: !8117)
!8123 = !DILocation(line: 646, column: 2, scope: !8117)
!8124 = !DILocation(line: 667, column: 19, scope: !8117)
!8125 = !DILocation(line: 674, column: 21, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8117, file: !835, line: 674, column: 6)
!8127 = !DILocation(line: 674, column: 6, scope: !8117)
!8128 = !DILocation(line: 675, column: 3, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8126, file: !835, line: 674, column: 59)
!8130 = !DILocation(line: 676, column: 2, scope: !8129)
!8131 = !DILocation(line: 680, column: 2, scope: !8117)
!8132 = !DILocation(line: 683, column: 2, scope: !8117)
!8133 = !DILocation(line: 690, column: 3, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !835, line: 689, column: 9)
!8135 = distinct !DILexicalBlock(scope: !8117, file: !835, line: 685, column: 6)
!8136 = !DILocation(line: 695, column: 2, scope: !8117)
!8137 = !DILocation(line: 696, column: 2, scope: !8117)
!8138 = !DILocation(line: 696, column: 9, scope: !8117)
!8139 = !DILocation(line: 696, column: 34, scope: !8117)
!8140 = distinct !{!8140, !8137, !8141}
!8141 = !DILocation(line: 697, column: 2, scope: !8117)
!8142 = !DILocation(line: 720, column: 21, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8117, file: !835, line: 720, column: 6)
!8144 = !DILocation(line: 720, column: 6, scope: !8117)
!8145 = !DILocation(line: 721, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8143, file: !835, line: 720, column: 60)
!8147 = !DILocation(line: 722, column: 2, scope: !8146)
!8148 = !DILocation(line: 725, column: 18, scope: !8117)
!8149 = !DILocation(line: 728, column: 2, scope: !8117)
!8150 = !DILocation(line: 730, column: 2, scope: !8117)
!8151 = !DILocation(line: 745, column: 2, scope: !8117)
!8152 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8153, file: !8153, line: 3275, type: !6198, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8153 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8154 = !DILocation(line: 3277, column: 21, scope: !8152)
!8155 = !DILocation(line: 3277, column: 3, scope: !8152)
!8156 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !835, file: !835, line: 507, type: !3169, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8157 = !DILocation(line: 516, column: 4, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !835, line: 515, column: 10)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !835, line: 513, column: 7)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !835, line: 510, column: 37)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !835, line: 510, column: 6)
!8162 = !DILocation(line: 526, column: 3, scope: !8160)
!8163 = !DILocation(line: 527, column: 3, scope: !8160)
!8164 = !DILocation(line: 527, column: 10, scope: !8160)
!8165 = !DILocation(line: 527, column: 31, scope: !8160)
!8166 = distinct !{!8166, !8163, !8167}
!8167 = !DILocation(line: 529, column: 3, scope: !8160)
!8168 = !DILocation(line: 583, column: 3, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !835, line: 577, column: 37)
!8170 = distinct !DILexicalBlock(scope: !8156, file: !835, line: 577, column: 6)
!8171 = !DILocation(line: 584, column: 3, scope: !8169)
!8172 = !DILocation(line: 584, column: 10, scope: !8169)
!8173 = !DILocation(line: 584, column: 31, scope: !8169)
!8174 = distinct !{!8174, !8171, !8175}
!8175 = !DILocation(line: 585, column: 3, scope: !8169)
!8176 = !DILocation(line: 627, column: 1, scope: !8156)
!8177 = distinct !DISubprogram(name: "set_up_plls", scope: !835, file: !835, line: 448, type: !3169, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8178 = !DILocation(line: 460, column: 6, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8177, file: !835, line: 460, column: 6)
!8180 = !DILocation(line: 460, column: 31, scope: !8179)
!8181 = !DILocation(line: 460, column: 6, scope: !8177)
!8182 = !DILocation(line: 461, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !835, line: 460, column: 67)
!8184 = !DILocation(line: 462, column: 3, scope: !8183)
!8185 = !DILocation(line: 463, column: 2, scope: !8183)
!8186 = !DILocation(line: 464, column: 2, scope: !8177)
!8187 = !DILocation(line: 488, column: 2, scope: !8177)
!8188 = !DILocation(line: 492, column: 2, scope: !8177)
!8189 = !DILocation(line: 496, column: 2, scope: !8177)
!8190 = !DILocation(line: 499, column: 2, scope: !8177)
!8191 = !DILocation(line: 500, column: 2, scope: !8177)
!8192 = !DILocation(line: 500, column: 9, scope: !8177)
!8193 = !DILocation(line: 500, column: 30, scope: !8177)
!8194 = distinct !{!8194, !8191, !8195}
!8195 = !DILocation(line: 502, column: 2, scope: !8177)
!8196 = !DILocation(line: 505, column: 1, scope: !8177)
!8197 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8153, file: !8153, line: 3224, type: !6208, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8198)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8197, file: !8153, line: 3224, type: !162)
!8200 = !DILocation(line: 0, scope: !8197)
!8201 = !DILocation(line: 3226, column: 3, scope: !8197)
!8202 = !DILocation(line: 3227, column: 1, scope: !8197)
!8203 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8153, file: !8153, line: 3188, type: !6208, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8204)
!8204 = !{!8205}
!8205 = !DILocalVariable(name: "Source", arg: 1, scope: !8203, file: !8153, line: 3188, type: !162)
!8206 = !DILocation(line: 0, scope: !8203)
!8207 = !DILocation(line: 3190, column: 3, scope: !8203)
!8208 = !DILocation(line: 3191, column: 1, scope: !8203)
!8209 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8153, file: !8153, line: 3204, type: !6198, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8210 = !DILocation(line: 3206, column: 21, scope: !8209)
!8211 = !DILocation(line: 3206, column: 3, scope: !8209)
!8212 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8153, file: !8153, line: 3240, type: !6208, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8213)
!8213 = !{!8214}
!8214 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8212, file: !8153, line: 3240, type: !162)
!8215 = !DILocation(line: 0, scope: !8212)
!8216 = !DILocation(line: 3242, column: 3, scope: !8212)
!8217 = !DILocation(line: 3243, column: 1, scope: !8212)
!8218 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8153, file: !8153, line: 3256, type: !6208, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !8219)
!8219 = !{!8220}
!8220 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8218, file: !8153, line: 3256, type: !162)
!8221 = !DILocation(line: 0, scope: !8218)
!8222 = !DILocation(line: 3258, column: 3, scope: !8218)
!8223 = !DILocation(line: 3259, column: 1, scope: !8218)
!8224 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !835, file: !835, line: 409, type: !3169, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8225 = !DILocation(line: 412, column: 6, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8224, file: !835, line: 412, column: 6)
!8227 = !DILocation(line: 412, column: 27, scope: !8226)
!8228 = !DILocation(line: 412, column: 6, scope: !8224)
!8229 = !DILocation(line: 414, column: 3, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8226, file: !835, line: 412, column: 33)
!8231 = !DILocation(line: 415, column: 3, scope: !8230)
!8232 = !DILocation(line: 415, column: 10, scope: !8230)
!8233 = !DILocation(line: 415, column: 31, scope: !8230)
!8234 = distinct !{!8234, !8231, !8235}
!8235 = !DILocation(line: 417, column: 3, scope: !8230)
!8236 = !DILocation(line: 421, column: 2, scope: !8224)
!8237 = !DILocation(line: 422, column: 2, scope: !8224)
!8238 = !DILocation(line: 422, column: 9, scope: !8224)
!8239 = !DILocation(line: 422, column: 34, scope: !8224)
!8240 = distinct !{!8240, !8237, !8241}
!8241 = !DILocation(line: 423, column: 2, scope: !8224)
!8242 = !DILocation(line: 424, column: 1, scope: !8224)
!8243 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8153, file: !8153, line: 4195, type: !3169, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8244 = !DILocation(line: 4197, column: 3, scope: !8243)
!8245 = !DILocation(line: 4198, column: 1, scope: !8243)
!8246 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8153, file: !8153, line: 4184, type: !3169, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8247 = !DILocation(line: 4186, column: 3, scope: !8246)
!8248 = !DILocation(line: 4187, column: 1, scope: !8246)
!8249 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8153, file: !8153, line: 4205, type: !6198, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8250 = !DILocation(line: 4207, column: 11, scope: !8249)
!8251 = !DILocation(line: 4207, column: 44, scope: !8249)
!8252 = !DILocation(line: 4207, column: 3, scope: !8249)
!8253 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8153, file: !8153, line: 3007, type: !6198, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8254 = !DILocation(line: 3009, column: 11, scope: !8253)
!8255 = !DILocation(line: 3009, column: 44, scope: !8253)
!8256 = !DILocation(line: 3009, column: 3, scope: !8253)
!8257 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8153, file: !8153, line: 2987, type: !3169, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8258 = !DILocation(line: 2989, column: 3, scope: !8257)
!8259 = !DILocation(line: 2990, column: 1, scope: !8257)
!8260 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8153, file: !8153, line: 2939, type: !3169, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8261 = !DILocation(line: 2941, column: 3, scope: !8260)
!8262 = !DILocation(line: 2942, column: 1, scope: !8260)
!8263 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8153, file: !8153, line: 2949, type: !3169, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8264 = !DILocation(line: 2951, column: 3, scope: !8263)
!8265 = !DILocation(line: 2952, column: 1, scope: !8263)
!8266 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8153, file: !8153, line: 2969, type: !6198, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8267 = !DILocation(line: 2971, column: 11, scope: !8266)
!8268 = !DILocation(line: 2971, column: 44, scope: !8266)
!8269 = !DILocation(line: 2971, column: 3, scope: !8266)
!8270 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8153, file: !8153, line: 3143, type: !3169, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8271 = !DILocation(line: 3145, column: 3, scope: !8270)
!8272 = !DILocation(line: 3146, column: 1, scope: !8270)
!8273 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8153, file: !8153, line: 3163, type: !6198, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !771, retainedNodes: !250)
!8274 = !DILocation(line: 3165, column: 11, scope: !8273)
!8275 = !DILocation(line: 3165, column: 46, scope: !8273)
!8276 = !DILocation(line: 3165, column: 3, scope: !8273)
!8277 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8278, file: !8278, line: 40, type: !6198, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !250)
!8278 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8279 = !DILocation(line: 45, column: 3, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !8278, line: 44, column: 44)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !8278, line: 44, column: 13)
!8282 = distinct !DILexicalBlock(scope: !8277, file: !8278, line: 42, column: 6)
!8283 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8278, file: !8278, line: 56, type: !3169, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !250)
!8284 = !DILocation(line: 58, column: 2, scope: !8283)
!8285 = !DILocation(line: 62, column: 1, scope: !8283)
!8286 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8153, file: !8153, line: 4304, type: !8287, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8289)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{null, !162, !162, !162, !162}
!8289 = !{!8290, !8291, !8292, !8293}
!8290 = !DILocalVariable(name: "Source", arg: 1, scope: !8286, file: !8153, line: 4304, type: !162)
!8291 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8286, file: !8153, line: 4304, type: !162)
!8292 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8286, file: !8153, line: 4304, type: !162)
!8293 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8286, file: !8153, line: 4304, type: !162)
!8294 = !DILocation(line: 0, scope: !8286)
!8295 = !DILocation(line: 4306, column: 3, scope: !8286)
!8296 = !DILocation(line: 4308, column: 3, scope: !8286)
!8297 = !DILocation(line: 4312, column: 1, scope: !8286)
!8298 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8278, file: !8278, line: 69, type: !3169, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !250)
!8299 = !DILocation(line: 72, column: 2, scope: !8298)
!8300 = !DILocation(line: 73, column: 1, scope: !8298)
!8301 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8302, file: !8302, line: 1185, type: !6208, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8303)
!8302 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8303 = !{!8304, !8305}
!8304 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8301, file: !8302, line: 1185, type: !162)
!8305 = !DILocalVariable(name: "tmpreg", scope: !8301, file: !8302, line: 1187, type: !283)
!8306 = !DILocation(line: 0, scope: !8301)
!8307 = !DILocation(line: 1187, column: 3, scope: !8301)
!8308 = !DILocation(line: 1187, column: 17, scope: !8301)
!8309 = !DILocation(line: 1188, column: 3, scope: !8301)
!8310 = !DILocation(line: 1190, column: 12, scope: !8301)
!8311 = !DILocation(line: 1190, column: 10, scope: !8301)
!8312 = !DILocation(line: 1191, column: 9, scope: !8301)
!8313 = !DILocation(line: 1192, column: 1, scope: !8301)
!8314 = distinct !DISubprogram(name: "uart_console_init", scope: !994, file: !994, line: 588, type: !941, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8315)
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "arg", arg: 1, scope: !8314, file: !994, line: 588, type: !920)
!8317 = !DILocation(line: 0, scope: !8314)
!8318 = !DILocation(line: 593, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !994, line: 593, column: 6)
!8320 = !DILocation(line: 593, column: 6, scope: !8314)
!8321 = !DILocation(line: 597, column: 2, scope: !8314)
!8322 = !DILocation(line: 599, column: 2, scope: !8314)
!8323 = !DILocation(line: 600, column: 1, scope: !8314)
!8324 = distinct !DISubprogram(name: "device_is_ready", scope: !3452, file: !3452, line: 47, type: !8325, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8327)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!136, !920}
!8327 = !{!8328}
!8328 = !DILocalVariable(name: "dev", arg: 1, scope: !8324, file: !3452, line: 47, type: !920)
!8329 = !DILocation(line: 0, scope: !8324)
!8330 = !DILocation(line: 55, column: 2, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8324, file: !3452, line: 55, column: 2)
!8332 = !{i64 2154364601}
!8333 = !DILocation(line: 56, column: 9, scope: !8324)
!8334 = !DILocation(line: 56, column: 2, scope: !8324)
!8335 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !994, file: !994, line: 573, type: !3169, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !250)
!8336 = !DILocation(line: 576, column: 2, scope: !8335)
!8337 = !DILocation(line: 579, column: 2, scope: !8335)
!8338 = !DILocation(line: 581, column: 1, scope: !8335)
!8339 = distinct !DISubprogram(name: "console_out", scope: !994, file: !994, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8340)
!8340 = !{!8341}
!8341 = !DILocalVariable(name: "c", arg: 1, scope: !8339, file: !994, line: 77, type: !107)
!8342 = !DILocation(line: 0, scope: !8339)
!8343 = !DILocation(line: 89, column: 11, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !994, line: 89, column: 6)
!8345 = !DILocation(line: 89, column: 6, scope: !8339)
!8346 = !DILocation(line: 90, column: 3, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8344, file: !994, line: 89, column: 17)
!8348 = !DILocation(line: 91, column: 2, scope: !8347)
!8349 = !DILocation(line: 92, column: 34, scope: !8339)
!8350 = !DILocation(line: 92, column: 2, scope: !8339)
!8351 = !DILocation(line: 94, column: 2, scope: !8339)
!8352 = distinct !DISubprogram(name: "uart_poll_out", scope: !3316, file: !3316, line: 95, type: !937, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8353)
!8353 = !{!8354, !8355}
!8354 = !DILocalVariable(name: "dev", arg: 1, scope: !8352, file: !3316, line: 95, type: !920)
!8355 = !DILocalVariable(name: "out_char", arg: 2, scope: !8352, file: !3316, line: 95, type: !134)
!8356 = !DILocation(line: 0, scope: !8352)
!8357 = !DILocation(line: 105, column: 2, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8352, file: !3316, line: 105, column: 2)
!8359 = !{i64 2154447846}
!8360 = !DILocation(line: 106, column: 2, scope: !8352)
!8361 = !DILocation(line: 107, column: 1, scope: !8352)
!8362 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !937, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8363)
!8363 = !{!8364, !8365, !8366}
!8364 = !DILocalVariable(name: "dev", arg: 1, scope: !8362, file: !111, line: 574, type: !920)
!8365 = !DILocalVariable(name: "out_char", arg: 2, scope: !8362, file: !111, line: 575, type: !134)
!8366 = !DILocalVariable(name: "api", scope: !8362, file: !111, line: 577, type: !912)
!8367 = !DILocation(line: 0, scope: !8362)
!8368 = !DILocation(line: 578, column: 40, scope: !8362)
!8369 = !DILocation(line: 580, column: 7, scope: !8362)
!8370 = !DILocation(line: 580, column: 2, scope: !8362)
!8371 = !DILocation(line: 581, column: 1, scope: !8362)
!8372 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8325, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8373)
!8373 = !{!8374}
!8374 = !DILocalVariable(name: "dev", arg: 1, scope: !8372, file: !120, line: 730, type: !920)
!8375 = !DILocation(line: 0, scope: !8372)
!8376 = !DILocation(line: 732, column: 9, scope: !8372)
!8377 = !DILocation(line: 732, column: 2, scope: !8372)
!8378 = distinct !DISubprogram(name: "uart_register_input", scope: !994, file: !994, line: 560, type: !8379, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8424)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{null, !8381, !8381, !8421}
!8381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8382, size: 32)
!8382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8383)
!8383 = !{!8384}
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8382, file: !224, line: 2209, baseType: !8385, size: 128)
!8385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8386)
!8386 = !{!8387, !8400, !8402}
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8385, file: !224, line: 1710, baseType: !8388, size: 64)
!8388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8389, line: 46, baseType: !8390)
!8389 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8389, line: 41, size: 64, elements: !8391)
!8391 = !{!8392, !8399}
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8390, file: !8389, line: 42, baseType: !8393, size: 32)
!8393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8394, size: 32)
!8394 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8389, line: 39, baseType: !8395)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8389, line: 35, size: 32, elements: !8396)
!8396 = !{!8397}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8395, file: !8389, line: 36, baseType: !8398, size: 32)
!8398 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8389, line: 32, baseType: !162)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8390, file: !8389, line: 43, baseType: !8393, size: 32, offset: 32)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8385, file: !224, line: 1711, baseType: !8401, offset: 64)
!8401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8385, file: !224, line: 1712, baseType: !8403, size: 64, offset: 64)
!8403 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8404)
!8404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8405)
!8405 = !{!8406}
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8404, file: !228, line: 232, baseType: !8407, size: 64)
!8407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8408)
!8408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8409)
!8409 = !{!8410, !8416}
!8410 = !DIDerivedType(tag: DW_TAG_member, scope: !8408, file: !233, line: 38, baseType: !8411, size: 32)
!8411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8408, file: !233, line: 38, size: 32, elements: !8412)
!8412 = !{!8413, !8415}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8411, file: !233, line: 39, baseType: !8414, size: 32)
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8408, size: 32)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8411, file: !233, line: 40, baseType: !8414, size: 32)
!8416 = !DIDerivedType(tag: DW_TAG_member, scope: !8408, file: !233, line: 42, baseType: !8417, size: 32, offset: 32)
!8417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8408, file: !233, line: 42, size: 32, elements: !8418)
!8418 = !{!8419, !8420}
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8417, file: !233, line: 43, baseType: !8414, size: 32)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8417, file: !233, line: 44, baseType: !8414, size: 32)
!8421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 32)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{!133, !256, !133}
!8424 = !{!8425, !8426, !8427}
!8425 = !DILocalVariable(name: "avail", arg: 1, scope: !8378, file: !994, line: 560, type: !8381)
!8426 = !DILocalVariable(name: "lines", arg: 2, scope: !8378, file: !994, line: 560, type: !8381)
!8427 = !DILocalVariable(name: "completion", arg: 3, scope: !8378, file: !994, line: 561, type: !8421)
!8428 = !DILocation(line: 0, scope: !8378)
!8429 = !DILocation(line: 566, column: 1, scope: !8378)
!8430 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1172, file: !1172, line: 523, type: !1030, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8431)
!8431 = !{!8432, !8433, !8434, !8435, !8436}
!8432 = !DILocalVariable(name: "dev", arg: 1, scope: !8430, file: !1172, line: 523, type: !1032)
!8433 = !DILocalVariable(name: "pin", arg: 2, scope: !8430, file: !1172, line: 524, type: !1047)
!8434 = !DILocalVariable(name: "flags", arg: 3, scope: !8430, file: !1172, line: 524, type: !1048)
!8435 = !DILocalVariable(name: "err", scope: !8430, file: !1172, line: 526, type: !107)
!8436 = !DILocalVariable(name: "pincfg", scope: !8430, file: !1172, line: 527, type: !107)
!8437 = !DILocation(line: 0, scope: !8430)
!8438 = !DILocation(line: 527, column: 2, scope: !8430)
!8439 = !DILocation(line: 532, column: 8, scope: !8430)
!8440 = !DILocation(line: 533, column: 10, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8430, file: !1172, line: 533, column: 6)
!8442 = !DILocation(line: 533, column: 6, scope: !8430)
!8443 = !DILocation(line: 543, column: 13, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8430, file: !1172, line: 543, column: 6)
!8445 = !DILocation(line: 543, column: 28, scope: !8444)
!8446 = !DILocation(line: 543, column: 6, scope: !8430)
!8447 = !DILocation(line: 544, column: 14, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !1172, line: 544, column: 7)
!8449 = distinct !DILexicalBlock(scope: !8444, file: !1172, line: 543, column: 34)
!8450 = !DILocation(line: 544, column: 39, scope: !8448)
!8451 = !DILocation(line: 544, column: 7, scope: !8449)
!8452 = !DILocation(line: 545, column: 38, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !1172, line: 544, column: 45)
!8454 = !DILocation(line: 545, column: 4, scope: !8453)
!8455 = !DILocation(line: 546, column: 3, scope: !8453)
!8456 = !DILocation(line: 546, column: 21, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8448, file: !1172, line: 546, column: 14)
!8458 = !DILocation(line: 546, column: 45, scope: !8457)
!8459 = !DILocation(line: 546, column: 14, scope: !8448)
!8460 = !DILocation(line: 547, column: 40, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8457, file: !1172, line: 546, column: 51)
!8462 = !DILocation(line: 547, column: 4, scope: !8461)
!8463 = !DILocation(line: 548, column: 3, scope: !8461)
!8464 = !DILocation(line: 551, column: 32, scope: !8430)
!8465 = !DILocation(line: 551, column: 37, scope: !8430)
!8466 = !DILocation(line: 551, column: 2, scope: !8430)
!8467 = !DILocation(line: 554, column: 6, scope: !8430)
!8468 = !DILocation(line: 562, column: 1, scope: !8430)
!8469 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1172, file: !1172, line: 410, type: !8470, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!107, !1032, !831}
!8472 = !{!8473, !8474, !8475, !8477}
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8469, file: !1172, line: 410, type: !1032)
!8474 = !DILocalVariable(name: "value", arg: 2, scope: !8469, file: !1172, line: 410, type: !831)
!8475 = !DILocalVariable(name: "cfg", scope: !8469, file: !1172, line: 412, type: !8476)
!8476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!8477 = !DILocalVariable(name: "gpio", scope: !8469, file: !1172, line: 413, type: !1105)
!8478 = !DILocation(line: 0, scope: !8469)
!8479 = !DILocation(line: 412, column: 45, scope: !8469)
!8480 = !DILocation(line: 413, column: 44, scope: !8469)
!8481 = !DILocation(line: 415, column: 11, scope: !8469)
!8482 = !DILocation(line: 415, column: 9, scope: !8469)
!8483 = !DILocation(line: 417, column: 2, scope: !8469)
!8484 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1172, file: !1172, line: 420, type: !1057, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8485)
!8485 = !{!8486, !8487, !8488, !8489, !8490, !8491}
!8486 = !DILocalVariable(name: "dev", arg: 1, scope: !8484, file: !1172, line: 420, type: !1032)
!8487 = !DILocalVariable(name: "mask", arg: 2, scope: !8484, file: !1172, line: 421, type: !1059)
!8488 = !DILocalVariable(name: "value", arg: 3, scope: !8484, file: !1172, line: 422, type: !1054)
!8489 = !DILocalVariable(name: "cfg", scope: !8484, file: !1172, line: 424, type: !8476)
!8490 = !DILocalVariable(name: "gpio", scope: !8484, file: !1172, line: 425, type: !1105)
!8491 = !DILocalVariable(name: "port_value", scope: !8484, file: !1172, line: 426, type: !162)
!8492 = !DILocation(line: 0, scope: !8484)
!8493 = !DILocation(line: 424, column: 45, scope: !8484)
!8494 = !DILocation(line: 425, column: 44, scope: !8484)
!8495 = !DILocation(line: 430, column: 15, scope: !8484)
!8496 = !DILocation(line: 431, column: 46, scope: !8484)
!8497 = !DILocation(line: 431, column: 44, scope: !8484)
!8498 = !DILocation(line: 431, column: 61, scope: !8484)
!8499 = !DILocation(line: 431, column: 53, scope: !8484)
!8500 = !DILocation(line: 431, column: 2, scope: !8484)
!8501 = !DILocation(line: 435, column: 2, scope: !8484)
!8502 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1172, file: !1172, line: 438, type: !1062, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8503)
!8503 = !{!8504, !8505, !8506, !8507}
!8504 = !DILocalVariable(name: "dev", arg: 1, scope: !8502, file: !1172, line: 438, type: !1032)
!8505 = !DILocalVariable(name: "pins", arg: 2, scope: !8502, file: !1172, line: 439, type: !1059)
!8506 = !DILocalVariable(name: "cfg", scope: !8502, file: !1172, line: 441, type: !8476)
!8507 = !DILocalVariable(name: "gpio", scope: !8502, file: !1172, line: 442, type: !1105)
!8508 = !DILocation(line: 0, scope: !8502)
!8509 = !DILocation(line: 441, column: 45, scope: !8502)
!8510 = !DILocation(line: 442, column: 44, scope: !8502)
!8511 = !DILocation(line: 448, column: 2, scope: !8502)
!8512 = !DILocation(line: 450, column: 2, scope: !8502)
!8513 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1172, file: !1172, line: 453, type: !1062, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8514)
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DILocalVariable(name: "dev", arg: 1, scope: !8513, file: !1172, line: 453, type: !1032)
!8516 = !DILocalVariable(name: "pins", arg: 2, scope: !8513, file: !1172, line: 454, type: !1059)
!8517 = !DILocalVariable(name: "cfg", scope: !8513, file: !1172, line: 456, type: !8476)
!8518 = !DILocalVariable(name: "gpio", scope: !8513, file: !1172, line: 457, type: !1105)
!8519 = !DILocation(line: 0, scope: !8513)
!8520 = !DILocation(line: 456, column: 45, scope: !8513)
!8521 = !DILocation(line: 457, column: 44, scope: !8513)
!8522 = !DILocation(line: 467, column: 2, scope: !8513)
!8523 = !DILocation(line: 470, column: 2, scope: !8513)
!8524 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1172, file: !1172, line: 473, type: !1062, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8525)
!8525 = !{!8526, !8527, !8528, !8529}
!8526 = !DILocalVariable(name: "dev", arg: 1, scope: !8524, file: !1172, line: 473, type: !1032)
!8527 = !DILocalVariable(name: "pins", arg: 2, scope: !8524, file: !1172, line: 474, type: !1059)
!8528 = !DILocalVariable(name: "cfg", scope: !8524, file: !1172, line: 476, type: !8476)
!8529 = !DILocalVariable(name: "gpio", scope: !8524, file: !1172, line: 477, type: !1105)
!8530 = !DILocation(line: 0, scope: !8524)
!8531 = !DILocation(line: 476, column: 45, scope: !8524)
!8532 = !DILocation(line: 477, column: 44, scope: !8524)
!8533 = !DILocation(line: 484, column: 2, scope: !8524)
!8534 = !DILocation(line: 487, column: 2, scope: !8524)
!8535 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1172, file: !1172, line: 594, type: !1068, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8536)
!8536 = !{!8537, !8538, !8539, !8540, !8541, !8542, !8544, !8545, !8546}
!8537 = !DILocalVariable(name: "dev", arg: 1, scope: !8535, file: !1172, line: 594, type: !1032)
!8538 = !DILocalVariable(name: "pin", arg: 2, scope: !8535, file: !1172, line: 595, type: !1047)
!8539 = !DILocalVariable(name: "mode", arg: 3, scope: !8535, file: !1172, line: 596, type: !1006)
!8540 = !DILocalVariable(name: "trig", arg: 4, scope: !8535, file: !1172, line: 597, type: !1012)
!8541 = !DILocalVariable(name: "cfg", scope: !8535, file: !1172, line: 599, type: !8476)
!8542 = !DILocalVariable(name: "data", scope: !8535, file: !1172, line: 600, type: !8543)
!8543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!8544 = !DILocalVariable(name: "edge", scope: !8535, file: !1172, line: 601, type: !107)
!8545 = !DILocalVariable(name: "err", scope: !8535, file: !1172, line: 602, type: !107)
!8546 = !DILabel(scope: !8535, name: "exit", file: !1172, line: 643)
!8547 = !DILocation(line: 0, scope: !8535)
!8548 = !DILocation(line: 599, column: 45, scope: !8535)
!8549 = !DILocation(line: 604, column: 6, scope: !8535)
!8550 = !DILocation(line: 605, column: 34, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !1172, line: 605, column: 7)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !1172, line: 604, column: 38)
!8553 = distinct !DILexicalBlock(scope: !8535, file: !1172, line: 604, column: 6)
!8554 = !DILocation(line: 605, column: 7, scope: !8551)
!8555 = !DILocation(line: 605, column: 47, scope: !8551)
!8556 = !DILocation(line: 605, column: 39, scope: !8551)
!8557 = !DILocation(line: 605, column: 7, scope: !8552)
!8558 = !DILocation(line: 606, column: 4, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8551, file: !1172, line: 605, column: 53)
!8560 = !DILocation(line: 607, column: 4, scope: !8559)
!8561 = !DILocation(line: 608, column: 4, scope: !8559)
!8562 = !DILocation(line: 609, column: 3, scope: !8559)
!8563 = !DILocation(line: 600, column: 38, scope: !8535)
!8564 = !DILocation(line: 620, column: 30, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8535, file: !1172, line: 620, column: 6)
!8566 = !DILocation(line: 620, column: 6, scope: !8565)
!8567 = !DILocation(line: 620, column: 57, scope: !8565)
!8568 = !DILocation(line: 620, column: 6, scope: !8535)
!8569 = !DILocation(line: 625, column: 29, scope: !8535)
!8570 = !DILocation(line: 625, column: 2, scope: !8535)
!8571 = !DILocation(line: 627, column: 2, scope: !8535)
!8572 = !DILocation(line: 630, column: 3, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8535, file: !1172, line: 627, column: 16)
!8574 = !DILocation(line: 633, column: 3, scope: !8573)
!8575 = !DILocation(line: 636, column: 3, scope: !8573)
!8576 = !DILocation(line: 639, column: 2, scope: !8535)
!8577 = !DILocation(line: 641, column: 2, scope: !8535)
!8578 = !DILocation(line: 643, column: 1, scope: !8535)
!8579 = !DILocation(line: 644, column: 2, scope: !8535)
!8580 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1172, file: !1172, line: 647, type: !1072, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8581)
!8581 = !{!8582, !8583, !8584, !8585}
!8582 = !DILocalVariable(name: "dev", arg: 1, scope: !8580, file: !1172, line: 647, type: !1032)
!8583 = !DILocalVariable(name: "callback", arg: 2, scope: !8580, file: !1172, line: 648, type: !1074)
!8584 = !DILocalVariable(name: "set", arg: 3, scope: !8580, file: !1172, line: 649, type: !136)
!8585 = !DILocalVariable(name: "data", scope: !8580, file: !1172, line: 651, type: !8543)
!8586 = !DILocation(line: 0, scope: !8580)
!8587 = !DILocation(line: 651, column: 38, scope: !8580)
!8588 = !DILocation(line: 653, column: 37, scope: !8580)
!8589 = !DILocation(line: 653, column: 9, scope: !8580)
!8590 = !DILocation(line: 653, column: 2, scope: !8580)
!8591 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8592, file: !8592, line: 38, type: !8593, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8596)
!8592 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!107, !8595, !1074, !136}
!8595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!8596 = !{!8597, !8598, !8599}
!8597 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8591, file: !8592, line: 38, type: !8595)
!8598 = !DILocalVariable(name: "callback", arg: 2, scope: !8591, file: !8592, line: 39, type: !1074)
!8599 = !DILocalVariable(name: "set", arg: 3, scope: !8591, file: !8592, line: 40, type: !136)
!8600 = !DILocation(line: 0, scope: !8591)
!8601 = !DILocation(line: 45, column: 7, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8591, file: !8592, line: 45, column: 6)
!8603 = !DILocation(line: 45, column: 6, scope: !8591)
!8604 = !DILocation(line: 46, column: 56, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8592, line: 46, column: 7)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !8592, line: 45, column: 38)
!8607 = !DILocation(line: 46, column: 8, scope: !8605)
!8608 = !DILocation(line: 46, column: 7, scope: !8606)
!8609 = !DILocation(line: 51, column: 13, scope: !8602)
!8610 = !DILocation(line: 56, column: 43, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !8592, line: 55, column: 11)
!8612 = distinct !DILexicalBlock(scope: !8591, file: !8592, line: 55, column: 6)
!8613 = !DILocation(line: 56, column: 3, scope: !8611)
!8614 = !DILocation(line: 57, column: 2, scope: !8611)
!8615 = !DILocation(line: 60, column: 1, scope: !8591)
!8616 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1079, file: !1079, line: 261, type: !8617, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8619)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!136, !8595}
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "list", arg: 1, scope: !8616, file: !1079, line: 261, type: !8595)
!8621 = !DILocation(line: 0, scope: !8616)
!8622 = !DILocation(line: 261, column: 1, scope: !8616)
!8623 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1079, file: !1079, line: 417, type: !8624, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8626)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!136, !8595, !1248}
!8626 = !{!8627, !8628, !8629, !8630}
!8627 = !DILocalVariable(name: "list", arg: 1, scope: !8623, file: !1079, line: 417, type: !8595)
!8628 = !DILocalVariable(name: "node", arg: 2, scope: !8623, file: !1079, line: 417, type: !1248)
!8629 = !DILocalVariable(name: "prev", scope: !8623, file: !1079, line: 417, type: !1248)
!8630 = !DILocalVariable(name: "test", scope: !8623, file: !1079, line: 417, type: !1248)
!8631 = !DILocation(line: 0, scope: !8623)
!8632 = !DILocation(line: 417, column: 1, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8623, file: !1079, line: 417, column: 1)
!8634 = !DILocation(line: 417, column: 1, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8633, file: !1079, line: 417, column: 1)
!8636 = !DILocation(line: 417, column: 1, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !1079, line: 417, column: 1)
!8638 = distinct !DILexicalBlock(scope: !8635, file: !1079, line: 417, column: 1)
!8639 = !DILocation(line: 417, column: 1, scope: !8638)
!8640 = distinct !{!8640, !8632, !8632}
!8641 = !DILocation(line: 417, column: 1, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8637, file: !1079, line: 417, column: 1)
!8643 = !DILocation(line: 417, column: 1, scope: !8623)
!8644 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1079, file: !1079, line: 298, type: !8645, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{null, !8595, !1248}
!8647 = !{!8648, !8649}
!8648 = !DILocalVariable(name: "list", arg: 1, scope: !8644, file: !1079, line: 298, type: !8595)
!8649 = !DILocalVariable(name: "node", arg: 2, scope: !8644, file: !1079, line: 298, type: !1248)
!8650 = !DILocation(line: 0, scope: !8644)
!8651 = !DILocation(line: 298, column: 1, scope: !8644)
!8652 = !DILocation(line: 298, column: 1, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8644, file: !1079, line: 298, column: 1)
!8654 = !DILocation(line: 298, column: 1, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8653, file: !1079, line: 298, column: 1)
!8656 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1079, file: !1079, line: 231, type: !8657, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8659)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!1248, !8595}
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "list", arg: 1, scope: !8656, file: !1079, line: 231, type: !8595)
!8661 = !DILocation(line: 0, scope: !8656)
!8662 = !DILocation(line: 233, column: 15, scope: !8656)
!8663 = !DILocation(line: 233, column: 2, scope: !8656)
!8664 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1079, file: !1079, line: 209, type: !8665, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8667)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{null, !1248, !1248}
!8667 = !{!8668, !8669}
!8668 = !DILocalVariable(name: "parent", arg: 1, scope: !8664, file: !1079, line: 209, type: !1248)
!8669 = !DILocalVariable(name: "child", arg: 2, scope: !8664, file: !1079, line: 209, type: !1248)
!8670 = !DILocation(line: 0, scope: !8664)
!8671 = !DILocation(line: 211, column: 10, scope: !8664)
!8672 = !DILocation(line: 211, column: 15, scope: !8664)
!8673 = !DILocation(line: 212, column: 1, scope: !8664)
!8674 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1079, file: !1079, line: 214, type: !8645, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8675)
!8675 = !{!8676, !8677}
!8676 = !DILocalVariable(name: "list", arg: 1, scope: !8674, file: !1079, line: 214, type: !8595)
!8677 = !DILocalVariable(name: "node", arg: 2, scope: !8674, file: !1079, line: 214, type: !1248)
!8678 = !DILocation(line: 0, scope: !8674)
!8679 = !DILocation(line: 216, column: 8, scope: !8674)
!8680 = !DILocation(line: 216, column: 13, scope: !8674)
!8681 = !DILocation(line: 217, column: 1, scope: !8674)
!8682 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1079, file: !1079, line: 243, type: !8657, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8683)
!8683 = !{!8684}
!8684 = !DILocalVariable(name: "list", arg: 1, scope: !8682, file: !1079, line: 243, type: !8595)
!8685 = !DILocation(line: 0, scope: !8682)
!8686 = !DILocation(line: 245, column: 15, scope: !8682)
!8687 = !DILocation(line: 245, column: 2, scope: !8682)
!8688 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1079, file: !1079, line: 219, type: !8645, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8689)
!8689 = !{!8690, !8691}
!8690 = !DILocalVariable(name: "list", arg: 1, scope: !8688, file: !1079, line: 219, type: !8595)
!8691 = !DILocalVariable(name: "node", arg: 2, scope: !8688, file: !1079, line: 219, type: !1248)
!8692 = !DILocation(line: 0, scope: !8688)
!8693 = !DILocation(line: 221, column: 8, scope: !8688)
!8694 = !DILocation(line: 221, column: 13, scope: !8688)
!8695 = !DILocation(line: 222, column: 1, scope: !8688)
!8696 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1079, file: !1079, line: 401, type: !8697, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8699)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{null, !8595, !1248, !1248}
!8699 = !{!8700, !8701, !8702}
!8700 = !DILocalVariable(name: "list", arg: 1, scope: !8696, file: !1079, line: 401, type: !8595)
!8701 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8696, file: !1079, line: 401, type: !1248)
!8702 = !DILocalVariable(name: "node", arg: 3, scope: !8696, file: !1079, line: 401, type: !1248)
!8703 = !DILocation(line: 0, scope: !8696)
!8704 = !DILocation(line: 401, column: 1, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8696, file: !1079, line: 401, column: 1)
!8706 = !DILocation(line: 0, scope: !8705)
!8707 = !DILocation(line: 401, column: 1, scope: !8696)
!8708 = !DILocation(line: 401, column: 1, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8705, file: !1079, line: 401, column: 1)
!8710 = !DILocation(line: 401, column: 1, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8709, file: !1079, line: 401, column: 1)
!8712 = !DILocation(line: 401, column: 1, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8711, file: !1079, line: 401, column: 1)
!8714 = !DILocation(line: 401, column: 1, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8705, file: !1079, line: 401, column: 1)
!8716 = !DILocation(line: 401, column: 1, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8715, file: !1079, line: 401, column: 1)
!8718 = !DILocation(line: 401, column: 1, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8717, file: !1079, line: 401, column: 1)
!8720 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1079, file: !1079, line: 285, type: !8721, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!1248, !1248}
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "node", arg: 1, scope: !8720, file: !1079, line: 285, type: !1248)
!8725 = !DILocation(line: 0, scope: !8720)
!8726 = !DILocation(line: 285, column: 1, scope: !8720)
!8727 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1079, file: !1079, line: 274, type: !8721, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8728)
!8728 = !{!8729}
!8729 = !DILocalVariable(name: "node", arg: 1, scope: !8727, file: !1079, line: 274, type: !1248)
!8730 = !DILocation(line: 0, scope: !8727)
!8731 = !DILocation(line: 274, column: 1, scope: !8727)
!8732 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1079, file: !1079, line: 204, type: !8721, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8733)
!8733 = !{!8734}
!8734 = !DILocalVariable(name: "node", arg: 1, scope: !8732, file: !1079, line: 204, type: !1248)
!8735 = !DILocation(line: 0, scope: !8732)
!8736 = !DILocation(line: 206, column: 15, scope: !8732)
!8737 = !DILocation(line: 206, column: 2, scope: !8732)
!8738 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1172, file: !1172, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8739)
!8739 = !{!8740, !8741, !8742}
!8740 = !DILocalVariable(name: "pin", arg: 1, scope: !8738, file: !1172, line: 342, type: !107)
!8741 = !DILocalVariable(name: "line", scope: !8738, file: !1172, line: 344, type: !162)
!8742 = !DILocalVariable(name: "port", scope: !8738, file: !1172, line: 345, type: !107)
!8743 = !DILocation(line: 0, scope: !8738)
!8744 = !DILocation(line: 344, column: 18, scope: !8738)
!8745 = !{i32 983040, i32 0}
!8746 = !DILocation(line: 356, column: 9, scope: !8738)
!8747 = !DILocation(line: 370, column: 2, scope: !8738)
!8748 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1172, file: !1172, line: 37, type: !689, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8749)
!8749 = !{!8750, !8751, !8752}
!8750 = !DILocalVariable(name: "line", arg: 1, scope: !8748, file: !1172, line: 37, type: !107)
!8751 = !DILocalVariable(name: "arg", arg: 2, scope: !8748, file: !1172, line: 37, type: !102)
!8752 = !DILocalVariable(name: "data", scope: !8748, file: !1172, line: 39, type: !8543)
!8753 = !DILocation(line: 0, scope: !8748)
!8754 = !DILocation(line: 41, column: 29, scope: !8748)
!8755 = !DILocation(line: 41, column: 39, scope: !8748)
!8756 = !DILocation(line: 41, column: 44, scope: !8748)
!8757 = !DILocation(line: 41, column: 2, scope: !8748)
!8758 = !DILocation(line: 42, column: 1, scope: !8748)
!8759 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1172, file: !1172, line: 376, type: !8760, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8762)
!8760 = !DISubroutineType(types: !8761)
!8761 = !{!107, !107, !107}
!8762 = !{!8763, !8764, !8765, !8767, !8768}
!8763 = !DILocalVariable(name: "port", arg: 1, scope: !8759, file: !1172, line: 376, type: !107)
!8764 = !DILocalVariable(name: "pin", arg: 2, scope: !8759, file: !1172, line: 376, type: !107)
!8765 = !DILocalVariable(name: "clk", scope: !8759, file: !1172, line: 386, type: !8766)
!8766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!8767 = !DILocalVariable(name: "pclken", scope: !8759, file: !1172, line: 387, type: !1291)
!8768 = !DILocalVariable(name: "ret", scope: !8759, file: !1172, line: 396, type: !107)
!8769 = !DILocation(line: 0, scope: !8759)
!8770 = !DILocation(line: 387, column: 2, scope: !8759)
!8771 = !DILocation(line: 387, column: 22, scope: !8759)
!8772 = !DILocation(line: 399, column: 8, scope: !8759)
!8773 = !DILocation(line: 400, column: 10, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8759, file: !1172, line: 400, column: 6)
!8775 = !DILocation(line: 400, column: 6, scope: !8759)
!8776 = !DILocation(line: 405, column: 2, scope: !8759)
!8777 = !DILocation(line: 407, column: 2, scope: !8759)
!8778 = !DILocation(line: 408, column: 1, scope: !8759)
!8779 = distinct !DISubprogram(name: "clock_control_on", scope: !780, file: !780, line: 123, type: !1137, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8780)
!8780 = !{!8781, !8782, !8783}
!8781 = !DILocalVariable(name: "dev", arg: 1, scope: !8779, file: !780, line: 123, type: !1032)
!8782 = !DILocalVariable(name: "sys", arg: 2, scope: !8779, file: !780, line: 124, type: !875)
!8783 = !DILocalVariable(name: "api", scope: !8779, file: !780, line: 126, type: !1130)
!8784 = !DILocation(line: 0, scope: !8779)
!8785 = !DILocation(line: 127, column: 49, scope: !8779)
!8786 = !DILocation(line: 129, column: 14, scope: !8779)
!8787 = !DILocation(line: 129, column: 9, scope: !8779)
!8788 = !DILocation(line: 129, column: 2, scope: !8779)
!8789 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1172, file: !1172, line: 311, type: !7910, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8790)
!8790 = !{!8791, !8792, !8793}
!8791 = !DILocalVariable(name: "port", arg: 1, scope: !8789, file: !1172, line: 311, type: !107)
!8792 = !DILocalVariable(name: "pin", arg: 2, scope: !8789, file: !1172, line: 311, type: !107)
!8793 = !DILocalVariable(name: "line", scope: !8789, file: !1172, line: 313, type: !162)
!8794 = !DILocation(line: 0, scope: !8789)
!8795 = !DILocation(line: 313, column: 18, scope: !8789)
!8796 = !DILocation(line: 337, column: 2, scope: !8789)
!8797 = !DILocation(line: 340, column: 1, scope: !8789)
!8798 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1172, file: !1172, line: 295, type: !8799, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8801)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!162, !107}
!8801 = !{!8802}
!8802 = !DILocalVariable(name: "pin", arg: 1, scope: !8798, file: !1172, line: 295, type: !107)
!8803 = !DILocation(line: 0, scope: !8798)
!8804 = !DILocation(line: 307, column: 46, scope: !8798)
!8805 = !DILocation(line: 307, column: 27, scope: !8798)
!8806 = !DILocation(line: 307, column: 32, scope: !8798)
!8807 = !DILocation(line: 307, column: 14, scope: !8798)
!8808 = !DILocation(line: 307, column: 39, scope: !8798)
!8809 = !DILocation(line: 307, column: 2, scope: !8798)
!8810 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5964, file: !5964, line: 671, type: !8811, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{null, !162, !162}
!8813 = !{!8814, !8815}
!8814 = !DILocalVariable(name: "Port", arg: 1, scope: !8810, file: !5964, line: 671, type: !162)
!8815 = !DILocalVariable(name: "Line", arg: 2, scope: !8810, file: !5964, line: 671, type: !162)
!8816 = !DILocation(line: 0, scope: !8810)
!8817 = !DILocation(line: 673, column: 3, scope: !8810)
!8818 = !DILocalVariable(name: "value", arg: 1, scope: !8819, file: !6117, line: 373, type: !162)
!8819 = distinct !DISubprogram(name: "__RBIT", scope: !6117, file: !6117, line: 373, type: !7124, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8820)
!8820 = !{!8818, !8821}
!8821 = !DILocalVariable(name: "result", scope: !8819, file: !6117, line: 375, type: !162)
!8822 = !DILocation(line: 0, scope: !8819, inlinedAt: !8823)
!8823 = distinct !DILocation(line: 673, column: 3, scope: !8810)
!8824 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !8823)
!8825 = !{i64 2917469}
!8826 = !DILocalVariable(name: "value", arg: 1, scope: !8827, file: !6117, line: 403, type: !162)
!8827 = distinct !DISubprogram(name: "__CLZ", scope: !6117, file: !6117, line: 403, type: !8828, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8830)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!133, !162}
!8830 = !{!8826}
!8831 = !DILocation(line: 0, scope: !8827, inlinedAt: !8832)
!8832 = distinct !DILocation(line: 673, column: 3, scope: !8810)
!8833 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !8832)
!8834 = !DILocation(line: 674, column: 1, scope: !8810)
!8835 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8592, file: !8592, line: 69, type: !8836, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{null, !8595, !1032, !162}
!8838 = !{!8839, !8840, !8841, !8842, !8843}
!8839 = !DILocalVariable(name: "list", arg: 1, scope: !8835, file: !8592, line: 69, type: !8595)
!8840 = !DILocalVariable(name: "port", arg: 2, scope: !8835, file: !8592, line: 70, type: !1032)
!8841 = !DILocalVariable(name: "pins", arg: 3, scope: !8835, file: !8592, line: 71, type: !162)
!8842 = !DILocalVariable(name: "cb", scope: !8835, file: !8592, line: 73, type: !1074)
!8843 = !DILocalVariable(name: "tmp", scope: !8835, file: !8592, line: 73, type: !1074)
!8844 = !DILocation(line: 0, scope: !8835)
!8845 = !DILocation(line: 75, column: 2, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8835, file: !8592, line: 75, column: 2)
!8847 = !DILocation(line: 0, scope: !8846)
!8848 = !DILocation(line: 76, column: 11, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8592, line: 76, column: 7)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !8592, line: 75, column: 57)
!8851 = distinct !DILexicalBlock(scope: !8846, file: !8592, line: 75, column: 2)
!8852 = !DILocation(line: 76, column: 20, scope: !8849)
!8853 = !DILocation(line: 76, column: 7, scope: !8850)
!8854 = !DILocation(line: 78, column: 8, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8849, file: !8592, line: 76, column: 28)
!8856 = !DILocation(line: 78, column: 4, scope: !8855)
!8857 = !DILocation(line: 79, column: 3, scope: !8855)
!8858 = !DILocation(line: 75, column: 2, scope: !8851)
!8859 = !DILocation(line: 81, column: 1, scope: !8835)
!8860 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5964, file: !5964, line: 710, type: !7124, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8861)
!8861 = !{!8862}
!8862 = !DILocalVariable(name: "Line", arg: 1, scope: !8860, file: !5964, line: 710, type: !162)
!8863 = !DILocation(line: 0, scope: !8860)
!8864 = !DILocation(line: 712, column: 21, scope: !8860)
!8865 = !DILocation(line: 0, scope: !8819, inlinedAt: !8866)
!8866 = distinct !DILocation(line: 712, column: 76, scope: !8860)
!8867 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !8866)
!8868 = !DILocation(line: 0, scope: !8827, inlinedAt: !8869)
!8869 = distinct !DILocation(line: 712, column: 76, scope: !8860)
!8870 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !8869)
!8871 = !DILocation(line: 712, column: 73, scope: !8860)
!8872 = !DILocation(line: 712, column: 3, scope: !8860)
!8873 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8874, file: !8874, line: 910, type: !8875, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8877)
!8874 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8875 = !DISubroutineType(types: !8876)
!8876 = !{null, !1105, !162}
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8873, file: !8874, line: 910, type: !1105)
!8879 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8873, file: !8874, line: 910, type: !162)
!8880 = !DILocation(line: 0, scope: !8873)
!8881 = !DILocation(line: 912, column: 3, scope: !8873)
!8882 = !DILocation(line: 913, column: 1, scope: !8873)
!8883 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8874, file: !8874, line: 823, type: !8884, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!162, !1105}
!8886 = !{!8887}
!8887 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8883, file: !8874, line: 823, type: !1105)
!8888 = !DILocation(line: 0, scope: !8883)
!8889 = !DILocation(line: 825, column: 21, scope: !8883)
!8890 = !DILocation(line: 825, column: 3, scope: !8883)
!8891 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8874, file: !8874, line: 812, type: !8875, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8892)
!8892 = !{!8893, !8894}
!8893 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8891, file: !8874, line: 812, type: !1105)
!8894 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8891, file: !8874, line: 812, type: !162)
!8895 = !DILocation(line: 0, scope: !8891)
!8896 = !DILocation(line: 814, column: 3, scope: !8891)
!8897 = !DILocation(line: 815, column: 1, scope: !8891)
!8898 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8874, file: !8874, line: 771, type: !8884, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8899)
!8899 = !{!8900}
!8900 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8898, file: !8874, line: 771, type: !1105)
!8901 = !DILocation(line: 0, scope: !8898)
!8902 = !DILocation(line: 773, column: 21, scope: !8898)
!8903 = !DILocation(line: 773, column: 3, scope: !8898)
!8904 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1172, file: !1172, line: 47, type: !8905, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8907)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{!107, !1048, !2514}
!8907 = !{!8908, !8909}
!8908 = !DILocalVariable(name: "flags", arg: 1, scope: !8904, file: !1172, line: 47, type: !1048)
!8909 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8904, file: !1172, line: 47, type: !2514)
!8910 = !DILocation(line: 0, scope: !8904)
!8911 = !DILocation(line: 50, column: 13, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8904, file: !1172, line: 50, column: 6)
!8913 = !DILocation(line: 50, column: 28, scope: !8912)
!8914 = !DILocation(line: 50, column: 6, scope: !8904)
!8915 = !DILocation(line: 53, column: 11, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8912, file: !1172, line: 50, column: 34)
!8917 = !DILocation(line: 55, column: 14, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8916, file: !1172, line: 55, column: 7)
!8919 = !DILocation(line: 55, column: 35, scope: !8918)
!8920 = !DILocation(line: 55, column: 7, scope: !8916)
!8921 = !DILocation(line: 56, column: 14, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !1172, line: 56, column: 8)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !1172, line: 55, column: 41)
!8924 = !DILocation(line: 56, column: 8, scope: !8923)
!8925 = !DILocation(line: 0, scope: !8918)
!8926 = !DILocation(line: 66, column: 14, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8916, file: !1172, line: 66, column: 7)
!8928 = !DILocation(line: 66, column: 30, scope: !8927)
!8929 = !DILocation(line: 66, column: 7, scope: !8916)
!8930 = !DILocation(line: 67, column: 12, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8927, file: !1172, line: 66, column: 36)
!8932 = !DILocation(line: 68, column: 3, scope: !8931)
!8933 = !DILocation(line: 68, column: 21, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8927, file: !1172, line: 68, column: 14)
!8935 = !DILocation(line: 68, column: 39, scope: !8934)
!8936 = !DILocation(line: 68, column: 14, scope: !8927)
!8937 = !DILocation(line: 69, column: 12, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8934, file: !1172, line: 68, column: 45)
!8939 = !DILocation(line: 70, column: 3, scope: !8938)
!8940 = !DILocation(line: 72, column: 21, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8912, file: !1172, line: 72, column: 14)
!8942 = !DILocation(line: 72, column: 35, scope: !8941)
!8943 = !DILocation(line: 72, column: 14, scope: !8912)
!8944 = !DILocation(line: 77, column: 14, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !1172, line: 77, column: 7)
!8946 = distinct !DILexicalBlock(scope: !8941, file: !1172, line: 72, column: 41)
!8947 = !DILocation(line: 77, column: 30, scope: !8945)
!8948 = !DILocation(line: 77, column: 7, scope: !8946)
!8949 = !DILocation(line: 0, scope: !8912)
!8950 = !DILocation(line: 90, column: 1, scope: !8904)
!8951 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1172, file: !1172, line: 157, type: !8952, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8954)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{null, !1032, !107, !107, !107}
!8954 = !{!8955, !8956, !8957, !8958, !8959, !8960, !8961, !8962, !8963, !8964, !8965}
!8955 = !DILocalVariable(name: "dev", arg: 1, scope: !8951, file: !1172, line: 157, type: !1032)
!8956 = !DILocalVariable(name: "pin", arg: 2, scope: !8951, file: !1172, line: 157, type: !107)
!8957 = !DILocalVariable(name: "conf", arg: 3, scope: !8951, file: !1172, line: 158, type: !107)
!8958 = !DILocalVariable(name: "func", arg: 4, scope: !8951, file: !1172, line: 158, type: !107)
!8959 = !DILocalVariable(name: "cfg", scope: !8951, file: !1172, line: 160, type: !8476)
!8960 = !DILocalVariable(name: "gpio", scope: !8951, file: !1172, line: 161, type: !1105)
!8961 = !DILocalVariable(name: "pin_ll", scope: !8951, file: !1172, line: 163, type: !107)
!8962 = !DILocalVariable(name: "mode", scope: !8951, file: !1172, line: 227, type: !32)
!8963 = !DILocalVariable(name: "otype", scope: !8951, file: !1172, line: 227, type: !32)
!8964 = !DILocalVariable(name: "ospeed", scope: !8951, file: !1172, line: 227, type: !32)
!8965 = !DILocalVariable(name: "pupd", scope: !8951, file: !1172, line: 227, type: !32)
!8966 = !DILocation(line: 0, scope: !8951)
!8967 = !DILocation(line: 160, column: 45, scope: !8951)
!8968 = !DILocation(line: 161, column: 44, scope: !8951)
!8969 = !DILocation(line: 163, column: 15, scope: !8951)
!8970 = !DILocation(line: 229, column: 14, scope: !8951)
!8971 = !DILocation(line: 246, column: 47, scope: !8951)
!8972 = !DILocation(line: 246, column: 2, scope: !8951)
!8973 = !DILocation(line: 248, column: 43, scope: !8951)
!8974 = !DILocation(line: 248, column: 2, scope: !8951)
!8975 = !DILocation(line: 250, column: 40, scope: !8951)
!8976 = !DILocation(line: 250, column: 2, scope: !8951)
!8977 = !DILocation(line: 252, column: 11, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8951, file: !1172, line: 252, column: 6)
!8979 = !DILocation(line: 252, column: 6, scope: !8951)
!8980 = !DILocation(line: 253, column: 11, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !1172, line: 253, column: 7)
!8982 = distinct !DILexicalBlock(scope: !8978, file: !1172, line: 252, column: 36)
!8983 = !DILocation(line: 253, column: 7, scope: !8982)
!8984 = !DILocation(line: 254, column: 4, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8981, file: !1172, line: 253, column: 16)
!8986 = !DILocation(line: 255, column: 3, scope: !8985)
!8987 = !DILocation(line: 256, column: 4, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8981, file: !1172, line: 255, column: 10)
!8989 = !DILocation(line: 260, column: 40, scope: !8951)
!8990 = !DILocation(line: 260, column: 2, scope: !8951)
!8991 = !DILocation(line: 265, column: 1, scope: !8951)
!8992 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1172, file: !1172, line: 137, type: !8799, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8993)
!8993 = !{!8994, !8995}
!8994 = !DILocalVariable(name: "pin", arg: 1, scope: !8992, file: !1172, line: 137, type: !107)
!8995 = !DILocalVariable(name: "pinval", scope: !8992, file: !1172, line: 139, type: !162)
!8996 = !DILocation(line: 0, scope: !8992)
!8997 = !DILocation(line: 149, column: 13, scope: !8992)
!8998 = !DILocation(line: 151, column: 2, scope: !8992)
!8999 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8874, file: !8874, line: 342, type: !9000, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9002)
!9000 = !DISubroutineType(types: !9001)
!9001 = !{null, !1105, !162, !162}
!9002 = !{!9003, !9004, !9005}
!9003 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8999, file: !8874, line: 342, type: !1105)
!9004 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8999, file: !8874, line: 342, type: !162)
!9005 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8999, file: !8874, line: 342, type: !162)
!9006 = !DILocation(line: 0, scope: !8999)
!9007 = !DILocation(line: 344, column: 3, scope: !8999)
!9008 = !DILocation(line: 345, column: 1, scope: !8999)
!9009 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8874, file: !8874, line: 413, type: !9000, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9010)
!9010 = !{!9011, !9012, !9013}
!9011 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9009, file: !8874, line: 413, type: !1105)
!9012 = !DILocalVariable(name: "Pin", arg: 2, scope: !9009, file: !8874, line: 413, type: !162)
!9013 = !DILocalVariable(name: "Speed", arg: 3, scope: !9009, file: !8874, line: 413, type: !162)
!9014 = !DILocation(line: 0, scope: !9009)
!9015 = !DILocation(line: 415, column: 3, scope: !9009)
!9016 = !DILocation(line: 0, scope: !8819, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 415, column: 3, scope: !9009)
!9018 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !9017)
!9019 = !DILocation(line: 0, scope: !8827, inlinedAt: !9020)
!9020 = distinct !DILocation(line: 415, column: 3, scope: !9009)
!9021 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !9020)
!9022 = !DILocation(line: 0, scope: !8819, inlinedAt: !9023)
!9023 = distinct !DILocation(line: 415, column: 3, scope: !9009)
!9024 = !DILocation(line: 0, scope: !8827, inlinedAt: !9025)
!9025 = distinct !DILocation(line: 415, column: 3, scope: !9009)
!9026 = !DILocation(line: 417, column: 1, scope: !9009)
!9027 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8874, file: !8874, line: 484, type: !9000, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9028)
!9028 = !{!9029, !9030, !9031}
!9029 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9027, file: !8874, line: 484, type: !1105)
!9030 = !DILocalVariable(name: "Pin", arg: 2, scope: !9027, file: !8874, line: 484, type: !162)
!9031 = !DILocalVariable(name: "Pull", arg: 3, scope: !9027, file: !8874, line: 484, type: !162)
!9032 = !DILocation(line: 0, scope: !9027)
!9033 = !DILocation(line: 486, column: 3, scope: !9027)
!9034 = !DILocation(line: 0, scope: !8819, inlinedAt: !9035)
!9035 = distinct !DILocation(line: 486, column: 3, scope: !9027)
!9036 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !9035)
!9037 = !DILocation(line: 0, scope: !8827, inlinedAt: !9038)
!9038 = distinct !DILocation(line: 486, column: 3, scope: !9027)
!9039 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !9038)
!9040 = !DILocation(line: 0, scope: !8819, inlinedAt: !9041)
!9041 = distinct !DILocation(line: 486, column: 3, scope: !9027)
!9042 = !DILocation(line: 0, scope: !8827, inlinedAt: !9043)
!9043 = distinct !DILocation(line: 486, column: 3, scope: !9027)
!9044 = !DILocation(line: 487, column: 1, scope: !9027)
!9045 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8874, file: !8874, line: 556, type: !9000, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9046)
!9046 = !{!9047, !9048, !9049}
!9047 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9045, file: !8874, line: 556, type: !1105)
!9048 = !DILocalVariable(name: "Pin", arg: 2, scope: !9045, file: !8874, line: 556, type: !162)
!9049 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9045, file: !8874, line: 556, type: !162)
!9050 = !DILocation(line: 0, scope: !9045)
!9051 = !DILocation(line: 558, column: 3, scope: !9045)
!9052 = !DILocation(line: 0, scope: !8819, inlinedAt: !9053)
!9053 = distinct !DILocation(line: 558, column: 3, scope: !9045)
!9054 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !9053)
!9055 = !DILocation(line: 0, scope: !8827, inlinedAt: !9056)
!9056 = distinct !DILocation(line: 558, column: 3, scope: !9045)
!9057 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !9056)
!9058 = !DILocation(line: 0, scope: !8819, inlinedAt: !9059)
!9059 = distinct !DILocation(line: 558, column: 3, scope: !9045)
!9060 = !DILocation(line: 0, scope: !8827, inlinedAt: !9061)
!9061 = distinct !DILocation(line: 558, column: 3, scope: !9045)
!9062 = !DILocation(line: 560, column: 1, scope: !9045)
!9063 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8874, file: !8874, line: 633, type: !9000, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9064)
!9064 = !{!9065, !9066, !9067}
!9065 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9063, file: !8874, line: 633, type: !1105)
!9066 = !DILocalVariable(name: "Pin", arg: 2, scope: !9063, file: !8874, line: 633, type: !162)
!9067 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9063, file: !8874, line: 633, type: !162)
!9068 = !DILocation(line: 0, scope: !9063)
!9069 = !DILocation(line: 635, column: 3, scope: !9063)
!9070 = !DILocation(line: 0, scope: !8819, inlinedAt: !9071)
!9071 = distinct !DILocation(line: 635, column: 3, scope: !9063)
!9072 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !9071)
!9073 = !DILocation(line: 0, scope: !8827, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 635, column: 3, scope: !9063)
!9075 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !9074)
!9076 = !DILocation(line: 0, scope: !8819, inlinedAt: !9077)
!9077 = distinct !DILocation(line: 635, column: 3, scope: !9063)
!9078 = !DILocation(line: 0, scope: !8827, inlinedAt: !9079)
!9079 = distinct !DILocation(line: 635, column: 3, scope: !9063)
!9080 = !DILocation(line: 637, column: 1, scope: !9063)
!9081 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8874, file: !8874, line: 273, type: !9000, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9082)
!9082 = !{!9083, !9084, !9085}
!9083 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9081, file: !8874, line: 273, type: !1105)
!9084 = !DILocalVariable(name: "Pin", arg: 2, scope: !9081, file: !8874, line: 273, type: !162)
!9085 = !DILocalVariable(name: "Mode", arg: 3, scope: !9081, file: !8874, line: 273, type: !162)
!9086 = !DILocation(line: 0, scope: !9081)
!9087 = !DILocation(line: 275, column: 3, scope: !9081)
!9088 = !DILocation(line: 0, scope: !8819, inlinedAt: !9089)
!9089 = distinct !DILocation(line: 275, column: 3, scope: !9081)
!9090 = !DILocation(line: 380, column: 4, scope: !8819, inlinedAt: !9089)
!9091 = !DILocation(line: 0, scope: !8827, inlinedAt: !9092)
!9092 = distinct !DILocation(line: 275, column: 3, scope: !9081)
!9093 = !DILocation(line: 414, column: 7, scope: !8827, inlinedAt: !9092)
!9094 = !DILocation(line: 0, scope: !8819, inlinedAt: !9095)
!9095 = distinct !DILocation(line: 275, column: 3, scope: !9081)
!9096 = !DILocation(line: 0, scope: !8827, inlinedAt: !9097)
!9097 = distinct !DILocation(line: 275, column: 3, scope: !9081)
!9098 = !DILocation(line: 276, column: 1, scope: !9081)
!9099 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1172, file: !1172, line: 698, type: !1185, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9100)
!9100 = !{!9101, !9102, !9103}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9099, file: !1172, line: 698, type: !1032)
!9102 = !DILocalVariable(name: "data", scope: !9099, file: !1172, line: 700, type: !8543)
!9103 = !DILocalVariable(name: "ret", scope: !9099, file: !1172, line: 701, type: !107)
!9104 = !DILocation(line: 0, scope: !9099)
!9105 = !DILocation(line: 700, column: 38, scope: !9099)
!9106 = !DILocation(line: 703, column: 8, scope: !9099)
!9107 = !DILocation(line: 703, column: 12, scope: !9099)
!9108 = !DILocation(line: 705, column: 7, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9099, file: !1172, line: 705, column: 6)
!9110 = !DILocation(line: 705, column: 6, scope: !9099)
!9111 = !DILocation(line: 722, column: 8, scope: !9099)
!9112 = !DILocation(line: 723, column: 10, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9099, file: !1172, line: 723, column: 6)
!9114 = !DILocation(line: 723, column: 6, scope: !9099)
!9115 = !DILocation(line: 731, column: 1, scope: !9099)
!9116 = distinct !DISubprogram(name: "device_is_ready", scope: !3452, file: !3452, line: 47, type: !9117, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9119)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{!136, !1032}
!9119 = !{!9120}
!9120 = !DILocalVariable(name: "dev", arg: 1, scope: !9116, file: !3452, line: 47, type: !1032)
!9121 = !DILocation(line: 0, scope: !9116)
!9122 = !DILocation(line: 55, column: 2, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9116, file: !3452, line: 55, column: 2)
!9124 = !{i64 2154355808}
!9125 = !DILocation(line: 56, column: 9, scope: !9116)
!9126 = !DILocation(line: 56, column: 2, scope: !9116)
!9127 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1172, file: !1172, line: 270, type: !9128, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9130)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{!107, !1032, !136}
!9130 = !{!9131, !9132, !9133, !9134, !9135}
!9131 = !DILocalVariable(name: "dev", arg: 1, scope: !9127, file: !1172, line: 270, type: !1032)
!9132 = !DILocalVariable(name: "on", arg: 2, scope: !9127, file: !1172, line: 270, type: !136)
!9133 = !DILocalVariable(name: "cfg", scope: !9127, file: !1172, line: 272, type: !8476)
!9134 = !DILocalVariable(name: "ret", scope: !9127, file: !1172, line: 273, type: !107)
!9135 = !DILocalVariable(name: "clk", scope: !9127, file: !1172, line: 278, type: !8766)
!9136 = !DILocation(line: 0, scope: !9127)
!9137 = !DILocation(line: 272, column: 45, scope: !9127)
!9138 = !DILocation(line: 282, column: 38, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !1172, line: 280, column: 10)
!9140 = distinct !DILexicalBlock(scope: !9127, file: !1172, line: 280, column: 6)
!9141 = !DILocation(line: 282, column: 6, scope: !9139)
!9142 = !DILocation(line: 281, column: 9, scope: !9139)
!9143 = !DILocation(line: 293, column: 1, scope: !9127)
!9144 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9117, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9145)
!9145 = !{!9146}
!9146 = !DILocalVariable(name: "dev", arg: 1, scope: !9144, file: !120, line: 730, type: !1032)
!9147 = !DILocation(line: 0, scope: !9144)
!9148 = !DILocation(line: 732, column: 9, scope: !9144)
!9149 = !DILocation(line: 732, column: 2, scope: !9144)
!9150 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1172, file: !1172, line: 496, type: !9151, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !9153)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{!107, !1032, !107, !107, !107}
!9153 = !{!9154, !9155, !9156, !9157, !9158, !9159}
!9154 = !DILocalVariable(name: "dev", arg: 1, scope: !9150, file: !1172, line: 496, type: !1032)
!9155 = !DILocalVariable(name: "pin", arg: 2, scope: !9150, file: !1172, line: 496, type: !107)
!9156 = !DILocalVariable(name: "conf", arg: 3, scope: !9150, file: !1172, line: 496, type: !107)
!9157 = !DILocalVariable(name: "func", arg: 4, scope: !9150, file: !1172, line: 496, type: !107)
!9158 = !DILocalVariable(name: "ret", scope: !9150, file: !1172, line: 498, type: !107)
!9159 = !DILocalVariable(name: "gpio_out", scope: !9160, file: !1172, line: 508, type: !162)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !1172, line: 507, column: 27)
!9161 = distinct !DILexicalBlock(scope: !9150, file: !1172, line: 507, column: 6)
!9162 = !DILocation(line: 0, scope: !9150)
!9163 = !DILocation(line: 505, column: 2, scope: !9150)
!9164 = !DILocation(line: 507, column: 11, scope: !9161)
!9165 = !DILocation(line: 507, column: 6, scope: !9150)
!9166 = !DILocation(line: 508, column: 28, scope: !9160)
!9167 = !DILocation(line: 0, scope: !9160)
!9168 = !DILocation(line: 510, column: 16, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9160, file: !1172, line: 510, column: 7)
!9170 = !DILocation(line: 0, scope: !9169)
!9171 = !DILocation(line: 510, column: 7, scope: !9160)
!9172 = !DILocation(line: 511, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !1172, line: 510, column: 32)
!9174 = !DILocation(line: 512, column: 3, scope: !9173)
!9175 = !DILocation(line: 513, column: 4, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !1172, line: 512, column: 39)
!9177 = distinct !DILexicalBlock(scope: !9169, file: !1172, line: 512, column: 14)
!9178 = !DILocation(line: 514, column: 3, scope: !9176)
!9179 = !DILocation(line: 518, column: 1, scope: !9150)
!9180 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1480, file: !1480, line: 526, type: !1351, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9181)
!9181 = !{!9182, !9183, !9184}
!9182 = !DILocalVariable(name: "dev", arg: 1, scope: !9180, file: !1480, line: 526, type: !1353)
!9183 = !DILocalVariable(name: "c", arg: 2, scope: !9180, file: !1480, line: 526, type: !144)
!9184 = !DILocalVariable(name: "config", scope: !9180, file: !1480, line: 528, type: !9185)
!9185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!9186 = !DILocation(line: 0, scope: !9180)
!9187 = !DILocation(line: 528, column: 48, scope: !9180)
!9188 = !DILocation(line: 531, column: 40, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9180, file: !1480, line: 531, column: 6)
!9190 = !DILocation(line: 531, column: 6, scope: !9189)
!9191 = !DILocation(line: 531, column: 6, scope: !9180)
!9192 = !DILocation(line: 532, column: 34, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9189, file: !1480, line: 531, column: 48)
!9194 = !DILocation(line: 532, column: 3, scope: !9193)
!9195 = !DILocation(line: 533, column: 2, scope: !9193)
!9196 = !DILocation(line: 539, column: 42, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9180, file: !1480, line: 539, column: 6)
!9198 = !DILocation(line: 539, column: 7, scope: !9197)
!9199 = !DILocation(line: 539, column: 6, scope: !9180)
!9200 = !DILocation(line: 543, column: 52, scope: !9180)
!9201 = !DILocation(line: 543, column: 22, scope: !9180)
!9202 = !DILocation(line: 543, column: 5, scope: !9180)
!9203 = !DILocation(line: 545, column: 2, scope: !9180)
!9204 = !DILocation(line: 546, column: 1, scope: !9180)
!9205 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1480, file: !1480, line: 548, type: !1370, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9206)
!9206 = !{!9207, !9208, !9209, !9210}
!9207 = !DILocalVariable(name: "dev", arg: 1, scope: !9205, file: !1480, line: 548, type: !1353)
!9208 = !DILocalVariable(name: "c", arg: 2, scope: !9205, file: !1480, line: 549, type: !134)
!9209 = !DILocalVariable(name: "config", scope: !9205, file: !1480, line: 551, type: !9185)
!9210 = !DILocalVariable(name: "key", scope: !9205, file: !1480, line: 555, type: !32)
!9211 = !DILocation(line: 0, scope: !9205)
!9212 = !DILocation(line: 551, column: 48, scope: !9205)
!9213 = !DILocation(line: 562, column: 2, scope: !9205)
!9214 = !DILocation(line: 563, column: 41, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !1480, line: 563, column: 7)
!9216 = distinct !DILexicalBlock(scope: !9205, file: !1480, line: 562, column: 12)
!9217 = !DILocation(line: 563, column: 7, scope: !9215)
!9218 = !DILocation(line: 563, column: 7, scope: !9216)
!9219 = !DILocation(line: 55, column: 2, scope: !9220, inlinedAt: !9224)
!9220 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9221)
!9221 = !{!9222, !9223}
!9222 = !DILocalVariable(name: "key", scope: !9220, file: !5943, line: 44, type: !32)
!9223 = !DILocalVariable(name: "tmp", scope: !9220, file: !5943, line: 53, type: !32)
!9224 = distinct !DILocation(line: 564, column: 10, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9215, file: !1480, line: 563, column: 49)
!9226 = !{i64 2086178}
!9227 = !DILocation(line: 0, scope: !9220, inlinedAt: !9224)
!9228 = !DILocation(line: 565, column: 42, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9225, file: !1480, line: 565, column: 8)
!9230 = !DILocation(line: 565, column: 8, scope: !9229)
!9231 = !DILocation(line: 565, column: 8, scope: !9225)
!9232 = !DILocalVariable(name: "key", arg: 1, scope: !9233, file: !5943, line: 84, type: !32)
!9233 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9234)
!9234 = !{!9232}
!9235 = !DILocation(line: 0, scope: !9233, inlinedAt: !9236)
!9236 = distinct !DILocation(line: 568, column: 4, scope: !9225)
!9237 = !DILocation(line: 95, column: 2, scope: !9233, inlinedAt: !9236)
!9238 = !{i64 2086995}
!9239 = !DILocation(line: 569, column: 3, scope: !9225)
!9240 = distinct !{!9240, !9213, !9241}
!9241 = !DILocation(line: 570, column: 2, scope: !9205)
!9242 = !DILocation(line: 592, column: 33, scope: !9205)
!9243 = !DILocation(line: 592, column: 2, scope: !9205)
!9244 = !DILocation(line: 0, scope: !9233, inlinedAt: !9245)
!9245 = distinct !DILocation(line: 593, column: 2, scope: !9205)
!9246 = !DILocation(line: 95, column: 2, scope: !9233, inlinedAt: !9245)
!9247 = !DILocation(line: 594, column: 1, scope: !9205)
!9248 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1480, file: !1480, line: 596, type: !1374, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9249)
!9249 = !{!9250, !9251, !9252}
!9250 = !DILocalVariable(name: "dev", arg: 1, scope: !9248, file: !1480, line: 596, type: !1353)
!9251 = !DILocalVariable(name: "config", scope: !9248, file: !1480, line: 598, type: !9185)
!9252 = !DILocalVariable(name: "err", scope: !9248, file: !1480, line: 599, type: !162)
!9253 = !DILocation(line: 0, scope: !9248)
!9254 = !DILocation(line: 598, column: 48, scope: !9248)
!9255 = !DILocation(line: 606, column: 40, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 606, column: 6)
!9257 = !DILocation(line: 606, column: 6, scope: !9256)
!9258 = !DILocation(line: 606, column: 6, scope: !9248)
!9259 = !DILocation(line: 610, column: 39, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 610, column: 6)
!9261 = !DILocation(line: 610, column: 6, scope: !9260)
!9262 = !DILocation(line: 610, column: 6, scope: !9248)
!9263 = !DILocation(line: 614, column: 39, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 614, column: 6)
!9265 = !DILocation(line: 614, column: 6, scope: !9264)
!9266 = !DILocation(line: 614, column: 6, scope: !9248)
!9267 = !DILocation(line: 619, column: 40, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 619, column: 6)
!9269 = !DILocation(line: 619, column: 6, scope: !9268)
!9270 = !DILocation(line: 619, column: 6, scope: !9248)
!9271 = !DILocation(line: 623, column: 10, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 623, column: 6)
!9273 = !DILocation(line: 623, column: 6, scope: !9248)
!9274 = !DILocation(line: 624, column: 34, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9272, file: !1480, line: 623, column: 24)
!9276 = !DILocation(line: 624, column: 3, scope: !9275)
!9277 = !DILocation(line: 625, column: 2, scope: !9275)
!9278 = !DILocation(line: 632, column: 10, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 632, column: 6)
!9280 = !DILocation(line: 632, column: 6, scope: !9248)
!9281 = !DILocation(line: 633, column: 34, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9279, file: !1480, line: 632, column: 32)
!9283 = !DILocation(line: 633, column: 3, scope: !9282)
!9284 = !DILocation(line: 634, column: 2, scope: !9282)
!9285 = !DILocation(line: 636, column: 10, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 636, column: 6)
!9287 = !DILocation(line: 636, column: 6, scope: !9248)
!9288 = !DILocation(line: 637, column: 33, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9286, file: !1480, line: 636, column: 31)
!9290 = !DILocation(line: 637, column: 3, scope: !9289)
!9291 = !DILocation(line: 638, column: 2, scope: !9289)
!9292 = !DILocation(line: 640, column: 10, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9248, file: !1480, line: 640, column: 6)
!9294 = !DILocation(line: 640, column: 6, scope: !9248)
!9295 = !DILocation(line: 641, column: 33, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !1480, line: 640, column: 32)
!9297 = !DILocation(line: 641, column: 3, scope: !9296)
!9298 = !DILocation(line: 642, column: 2, scope: !9296)
!9299 = !DILocation(line: 646, column: 32, scope: !9248)
!9300 = !DILocation(line: 646, column: 2, scope: !9248)
!9301 = !DILocation(line: 648, column: 2, scope: !9248)
!9302 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1480, file: !1480, line: 419, type: !1378, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9303)
!9303 = !{!9304, !9305, !9306, !9307, !9309, !9310, !9311, !9312}
!9304 = !DILocalVariable(name: "dev", arg: 1, scope: !9302, file: !1480, line: 419, type: !1353)
!9305 = !DILocalVariable(name: "cfg", arg: 2, scope: !9302, file: !1480, line: 420, type: !1380)
!9306 = !DILocalVariable(name: "config", scope: !9302, file: !1480, line: 422, type: !9185)
!9307 = !DILocalVariable(name: "data", scope: !9302, file: !1480, line: 423, type: !9308)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!9309 = !DILocalVariable(name: "parity", scope: !9302, file: !1480, line: 424, type: !6385)
!9310 = !DILocalVariable(name: "stopbits", scope: !9302, file: !1480, line: 425, type: !6385)
!9311 = !DILocalVariable(name: "databits", scope: !9302, file: !1480, line: 426, type: !6385)
!9312 = !DILocalVariable(name: "flowctrl", scope: !9302, file: !1480, line: 428, type: !6385)
!9313 = !DILocation(line: 0, scope: !9302)
!9314 = !DILocation(line: 422, column: 48, scope: !9302)
!9315 = !DILocation(line: 423, column: 38, scope: !9302)
!9316 = !DILocation(line: 424, column: 56, scope: !9302)
!9317 = !DILocation(line: 424, column: 51, scope: !9302)
!9318 = !DILocation(line: 424, column: 26, scope: !9302)
!9319 = !DILocation(line: 425, column: 60, scope: !9302)
!9320 = !DILocation(line: 425, column: 55, scope: !9302)
!9321 = !DILocation(line: 425, column: 28, scope: !9302)
!9322 = !DILocation(line: 426, column: 60, scope: !9302)
!9323 = !DILocation(line: 426, column: 55, scope: !9302)
!9324 = !DILocation(line: 426, column: 28, scope: !9302)
!9325 = !DILocation(line: 428, column: 58, scope: !9302)
!9326 = !DILocation(line: 428, column: 53, scope: !9302)
!9327 = !DILocation(line: 428, column: 28, scope: !9302)
!9328 = !DILocation(line: 431, column: 44, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 431, column: 6)
!9330 = !DILocation(line: 438, column: 22, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 437, column: 6)
!9332 = !DILocation(line: 437, column: 6, scope: !9302)
!9333 = !DILocation(line: 448, column: 6, scope: !9302)
!9334 = !DILocation(line: 465, column: 47, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 465, column: 6)
!9336 = !DILocation(line: 475, column: 21, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 475, column: 6)
!9338 = !DILocation(line: 475, column: 6, scope: !9302)
!9339 = !DILocation(line: 476, column: 8, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !1480, line: 476, column: 7)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !1480, line: 475, column: 49)
!9342 = !DILocation(line: 477, column: 34, scope: !9340)
!9343 = !DILocation(line: 476, column: 7, scope: !9341)
!9344 = !DILocation(line: 482, column: 27, scope: !9302)
!9345 = !DILocation(line: 482, column: 2, scope: !9302)
!9346 = !DILocation(line: 484, column: 16, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 484, column: 6)
!9348 = !DILocation(line: 484, column: 13, scope: !9347)
!9349 = !DILocation(line: 484, column: 6, scope: !9302)
!9350 = !DILocation(line: 485, column: 3, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9347, file: !1480, line: 484, column: 44)
!9352 = !DILocation(line: 486, column: 2, scope: !9351)
!9353 = !DILocation(line: 488, column: 18, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 488, column: 6)
!9355 = !DILocation(line: 488, column: 15, scope: !9354)
!9356 = !DILocation(line: 488, column: 6, scope: !9302)
!9357 = !DILocation(line: 489, column: 3, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !1480, line: 488, column: 48)
!9359 = !DILocation(line: 490, column: 2, scope: !9358)
!9360 = !DILocation(line: 492, column: 18, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 492, column: 6)
!9362 = !DILocation(line: 492, column: 15, scope: !9361)
!9363 = !DILocation(line: 492, column: 6, scope: !9302)
!9364 = !DILocation(line: 493, column: 3, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9361, file: !1480, line: 492, column: 48)
!9366 = !DILocation(line: 494, column: 2, scope: !9365)
!9367 = !DILocation(line: 496, column: 18, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 496, column: 6)
!9369 = !DILocation(line: 496, column: 15, scope: !9368)
!9370 = !DILocation(line: 496, column: 6, scope: !9302)
!9371 = !DILocation(line: 497, column: 3, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9368, file: !1480, line: 496, column: 46)
!9373 = !DILocation(line: 498, column: 2, scope: !9372)
!9374 = !DILocation(line: 500, column: 11, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9302, file: !1480, line: 500, column: 6)
!9376 = !DILocation(line: 500, column: 29, scope: !9375)
!9377 = !DILocation(line: 500, column: 20, scope: !9375)
!9378 = !DILocation(line: 500, column: 6, scope: !9302)
!9379 = !DILocation(line: 501, column: 3, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9375, file: !1480, line: 500, column: 40)
!9381 = !DILocation(line: 502, column: 26, scope: !9380)
!9382 = !DILocation(line: 502, column: 19, scope: !9380)
!9383 = !DILocation(line: 503, column: 2, scope: !9380)
!9384 = !DILocation(line: 505, column: 26, scope: !9302)
!9385 = !DILocation(line: 505, column: 2, scope: !9302)
!9386 = !DILocation(line: 506, column: 2, scope: !9302)
!9387 = !DILocation(line: 507, column: 1, scope: !9302)
!9388 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1480, file: !1480, line: 509, type: !1391, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9389)
!9389 = !{!9390, !9391, !9392}
!9390 = !DILocalVariable(name: "dev", arg: 1, scope: !9388, file: !1480, line: 509, type: !1353)
!9391 = !DILocalVariable(name: "cfg", arg: 2, scope: !9388, file: !1480, line: 510, type: !1393)
!9392 = !DILocalVariable(name: "data", scope: !9388, file: !1480, line: 512, type: !9308)
!9393 = !DILocation(line: 0, scope: !9388)
!9394 = !DILocation(line: 512, column: 38, scope: !9388)
!9395 = !DILocation(line: 514, column: 24, scope: !9388)
!9396 = !DILocation(line: 514, column: 7, scope: !9388)
!9397 = !DILocation(line: 514, column: 16, scope: !9388)
!9398 = !DILocation(line: 515, column: 41, scope: !9388)
!9399 = !{i32 0, i32 1537}
!9400 = !DILocation(line: 515, column: 16, scope: !9388)
!9401 = !DILocation(line: 515, column: 7, scope: !9388)
!9402 = !DILocation(line: 515, column: 14, scope: !9388)
!9403 = !DILocation(line: 517, column: 3, scope: !9388)
!9404 = !{i32 0, i32 12289}
!9405 = !DILocation(line: 516, column: 19, scope: !9388)
!9406 = !DILocation(line: 516, column: 7, scope: !9388)
!9407 = !DILocation(line: 516, column: 17, scope: !9388)
!9408 = !DILocation(line: 519, column: 3, scope: !9388)
!9409 = !DILocation(line: 519, column: 33, scope: !9388)
!9410 = !DILocation(line: 518, column: 19, scope: !9388)
!9411 = !DILocation(line: 518, column: 7, scope: !9388)
!9412 = !DILocation(line: 518, column: 17, scope: !9388)
!9413 = !DILocation(line: 521, column: 3, scope: !9388)
!9414 = !{i32 0, i32 769}
!9415 = !DILocation(line: 520, column: 19, scope: !9388)
!9416 = !DILocation(line: 520, column: 7, scope: !9388)
!9417 = !DILocation(line: 520, column: 17, scope: !9388)
!9418 = !DILocation(line: 522, column: 2, scope: !9388)
!9419 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1480, file: !1480, line: 661, type: !1396, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9420)
!9420 = !{!9421, !9422, !9423, !9424, !9425, !9426}
!9421 = !DILocalVariable(name: "dev", arg: 1, scope: !9419, file: !1480, line: 661, type: !1353)
!9422 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9419, file: !1480, line: 662, type: !176)
!9423 = !DILocalVariable(name: "size", arg: 3, scope: !9419, file: !1480, line: 663, type: !107)
!9424 = !DILocalVariable(name: "config", scope: !9419, file: !1480, line: 665, type: !9185)
!9425 = !DILocalVariable(name: "num_tx", scope: !9419, file: !1480, line: 666, type: !133)
!9426 = !DILocalVariable(name: "key", scope: !9419, file: !1480, line: 667, type: !32)
!9427 = !DILocation(line: 0, scope: !9419)
!9428 = !DILocation(line: 665, column: 48, scope: !9419)
!9429 = !DILocation(line: 669, column: 41, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9419, file: !1480, line: 669, column: 6)
!9431 = !DILocation(line: 669, column: 7, scope: !9430)
!9432 = !DILocation(line: 669, column: 6, scope: !9419)
!9433 = !DILocation(line: 55, column: 2, scope: !9220, inlinedAt: !9434)
!9434 = distinct !DILocation(line: 674, column: 8, scope: !9419)
!9435 = !DILocation(line: 0, scope: !9220, inlinedAt: !9434)
!9436 = !DILocation(line: 676, column: 24, scope: !9419)
!9437 = !DILocation(line: 676, column: 29, scope: !9419)
!9438 = !DILocation(line: 677, column: 43, scope: !9419)
!9439 = !DILocation(line: 677, column: 9, scope: !9419)
!9440 = !DILocation(line: 676, column: 2, scope: !9419)
!9441 = !DILocation(line: 681, column: 34, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9419, file: !1480, line: 677, column: 51)
!9443 = !DILocation(line: 681, column: 55, scope: !9442)
!9444 = !DILocation(line: 681, column: 41, scope: !9442)
!9445 = !DILocation(line: 681, column: 3, scope: !9442)
!9446 = !DILocation(line: 676, column: 17, scope: !9419)
!9447 = distinct !{!9447, !9440, !9448}
!9448 = !DILocation(line: 682, column: 2, scope: !9419)
!9449 = !DILocation(line: 0, scope: !9233, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 684, column: 2, scope: !9419)
!9451 = !DILocation(line: 95, column: 2, scope: !9233, inlinedAt: !9450)
!9452 = !DILocation(line: 686, column: 2, scope: !9419)
!9453 = !DILocation(line: 687, column: 1, scope: !9419)
!9454 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1480, file: !1480, line: 689, type: !1400, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9455)
!9455 = !{!9456, !9457, !9458, !9459, !9460}
!9456 = !DILocalVariable(name: "dev", arg: 1, scope: !9454, file: !1480, line: 689, type: !1353)
!9457 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9454, file: !1480, line: 689, type: !182)
!9458 = !DILocalVariable(name: "size", arg: 3, scope: !9454, file: !1480, line: 690, type: !183)
!9459 = !DILocalVariable(name: "config", scope: !9454, file: !1480, line: 692, type: !9185)
!9460 = !DILocalVariable(name: "num_rx", scope: !9454, file: !1480, line: 693, type: !133)
!9461 = !DILocation(line: 0, scope: !9454)
!9462 = !DILocation(line: 692, column: 48, scope: !9454)
!9463 = !DILocation(line: 696, column: 44, scope: !9454)
!9464 = !DILocation(line: 695, column: 24, scope: !9454)
!9465 = !DILocation(line: 695, column: 29, scope: !9454)
!9466 = !DILocation(line: 696, column: 9, scope: !9454)
!9467 = !DILocation(line: 695, column: 2, scope: !9454)
!9468 = !DILocation(line: 700, column: 53, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9454, file: !1480, line: 696, column: 52)
!9470 = !DILocation(line: 700, column: 23, scope: !9469)
!9471 = !DILocation(line: 700, column: 17, scope: !9469)
!9472 = !DILocation(line: 700, column: 3, scope: !9469)
!9473 = !DILocation(line: 700, column: 21, scope: !9469)
!9474 = !DILocation(line: 703, column: 41, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9469, file: !1480, line: 703, column: 7)
!9476 = !DILocation(line: 703, column: 7, scope: !9475)
!9477 = !DILocation(line: 703, column: 7, scope: !9469)
!9478 = !DILocation(line: 704, column: 35, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !1480, line: 703, column: 49)
!9480 = !DILocation(line: 704, column: 4, scope: !9479)
!9481 = !DILocation(line: 709, column: 3, scope: !9479)
!9482 = !DILocation(line: 695, column: 17, scope: !9454)
!9483 = distinct !{!9483, !9467, !9484}
!9484 = !DILocation(line: 710, column: 2, scope: !9454)
!9485 = !DILocation(line: 712, column: 2, scope: !9454)
!9486 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1480, file: !1480, line: 715, type: !1404, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9487)
!9487 = !{!9488, !9489}
!9488 = !DILocalVariable(name: "dev", arg: 1, scope: !9486, file: !1480, line: 715, type: !1353)
!9489 = !DILocalVariable(name: "config", scope: !9486, file: !1480, line: 717, type: !9185)
!9490 = !DILocation(line: 0, scope: !9486)
!9491 = !DILocation(line: 717, column: 48, scope: !9486)
!9492 = !DILocation(line: 729, column: 31, scope: !9486)
!9493 = !DILocation(line: 729, column: 2, scope: !9486)
!9494 = !DILocation(line: 734, column: 1, scope: !9486)
!9495 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1480, file: !1480, line: 736, type: !1404, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9496)
!9496 = !{!9497, !9498}
!9497 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !1480, line: 736, type: !1353)
!9498 = !DILocalVariable(name: "config", scope: !9495, file: !1480, line: 738, type: !9185)
!9499 = !DILocation(line: 0, scope: !9495)
!9500 = !DILocation(line: 738, column: 48, scope: !9495)
!9501 = !DILocation(line: 746, column: 32, scope: !9495)
!9502 = !DILocation(line: 746, column: 2, scope: !9495)
!9503 = !DILocation(line: 756, column: 1, scope: !9495)
!9504 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1480, file: !1480, line: 758, type: !1374, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9505)
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "dev", arg: 1, scope: !9504, file: !1480, line: 758, type: !1353)
!9507 = !DILocalVariable(name: "config", scope: !9504, file: !1480, line: 760, type: !9185)
!9508 = !DILocation(line: 0, scope: !9504)
!9509 = !DILocation(line: 760, column: 48, scope: !9504)
!9510 = !DILocation(line: 762, column: 43, scope: !9504)
!9511 = !DILocation(line: 762, column: 9, scope: !9504)
!9512 = !DILocation(line: 762, column: 50, scope: !9504)
!9513 = !DILocation(line: 763, column: 35, scope: !9504)
!9514 = !DILocation(line: 763, column: 3, scope: !9504)
!9515 = !DILocation(line: 762, column: 2, scope: !9504)
!9516 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1480, file: !1480, line: 773, type: !1404, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9517)
!9517 = !{!9518, !9519}
!9518 = !DILocalVariable(name: "dev", arg: 1, scope: !9516, file: !1480, line: 773, type: !1353)
!9519 = !DILocalVariable(name: "config", scope: !9516, file: !1480, line: 775, type: !9185)
!9520 = !DILocation(line: 0, scope: !9516)
!9521 = !DILocation(line: 775, column: 48, scope: !9516)
!9522 = !DILocation(line: 777, column: 33, scope: !9516)
!9523 = !DILocation(line: 777, column: 2, scope: !9516)
!9524 = !DILocation(line: 778, column: 1, scope: !9516)
!9525 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1480, file: !1480, line: 780, type: !1404, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9526)
!9526 = !{!9527, !9528}
!9527 = !DILocalVariable(name: "dev", arg: 1, scope: !9525, file: !1480, line: 780, type: !1353)
!9528 = !DILocalVariable(name: "config", scope: !9525, file: !1480, line: 782, type: !9185)
!9529 = !DILocation(line: 0, scope: !9525)
!9530 = !DILocation(line: 782, column: 48, scope: !9525)
!9531 = !DILocation(line: 784, column: 34, scope: !9525)
!9532 = !DILocation(line: 784, column: 2, scope: !9525)
!9533 = !DILocation(line: 785, column: 1, scope: !9525)
!9534 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1480, file: !1480, line: 766, type: !1374, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9535)
!9535 = !{!9536, !9537}
!9536 = !DILocalVariable(name: "dev", arg: 1, scope: !9534, file: !1480, line: 766, type: !1353)
!9537 = !DILocalVariable(name: "config", scope: !9534, file: !1480, line: 768, type: !9185)
!9538 = !DILocation(line: 0, scope: !9534)
!9539 = !DILocation(line: 768, column: 48, scope: !9534)
!9540 = !DILocation(line: 770, column: 42, scope: !9534)
!9541 = !DILocation(line: 770, column: 9, scope: !9534)
!9542 = !DILocation(line: 770, column: 2, scope: !9534)
!9543 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1480, file: !1480, line: 787, type: !1374, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9544)
!9544 = !{!9545, !9546}
!9545 = !DILocalVariable(name: "dev", arg: 1, scope: !9543, file: !1480, line: 787, type: !1353)
!9546 = !DILocalVariable(name: "config", scope: !9543, file: !1480, line: 789, type: !9185)
!9547 = !DILocation(line: 0, scope: !9543)
!9548 = !DILocation(line: 789, column: 48, scope: !9543)
!9549 = !DILocation(line: 794, column: 44, scope: !9543)
!9550 = !DILocation(line: 794, column: 9, scope: !9543)
!9551 = !DILocation(line: 794, column: 2, scope: !9543)
!9552 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1480, file: !1480, line: 797, type: !1404, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9553)
!9553 = !{!9554, !9555}
!9554 = !DILocalVariable(name: "dev", arg: 1, scope: !9552, file: !1480, line: 797, type: !1353)
!9555 = !DILocalVariable(name: "config", scope: !9552, file: !1480, line: 799, type: !9185)
!9556 = !DILocation(line: 0, scope: !9552)
!9557 = !DILocation(line: 799, column: 48, scope: !9552)
!9558 = !DILocation(line: 802, column: 34, scope: !9552)
!9559 = !DILocation(line: 802, column: 2, scope: !9552)
!9560 = !DILocation(line: 805, column: 6, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9552, file: !1480, line: 805, column: 6)
!9562 = !DILocation(line: 806, column: 3, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9561, file: !1480, line: 805, column: 43)
!9564 = !DILocation(line: 810, column: 31, scope: !9552)
!9565 = !DILocation(line: 807, column: 2, scope: !9563)
!9566 = !DILocation(line: 810, column: 2, scope: !9552)
!9567 = !DILocation(line: 811, column: 1, scope: !9552)
!9568 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1480, file: !1480, line: 813, type: !1404, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9569)
!9569 = !{!9570, !9571}
!9570 = !DILocalVariable(name: "dev", arg: 1, scope: !9568, file: !1480, line: 813, type: !1353)
!9571 = !DILocalVariable(name: "config", scope: !9568, file: !1480, line: 815, type: !9185)
!9572 = !DILocation(line: 0, scope: !9568)
!9573 = !DILocation(line: 815, column: 48, scope: !9568)
!9574 = !DILocation(line: 818, column: 35, scope: !9568)
!9575 = !DILocation(line: 818, column: 2, scope: !9568)
!9576 = !DILocation(line: 821, column: 6, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9568, file: !1480, line: 821, column: 6)
!9578 = !DILocation(line: 822, column: 3, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9577, file: !1480, line: 821, column: 43)
!9580 = !DILocation(line: 826, column: 32, scope: !9568)
!9581 = !DILocation(line: 823, column: 2, scope: !9579)
!9582 = !DILocation(line: 826, column: 2, scope: !9568)
!9583 = !DILocation(line: 827, column: 1, scope: !9568)
!9584 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1480, file: !1480, line: 829, type: !1374, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9585)
!9585 = !{!9586, !9587}
!9586 = !DILocalVariable(name: "dev", arg: 1, scope: !9584, file: !1480, line: 829, type: !1353)
!9587 = !DILocalVariable(name: "config", scope: !9584, file: !1480, line: 831, type: !9185)
!9588 = !DILocation(line: 0, scope: !9584)
!9589 = !DILocation(line: 831, column: 48, scope: !9584)
!9590 = !DILocation(line: 833, column: 46, scope: !9584)
!9591 = !DILocation(line: 833, column: 11, scope: !9584)
!9592 = !DILocation(line: 833, column: 53, scope: !9584)
!9593 = !DILocation(line: 834, column: 38, scope: !9584)
!9594 = !DILocation(line: 834, column: 4, scope: !9584)
!9595 = !DILocation(line: 834, column: 46, scope: !9584)
!9596 = !DILocation(line: 835, column: 37, scope: !9584)
!9597 = !DILocation(line: 835, column: 4, scope: !9584)
!9598 = !DILocation(line: 835, column: 44, scope: !9584)
!9599 = !DILocation(line: 836, column: 36, scope: !9584)
!9600 = !DILocation(line: 836, column: 4, scope: !9584)
!9601 = !DILocation(line: 833, column: 2, scope: !9584)
!9602 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1480, file: !1480, line: 839, type: !1374, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9603)
!9603 = !{!9604}
!9604 = !DILocalVariable(name: "dev", arg: 1, scope: !9602, file: !1480, line: 839, type: !1353)
!9605 = !DILocation(line: 0, scope: !9602)
!9606 = !DILocation(line: 841, column: 2, scope: !9602)
!9607 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1480, file: !1480, line: 844, type: !1418, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9608)
!9608 = !{!9609, !9610, !9611, !9612}
!9609 = !DILocalVariable(name: "dev", arg: 1, scope: !9607, file: !1480, line: 844, type: !1353)
!9610 = !DILocalVariable(name: "cb", arg: 2, scope: !9607, file: !1480, line: 845, type: !1420)
!9611 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9607, file: !1480, line: 846, type: !102)
!9612 = !DILocalVariable(name: "data", scope: !9607, file: !1480, line: 848, type: !9308)
!9613 = !DILocation(line: 0, scope: !9607)
!9614 = !DILocation(line: 848, column: 38, scope: !9607)
!9615 = !DILocation(line: 850, column: 8, scope: !9607)
!9616 = !DILocation(line: 850, column: 16, scope: !9607)
!9617 = !DILocation(line: 851, column: 8, scope: !9607)
!9618 = !DILocation(line: 851, column: 18, scope: !9607)
!9619 = !DILocation(line: 852, column: 1, scope: !9607)
!9620 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9621, file: !9621, line: 1792, type: !9622, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9624)
!9621 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!162, !1424}
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9620, file: !9621, line: 1792, type: !1424)
!9626 = !DILocation(line: 0, scope: !9620)
!9627 = !DILocation(line: 1794, column: 11, scope: !9620)
!9628 = !DILocation(line: 1794, column: 47, scope: !9620)
!9629 = !DILocation(line: 1794, column: 3, scope: !9620)
!9630 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9621, file: !9621, line: 2227, type: !9622, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9631)
!9631 = !{!9632}
!9632 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9630, file: !9621, line: 2227, type: !1424)
!9633 = !DILocation(line: 0, scope: !9630)
!9634 = !DILocation(line: 2229, column: 11, scope: !9630)
!9635 = !DILocation(line: 2229, column: 51, scope: !9630)
!9636 = !DILocation(line: 2229, column: 3, scope: !9630)
!9637 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9621, file: !9621, line: 1803, type: !9622, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9638)
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9637, file: !9621, line: 1803, type: !1424)
!9640 = !DILocation(line: 0, scope: !9637)
!9641 = !DILocation(line: 1805, column: 11, scope: !9637)
!9642 = !DILocation(line: 1805, column: 45, scope: !9637)
!9643 = !DILocation(line: 1805, column: 3, scope: !9637)
!9644 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9621, file: !9621, line: 2238, type: !9622, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9645)
!9645 = !{!9646}
!9646 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9644, file: !9621, line: 2238, type: !1424)
!9647 = !DILocation(line: 0, scope: !9644)
!9648 = !DILocation(line: 2240, column: 11, scope: !9644)
!9649 = !DILocation(line: 2240, column: 49, scope: !9644)
!9650 = !DILocation(line: 2240, column: 3, scope: !9644)
!9651 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9621, file: !9621, line: 2192, type: !9652, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9654)
!9652 = !DISubroutineType(types: !9653)
!9653 = !{null, !1424}
!9654 = !{!9655, !9656}
!9655 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9651, file: !9621, line: 2192, type: !1424)
!9656 = !DILocalVariable(name: "val", scope: !9657, file: !9621, line: 2194, type: !162)
!9657 = distinct !DILexicalBlock(scope: !9651, file: !9621, line: 2194, column: 3)
!9658 = !DILocation(line: 0, scope: !9651)
!9659 = !DILocation(line: 2194, column: 3, scope: !9657)
!9660 = !DILocalVariable(name: "addr", arg: 1, scope: !9661, file: !6117, line: 476, type: !1476)
!9661 = distinct !DISubprogram(name: "__LDREXW", scope: !6117, file: !6117, line: 476, type: !9662, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9664)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{!162, !1476}
!9664 = !{!9660, !9665}
!9665 = !DILocalVariable(name: "result", scope: !9661, file: !6117, line: 478, type: !162)
!9666 = !DILocation(line: 0, scope: !9661, inlinedAt: !9667)
!9667 = distinct !DILocation(line: 2194, column: 3, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9657, file: !9621, line: 2194, column: 3)
!9669 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9667)
!9670 = !{i64 2945076}
!9671 = !DILocation(line: 2194, column: 3, scope: !9668)
!9672 = !DILocation(line: 0, scope: !9657)
!9673 = !DILocalVariable(name: "value", arg: 1, scope: !9674, file: !6117, line: 527, type: !162)
!9674 = distinct !DISubprogram(name: "__STREXW", scope: !6117, file: !6117, line: 527, type: !9675, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9677)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!162, !162, !1476}
!9677 = !{!9673, !9678, !9679}
!9678 = !DILocalVariable(name: "addr", arg: 2, scope: !9674, file: !6117, line: 527, type: !1476)
!9679 = !DILocalVariable(name: "result", scope: !9674, file: !6117, line: 529, type: !162)
!9680 = !DILocation(line: 0, scope: !9674, inlinedAt: !9681)
!9681 = distinct !DILocation(line: 2194, column: 3, scope: !9657)
!9682 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9681)
!9683 = !{i64 2946512}
!9684 = distinct !{!9684, !9659, !9659}
!9685 = !DILocation(line: 2195, column: 1, scope: !9651)
!9686 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9621, file: !9621, line: 2177, type: !9652, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9687)
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9686, file: !9621, line: 2177, type: !1424)
!9689 = !DILocation(line: 0, scope: !9686)
!9690 = !DILocation(line: 2179, column: 3, scope: !9686)
!9691 = !DILocation(line: 2180, column: 1, scope: !9686)
!9692 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9621, file: !9621, line: 2164, type: !9652, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9693)
!9693 = !{!9694, !9695}
!9694 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9692, file: !9621, line: 2164, type: !1424)
!9695 = !DILocalVariable(name: "val", scope: !9696, file: !9621, line: 2166, type: !162)
!9696 = distinct !DILexicalBlock(scope: !9692, file: !9621, line: 2166, column: 3)
!9697 = !DILocation(line: 0, scope: !9692)
!9698 = !DILocation(line: 2166, column: 3, scope: !9696)
!9699 = !DILocation(line: 0, scope: !9661, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 2166, column: 3, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9696, file: !9621, line: 2166, column: 3)
!9702 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9700)
!9703 = !DILocation(line: 2166, column: 3, scope: !9701)
!9704 = !DILocation(line: 0, scope: !9696)
!9705 = !DILocation(line: 0, scope: !9674, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 2166, column: 3, scope: !9696)
!9707 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9706)
!9708 = distinct !{!9708, !9698, !9698}
!9709 = !DILocation(line: 2167, column: 1, scope: !9692)
!9710 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9621, file: !9621, line: 2096, type: !9652, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9711)
!9711 = !{!9712, !9713}
!9712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9710, file: !9621, line: 2096, type: !1424)
!9713 = !DILocalVariable(name: "val", scope: !9714, file: !9621, line: 2098, type: !162)
!9714 = distinct !DILexicalBlock(scope: !9710, file: !9621, line: 2098, column: 3)
!9715 = !DILocation(line: 0, scope: !9710)
!9716 = !DILocation(line: 2098, column: 3, scope: !9714)
!9717 = !DILocation(line: 0, scope: !9661, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 2098, column: 3, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9714, file: !9621, line: 2098, column: 3)
!9720 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9718)
!9721 = !DILocation(line: 2098, column: 3, scope: !9719)
!9722 = !DILocation(line: 0, scope: !9714)
!9723 = !DILocation(line: 0, scope: !9674, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 2098, column: 3, scope: !9714)
!9725 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9724)
!9726 = distinct !{!9726, !9716, !9716}
!9727 = !DILocation(line: 2099, column: 1, scope: !9710)
!9728 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9621, file: !9621, line: 2081, type: !9652, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9729)
!9729 = !{!9730}
!9730 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9728, file: !9621, line: 2081, type: !1424)
!9731 = !DILocation(line: 0, scope: !9728)
!9732 = !DILocation(line: 2083, column: 3, scope: !9728)
!9733 = !DILocation(line: 2084, column: 1, scope: !9728)
!9734 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9621, file: !9621, line: 2068, type: !9652, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9735)
!9735 = !{!9736, !9737}
!9736 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9734, file: !9621, line: 2068, type: !1424)
!9737 = !DILocalVariable(name: "val", scope: !9738, file: !9621, line: 2070, type: !162)
!9738 = distinct !DILexicalBlock(scope: !9734, file: !9621, line: 2070, column: 3)
!9739 = !DILocation(line: 0, scope: !9734)
!9740 = !DILocation(line: 2070, column: 3, scope: !9738)
!9741 = !DILocation(line: 0, scope: !9661, inlinedAt: !9742)
!9742 = distinct !DILocation(line: 2070, column: 3, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9738, file: !9621, line: 2070, column: 3)
!9744 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9742)
!9745 = !DILocation(line: 2070, column: 3, scope: !9743)
!9746 = !DILocation(line: 0, scope: !9738)
!9747 = !DILocation(line: 0, scope: !9674, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 2070, column: 3, scope: !9738)
!9749 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9748)
!9750 = distinct !{!9750, !9740, !9740}
!9751 = !DILocation(line: 2071, column: 1, scope: !9734)
!9752 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9621, file: !9621, line: 2131, type: !9652, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9753)
!9753 = !{!9754, !9755}
!9754 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9752, file: !9621, line: 2131, type: !1424)
!9755 = !DILocalVariable(name: "val", scope: !9756, file: !9621, line: 2133, type: !162)
!9756 = distinct !DILexicalBlock(scope: !9752, file: !9621, line: 2133, column: 3)
!9757 = !DILocation(line: 0, scope: !9752)
!9758 = !DILocation(line: 2133, column: 3, scope: !9756)
!9759 = !DILocation(line: 0, scope: !9661, inlinedAt: !9760)
!9760 = distinct !DILocation(line: 2133, column: 3, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !9621, line: 2133, column: 3)
!9762 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9760)
!9763 = !DILocation(line: 2133, column: 3, scope: !9761)
!9764 = !DILocation(line: 0, scope: !9756)
!9765 = !DILocation(line: 0, scope: !9674, inlinedAt: !9766)
!9766 = distinct !DILocation(line: 2133, column: 3, scope: !9756)
!9767 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9766)
!9768 = distinct !{!9768, !9758, !9758}
!9769 = !DILocation(line: 2134, column: 1, scope: !9752)
!9770 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9621, file: !9621, line: 2035, type: !9652, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9771)
!9771 = !{!9772, !9773}
!9772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9770, file: !9621, line: 2035, type: !1424)
!9773 = !DILocalVariable(name: "val", scope: !9774, file: !9621, line: 2037, type: !162)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !9621, line: 2037, column: 3)
!9775 = !DILocation(line: 0, scope: !9770)
!9776 = !DILocation(line: 2037, column: 3, scope: !9774)
!9777 = !DILocation(line: 0, scope: !9661, inlinedAt: !9778)
!9778 = distinct !DILocation(line: 2037, column: 3, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9774, file: !9621, line: 2037, column: 3)
!9780 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9778)
!9781 = !DILocation(line: 2037, column: 3, scope: !9779)
!9782 = !DILocation(line: 0, scope: !9774)
!9783 = !DILocation(line: 0, scope: !9674, inlinedAt: !9784)
!9784 = distinct !DILocation(line: 2037, column: 3, scope: !9774)
!9785 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9784)
!9786 = distinct !{!9786, !9776, !9776}
!9787 = !DILocation(line: 2038, column: 1, scope: !9770)
!9788 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9621, file: !9621, line: 1814, type: !9622, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9789)
!9789 = !{!9790}
!9790 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9788, file: !9621, line: 1814, type: !1424)
!9791 = !DILocation(line: 0, scope: !9788)
!9792 = !DILocation(line: 1816, column: 11, scope: !9788)
!9793 = !DILocation(line: 1816, column: 46, scope: !9788)
!9794 = !DILocation(line: 1816, column: 3, scope: !9788)
!9795 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9621, file: !9621, line: 2142, type: !9652, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9796)
!9796 = !{!9797, !9798}
!9797 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9795, file: !9621, line: 2142, type: !1424)
!9798 = !DILocalVariable(name: "val", scope: !9799, file: !9621, line: 2144, type: !162)
!9799 = distinct !DILexicalBlock(scope: !9795, file: !9621, line: 2144, column: 3)
!9800 = !DILocation(line: 0, scope: !9795)
!9801 = !DILocation(line: 2144, column: 3, scope: !9799)
!9802 = !DILocation(line: 0, scope: !9661, inlinedAt: !9803)
!9803 = distinct !DILocation(line: 2144, column: 3, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9799, file: !9621, line: 2144, column: 3)
!9805 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9803)
!9806 = !DILocation(line: 2144, column: 3, scope: !9804)
!9807 = !DILocation(line: 0, scope: !9799)
!9808 = !DILocation(line: 0, scope: !9674, inlinedAt: !9809)
!9809 = distinct !DILocation(line: 2144, column: 3, scope: !9799)
!9810 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9809)
!9811 = distinct !{!9811, !9801, !9801}
!9812 = !DILocation(line: 2145, column: 1, scope: !9795)
!9813 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9621, file: !9621, line: 2046, type: !9652, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9814)
!9814 = !{!9815, !9816}
!9815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9813, file: !9621, line: 2046, type: !1424)
!9816 = !DILocalVariable(name: "val", scope: !9817, file: !9621, line: 2048, type: !162)
!9817 = distinct !DILexicalBlock(scope: !9813, file: !9621, line: 2048, column: 3)
!9818 = !DILocation(line: 0, scope: !9813)
!9819 = !DILocation(line: 2048, column: 3, scope: !9817)
!9820 = !DILocation(line: 0, scope: !9661, inlinedAt: !9821)
!9821 = distinct !DILocation(line: 2048, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9817, file: !9621, line: 2048, column: 3)
!9823 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !9821)
!9824 = !DILocation(line: 2048, column: 3, scope: !9822)
!9825 = !DILocation(line: 0, scope: !9817)
!9826 = !DILocation(line: 0, scope: !9674, inlinedAt: !9827)
!9827 = distinct !DILocation(line: 2048, column: 3, scope: !9817)
!9828 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !9827)
!9829 = distinct !{!9829, !9819, !9819}
!9830 = !DILocation(line: 2049, column: 1, scope: !9813)
!9831 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9621, file: !9621, line: 2403, type: !9832, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9834)
!9832 = !DISubroutineType(types: !9833)
!9833 = !{!133, !1424}
!9834 = !{!9835}
!9835 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9831, file: !9621, line: 2403, type: !1424)
!9836 = !DILocation(line: 0, scope: !9831)
!9837 = !DILocation(line: 2405, column: 20, scope: !9831)
!9838 = !DILocation(line: 2405, column: 10, scope: !9831)
!9839 = !DILocation(line: 2405, column: 3, scope: !9831)
!9840 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9621, file: !9621, line: 1770, type: !9622, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9841)
!9841 = !{!9842}
!9842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9840, file: !9621, line: 1770, type: !1424)
!9843 = !DILocation(line: 0, scope: !9840)
!9844 = !DILocation(line: 1772, column: 11, scope: !9840)
!9845 = !DILocation(line: 1772, column: 46, scope: !9840)
!9846 = !DILocation(line: 1772, column: 3, scope: !9840)
!9847 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9621, file: !9621, line: 1934, type: !9652, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9848)
!9848 = !{!9849, !9850}
!9849 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9847, file: !9621, line: 1934, type: !1424)
!9850 = !DILocalVariable(name: "tmpreg", scope: !9847, file: !9621, line: 1936, type: !283)
!9851 = !DILocation(line: 0, scope: !9847)
!9852 = !DILocation(line: 1936, column: 3, scope: !9847)
!9853 = !DILocation(line: 1936, column: 17, scope: !9847)
!9854 = !DILocation(line: 1937, column: 20, scope: !9847)
!9855 = !DILocation(line: 1937, column: 10, scope: !9847)
!9856 = !DILocation(line: 1938, column: 10, scope: !9847)
!9857 = !DILocation(line: 1939, column: 20, scope: !9847)
!9858 = !DILocation(line: 1939, column: 10, scope: !9847)
!9859 = !DILocation(line: 1940, column: 10, scope: !9847)
!9860 = !DILocation(line: 1941, column: 1, scope: !9847)
!9861 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9621, file: !9621, line: 2426, type: !9862, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9864)
!9862 = !DISubroutineType(types: !9863)
!9863 = !{null, !1424, !133}
!9864 = !{!9865, !9866}
!9865 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9861, file: !9621, line: 2426, type: !1424)
!9866 = !DILocalVariable(name: "Value", arg: 2, scope: !9861, file: !9621, line: 2426, type: !133)
!9867 = !DILocation(line: 0, scope: !9861)
!9868 = !DILocation(line: 2428, column: 16, scope: !9861)
!9869 = !DILocation(line: 2428, column: 11, scope: !9861)
!9870 = !DILocation(line: 2428, column: 14, scope: !9861)
!9871 = !DILocation(line: 2429, column: 1, scope: !9861)
!9872 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1480, file: !1480, line: 205, type: !9873, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9875)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{!162, !1353}
!9875 = !{!9876, !9877}
!9876 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1480, line: 205, type: !1353)
!9877 = !DILocalVariable(name: "config", scope: !9872, file: !1480, line: 207, type: !9185)
!9878 = !DILocation(line: 0, scope: !9872)
!9879 = !DILocation(line: 207, column: 48, scope: !9872)
!9880 = !DILocation(line: 209, column: 36, scope: !9872)
!9881 = !DILocation(line: 209, column: 9, scope: !9872)
!9882 = !DILocation(line: 209, column: 2, scope: !9872)
!9883 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1480, file: !1480, line: 270, type: !9884, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9886)
!9884 = !DISubroutineType(types: !9885)
!9885 = !{!1319, !162}
!9886 = !{!9887}
!9887 = !DILocalVariable(name: "parity", arg: 1, scope: !9883, file: !1480, line: 270, type: !162)
!9888 = !DILocation(line: 0, scope: !9883)
!9889 = !DILocation(line: 272, column: 2, scope: !9883)
!9890 = !DILocation(line: 281, column: 1, scope: !9883)
!9891 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1480, file: !1480, line: 220, type: !9873, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9892)
!9892 = !{!9893, !9894}
!9893 = !DILocalVariable(name: "dev", arg: 1, scope: !9891, file: !1480, line: 220, type: !1353)
!9894 = !DILocalVariable(name: "config", scope: !9891, file: !1480, line: 222, type: !9185)
!9895 = !DILocation(line: 0, scope: !9891)
!9896 = !DILocation(line: 222, column: 48, scope: !9891)
!9897 = !DILocation(line: 224, column: 44, scope: !9891)
!9898 = !DILocation(line: 224, column: 9, scope: !9891)
!9899 = !DILocation(line: 224, column: 2, scope: !9891)
!9900 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1480, file: !1480, line: 304, type: !9901, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9903)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!1333, !162}
!9903 = !{!9904}
!9904 = !DILocalVariable(name: "sb", arg: 1, scope: !9900, file: !1480, line: 304, type: !162)
!9905 = !DILocation(line: 0, scope: !9900)
!9906 = !DILocation(line: 306, column: 2, scope: !9900)
!9907 = !DILocation(line: 0, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9900, file: !1480, line: 306, column: 14)
!9909 = !DILocation(line: 323, column: 1, scope: !9900)
!9910 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1480, file: !1480, line: 235, type: !9873, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9911)
!9911 = !{!9912, !9913}
!9912 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1480, line: 235, type: !1353)
!9913 = !DILocalVariable(name: "config", scope: !9910, file: !1480, line: 237, type: !9185)
!9914 = !DILocation(line: 0, scope: !9910)
!9915 = !DILocation(line: 237, column: 48, scope: !9910)
!9916 = !DILocation(line: 239, column: 39, scope: !9910)
!9917 = !DILocation(line: 239, column: 9, scope: !9910)
!9918 = !DILocation(line: 239, column: 2, scope: !9910)
!9919 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1480, file: !1480, line: 355, type: !9920, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9922)
!9920 = !DISubroutineType(types: !9921)
!9921 = !{!1326, !162, !162}
!9922 = !{!9923, !9924}
!9923 = !DILocalVariable(name: "db", arg: 1, scope: !9919, file: !1480, line: 355, type: !162)
!9924 = !DILocalVariable(name: "p", arg: 2, scope: !9919, file: !1480, line: 356, type: !162)
!9925 = !DILocation(line: 0, scope: !9919)
!9926 = !DILocation(line: 358, column: 2, scope: !9919)
!9927 = !DILocation(line: 384, column: 1, scope: !9919)
!9928 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1480, file: !1480, line: 250, type: !9873, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9929)
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "dev", arg: 1, scope: !9928, file: !1480, line: 250, type: !1353)
!9931 = !DILocalVariable(name: "config", scope: !9928, file: !1480, line: 252, type: !9185)
!9932 = !DILocation(line: 0, scope: !9928)
!9933 = !DILocation(line: 252, column: 48, scope: !9928)
!9934 = !DILocation(line: 254, column: 40, scope: !9928)
!9935 = !DILocation(line: 254, column: 9, scope: !9928)
!9936 = !DILocation(line: 254, column: 2, scope: !9928)
!9937 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1480, file: !1480, line: 409, type: !9938, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9940)
!9938 = !DISubroutineType(types: !9939)
!9939 = !{!1339, !162}
!9940 = !{!9941}
!9941 = !DILocalVariable(name: "fc", arg: 1, scope: !9937, file: !1480, line: 409, type: !162)
!9942 = !DILocation(line: 0, scope: !9937)
!9943 = !DILocation(line: 411, column: 9, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9937, file: !1480, line: 411, column: 6)
!9945 = !DILocation(line: 416, column: 1, scope: !9937)
!9946 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9621, file: !9621, line: 967, type: !9622, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9947)
!9947 = !{!9948}
!9948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9946, file: !9621, line: 967, type: !1424)
!9949 = !DILocation(line: 0, scope: !9946)
!9950 = !DILocation(line: 969, column: 21, scope: !9946)
!9951 = !DILocation(line: 969, column: 3, scope: !9946)
!9952 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9621, file: !9621, line: 601, type: !9622, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9953)
!9953 = !{!9954}
!9954 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9952, file: !9621, line: 601, type: !1424)
!9955 = !DILocation(line: 0, scope: !9952)
!9956 = !DILocation(line: 603, column: 21, scope: !9952)
!9957 = !DILocation(line: 603, column: 3, scope: !9952)
!9958 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9621, file: !9621, line: 820, type: !9622, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9959)
!9959 = !{!9960}
!9960 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9958, file: !9621, line: 820, type: !1424)
!9961 = !DILocation(line: 0, scope: !9958)
!9962 = !DILocation(line: 822, column: 21, scope: !9958)
!9963 = !DILocation(line: 822, column: 3, scope: !9958)
!9964 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9621, file: !9621, line: 547, type: !9622, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9965)
!9965 = !{!9966}
!9966 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9964, file: !9621, line: 547, type: !1424)
!9967 = !DILocation(line: 0, scope: !9964)
!9968 = !DILocation(line: 549, column: 21, scope: !9964)
!9969 = !DILocation(line: 549, column: 3, scope: !9964)
!9970 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1480, file: !1480, line: 257, type: !9971, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9973)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!162, !1319}
!9973 = !{!9974}
!9974 = !DILocalVariable(name: "parity", arg: 1, scope: !9970, file: !1480, line: 257, type: !1319)
!9975 = !DILocation(line: 0, scope: !9970)
!9976 = !DILocation(line: 259, column: 2, scope: !9970)
!9977 = !DILocation(line: 268, column: 1, scope: !9970)
!9978 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1480, file: !1480, line: 283, type: !9979, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9981)
!9979 = !DISubroutineType(types: !9980)
!9980 = !{!162, !1333}
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "sb", arg: 1, scope: !9978, file: !1480, line: 283, type: !1333)
!9983 = !DILocation(line: 0, scope: !9978)
!9984 = !DILocation(line: 285, column: 2, scope: !9978)
!9985 = !DILocation(line: 0, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9978, file: !1480, line: 285, column: 14)
!9987 = !DILocation(line: 302, column: 1, scope: !9978)
!9988 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1480, file: !1480, line: 325, type: !9989, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!162, !1326, !1319}
!9991 = !{!9992, !9993}
!9992 = !DILocalVariable(name: "db", arg: 1, scope: !9988, file: !1480, line: 325, type: !1326)
!9993 = !DILocalVariable(name: "p", arg: 2, scope: !9988, file: !1480, line: 326, type: !1319)
!9994 = !DILocation(line: 0, scope: !9988)
!9995 = !DILocation(line: 328, column: 2, scope: !9988)
!9996 = !DILocation(line: 353, column: 1, scope: !9988)
!9997 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1480, file: !1480, line: 393, type: !9998, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10000)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{!162, !1339}
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "fc", arg: 1, scope: !9997, file: !1480, line: 393, type: !1339)
!10002 = !DILocation(line: 0, scope: !9997)
!10003 = !DILocation(line: 395, column: 9, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9997, file: !1480, line: 395, column: 6)
!10005 = !DILocation(line: 400, column: 1, scope: !9997)
!10006 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9621, file: !9621, line: 424, type: !9652, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10007)
!10007 = !{!10008}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10006, file: !9621, line: 424, type: !1424)
!10009 = !DILocation(line: 0, scope: !10006)
!10010 = !DILocation(line: 426, column: 3, scope: !10006)
!10011 = !DILocation(line: 427, column: 1, scope: !10006)
!10012 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1480, file: !1480, line: 197, type: !10013, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10015)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{null, !1353, !162}
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "dev", arg: 1, scope: !10012, file: !1480, line: 197, type: !1353)
!10017 = !DILocalVariable(name: "parity", arg: 2, scope: !10012, file: !1480, line: 198, type: !162)
!10018 = !DILocalVariable(name: "config", scope: !10012, file: !1480, line: 200, type: !9185)
!10019 = !DILocation(line: 0, scope: !10012)
!10020 = !DILocation(line: 200, column: 48, scope: !10012)
!10021 = !DILocation(line: 202, column: 29, scope: !10012)
!10022 = !DILocation(line: 202, column: 2, scope: !10012)
!10023 = !DILocation(line: 203, column: 1, scope: !10012)
!10024 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1480, file: !1480, line: 212, type: !10013, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10025)
!10025 = !{!10026, !10027, !10028}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1480, line: 212, type: !1353)
!10027 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10024, file: !1480, line: 213, type: !162)
!10028 = !DILocalVariable(name: "config", scope: !10024, file: !1480, line: 215, type: !9185)
!10029 = !DILocation(line: 0, scope: !10024)
!10030 = !DILocation(line: 215, column: 48, scope: !10024)
!10031 = !DILocation(line: 217, column: 37, scope: !10024)
!10032 = !DILocation(line: 217, column: 2, scope: !10024)
!10033 = !DILocation(line: 218, column: 1, scope: !10024)
!10034 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1480, file: !1480, line: 227, type: !10013, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10035)
!10035 = !{!10036, !10037, !10038}
!10036 = !DILocalVariable(name: "dev", arg: 1, scope: !10034, file: !1480, line: 227, type: !1353)
!10037 = !DILocalVariable(name: "databits", arg: 2, scope: !10034, file: !1480, line: 228, type: !162)
!10038 = !DILocalVariable(name: "config", scope: !10034, file: !1480, line: 230, type: !9185)
!10039 = !DILocation(line: 0, scope: !10034)
!10040 = !DILocation(line: 230, column: 48, scope: !10034)
!10041 = !DILocation(line: 232, column: 32, scope: !10034)
!10042 = !DILocation(line: 232, column: 2, scope: !10034)
!10043 = !DILocation(line: 233, column: 1, scope: !10034)
!10044 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1480, file: !1480, line: 242, type: !10013, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10045)
!10045 = !{!10046, !10047, !10048}
!10046 = !DILocalVariable(name: "dev", arg: 1, scope: !10044, file: !1480, line: 242, type: !1353)
!10047 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10044, file: !1480, line: 243, type: !162)
!10048 = !DILocalVariable(name: "config", scope: !10044, file: !1480, line: 245, type: !9185)
!10049 = !DILocation(line: 0, scope: !10044)
!10050 = !DILocation(line: 245, column: 48, scope: !10044)
!10051 = !DILocation(line: 247, column: 33, scope: !10044)
!10052 = !DILocation(line: 247, column: 2, scope: !10044)
!10053 = !DILocation(line: 248, column: 1, scope: !10044)
!10054 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1480, file: !1480, line: 107, type: !10013, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058, !10059, !10060}
!10056 = !DILocalVariable(name: "dev", arg: 1, scope: !10054, file: !1480, line: 107, type: !1353)
!10057 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10054, file: !1480, line: 107, type: !162)
!10058 = !DILocalVariable(name: "config", scope: !10054, file: !1480, line: 109, type: !9185)
!10059 = !DILocalVariable(name: "data", scope: !10054, file: !1480, line: 110, type: !9308)
!10060 = !DILocalVariable(name: "clock_rate", scope: !10054, file: !1480, line: 112, type: !162)
!10061 = !DILocation(line: 0, scope: !10054)
!10062 = !DILocation(line: 109, column: 48, scope: !10054)
!10063 = !DILocation(line: 110, column: 38, scope: !10054)
!10064 = !DILocation(line: 112, column: 2, scope: !10054)
!10065 = !DILocation(line: 123, column: 36, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !1480, line: 123, column: 7)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !1480, line: 122, column: 9)
!10068 = distinct !DILexicalBlock(scope: !10054, file: !1480, line: 115, column: 6)
!10069 = !DILocation(line: 124, column: 42, scope: !10066)
!10070 = !DILocation(line: 123, column: 7, scope: !10066)
!10071 = !DILocation(line: 125, column: 22, scope: !10066)
!10072 = !DILocation(line: 123, column: 7, scope: !10067)
!10073 = !DILocation(line: 176, column: 36, scope: !10054)
!10074 = !DILocation(line: 176, column: 3, scope: !10054)
!10075 = !DILocation(line: 179, column: 32, scope: !10054)
!10076 = !DILocation(line: 180, column: 10, scope: !10054)
!10077 = !DILocation(line: 179, column: 3, scope: !10054)
!10078 = !DILocation(line: 195, column: 1, scope: !10054)
!10079 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9621, file: !9621, line: 410, type: !9652, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10079, file: !9621, line: 410, type: !1424)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 412, column: 3, scope: !10079)
!10084 = !DILocation(line: 413, column: 1, scope: !10079)
!10085 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !780, file: !780, line: 216, type: !1457, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10086)
!10086 = !{!10087, !10088, !10089, !10090}
!10087 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !780, line: 216, type: !1353)
!10088 = !DILocalVariable(name: "sys", arg: 2, scope: !10085, file: !780, line: 217, type: !875)
!10089 = !DILocalVariable(name: "rate", arg: 3, scope: !10085, file: !780, line: 218, type: !831)
!10090 = !DILocalVariable(name: "api", scope: !10085, file: !780, line: 220, type: !1435)
!10091 = !DILocation(line: 0, scope: !10085)
!10092 = !DILocation(line: 221, column: 49, scope: !10085)
!10093 = !DILocation(line: 223, column: 11, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10085, file: !780, line: 223, column: 6)
!10095 = !DILocation(line: 223, column: 20, scope: !10094)
!10096 = !DILocation(line: 223, column: 6, scope: !10085)
!10097 = !DILocation(line: 227, column: 9, scope: !10085)
!10098 = !DILocation(line: 227, column: 2, scope: !10085)
!10099 = !DILocation(line: 228, column: 1, scope: !10085)
!10100 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9621, file: !9621, line: 615, type: !10101, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10103)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{null, !1424, !162}
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10100, file: !9621, line: 615, type: !1424)
!10105 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10100, file: !9621, line: 615, type: !162)
!10106 = !DILocation(line: 0, scope: !10100)
!10107 = !DILocation(line: 617, column: 3, scope: !10100)
!10108 = !DILocation(line: 618, column: 1, scope: !10100)
!10109 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9621, file: !9621, line: 1020, type: !10110, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{null, !1424, !162, !162, !162}
!10112 = !{!10113, !10114, !10115, !10116}
!10113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10109, file: !9621, line: 1020, type: !1424)
!10114 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10109, file: !9621, line: 1020, type: !162)
!10115 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10109, file: !9621, line: 1020, type: !162)
!10116 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10109, file: !9621, line: 1021, type: !162)
!10117 = !DILocation(line: 0, scope: !10109)
!10118 = !DILocation(line: 1029, column: 30, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9621, line: 1028, column: 3)
!10120 = distinct !DILexicalBlock(scope: !10109, file: !9621, line: 1023, column: 7)
!10121 = !DILocation(line: 1029, column: 19, scope: !10119)
!10122 = !DILocation(line: 1029, column: 13, scope: !10119)
!10123 = !DILocation(line: 1029, column: 17, scope: !10119)
!10124 = !DILocation(line: 1031, column: 1, scope: !10109)
!10125 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9621, file: !9621, line: 949, type: !10101, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10126)
!10126 = !{!10127, !10128}
!10127 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10125, file: !9621, line: 949, type: !1424)
!10128 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10125, file: !9621, line: 949, type: !162)
!10129 = !DILocation(line: 0, scope: !10125)
!10130 = !DILocation(line: 951, column: 3, scope: !10125)
!10131 = !DILocation(line: 952, column: 1, scope: !10125)
!10132 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9621, file: !9621, line: 588, type: !10101, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10133)
!10133 = !{!10134, !10135}
!10134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10132, file: !9621, line: 588, type: !1424)
!10135 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10132, file: !9621, line: 588, type: !162)
!10136 = !DILocation(line: 0, scope: !10132)
!10137 = !DILocation(line: 590, column: 3, scope: !10132)
!10138 = !DILocation(line: 591, column: 1, scope: !10132)
!10139 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9621, file: !9621, line: 805, type: !10101, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10140)
!10140 = !{!10141, !10142}
!10141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10139, file: !9621, line: 805, type: !1424)
!10142 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10139, file: !9621, line: 805, type: !162)
!10143 = !DILocation(line: 0, scope: !10139)
!10144 = !DILocation(line: 807, column: 3, scope: !10139)
!10145 = !DILocation(line: 808, column: 1, scope: !10139)
!10146 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9621, file: !9621, line: 532, type: !10101, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10147)
!10147 = !{!10148, !10149}
!10148 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10146, file: !9621, line: 532, type: !1424)
!10149 = !DILocalVariable(name: "Parity", arg: 2, scope: !10146, file: !9621, line: 532, type: !162)
!10150 = !DILocation(line: 0, scope: !10146)
!10151 = !DILocation(line: 534, column: 3, scope: !10146)
!10152 = !DILocation(line: 535, column: 1, scope: !10146)
!10153 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9621, file: !9621, line: 1737, type: !9622, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10154)
!10154 = !{!10155}
!10155 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10153, file: !9621, line: 1737, type: !1424)
!10156 = !DILocation(line: 0, scope: !10153)
!10157 = !DILocation(line: 1739, column: 11, scope: !10153)
!10158 = !DILocation(line: 1739, column: 3, scope: !10153)
!10159 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9621, file: !9621, line: 1748, type: !9622, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10160)
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10159, file: !9621, line: 1748, type: !1424)
!10162 = !DILocation(line: 0, scope: !10159)
!10163 = !DILocation(line: 1750, column: 11, scope: !10159)
!10164 = !DILocation(line: 1750, column: 45, scope: !10159)
!10165 = !DILocation(line: 1750, column: 3, scope: !10159)
!10166 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9621, file: !9621, line: 1827, type: !9622, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10167)
!10167 = !{!10168}
!10168 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10166, file: !9621, line: 1827, type: !1424)
!10169 = !DILocation(line: 0, scope: !10166)
!10170 = !DILocation(line: 1829, column: 11, scope: !10166)
!10171 = !DILocation(line: 1829, column: 46, scope: !10166)
!10172 = !DILocation(line: 1829, column: 3, scope: !10166)
!10173 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9621, file: !9621, line: 1992, type: !9652, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10174)
!10174 = !{!10175}
!10175 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10173, file: !9621, line: 1992, type: !1424)
!10176 = !DILocation(line: 0, scope: !10173)
!10177 = !DILocation(line: 1994, column: 3, scope: !10173)
!10178 = !DILocation(line: 1995, column: 1, scope: !10173)
!10179 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9621, file: !9621, line: 1877, type: !9652, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10180)
!10180 = !{!10181, !10182}
!10181 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10179, file: !9621, line: 1877, type: !1424)
!10182 = !DILocalVariable(name: "tmpreg", scope: !10179, file: !9621, line: 1879, type: !283)
!10183 = !DILocation(line: 0, scope: !10179)
!10184 = !DILocation(line: 1879, column: 3, scope: !10179)
!10185 = !DILocation(line: 1879, column: 17, scope: !10179)
!10186 = !DILocation(line: 1880, column: 20, scope: !10179)
!10187 = !DILocation(line: 1880, column: 10, scope: !10179)
!10188 = !DILocation(line: 1881, column: 10, scope: !10179)
!10189 = !DILocation(line: 1882, column: 20, scope: !10179)
!10190 = !DILocation(line: 1882, column: 10, scope: !10179)
!10191 = !DILocation(line: 1883, column: 10, scope: !10179)
!10192 = !DILocation(line: 1884, column: 1, scope: !10179)
!10193 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9621, file: !9621, line: 1896, type: !9652, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10194)
!10194 = !{!10195, !10196}
!10195 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10193, file: !9621, line: 1896, type: !1424)
!10196 = !DILocalVariable(name: "tmpreg", scope: !10193, file: !9621, line: 1898, type: !283)
!10197 = !DILocation(line: 0, scope: !10193)
!10198 = !DILocation(line: 1898, column: 3, scope: !10193)
!10199 = !DILocation(line: 1898, column: 17, scope: !10193)
!10200 = !DILocation(line: 1899, column: 20, scope: !10193)
!10201 = !DILocation(line: 1899, column: 10, scope: !10193)
!10202 = !DILocation(line: 1900, column: 10, scope: !10193)
!10203 = !DILocation(line: 1901, column: 20, scope: !10193)
!10204 = !DILocation(line: 1901, column: 10, scope: !10193)
!10205 = !DILocation(line: 1902, column: 10, scope: !10193)
!10206 = !DILocation(line: 1903, column: 1, scope: !10193)
!10207 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9621, file: !9621, line: 1915, type: !9652, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10207, file: !9621, line: 1915, type: !1424)
!10210 = !DILocalVariable(name: "tmpreg", scope: !10207, file: !9621, line: 1917, type: !283)
!10211 = !DILocation(line: 0, scope: !10207)
!10212 = !DILocation(line: 1917, column: 3, scope: !10207)
!10213 = !DILocation(line: 1917, column: 17, scope: !10207)
!10214 = !DILocation(line: 1918, column: 20, scope: !10207)
!10215 = !DILocation(line: 1918, column: 10, scope: !10207)
!10216 = !DILocation(line: 1919, column: 10, scope: !10207)
!10217 = !DILocation(line: 1920, column: 20, scope: !10207)
!10218 = !DILocation(line: 1920, column: 10, scope: !10207)
!10219 = !DILocation(line: 1921, column: 10, scope: !10207)
!10220 = !DILocation(line: 1922, column: 1, scope: !10207)
!10221 = !DILocation(line: 0, scope: !1550)
!10222 = !DILocation(line: 1914, column: 1, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !1550, file: !1480, line: 1914, column: 1)
!10224 = !DILocation(line: 1914, column: 1, scope: !1550)
!10225 = !DILocation(line: 0, scope: !1599)
!10226 = !DILocation(line: 1914, column: 1, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !1599, file: !1480, line: 1914, column: 1)
!10228 = !DILocation(line: 1914, column: 1, scope: !1599)
!10229 = !DILocation(line: 0, scope: !1616)
!10230 = !DILocation(line: 1914, column: 1, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !1616, file: !1480, line: 1914, column: 1)
!10232 = !DILocation(line: 1914, column: 1, scope: !1616)
!10233 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1480, file: !1480, line: 987, type: !1404, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10234)
!10234 = !{!10235, !10236}
!10235 = !DILocalVariable(name: "dev", arg: 1, scope: !10233, file: !1480, line: 987, type: !1353)
!10236 = !DILocalVariable(name: "data", scope: !10233, file: !1480, line: 989, type: !9308)
!10237 = !DILocation(line: 0, scope: !10233)
!10238 = !DILocation(line: 989, column: 38, scope: !10233)
!10239 = !DILocation(line: 1014, column: 12, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10233, file: !1480, line: 1014, column: 6)
!10241 = !DILocation(line: 1014, column: 6, scope: !10240)
!10242 = !DILocation(line: 1014, column: 6, scope: !10233)
!10243 = !DILocation(line: 1015, column: 28, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10240, file: !1480, line: 1014, column: 21)
!10245 = !DILocation(line: 1015, column: 3, scope: !10244)
!10246 = !DILocation(line: 1016, column: 2, scope: !10244)
!10247 = !DILocation(line: 1059, column: 1, scope: !10233)
!10248 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1480, file: !1480, line: 1583, type: !1374, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10249)
!10249 = !{!10250, !10251, !10252, !10253, !10254, !10255}
!10250 = !DILocalVariable(name: "dev", arg: 1, scope: !10248, file: !1480, line: 1583, type: !1353)
!10251 = !DILocalVariable(name: "config", scope: !10248, file: !1480, line: 1585, type: !9185)
!10252 = !DILocalVariable(name: "data", scope: !10248, file: !1480, line: 1586, type: !9308)
!10253 = !DILocalVariable(name: "ll_parity", scope: !10248, file: !1480, line: 1587, type: !162)
!10254 = !DILocalVariable(name: "ll_datawidth", scope: !10248, file: !1480, line: 1588, type: !162)
!10255 = !DILocalVariable(name: "err", scope: !10248, file: !1480, line: 1589, type: !107)
!10256 = !DILocation(line: 0, scope: !10248)
!10257 = !DILocation(line: 1585, column: 48, scope: !10248)
!10258 = !DILocation(line: 1586, column: 38, scope: !10248)
!10259 = !DILocation(line: 1591, column: 2, scope: !10248)
!10260 = !DILocation(line: 1593, column: 29, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1593, column: 6)
!10262 = !DILocation(line: 1593, column: 7, scope: !10261)
!10263 = !DILocation(line: 1593, column: 6, scope: !10248)
!10264 = !DILocation(line: 1599, column: 31, scope: !10248)
!10265 = !DILocation(line: 1599, column: 71, scope: !10248)
!10266 = !DILocation(line: 1599, column: 8, scope: !10248)
!10267 = !DILocation(line: 1600, column: 10, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1600, column: 6)
!10269 = !DILocation(line: 1600, column: 6, scope: !10248)
!10270 = !DILocation(line: 1616, column: 36, scope: !10248)
!10271 = !DILocation(line: 1616, column: 8, scope: !10248)
!10272 = !DILocation(line: 1617, column: 10, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1617, column: 6)
!10274 = !DILocation(line: 1617, column: 6, scope: !10248)
!10275 = !DILocation(line: 1621, column: 27, scope: !10248)
!10276 = !DILocation(line: 1621, column: 2, scope: !10248)
!10277 = !DILocation(line: 1624, column: 40, scope: !10248)
!10278 = !DILocation(line: 1624, column: 2, scope: !10248)
!10279 = !DILocation(line: 1630, column: 14, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1630, column: 6)
!10281 = !DILocation(line: 1630, column: 6, scope: !10248)
!10282 = !DILocation(line: 1638, column: 2, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !1480, line: 1634, column: 34)
!10284 = distinct !DILexicalBlock(scope: !10280, file: !1480, line: 1634, column: 13)
!10285 = !DILocation(line: 0, scope: !10280)
!10286 = !DILocation(line: 1649, column: 35, scope: !10248)
!10287 = !DILocation(line: 1649, column: 2, scope: !10248)
!10288 = !DILocation(line: 1654, column: 14, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1654, column: 6)
!10290 = !DILocation(line: 1654, column: 6, scope: !10248)
!10291 = !DILocation(line: 1655, column: 3, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !1480, line: 1654, column: 31)
!10293 = !DILocation(line: 1656, column: 2, scope: !10292)
!10294 = !DILocation(line: 1659, column: 37, scope: !10248)
!10295 = !DILocation(line: 1659, column: 2, scope: !10248)
!10296 = !DILocation(line: 1662, column: 14, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10248, file: !1480, line: 1662, column: 6)
!10298 = !DILocation(line: 1662, column: 6, scope: !10248)
!10299 = !DILocation(line: 1663, column: 37, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10297, file: !1480, line: 1662, column: 27)
!10301 = !DILocation(line: 1663, column: 3, scope: !10300)
!10302 = !DILocation(line: 1664, column: 2, scope: !10300)
!10303 = !DILocation(line: 1684, column: 26, scope: !10248)
!10304 = !DILocation(line: 1684, column: 2, scope: !10248)
!10305 = !DILocation(line: 1701, column: 10, scope: !10248)
!10306 = !DILocation(line: 1701, column: 2, scope: !10248)
!10307 = !DILocation(line: 1722, column: 2, scope: !10248)
!10308 = !DILocation(line: 1724, column: 1, scope: !10248)
!10309 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1480, file: !1480, line: 651, type: !1404, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10310)
!10310 = !{!10311, !10312, !10313}
!10311 = !DILocalVariable(name: "dev", arg: 1, scope: !10309, file: !1480, line: 651, type: !1353)
!10312 = !DILocalVariable(name: "data", scope: !10309, file: !1480, line: 653, type: !9308)
!10313 = !DILocalVariable(name: "clk", scope: !10309, file: !1480, line: 654, type: !10314)
!10314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!10315 = !DILocation(line: 0, scope: !10309)
!10316 = !DILocation(line: 653, column: 38, scope: !10309)
!10317 = !DILocation(line: 656, column: 8, scope: !10309)
!10318 = !DILocation(line: 656, column: 14, scope: !10309)
!10319 = !DILocation(line: 657, column: 1, scope: !10309)
!10320 = distinct !DISubprogram(name: "device_is_ready", scope: !3452, file: !3452, line: 47, type: !10321, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10323)
!10321 = !DISubroutineType(types: !10322)
!10322 = !{!136, !1353}
!10323 = !{!10324}
!10324 = !DILocalVariable(name: "dev", arg: 1, scope: !10320, file: !3452, line: 47, type: !1353)
!10325 = !DILocation(line: 0, scope: !10320)
!10326 = !DILocation(line: 55, column: 2, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10320, file: !3452, line: 55, column: 2)
!10328 = !{i64 2154446971}
!10329 = !DILocation(line: 56, column: 9, scope: !10320)
!10330 = !DILocation(line: 56, column: 2, scope: !10320)
!10331 = distinct !DISubprogram(name: "clock_control_on", scope: !780, file: !780, line: 123, type: !1442, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10332)
!10332 = !{!10333, !10334, !10335}
!10333 = !DILocalVariable(name: "dev", arg: 1, scope: !10331, file: !780, line: 123, type: !1353)
!10334 = !DILocalVariable(name: "sys", arg: 2, scope: !10331, file: !780, line: 124, type: !875)
!10335 = !DILocalVariable(name: "api", scope: !10331, file: !780, line: 126, type: !1435)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 127, column: 49, scope: !10331)
!10338 = !DILocation(line: 129, column: 14, scope: !10331)
!10339 = !DILocation(line: 129, column: 9, scope: !10331)
!10340 = !DILocation(line: 129, column: 2, scope: !10331)
!10341 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1523, file: !1523, line: 342, type: !10342, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10344)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!107, !1586, !133}
!10344 = !{!10345, !10346, !10347, !10348}
!10345 = !DILocalVariable(name: "config", arg: 1, scope: !10341, file: !1523, line: 342, type: !1586)
!10346 = !DILocalVariable(name: "id", arg: 2, scope: !10341, file: !1523, line: 343, type: !133)
!10347 = !DILocalVariable(name: "ret", scope: !10341, file: !1523, line: 345, type: !107)
!10348 = !DILocalVariable(name: "state", scope: !10341, file: !1523, line: 346, type: !1526)
!10349 = !DILocation(line: 0, scope: !10341)
!10350 = !DILocation(line: 346, column: 2, scope: !10341)
!10351 = !DILocation(line: 348, column: 8, scope: !10341)
!10352 = !DILocation(line: 349, column: 10, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10341, file: !1523, line: 349, column: 6)
!10354 = !DILocation(line: 349, column: 6, scope: !10341)
!10355 = !DILocation(line: 353, column: 44, scope: !10341)
!10356 = !DILocation(line: 353, column: 9, scope: !10341)
!10357 = !DILocation(line: 353, column: 2, scope: !10341)
!10358 = !DILocation(line: 354, column: 1, scope: !10341)
!10359 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9621, file: !9621, line: 497, type: !10101, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10360)
!10360 = !{!10361, !10362, !10363}
!10361 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10359, file: !9621, line: 497, type: !1424)
!10362 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10359, file: !9621, line: 497, type: !162)
!10363 = !DILocalVariable(name: "val", scope: !10364, file: !9621, line: 499, type: !162)
!10364 = distinct !DILexicalBlock(scope: !10359, file: !9621, line: 499, column: 3)
!10365 = !DILocation(line: 0, scope: !10359)
!10366 = !DILocation(line: 499, column: 3, scope: !10364)
!10367 = !DILocation(line: 0, scope: !9661, inlinedAt: !10368)
!10368 = distinct !DILocation(line: 499, column: 3, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10364, file: !9621, line: 499, column: 3)
!10370 = !DILocation(line: 480, column: 4, scope: !9661, inlinedAt: !10368)
!10371 = !DILocation(line: 499, column: 3, scope: !10369)
!10372 = !DILocation(line: 0, scope: !10364)
!10373 = !DILocation(line: 0, scope: !9674, inlinedAt: !10374)
!10374 = distinct !DILocation(line: 499, column: 3, scope: !10364)
!10375 = !DILocation(line: 531, column: 4, scope: !9674, inlinedAt: !10374)
!10376 = distinct !{!10376, !10366, !10366}
!10377 = !DILocation(line: 500, column: 1, scope: !10359)
!10378 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9621, file: !9621, line: 850, type: !10110, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10379)
!10379 = !{!10380, !10381, !10382, !10383}
!10380 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10378, file: !9621, line: 850, type: !1424)
!10381 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10378, file: !9621, line: 850, type: !162)
!10382 = !DILocalVariable(name: "Parity", arg: 3, scope: !10378, file: !9621, line: 850, type: !162)
!10383 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10378, file: !9621, line: 851, type: !162)
!10384 = !DILocation(line: 0, scope: !10378)
!10385 = !DILocation(line: 853, column: 3, scope: !10378)
!10386 = !DILocation(line: 854, column: 3, scope: !10378)
!10387 = !DILocation(line: 855, column: 1, scope: !10378)
!10388 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9621, file: !9621, line: 1337, type: !9652, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10389)
!10389 = !{!10390}
!10390 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10388, file: !9621, line: 1337, type: !1424)
!10391 = !DILocation(line: 0, scope: !10388)
!10392 = !DILocation(line: 1339, column: 3, scope: !10388)
!10393 = !DILocation(line: 1340, column: 1, scope: !10388)
!10394 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1523, file: !1523, line: 316, type: !10395, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!107, !1586, !1526}
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "config", arg: 1, scope: !10394, file: !1523, line: 317, type: !1586)
!10399 = !DILocalVariable(name: "state", arg: 2, scope: !10394, file: !1523, line: 318, type: !1526)
!10400 = !DILocalVariable(name: "reg", scope: !10394, file: !1523, line: 320, type: !22)
!10401 = !DILocation(line: 0, scope: !10394)
!10402 = !DILocation(line: 329, column: 39, scope: !10394)
!10403 = !DILocation(line: 329, column: 52, scope: !10394)
!10404 = !DILocation(line: 329, column: 9, scope: !10394)
!10405 = !DILocation(line: 329, column: 2, scope: !10394)
!10406 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10321, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10407)
!10407 = !{!10408}
!10408 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !120, line: 730, type: !1353)
!10409 = !DILocation(line: 0, scope: !10406)
!10410 = !DILocation(line: 732, column: 9, scope: !10406)
!10411 = !DILocation(line: 732, column: 2, scope: !10406)
!10412 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1701, file: !1701, line: 270, type: !1707, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10413)
!10413 = !{!10414}
!10414 = !DILocalVariable(name: "dev", arg: 1, scope: !10412, file: !1701, line: 270, type: !1709)
!10415 = !DILocation(line: 0, scope: !10412)
!10416 = !DILocation(line: 274, column: 2, scope: !10412)
!10417 = !DILocation(line: 275, column: 12, scope: !10412)
!10418 = !DILocation(line: 276, column: 15, scope: !10412)
!10419 = !DILocation(line: 277, column: 16, scope: !10412)
!10420 = !DILocation(line: 278, column: 15, scope: !10412)
!10421 = !DILocation(line: 279, column: 16, scope: !10412)
!10422 = !DILocation(line: 282, column: 2, scope: !10412)
!10423 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6151, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10424)
!10424 = !{!10425, !10426}
!10425 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10423, file: !497, line: 1814, type: !732)
!10426 = !DILocalVariable(name: "priority", arg: 2, scope: !10423, file: !497, line: 1814, type: !162)
!10427 = !DILocation(line: 0, scope: !10423)
!10428 = !DILocation(line: 1822, column: 46, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !497, line: 1821, column: 3)
!10430 = distinct !DILexicalBlock(scope: !10423, file: !497, line: 1816, column: 7)
!10431 = !DILocation(line: 1824, column: 1, scope: !10423)
!10432 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1701, file: !1701, line: 118, type: !6054, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10433)
!10433 = !{!10434, !10435}
!10434 = !DILocalVariable(name: "arg", arg: 1, scope: !10432, file: !1701, line: 118, type: !102)
!10435 = !DILocalVariable(name: "dticks", scope: !10432, file: !1701, line: 121, type: !162)
!10436 = !DILocation(line: 0, scope: !10432)
!10437 = !DILocation(line: 124, column: 2, scope: !10432)
!10438 = !DILocation(line: 129, column: 17, scope: !10432)
!10439 = !DILocation(line: 129, column: 14, scope: !10432)
!10440 = !DILocation(line: 130, column: 15, scope: !10432)
!10441 = !DILocation(line: 145, column: 27, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !1701, line: 132, column: 16)
!10443 = distinct !DILexicalBlock(scope: !10432, file: !1701, line: 132, column: 6)
!10444 = !DILocation(line: 145, column: 25, scope: !10442)
!10445 = !DILocation(line: 145, column: 45, scope: !10442)
!10446 = !DILocation(line: 146, column: 30, scope: !10442)
!10447 = !DILocation(line: 146, column: 20, scope: !10442)
!10448 = !DILocation(line: 147, column: 3, scope: !10442)
!10449 = !DILocation(line: 151, column: 2, scope: !10432)
!10450 = !DILocation(line: 152, column: 1, scope: !10432)
!10451 = distinct !DISubprogram(name: "elapsed", scope: !1701, file: !1701, line: 85, type: !6198, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10452)
!10452 = !{!10453, !10454, !10455}
!10453 = !DILocalVariable(name: "val1", scope: !10451, file: !1701, line: 87, type: !162)
!10454 = !DILocalVariable(name: "ctrl", scope: !10451, file: !1701, line: 88, type: !162)
!10455 = !DILocalVariable(name: "val2", scope: !10451, file: !1701, line: 89, type: !162)
!10456 = !DILocation(line: 87, column: 27, scope: !10451)
!10457 = !DILocation(line: 0, scope: !10451)
!10458 = !DILocation(line: 88, column: 27, scope: !10451)
!10459 = !DILocation(line: 89, column: 27, scope: !10451)
!10460 = !DILocation(line: 105, column: 12, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10451, file: !1701, line: 105, column: 6)
!10462 = !DILocation(line: 106, column: 6, scope: !10461)
!10463 = !DILocation(line: 107, column: 16, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10461, file: !1701, line: 106, column: 24)
!10465 = !DILocation(line: 111, column: 18, scope: !10464)
!10466 = !DILocation(line: 112, column: 2, scope: !10464)
!10467 = !DILocation(line: 114, column: 20, scope: !10451)
!10468 = !DILocation(line: 114, column: 30, scope: !10451)
!10469 = !DILocation(line: 114, column: 28, scope: !10451)
!10470 = !DILocation(line: 114, column: 2, scope: !10451)
!10471 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1701, file: !1701, line: 154, type: !10472, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10474)
!10472 = !DISubroutineType(types: !10473)
!10473 = !{null, !706, !136}
!10474 = !{!10475, !10476, !10477, !10478, !10479, !10480, !10481, !10486, !10487}
!10475 = !DILocalVariable(name: "ticks", arg: 1, scope: !10471, file: !1701, line: 154, type: !706)
!10476 = !DILocalVariable(name: "idle", arg: 2, scope: !10471, file: !1701, line: 154, type: !136)
!10477 = !DILocalVariable(name: "delay", scope: !10471, file: !1701, line: 169, type: !162)
!10478 = !DILocalVariable(name: "val1", scope: !10471, file: !1701, line: 170, type: !162)
!10479 = !DILocalVariable(name: "val2", scope: !10471, file: !1701, line: 170, type: !162)
!10480 = !DILocalVariable(name: "last_load_", scope: !10471, file: !1701, line: 171, type: !162)
!10481 = !DILocalVariable(name: "key", scope: !10471, file: !1701, line: 176, type: !10482)
!10482 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10483)
!10483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10484)
!10484 = !{!10485}
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10483, file: !249, line: 33, baseType: !107, size: 32)
!10486 = !DILocalVariable(name: "pending", scope: !10471, file: !1701, line: 178, type: !162)
!10487 = !DILocalVariable(name: "unannounced", scope: !10471, file: !1701, line: 185, type: !162)
!10488 = !DILocation(line: 0, scope: !10471)
!10489 = !DILocation(line: 162, column: 49, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10471, file: !1701, line: 162, column: 6)
!10491 = !DILocation(line: 163, column: 17, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10490, file: !1701, line: 162, column: 78)
!10493 = !DILocation(line: 164, column: 13, scope: !10492)
!10494 = !DILocation(line: 165, column: 3, scope: !10492)
!10495 = !DILocation(line: 171, column: 24, scope: !10471)
!10496 = !DILocation(line: 173, column: 10, scope: !10471)
!10497 = !DILocation(line: 174, column: 10, scope: !10471)
!10498 = !DILocalVariable(name: "l", arg: 1, scope: !10499, file: !249, line: 136, type: !10502)
!10499 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10500, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10503)
!10500 = !DISubroutineType(types: !10501)
!10501 = !{!10482, !10502}
!10502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!10503 = !{!10498, !10504}
!10504 = !DILocalVariable(name: "k", scope: !10499, file: !249, line: 139, type: !10482)
!10505 = !DILocation(line: 0, scope: !10499, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 176, column: 25, scope: !10471)
!10507 = !DILocation(line: 55, column: 2, scope: !10508, inlinedAt: !10512)
!10508 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10509)
!10509 = !{!10510, !10511}
!10510 = !DILocalVariable(name: "key", scope: !10508, file: !5943, line: 44, type: !32)
!10511 = !DILocalVariable(name: "tmp", scope: !10508, file: !5943, line: 53, type: !32)
!10512 = distinct !DILocation(line: 145, column: 10, scope: !10499, inlinedAt: !10506)
!10513 = !{i64 2022924}
!10514 = !DILocation(line: 0, scope: !10508, inlinedAt: !10512)
!10515 = !DILocation(line: 178, column: 21, scope: !10471)
!10516 = !DILocation(line: 180, column: 18, scope: !10471)
!10517 = !DILocation(line: 182, column: 14, scope: !10471)
!10518 = !DILocation(line: 183, column: 15, scope: !10471)
!10519 = !DILocation(line: 185, column: 39, scope: !10471)
!10520 = !DILocation(line: 185, column: 37, scope: !10471)
!10521 = !DILocation(line: 187, column: 27, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10471, file: !1701, line: 187, column: 6)
!10523 = !DILocation(line: 187, column: 6, scope: !10471)
!10524 = !DILocation(line: 202, column: 27, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !1701, line: 195, column: 9)
!10526 = !DILocation(line: 202, column: 48, scope: !10525)
!10527 = !DILocation(line: 203, column: 9, scope: !10525)
!10528 = !DILocation(line: 204, column: 11, scope: !10525)
!10529 = !DILocation(line: 205, column: 13, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10525, file: !1701, line: 205, column: 7)
!10531 = !DILocation(line: 205, column: 7, scope: !10525)
!10532 = !DILocation(line: 0, scope: !10522)
!10533 = !DILocation(line: 212, column: 18, scope: !10471)
!10534 = !DILocation(line: 214, column: 28, scope: !10471)
!10535 = !DILocation(line: 214, column: 16, scope: !10471)
!10536 = !DILocation(line: 215, column: 15, scope: !10471)
!10537 = !DILocation(line: 227, column: 11, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10471, file: !1701, line: 227, column: 6)
!10539 = !DILocation(line: 227, column: 6, scope: !10471)
!10540 = !DILocation(line: 228, column: 15, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10538, file: !1701, line: 227, column: 19)
!10542 = !DILocation(line: 228, column: 38, scope: !10541)
!10543 = !DILocation(line: 228, column: 24, scope: !10541)
!10544 = !DILocation(line: 229, column: 2, scope: !10541)
!10545 = !DILocation(line: 230, column: 24, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10538, file: !1701, line: 229, column: 9)
!10547 = !DILocation(line: 230, column: 15, scope: !10546)
!10548 = !DILocation(line: 0, scope: !10538)
!10549 = !DILocalVariable(name: "key", arg: 2, scope: !10550, file: !249, line: 190, type: !10482)
!10550 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10551, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10553)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{null, !10502, !10482}
!10553 = !{!10554, !10549}
!10554 = !DILocalVariable(name: "l", arg: 1, scope: !10550, file: !249, line: 189, type: !10502)
!10555 = !DILocation(line: 0, scope: !10550, inlinedAt: !10556)
!10556 = distinct !DILocation(line: 232, column: 2, scope: !10471)
!10557 = !DILocalVariable(name: "key", arg: 1, scope: !10558, file: !5943, line: 84, type: !32)
!10558 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10559)
!10559 = !{!10557}
!10560 = !DILocation(line: 0, scope: !10558, inlinedAt: !10561)
!10561 = distinct !DILocation(line: 215, column: 2, scope: !10550, inlinedAt: !10556)
!10562 = !DILocation(line: 95, column: 2, scope: !10558, inlinedAt: !10561)
!10563 = !{i64 2023741}
!10564 = !DILocation(line: 234, column: 1, scope: !10471)
!10565 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1701, file: !1701, line: 236, type: !6198, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10566)
!10566 = !{!10567, !10568}
!10567 = !DILocalVariable(name: "key", scope: !10565, file: !1701, line: 242, type: !10482)
!10568 = !DILocalVariable(name: "cyc", scope: !10565, file: !1701, line: 243, type: !162)
!10569 = !DILocation(line: 0, scope: !10499, inlinedAt: !10570)
!10570 = distinct !DILocation(line: 242, column: 25, scope: !10565)
!10571 = !DILocation(line: 55, column: 2, scope: !10508, inlinedAt: !10572)
!10572 = distinct !DILocation(line: 145, column: 10, scope: !10499, inlinedAt: !10570)
!10573 = !DILocation(line: 0, scope: !10508, inlinedAt: !10572)
!10574 = !DILocation(line: 0, scope: !10565)
!10575 = !DILocation(line: 243, column: 17, scope: !10565)
!10576 = !DILocation(line: 243, column: 29, scope: !10565)
!10577 = !DILocation(line: 243, column: 27, scope: !10565)
!10578 = !DILocation(line: 243, column: 43, scope: !10565)
!10579 = !DILocation(line: 243, column: 41, scope: !10565)
!10580 = !DILocation(line: 0, scope: !10550, inlinedAt: !10581)
!10581 = distinct !DILocation(line: 245, column: 2, scope: !10565)
!10582 = !DILocation(line: 0, scope: !10558, inlinedAt: !10583)
!10583 = distinct !DILocation(line: 215, column: 2, scope: !10550, inlinedAt: !10581)
!10584 = !DILocation(line: 95, column: 2, scope: !10558, inlinedAt: !10583)
!10585 = !DILocation(line: 246, column: 13, scope: !10565)
!10586 = !DILocation(line: 246, column: 2, scope: !10565)
!10587 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1701, file: !1701, line: 249, type: !6198, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !10588)
!10588 = !{!10589, !10590}
!10589 = !DILocalVariable(name: "key", scope: !10587, file: !1701, line: 251, type: !10482)
!10590 = !DILocalVariable(name: "ret", scope: !10587, file: !1701, line: 252, type: !162)
!10591 = !DILocation(line: 0, scope: !10499, inlinedAt: !10592)
!10592 = distinct !DILocation(line: 251, column: 25, scope: !10587)
!10593 = !DILocation(line: 55, column: 2, scope: !10508, inlinedAt: !10594)
!10594 = distinct !DILocation(line: 145, column: 10, scope: !10499, inlinedAt: !10592)
!10595 = !DILocation(line: 0, scope: !10508, inlinedAt: !10594)
!10596 = !DILocation(line: 0, scope: !10587)
!10597 = !DILocation(line: 252, column: 17, scope: !10587)
!10598 = !DILocation(line: 252, column: 29, scope: !10587)
!10599 = !DILocation(line: 252, column: 27, scope: !10587)
!10600 = !DILocation(line: 0, scope: !10550, inlinedAt: !10601)
!10601 = distinct !DILocation(line: 254, column: 2, scope: !10587)
!10602 = !DILocation(line: 0, scope: !10558, inlinedAt: !10603)
!10603 = distinct !DILocation(line: 215, column: 2, scope: !10550, inlinedAt: !10601)
!10604 = !DILocation(line: 95, column: 2, scope: !10558, inlinedAt: !10603)
!10605 = !DILocation(line: 255, column: 2, scope: !10587)
!10606 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1701, file: !1701, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !250)
!10607 = !DILocation(line: 260, column: 6, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10606, file: !1701, line: 260, column: 6)
!10609 = !DILocation(line: 260, column: 16, scope: !10608)
!10610 = !DILocation(line: 260, column: 6, scope: !10606)
!10611 = !DILocation(line: 261, column: 17, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10608, file: !1701, line: 260, column: 34)
!10613 = !DILocation(line: 262, column: 2, scope: !10612)
!10614 = !DILocation(line: 263, column: 1, scope: !10606)
!10615 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1701, file: !1701, line: 265, type: !3169, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1623, retainedNodes: !250)
!10616 = !DILocation(line: 267, column: 16, scope: !10615)
!10617 = !DILocation(line: 268, column: 1, scope: !10615)
!10618 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10619, file: !10619, line: 9, type: !10620, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !10643)
!10619 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!107, !10622, !133, !10642}
!10622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10623, size: 32)
!10623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10624)
!10624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1523, line: 60, size: 64, elements: !10625)
!10625 = !{!10626, !10641}
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10624, file: !1523, line: 69, baseType: !10627, size: 32)
!10627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10628, size: 32)
!10628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10629)
!10629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1523, line: 50, size: 64, elements: !10630)
!10630 = !{!10631, !10639, !10640}
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10629, file: !1523, line: 52, baseType: !10632, size: 32)
!10632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10633, size: 32)
!10633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10634)
!10634 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1534, line: 37, baseType: !10635)
!10635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1534, line: 32, size: 64, elements: !10636)
!10636 = !{!10637, !10638}
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10635, file: !1534, line: 34, baseType: !162, size: 32)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10635, file: !1534, line: 36, baseType: !162, size: 32, offset: 32)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10629, file: !1523, line: 54, baseType: !133, size: 8, offset: 32)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10629, file: !1523, line: 56, baseType: !133, size: 8, offset: 40)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10624, file: !1523, line: 71, baseType: !133, size: 8, offset: 32)
!10642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10627, size: 32)
!10643 = !{!10644, !10645, !10646}
!10644 = !DILocalVariable(name: "config", arg: 1, scope: !10618, file: !10619, line: 9, type: !10622)
!10645 = !DILocalVariable(name: "id", arg: 2, scope: !10618, file: !10619, line: 9, type: !133)
!10646 = !DILocalVariable(name: "state", arg: 3, scope: !10618, file: !10619, line: 10, type: !10642)
!10647 = !DILocation(line: 0, scope: !10618)
!10648 = !DILocation(line: 12, column: 20, scope: !10618)
!10649 = !DILocation(line: 13, column: 27, scope: !10618)
!10650 = !DILocation(line: 13, column: 42, scope: !10618)
!10651 = !DILocation(line: 13, column: 19, scope: !10618)
!10652 = !DILocation(line: 13, column: 16, scope: !10618)
!10653 = !DILocation(line: 13, column: 2, scope: !10618)
!10654 = distinct !{!10654, !10653, !10655}
!10655 = !DILocation(line: 19, column: 2, scope: !10618)
!10656 = !DILocation(line: 14, column: 23, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10619, line: 14, column: 7)
!10658 = distinct !DILexicalBlock(scope: !10618, file: !10619, line: 13, column: 54)
!10659 = !DILocation(line: 14, column: 10, scope: !10657)
!10660 = !DILocation(line: 18, column: 11, scope: !10658)
!10661 = !DILocation(line: 14, column: 7, scope: !10658)
!10662 = !DILocation(line: 22, column: 1, scope: !10618)
!10663 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1818, file: !1818, line: 193, type: !10664, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !10673)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!107, !10666, !133, !22}
!10666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10667, size: 32)
!10667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10668)
!10668 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1534, line: 37, baseType: !10669)
!10669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1534, line: 32, size: 64, elements: !10670)
!10670 = !{!10671, !10672}
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10669, file: !1534, line: 34, baseType: !162, size: 32)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10669, file: !1534, line: 36, baseType: !162, size: 32, offset: 32)
!10673 = !{!10674, !10675, !10676, !10677, !10678, !10679, !10680, !10681, !10683}
!10674 = !DILocalVariable(name: "pins", arg: 1, scope: !10663, file: !1818, line: 193, type: !10666)
!10675 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10663, file: !1818, line: 193, type: !133)
!10676 = !DILocalVariable(name: "reg", arg: 3, scope: !10663, file: !1818, line: 194, type: !22)
!10677 = !DILocalVariable(name: "pin", scope: !10663, file: !1818, line: 196, type: !162)
!10678 = !DILocalVariable(name: "mux", scope: !10663, file: !1818, line: 196, type: !162)
!10679 = !DILocalVariable(name: "pin_cgf", scope: !10663, file: !1818, line: 197, type: !162)
!10680 = !DILocalVariable(name: "ret", scope: !10663, file: !1818, line: 198, type: !107)
!10681 = !DILocalVariable(name: "i", scope: !10682, file: !1818, line: 209, type: !133)
!10682 = distinct !DILexicalBlock(scope: !10663, file: !1818, line: 209, column: 2)
!10683 = !DILocalVariable(name: "gpio_out", scope: !10684, file: !1818, line: 239, type: !162)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !1818, line: 238, column: 55)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !1818, line: 238, column: 14)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !1818, line: 236, column: 14)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1818, line: 234, column: 7)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !1818, line: 209, column: 41)
!10689 = distinct !DILexicalBlock(scope: !10682, file: !1818, line: 209, column: 2)
!10690 = !DILocation(line: 0, scope: !10663)
!10691 = !DILocation(line: 0, scope: !10682)
!10692 = !DILocation(line: 209, column: 25, scope: !10689)
!10693 = !DILocation(line: 209, column: 2, scope: !10682)
!10694 = distinct !{!10694, !10693, !10695}
!10695 = !DILocation(line: 259, column: 2, scope: !10682)
!10696 = !DILocation(line: 210, column: 17, scope: !10688)
!10697 = !DILocation(line: 234, column: 7, scope: !10687)
!10698 = !DILocation(line: 234, column: 33, scope: !10687)
!10699 = !DILocation(line: 234, column: 7, scope: !10688)
!10700 = !DILocation(line: 235, column: 22, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10687, file: !1818, line: 234, column: 49)
!10702 = !DILocation(line: 235, column: 29, scope: !10701)
!10703 = !DILocation(line: 236, column: 3, scope: !10701)
!10704 = !DILocation(line: 236, column: 14, scope: !10687)
!10705 = !DILocation(line: 239, column: 32, scope: !10684)
!10706 = !DILocation(line: 0, scope: !10684)
!10707 = !DILocation(line: 241, column: 8, scope: !10684)
!10708 = !DILocation(line: 246, column: 3, scope: !10684)
!10709 = !DILocation(line: 252, column: 9, scope: !10688)
!10710 = !DILocation(line: 255, column: 9, scope: !10688)
!10711 = !DILocation(line: 256, column: 11, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10688, file: !1818, line: 256, column: 7)
!10713 = !DILocation(line: 209, column: 37, scope: !10689)
!10714 = !DILocation(line: 256, column: 7, scope: !10688)
!10715 = !DILocation(line: 262, column: 1, scope: !10663)
!10716 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1818, file: !1818, line: 176, type: !10717, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !10719)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!107, !162, !162, !162}
!10719 = !{!10720, !10721, !10722, !10723}
!10720 = !DILocalVariable(name: "pin", arg: 1, scope: !10716, file: !1818, line: 176, type: !162)
!10721 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10716, file: !1818, line: 176, type: !162)
!10722 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10716, file: !1818, line: 176, type: !162)
!10723 = !DILocalVariable(name: "port_device", scope: !10716, file: !1818, line: 178, type: !1748)
!10724 = !DILocation(line: 0, scope: !10716)
!10725 = !DILocation(line: 180, column: 22, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10716, file: !1818, line: 180, column: 6)
!10727 = !DILocation(line: 180, column: 6, scope: !10716)
!10728 = !DILocation(line: 180, column: 6, scope: !10726)
!10729 = !DILocation(line: 184, column: 16, scope: !10716)
!10730 = !DILocation(line: 186, column: 19, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10716, file: !1818, line: 186, column: 6)
!10732 = !DILocation(line: 186, column: 28, scope: !10731)
!10733 = !DILocation(line: 186, column: 33, scope: !10731)
!10734 = !DILocation(line: 186, column: 6, scope: !10716)
!10735 = !DILocation(line: 190, column: 43, scope: !10716)
!10736 = !DILocation(line: 190, column: 9, scope: !10716)
!10737 = !DILocation(line: 190, column: 2, scope: !10716)
!10738 = !DILocation(line: 191, column: 1, scope: !10716)
!10739 = distinct !DISubprogram(name: "device_is_ready", scope: !3452, file: !3452, line: 47, type: !10740, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !10742)
!10740 = !DISubroutineType(types: !10741)
!10741 = !{!136, !1748}
!10742 = !{!10743}
!10743 = !DILocalVariable(name: "dev", arg: 1, scope: !10739, file: !3452, line: 47, type: !1748)
!10744 = !DILocation(line: 0, scope: !10739)
!10745 = !DILocation(line: 55, column: 2, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10739, file: !3452, line: 55, column: 2)
!10747 = !{i64 2149260994}
!10748 = !DILocation(line: 56, column: 9, scope: !10739)
!10749 = !DILocation(line: 56, column: 2, scope: !10739)
!10750 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10740, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !10751)
!10751 = !{!10752}
!10752 = !DILocalVariable(name: "dev", arg: 1, scope: !10750, file: !120, line: 730, type: !1748)
!10753 = !DILocation(line: 0, scope: !10750)
!10754 = !DILocation(line: 732, column: 9, scope: !10750)
!10755 = !DILocation(line: 732, column: 2, scope: !10750)
!10756 = distinct !DISubprogram(name: "SystemInit", scope: !1868, file: !1868, line: 167, type: !3169, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1826, retainedNodes: !250)
!10757 = !DILocation(line: 182, column: 1, scope: !10756)
!10758 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1868, file: !1868, line: 220, type: !3169, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1826, retainedNodes: !10759)
!10759 = !{!10760, !10761, !10762, !10763, !10764}
!10760 = !DILocalVariable(name: "tmp", scope: !10758, file: !1868, line: 222, type: !162)
!10761 = !DILocalVariable(name: "pllvco", scope: !10758, file: !1868, line: 222, type: !162)
!10762 = !DILocalVariable(name: "pllp", scope: !10758, file: !1868, line: 222, type: !162)
!10763 = !DILocalVariable(name: "pllsource", scope: !10758, file: !1868, line: 222, type: !162)
!10764 = !DILocalVariable(name: "pllm", scope: !10758, file: !1868, line: 222, type: !162)
!10765 = !DILocation(line: 0, scope: !10758)
!10766 = !DILocation(line: 225, column: 14, scope: !10758)
!10767 = !DILocation(line: 225, column: 19, scope: !10758)
!10768 = !DILocation(line: 227, column: 3, scope: !10758)
!10769 = !DILocation(line: 240, column: 25, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10758, file: !1868, line: 228, column: 3)
!10771 = !DILocation(line: 241, column: 19, scope: !10770)
!10772 = !DILocation(line: 241, column: 27, scope: !10770)
!10773 = !DILocation(line: 0, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10770, file: !1868, line: 243, column: 11)
!10775 = !DILocation(line: 254, column: 22, scope: !10770)
!10776 = !DILocation(line: 254, column: 62, scope: !10770)
!10777 = !DILocation(line: 255, column: 31, scope: !10770)
!10778 = !DILocation(line: 256, column: 7, scope: !10770)
!10779 = !DILocation(line: 0, scope: !10770)
!10780 = !DILocation(line: 263, column: 30, scope: !10758)
!10781 = !DILocation(line: 263, column: 52, scope: !10758)
!10782 = !DILocation(line: 263, column: 9, scope: !10758)
!10783 = !DILocation(line: 265, column: 19, scope: !10758)
!10784 = !DILocation(line: 266, column: 1, scope: !10758)
!10785 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10786, file: !10786, line: 200, type: !10787, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!10786 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10787 = !DISubroutineType(types: !10788)
!10788 = !{!10789}
!10789 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2878, line: 44, baseType: !2877)
!10790 = !DILocation(line: 202, column: 3, scope: !10785)
!10791 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10786, file: !10786, line: 219, type: !10792, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !10816)
!10792 = !DISubroutineType(types: !10793)
!10793 = !{!10789, !10794}
!10794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10795, size: 32)
!10795 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10796, line: 70, baseType: !10797)
!10796 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 49, size: 384, elements: !10798)
!10798 = !{!10799, !10800, !10801, !10802, !10803, !10804, !10805}
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10797, file: !10796, line: 51, baseType: !162, size: 32)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10797, file: !10796, line: 54, baseType: !162, size: 32, offset: 32)
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10797, file: !10796, line: 57, baseType: !162, size: 32, offset: 64)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10797, file: !10796, line: 60, baseType: !162, size: 32, offset: 96)
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10797, file: !10796, line: 63, baseType: !162, size: 32, offset: 128)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10797, file: !10796, line: 66, baseType: !162, size: 32, offset: 160)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10797, file: !10796, line: 69, baseType: !10806, size: 192, offset: 192)
!10806 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10807, line: 73, baseType: !10808)
!10807 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10807, line: 45, size: 192, elements: !10809)
!10809 = !{!10810, !10811, !10812, !10813, !10814, !10815}
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10808, file: !10807, line: 47, baseType: !162, size: 32)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10808, file: !10807, line: 50, baseType: !162, size: 32, offset: 32)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10808, file: !10807, line: 53, baseType: !162, size: 32, offset: 64)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10808, file: !10807, line: 56, baseType: !162, size: 32, offset: 96)
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10808, file: !10807, line: 60, baseType: !162, size: 32, offset: 128)
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10808, file: !10807, line: 63, baseType: !162, size: 32, offset: 160)
!10816 = !{!10817, !10818, !10819, !10820, !10824}
!10817 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10791, file: !10786, line: 219, type: !10794)
!10818 = !DILocalVariable(name: "tickstart", scope: !10791, file: !10786, line: 221, type: !162)
!10819 = !DILocalVariable(name: "pll_config", scope: !10791, file: !10786, line: 221, type: !162)
!10820 = !DILocalVariable(name: "pwrclkchanged", scope: !10821, file: !10786, line: 391, type: !10823)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !10786, line: 390, column: 3)
!10822 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 389, column: 6)
!10823 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !775, line: 188, baseType: !2884)
!10824 = !DILocalVariable(name: "tmpreg", scope: !10825, file: !10786, line: 400, type: !283)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10786, line: 400, column: 7)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !10786, line: 399, column: 5)
!10827 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 398, column: 8)
!10828 = !DILocation(line: 0, scope: !10791)
!10829 = !DILocation(line: 224, column: 24, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 224, column: 6)
!10831 = !DILocation(line: 224, column: 6, scope: !10791)
!10832 = !DILocation(line: 232, column: 27, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 232, column: 6)
!10834 = !DILocation(line: 232, column: 43, scope: !10833)
!10835 = !DILocation(line: 232, column: 69, scope: !10833)
!10836 = !DILocation(line: 232, column: 6, scope: !10791)
!10837 = !DILocation(line: 237, column: 9, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10786, line: 237, column: 8)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !10786, line: 233, column: 3)
!10840 = !DILocation(line: 237, column: 39, scope: !10838)
!10841 = !DILocation(line: 237, column: 60, scope: !10838)
!10842 = !DILocation(line: 238, column: 9, scope: !10838)
!10843 = !DILocation(line: 238, column: 39, scope: !10838)
!10844 = !DILocation(line: 238, column: 60, scope: !10838)
!10845 = !DILocation(line: 238, column: 70, scope: !10838)
!10846 = !DILocation(line: 238, column: 78, scope: !10838)
!10847 = !DILocation(line: 238, column: 100, scope: !10838)
!10848 = !DILocation(line: 237, column: 8, scope: !10839)
!10849 = !DILocation(line: 240, column: 11, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !10786, line: 240, column: 10)
!10851 = distinct !DILexicalBlock(scope: !10838, file: !10786, line: 239, column: 5)
!10852 = !DILocation(line: 240, column: 57, scope: !10850)
!10853 = !DILocation(line: 240, column: 80, scope: !10850)
!10854 = !DILocation(line: 240, column: 89, scope: !10850)
!10855 = !DILocation(line: 240, column: 10, scope: !10851)
!10856 = !DILocation(line: 248, column: 7, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !10786, line: 248, column: 7)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !10786, line: 248, column: 7)
!10859 = distinct !DILexicalBlock(scope: !10838, file: !10786, line: 246, column: 5)
!10860 = !DILocation(line: 248, column: 7, scope: !10858)
!10861 = !DILocation(line: 248, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !10786, line: 248, column: 7)
!10863 = !DILocation(line: 248, column: 7, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !10786, line: 248, column: 7)
!10865 = distinct !DILexicalBlock(scope: !10857, file: !10786, line: 248, column: 7)
!10866 = !DILocation(line: 248, column: 7, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10865, file: !10786, line: 248, column: 7)
!10868 = !DILocation(line: 0, scope: !10857)
!10869 = !DILocation(line: 251, column: 30, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10859, file: !10786, line: 251, column: 10)
!10871 = !DILocation(line: 251, column: 40, scope: !10870)
!10872 = !DILocation(line: 0, scope: !10870)
!10873 = !DILocation(line: 251, column: 10, scope: !10859)
!10874 = !DILocation(line: 257, column: 15, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10870, file: !10786, line: 252, column: 7)
!10876 = !DILocation(line: 257, column: 51, scope: !10875)
!10877 = !DILocation(line: 257, column: 9, scope: !10875)
!10878 = !DILocation(line: 259, column: 15, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !10786, line: 259, column: 14)
!10880 = distinct !DILexicalBlock(scope: !10875, file: !10786, line: 258, column: 9)
!10881 = !DILocation(line: 259, column: 29, scope: !10879)
!10882 = !DILocation(line: 259, column: 43, scope: !10879)
!10883 = !DILocation(line: 259, column: 14, scope: !10880)
!10884 = distinct !{!10884, !10877, !10885}
!10885 = !DILocation(line: 263, column: 9, scope: !10875)
!10886 = !DILocation(line: 271, column: 15, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10870, file: !10786, line: 266, column: 7)
!10888 = !DILocation(line: 271, column: 9, scope: !10887)
!10889 = !DILocation(line: 273, column: 15, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !10786, line: 273, column: 14)
!10891 = distinct !DILexicalBlock(scope: !10887, file: !10786, line: 272, column: 9)
!10892 = !DILocation(line: 273, column: 29, scope: !10890)
!10893 = !DILocation(line: 273, column: 43, scope: !10890)
!10894 = !DILocation(line: 273, column: 14, scope: !10891)
!10895 = distinct !{!10895, !10888, !10896}
!10896 = !DILocation(line: 277, column: 9, scope: !10887)
!10897 = !DILocation(line: 282, column: 27, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 282, column: 6)
!10899 = !DILocation(line: 282, column: 43, scope: !10898)
!10900 = !DILocation(line: 282, column: 69, scope: !10898)
!10901 = !DILocation(line: 282, column: 6, scope: !10791)
!10902 = !DILocation(line: 289, column: 9, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !10786, line: 289, column: 8)
!10904 = distinct !DILexicalBlock(scope: !10898, file: !10786, line: 283, column: 3)
!10905 = !DILocation(line: 289, column: 39, scope: !10903)
!10906 = !DILocation(line: 289, column: 60, scope: !10903)
!10907 = !DILocation(line: 290, column: 9, scope: !10903)
!10908 = !DILocation(line: 290, column: 39, scope: !10903)
!10909 = !DILocation(line: 290, column: 60, scope: !10903)
!10910 = !DILocation(line: 290, column: 70, scope: !10903)
!10911 = !DILocation(line: 290, column: 78, scope: !10903)
!10912 = !DILocation(line: 290, column: 100, scope: !10903)
!10913 = !DILocation(line: 289, column: 8, scope: !10904)
!10914 = !DILocation(line: 293, column: 11, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !10786, line: 293, column: 10)
!10916 = distinct !DILexicalBlock(scope: !10903, file: !10786, line: 291, column: 5)
!10917 = !DILocation(line: 293, column: 57, scope: !10915)
!10918 = !DILocation(line: 293, column: 80, scope: !10915)
!10919 = !DILocation(line: 293, column: 89, scope: !10915)
!10920 = !DILocation(line: 293, column: 10, scope: !10916)
!10921 = !DILocation(line: 307, column: 30, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !10786, line: 307, column: 10)
!10923 = distinct !DILexicalBlock(scope: !10903, file: !10786, line: 305, column: 5)
!10924 = !DILocation(line: 307, column: 39, scope: !10922)
!10925 = !DILocation(line: 307, column: 10, scope: !10923)
!10926 = !DILocation(line: 310, column: 9, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10922, file: !10786, line: 308, column: 7)
!10928 = !DILocation(line: 313, column: 21, scope: !10927)
!10929 = !DILocation(line: 316, column: 9, scope: !10927)
!10930 = !DILocation(line: 316, column: 15, scope: !10927)
!10931 = !DILocation(line: 316, column: 51, scope: !10927)
!10932 = !DILocation(line: 318, column: 15, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10934, file: !10786, line: 318, column: 14)
!10934 = distinct !DILexicalBlock(scope: !10927, file: !10786, line: 317, column: 9)
!10935 = !DILocation(line: 318, column: 29, scope: !10933)
!10936 = !DILocation(line: 318, column: 43, scope: !10933)
!10937 = !DILocation(line: 318, column: 14, scope: !10934)
!10938 = distinct !{!10938, !10929, !10939}
!10939 = !DILocation(line: 322, column: 9, scope: !10927)
!10940 = !DILocation(line: 330, column: 9, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10922, file: !10786, line: 328, column: 7)
!10942 = !DILocation(line: 333, column: 21, scope: !10941)
!10943 = !DILocation(line: 336, column: 9, scope: !10941)
!10944 = !DILocation(line: 336, column: 15, scope: !10941)
!10945 = !DILocation(line: 338, column: 15, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !10786, line: 338, column: 14)
!10947 = distinct !DILexicalBlock(scope: !10941, file: !10786, line: 337, column: 9)
!10948 = !DILocation(line: 338, column: 29, scope: !10946)
!10949 = !DILocation(line: 338, column: 43, scope: !10946)
!10950 = !DILocation(line: 338, column: 14, scope: !10947)
!10951 = distinct !{!10951, !10943, !10952}
!10952 = !DILocation(line: 342, column: 9, scope: !10941)
!10953 = !DILocation(line: 0, scope: !10903)
!10954 = !DILocation(line: 347, column: 27, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 347, column: 6)
!10956 = !DILocation(line: 347, column: 43, scope: !10955)
!10957 = !DILocation(line: 347, column: 69, scope: !10955)
!10958 = !DILocation(line: 347, column: 6, scope: !10791)
!10959 = !DILocation(line: 353, column: 28, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !10786, line: 353, column: 8)
!10961 = distinct !DILexicalBlock(scope: !10955, file: !10786, line: 348, column: 3)
!10962 = !DILocation(line: 353, column: 37, scope: !10960)
!10963 = !DILocation(line: 353, column: 8, scope: !10961)
!10964 = !DILocation(line: 356, column: 7, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10960, file: !10786, line: 354, column: 5)
!10966 = !DILocation(line: 359, column: 19, scope: !10965)
!10967 = !DILocation(line: 362, column: 7, scope: !10965)
!10968 = !DILocation(line: 362, column: 13, scope: !10965)
!10969 = !DILocation(line: 362, column: 49, scope: !10965)
!10970 = !DILocation(line: 364, column: 13, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !10786, line: 364, column: 12)
!10972 = distinct !DILexicalBlock(scope: !10965, file: !10786, line: 363, column: 7)
!10973 = !DILocation(line: 364, column: 27, scope: !10971)
!10974 = !DILocation(line: 364, column: 41, scope: !10971)
!10975 = !DILocation(line: 364, column: 12, scope: !10972)
!10976 = distinct !{!10976, !10967, !10977}
!10977 = !DILocation(line: 368, column: 7, scope: !10965)
!10978 = !DILocation(line: 373, column: 7, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10960, file: !10786, line: 371, column: 5)
!10980 = !DILocation(line: 376, column: 19, scope: !10979)
!10981 = !DILocation(line: 379, column: 7, scope: !10979)
!10982 = !DILocation(line: 379, column: 13, scope: !10979)
!10983 = !DILocation(line: 381, column: 13, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !10786, line: 381, column: 12)
!10985 = distinct !DILexicalBlock(scope: !10979, file: !10786, line: 380, column: 7)
!10986 = !DILocation(line: 381, column: 27, scope: !10984)
!10987 = !DILocation(line: 381, column: 41, scope: !10984)
!10988 = !DILocation(line: 381, column: 12, scope: !10985)
!10989 = distinct !{!10989, !10981, !10990}
!10990 = !DILocation(line: 385, column: 7, scope: !10979)
!10991 = !DILocation(line: 389, column: 27, scope: !10822)
!10992 = !DILocation(line: 389, column: 43, scope: !10822)
!10993 = !DILocation(line: 389, column: 69, scope: !10822)
!10994 = !DILocation(line: 389, column: 6, scope: !10791)
!10995 = !DILocation(line: 0, scope: !10821)
!10996 = !DILocation(line: 398, column: 8, scope: !10827)
!10997 = !DILocation(line: 398, column: 8, scope: !10821)
!10998 = !DILocation(line: 400, column: 7, scope: !10825)
!10999 = !DILocation(line: 400, column: 7, scope: !10826)
!11000 = !DILocation(line: 402, column: 5, scope: !10826)
!11001 = !DILocation(line: 404, column: 8, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 404, column: 8)
!11003 = !DILocation(line: 404, column: 8, scope: !10821)
!11004 = !DILocation(line: 407, column: 7, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11002, file: !10786, line: 405, column: 5)
!11006 = !DILocation(line: 410, column: 19, scope: !11005)
!11007 = !DILocation(line: 412, column: 7, scope: !11005)
!11008 = !DILocation(line: 412, column: 13, scope: !11005)
!11009 = !DILocation(line: 414, column: 13, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !10786, line: 414, column: 12)
!11011 = distinct !DILexicalBlock(scope: !11005, file: !10786, line: 413, column: 7)
!11012 = !DILocation(line: 414, column: 27, scope: !11010)
!11013 = !DILocation(line: 414, column: 40, scope: !11010)
!11014 = !DILocation(line: 414, column: 12, scope: !11011)
!11015 = distinct !{!11015, !11007, !11016}
!11016 = !DILocation(line: 418, column: 7, scope: !11005)
!11017 = !DILocation(line: 422, column: 5, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !10786, line: 422, column: 5)
!11019 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 422, column: 5)
!11020 = !DILocation(line: 422, column: 5, scope: !11019)
!11021 = !DILocation(line: 422, column: 5, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !10786, line: 422, column: 5)
!11023 = !DILocation(line: 422, column: 5, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !10786, line: 422, column: 5)
!11025 = distinct !DILexicalBlock(scope: !11018, file: !10786, line: 422, column: 5)
!11026 = !DILocation(line: 422, column: 5, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11025, file: !10786, line: 422, column: 5)
!11028 = !DILocation(line: 0, scope: !11018)
!11029 = !DILocation(line: 424, column: 28, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 424, column: 8)
!11031 = !DILocation(line: 424, column: 38, scope: !11030)
!11032 = !DILocation(line: 0, scope: !11030)
!11033 = !DILocation(line: 424, column: 8, scope: !10821)
!11034 = !DILocation(line: 430, column: 13, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11030, file: !10786, line: 425, column: 5)
!11036 = !DILocation(line: 430, column: 49, scope: !11035)
!11037 = !DILocation(line: 430, column: 7, scope: !11035)
!11038 = !DILocation(line: 432, column: 13, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !10786, line: 432, column: 12)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !10786, line: 431, column: 7)
!11041 = !DILocation(line: 432, column: 27, scope: !11039)
!11042 = !DILocation(line: 432, column: 41, scope: !11039)
!11043 = !DILocation(line: 432, column: 12, scope: !11040)
!11044 = distinct !{!11044, !11037, !11045}
!11045 = !DILocation(line: 436, column: 7, scope: !11035)
!11046 = !DILocation(line: 444, column: 13, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11030, file: !10786, line: 439, column: 5)
!11048 = !DILocation(line: 444, column: 7, scope: !11047)
!11049 = !DILocation(line: 446, column: 13, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !10786, line: 446, column: 12)
!11051 = distinct !DILexicalBlock(scope: !11047, file: !10786, line: 445, column: 7)
!11052 = !DILocation(line: 446, column: 27, scope: !11050)
!11053 = !DILocation(line: 446, column: 41, scope: !11050)
!11054 = !DILocation(line: 446, column: 12, scope: !11051)
!11055 = distinct !{!11055, !11048, !11056}
!11056 = !DILocation(line: 450, column: 7, scope: !11047)
!11057 = !DILocation(line: 454, column: 8, scope: !10821)
!11058 = !DILocation(line: 456, column: 7, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11060, file: !10786, line: 455, column: 5)
!11060 = distinct !DILexicalBlock(scope: !10821, file: !10786, line: 454, column: 8)
!11061 = !DILocation(line: 457, column: 5, scope: !11059)
!11062 = !DILocation(line: 462, column: 31, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !10791, file: !10786, line: 462, column: 7)
!11064 = !DILocation(line: 462, column: 41, scope: !11063)
!11065 = !DILocation(line: 462, column: 7, scope: !10791)
!11066 = !DILocation(line: 465, column: 8, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !10786, line: 465, column: 8)
!11068 = distinct !DILexicalBlock(scope: !11063, file: !10786, line: 463, column: 3)
!11069 = !DILocation(line: 465, column: 38, scope: !11067)
!11070 = !DILocation(line: 465, column: 8, scope: !11068)
!11071 = !DILocation(line: 467, column: 44, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !10786, line: 467, column: 10)
!11073 = distinct !DILexicalBlock(scope: !11067, file: !10786, line: 466, column: 5)
!11074 = !DILocation(line: 0, scope: !11072)
!11075 = !DILocation(line: 467, column: 10, scope: !11073)
!11076 = !DILocation(line: 483, column: 15, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11072, file: !10786, line: 468, column: 7)
!11078 = !DILocation(line: 483, column: 9, scope: !11077)
!11079 = !DILocation(line: 485, column: 15, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !10786, line: 485, column: 14)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !10786, line: 484, column: 9)
!11082 = !DILocation(line: 485, column: 29, scope: !11080)
!11083 = !DILocation(line: 485, column: 43, scope: !11080)
!11084 = !DILocation(line: 485, column: 14, scope: !11081)
!11085 = distinct !{!11085, !11078, !11086}
!11086 = !DILocation(line: 489, column: 9, scope: !11077)
!11087 = !DILocation(line: 492, column: 9, scope: !11077)
!11088 = !DILocation(line: 498, column: 9, scope: !11077)
!11089 = !DILocation(line: 501, column: 21, scope: !11077)
!11090 = !DILocation(line: 504, column: 9, scope: !11077)
!11091 = !DILocation(line: 504, column: 15, scope: !11077)
!11092 = !DILocation(line: 504, column: 51, scope: !11077)
!11093 = !DILocation(line: 506, column: 15, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !10786, line: 506, column: 14)
!11095 = distinct !DILexicalBlock(scope: !11077, file: !10786, line: 505, column: 9)
!11096 = !DILocation(line: 506, column: 29, scope: !11094)
!11097 = !DILocation(line: 506, column: 43, scope: !11094)
!11098 = !DILocation(line: 506, column: 14, scope: !11095)
!11099 = distinct !{!11099, !11090, !11100}
!11100 = !DILocation(line: 510, column: 9, scope: !11077)
!11101 = !DILocation(line: 521, column: 15, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11072, file: !10786, line: 513, column: 7)
!11103 = !DILocation(line: 521, column: 9, scope: !11102)
!11104 = !DILocation(line: 523, column: 15, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !10786, line: 523, column: 14)
!11106 = distinct !DILexicalBlock(scope: !11102, file: !10786, line: 522, column: 9)
!11107 = !DILocation(line: 523, column: 29, scope: !11105)
!11108 = !DILocation(line: 523, column: 43, scope: !11105)
!11109 = !DILocation(line: 523, column: 14, scope: !11106)
!11110 = distinct !{!11110, !11103, !11111}
!11111 = !DILocation(line: 527, column: 9, scope: !11102)
!11112 = !DILocation(line: 533, column: 44, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !10786, line: 533, column: 10)
!11114 = distinct !DILexicalBlock(scope: !11067, file: !10786, line: 531, column: 5)
!11115 = !DILocation(line: 533, column: 10, scope: !11114)
!11116 = !DILocation(line: 540, column: 27, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !10786, line: 538, column: 7)
!11118 = !DILocation(line: 551, column: 14, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11117, file: !10786, line: 550, column: 13)
!11120 = !DILocation(line: 551, column: 81, scope: !11119)
!11121 = !DILocation(line: 551, column: 55, scope: !11119)
!11122 = !DILocation(line: 551, column: 92, scope: !11119)
!11123 = !DILocation(line: 552, column: 14, scope: !11119)
!11124 = !DILocation(line: 552, column: 80, scope: !11119)
!11125 = !DILocation(line: 552, column: 53, scope: !11119)
!11126 = !DILocation(line: 552, column: 111, scope: !11119)
!11127 = !DILocation(line: 553, column: 14, scope: !11119)
!11128 = !DILocation(line: 553, column: 80, scope: !11119)
!11129 = !DILocation(line: 553, column: 86, scope: !11119)
!11130 = !DILocation(line: 553, column: 53, scope: !11119)
!11131 = !DILocation(line: 553, column: 111, scope: !11119)
!11132 = !DILocation(line: 554, column: 14, scope: !11119)
!11133 = !DILocation(line: 554, column: 82, scope: !11119)
!11134 = !DILocation(line: 554, column: 101, scope: !11119)
!11135 = !DILocation(line: 554, column: 53, scope: !11119)
!11136 = !DILocation(line: 554, column: 126, scope: !11119)
!11137 = !DILocation(line: 555, column: 14, scope: !11119)
!11138 = !DILocation(line: 555, column: 80, scope: !11119)
!11139 = !DILocation(line: 555, column: 85, scope: !11119)
!11140 = !DILocation(line: 555, column: 53, scope: !11119)
!11141 = !DILocation(line: 550, column: 13, scope: !11117)
!11142 = !DILocation(line: 563, column: 3, scope: !10791)
!11143 = !DILocation(line: 564, column: 1, scope: !10791)
!11144 = !DISubprogram(name: "HAL_GetTick", scope: !11145, file: !11145, line: 234, type: !6198, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11145 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11146 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10786, file: !10786, line: 591, type: !11147, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11158)
!11147 = !DISubroutineType(types: !11148)
!11148 = !{!10789, !11149, !162}
!11149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11150, size: 32)
!11150 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10796, line: 92, baseType: !11151)
!11151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 75, size: 160, elements: !11152)
!11152 = !{!11153, !11154, !11155, !11156, !11157}
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11151, file: !10796, line: 77, baseType: !162, size: 32)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11151, file: !10796, line: 80, baseType: !162, size: 32, offset: 32)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11151, file: !10796, line: 83, baseType: !162, size: 32, offset: 64)
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11151, file: !10796, line: 86, baseType: !162, size: 32, offset: 96)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11151, file: !10796, line: 89, baseType: !162, size: 32, offset: 128)
!11158 = !{!11159, !11160, !11161}
!11159 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11146, file: !10786, line: 591, type: !11149)
!11160 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11146, file: !10786, line: 591, type: !162)
!11161 = !DILocalVariable(name: "tickstart", scope: !11146, file: !10786, line: 593, type: !162)
!11162 = !DILocation(line: 0, scope: !11146)
!11163 = !DILocation(line: 596, column: 24, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 596, column: 6)
!11165 = !DILocation(line: 596, column: 6, scope: !11146)
!11166 = !DILocation(line: 610, column: 17, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 610, column: 6)
!11168 = !DILocation(line: 610, column: 15, scope: !11167)
!11169 = !DILocation(line: 610, column: 6, scope: !11146)
!11170 = !DILocation(line: 613, column: 5, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11167, file: !10786, line: 611, column: 3)
!11172 = !DILocation(line: 617, column: 8, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11171, file: !10786, line: 617, column: 8)
!11174 = !DILocation(line: 617, column: 34, scope: !11173)
!11175 = !DILocation(line: 617, column: 8, scope: !11171)
!11176 = !DILocation(line: 624, column: 27, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 624, column: 6)
!11178 = !DILocation(line: 624, column: 38, scope: !11177)
!11179 = !DILocation(line: 624, column: 60, scope: !11177)
!11180 = !DILocation(line: 624, column: 6, scope: !11146)
!11181 = !DILocation(line: 628, column: 40, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !10786, line: 628, column: 8)
!11183 = distinct !DILexicalBlock(scope: !11177, file: !10786, line: 625, column: 3)
!11184 = !DILocation(line: 628, column: 63, scope: !11182)
!11185 = !DILocation(line: 628, column: 8, scope: !11183)
!11186 = !DILocation(line: 630, column: 7, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !10786, line: 629, column: 5)
!11188 = !DILocation(line: 633, column: 29, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11183, file: !10786, line: 633, column: 8)
!11190 = !DILocation(line: 631, column: 5, scope: !11187)
!11191 = !DILocation(line: 633, column: 40, scope: !11189)
!11192 = !DILocation(line: 633, column: 63, scope: !11189)
!11193 = !DILocation(line: 633, column: 8, scope: !11183)
!11194 = !DILocation(line: 635, column: 7, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11189, file: !10786, line: 634, column: 5)
!11196 = !DILocation(line: 636, column: 5, scope: !11195)
!11197 = !DILocation(line: 639, column: 5, scope: !11183)
!11198 = !DILocation(line: 643, column: 27, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 643, column: 6)
!11200 = !DILocation(line: 640, column: 3, scope: !11183)
!11201 = !DILocation(line: 643, column: 38, scope: !11199)
!11202 = !DILocation(line: 643, column: 62, scope: !11199)
!11203 = !DILocation(line: 643, column: 6, scope: !11146)
!11204 = !DILocation(line: 648, column: 27, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !10786, line: 648, column: 8)
!11206 = distinct !DILexicalBlock(scope: !11199, file: !10786, line: 644, column: 3)
!11207 = !DILocation(line: 648, column: 8, scope: !11206)
!11208 = !DILocation(line: 651, column: 10, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !10786, line: 651, column: 10)
!11210 = distinct !DILexicalBlock(scope: !11205, file: !10786, line: 649, column: 5)
!11211 = !DILocation(line: 651, column: 46, scope: !11209)
!11212 = !DILocation(line: 651, column: 10, scope: !11210)
!11213 = !DILocation(line: 661, column: 10, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !10786, line: 661, column: 10)
!11215 = distinct !DILexicalBlock(scope: !11216, file: !10786, line: 659, column: 5)
!11216 = distinct !DILexicalBlock(scope: !11205, file: !10786, line: 657, column: 13)
!11217 = !DILocation(line: 661, column: 46, scope: !11214)
!11218 = !DILocation(line: 661, column: 10, scope: !11215)
!11219 = !DILocation(line: 670, column: 10, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !10786, line: 670, column: 10)
!11221 = distinct !DILexicalBlock(scope: !11216, file: !10786, line: 668, column: 5)
!11222 = !DILocation(line: 670, column: 46, scope: !11220)
!11223 = !DILocation(line: 670, column: 10, scope: !11221)
!11224 = !DILocation(line: 676, column: 5, scope: !11206)
!11225 = !DILocation(line: 679, column: 17, scope: !11206)
!11226 = !DILocation(line: 681, column: 5, scope: !11206)
!11227 = !DILocation(line: 681, column: 12, scope: !11206)
!11228 = !DILocation(line: 681, column: 65, scope: !11206)
!11229 = !DILocation(line: 681, column: 78, scope: !11206)
!11230 = !DILocation(line: 681, column: 42, scope: !11206)
!11231 = !DILocation(line: 683, column: 12, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !10786, line: 683, column: 11)
!11233 = distinct !DILexicalBlock(scope: !11206, file: !10786, line: 682, column: 5)
!11234 = !DILocation(line: 683, column: 26, scope: !11232)
!11235 = !DILocation(line: 683, column: 39, scope: !11232)
!11236 = !DILocation(line: 683, column: 11, scope: !11233)
!11237 = distinct !{!11237, !11226, !11238}
!11238 = !DILocation(line: 687, column: 5, scope: !11206)
!11239 = !DILocation(line: 691, column: 17, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 691, column: 6)
!11241 = !DILocation(line: 691, column: 15, scope: !11240)
!11242 = !DILocation(line: 691, column: 6, scope: !11146)
!11243 = !DILocation(line: 694, column: 5, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11240, file: !10786, line: 692, column: 3)
!11245 = !DILocation(line: 698, column: 8, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11244, file: !10786, line: 698, column: 8)
!11247 = !DILocation(line: 698, column: 34, scope: !11246)
!11248 = !DILocation(line: 698, column: 8, scope: !11244)
!11249 = !DILocation(line: 705, column: 27, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 705, column: 6)
!11251 = !DILocation(line: 705, column: 38, scope: !11250)
!11252 = !DILocation(line: 705, column: 61, scope: !11250)
!11253 = !DILocation(line: 705, column: 6, scope: !11146)
!11254 = !DILocation(line: 708, column: 5, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11250, file: !10786, line: 706, column: 3)
!11256 = !DILocation(line: 712, column: 27, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11146, file: !10786, line: 712, column: 6)
!11258 = !DILocation(line: 709, column: 3, scope: !11255)
!11259 = !DILocation(line: 712, column: 38, scope: !11257)
!11260 = !DILocation(line: 712, column: 61, scope: !11257)
!11261 = !DILocation(line: 712, column: 6, scope: !11146)
!11262 = !DILocation(line: 715, column: 5, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11257, file: !10786, line: 713, column: 3)
!11264 = !DILocation(line: 716, column: 3, scope: !11263)
!11265 = !DILocation(line: 719, column: 21, scope: !11146)
!11266 = !DILocation(line: 719, column: 70, scope: !11146)
!11267 = !DILocation(line: 719, column: 91, scope: !11146)
!11268 = !DILocation(line: 719, column: 50, scope: !11146)
!11269 = !DILocation(line: 719, column: 47, scope: !11146)
!11270 = !DILocation(line: 719, column: 19, scope: !11146)
!11271 = !DILocation(line: 722, column: 17, scope: !11146)
!11272 = !DILocation(line: 722, column: 3, scope: !11146)
!11273 = !DILocation(line: 724, column: 3, scope: !11146)
!11274 = !DILocation(line: 725, column: 1, scope: !11146)
!11275 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10786, file: !10786, line: 885, type: !6198, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11276)
!11276 = !{!11277, !11278, !11279, !11280}
!11277 = !DILocalVariable(name: "pllm", scope: !11275, file: !10786, line: 887, type: !162)
!11278 = !DILocalVariable(name: "pllvco", scope: !11275, file: !10786, line: 887, type: !162)
!11279 = !DILocalVariable(name: "pllp", scope: !11275, file: !10786, line: 887, type: !162)
!11280 = !DILocalVariable(name: "sysclockfreq", scope: !11275, file: !10786, line: 888, type: !162)
!11281 = !DILocation(line: 0, scope: !11275)
!11282 = !DILocation(line: 891, column: 16, scope: !11275)
!11283 = !DILocation(line: 891, column: 21, scope: !11275)
!11284 = !DILocation(line: 891, column: 3, scope: !11275)
!11285 = !DILocation(line: 907, column: 19, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !10786, line: 904, column: 5)
!11287 = distinct !DILexicalBlock(scope: !11275, file: !10786, line: 892, column: 3)
!11288 = !DILocation(line: 907, column: 27, scope: !11286)
!11289 = !DILocation(line: 908, column: 10, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11286, file: !10786, line: 908, column: 10)
!11291 = !DILocation(line: 0, scope: !11290)
!11292 = !DILocation(line: 918, column: 23, scope: !11286)
!11293 = !DILocation(line: 918, column: 82, scope: !11286)
!11294 = !DILocation(line: 920, column: 28, scope: !11286)
!11295 = !DILocation(line: 921, column: 7, scope: !11286)
!11296 = !DILocation(line: 0, scope: !11287)
!11297 = !DILocation(line: 929, column: 3, scope: !11275)
!11298 = !DISubprogram(name: "HAL_InitTick", scope: !11145, file: !11145, line: 223, type: !11299, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!10789, !162}
!11301 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10786, file: !10786, line: 775, type: !11302, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11304)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{null, !162, !162, !162}
!11304 = !{!11305, !11306, !11307, !11308, !11318, !11322}
!11305 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11301, file: !10786, line: 775, type: !162)
!11306 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11301, file: !10786, line: 775, type: !162)
!11307 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11301, file: !10786, line: 775, type: !162)
!11308 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11301, file: !10786, line: 777, type: !11309)
!11309 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11310, line: 62, baseType: !11311)
!11310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11310, line: 46, size: 160, elements: !11312)
!11312 = !{!11313, !11314, !11315, !11316, !11317}
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11311, file: !11310, line: 48, baseType: !162, size: 32)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11311, file: !11310, line: 51, baseType: !162, size: 32, offset: 32)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11311, file: !11310, line: 54, baseType: !162, size: 32, offset: 64)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11311, file: !11310, line: 57, baseType: !162, size: 32, offset: 96)
!11317 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11311, file: !11310, line: 60, baseType: !162, size: 32, offset: 128)
!11318 = !DILocalVariable(name: "tmpreg", scope: !11319, file: !10786, line: 787, type: !283)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !10786, line: 787, column: 5)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !10786, line: 783, column: 3)
!11321 = distinct !DILexicalBlock(scope: !11301, file: !10786, line: 782, column: 6)
!11322 = !DILocalVariable(name: "tmpreg", scope: !11323, file: !10786, line: 811, type: !283)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !10786, line: 811, column: 5)
!11324 = distinct !DILexicalBlock(scope: !11321, file: !10786, line: 807, column: 3)
!11325 = !DILocation(line: 0, scope: !11301)
!11326 = !DILocation(line: 777, column: 3, scope: !11301)
!11327 = !DILocation(line: 777, column: 20, scope: !11301)
!11328 = !DILocation(line: 782, column: 15, scope: !11321)
!11329 = !DILocation(line: 782, column: 6, scope: !11301)
!11330 = !DILocation(line: 787, column: 5, scope: !11319)
!11331 = !DILocation(line: 787, column: 5, scope: !11320)
!11332 = !DILocation(line: 790, column: 21, scope: !11320)
!11333 = !DILocation(line: 790, column: 25, scope: !11320)
!11334 = !DILocation(line: 791, column: 21, scope: !11320)
!11335 = !DILocation(line: 791, column: 26, scope: !11320)
!11336 = !DILocation(line: 792, column: 21, scope: !11320)
!11337 = !DILocation(line: 792, column: 27, scope: !11320)
!11338 = !DILocation(line: 793, column: 21, scope: !11320)
!11339 = !DILocation(line: 793, column: 26, scope: !11320)
!11340 = !DILocation(line: 794, column: 21, scope: !11320)
!11341 = !DILocation(line: 794, column: 31, scope: !11320)
!11342 = !DILocation(line: 795, column: 5, scope: !11320)
!11343 = !DILocation(line: 798, column: 5, scope: !11320)
!11344 = !DILocation(line: 804, column: 3, scope: !11320)
!11345 = !DILocation(line: 811, column: 5, scope: !11323)
!11346 = !DILocation(line: 811, column: 5, scope: !11324)
!11347 = !DILocation(line: 814, column: 21, scope: !11324)
!11348 = !DILocation(line: 814, column: 25, scope: !11324)
!11349 = !DILocation(line: 815, column: 21, scope: !11324)
!11350 = !DILocation(line: 815, column: 26, scope: !11324)
!11351 = !DILocation(line: 816, column: 21, scope: !11324)
!11352 = !DILocation(line: 816, column: 27, scope: !11324)
!11353 = !DILocation(line: 817, column: 21, scope: !11324)
!11354 = !DILocation(line: 817, column: 26, scope: !11324)
!11355 = !DILocation(line: 818, column: 21, scope: !11324)
!11356 = !DILocation(line: 818, column: 31, scope: !11324)
!11357 = !DILocation(line: 819, column: 5, scope: !11324)
!11358 = !DILocation(line: 822, column: 5, scope: !11324)
!11359 = !DILocation(line: 0, scope: !11321)
!11360 = !DILocation(line: 830, column: 1, scope: !11301)
!11361 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11310, file: !11310, line: 224, type: !11362, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{null, !2947, !11364}
!11364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11309, size: 32)
!11365 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10786, file: !10786, line: 841, type: !3169, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11366 = !DILocation(line: 843, column: 38, scope: !11365)
!11367 = !DILocation(line: 844, column: 1, scope: !11365)
!11368 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10786, file: !10786, line: 850, type: !3169, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11369 = !DILocation(line: 852, column: 38, scope: !11368)
!11370 = !DILocation(line: 853, column: 1, scope: !11368)
!11371 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10786, file: !10786, line: 941, type: !6198, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11372 = !DILocation(line: 943, column: 10, scope: !11371)
!11373 = !DILocation(line: 943, column: 3, scope: !11371)
!11374 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10786, file: !10786, line: 952, type: !6198, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11375 = !DILocation(line: 955, column: 11, scope: !11374)
!11376 = !DILocation(line: 955, column: 56, scope: !11374)
!11377 = !DILocation(line: 955, column: 78, scope: !11374)
!11378 = !DILocation(line: 955, column: 36, scope: !11374)
!11379 = !DILocation(line: 955, column: 33, scope: !11374)
!11380 = !DILocation(line: 955, column: 3, scope: !11374)
!11381 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10786, file: !10786, line: 964, type: !6198, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11382 = !DILocation(line: 967, column: 11, scope: !11381)
!11383 = !DILocation(line: 967, column: 55, scope: !11381)
!11384 = !DILocation(line: 967, column: 77, scope: !11381)
!11385 = !DILocation(line: 967, column: 35, scope: !11381)
!11386 = !DILocation(line: 967, column: 32, scope: !11381)
!11387 = !DILocation(line: 967, column: 3, scope: !11381)
!11388 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10786, file: !10786, line: 977, type: !11389, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11391)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{null, !10794}
!11391 = !{!11392}
!11392 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11388, file: !10786, line: 977, type: !10794)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 980, column: 22, scope: !11388)
!11395 = !DILocation(line: 980, column: 37, scope: !11388)
!11396 = !DILocation(line: 983, column: 12, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11388, file: !10786, line: 983, column: 6)
!11398 = !DILocation(line: 983, column: 15, scope: !11397)
!11399 = !DILocation(line: 983, column: 31, scope: !11397)
!11400 = !DILocation(line: 983, column: 6, scope: !11388)
!11401 = !DILocation(line: 985, column: 24, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11397, file: !10786, line: 984, column: 3)
!11403 = !DILocation(line: 985, column: 33, scope: !11402)
!11404 = !DILocation(line: 986, column: 3, scope: !11402)
!11405 = !DILocation(line: 987, column: 17, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11397, file: !10786, line: 987, column: 11)
!11407 = !DILocation(line: 987, column: 20, scope: !11406)
!11408 = !DILocation(line: 987, column: 35, scope: !11406)
!11409 = !DILocation(line: 0, scope: !11406)
!11410 = !DILocation(line: 987, column: 11, scope: !11397)
!11411 = !DILocation(line: 989, column: 33, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11406, file: !10786, line: 988, column: 3)
!11413 = !DILocation(line: 990, column: 3, scope: !11412)
!11414 = !DILocation(line: 993, column: 33, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11406, file: !10786, line: 992, column: 3)
!11416 = !DILocation(line: 997, column: 12, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11388, file: !10786, line: 997, column: 6)
!11418 = !DILocation(line: 997, column: 15, scope: !11417)
!11419 = !DILocation(line: 1003, column: 24, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11417, file: !10786, line: 1002, column: 3)
!11421 = !DILocation(line: 1003, column: 33, scope: !11420)
!11422 = !DILocation(line: 1006, column: 61, scope: !11388)
!11423 = !DILocation(line: 1006, column: 81, scope: !11388)
!11424 = !DILocation(line: 1006, column: 22, scope: !11388)
!11425 = !DILocation(line: 1006, column: 42, scope: !11388)
!11426 = !DILocation(line: 1009, column: 12, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11388, file: !10786, line: 1009, column: 6)
!11428 = !DILocation(line: 1009, column: 17, scope: !11427)
!11429 = !DILocation(line: 1009, column: 35, scope: !11427)
!11430 = !DILocation(line: 1009, column: 6, scope: !11388)
!11431 = !DILocation(line: 1011, column: 24, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11427, file: !10786, line: 1010, column: 3)
!11433 = !DILocation(line: 1011, column: 33, scope: !11432)
!11434 = !DILocation(line: 1012, column: 3, scope: !11432)
!11435 = !DILocation(line: 1013, column: 17, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11427, file: !10786, line: 1013, column: 11)
!11437 = !DILocation(line: 1013, column: 22, scope: !11436)
!11438 = !DILocation(line: 1013, column: 39, scope: !11436)
!11439 = !DILocation(line: 0, scope: !11436)
!11440 = !DILocation(line: 1013, column: 11, scope: !11427)
!11441 = !DILocation(line: 1015, column: 33, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11436, file: !10786, line: 1014, column: 3)
!11443 = !DILocation(line: 1016, column: 3, scope: !11442)
!11444 = !DILocation(line: 1019, column: 33, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11436, file: !10786, line: 1018, column: 3)
!11446 = !DILocation(line: 1023, column: 12, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11388, file: !10786, line: 1023, column: 6)
!11448 = !DILocation(line: 1023, column: 16, scope: !11447)
!11449 = !DILocation(line: 1029, column: 24, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11447, file: !10786, line: 1028, column: 3)
!11451 = !DILocation(line: 1029, column: 33, scope: !11450)
!11452 = !DILocation(line: 1033, column: 12, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11388, file: !10786, line: 1033, column: 6)
!11454 = !DILocation(line: 1033, column: 15, scope: !11453)
!11455 = !DILocation(line: 1033, column: 30, scope: !11453)
!11456 = !DILocation(line: 1033, column: 6, scope: !11388)
!11457 = !DILocation(line: 1039, column: 28, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11453, file: !10786, line: 1038, column: 3)
!11459 = !DILocation(line: 1039, column: 37, scope: !11458)
!11460 = !DILocation(line: 1041, column: 54, scope: !11388)
!11461 = !DILocation(line: 1041, column: 62, scope: !11388)
!11462 = !DILocation(line: 1041, column: 26, scope: !11388)
!11463 = !DILocation(line: 1041, column: 36, scope: !11388)
!11464 = !DILocation(line: 1042, column: 49, scope: !11388)
!11465 = !DILocation(line: 1042, column: 57, scope: !11388)
!11466 = !DILocation(line: 1042, column: 26, scope: !11388)
!11467 = !DILocation(line: 1042, column: 31, scope: !11388)
!11468 = !DILocation(line: 1043, column: 50, scope: !11388)
!11469 = !DILocation(line: 1043, column: 78, scope: !11388)
!11470 = !DILocation(line: 1043, column: 26, scope: !11388)
!11471 = !DILocation(line: 1043, column: 31, scope: !11388)
!11472 = !DILocation(line: 1044, column: 52, scope: !11388)
!11473 = !DILocation(line: 1044, column: 102, scope: !11388)
!11474 = !DILocation(line: 1044, column: 109, scope: !11388)
!11475 = !DILocation(line: 1044, column: 26, scope: !11388)
!11476 = !DILocation(line: 1044, column: 31, scope: !11388)
!11477 = !DILocation(line: 1045, column: 50, scope: !11388)
!11478 = !DILocation(line: 1045, column: 78, scope: !11388)
!11479 = !DILocation(line: 1045, column: 26, scope: !11388)
!11480 = !DILocation(line: 1045, column: 31, scope: !11388)
!11481 = !DILocation(line: 1046, column: 1, scope: !11388)
!11482 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10786, file: !10786, line: 1056, type: !11483, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11485)
!11483 = !DISubroutineType(types: !11484)
!11484 = !{null, !11149, !831}
!11485 = !{!11486, !11487}
!11486 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11482, file: !10786, line: 1056, type: !11149)
!11487 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11482, file: !10786, line: 1056, type: !831)
!11488 = !DILocation(line: 0, scope: !11482)
!11489 = !DILocation(line: 1059, column: 22, scope: !11482)
!11490 = !DILocation(line: 1059, column: 32, scope: !11482)
!11491 = !DILocation(line: 1062, column: 53, scope: !11482)
!11492 = !DILocation(line: 1062, column: 58, scope: !11482)
!11493 = !DILocation(line: 1062, column: 22, scope: !11482)
!11494 = !DILocation(line: 1062, column: 35, scope: !11482)
!11495 = !DILocation(line: 1065, column: 54, scope: !11482)
!11496 = !DILocation(line: 1065, column: 59, scope: !11482)
!11497 = !DILocation(line: 1065, column: 22, scope: !11482)
!11498 = !DILocation(line: 1065, column: 36, scope: !11482)
!11499 = !DILocation(line: 1068, column: 55, scope: !11482)
!11500 = !DILocation(line: 1068, column: 60, scope: !11482)
!11501 = !DILocation(line: 1068, column: 22, scope: !11482)
!11502 = !DILocation(line: 1068, column: 37, scope: !11482)
!11503 = !DILocation(line: 1071, column: 56, scope: !11482)
!11504 = !DILocation(line: 1071, column: 79, scope: !11482)
!11505 = !DILocation(line: 1071, column: 22, scope: !11482)
!11506 = !DILocation(line: 1071, column: 37, scope: !11482)
!11507 = !DILocation(line: 1074, column: 34, scope: !11482)
!11508 = !DILocation(line: 1074, column: 38, scope: !11482)
!11509 = !DILocation(line: 1074, column: 14, scope: !11482)
!11510 = !DILocation(line: 1075, column: 1, scope: !11482)
!11511 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10786, file: !10786, line: 1082, type: !3169, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11512 = !DILocation(line: 1085, column: 6, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11511, file: !10786, line: 1085, column: 6)
!11514 = !DILocation(line: 1085, column: 6, scope: !11511)
!11515 = !DILocation(line: 1088, column: 5, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11513, file: !10786, line: 1086, column: 3)
!11517 = !DILocation(line: 1091, column: 5, scope: !11516)
!11518 = !DILocation(line: 1092, column: 3, scope: !11516)
!11519 = !DILocation(line: 1093, column: 1, scope: !11511)
!11520 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10786, file: !10786, line: 1099, type: !3169, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !250)
!11521 = !DILocation(line: 1104, column: 1, scope: !11520)
!11522 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11523, file: !11523, line: 257, type: !6208, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11524)
!11523 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11524 = !{!11525}
!11525 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11522, file: !11523, line: 257, type: !162)
!11526 = !DILocation(line: 0, scope: !11522)
!11527 = !DILocation(line: 260, column: 3, scope: !11522)
!11528 = !DILocation(line: 261, column: 1, scope: !11522)
!11529 = distinct !DISubprogram(name: "LL_InitTick", scope: !11530, file: !11530, line: 260, type: !8811, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11531)
!11530 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11531 = !{!11532, !11533}
!11532 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11529, file: !11530, line: 260, type: !162)
!11533 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11529, file: !11530, line: 260, type: !162)
!11534 = !DILocation(line: 0, scope: !11529)
!11535 = !DILocation(line: 263, column: 46, scope: !11529)
!11536 = !DILocation(line: 263, column: 55, scope: !11529)
!11537 = !DILocation(line: 263, column: 18, scope: !11529)
!11538 = !DILocation(line: 264, column: 18, scope: !11529)
!11539 = !DILocation(line: 265, column: 18, scope: !11529)
!11540 = !DILocation(line: 267, column: 1, scope: !11529)
!11541 = distinct !DISubprogram(name: "LL_mDelay", scope: !11523, file: !11523, line: 273, type: !6208, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11542)
!11542 = !{!11543, !11544}
!11543 = !DILocalVariable(name: "Delay", arg: 1, scope: !11541, file: !11523, line: 273, type: !162)
!11544 = !DILocalVariable(name: "tmp", scope: !11541, file: !11523, line: 275, type: !283)
!11545 = !DILocation(line: 0, scope: !11541)
!11546 = !DILocation(line: 275, column: 3, scope: !11541)
!11547 = !DILocation(line: 275, column: 18, scope: !11541)
!11548 = !DILocation(line: 275, column: 33, scope: !11541)
!11549 = !DILocation(line: 277, column: 10, scope: !11541)
!11550 = !DILocation(line: 280, column: 12, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11541, file: !11523, line: 280, column: 6)
!11552 = !DILocation(line: 285, column: 3, scope: !11541)
!11553 = !DILocation(line: 287, column: 18, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !11523, line: 287, column: 8)
!11555 = distinct !DILexicalBlock(scope: !11541, file: !11523, line: 286, column: 3)
!11556 = !DILocation(line: 292, column: 1, scope: !11541)
!11557 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11523, file: !11523, line: 323, type: !6208, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11558)
!11558 = !{!11559}
!11559 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11557, file: !11523, line: 323, type: !162)
!11560 = !DILocation(line: 0, scope: !11557)
!11561 = !DILocation(line: 326, column: 19, scope: !11557)
!11562 = !DILocation(line: 327, column: 1, scope: !11557)
!11563 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11523, file: !11523, line: 338, type: !11564, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11567)
!11564 = !DISubroutineType(types: !11565)
!11565 = !{!11566, !162}
!11566 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !775, line: 201, baseType: !774)
!11567 = !{!11568, !11569, !11570, !11571, !11572}
!11568 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11563, file: !11523, line: 338, type: !162)
!11569 = !DILocalVariable(name: "timeout", scope: !11563, file: !11523, line: 340, type: !162)
!11570 = !DILocalVariable(name: "getlatency", scope: !11563, file: !11523, line: 341, type: !162)
!11571 = !DILocalVariable(name: "latency", scope: !11563, file: !11523, line: 342, type: !162)
!11572 = !DILocalVariable(name: "status", scope: !11563, file: !11523, line: 343, type: !11566)
!11573 = !DILocation(line: 0, scope: !11563)
!11574 = !DILocation(line: 347, column: 21, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11563, file: !11523, line: 347, column: 6)
!11576 = !DILocation(line: 347, column: 6, scope: !11563)
!11577 = !DILocation(line: 353, column: 8, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !11523, line: 353, column: 8)
!11579 = distinct !DILexicalBlock(scope: !11575, file: !11523, line: 352, column: 3)
!11580 = !DILocation(line: 387, column: 8, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !11523, line: 387, column: 8)
!11582 = !DILocation(line: 387, column: 40, scope: !11581)
!11583 = !DILocation(line: 387, column: 8, scope: !11579)
!11584 = !DILocation(line: 407, column: 26, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !11523, line: 407, column: 10)
!11586 = distinct !DILexicalBlock(scope: !11581, file: !11523, line: 388, column: 5)
!11587 = !DILocation(line: 407, column: 55, scope: !11585)
!11588 = !DILocation(line: 413, column: 28, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !11523, line: 413, column: 12)
!11590 = distinct !DILexicalBlock(scope: !11585, file: !11523, line: 412, column: 7)
!11591 = !DILocation(line: 413, column: 57, scope: !11589)
!11592 = !DILocation(line: 420, column: 8, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11579, file: !11523, line: 420, column: 8)
!11594 = !DILocation(line: 420, column: 40, scope: !11593)
!11595 = !DILocation(line: 420, column: 8, scope: !11579)
!11596 = !DILocation(line: 429, column: 26, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11598, file: !11523, line: 429, column: 10)
!11598 = distinct !DILexicalBlock(scope: !11593, file: !11523, line: 421, column: 5)
!11599 = !DILocation(line: 429, column: 55, scope: !11597)
!11600 = !DILocation(line: 435, column: 28, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !11523, line: 435, column: 12)
!11602 = distinct !DILexicalBlock(scope: !11597, file: !11523, line: 434, column: 7)
!11603 = !DILocation(line: 435, column: 57, scope: !11601)
!11604 = !DILocation(line: 0, scope: !11579)
!11605 = !DILocation(line: 444, column: 5, scope: !11579)
!11606 = !DILocation(line: 448, column: 5, scope: !11579)
!11607 = !DILocation(line: 451, column: 18, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11579, file: !11523, line: 449, column: 5)
!11609 = !DILocation(line: 452, column: 12, scope: !11608)
!11610 = !DILocation(line: 453, column: 26, scope: !11579)
!11611 = !DILocation(line: 453, column: 38, scope: !11579)
!11612 = !DILocation(line: 453, column: 5, scope: !11608)
!11613 = distinct !{!11613, !11606, !11614}
!11614 = !DILocation(line: 453, column: 54, scope: !11579)
!11615 = !DILocation(line: 0, scope: !11575)
!11616 = !DILocation(line: 464, column: 3, scope: !11563)
!11617 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11618, file: !11618, line: 519, type: !6198, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11618 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11619 = !DILocation(line: 521, column: 21, scope: !11617)
!11620 = !DILocation(line: 521, column: 3, scope: !11617)
!11621 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5964, file: !5964, line: 1543, type: !6208, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11622)
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "Latency", arg: 1, scope: !11621, file: !5964, line: 1543, type: !162)
!11624 = !DILocation(line: 0, scope: !11621)
!11625 = !DILocation(line: 1545, column: 3, scope: !11621)
!11626 = !DILocation(line: 1546, column: 1, scope: !11621)
!11627 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5964, file: !5964, line: 1569, type: !6198, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11628 = !DILocation(line: 1571, column: 21, scope: !11627)
!11629 = !DILocation(line: 1571, column: 3, scope: !11627)
!11630 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11523, file: !11523, line: 483, type: !11631, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11647)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!11566, !11633, !11640}
!11633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11634, size: 32)
!11634 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11530, line: 114, baseType: !11635)
!11635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11530, line: 94, size: 96, elements: !11636)
!11636 = !{!11637, !11638, !11639}
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11635, file: !11530, line: 96, baseType: !162, size: 32)
!11638 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11635, file: !11530, line: 102, baseType: !162, size: 32, offset: 32)
!11639 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11635, file: !11530, line: 109, baseType: !162, size: 32, offset: 64)
!11640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11641, size: 32)
!11641 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11530, line: 139, baseType: !11642)
!11642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11530, line: 119, size: 96, elements: !11643)
!11643 = !{!11644, !11645, !11646}
!11644 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11642, file: !11530, line: 121, baseType: !162, size: 32)
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11642, file: !11530, line: 127, baseType: !162, size: 32, offset: 32)
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11642, file: !11530, line: 133, baseType: !162, size: 32, offset: 64)
!11647 = !{!11648, !11649, !11650, !11651}
!11648 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11630, file: !11523, line: 483, type: !11633)
!11649 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11630, file: !11523, line: 484, type: !11640)
!11650 = !DILocalVariable(name: "status", scope: !11630, file: !11523, line: 486, type: !11566)
!11651 = !DILocalVariable(name: "pllfreq", scope: !11630, file: !11523, line: 487, type: !162)
!11652 = !DILocation(line: 0, scope: !11630)
!11653 = !DILocation(line: 490, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11630, file: !11523, line: 490, column: 6)
!11655 = !DILocation(line: 490, column: 25, scope: !11654)
!11656 = !DILocation(line: 490, column: 6, scope: !11630)
!11657 = !DILocation(line: 493, column: 15, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !11523, line: 491, column: 3)
!11659 = !DILocation(line: 496, column: 8, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11658, file: !11523, line: 496, column: 8)
!11661 = !DILocation(line: 496, column: 29, scope: !11660)
!11662 = !DILocation(line: 496, column: 8, scope: !11658)
!11663 = !DILocation(line: 498, column: 7, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11660, file: !11523, line: 497, column: 5)
!11665 = !DILocation(line: 499, column: 7, scope: !11664)
!11666 = !DILocation(line: 499, column: 14, scope: !11664)
!11667 = !DILocation(line: 499, column: 35, scope: !11664)
!11668 = distinct !{!11668, !11665, !11669}
!11669 = !DILocation(line: 502, column: 7, scope: !11664)
!11670 = !DILocation(line: 506, column: 76, scope: !11658)
!11671 = !DILocation(line: 506, column: 103, scope: !11658)
!11672 = !DILocation(line: 507, column: 54, scope: !11658)
!11673 = !DILocation(line: 506, column: 5, scope: !11658)
!11674 = !DILocation(line: 510, column: 14, scope: !11658)
!11675 = !DILocation(line: 511, column: 3, scope: !11658)
!11676 = !DILocation(line: 0, scope: !11654)
!11677 = !DILocation(line: 518, column: 3, scope: !11630)
!11678 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11523, file: !11523, line: 642, type: !11679, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11681)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{!11566}
!11681 = !{!11682}
!11682 = !DILocalVariable(name: "status", scope: !11678, file: !11523, line: 644, type: !11566)
!11683 = !DILocation(line: 0, scope: !11678)
!11684 = !DILocation(line: 647, column: 6, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11678, file: !11523, line: 647, column: 6)
!11686 = !DILocation(line: 647, column: 27, scope: !11685)
!11687 = !DILocation(line: 663, column: 6, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11678, file: !11523, line: 663, column: 6)
!11689 = !DILocation(line: 663, column: 30, scope: !11688)
!11690 = !DILocation(line: 663, column: 6, scope: !11678)
!11691 = !DILocation(line: 669, column: 3, scope: !11678)
!11692 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11523, file: !11523, line: 611, type: !11693, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!162, !162, !11633}
!11695 = !{!11696, !11697, !11698}
!11696 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11692, file: !11523, line: 611, type: !162)
!11697 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11692, file: !11523, line: 611, type: !11633)
!11698 = !DILocalVariable(name: "pllfreq", scope: !11692, file: !11523, line: 613, type: !162)
!11699 = !DILocation(line: 0, scope: !11692)
!11700 = !DILocation(line: 622, column: 56, scope: !11692)
!11701 = !DILocation(line: 622, column: 61, scope: !11692)
!11702 = !DILocation(line: 622, column: 32, scope: !11692)
!11703 = !DILocation(line: 626, column: 45, scope: !11692)
!11704 = !DILocation(line: 626, column: 50, scope: !11692)
!11705 = !DILocation(line: 626, column: 21, scope: !11692)
!11706 = !DILocation(line: 630, column: 47, scope: !11692)
!11707 = !DILocation(line: 630, column: 82, scope: !11692)
!11708 = !DILocation(line: 630, column: 21, scope: !11692)
!11709 = !DILocation(line: 633, column: 3, scope: !11692)
!11710 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8153, file: !8153, line: 3007, type: !6198, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11711 = !DILocation(line: 3009, column: 11, scope: !11710)
!11712 = !DILocation(line: 3009, column: 44, scope: !11710)
!11713 = !DILocation(line: 3009, column: 3, scope: !11710)
!11714 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8153, file: !8153, line: 2987, type: !3169, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11715 = !DILocation(line: 2989, column: 3, scope: !11714)
!11716 = !DILocation(line: 2990, column: 1, scope: !11714)
!11717 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8153, file: !8153, line: 4304, type: !8287, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11718)
!11718 = !{!11719, !11720, !11721, !11722}
!11719 = !DILocalVariable(name: "Source", arg: 1, scope: !11717, file: !8153, line: 4304, type: !162)
!11720 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11717, file: !8153, line: 4304, type: !162)
!11721 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11717, file: !8153, line: 4304, type: !162)
!11722 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11717, file: !8153, line: 4304, type: !162)
!11723 = !DILocation(line: 0, scope: !11717)
!11724 = !DILocation(line: 4306, column: 3, scope: !11717)
!11725 = !DILocation(line: 4308, column: 3, scope: !11717)
!11726 = !DILocation(line: 4312, column: 1, scope: !11717)
!11727 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11523, file: !11523, line: 681, type: !11728, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11730)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{!11566, !162, !11640}
!11730 = !{!11731, !11732, !11733, !11734}
!11731 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11727, file: !11523, line: 681, type: !162)
!11732 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11727, file: !11523, line: 681, type: !11640)
!11733 = !DILocalVariable(name: "status", scope: !11727, file: !11523, line: 683, type: !11566)
!11734 = !DILocalVariable(name: "hclk_frequency", scope: !11727, file: !11523, line: 684, type: !162)
!11735 = !DILocation(line: 0, scope: !11727)
!11736 = !DILocation(line: 691, column: 20, scope: !11727)
!11737 = !DILocation(line: 694, column: 6, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11727, file: !11523, line: 694, column: 6)
!11739 = !DILocation(line: 694, column: 22, scope: !11738)
!11740 = !DILocation(line: 694, column: 6, scope: !11727)
!11741 = !DILocation(line: 697, column: 14, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11738, file: !11523, line: 695, column: 3)
!11743 = !DILocation(line: 701, column: 13, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11727, file: !11523, line: 701, column: 6)
!11745 = !DILocation(line: 701, column: 6, scope: !11727)
!11746 = !DILocation(line: 704, column: 5, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11744, file: !11523, line: 702, column: 3)
!11748 = !DILocation(line: 705, column: 5, scope: !11747)
!11749 = !DILocation(line: 705, column: 12, scope: !11747)
!11750 = !DILocation(line: 705, column: 33, scope: !11747)
!11751 = distinct !{!11751, !11748, !11752}
!11752 = !DILocation(line: 708, column: 5, scope: !11747)
!11753 = !DILocation(line: 711, column: 49, scope: !11747)
!11754 = !DILocation(line: 711, column: 5, scope: !11747)
!11755 = !DILocation(line: 712, column: 5, scope: !11747)
!11756 = !DILocation(line: 713, column: 5, scope: !11747)
!11757 = !DILocation(line: 713, column: 12, scope: !11747)
!11758 = !DILocation(line: 713, column: 37, scope: !11747)
!11759 = distinct !{!11759, !11756, !11760}
!11760 = !DILocation(line: 716, column: 5, scope: !11747)
!11761 = !DILocation(line: 719, column: 50, scope: !11747)
!11762 = !DILocation(line: 719, column: 5, scope: !11747)
!11763 = !DILocation(line: 720, column: 50, scope: !11747)
!11764 = !DILocation(line: 720, column: 5, scope: !11747)
!11765 = !DILocation(line: 721, column: 3, scope: !11747)
!11766 = !DILocation(line: 724, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11727, file: !11523, line: 724, column: 6)
!11768 = !DILocation(line: 724, column: 22, scope: !11767)
!11769 = !DILocation(line: 724, column: 6, scope: !11727)
!11770 = !DILocation(line: 727, column: 14, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11767, file: !11523, line: 725, column: 3)
!11772 = !DILocation(line: 728, column: 3, scope: !11771)
!11773 = !DILocation(line: 731, column: 13, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11727, file: !11523, line: 731, column: 6)
!11775 = !DILocation(line: 731, column: 6, scope: !11727)
!11776 = !DILocation(line: 733, column: 5, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11774, file: !11523, line: 732, column: 3)
!11778 = !DILocation(line: 734, column: 3, scope: !11777)
!11779 = !DILocation(line: 736, column: 3, scope: !11727)
!11780 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8153, file: !8153, line: 4184, type: !3169, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11781 = !DILocation(line: 4186, column: 3, scope: !11780)
!11782 = !DILocation(line: 4187, column: 1, scope: !11780)
!11783 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8153, file: !8153, line: 4205, type: !6198, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11784 = !DILocation(line: 4207, column: 11, scope: !11783)
!11785 = !DILocation(line: 4207, column: 44, scope: !11783)
!11786 = !DILocation(line: 4207, column: 3, scope: !11783)
!11787 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8153, file: !8153, line: 3224, type: !6208, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11788)
!11788 = !{!11789}
!11789 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11787, file: !8153, line: 3224, type: !162)
!11790 = !DILocation(line: 0, scope: !11787)
!11791 = !DILocation(line: 3226, column: 3, scope: !11787)
!11792 = !DILocation(line: 3227, column: 1, scope: !11787)
!11793 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8153, file: !8153, line: 3188, type: !6208, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11794)
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "Source", arg: 1, scope: !11793, file: !8153, line: 3188, type: !162)
!11796 = !DILocation(line: 0, scope: !11793)
!11797 = !DILocation(line: 3190, column: 3, scope: !11793)
!11798 = !DILocation(line: 3191, column: 1, scope: !11793)
!11799 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8153, file: !8153, line: 3204, type: !6198, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11800 = !DILocation(line: 3206, column: 21, scope: !11799)
!11801 = !DILocation(line: 3206, column: 3, scope: !11799)
!11802 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8153, file: !8153, line: 3240, type: !6208, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11803)
!11803 = !{!11804}
!11804 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11802, file: !8153, line: 3240, type: !162)
!11805 = !DILocation(line: 0, scope: !11802)
!11806 = !DILocation(line: 3242, column: 3, scope: !11802)
!11807 = !DILocation(line: 3243, column: 1, scope: !11802)
!11808 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8153, file: !8153, line: 3256, type: !6208, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11809)
!11809 = !{!11810}
!11810 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11808, file: !8153, line: 3256, type: !162)
!11811 = !DILocation(line: 0, scope: !11808)
!11812 = !DILocation(line: 3258, column: 3, scope: !11808)
!11813 = !DILocation(line: 3259, column: 1, scope: !11808)
!11814 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8153, file: !8153, line: 5153, type: !6198, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11815 = !DILocation(line: 5155, column: 11, scope: !11814)
!11816 = !DILocation(line: 5155, column: 47, scope: !11814)
!11817 = !DILocation(line: 5155, column: 3, scope: !11814)
!11818 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11523, file: !11523, line: 540, type: !11819, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11821)
!11819 = !DISubroutineType(types: !11820)
!11820 = !{!11566, !162, !162, !11633, !11640}
!11821 = !{!11822, !11823, !11824, !11825, !11826, !11827}
!11822 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11818, file: !11523, line: 540, type: !162)
!11823 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11818, file: !11523, line: 540, type: !162)
!11824 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11818, file: !11523, line: 541, type: !11633)
!11825 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11818, file: !11523, line: 541, type: !11640)
!11826 = !DILocalVariable(name: "status", scope: !11818, file: !11523, line: 543, type: !11566)
!11827 = !DILocalVariable(name: "pllfreq", scope: !11818, file: !11523, line: 544, type: !162)
!11828 = !DILocation(line: 0, scope: !11818)
!11829 = !DILocation(line: 551, column: 6, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11818, file: !11523, line: 551, column: 6)
!11831 = !DILocation(line: 551, column: 25, scope: !11830)
!11832 = !DILocation(line: 551, column: 6, scope: !11818)
!11833 = !DILocation(line: 554, column: 15, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11830, file: !11523, line: 552, column: 3)
!11835 = !DILocation(line: 557, column: 8, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11834, file: !11523, line: 557, column: 8)
!11837 = !DILocation(line: 557, column: 29, scope: !11836)
!11838 = !DILocation(line: 557, column: 8, scope: !11834)
!11839 = !DILocation(line: 560, column: 20, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !11523, line: 560, column: 10)
!11841 = distinct !DILexicalBlock(scope: !11836, file: !11523, line: 558, column: 5)
!11842 = !DILocation(line: 560, column: 10, scope: !11841)
!11843 = !DILocation(line: 562, column: 9, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11840, file: !11523, line: 561, column: 7)
!11845 = !DILocation(line: 563, column: 7, scope: !11844)
!11846 = !DILocation(line: 566, column: 9, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11840, file: !11523, line: 565, column: 7)
!11848 = !DILocation(line: 570, column: 7, scope: !11841)
!11849 = !DILocation(line: 571, column: 7, scope: !11841)
!11850 = !DILocation(line: 571, column: 14, scope: !11841)
!11851 = !DILocation(line: 571, column: 35, scope: !11841)
!11852 = distinct !{!11852, !11849, !11853}
!11853 = !DILocation(line: 574, column: 7, scope: !11841)
!11854 = !DILocation(line: 578, column: 76, scope: !11834)
!11855 = !DILocation(line: 578, column: 103, scope: !11834)
!11856 = !DILocation(line: 579, column: 54, scope: !11834)
!11857 = !DILocation(line: 578, column: 5, scope: !11834)
!11858 = !DILocation(line: 582, column: 14, scope: !11834)
!11859 = !DILocation(line: 583, column: 3, scope: !11834)
!11860 = !DILocation(line: 0, scope: !11830)
!11861 = !DILocation(line: 590, column: 3, scope: !11818)
!11862 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8153, file: !8153, line: 2969, type: !6198, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11863 = !DILocation(line: 2971, column: 11, scope: !11862)
!11864 = !DILocation(line: 2971, column: 44, scope: !11862)
!11865 = !DILocation(line: 2971, column: 3, scope: !11862)
!11866 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8153, file: !8153, line: 2929, type: !3169, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11867 = !DILocation(line: 2931, column: 3, scope: !11866)
!11868 = !DILocation(line: 2932, column: 1, scope: !11866)
!11869 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8153, file: !8153, line: 2939, type: !3169, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11870 = !DILocation(line: 2941, column: 3, scope: !11869)
!11871 = !DILocation(line: 2942, column: 1, scope: !11869)
!11872 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8153, file: !8153, line: 2949, type: !3169, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !250)
!11873 = !DILocation(line: 2951, column: 3, scope: !11872)
!11874 = !DILocation(line: 2952, column: 1, scope: !11872)
!11875 = distinct !DISubprogram(name: "z_device_state_init", scope: !11876, file: !11876, line: 23, type: !3169, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11877)
!11876 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "dev", scope: !11875, file: !11876, line: 25, type: !11879)
!11879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11880, size: 32)
!11880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11881)
!11881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !11882)
!11882 = !{!11883, !11884, !11885, !11886, !11892, !11893}
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11881, file: !120, line: 380, baseType: !123, size: 32)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11881, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11881, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11881, file: !120, line: 386, baseType: !11887, size: 32, offset: 96)
!11887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11888, size: 32)
!11888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !11889)
!11889 = !{!11890, !11891}
!11890 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11888, file: !120, line: 359, baseType: !133, size: 8)
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11888, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11881, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11881, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!11894 = !DILocation(line: 0, scope: !11875)
!11895 = !DILocation(line: 31, column: 1, scope: !11875)
!11896 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11876, file: !11876, line: 33, type: !11897, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11899)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!11879, !123}
!11899 = !{!11900, !11901}
!11900 = !DILocalVariable(name: "name", arg: 1, scope: !11896, file: !11876, line: 33, type: !123)
!11901 = !DILocalVariable(name: "dev", scope: !11896, file: !11876, line: 35, type: !11879)
!11902 = !DILocation(line: 0, scope: !11896)
!11903 = !DILocation(line: 40, column: 12, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 40, column: 6)
!11905 = !DILocation(line: 40, column: 21, scope: !11904)
!11906 = !DILocation(line: 40, column: 25, scope: !11904)
!11907 = !DILocation(line: 40, column: 33, scope: !11904)
!11908 = !DILocation(line: 40, column: 6, scope: !11896)
!11909 = !DILocation(line: 55, column: 2, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 55, column: 2)
!11911 = !DILocation(line: 50, column: 7, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !11876, line: 50, column: 7)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !11876, line: 49, column: 57)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !11876, line: 49, column: 2)
!11915 = distinct !DILexicalBlock(scope: !11896, file: !11876, line: 49, column: 2)
!11916 = !DILocation(line: 50, column: 30, scope: !11912)
!11917 = !DILocation(line: 50, column: 39, scope: !11912)
!11918 = !DILocation(line: 50, column: 44, scope: !11912)
!11919 = !DILocation(line: 50, column: 7, scope: !11913)
!11920 = !DILocation(line: 49, column: 53, scope: !11914)
!11921 = !DILocation(line: 49, column: 33, scope: !11914)
!11922 = !DILocation(line: 49, column: 2, scope: !11915)
!11923 = distinct !{!11923, !11922, !11924}
!11924 = !DILocation(line: 53, column: 2, scope: !11915)
!11925 = !DILocation(line: 56, column: 7, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11876, line: 56, column: 7)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !11876, line: 55, column: 57)
!11928 = distinct !DILexicalBlock(scope: !11910, file: !11876, line: 55, column: 2)
!11929 = !DILocation(line: 56, column: 30, scope: !11926)
!11930 = !DILocation(line: 56, column: 52, scope: !11926)
!11931 = !DILocation(line: 56, column: 34, scope: !11926)
!11932 = !DILocation(line: 56, column: 58, scope: !11926)
!11933 = !DILocation(line: 56, column: 7, scope: !11927)
!11934 = !DILocation(line: 55, column: 53, scope: !11928)
!11935 = !DILocation(line: 55, column: 33, scope: !11928)
!11936 = distinct !{!11936, !11909, !11937}
!11937 = !DILocation(line: 59, column: 2, scope: !11910)
!11938 = !DILocation(line: 62, column: 1, scope: !11896)
!11939 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11876, file: !11876, line: 93, type: !11940, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11942)
!11940 = !DISubroutineType(types: !11941)
!11941 = !{!136, !11879}
!11942 = !{!11943}
!11943 = !DILocalVariable(name: "dev", arg: 1, scope: !11939, file: !11876, line: 93, type: !11879)
!11944 = !DILocation(line: 0, scope: !11939)
!11945 = !DILocation(line: 99, column: 10, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11939, file: !11876, line: 99, column: 6)
!11947 = !DILocation(line: 99, column: 6, scope: !11939)
!11948 = !DILocation(line: 103, column: 14, scope: !11939)
!11949 = !DILocation(line: 103, column: 21, scope: !11939)
!11950 = !DILocation(line: 103, column: 33, scope: !11939)
!11951 = !DILocation(line: 103, column: 49, scope: !11939)
!11952 = !DILocation(line: 103, column: 58, scope: !11939)
!11953 = !DILocation(line: 104, column: 1, scope: !11939)
!11954 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11876, file: !11876, line: 87, type: !11955, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11958)
!11955 = !DISubroutineType(types: !11956)
!11956 = !{!252, !11957}
!11957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11879, size: 32)
!11958 = !{!11959}
!11959 = !DILocalVariable(name: "devices", arg: 1, scope: !11954, file: !11876, line: 87, type: !11957)
!11960 = !DILocation(line: 0, scope: !11954)
!11961 = !DILocation(line: 89, column: 11, scope: !11954)
!11962 = !DILocation(line: 90, column: 2, scope: !11954)
!11963 = distinct !DISubprogram(name: "device_required_foreach", scope: !11876, file: !11876, line: 125, type: !11964, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11970)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!107, !11879, !11966, !102}
!11966 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !11967)
!11967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 32)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!107, !11879, !102}
!11970 = !{!11971, !11972, !11973, !11974, !11975}
!11971 = !DILocalVariable(name: "dev", arg: 1, scope: !11963, file: !11876, line: 125, type: !11879)
!11972 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11963, file: !11876, line: 126, type: !11966)
!11973 = !DILocalVariable(name: "context", arg: 3, scope: !11963, file: !11876, line: 127, type: !102)
!11974 = !DILocalVariable(name: "handle_count", scope: !11963, file: !11876, line: 129, type: !252)
!11975 = !DILocalVariable(name: "handles", scope: !11963, file: !11876, line: 130, type: !139)
!11976 = !DILocation(line: 0, scope: !11963)
!11977 = !DILocation(line: 129, column: 2, scope: !11963)
!11978 = !DILocation(line: 129, column: 9, scope: !11963)
!11979 = !DILocation(line: 130, column: 35, scope: !11963)
!11980 = !DILocation(line: 132, column: 33, scope: !11963)
!11981 = !DILocation(line: 132, column: 9, scope: !11963)
!11982 = !DILocation(line: 133, column: 1, scope: !11963)
!11983 = !DILocation(line: 132, column: 2, scope: !11963)
!11984 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !11985, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!139, !11879, !2521}
!11987 = !{!11988, !11989, !11990, !11991}
!11988 = !DILocalVariable(name: "dev", arg: 1, scope: !11984, file: !120, line: 493, type: !11879)
!11989 = !DILocalVariable(name: "count", arg: 2, scope: !11984, file: !120, line: 493, type: !2521)
!11990 = !DILocalVariable(name: "rv", scope: !11984, file: !120, line: 495, type: !139)
!11991 = !DILocalVariable(name: "i", scope: !11992, file: !120, line: 498, type: !252)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !120, line: 497, column: 18)
!11993 = distinct !DILexicalBlock(scope: !11984, file: !120, line: 497, column: 6)
!11994 = !DILocation(line: 0, scope: !11984)
!11995 = !DILocation(line: 495, column: 35, scope: !11984)
!11996 = !DILocation(line: 497, column: 9, scope: !11993)
!11997 = !DILocation(line: 497, column: 6, scope: !11984)
!11998 = !DILocation(line: 0, scope: !11992)
!11999 = !DILocation(line: 500, column: 11, scope: !11992)
!12000 = !DILocation(line: 500, column: 40, scope: !11992)
!12001 = !DILocation(line: 502, column: 4, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11992, file: !120, line: 501, column: 40)
!12003 = distinct !{!12003, !12004, !12005}
!12004 = !DILocation(line: 500, column: 3, scope: !11992)
!12005 = !DILocation(line: 503, column: 3, scope: !11992)
!12006 = !DILocation(line: 504, column: 10, scope: !11992)
!12007 = !DILocation(line: 505, column: 2, scope: !11992)
!12008 = !DILocation(line: 507, column: 2, scope: !11984)
!12009 = distinct !DISubprogram(name: "device_visitor", scope: !11876, file: !11876, line: 106, type: !12010, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12012)
!12010 = !DISubroutineType(types: !12011)
!12011 = !{!107, !139, !252, !11966, !102}
!12012 = !{!12013, !12014, !12015, !12016, !12017, !12019, !12022, !12023}
!12013 = !DILocalVariable(name: "handles", arg: 1, scope: !12009, file: !11876, line: 106, type: !139)
!12014 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12009, file: !11876, line: 107, type: !252)
!12015 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12009, file: !11876, line: 108, type: !11966)
!12016 = !DILocalVariable(name: "context", arg: 4, scope: !12009, file: !11876, line: 109, type: !102)
!12017 = !DILocalVariable(name: "i", scope: !12018, file: !11876, line: 112, type: !252)
!12018 = distinct !DILexicalBlock(scope: !12009, file: !11876, line: 112, column: 2)
!12019 = !DILocalVariable(name: "dh", scope: !12020, file: !11876, line: 113, type: !141)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !11876, line: 112, column: 44)
!12021 = distinct !DILexicalBlock(scope: !12018, file: !11876, line: 112, column: 2)
!12022 = !DILocalVariable(name: "rdev", scope: !12020, file: !11876, line: 114, type: !11879)
!12023 = !DILocalVariable(name: "rc", scope: !12020, file: !11876, line: 115, type: !107)
!12024 = !DILocation(line: 0, scope: !12009)
!12025 = !DILocation(line: 0, scope: !12018)
!12026 = !DILocation(line: 112, column: 23, scope: !12021)
!12027 = !DILocation(line: 112, column: 2, scope: !12018)
!12028 = distinct !{!12028, !12027, !12029}
!12029 = !DILocation(line: 120, column: 2, scope: !12018)
!12030 = !DILocation(line: 113, column: 24, scope: !12020)
!12031 = !DILocation(line: 0, scope: !12020)
!12032 = !DILocation(line: 114, column: 31, scope: !12020)
!12033 = !DILocation(line: 115, column: 12, scope: !12020)
!12034 = !DILocation(line: 117, column: 10, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12020, file: !11876, line: 117, column: 7)
!12036 = !DILocation(line: 112, column: 39, scope: !12021)
!12037 = !DILocation(line: 123, column: 1, scope: !12009)
!12038 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !12039, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12041)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!11879, !141}
!12041 = !{!12042, !12043, !12044}
!12042 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12038, file: !120, line: 439, type: !141)
!12043 = !DILocalVariable(name: "dev", scope: !12038, file: !120, line: 443, type: !11879)
!12044 = !DILocalVariable(name: "numdev", scope: !12038, file: !120, line: 444, type: !252)
!12045 = !DILocation(line: 0, scope: !12038)
!12046 = !DILocation(line: 446, column: 7, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12038, file: !120, line: 446, column: 6)
!12048 = !DILocation(line: 446, column: 18, scope: !12047)
!12049 = !DILocation(line: 446, column: 23, scope: !12047)
!12050 = !DILocation(line: 450, column: 2, scope: !12038)
!12051 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11876, file: !11876, line: 135, type: !11964, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12052)
!12052 = !{!12053, !12054, !12055, !12056, !12057}
!12053 = !DILocalVariable(name: "dev", arg: 1, scope: !12051, file: !11876, line: 135, type: !11879)
!12054 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12051, file: !11876, line: 136, type: !11966)
!12055 = !DILocalVariable(name: "context", arg: 3, scope: !12051, file: !11876, line: 137, type: !102)
!12056 = !DILocalVariable(name: "handle_count", scope: !12051, file: !11876, line: 139, type: !252)
!12057 = !DILocalVariable(name: "handles", scope: !12051, file: !11876, line: 140, type: !139)
!12058 = !DILocation(line: 0, scope: !12051)
!12059 = !DILocation(line: 139, column: 2, scope: !12051)
!12060 = !DILocation(line: 139, column: 9, scope: !12051)
!12061 = !DILocation(line: 140, column: 35, scope: !12051)
!12062 = !DILocation(line: 142, column: 33, scope: !12051)
!12063 = !DILocation(line: 142, column: 9, scope: !12051)
!12064 = !DILocation(line: 143, column: 1, scope: !12051)
!12065 = !DILocation(line: 142, column: 2, scope: !12051)
!12066 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !11985, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12067)
!12067 = !{!12068, !12069, !12070, !12071, !12072}
!12068 = !DILocalVariable(name: "dev", arg: 1, scope: !12066, file: !120, line: 573, type: !11879)
!12069 = !DILocalVariable(name: "count", arg: 2, scope: !12066, file: !120, line: 573, type: !2521)
!12070 = !DILocalVariable(name: "rv", scope: !12066, file: !120, line: 575, type: !139)
!12071 = !DILocalVariable(name: "region", scope: !12066, file: !120, line: 576, type: !252)
!12072 = !DILocalVariable(name: "i", scope: !12066, file: !120, line: 577, type: !252)
!12073 = !DILocation(line: 0, scope: !12066)
!12074 = !DILocation(line: 575, column: 35, scope: !12066)
!12075 = !DILocation(line: 579, column: 9, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12066, file: !120, line: 579, column: 6)
!12077 = !DILocation(line: 579, column: 6, scope: !12066)
!12078 = !DILocation(line: 582, column: 8, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !120, line: 582, column: 8)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !120, line: 581, column: 23)
!12081 = distinct !DILexicalBlock(scope: !12076, file: !120, line: 579, column: 18)
!12082 = !DILocation(line: 582, column: 12, scope: !12079)
!12083 = !DILocation(line: 585, column: 6, scope: !12080)
!12084 = !DILocation(line: 0, scope: !12081)
!12085 = !DILocation(line: 581, column: 17, scope: !12081)
!12086 = !DILocation(line: 581, column: 3, scope: !12081)
!12087 = !DILocation(line: 588, column: 10, scope: !12081)
!12088 = !DILocation(line: 588, column: 16, scope: !12081)
!12089 = !DILocation(line: 589, column: 4, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12081, file: !120, line: 588, column: 39)
!12091 = !DILocation(line: 588, column: 3, scope: !12081)
!12092 = distinct !{!12092, !12091, !12093}
!12093 = !DILocation(line: 590, column: 3, scope: !12081)
!12094 = !DILocation(line: 591, column: 10, scope: !12081)
!12095 = !DILocation(line: 592, column: 2, scope: !12081)
!12096 = !DILocation(line: 575, column: 25, scope: !12066)
!12097 = !DILocation(line: 594, column: 2, scope: !12066)
!12098 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1880, file: !1880, line: 49, type: !12099, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1877, retainedNodes: !250)
!12099 = !DISubroutineType(types: !12100)
!12100 = !{!2514}
!12101 = !DILocation(line: 51, column: 10, scope: !12098)
!12102 = !DILocation(line: 51, column: 20, scope: !12098)
!12103 = !DILocation(line: 51, column: 2, scope: !12098)
!12104 = distinct !DISubprogram(name: "coredump", scope: !3032, file: !3032, line: 209, type: !12105, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12251)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{null, !32, !12107, !12151}
!12107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12108, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12109)
!12109 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2646, line: 141, baseType: !12110)
!12110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2646, line: 97, size: 256, elements: !12111)
!12111 = !{!12112}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12110, file: !2646, line: 107, baseType: !12113, size: 256)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2646, line: 98, size: 256, elements: !12114)
!12114 = !{!12115, !12120, !12125, !12130, !12135, !12140, !12145, !12150}
!12115 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 99, baseType: !12116, size: 32)
!12116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 99, size: 32, elements: !12117)
!12117 = !{!12118, !12119}
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12116, file: !2646, line: 99, baseType: !162, size: 32)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12116, file: !2646, line: 99, baseType: !162, size: 32)
!12120 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 100, baseType: !12121, size: 32, offset: 32)
!12121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 100, size: 32, elements: !12122)
!12122 = !{!12123, !12124}
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12121, file: !2646, line: 100, baseType: !162, size: 32)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12121, file: !2646, line: 100, baseType: !162, size: 32)
!12125 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 101, baseType: !12126, size: 32, offset: 64)
!12126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 101, size: 32, elements: !12127)
!12127 = !{!12128, !12129}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12126, file: !2646, line: 101, baseType: !162, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12126, file: !2646, line: 101, baseType: !162, size: 32)
!12130 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 102, baseType: !12131, size: 32, offset: 96)
!12131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 102, size: 32, elements: !12132)
!12132 = !{!12133, !12134}
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12131, file: !2646, line: 102, baseType: !162, size: 32)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12131, file: !2646, line: 102, baseType: !162, size: 32)
!12135 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 103, baseType: !12136, size: 32, offset: 128)
!12136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 103, size: 32, elements: !12137)
!12137 = !{!12138, !12139}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12136, file: !2646, line: 103, baseType: !162, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12136, file: !2646, line: 103, baseType: !162, size: 32)
!12140 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 104, baseType: !12141, size: 32, offset: 160)
!12141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 104, size: 32, elements: !12142)
!12142 = !{!12143, !12144}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12141, file: !2646, line: 104, baseType: !162, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12141, file: !2646, line: 104, baseType: !162, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_member, scope: !12113, file: !2646, line: 105, baseType: !12146, size: 32, offset: 192)
!12146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12113, file: !2646, line: 105, size: 32, elements: !12147)
!12147 = !{!12148, !12149}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12146, file: !2646, line: 105, baseType: !162, size: 32)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12146, file: !2646, line: 105, baseType: !162, size: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12113, file: !2646, line: 106, baseType: !162, size: 32, offset: 224)
!12151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12152, size: 32)
!12152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !12153)
!12153 = !{!12154, !12212, !12224, !12225, !12226, !12227, !12233, !12246}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12152, file: !359, line: 247, baseType: !12155, size: 384)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !12156)
!12156 = !{!12157, !12181, !12188, !12189, !12190, !12199, !12200, !12201}
!12157 = !DIDerivedType(tag: DW_TAG_member, scope: !12155, file: !359, line: 60, baseType: !12158, size: 64)
!12158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12155, file: !359, line: 60, size: 64, elements: !12159)
!12159 = !{!12160, !12175}
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12158, file: !359, line: 61, baseType: !12161, size: 64)
!12161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12162)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12163)
!12163 = !{!12164, !12170}
!12164 = !DIDerivedType(tag: DW_TAG_member, scope: !12162, file: !233, line: 38, baseType: !12165, size: 32)
!12165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12162, file: !233, line: 38, size: 32, elements: !12166)
!12166 = !{!12167, !12169}
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12165, file: !233, line: 39, baseType: !12168, size: 32)
!12168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12162, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12165, file: !233, line: 40, baseType: !12168, size: 32)
!12170 = !DIDerivedType(tag: DW_TAG_member, scope: !12162, file: !233, line: 42, baseType: !12171, size: 32, offset: 32)
!12171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12162, file: !233, line: 42, size: 32, elements: !12172)
!12172 = !{!12173, !12174}
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12171, file: !233, line: 43, baseType: !12168, size: 32)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12171, file: !233, line: 44, baseType: !12168, size: 32)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12158, file: !359, line: 62, baseType: !12176, size: 64)
!12176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !12177)
!12177 = !{!12178}
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12176, file: !384, line: 50, baseType: !12179, size: 64)
!12179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12180, size: 64, elements: !389)
!12180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12176, size: 32)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12155, file: !359, line: 68, baseType: !12182, size: 32, offset: 64)
!12182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12183, size: 32)
!12183 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12184)
!12184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12185)
!12185 = !{!12186}
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12184, file: !228, line: 232, baseType: !12187, size: 64)
!12187 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12162)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12155, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12155, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!12190 = !DIDerivedType(tag: DW_TAG_member, scope: !12155, file: !359, line: 90, baseType: !12191, size: 16, offset: 112)
!12191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12155, file: !359, line: 90, size: 16, elements: !12192)
!12192 = !{!12193, !12198}
!12193 = !DIDerivedType(tag: DW_TAG_member, scope: !12191, file: !359, line: 91, baseType: !12194, size: 16)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12191, file: !359, line: 91, size: 16, elements: !12195)
!12195 = !{!12196, !12197}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12194, file: !359, line: 96, baseType: !407, size: 8)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12194, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12191, file: !359, line: 100, baseType: !411, size: 16)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12155, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12155, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12155, file: !359, line: 131, baseType: !12202, size: 192, offset: 192)
!12202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12203)
!12203 = !{!12204, !12205, !12211}
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12202, file: !228, line: 245, baseType: !12161, size: 64)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12202, file: !228, line: 246, baseType: !12206, size: 32, offset: 64)
!12206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12207)
!12207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12208, size: 32)
!12208 = !DISubroutineType(types: !12209)
!12209 = !{null, !12210}
!12210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12202, size: 32)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12202, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12152, file: !359, line: 250, baseType: !12213, size: 288, offset: 384)
!12213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !12214)
!12214 = !{!12215, !12216, !12217, !12218, !12219, !12220, !12221, !12222, !12223}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12213, file: !428, line: 26, baseType: !162, size: 32)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12213, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12213, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12213, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12213, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12213, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12213, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12213, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12213, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12152, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12152, file: !359, line: 256, baseType: !12183, size: 64, offset: 704)
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12152, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12152, file: !359, line: 300, baseType: !12228, size: 96, offset: 800)
!12228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !12229)
!12229 = !{!12230, !12231, !12232}
!12230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12228, file: !359, line: 153, baseType: !22, size: 32)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12228, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12228, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12152, file: !359, line: 325, baseType: !12234, size: 32, offset: 896)
!12234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12235, size: 32)
!12235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12236)
!12236 = !{!12237, !12243, !12244}
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12235, file: !224, line: 5074, baseType: !12238, size: 96)
!12238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !12239)
!12239 = !{!12240, !12241, !12242}
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12238, file: !454, line: 57, baseType: !457, size: 32)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12238, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12238, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12235, file: !224, line: 5075, baseType: !12183, size: 64, offset: 96)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12235, file: !224, line: 5076, baseType: !12245, offset: 160)
!12245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12152, file: !359, line: 343, baseType: !12247, size: 64, offset: 928)
!12247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !12248)
!12248 = !{!12249, !12250}
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12247, file: !428, line: 63, baseType: !162, size: 32)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12247, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!12251 = !{!12252, !12253, !12254}
!12252 = !DILocalVariable(name: "reason", arg: 1, scope: !12104, file: !3032, line: 209, type: !32)
!12253 = !DILocalVariable(name: "esf", arg: 2, scope: !12104, file: !3032, line: 209, type: !12107)
!12254 = !DILocalVariable(name: "thread", arg: 3, scope: !12104, file: !3032, line: 210, type: !12151)
!12255 = !DILocation(line: 0, scope: !12104)
!12256 = !DILocation(line: 212, column: 1, scope: !12104)
!12257 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3032, file: !3032, line: 214, type: !12258, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12260)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{null, !22, !22}
!12260 = !{!12261, !12262}
!12261 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12257, file: !3032, line: 214, type: !22)
!12262 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12257, file: !3032, line: 214, type: !22)
!12263 = !DILocation(line: 0, scope: !12257)
!12264 = !DILocation(line: 216, column: 1, scope: !12257)
!12265 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3032, file: !3032, line: 218, type: !12266, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12268)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{null, !182, !252}
!12268 = !{!12269, !12270}
!12269 = !DILocalVariable(name: "buf", arg: 1, scope: !12265, file: !3032, line: 218, type: !182)
!12270 = !DILocalVariable(name: "buflen", arg: 2, scope: !12265, file: !3032, line: 218, type: !252)
!12271 = !DILocation(line: 0, scope: !12265)
!12272 = !DILocation(line: 220, column: 1, scope: !12265)
!12273 = distinct !DISubprogram(name: "coredump_query", scope: !3032, file: !3032, line: 222, type: !12274, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12276)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!107, !3031, !102}
!12276 = !{!12277, !12278}
!12277 = !DILocalVariable(name: "query_id", arg: 1, scope: !12273, file: !3032, line: 222, type: !3031)
!12278 = !DILocalVariable(name: "arg", arg: 2, scope: !12273, file: !3032, line: 222, type: !102)
!12279 = !DILocation(line: 0, scope: !12273)
!12280 = !DILocation(line: 224, column: 2, scope: !12273)
!12281 = distinct !DISubprogram(name: "coredump_cmd", scope: !3032, file: !3032, line: 227, type: !12282, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12284)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{!107, !3038, !102}
!12284 = !{!12285, !12286}
!12285 = !DILocalVariable(name: "query_id", arg: 1, scope: !12281, file: !3032, line: 227, type: !3038)
!12286 = !DILocalVariable(name: "arg", arg: 2, scope: !12281, file: !3032, line: 227, type: !102)
!12287 = !DILocation(line: 0, scope: !12281)
!12288 = !DILocation(line: 229, column: 2, scope: !12281)
!12289 = distinct !DISubprogram(name: "arch_system_halt", scope: !12290, file: !12290, line: 23, type: !5954, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12291)
!12290 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12291 = !{!12292}
!12292 = !DILocalVariable(name: "reason", arg: 1, scope: !12289, file: !12290, line: 23, type: !32)
!12293 = !DILocation(line: 0, scope: !12289)
!12294 = !DILocation(line: 55, column: 2, scope: !12295, inlinedAt: !12299)
!12295 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12296)
!12296 = !{!12297, !12298}
!12297 = !DILocalVariable(name: "key", scope: !12295, file: !5943, line: 44, type: !32)
!12298 = !DILocalVariable(name: "tmp", scope: !12295, file: !5943, line: 53, type: !32)
!12299 = distinct !DILocation(line: 31, column: 8, scope: !12289)
!12300 = !{i64 2038738}
!12301 = !DILocation(line: 0, scope: !12295, inlinedAt: !12299)
!12302 = !DILocation(line: 32, column: 2, scope: !12289)
!12303 = !DILocation(line: 32, column: 2, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !12290, line: 32, column: 2)
!12305 = distinct !DILexicalBlock(scope: !12289, file: !12290, line: 32, column: 2)
!12306 = distinct !{!12306, !12307, !12308}
!12307 = !DILocation(line: 32, column: 2, scope: !12305)
!12308 = !DILocation(line: 34, column: 2, scope: !12305)
!12309 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12290, file: !12290, line: 39, type: !12310, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12312)
!12310 = !DISubroutineType(types: !12311)
!12311 = !{null, !32, !12107}
!12312 = !{!12313, !12314}
!12313 = !DILocalVariable(name: "reason", arg: 1, scope: !12309, file: !12290, line: 39, type: !32)
!12314 = !DILocalVariable(name: "esf", arg: 2, scope: !12309, file: !12290, line: 40, type: !12107)
!12315 = !DILocation(line: 0, scope: !12309)
!12316 = !DILocation(line: 46, column: 2, scope: !12309)
!12317 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12290, file: !12290, line: 81, type: !5954, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12318)
!12318 = !{!12319}
!12319 = !DILocalVariable(name: "reason", arg: 1, scope: !12317, file: !12290, line: 81, type: !32)
!12320 = !DILocation(line: 0, scope: !12317)
!12321 = !DILocation(line: 83, column: 2, scope: !12317)
!12322 = distinct !DISubprogram(name: "z_fatal_error", scope: !12290, file: !12290, line: 96, type: !12310, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12323)
!12323 = !{!12324, !12325, !12326, !12327}
!12324 = !DILocalVariable(name: "reason", arg: 1, scope: !12322, file: !12290, line: 96, type: !32)
!12325 = !DILocalVariable(name: "esf", arg: 2, scope: !12322, file: !12290, line: 96, type: !12107)
!12326 = !DILocalVariable(name: "key", scope: !12322, file: !12290, line: 102, type: !32)
!12327 = !DILocalVariable(name: "thread", scope: !12322, file: !12290, line: 103, type: !12151)
!12328 = !DILocation(line: 0, scope: !12322)
!12329 = !DILocation(line: 55, column: 2, scope: !12295, inlinedAt: !12330)
!12330 = distinct !DILocation(line: 102, column: 21, scope: !12322)
!12331 = !DILocation(line: 0, scope: !12295, inlinedAt: !12330)
!12332 = !DILocation(line: 119, column: 11, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 119, column: 6)
!12334 = !DILocation(line: 119, column: 20, scope: !12333)
!12335 = !DILocation(line: 131, column: 2, scope: !12322)
!12336 = !DILocation(line: 151, column: 7, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !12290, line: 146, column: 32)
!12338 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 146, column: 6)
!12339 = !DILocation(line: 151, column: 21, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12337, file: !12290, line: 151, column: 7)
!12341 = !DILocation(line: 104, column: 4, scope: !12322)
!12342 = !DILocalVariable(name: "key", arg: 1, scope: !12343, file: !5943, line: 84, type: !32)
!12343 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12344)
!12344 = !{!12342}
!12345 = !DILocation(line: 0, scope: !12343, inlinedAt: !12346)
!12346 = distinct !DILocation(line: 186, column: 2, scope: !12322)
!12347 = !DILocation(line: 95, column: 2, scope: !12343, inlinedAt: !12346)
!12348 = !{i64 2039555}
!12349 = !DILocation(line: 189, column: 3, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !12290, line: 188, column: 41)
!12351 = distinct !DILexicalBlock(scope: !12322, file: !12290, line: 188, column: 6)
!12352 = !DILocation(line: 191, column: 1, scope: !12322)
!12353 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !12354, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !250)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{!12356}
!12356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !12151)
!12357 = !DILocation(line: 535, column: 9, scope: !12353)
!12358 = !DILocation(line: 535, column: 2, scope: !12353)
!12359 = distinct !DISubprogram(name: "k_thread_abort", scope: !3354, file: !3354, line: 188, type: !12360, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !12362)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{null, !12356}
!12362 = !{!12363}
!12363 = !DILocalVariable(name: "thread", arg: 1, scope: !12359, file: !3354, line: 188, type: !12356)
!12364 = !DILocation(line: 0, scope: !12359)
!12365 = !DILocation(line: 197, column: 2, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12359, file: !3354, line: 197, column: 2)
!12367 = !{i64 2154150466}
!12368 = !DILocation(line: 198, column: 2, scope: !12359)
!12369 = !DILocation(line: 199, column: 1, scope: !12359)
!12370 = distinct !DISubprogram(name: "z_current_get", scope: !3354, file: !3354, line: 173, type: !12354, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !250)
!12371 = !DILocation(line: 180, column: 2, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12370, file: !3354, line: 180, column: 2)
!12373 = !{i64 2154150398}
!12374 = !DILocation(line: 181, column: 9, scope: !12370)
!12375 = !DILocation(line: 181, column: 2, scope: !12370)
!12376 = distinct !DISubprogram(name: "z_early_memset", scope: !1887, file: !1887, line: 108, type: !12377, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12379)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{null, !102, !107, !252}
!12379 = !{!12380, !12381, !12382}
!12380 = !DILocalVariable(name: "dst", arg: 1, scope: !12376, file: !1887, line: 108, type: !102)
!12381 = !DILocalVariable(name: "c", arg: 2, scope: !12376, file: !1887, line: 108, type: !107)
!12382 = !DILocalVariable(name: "n", arg: 3, scope: !12376, file: !1887, line: 108, type: !252)
!12383 = !DILocation(line: 0, scope: !12376)
!12384 = !DILocation(line: 110, column: 9, scope: !12376)
!12385 = !DILocation(line: 111, column: 1, scope: !12376)
!12386 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1887, file: !1887, line: 121, type: !12387, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12389)
!12387 = !DISubroutineType(types: !12388)
!12388 = !{null, !102, !13, !252}
!12389 = !{!12390, !12391, !12392}
!12390 = !DILocalVariable(name: "dst", arg: 1, scope: !12386, file: !1887, line: 121, type: !102)
!12391 = !DILocalVariable(name: "src", arg: 2, scope: !12386, file: !1887, line: 121, type: !13)
!12392 = !DILocalVariable(name: "n", arg: 3, scope: !12386, file: !1887, line: 121, type: !252)
!12393 = !DILocation(line: 0, scope: !12386)
!12394 = !DILocation(line: 123, column: 9, scope: !12386)
!12395 = !DILocation(line: 124, column: 1, scope: !12386)
!12396 = distinct !DISubprogram(name: "z_bss_zero", scope: !1887, file: !1887, line: 132, type: !3169, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !250)
!12397 = !DILocation(line: 143, column: 2, scope: !12396)
!12398 = !DILocation(line: 168, column: 1, scope: !12396)
!12399 = distinct !DISubprogram(name: "z_init_cpu", scope: !1887, file: !1887, line: 372, type: !7761, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12400)
!12400 = !{!12401}
!12401 = !DILocalVariable(name: "id", arg: 1, scope: !12399, file: !1887, line: 372, type: !107)
!12402 = !DILocation(line: 0, scope: !12399)
!12403 = !DILocation(line: 374, column: 2, scope: !12399)
!12404 = !DILocation(line: 375, column: 34, scope: !12399)
!12405 = !DILocation(line: 375, column: 19, scope: !12399)
!12406 = !DILocation(line: 375, column: 31, scope: !12399)
!12407 = !DILocation(line: 376, column: 24, scope: !12399)
!12408 = !DILocation(line: 376, column: 19, scope: !12399)
!12409 = !DILocation(line: 376, column: 22, scope: !12399)
!12410 = !DILocation(line: 378, column: 26, scope: !12399)
!12411 = !DILocation(line: 378, column: 4, scope: !12399)
!12412 = !DILocation(line: 378, column: 50, scope: !12399)
!12413 = !DILocation(line: 377, column: 19, scope: !12399)
!12414 = !DILocation(line: 377, column: 29, scope: !12399)
!12415 = !DILocation(line: 384, column: 1, scope: !12399)
!12416 = distinct !DISubprogram(name: "init_idle_thread", scope: !1887, file: !1887, line: 343, type: !7761, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12417)
!12417 = !{!12418, !12419, !12420, !12423}
!12418 = !DILocalVariable(name: "i", arg: 1, scope: !12416, file: !1887, line: 343, type: !107)
!12419 = !DILocalVariable(name: "thread", scope: !12416, file: !1887, line: 345, type: !1979)
!12420 = !DILocalVariable(name: "stack", scope: !12416, file: !1887, line: 346, type: !12421)
!12421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12422, size: 32)
!12422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3710, line: 44, baseType: !2093)
!12423 = !DILocalVariable(name: "tname", scope: !12416, file: !1887, line: 358, type: !256)
!12424 = !DILocation(line: 0, scope: !12416)
!12425 = !DILocation(line: 345, column: 29, scope: !12416)
!12426 = !DILocation(line: 346, column: 28, scope: !12416)
!12427 = !DILocation(line: 362, column: 37, scope: !12416)
!12428 = !DILocation(line: 362, column: 36, scope: !12416)
!12429 = !DILocation(line: 361, column: 2, scope: !12416)
!12430 = !DILocation(line: 365, column: 2, scope: !12416)
!12431 = !DILocation(line: 370, column: 1, scope: !12416)
!12432 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2094, file: !2094, line: 331, type: !12433, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12435)
!12433 = !DISubroutineType(types: !12434)
!12434 = !{!256, !12421}
!12435 = !{!12436}
!12436 = !DILocalVariable(name: "sym", arg: 1, scope: !12432, file: !2094, line: 331, type: !12421)
!12437 = !DILocation(line: 0, scope: !12432)
!12438 = !DILocation(line: 333, column: 21, scope: !12432)
!12439 = !DILocation(line: 333, column: 2, scope: !12432)
!12440 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12441, file: !12441, line: 155, type: !12442, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12444)
!12441 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12442 = !DISubroutineType(types: !12443)
!12443 = !{null, !1979}
!12444 = !{!12445}
!12445 = !DILocalVariable(name: "thread", arg: 1, scope: !12440, file: !12441, line: 155, type: !1979)
!12446 = !DILocation(line: 0, scope: !12440)
!12447 = !DILocation(line: 157, column: 15, scope: !12440)
!12448 = !DILocation(line: 157, column: 28, scope: !12440)
!12449 = !DILocation(line: 158, column: 1, scope: !12440)
!12450 = distinct !DISubprogram(name: "z_cstart", scope: !1887, file: !1887, line: 501, type: !3169, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12451)
!12451 = !{!12452}
!12452 = !DILocalVariable(name: "dummy_thread", scope: !12450, file: !1887, line: 518, type: !1980)
!12453 = !DILocation(line: 507, column: 2, scope: !12450)
!12454 = !DILocation(line: 43, column: 14, scope: !12455, inlinedAt: !12459)
!12455 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12456, file: !12456, line: 40, type: !3169, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12457)
!12456 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12457 = !{!12458}
!12458 = !DILocalVariable(name: "msp", scope: !12455, file: !12456, line: 42, type: !162)
!12459 = distinct !DILocation(line: 44, column: 2, scope: !12460, inlinedAt: !12462)
!12460 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12461, file: !12461, line: 42, type: !3169, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !250)
!12461 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12462 = distinct !DILocation(line: 510, column: 2, scope: !12450)
!12463 = !DILocation(line: 43, column: 3, scope: !12455, inlinedAt: !12459)
!12464 = !DILocation(line: 43, column: 60, scope: !12455, inlinedAt: !12459)
!12465 = !DILocation(line: 0, scope: !12455, inlinedAt: !12459)
!12466 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12467, file: !6117, line: 1153, type: !162)
!12467 = distinct !DISubprogram(name: "__set_MSP", scope: !6117, file: !6117, line: 1153, type: !6208, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12468)
!12468 = !{!12466}
!12469 = !DILocation(line: 0, scope: !12467, inlinedAt: !12470)
!12470 = distinct !DILocation(line: 46, column: 2, scope: !12455, inlinedAt: !12459)
!12471 = !DILocation(line: 1155, column: 3, scope: !12467, inlinedAt: !12470)
!12472 = !{i64 2932818}
!12473 = !DILocation(line: 62, column: 11, scope: !12455, inlinedAt: !12459)
!12474 = !DILocation(line: 102, column: 2, scope: !12475, inlinedAt: !12476)
!12475 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6911, file: !6911, line: 97, type: !3169, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !250)
!12476 = distinct !DILocation(line: 45, column: 2, scope: !12460, inlinedAt: !12462)
!12477 = !DILocation(line: 108, column: 2, scope: !12475, inlinedAt: !12476)
!12478 = !DILocation(line: 112, column: 2, scope: !12475, inlinedAt: !12476)
!12479 = !DILocation(line: 113, column: 2, scope: !12475, inlinedAt: !12476)
!12480 = !DILocation(line: 114, column: 2, scope: !12475, inlinedAt: !12476)
!12481 = !DILocation(line: 116, column: 2, scope: !12475, inlinedAt: !12476)
!12482 = !DILocation(line: 123, column: 13, scope: !12475, inlinedAt: !12476)
!12483 = !DILocation(line: 46, column: 2, scope: !12460, inlinedAt: !12462)
!12484 = !DILocation(line: 47, column: 2, scope: !12460, inlinedAt: !12462)
!12485 = !DILocation(line: 174, column: 12, scope: !12486, inlinedAt: !12487)
!12486 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6911, file: !6911, line: 169, type: !3169, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !250)
!12487 = distinct !DILocation(line: 48, column: 2, scope: !12460, inlinedAt: !12462)
!12488 = !DILocation(line: 179, column: 12, scope: !12486, inlinedAt: !12487)
!12489 = !DILocation(line: 50, column: 2, scope: !12460, inlinedAt: !12462)
!12490 = !DILocation(line: 57, column: 2, scope: !12460, inlinedAt: !12462)
!12491 = !DILocation(line: 518, column: 2, scope: !12450)
!12492 = !DILocation(line: 518, column: 18, scope: !12450)
!12493 = !DILocation(line: 520, column: 2, scope: !12450)
!12494 = !DILocation(line: 523, column: 2, scope: !12450)
!12495 = !DILocation(line: 526, column: 2, scope: !12450)
!12496 = !DILocation(line: 527, column: 2, scope: !12450)
!12497 = !DILocation(line: 543, column: 24, scope: !12450)
!12498 = !DILocation(line: 543, column: 2, scope: !12450)
!12499 = !DILocation(line: 0, scope: !2113)
!12500 = !DILocation(line: 246, column: 15, scope: !2131)
!12501 = !DILocation(line: 246, column: 36, scope: !2130)
!12502 = !DILocation(line: 246, column: 2, scope: !2131)
!12503 = !DILocation(line: 247, column: 37, scope: !2129)
!12504 = !DILocation(line: 0, scope: !2129)
!12505 = !DILocation(line: 248, column: 19, scope: !2129)
!12506 = !DILocation(line: 248, column: 12, scope: !2129)
!12507 = !DILocation(line: 250, column: 11, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !2129, file: !1887, line: 250, column: 7)
!12509 = !DILocation(line: 250, column: 7, scope: !2129)
!12510 = !DILocation(line: 254, column: 11, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !1887, line: 254, column: 8)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !1887, line: 250, column: 20)
!12513 = !DILocation(line: 254, column: 8, scope: !12512)
!12514 = !DILocation(line: 255, column: 9, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12511, file: !1887, line: 254, column: 17)
!12516 = !DILocation(line: 258, column: 9, scope: !12515)
!12517 = !DILocation(line: 261, column: 28, scope: !12515)
!12518 = !DILocation(line: 261, column: 10, scope: !12515)
!12519 = !DILocation(line: 261, column: 17, scope: !12515)
!12520 = !DILocation(line: 261, column: 26, scope: !12515)
!12521 = !DILocation(line: 262, column: 4, scope: !12515)
!12522 = !DILocation(line: 263, column: 9, scope: !12512)
!12523 = !DILocation(line: 263, column: 16, scope: !12512)
!12524 = !DILocation(line: 263, column: 28, scope: !12512)
!12525 = !DILocation(line: 264, column: 3, scope: !12512)
!12526 = !DILocation(line: 246, column: 60, scope: !2130)
!12527 = distinct !{!12527, !12502, !12528}
!12528 = !DILocation(line: 265, column: 2, scope: !2131)
!12529 = !DILocation(line: 266, column: 1, scope: !2113)
!12530 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6151, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12531)
!12531 = !{!12532, !12533}
!12532 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12530, file: !497, line: 1814, type: !732)
!12533 = !DILocalVariable(name: "priority", arg: 2, scope: !12530, file: !497, line: 1814, type: !162)
!12534 = !DILocation(line: 0, scope: !12530)
!12535 = !DILocation(line: 1822, column: 48, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !497, line: 1821, column: 3)
!12537 = distinct !DILexicalBlock(scope: !12530, file: !497, line: 1816, column: 7)
!12538 = !DILocation(line: 1822, column: 32, scope: !12536)
!12539 = !DILocation(line: 1822, column: 40, scope: !12536)
!12540 = !DILocation(line: 1822, column: 5, scope: !12536)
!12541 = !DILocation(line: 1822, column: 46, scope: !12536)
!12542 = !DILocation(line: 1824, column: 1, scope: !12530)
!12543 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12461, file: !12461, line: 32, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!12544 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12545, file: !12545, line: 215, type: !12442, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12546)
!12545 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12546 = !{!12547}
!12547 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12544, file: !12545, line: 215, type: !1979)
!12548 = !DILocation(line: 0, scope: !12544)
!12549 = !DILocation(line: 217, column: 21, scope: !12544)
!12550 = !DILocation(line: 217, column: 34, scope: !12544)
!12551 = !DILocation(line: 221, column: 21, scope: !12544)
!12552 = !DILocation(line: 221, column: 34, scope: !12544)
!12553 = !DILocation(line: 223, column: 27, scope: !12544)
!12554 = !DILocation(line: 223, column: 33, scope: !12544)
!12555 = !DILocation(line: 224, column: 27, scope: !12544)
!12556 = !DILocation(line: 224, column: 32, scope: !12544)
!12557 = !DILocation(line: 232, column: 16, scope: !12544)
!12558 = !DILocation(line: 232, column: 30, scope: !12544)
!12559 = !DILocation(line: 239, column: 24, scope: !12544)
!12560 = !DILocation(line: 240, column: 1, scope: !12544)
!12561 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1887, file: !1887, line: 399, type: !12562, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12564)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{!256}
!12564 = !{!12565}
!12565 = !DILocalVariable(name: "stack_ptr", scope: !12561, file: !1887, line: 401, type: !256)
!12566 = !DILocation(line: 404, column: 2, scope: !12561)
!12567 = !DILocation(line: 416, column: 24, scope: !12561)
!12568 = !DILocation(line: 418, column: 14, scope: !12561)
!12569 = !DILocation(line: 0, scope: !12561)
!12570 = !DILocation(line: 423, column: 2, scope: !12561)
!12571 = !DILocation(line: 424, column: 2, scope: !12561)
!12572 = !DILocation(line: 426, column: 2, scope: !12561)
!12573 = !DILocation(line: 428, column: 2, scope: !12561)
!12574 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1887, file: !1887, line: 432, type: !3386, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12575)
!12575 = !{!12576}
!12576 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12574, file: !1887, line: 432, type: !256)
!12577 = !DILocation(line: 0, scope: !12574)
!12578 = !DILocation(line: 435, column: 2, scope: !12574)
!12579 = !DILocation(line: 445, column: 2, scope: !12574)
!12580 = distinct !DISubprogram(name: "bg_thread_main", scope: !1887, file: !1887, line: 277, type: !3712, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !12581)
!12581 = !{!12582, !12583, !12584}
!12582 = !DILocalVariable(name: "unused1", arg: 1, scope: !12580, file: !1887, line: 277, type: !102)
!12583 = !DILocalVariable(name: "unused2", arg: 2, scope: !12580, file: !1887, line: 277, type: !102)
!12584 = !DILocalVariable(name: "unused3", arg: 3, scope: !12580, file: !1887, line: 277, type: !102)
!12585 = !DILocation(line: 0, scope: !12580)
!12586 = !DILocation(line: 291, column: 20, scope: !12580)
!12587 = !DILocation(line: 293, column: 2, scope: !12580)
!12588 = !DILocation(line: 297, column: 2, scope: !12580)
!12589 = !DILocation(line: 305, column: 2, scope: !12580)
!12590 = !DILocation(line: 307, column: 2, scope: !12580)
!12591 = !DILocation(line: 330, column: 8, scope: !12580)
!12592 = !DILocation(line: 333, column: 34, scope: !12580)
!12593 = !DILocation(line: 339, column: 1, scope: !12580)
!12594 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2140, file: !2140, line: 45, type: !12595, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12603)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{null, !12597, !102}
!12597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !12598)
!12598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12599, size: 32)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{null, !12601, !102}
!12601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12602, size: 32)
!12602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!12603 = !{!12604, !12605}
!12604 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12594, file: !2140, line: 45, type: !12597)
!12605 = !DILocalVariable(name: "user_data", arg: 2, scope: !12594, file: !2140, line: 45, type: !102)
!12606 = !DILocation(line: 0, scope: !12594)
!12607 = !DILocation(line: 71, column: 1, scope: !12594)
!12608 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2140, file: !2140, line: 73, type: !12595, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12609)
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12608, file: !2140, line: 73, type: !12597)
!12611 = !DILocalVariable(name: "user_data", arg: 2, scope: !12608, file: !2140, line: 73, type: !102)
!12612 = !DILocation(line: 0, scope: !12608)
!12613 = !DILocation(line: 95, column: 1, scope: !12608)
!12614 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2140, file: !2140, line: 97, type: !6912, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !250)
!12615 = !DILocation(line: 1031, column: 3, scope: !12616, inlinedAt: !12619)
!12616 = distinct !DISubprogram(name: "__get_IPSR", scope: !6117, file: !6117, line: 1027, type: !6198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12617)
!12617 = !{!12618}
!12618 = !DILocalVariable(name: "result", scope: !12616, file: !6117, line: 1029, type: !162)
!12619 = distinct !DILocation(line: 48, column: 10, scope: !12620, inlinedAt: !12621)
!12620 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6911, file: !6911, line: 46, type: !6912, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !250)
!12621 = distinct !DILocation(line: 99, column: 9, scope: !12614)
!12622 = !{i64 2938469}
!12623 = !DILocation(line: 0, scope: !12616, inlinedAt: !12619)
!12624 = !DILocation(line: 48, column: 9, scope: !12620, inlinedAt: !12621)
!12625 = !DILocation(line: 99, column: 2, scope: !12614)
!12626 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2140, file: !2140, line: 106, type: !3169, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !250)
!12627 = !DILocation(line: 108, column: 2, scope: !12626)
!12628 = !DILocation(line: 108, column: 17, scope: !12626)
!12629 = !DILocation(line: 108, column: 30, scope: !12626)
!12630 = !DILocation(line: 109, column: 1, scope: !12626)
!12631 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2140, file: !2140, line: 116, type: !3169, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !250)
!12632 = !DILocation(line: 118, column: 2, scope: !12631)
!12633 = !DILocation(line: 118, column: 17, scope: !12631)
!12634 = !DILocation(line: 118, column: 30, scope: !12631)
!12635 = !DILocation(line: 119, column: 1, scope: !12631)
!12636 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2140, file: !2140, line: 126, type: !6912, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !250)
!12637 = !DILocation(line: 128, column: 10, scope: !12636)
!12638 = !DILocation(line: 128, column: 25, scope: !12636)
!12639 = !DILocation(line: 128, column: 38, scope: !12636)
!12640 = !DILocation(line: 128, column: 53, scope: !12636)
!12641 = !DILocation(line: 128, column: 2, scope: !12636)
!12642 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2140, file: !2140, line: 187, type: !12643, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{!107, !2144, !123}
!12645 = !{!12646, !12647}
!12646 = !DILocalVariable(name: "thread", arg: 1, scope: !12642, file: !2140, line: 187, type: !2144)
!12647 = !DILocalVariable(name: "value", arg: 2, scope: !12642, file: !2140, line: 187, type: !123)
!12648 = !DILocation(line: 0, scope: !12642)
!12649 = !DILocation(line: 206, column: 2, scope: !12642)
!12650 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2140, file: !2140, line: 238, type: !12651, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!123, !2144}
!12653 = !{!12654}
!12654 = !DILocalVariable(name: "thread", arg: 1, scope: !12650, file: !2140, line: 238, type: !2144)
!12655 = !DILocation(line: 0, scope: !12650)
!12656 = !DILocation(line: 244, column: 2, scope: !12650)
!12657 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2140, file: !2140, line: 248, type: !12658, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12660)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{!107, !2143, !256, !252}
!12660 = !{!12661, !12662, !12663}
!12661 = !DILocalVariable(name: "thread", arg: 1, scope: !12657, file: !2140, line: 248, type: !2143)
!12662 = !DILocalVariable(name: "buf", arg: 2, scope: !12657, file: !2140, line: 248, type: !256)
!12663 = !DILocalVariable(name: "size", arg: 3, scope: !12657, file: !2140, line: 248, type: !252)
!12664 = !DILocation(line: 0, scope: !12657)
!12665 = !DILocation(line: 257, column: 2, scope: !12657)
!12666 = !DILocation(line: 0, scope: !2139)
!12667 = !DILocation(line: 281, column: 11, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !2139, file: !2140, line: 281, column: 6)
!12669 = !DILocation(line: 281, column: 20, scope: !12668)
!12670 = !DILocation(line: 275, column: 45, scope: !2139)
!12671 = !DILocation(line: 285, column: 10, scope: !2139)
!12672 = !DILocation(line: 0, scope: !2260)
!12673 = !DILocation(line: 293, column: 39, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !2260, file: !2140, line: 293, column: 2)
!12675 = !DILocation(line: 293, column: 2, scope: !2260)
!12676 = !DILocation(line: 273, column: 14, scope: !2139)
!12677 = !DILocation(line: 309, column: 2, scope: !2139)
!12678 = !DILocation(line: 309, column: 11, scope: !2139)
!12679 = !DILocation(line: 311, column: 2, scope: !2139)
!12680 = !DILocation(line: 293, column: 26, scope: !12674)
!12681 = !DILocation(line: 294, column: 9, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12674, file: !2140, line: 293, column: 54)
!12683 = !DILocation(line: 295, column: 21, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12682, file: !2140, line: 295, column: 7)
!12685 = !DILocation(line: 295, column: 28, scope: !12684)
!12686 = !DILocation(line: 295, column: 7, scope: !12682)
!12687 = !DILocation(line: 299, column: 25, scope: !12682)
!12688 = !DILocation(line: 299, column: 41, scope: !12682)
!12689 = !DILocation(line: 300, column: 7, scope: !12682)
!12690 = !DILocation(line: 300, column: 26, scope: !12682)
!12691 = !DILocation(line: 299, column: 10, scope: !12682)
!12692 = !DILocation(line: 299, column: 7, scope: !12682)
!12693 = !DILocation(line: 302, column: 16, scope: !12682)
!12694 = !DILocation(line: 304, column: 20, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12682, file: !2140, line: 304, column: 7)
!12696 = !DILocation(line: 304, column: 7, scope: !12682)
!12697 = !DILocation(line: 305, column: 26, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !2140, line: 304, column: 26)
!12699 = !DILocation(line: 305, column: 42, scope: !12698)
!12700 = !DILocation(line: 305, column: 11, scope: !12698)
!12701 = !DILocation(line: 305, column: 8, scope: !12698)
!12702 = !DILocation(line: 306, column: 3, scope: !12698)
!12703 = !DILocation(line: 293, column: 50, scope: !12674)
!12704 = !DILocation(line: 312, column: 1, scope: !2139)
!12705 = distinct !DISubprogram(name: "copy_bytes", scope: !2140, file: !2140, line: 261, type: !12706, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!252, !256, !252, !123, !252}
!12708 = !{!12709, !12710, !12711, !12712, !12713}
!12709 = !DILocalVariable(name: "dest", arg: 1, scope: !12705, file: !2140, line: 261, type: !256)
!12710 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12705, file: !2140, line: 261, type: !252)
!12711 = !DILocalVariable(name: "src", arg: 3, scope: !12705, file: !2140, line: 261, type: !123)
!12712 = !DILocalVariable(name: "src_size", arg: 4, scope: !12705, file: !2140, line: 261, type: !252)
!12713 = !DILocalVariable(name: "bytes_to_copy", scope: !12705, file: !2140, line: 263, type: !252)
!12714 = !DILocation(line: 0, scope: !12705)
!12715 = !DILocation(line: 265, column: 18, scope: !12705)
!12716 = !DILocation(line: 266, column: 2, scope: !12705)
!12717 = !DILocation(line: 268, column: 2, scope: !12705)
!12718 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2140, file: !2140, line: 383, type: !12719, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12721)
!12719 = !DISubroutineType(types: !12720)
!12720 = !{null, !2144}
!12721 = !{!12722}
!12722 = !DILocalVariable(name: "thread", arg: 1, scope: !12718, file: !2140, line: 383, type: !2144)
!12723 = !DILocation(line: 0, scope: !12718)
!12724 = !DILocation(line: 387, column: 2, scope: !12718)
!12725 = !DILocation(line: 388, column: 1, scope: !12718)
!12726 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2140, file: !2140, line: 528, type: !12727, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12734)
!12727 = !DISubroutineType(types: !12728)
!12728 = !{!256, !2144, !12729, !252, !3709, !102, !102, !102, !107, !162, !123}
!12729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12730, size: 32)
!12730 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3710, line: 44, baseType: !12731)
!12731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2094, line: 47, size: 8, elements: !12732)
!12732 = !{!12733}
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12731, file: !2094, line: 48, baseType: !125, size: 8)
!12734 = !{!12735, !12736, !12737, !12738, !12739, !12740, !12741, !12742, !12743, !12744, !12745}
!12735 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12726, file: !2140, line: 528, type: !2144)
!12736 = !DILocalVariable(name: "stack", arg: 2, scope: !12726, file: !2140, line: 529, type: !12729)
!12737 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12726, file: !2140, line: 529, type: !252)
!12738 = !DILocalVariable(name: "entry", arg: 4, scope: !12726, file: !2140, line: 530, type: !3709)
!12739 = !DILocalVariable(name: "p1", arg: 5, scope: !12726, file: !2140, line: 531, type: !102)
!12740 = !DILocalVariable(name: "p2", arg: 6, scope: !12726, file: !2140, line: 531, type: !102)
!12741 = !DILocalVariable(name: "p3", arg: 7, scope: !12726, file: !2140, line: 531, type: !102)
!12742 = !DILocalVariable(name: "prio", arg: 8, scope: !12726, file: !2140, line: 532, type: !107)
!12743 = !DILocalVariable(name: "options", arg: 9, scope: !12726, file: !2140, line: 532, type: !162)
!12744 = !DILocalVariable(name: "name", arg: 10, scope: !12726, file: !2140, line: 532, type: !123)
!12745 = !DILocalVariable(name: "stack_ptr", scope: !12726, file: !2140, line: 534, type: !256)
!12746 = !DILocation(line: 0, scope: !12726)
!12747 = !DILocation(line: 550, column: 28, scope: !12726)
!12748 = !DILocation(line: 550, column: 2, scope: !12726)
!12749 = !DILocation(line: 553, column: 34, scope: !12726)
!12750 = !DILocation(line: 553, column: 2, scope: !12726)
!12751 = !DILocation(line: 554, column: 14, scope: !12726)
!12752 = !DILocation(line: 564, column: 2, scope: !12726)
!12753 = !DILocation(line: 567, column: 14, scope: !12726)
!12754 = !DILocation(line: 567, column: 24, scope: !12726)
!12755 = !DILocation(line: 612, column: 7, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12726, file: !2140, line: 612, column: 6)
!12757 = !DILocation(line: 612, column: 6, scope: !12726)
!12758 = !DILocation(line: 627, column: 40, scope: !12726)
!12759 = !DILocation(line: 637, column: 2, scope: !12726)
!12760 = !DILocation(line: 613, column: 15, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12756, file: !2140, line: 612, column: 17)
!12762 = !DILocation(line: 613, column: 29, scope: !12761)
!12763 = !DILocation(line: 638, column: 1, scope: !12726)
!12764 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !12766, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12768)
!12765 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12766 = !DISubroutineType(types: !12767)
!12767 = !{null, !2175}
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "w", arg: 1, scope: !12764, file: !12765, line: 47, type: !2175)
!12770 = !DILocation(line: 0, scope: !12764)
!12771 = !DILocation(line: 49, column: 21, scope: !12764)
!12772 = !DILocation(line: 49, column: 2, scope: !12764)
!12773 = !DILocation(line: 50, column: 1, scope: !12764)
!12774 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2140, file: !2140, line: 791, type: !12775, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12778)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{null, !12777, !107, !162, !32}
!12777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!12778 = !{!12779, !12780, !12781, !12782}
!12779 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12774, file: !2140, line: 791, type: !12777)
!12780 = !DILocalVariable(name: "priority", arg: 2, scope: !12774, file: !2140, line: 791, type: !107)
!12781 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12774, file: !2140, line: 792, type: !162)
!12782 = !DILocalVariable(name: "options", arg: 4, scope: !12774, file: !2140, line: 792, type: !32)
!12783 = !DILocation(line: 0, scope: !12774)
!12784 = !DILocation(line: 795, column: 15, scope: !12774)
!12785 = !DILocation(line: 795, column: 25, scope: !12774)
!12786 = !DILocation(line: 796, column: 30, scope: !12774)
!12787 = !DILocation(line: 796, column: 15, scope: !12774)
!12788 = !DILocation(line: 796, column: 28, scope: !12774)
!12789 = !DILocation(line: 797, column: 30, scope: !12774)
!12790 = !DILocation(line: 797, column: 15, scope: !12774)
!12791 = !DILocation(line: 797, column: 28, scope: !12774)
!12792 = !DILocation(line: 799, column: 22, scope: !12774)
!12793 = !DILocation(line: 799, column: 15, scope: !12774)
!12794 = !DILocation(line: 799, column: 20, scope: !12774)
!12795 = !DILocation(line: 801, column: 15, scope: !12774)
!12796 = !DILocation(line: 801, column: 28, scope: !12774)
!12797 = !DILocation(line: 814, column: 2, scope: !12774)
!12798 = !DILocation(line: 815, column: 1, scope: !12774)
!12799 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2140, file: !2140, line: 449, type: !12800, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!256, !2144, !12729, !252}
!12802 = !{!12803, !12804, !12805, !12806, !12807, !12808, !12809, !12810}
!12803 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12799, file: !2140, line: 449, type: !2144)
!12804 = !DILocalVariable(name: "stack", arg: 2, scope: !12799, file: !2140, line: 450, type: !12729)
!12805 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12799, file: !2140, line: 450, type: !252)
!12806 = !DILocalVariable(name: "stack_obj_size", scope: !12799, file: !2140, line: 452, type: !252)
!12807 = !DILocalVariable(name: "stack_buf_size", scope: !12799, file: !2140, line: 452, type: !252)
!12808 = !DILocalVariable(name: "stack_ptr", scope: !12799, file: !2140, line: 453, type: !256)
!12809 = !DILocalVariable(name: "stack_buf_start", scope: !12799, file: !2140, line: 453, type: !256)
!12810 = !DILocalVariable(name: "delta", scope: !12799, file: !2140, line: 454, type: !252)
!12811 = !DILocation(line: 0, scope: !12799)
!12812 = !DILocation(line: 465, column: 20, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12799, file: !2140, line: 463, column: 2)
!12814 = !DILocation(line: 466, column: 21, scope: !12813)
!12815 = !DILocation(line: 473, column: 28, scope: !12799)
!12816 = !DILocation(line: 514, column: 33, scope: !12799)
!12817 = !DILocation(line: 514, column: 25, scope: !12799)
!12818 = !DILocation(line: 514, column: 31, scope: !12799)
!12819 = !DILocation(line: 515, column: 25, scope: !12799)
!12820 = !DILocation(line: 515, column: 30, scope: !12799)
!12821 = !DILocation(line: 516, column: 25, scope: !12799)
!12822 = !DILocation(line: 516, column: 31, scope: !12799)
!12823 = !DILocation(line: 520, column: 2, scope: !12799)
!12824 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2094, file: !2094, line: 331, type: !12825, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12827)
!12825 = !DISubroutineType(types: !12826)
!12826 = !{!256, !12729}
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "sym", arg: 1, scope: !12824, file: !2094, line: 331, type: !12729)
!12829 = !DILocation(line: 0, scope: !12824)
!12830 = !DILocation(line: 333, column: 21, scope: !12824)
!12831 = !DILocation(line: 333, column: 2, scope: !12824)
!12832 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12833, file: !12833, line: 40, type: !12834, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12836)
!12833 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12834 = !DISubroutineType(types: !12835)
!12835 = !{null, !12777}
!12836 = !{!12837}
!12837 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12832, file: !12833, line: 40, type: !12777)
!12838 = !DILocation(line: 0, scope: !12832)
!12839 = !DILocation(line: 42, column: 31, scope: !12832)
!12840 = !DILocation(line: 42, column: 2, scope: !12832)
!12841 = !DILocation(line: 43, column: 1, scope: !12832)
!12842 = distinct !DISubprogram(name: "z_init_timeout", scope: !12833, file: !12833, line: 25, type: !2201, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12843)
!12843 = !{!12844}
!12844 = !DILocalVariable(name: "to", arg: 1, scope: !12842, file: !12833, line: 25, type: !2203)
!12845 = !DILocation(line: 0, scope: !12842)
!12846 = !DILocation(line: 27, column: 22, scope: !12842)
!12847 = !DILocation(line: 27, column: 2, scope: !12842)
!12848 = !DILocation(line: 28, column: 1, scope: !12842)
!12849 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !12850, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12852)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{null, !2247}
!12852 = !{!12853}
!12853 = !DILocalVariable(name: "node", arg: 1, scope: !12849, file: !233, line: 211, type: !2247)
!12854 = !DILocation(line: 0, scope: !12849)
!12855 = !DILocation(line: 213, column: 8, scope: !12849)
!12856 = !DILocation(line: 213, column: 13, scope: !12849)
!12857 = !DILocation(line: 214, column: 8, scope: !12849)
!12858 = !DILocation(line: 214, column: 13, scope: !12849)
!12859 = !DILocation(line: 215, column: 1, scope: !12849)
!12860 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !12861, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12864)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !12863}
!12863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!12864 = !{!12865}
!12865 = !DILocalVariable(name: "list", arg: 1, scope: !12860, file: !233, line: 197, type: !12863)
!12866 = !DILocation(line: 0, scope: !12860)
!12867 = !DILocation(line: 199, column: 8, scope: !12860)
!12868 = !DILocation(line: 199, column: 13, scope: !12860)
!12869 = !DILocation(line: 200, column: 8, scope: !12860)
!12870 = !DILocation(line: 200, column: 13, scope: !12860)
!12871 = !DILocation(line: 201, column: 1, scope: !12860)
!12872 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2140, file: !2140, line: 641, type: !12873, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12879)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!2143, !2144, !12729, !252, !3709, !102, !102, !102, !107, !162, !12875}
!12875 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !12876)
!12876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !12877)
!12877 = !{!12878}
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12876, file: !104, line: 66, baseType: !103, size: 64)
!12879 = !{!12880, !12881, !12882, !12883, !12884, !12885, !12886, !12887, !12888, !12889}
!12880 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12872, file: !2140, line: 641, type: !2144)
!12881 = !DILocalVariable(name: "stack", arg: 2, scope: !12872, file: !2140, line: 642, type: !12729)
!12882 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12872, file: !2140, line: 643, type: !252)
!12883 = !DILocalVariable(name: "entry", arg: 4, scope: !12872, file: !2140, line: 643, type: !3709)
!12884 = !DILocalVariable(name: "p1", arg: 5, scope: !12872, file: !2140, line: 644, type: !102)
!12885 = !DILocalVariable(name: "p2", arg: 6, scope: !12872, file: !2140, line: 644, type: !102)
!12886 = !DILocalVariable(name: "p3", arg: 7, scope: !12872, file: !2140, line: 644, type: !102)
!12887 = !DILocalVariable(name: "prio", arg: 8, scope: !12872, file: !2140, line: 645, type: !107)
!12888 = !DILocalVariable(name: "options", arg: 9, scope: !12872, file: !2140, line: 645, type: !162)
!12889 = !DILocalVariable(name: "delay", arg: 10, scope: !12872, file: !2140, line: 645, type: !12875)
!12890 = !DILocation(line: 0, scope: !12872)
!12891 = !DILocation(line: 649, column: 2, scope: !12872)
!12892 = !DILocation(line: 652, column: 7, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12872, file: !2140, line: 652, column: 6)
!12894 = !DILocation(line: 652, column: 6, scope: !12872)
!12895 = !DILocation(line: 653, column: 3, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12893, file: !2140, line: 652, column: 39)
!12897 = !DILocation(line: 654, column: 2, scope: !12896)
!12898 = !DILocation(line: 656, column: 2, scope: !12872)
!12899 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2140, file: !2140, line: 401, type: !12900, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12902)
!12900 = !DISubroutineType(types: !12901)
!12901 = !{null, !2144, !12875}
!12902 = !{!12903, !12904}
!12903 = !DILocalVariable(name: "thread", arg: 1, scope: !12899, file: !2140, line: 401, type: !2144)
!12904 = !DILocalVariable(name: "delay", arg: 2, scope: !12899, file: !2140, line: 401, type: !12875)
!12905 = !DILocation(line: 0, scope: !12899)
!12906 = !DILocation(line: 404, column: 6, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12899, file: !2140, line: 404, column: 6)
!12908 = !DILocation(line: 404, column: 6, scope: !12899)
!12909 = !DILocation(line: 405, column: 3, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12907, file: !2140, line: 404, column: 38)
!12911 = !DILocation(line: 406, column: 2, scope: !12910)
!12912 = !DILocation(line: 407, column: 3, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12907, file: !2140, line: 406, column: 9)
!12914 = !DILocation(line: 413, column: 1, scope: !12899)
!12915 = distinct !DISubprogram(name: "k_thread_start", scope: !3354, file: !3354, line: 205, type: !12916, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12918)
!12916 = !DISubroutineType(types: !12917)
!12917 = !{null, !2143}
!12918 = !{!12919}
!12919 = !DILocalVariable(name: "thread", arg: 1, scope: !12915, file: !3354, line: 205, type: !2143)
!12920 = !DILocation(line: 0, scope: !12915)
!12921 = !DILocation(line: 214, column: 2, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12915, file: !3354, line: 214, column: 2)
!12923 = !{i64 2154175690}
!12924 = !DILocation(line: 215, column: 2, scope: !12915)
!12925 = !DILocation(line: 216, column: 1, scope: !12915)
!12926 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12833, file: !12833, line: 47, type: !12900, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12927)
!12927 = !{!12928, !12929}
!12928 = !DILocalVariable(name: "thread", arg: 1, scope: !12926, file: !12833, line: 47, type: !2144)
!12929 = !DILocalVariable(name: "ticks", arg: 2, scope: !12926, file: !12833, line: 47, type: !12875)
!12930 = !DILocation(line: 0, scope: !12926)
!12931 = !DILocation(line: 49, column: 30, scope: !12926)
!12932 = !DILocation(line: 49, column: 2, scope: !12926)
!12933 = !DILocation(line: 50, column: 1, scope: !12926)
!12934 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2140, file: !2140, line: 748, type: !3169, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !12935)
!12935 = !{!12936, !12954}
!12936 = !DILocalVariable(name: "thread_data", scope: !12937, file: !2140, line: 750, type: !12938)
!12937 = distinct !DILexicalBlock(scope: !12934, file: !2140, line: 750, column: 2)
!12938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12939, size: 32)
!12939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !12940)
!12940 = !{!12941, !12942, !12943, !12944, !12945, !12946, !12947, !12948, !12949, !12950, !12951, !12953}
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12939, file: !224, line: 621, baseType: !2144, size: 32)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12939, file: !224, line: 622, baseType: !12729, size: 32, offset: 32)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12939, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12939, file: !224, line: 624, baseType: !3709, size: 32, offset: 96)
!12945 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12939, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12939, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12939, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!12948 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12939, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12939, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12939, file: !224, line: 630, baseType: !706, size: 32, offset: 288)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12939, file: !224, line: 631, baseType: !12952, size: 32, offset: 320)
!12952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 32)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12939, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!12954 = !DILocalVariable(name: "thread_data", scope: !12955, file: !2140, line: 781, type: !12938)
!12955 = distinct !DILexicalBlock(scope: !12934, file: !2140, line: 781, column: 2)
!12956 = !DILocation(line: 0, scope: !12937)
!12957 = !DILocation(line: 750, column: 2, scope: !12937)
!12958 = !DILocation(line: 780, column: 2, scope: !12934)
!12959 = !DILocation(line: 0, scope: !12955)
!12960 = !DILocation(line: 781, column: 2, scope: !12955)
!12961 = !DILocation(line: 752, column: 17, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !2140, line: 750, column: 38)
!12963 = distinct !DILexicalBlock(scope: !12937, file: !2140, line: 750, column: 2)
!12964 = !DILocation(line: 753, column: 17, scope: !12962)
!12965 = !DILocation(line: 754, column: 17, scope: !12962)
!12966 = !DILocation(line: 755, column: 17, scope: !12962)
!12967 = !DILocation(line: 756, column: 17, scope: !12962)
!12968 = !DILocation(line: 757, column: 17, scope: !12962)
!12969 = !DILocation(line: 758, column: 17, scope: !12962)
!12970 = !DILocation(line: 759, column: 17, scope: !12962)
!12971 = !DILocation(line: 760, column: 17, scope: !12962)
!12972 = !DILocation(line: 751, column: 3, scope: !12962)
!12973 = !DILocation(line: 763, column: 16, scope: !12962)
!12974 = !DILocation(line: 763, column: 29, scope: !12962)
!12975 = !DILocation(line: 763, column: 39, scope: !12962)
!12976 = !DILocation(line: 750, column: 2, scope: !12963)
!12977 = !DILocation(line: 750, column: 2, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12963, file: !2140, line: 750, column: 2)
!12979 = distinct !{!12979, !12957, !12980}
!12980 = !DILocation(line: 764, column: 2, scope: !12937)
!12981 = !DILocation(line: 787, column: 2, scope: !12934)
!12982 = !DILocation(line: 788, column: 1, scope: !12934)
!12983 = !DILocation(line: 782, column: 20, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !2140, line: 782, column: 7)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !2140, line: 781, column: 38)
!12986 = distinct !DILexicalBlock(scope: !12955, file: !2140, line: 781, column: 2)
!12987 = !DILocation(line: 782, column: 31, scope: !12984)
!12988 = !DILocation(line: 782, column: 7, scope: !12985)
!12989 = !DILocation(line: 783, column: 37, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12984, file: !2140, line: 782, column: 51)
!12991 = !DILocation(line: 784, column: 10, scope: !12990)
!12992 = !DILocation(line: 783, column: 4, scope: !12990)
!12993 = !DILocation(line: 785, column: 3, scope: !12990)
!12994 = !DILocation(line: 781, column: 2, scope: !12986)
!12995 = !DILocation(line: 781, column: 2, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12986, file: !2140, line: 781, column: 2)
!12997 = distinct !{!12997, !12960, !12998}
!12998 = !DILocation(line: 786, column: 2, scope: !12955)
!12999 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13000, file: !13000, line: 403, type: !13001, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13003)
!13000 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13001 = !DISubroutineType(types: !13002)
!13002 = !{!1474, !1474}
!13003 = !{!13004}
!13004 = !DILocalVariable(name: "t", arg: 1, scope: !12999, file: !13000, line: 403, type: !1474)
!13005 = !DILocation(line: 0, scope: !12999)
!13006 = !DILocalVariable(name: "t", arg: 1, scope: !13007, file: !13000, line: 102, type: !1474)
!13007 = distinct !DISubprogram(name: "z_tmcvt", scope: !13000, file: !13000, line: 102, type: !13008, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13010)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{!1474, !1474, !162, !162, !136, !136, !136, !136}
!13010 = !{!13006, !13011, !13012, !13013, !13014, !13015, !13016, !13017, !13018, !13019, !13020}
!13011 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13007, file: !13000, line: 102, type: !162)
!13012 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13007, file: !13000, line: 103, type: !162)
!13013 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13007, file: !13000, line: 103, type: !136)
!13014 = !DILocalVariable(name: "result32", arg: 5, scope: !13007, file: !13000, line: 104, type: !136)
!13015 = !DILocalVariable(name: "round_up", arg: 6, scope: !13007, file: !13000, line: 104, type: !136)
!13016 = !DILocalVariable(name: "round_off", arg: 7, scope: !13007, file: !13000, line: 105, type: !136)
!13017 = !DILocalVariable(name: "mul_ratio", scope: !13007, file: !13000, line: 107, type: !136)
!13018 = !DILocalVariable(name: "div_ratio", scope: !13007, file: !13000, line: 109, type: !136)
!13019 = !DILocalVariable(name: "off", scope: !13007, file: !13000, line: 116, type: !1474)
!13020 = !DILocalVariable(name: "rdivisor", scope: !13021, file: !13000, line: 119, type: !162)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !13000, line: 118, column: 18)
!13022 = distinct !DILexicalBlock(scope: !13007, file: !13000, line: 118, column: 6)
!13023 = !DILocation(line: 0, scope: !13007, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 406, column: 9, scope: !12999)
!13025 = !DILocation(line: 145, column: 13, scope: !13026, inlinedAt: !13024)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !13000, line: 144, column: 10)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !13000, line: 142, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13029, file: !13000, line: 141, column: 24)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !13000, line: 141, column: 13)
!13030 = distinct !DILexicalBlock(scope: !13007, file: !13000, line: 134, column: 6)
!13031 = !DILocation(line: 406, column: 2, scope: !12999)
!13032 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2140, file: !2140, line: 817, type: !3707, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13033)
!13033 = !{!13034, !13035, !13036, !13037}
!13034 = !DILocalVariable(name: "entry", arg: 1, scope: !13032, file: !2140, line: 817, type: !3709)
!13035 = !DILocalVariable(name: "p1", arg: 2, scope: !13032, file: !2140, line: 818, type: !102)
!13036 = !DILocalVariable(name: "p2", arg: 3, scope: !13032, file: !2140, line: 818, type: !102)
!13037 = !DILocalVariable(name: "p3", arg: 4, scope: !13032, file: !2140, line: 818, type: !102)
!13038 = !DILocation(line: 0, scope: !13032)
!13039 = !DILocation(line: 822, column: 2, scope: !13032)
!13040 = !DILocation(line: 822, column: 17, scope: !13032)
!13041 = !DILocation(line: 822, column: 30, scope: !13032)
!13042 = !DILocation(line: 823, column: 2, scope: !13032)
!13043 = !DILocation(line: 845, column: 2, scope: !13032)
!13044 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2140, file: !2140, line: 888, type: !13045, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13047)
!13045 = !DISubroutineType(types: !13046)
!13046 = !{!107, !2144}
!13047 = !{!13048}
!13048 = !DILocalVariable(name: "thread", arg: 1, scope: !13044, file: !2140, line: 888, type: !2144)
!13049 = !DILocation(line: 0, scope: !13044)
!13050 = !DILocation(line: 893, column: 2, scope: !13044)
!13051 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2140, file: !2140, line: 897, type: !13052, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!107, !2144, !32}
!13054 = !{!13055, !13056}
!13055 = !DILocalVariable(name: "thread", arg: 1, scope: !13051, file: !2140, line: 897, type: !2144)
!13056 = !DILocalVariable(name: "options", arg: 2, scope: !13051, file: !2140, line: 897, type: !32)
!13057 = !DILocation(line: 0, scope: !13051)
!13058 = !DILocation(line: 902, column: 2, scope: !13051)
!13059 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2140, file: !2140, line: 1072, type: !13060, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13065)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!107, !2143, !13062}
!13062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13063, size: 32)
!13063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !359, line: 234, baseType: !13064)
!13064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !359, line: 192, elements: !250)
!13065 = !{!13066, !13067}
!13066 = !DILocalVariable(name: "thread", arg: 1, scope: !13059, file: !2140, line: 1072, type: !2143)
!13067 = !DILocalVariable(name: "stats", arg: 2, scope: !13059, file: !2140, line: 1073, type: !13062)
!13068 = !DILocation(line: 0, scope: !13059)
!13069 = !DILocation(line: 1075, column: 14, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13059, file: !2140, line: 1075, column: 6)
!13071 = !DILocation(line: 1075, column: 23, scope: !13070)
!13072 = !DILocation(line: 1086, column: 1, scope: !13059)
!13073 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2140, file: !2140, line: 1088, type: !13074, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2244, retainedNodes: !13076)
!13074 = !DISubroutineType(types: !13075)
!13075 = !{!107, !13062}
!13076 = !{!13077}
!13077 = !DILocalVariable(name: "stats", arg: 1, scope: !13073, file: !2140, line: 1088, type: !13062)
!13078 = !DILocation(line: 0, scope: !13073)
!13079 = !DILocation(line: 1094, column: 12, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13073, file: !2140, line: 1094, column: 6)
!13081 = !DILocation(line: 1120, column: 1, scope: !13073)
!13082 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13083, file: !13083, line: 20, type: !3169, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !250)
!13083 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13084 = !DILocation(line: 30, column: 2, scope: !13082)
!13085 = !DILocation(line: 31, column: 1, scope: !13082)
!13086 = distinct !DISubprogram(name: "idle", scope: !13083, file: !13083, line: 33, type: !3712, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !13087)
!13087 = !{!13088, !13089, !13090}
!13088 = !DILocalVariable(name: "unused1", arg: 1, scope: !13086, file: !13083, line: 33, type: !102)
!13089 = !DILocalVariable(name: "unused2", arg: 2, scope: !13086, file: !13083, line: 33, type: !102)
!13090 = !DILocalVariable(name: "unused3", arg: 3, scope: !13086, file: !13083, line: 33, type: !102)
!13091 = !DILocation(line: 0, scope: !13086)
!13092 = !DILocation(line: 41, column: 2, scope: !13086)
!13093 = !DILocation(line: 55, column: 2, scope: !13094, inlinedAt: !13098)
!13094 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !13095)
!13095 = !{!13096, !13097}
!13096 = !DILocalVariable(name: "key", scope: !13094, file: !5943, line: 44, type: !32)
!13097 = !DILocalVariable(name: "tmp", scope: !13094, file: !5943, line: 53, type: !32)
!13098 = distinct !DILocation(line: 62, column: 10, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13086, file: !13083, line: 41, column: 15)
!13100 = !{i64 2037080}
!13101 = !DILocation(line: 0, scope: !13094, inlinedAt: !13098)
!13102 = !DILocation(line: 86, column: 3, scope: !13099)
!13103 = distinct !{!13103, !13092, !13104}
!13104 = !DILocation(line: 105, column: 2, scope: !13086)
!13105 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3169, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !250)
!13106 = !DILocation(line: 5629, column: 2, scope: !13105)
!13107 = !DILocation(line: 5630, column: 1, scope: !13105)
!13108 = !DISubprogram(name: "arch_cpu_idle", scope: !3710, file: !3710, line: 167, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13109 = distinct !DISubprogram(name: "k_msgq_init", scope: !13110, file: !13110, line: 35, type: !13111, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13126)
!13110 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13111 = !DISubroutineType(types: !13112)
!13112 = !{null, !13113, !256, !252, !162}
!13113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13114, size: 32)
!13114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13115)
!13115 = !{!13116, !13117, !13118, !13119, !13120, !13121, !13122, !13123, !13124, !13125}
!13116 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13114, file: !224, line: 4206, baseType: !3084, size: 64)
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13114, file: !224, line: 4208, baseType: !3146, offset: 64)
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13114, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13114, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13114, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13114, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13114, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13114, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13124 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13114, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13114, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13126 = !{!13127, !13128, !13129, !13130}
!13127 = !DILocalVariable(name: "msgq", arg: 1, scope: !13109, file: !13110, line: 35, type: !13113)
!13128 = !DILocalVariable(name: "buffer", arg: 2, scope: !13109, file: !13110, line: 35, type: !256)
!13129 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13109, file: !13110, line: 35, type: !252)
!13130 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13109, file: !13110, line: 36, type: !162)
!13131 = !DILocation(line: 0, scope: !13109)
!13132 = !DILocation(line: 38, column: 8, scope: !13109)
!13133 = !DILocation(line: 38, column: 17, scope: !13109)
!13134 = !DILocation(line: 39, column: 8, scope: !13109)
!13135 = !DILocation(line: 39, column: 17, scope: !13109)
!13136 = !DILocation(line: 40, column: 8, scope: !13109)
!13137 = !DILocation(line: 40, column: 21, scope: !13109)
!13138 = !DILocation(line: 41, column: 40, scope: !13109)
!13139 = !DILocation(line: 41, column: 28, scope: !13109)
!13140 = !DILocation(line: 41, column: 8, scope: !13109)
!13141 = !DILocation(line: 41, column: 19, scope: !13109)
!13142 = !DILocation(line: 42, column: 8, scope: !13109)
!13143 = !DILocation(line: 42, column: 17, scope: !13109)
!13144 = !DILocation(line: 43, column: 8, scope: !13109)
!13145 = !DILocation(line: 43, column: 18, scope: !13109)
!13146 = !DILocation(line: 44, column: 8, scope: !13109)
!13147 = !DILocation(line: 44, column: 18, scope: !13109)
!13148 = !DILocation(line: 45, column: 8, scope: !13109)
!13149 = !DILocation(line: 45, column: 14, scope: !13109)
!13150 = !DILocation(line: 46, column: 22, scope: !13109)
!13151 = !DILocation(line: 46, column: 2, scope: !13109)
!13152 = !DILocation(line: 55, column: 1, scope: !13109)
!13153 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !13154, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !3083}
!13156 = !{!13157}
!13157 = !DILocalVariable(name: "w", arg: 1, scope: !13153, file: !12765, line: 47, type: !3083)
!13158 = !DILocation(line: 0, scope: !13153)
!13159 = !DILocation(line: 49, column: 21, scope: !13153)
!13160 = !DILocation(line: 49, column: 2, scope: !13153)
!13161 = !DILocation(line: 50, column: 1, scope: !13153)
!13162 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13163, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13166)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{null, !13165}
!13165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 32)
!13166 = !{!13167}
!13167 = !DILocalVariable(name: "list", arg: 1, scope: !13162, file: !233, line: 197, type: !13165)
!13168 = !DILocation(line: 0, scope: !13162)
!13169 = !DILocation(line: 199, column: 8, scope: !13162)
!13170 = !DILocation(line: 199, column: 13, scope: !13162)
!13171 = !DILocation(line: 200, column: 8, scope: !13162)
!13172 = !DILocation(line: 200, column: 13, scope: !13162)
!13173 = !DILocation(line: 201, column: 1, scope: !13162)
!13174 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13110, file: !13110, line: 57, type: !13175, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13177)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!107, !13113, !252, !162}
!13177 = !{!13178, !13179, !13180, !13181, !13182, !13183}
!13178 = !DILocalVariable(name: "msgq", arg: 1, scope: !13174, file: !13110, line: 57, type: !13113)
!13179 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13174, file: !13110, line: 57, type: !252)
!13180 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13174, file: !13110, line: 58, type: !162)
!13181 = !DILocalVariable(name: "buffer", scope: !13174, file: !13110, line: 60, type: !102)
!13182 = !DILocalVariable(name: "ret", scope: !13174, file: !13110, line: 61, type: !107)
!13183 = !DILocalVariable(name: "total_size", scope: !13174, file: !13110, line: 62, type: !252)
!13184 = !DILocation(line: 0, scope: !13174)
!13185 = !DILocation(line: 62, column: 2, scope: !13174)
!13186 = !DILocation(line: 66, column: 6, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13174, file: !13110, line: 66, column: 6)
!13188 = !DILocation(line: 66, column: 6, scope: !13174)
!13189 = !DILocation(line: 69, column: 28, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !13110, line: 68, column: 9)
!13191 = !DILocation(line: 69, column: 12, scope: !13190)
!13192 = !DILocation(line: 70, column: 14, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13190, file: !13110, line: 70, column: 7)
!13194 = !DILocation(line: 70, column: 7, scope: !13190)
!13195 = !DILocation(line: 71, column: 4, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !13110, line: 70, column: 23)
!13197 = !DILocation(line: 72, column: 10, scope: !13196)
!13198 = !DILocation(line: 72, column: 16, scope: !13196)
!13199 = !DILocation(line: 74, column: 3, scope: !13196)
!13200 = !DILocation(line: 0, scope: !13187)
!13201 = !DILocation(line: 82, column: 1, scope: !13174)
!13202 = !DILocation(line: 81, column: 2, scope: !13174)
!13203 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13204, file: !13204, line: 105, type: !13205, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13207)
!13204 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13205 = !DISubroutineType(types: !13206)
!13206 = !{!136, !252, !252, !2521}
!13207 = !{!13208, !13209, !13210}
!13208 = !DILocalVariable(name: "a", arg: 1, scope: !13203, file: !13204, line: 105, type: !252)
!13209 = !DILocalVariable(name: "b", arg: 2, scope: !13203, file: !13204, line: 105, type: !252)
!13210 = !DILocalVariable(name: "result", arg: 3, scope: !13203, file: !13204, line: 105, type: !2521)
!13211 = !DILocation(line: 0, scope: !13203)
!13212 = !DILocation(line: 107, column: 9, scope: !13203)
!13213 = !DILocation(line: 107, column: 2, scope: !13203)
!13214 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13215, file: !13215, line: 102, type: !13216, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13217)
!13215 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13216 = !DISubroutineType(types: !3027)
!13217 = !{!13218}
!13218 = !DILocalVariable(name: "size", arg: 1, scope: !13214, file: !13215, line: 102, type: !252)
!13219 = !DILocation(line: 0, scope: !13214)
!13220 = !DILocation(line: 104, column: 9, scope: !13214)
!13221 = !DILocation(line: 104, column: 2, scope: !13214)
!13222 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13215, file: !13215, line: 87, type: !13223, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!102, !252, !252}
!13225 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13110, file: !13110, line: 95, type: !13226, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{!107, !13113}
!13228 = !{!13229}
!13229 = !DILocalVariable(name: "msgq", arg: 1, scope: !13225, file: !13110, line: 95, type: !13113)
!13230 = !DILocation(line: 0, scope: !13225)
!13231 = !DILocation(line: 99, column: 2, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13225, file: !13110, line: 99, column: 2)
!13233 = !DILocation(line: 99, column: 2, scope: !13225)
!13234 = !DILocation(line: 105, column: 13, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13225, file: !13110, line: 105, column: 6)
!13236 = !DILocation(line: 105, column: 19, scope: !13235)
!13237 = !DILocation(line: 105, column: 40, scope: !13235)
!13238 = !DILocation(line: 105, column: 6, scope: !13225)
!13239 = !DILocation(line: 106, column: 16, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13235, file: !13110, line: 105, column: 47)
!13241 = !DILocation(line: 106, column: 3, scope: !13240)
!13242 = !DILocation(line: 107, column: 15, scope: !13240)
!13243 = !DILocation(line: 108, column: 2, scope: !13240)
!13244 = !DILocation(line: 113, column: 1, scope: !13225)
!13245 = distinct !DISubprogram(name: "z_waitq_head", scope: !12765, file: !12765, line: 52, type: !13246, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!3066, !3083}
!13248 = !{!13249}
!13249 = !DILocalVariable(name: "w", arg: 1, scope: !13245, file: !12765, line: 52, type: !3083)
!13250 = !DILocation(line: 0, scope: !13245)
!13251 = !DILocation(line: 54, column: 52, scope: !13245)
!13252 = !DILocation(line: 54, column: 28, scope: !13245)
!13253 = !DILocation(line: 54, column: 9, scope: !13245)
!13254 = !DILocation(line: 54, column: 2, scope: !13245)
!13255 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !6054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13256 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13257, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!3051, !13165}
!13259 = !{!13260}
!13260 = !DILocalVariable(name: "list", arg: 1, scope: !13256, file: !233, line: 294, type: !13165)
!13261 = !DILocation(line: 0, scope: !13256)
!13262 = !DILocation(line: 296, column: 9, scope: !13256)
!13263 = !DILocation(line: 296, column: 49, scope: !13256)
!13264 = !DILocation(line: 296, column: 2, scope: !13256)
!13265 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13266, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13268)
!13266 = !DISubroutineType(types: !13267)
!13267 = !{!136, !13165}
!13268 = !{!13269}
!13269 = !DILocalVariable(name: "list", arg: 1, scope: !13265, file: !233, line: 266, type: !13165)
!13270 = !DILocation(line: 0, scope: !13265)
!13271 = !DILocation(line: 268, column: 15, scope: !13265)
!13272 = !DILocation(line: 268, column: 20, scope: !13265)
!13273 = !DILocation(line: 268, column: 2, scope: !13265)
!13274 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13110, file: !13110, line: 116, type: !13275, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13281)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{!107, !13113, !13, !13277}
!13277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13278)
!13278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13279)
!13279 = !{!13280}
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13278, file: !104, line: 66, baseType: !103, size: 64)
!13281 = !{!13282, !13283, !13284, !13285, !13286, !13291}
!13282 = !DILocalVariable(name: "msgq", arg: 1, scope: !13274, file: !13110, line: 116, type: !13113)
!13283 = !DILocalVariable(name: "data", arg: 2, scope: !13274, file: !13110, line: 116, type: !13)
!13284 = !DILocalVariable(name: "timeout", arg: 3, scope: !13274, file: !13110, line: 116, type: !13277)
!13285 = !DILocalVariable(name: "pending_thread", scope: !13274, file: !13110, line: 120, type: !3066)
!13286 = !DILocalVariable(name: "key", scope: !13274, file: !13110, line: 121, type: !13287)
!13287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13288)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13289)
!13289 = !{!13290}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13288, file: !249, line: 33, baseType: !107, size: 32)
!13291 = !DILocalVariable(name: "result", scope: !13274, file: !13110, line: 122, type: !107)
!13292 = !DILocation(line: 0, scope: !13274)
!13293 = !DILocation(line: 124, column: 27, scope: !13274)
!13294 = !DILocalVariable(name: "l", arg: 1, scope: !13295, file: !249, line: 136, type: !13298)
!13295 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13296, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13299)
!13296 = !DISubroutineType(types: !13297)
!13297 = !{!13287, !13298}
!13298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!13299 = !{!13294, !13300}
!13300 = !DILocalVariable(name: "k", scope: !13295, file: !249, line: 139, type: !13287)
!13301 = !DILocation(line: 0, scope: !13295, inlinedAt: !13302)
!13302 = distinct !DILocation(line: 124, column: 8, scope: !13274)
!13303 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13308)
!13304 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13305)
!13305 = !{!13306, !13307}
!13306 = !DILocalVariable(name: "key", scope: !13304, file: !5943, line: 44, type: !32)
!13307 = !DILocalVariable(name: "tmp", scope: !13304, file: !5943, line: 53, type: !32)
!13308 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13302)
!13309 = !{i64 2043217}
!13310 = !DILocation(line: 0, scope: !13304, inlinedAt: !13308)
!13311 = !DILocation(line: 128, column: 12, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13274, file: !13110, line: 128, column: 6)
!13313 = !DILocation(line: 128, column: 30, scope: !13312)
!13314 = !DILocation(line: 128, column: 22, scope: !13312)
!13315 = !DILocation(line: 128, column: 6, scope: !13274)
!13316 = !DILocation(line: 130, column: 49, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13312, file: !13110, line: 128, column: 40)
!13318 = !DILocation(line: 130, column: 20, scope: !13317)
!13319 = !DILocation(line: 131, column: 22, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13317, file: !13110, line: 131, column: 7)
!13321 = !DILocation(line: 131, column: 7, scope: !13317)
!13322 = !DILocation(line: 135, column: 38, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !13110, line: 131, column: 31)
!13324 = !DILocation(line: 136, column: 17, scope: !13323)
!13325 = !DILocation(line: 135, column: 10, scope: !13323)
!13326 = !DILocalVariable(name: "thread", arg: 1, scope: !13327, file: !12461, line: 65, type: !3066)
!13327 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12461, file: !12461, line: 65, type: !13328, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13330)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{null, !3066, !32}
!13330 = !{!13326, !13331}
!13331 = !DILocalVariable(name: "value", arg: 2, scope: !13327, file: !12461, line: 65, type: !32)
!13332 = !DILocation(line: 0, scope: !13327, inlinedAt: !13333)
!13333 = distinct !DILocation(line: 138, column: 4, scope: !13323)
!13334 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13333)
!13335 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13333)
!13336 = !DILocation(line: 139, column: 4, scope: !13323)
!13337 = !DILocation(line: 140, column: 4, scope: !13323)
!13338 = !DILocation(line: 141, column: 4, scope: !13323)
!13339 = !DILocation(line: 144, column: 23, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13320, file: !13110, line: 142, column: 10)
!13341 = !DILocation(line: 144, column: 46, scope: !13340)
!13342 = !DILocation(line: 144, column: 10, scope: !13340)
!13343 = !DILocation(line: 145, column: 29, scope: !13340)
!13344 = !DILocation(line: 145, column: 20, scope: !13340)
!13345 = !DILocation(line: 146, column: 33, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13340, file: !13110, line: 146, column: 8)
!13347 = !DILocation(line: 146, column: 24, scope: !13346)
!13348 = !DILocation(line: 146, column: 8, scope: !13340)
!13349 = !DILocation(line: 147, column: 29, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13346, file: !13110, line: 146, column: 45)
!13351 = !DILocation(line: 147, column: 21, scope: !13350)
!13352 = !DILocation(line: 148, column: 4, scope: !13350)
!13353 = !DILocation(line: 149, column: 19, scope: !13340)
!13354 = !DILocation(line: 155, column: 2, scope: !13317)
!13355 = !DILocation(line: 155, column: 13, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13312, file: !13110, line: 155, column: 13)
!13357 = !DILocation(line: 155, column: 13, scope: !13312)
!13358 = !DILocation(line: 162, column: 3, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13356, file: !13110, line: 158, column: 9)
!13360 = !DILocation(line: 162, column: 18, scope: !13359)
!13361 = !DILocation(line: 162, column: 28, scope: !13359)
!13362 = !DILocation(line: 164, column: 49, scope: !13359)
!13363 = !DILocation(line: 164, column: 12, scope: !13359)
!13364 = !DILocation(line: 166, column: 3, scope: !13359)
!13365 = !DILocation(line: 0, scope: !13312)
!13366 = !DILocalVariable(name: "key", arg: 2, scope: !13367, file: !249, line: 190, type: !13287)
!13367 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13368, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13370)
!13368 = !DISubroutineType(types: !13369)
!13369 = !{null, !13298, !13287}
!13370 = !{!13371, !13366}
!13371 = !DILocalVariable(name: "l", arg: 1, scope: !13367, file: !249, line: 189, type: !13298)
!13372 = !DILocation(line: 0, scope: !13367, inlinedAt: !13373)
!13373 = distinct !DILocation(line: 171, column: 2, scope: !13274)
!13374 = !DILocalVariable(name: "key", arg: 1, scope: !13375, file: !5943, line: 84, type: !32)
!13375 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13376)
!13376 = !{!13374}
!13377 = !DILocation(line: 0, scope: !13375, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13373)
!13379 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13378)
!13380 = !{i64 2044034}
!13381 = !DILocation(line: 173, column: 2, scope: !13274)
!13382 = !DILocation(line: 174, column: 1, scope: !13274)
!13383 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13110, file: !13110, line: 188, type: !13384, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13392)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{null, !13113, !13386}
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13387, size: 32)
!13387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !13388)
!13388 = !{!13389, !13390, !13391}
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13387, file: !224, line: 4261, baseType: !252, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13387, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!13391 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13387, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!13392 = !{!13393, !13394}
!13393 = !DILocalVariable(name: "msgq", arg: 1, scope: !13383, file: !13110, line: 188, type: !13113)
!13394 = !DILocalVariable(name: "attrs", arg: 2, scope: !13383, file: !13110, line: 188, type: !13386)
!13395 = !DILocation(line: 0, scope: !13383)
!13396 = !DILocation(line: 190, column: 26, scope: !13383)
!13397 = !DILocation(line: 190, column: 9, scope: !13383)
!13398 = !DILocation(line: 190, column: 18, scope: !13383)
!13399 = !DILocation(line: 191, column: 26, scope: !13383)
!13400 = !DILocation(line: 191, column: 9, scope: !13383)
!13401 = !DILocation(line: 191, column: 18, scope: !13383)
!13402 = !DILocation(line: 192, column: 27, scope: !13383)
!13403 = !DILocation(line: 192, column: 9, scope: !13383)
!13404 = !DILocation(line: 192, column: 19, scope: !13383)
!13405 = !DILocation(line: 193, column: 1, scope: !13383)
!13406 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13110, file: !13110, line: 206, type: !13407, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13409)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{!107, !13113, !102, !13277}
!13409 = !{!13410, !13411, !13412, !13413, !13414, !13415}
!13410 = !DILocalVariable(name: "msgq", arg: 1, scope: !13406, file: !13110, line: 206, type: !13113)
!13411 = !DILocalVariable(name: "data", arg: 2, scope: !13406, file: !13110, line: 206, type: !102)
!13412 = !DILocalVariable(name: "timeout", arg: 3, scope: !13406, file: !13110, line: 206, type: !13277)
!13413 = !DILocalVariable(name: "key", scope: !13406, file: !13110, line: 210, type: !13287)
!13414 = !DILocalVariable(name: "pending_thread", scope: !13406, file: !13110, line: 211, type: !3066)
!13415 = !DILocalVariable(name: "result", scope: !13406, file: !13110, line: 212, type: !107)
!13416 = !DILocation(line: 0, scope: !13406)
!13417 = !DILocation(line: 214, column: 27, scope: !13406)
!13418 = !DILocation(line: 0, scope: !13295, inlinedAt: !13419)
!13419 = distinct !DILocation(line: 214, column: 8, scope: !13406)
!13420 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13419)
!13422 = !DILocation(line: 0, scope: !13304, inlinedAt: !13421)
!13423 = !DILocation(line: 218, column: 12, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13406, file: !13110, line: 218, column: 6)
!13425 = !DILocation(line: 218, column: 22, scope: !13424)
!13426 = !DILocation(line: 218, column: 6, scope: !13406)
!13427 = !DILocation(line: 220, column: 28, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13424, file: !13110, line: 218, column: 28)
!13429 = !DILocation(line: 220, column: 44, scope: !13428)
!13430 = !DILocation(line: 220, column: 9, scope: !13428)
!13431 = !DILocation(line: 221, column: 27, scope: !13428)
!13432 = !DILocation(line: 221, column: 18, scope: !13428)
!13433 = !DILocation(line: 222, column: 31, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13428, file: !13110, line: 222, column: 7)
!13435 = !DILocation(line: 222, column: 22, scope: !13434)
!13436 = !DILocation(line: 222, column: 7, scope: !13428)
!13437 = !DILocation(line: 223, column: 27, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !13110, line: 222, column: 43)
!13439 = !DILocation(line: 223, column: 19, scope: !13438)
!13440 = !DILocation(line: 224, column: 3, scope: !13438)
!13441 = !DILocation(line: 225, column: 18, scope: !13428)
!13442 = !DILocation(line: 228, column: 49, scope: !13428)
!13443 = !DILocation(line: 228, column: 20, scope: !13428)
!13444 = !DILocation(line: 229, column: 22, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13428, file: !13110, line: 229, column: 7)
!13446 = !DILocation(line: 229, column: 7, scope: !13428)
!13447 = !DILocation(line: 233, column: 23, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !13110, line: 229, column: 31)
!13449 = !DILocation(line: 233, column: 55, scope: !13448)
!13450 = !DILocation(line: 234, column: 17, scope: !13448)
!13451 = !DILocation(line: 233, column: 10, scope: !13448)
!13452 = !DILocation(line: 235, column: 29, scope: !13448)
!13453 = !DILocation(line: 235, column: 20, scope: !13448)
!13454 = !DILocation(line: 236, column: 33, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13448, file: !13110, line: 236, column: 8)
!13456 = !DILocation(line: 236, column: 24, scope: !13455)
!13457 = !DILocation(line: 236, column: 8, scope: !13448)
!13458 = !DILocation(line: 237, column: 29, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13455, file: !13110, line: 236, column: 45)
!13460 = !DILocation(line: 237, column: 21, scope: !13459)
!13461 = !DILocation(line: 238, column: 4, scope: !13459)
!13462 = !DILocation(line: 239, column: 19, scope: !13448)
!13463 = !DILocation(line: 0, scope: !13327, inlinedAt: !13464)
!13464 = distinct !DILocation(line: 242, column: 4, scope: !13448)
!13465 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13464)
!13466 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13464)
!13467 = !DILocation(line: 243, column: 4, scope: !13448)
!13468 = !DILocation(line: 244, column: 4, scope: !13448)
!13469 = !DILocation(line: 248, column: 4, scope: !13448)
!13470 = !DILocation(line: 251, column: 13, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13424, file: !13110, line: 251, column: 13)
!13472 = !DILocation(line: 251, column: 13, scope: !13424)
!13473 = !DILocation(line: 258, column: 3, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13471, file: !13110, line: 254, column: 9)
!13475 = !DILocation(line: 258, column: 18, scope: !13474)
!13476 = !DILocation(line: 258, column: 28, scope: !13474)
!13477 = !DILocation(line: 260, column: 49, scope: !13474)
!13478 = !DILocation(line: 260, column: 12, scope: !13474)
!13479 = !DILocation(line: 262, column: 3, scope: !13474)
!13480 = !DILocation(line: 0, scope: !13424)
!13481 = !DILocation(line: 0, scope: !13367, inlinedAt: !13482)
!13482 = distinct !DILocation(line: 267, column: 2, scope: !13406)
!13483 = !DILocation(line: 0, scope: !13375, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13482)
!13485 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13484)
!13486 = !DILocation(line: 269, column: 2, scope: !13406)
!13487 = !DILocation(line: 270, column: 1, scope: !13406)
!13488 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13110, file: !13110, line: 284, type: !13489, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!107, !13113, !102}
!13491 = !{!13492, !13493, !13494, !13495}
!13492 = !DILocalVariable(name: "msgq", arg: 1, scope: !13488, file: !13110, line: 284, type: !13113)
!13493 = !DILocalVariable(name: "data", arg: 2, scope: !13488, file: !13110, line: 284, type: !102)
!13494 = !DILocalVariable(name: "key", scope: !13488, file: !13110, line: 286, type: !13287)
!13495 = !DILocalVariable(name: "result", scope: !13488, file: !13110, line: 287, type: !107)
!13496 = !DILocation(line: 0, scope: !13488)
!13497 = !DILocation(line: 0, scope: !13295, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 289, column: 8, scope: !13488)
!13499 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13498)
!13501 = !DILocation(line: 0, scope: !13304, inlinedAt: !13500)
!13502 = !DILocation(line: 291, column: 12, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13488, file: !13110, line: 291, column: 6)
!13504 = !DILocation(line: 291, column: 22, scope: !13503)
!13505 = !DILocation(line: 291, column: 6, scope: !13488)
!13506 = !DILocation(line: 293, column: 28, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13503, file: !13110, line: 291, column: 28)
!13508 = !DILocation(line: 293, column: 44, scope: !13507)
!13509 = !DILocation(line: 293, column: 9, scope: !13507)
!13510 = !DILocation(line: 295, column: 2, scope: !13507)
!13511 = !DILocation(line: 0, scope: !13503)
!13512 = !DILocation(line: 0, scope: !13367, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 302, column: 2, scope: !13488)
!13514 = !DILocation(line: 0, scope: !13375, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 215, column: 2, scope: !13367, inlinedAt: !13513)
!13516 = !DILocation(line: 95, column: 2, scope: !13375, inlinedAt: !13515)
!13517 = !DILocation(line: 304, column: 2, scope: !13488)
!13518 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13110, file: !13110, line: 318, type: !13519, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !13521)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{null, !13113}
!13521 = !{!13522, !13523, !13524}
!13522 = !DILocalVariable(name: "msgq", arg: 1, scope: !13518, file: !13110, line: 318, type: !13113)
!13523 = !DILocalVariable(name: "key", scope: !13518, file: !13110, line: 320, type: !13287)
!13524 = !DILocalVariable(name: "pending_thread", scope: !13518, file: !13110, line: 321, type: !3066)
!13525 = !DILocation(line: 0, scope: !13518)
!13526 = !DILocation(line: 0, scope: !13295, inlinedAt: !13527)
!13527 = distinct !DILocation(line: 323, column: 8, scope: !13518)
!13528 = !DILocation(line: 55, column: 2, scope: !13304, inlinedAt: !13529)
!13529 = distinct !DILocation(line: 145, column: 10, scope: !13295, inlinedAt: !13527)
!13530 = !DILocation(line: 0, scope: !13304, inlinedAt: !13529)
!13531 = !DILocation(line: 328, column: 27, scope: !13518)
!13532 = !DILocation(line: 328, column: 65, scope: !13518)
!13533 = !DILocation(line: 328, column: 2, scope: !13518)
!13534 = !DILocation(line: 0, scope: !13327, inlinedAt: !13535)
!13535 = distinct !DILocation(line: 329, column: 3, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13518, file: !13110, line: 328, column: 74)
!13537 = !DILocation(line: 67, column: 15, scope: !13327, inlinedAt: !13535)
!13538 = !DILocation(line: 67, column: 33, scope: !13327, inlinedAt: !13535)
!13539 = !DILocation(line: 330, column: 3, scope: !13536)
!13540 = distinct !{!13540, !13533, !13541}
!13541 = !DILocation(line: 331, column: 2, scope: !13518)
!13542 = !DILocation(line: 323, column: 27, scope: !13518)
!13543 = !DILocation(line: 333, column: 8, scope: !13518)
!13544 = !DILocation(line: 333, column: 18, scope: !13518)
!13545 = !DILocation(line: 334, column: 25, scope: !13518)
!13546 = !DILocation(line: 334, column: 8, scope: !13518)
!13547 = !DILocation(line: 334, column: 17, scope: !13518)
!13548 = !DILocation(line: 336, column: 2, scope: !13518)
!13549 = !DILocation(line: 337, column: 1, scope: !13518)
!13550 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2372, file: !2372, line: 93, type: !13551, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{!706, !2267, !2267}
!13553 = !{!13554, !13555, !13556, !13557}
!13554 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13550, file: !2372, line: 93, type: !2267)
!13555 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13550, file: !2372, line: 94, type: !2267)
!13556 = !DILocalVariable(name: "b1", scope: !13550, file: !2372, line: 97, type: !706)
!13557 = !DILocalVariable(name: "b2", scope: !13550, file: !2372, line: 98, type: !706)
!13558 = !DILocation(line: 0, scope: !13550)
!13559 = !DILocation(line: 97, column: 30, scope: !13550)
!13560 = !DILocation(line: 98, column: 30, scope: !13550)
!13561 = !DILocation(line: 100, column: 9, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13550, file: !2372, line: 100, column: 6)
!13563 = !DILocation(line: 100, column: 6, scope: !13550)
!13564 = !DILocation(line: 125, column: 1, scope: !13550)
!13565 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2372, file: !2372, line: 428, type: !13566, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13568)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{null, !2267}
!13568 = !{!13569}
!13569 = !DILocalVariable(name: "curr", arg: 1, scope: !13565, file: !2372, line: 428, type: !2267)
!13570 = !DILocation(line: 0, scope: !13565)
!13571 = !DILocation(line: 434, column: 6, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13565, file: !2372, line: 434, column: 6)
!13573 = !DILocation(line: 434, column: 23, scope: !13572)
!13574 = !DILocation(line: 434, column: 6, scope: !13565)
!13575 = !DILocation(line: 435, column: 50, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13572, file: !2372, line: 434, column: 29)
!13577 = !DILocation(line: 435, column: 48, scope: !13576)
!13578 = !DILocation(line: 435, column: 29, scope: !13576)
!13579 = !DILocation(line: 436, column: 24, scope: !13576)
!13580 = !DILocation(line: 436, column: 3, scope: !13576)
!13581 = !DILocation(line: 437, column: 2, scope: !13576)
!13582 = !DILocation(line: 438, column: 1, scope: !13565)
!13583 = distinct !DISubprogram(name: "slice_time", scope: !2372, file: !2372, line: 407, type: !13584, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13586)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{!107, !2267}
!13586 = !{!13587, !13588}
!13587 = !DILocalVariable(name: "curr", arg: 1, scope: !13583, file: !2372, line: 407, type: !2267)
!13588 = !DILocalVariable(name: "ret", scope: !13583, file: !2372, line: 409, type: !107)
!13589 = !DILocation(line: 0, scope: !13583)
!13590 = !DILocation(line: 409, column: 12, scope: !13583)
!13591 = !DILocation(line: 416, column: 2, scope: !13583)
!13592 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2372, file: !2372, line: 440, type: !13593, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !706, !107}
!13595 = !{!13596, !13597, !13598, !13604}
!13596 = !DILocalVariable(name: "slice", arg: 1, scope: !13592, file: !2372, line: 440, type: !706)
!13597 = !DILocalVariable(name: "prio", arg: 2, scope: !13592, file: !2372, line: 440, type: !107)
!13598 = !DILocalVariable(name: "__i", scope: !13599, file: !2372, line: 442, type: !13600)
!13599 = distinct !DILexicalBlock(scope: !13592, file: !2372, line: 442, column: 2)
!13600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13601)
!13601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13602)
!13602 = !{!13603}
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13601, file: !249, line: 33, baseType: !107, size: 32)
!13604 = !DILocalVariable(name: "__key", scope: !13599, file: !2372, line: 442, type: !13600)
!13605 = !DILocation(line: 0, scope: !13592)
!13606 = !DILocation(line: 0, scope: !13599)
!13607 = !DILocalVariable(name: "l", arg: 1, scope: !13608, file: !249, line: 136, type: !13611)
!13608 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13609, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13612)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!13600, !13611}
!13611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!13612 = !{!13607, !13613}
!13613 = !DILocalVariable(name: "k", scope: !13608, file: !249, line: 139, type: !13600)
!13614 = !DILocation(line: 0, scope: !13608, inlinedAt: !13615)
!13615 = distinct !DILocation(line: 442, column: 2, scope: !13599)
!13616 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13621)
!13617 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13618)
!13618 = !{!13619, !13620}
!13619 = !DILocalVariable(name: "key", scope: !13617, file: !5943, line: 44, type: !32)
!13620 = !DILocalVariable(name: "tmp", scope: !13617, file: !5943, line: 53, type: !32)
!13621 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !13615)
!13622 = !{i64 2081051}
!13623 = !DILocation(line: 0, scope: !13617, inlinedAt: !13621)
!13624 = !DILocation(line: 443, column: 29, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !2372, line: 442, column: 26)
!13626 = distinct !DILexicalBlock(scope: !13599, file: !2372, line: 442, column: 2)
!13627 = !DILocation(line: 444, column: 17, scope: !13625)
!13628 = !DILocation(line: 445, column: 51, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13625, file: !2372, line: 445, column: 7)
!13630 = !DILocation(line: 445, column: 7, scope: !13625)
!13631 = !DILocation(line: 0, scope: !13625)
!13632 = !DILocation(line: 451, column: 18, scope: !13625)
!13633 = !DILocation(line: 452, column: 3, scope: !13625)
!13634 = !DILocalVariable(name: "key", arg: 2, scope: !13635, file: !249, line: 190, type: !13600)
!13635 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13636, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13638)
!13636 = !DISubroutineType(types: !13637)
!13637 = !{null, !13611, !13600}
!13638 = !{!13639, !13634}
!13639 = !DILocalVariable(name: "l", arg: 1, scope: !13635, file: !249, line: 189, type: !13611)
!13640 = !DILocation(line: 0, scope: !13635, inlinedAt: !13641)
!13641 = distinct !DILocation(line: 442, column: 2, scope: !13626)
!13642 = !DILocalVariable(name: "key", arg: 1, scope: !13643, file: !5943, line: 84, type: !32)
!13643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13644)
!13644 = !{!13642}
!13645 = !DILocation(line: 0, scope: !13643, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13641)
!13647 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13646)
!13648 = !{i64 2081868}
!13649 = !DILocation(line: 454, column: 1, scope: !13592)
!13650 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13000, file: !13000, line: 389, type: !7124, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13651)
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "t", arg: 1, scope: !13650, file: !13000, line: 389, type: !162)
!13653 = !DILocation(line: 0, scope: !13650)
!13654 = !DILocalVariable(name: "t", arg: 1, scope: !13655, file: !13000, line: 102, type: !1474)
!13655 = distinct !DISubprogram(name: "z_tmcvt", scope: !13000, file: !13000, line: 102, type: !13008, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13656)
!13656 = !{!13654, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664, !13665, !13666}
!13657 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13655, file: !13000, line: 102, type: !162)
!13658 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13655, file: !13000, line: 103, type: !162)
!13659 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13655, file: !13000, line: 103, type: !136)
!13660 = !DILocalVariable(name: "result32", arg: 5, scope: !13655, file: !13000, line: 104, type: !136)
!13661 = !DILocalVariable(name: "round_up", arg: 6, scope: !13655, file: !13000, line: 104, type: !136)
!13662 = !DILocalVariable(name: "round_off", arg: 7, scope: !13655, file: !13000, line: 105, type: !136)
!13663 = !DILocalVariable(name: "mul_ratio", scope: !13655, file: !13000, line: 107, type: !136)
!13664 = !DILocalVariable(name: "div_ratio", scope: !13655, file: !13000, line: 109, type: !136)
!13665 = !DILocalVariable(name: "off", scope: !13655, file: !13000, line: 116, type: !1474)
!13666 = !DILocalVariable(name: "rdivisor", scope: !13667, file: !13000, line: 119, type: !162)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !13000, line: 118, column: 18)
!13668 = distinct !DILexicalBlock(scope: !13655, file: !13000, line: 118, column: 6)
!13669 = !DILocation(line: 0, scope: !13655, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 392, column: 9, scope: !13650)
!13671 = !DILocation(line: 143, column: 25, scope: !13672, inlinedAt: !13670)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !13000, line: 142, column: 17)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !13000, line: 142, column: 7)
!13674 = distinct !DILexicalBlock(scope: !13675, file: !13000, line: 141, column: 24)
!13675 = distinct !DILexicalBlock(scope: !13676, file: !13000, line: 141, column: 13)
!13676 = distinct !DILexicalBlock(scope: !13655, file: !13000, line: 134, column: 6)
!13677 = !DILocation(line: 392, column: 2, scope: !13650)
!13678 = distinct !DISubprogram(name: "z_time_slice", scope: !2372, file: !2372, line: 502, type: !7761, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13679)
!13679 = !{!13680, !13681}
!13680 = !DILocalVariable(name: "ticks", arg: 1, scope: !13678, file: !2372, line: 502, type: !107)
!13681 = !DILocalVariable(name: "key", scope: !13678, file: !2372, line: 511, type: !13600)
!13682 = !DILocation(line: 0, scope: !13678)
!13683 = !DILocation(line: 0, scope: !13608, inlinedAt: !13684)
!13684 = distinct !DILocation(line: 511, column: 25, scope: !13678)
!13685 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !13684)
!13687 = !DILocation(line: 0, scope: !13617, inlinedAt: !13686)
!13688 = !DILocation(line: 514, column: 6, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13678, file: !2372, line: 514, column: 6)
!13690 = !DILocation(line: 514, column: 25, scope: !13689)
!13691 = !DILocation(line: 514, column: 22, scope: !13689)
!13692 = !DILocation(line: 514, column: 6, scope: !13678)
!13693 = !DILocation(line: 515, column: 3, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13689, file: !2372, line: 514, column: 35)
!13695 = !DILocation(line: 0, scope: !13635, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 516, column: 3, scope: !13694)
!13697 = !DILocation(line: 0, scope: !13643, inlinedAt: !13698)
!13698 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13696)
!13699 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13698)
!13700 = !DILocation(line: 517, column: 3, scope: !13694)
!13701 = !DILocation(line: 519, column: 18, scope: !13678)
!13702 = !DILocation(line: 522, column: 6, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13678, file: !2372, line: 522, column: 6)
!13704 = !DILocation(line: 522, column: 27, scope: !13703)
!13705 = !DILocation(line: 522, column: 30, scope: !13703)
!13706 = !DILocation(line: 522, column: 6, scope: !13678)
!13707 = !DILocation(line: 523, column: 30, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !2372, line: 523, column: 7)
!13709 = distinct !DILexicalBlock(scope: !13703, file: !2372, line: 522, column: 51)
!13710 = !DILocation(line: 523, column: 13, scope: !13708)
!13711 = !DILocation(line: 523, column: 7, scope: !13709)
!13712 = !DILocation(line: 530, column: 10, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13708, file: !2372, line: 523, column: 43)
!13714 = !DILocation(line: 531, column: 3, scope: !13713)
!13715 = !DILocation(line: 532, column: 30, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13708, file: !2372, line: 531, column: 10)
!13717 = !DILocation(line: 535, column: 29, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13703, file: !2372, line: 534, column: 9)
!13719 = !DILocation(line: 0, scope: !13635, inlinedAt: !13720)
!13720 = distinct !DILocation(line: 537, column: 2, scope: !13678)
!13721 = !DILocation(line: 0, scope: !13643, inlinedAt: !13722)
!13722 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !13720)
!13723 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !13722)
!13724 = !DILocation(line: 538, column: 1, scope: !13678)
!13725 = distinct !DISubprogram(name: "sliceable", scope: !2372, file: !2372, line: 468, type: !13726, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13728)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!136, !2267}
!13728 = !{!13729, !13730}
!13729 = !DILocalVariable(name: "thread", arg: 1, scope: !13725, file: !2372, line: 468, type: !2267)
!13730 = !DILocalVariable(name: "ret", scope: !13725, file: !2372, line: 470, type: !136)
!13731 = !DILocation(line: 0, scope: !13725)
!13732 = !DILocation(line: 470, column: 13, scope: !13725)
!13733 = !DILocation(line: 471, column: 3, scope: !13725)
!13734 = !DILocation(line: 471, column: 7, scope: !13725)
!13735 = !DILocation(line: 472, column: 3, scope: !13725)
!13736 = !DILocation(line: 472, column: 37, scope: !13725)
!13737 = !DILocation(line: 472, column: 24, scope: !13725)
!13738 = !DILocation(line: 472, column: 43, scope: !13725)
!13739 = !DILocation(line: 472, column: 7, scope: !13725)
!13740 = !DILocation(line: 473, column: 3, scope: !13725)
!13741 = !DILocation(line: 473, column: 7, scope: !13725)
!13742 = !DILocation(line: 473, column: 6, scope: !13725)
!13743 = !DILocation(line: 479, column: 2, scope: !13725)
!13744 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2372, file: !2372, line: 482, type: !13745, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13747)
!13745 = !DISubroutineType(types: !13746)
!13746 = !{!13600, !13600}
!13747 = !{!13748, !13749}
!13748 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13744, file: !2372, line: 482, type: !13600)
!13749 = !DILocalVariable(name: "curr", scope: !13744, file: !2372, line: 484, type: !2267)
!13750 = !DILocation(line: 0, scope: !13744)
!13751 = !DILocation(line: 484, column: 26, scope: !13744)
!13752 = !DILocation(line: 493, column: 7, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13744, file: !2372, line: 493, column: 6)
!13754 = !DILocation(line: 493, column: 6, scope: !13744)
!13755 = !DILocation(line: 494, column: 3, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13753, file: !2372, line: 493, column: 49)
!13757 = !DILocation(line: 495, column: 2, scope: !13756)
!13758 = !DILocation(line: 496, column: 2, scope: !13744)
!13759 = !DILocation(line: 499, column: 1, scope: !13744)
!13760 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12441, file: !12441, line: 106, type: !13726, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13761)
!13761 = !{!13762, !13763}
!13762 = !DILocalVariable(name: "thread", arg: 1, scope: !13760, file: !12441, line: 106, type: !2267)
!13763 = !DILocalVariable(name: "state", scope: !13760, file: !12441, line: 108, type: !133)
!13764 = !DILocation(line: 0, scope: !13760)
!13765 = !DILocation(line: 108, column: 31, scope: !13760)
!13766 = !DILocation(line: 110, column: 16, scope: !13760)
!13767 = !DILocation(line: 111, column: 41, scope: !13760)
!13768 = !DILocation(line: 110, column: 2, scope: !13760)
!13769 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2372, file: !2372, line: 393, type: !13566, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13770)
!13770 = !{!13771}
!13771 = !DILocalVariable(name: "thread", arg: 1, scope: !13769, file: !2372, line: 393, type: !2267)
!13772 = !DILocation(line: 0, scope: !13769)
!13773 = !DILocation(line: 395, column: 6, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13769, file: !2372, line: 395, column: 6)
!13775 = !DILocation(line: 395, column: 6, scope: !13769)
!13776 = !DILocalVariable(name: "thread", arg: 1, scope: !13777, file: !2372, line: 264, type: !2267)
!13777 = distinct !DISubprogram(name: "dequeue_thread", scope: !2372, file: !2372, line: 264, type: !13566, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13778)
!13778 = !{!13776}
!13779 = !DILocation(line: 0, scope: !13777, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 396, column: 3, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13774, file: !2372, line: 395, column: 34)
!13782 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !13780)
!13783 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !13780)
!13784 = !DILocalVariable(name: "thread", arg: 1, scope: !13785, file: !2372, line: 232, type: !2267)
!13785 = distinct !DISubprogram(name: "runq_remove", scope: !2372, file: !2372, line: 232, type: !13566, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13786)
!13786 = !{!13784}
!13787 = !DILocation(line: 0, scope: !13785, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !13780)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !2372, line: 267, column: 35)
!13790 = distinct !DILexicalBlock(scope: !13777, file: !2372, line: 267, column: 6)
!13791 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !13788)
!13792 = !DILocation(line: 397, column: 2, scope: !13781)
!13793 = !DILocalVariable(name: "thread", arg: 1, scope: !13794, file: !2372, line: 250, type: !2267)
!13794 = distinct !DISubprogram(name: "queue_thread", scope: !2372, file: !2372, line: 250, type: !13566, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13795)
!13795 = !{!13793}
!13796 = !DILocation(line: 0, scope: !13794, inlinedAt: !13797)
!13797 = distinct !DILocation(line: 398, column: 2, scope: !13769)
!13798 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !13797)
!13799 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !13797)
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13801, file: !2372, line: 227, type: !2267)
!13801 = distinct !DISubprogram(name: "runq_add", scope: !2372, file: !2372, line: 227, type: !13566, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13802)
!13802 = !{!13800}
!13803 = !DILocation(line: 0, scope: !13801, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !13797)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !2372, line: 253, column: 35)
!13806 = distinct !DILexicalBlock(scope: !13794, file: !2372, line: 253, column: 6)
!13807 = !DILocalVariable(name: "pq", arg: 1, scope: !13808, file: !2372, line: 181, type: !13811)
!13808 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2372, file: !2372, line: 181, type: !13809, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13812)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{null, !13811, !2267}
!13811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!13812 = !{!13807, !13813, !13814}
!13813 = !DILocalVariable(name: "thread", arg: 2, scope: !13808, file: !2372, line: 182, type: !2267)
!13814 = !DILocalVariable(name: "t", scope: !13808, file: !2372, line: 184, type: !2267)
!13815 = !DILocation(line: 0, scope: !13808, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !13804)
!13817 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !13816)
!13818 = distinct !DILexicalBlock(scope: !13808, file: !2372, line: 188, column: 2)
!13819 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !13816)
!13820 = distinct !DILexicalBlock(scope: !13818, file: !2372, line: 188, column: 2)
!13821 = !DILocation(line: 0, scope: !13818, inlinedAt: !13816)
!13822 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !13816)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !2372, line: 189, column: 7)
!13824 = distinct !DILexicalBlock(scope: !13820, file: !2372, line: 188, column: 56)
!13825 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !13816)
!13826 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !13816)
!13827 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !13816)
!13828 = distinct !DILexicalBlock(scope: !13823, file: !2372, line: 189, column: 40)
!13829 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !13816)
!13830 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !13816)
!13831 = distinct !{!13831, !13817, !13832}
!13832 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !13816)
!13833 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !13816)
!13834 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !13816)
!13835 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !13816)
!13836 = !DILocation(line: 399, column: 25, scope: !13769)
!13837 = !DILocation(line: 399, column: 22, scope: !13769)
!13838 = !DILocation(line: 399, column: 2, scope: !13769)
!13839 = !DILocation(line: 400, column: 1, scope: !13769)
!13840 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12441, file: !12441, line: 136, type: !13726, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13841)
!13841 = !{!13842}
!13842 = !DILocalVariable(name: "thread", arg: 1, scope: !13840, file: !12441, line: 136, type: !2267)
!13843 = !DILocation(line: 0, scope: !13840)
!13844 = !DILocation(line: 138, column: 9, scope: !13840)
!13845 = !DILocation(line: 138, column: 2, scope: !13840)
!13846 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2372, file: !2372, line: 1137, type: !13809, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13847)
!13847 = !{!13848, !13849}
!13848 = !DILocalVariable(name: "pq", arg: 1, scope: !13846, file: !2372, line: 1137, type: !13811)
!13849 = !DILocalVariable(name: "thread", arg: 2, scope: !13846, file: !2372, line: 1137, type: !2267)
!13850 = !DILocation(line: 0, scope: !13846)
!13851 = !DILocation(line: 1141, column: 33, scope: !13846)
!13852 = !DILocation(line: 1141, column: 2, scope: !13846)
!13853 = !DILocation(line: 1142, column: 1, scope: !13846)
!13854 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13855, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13857)
!13855 = !DISubroutineType(types: !13856)
!13856 = !{!2368, !13811}
!13857 = !{!13858}
!13858 = !DILocalVariable(name: "list", arg: 1, scope: !13854, file: !233, line: 294, type: !13811)
!13859 = !DILocation(line: 0, scope: !13854)
!13860 = !DILocation(line: 296, column: 9, scope: !13854)
!13861 = !DILocation(line: 296, column: 49, scope: !13854)
!13862 = !DILocation(line: 296, column: 2, scope: !13854)
!13863 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !13864, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13866)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{null, !2368, !2368}
!13866 = !{!13867, !13868, !13869}
!13867 = !DILocalVariable(name: "successor", arg: 1, scope: !13863, file: !233, line: 443, type: !2368)
!13868 = !DILocalVariable(name: "node", arg: 2, scope: !13863, file: !233, line: 443, type: !2368)
!13869 = !DILocalVariable(name: "prev", scope: !13863, file: !233, line: 445, type: !13870)
!13870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2368)
!13871 = !DILocation(line: 0, scope: !13863)
!13872 = !DILocation(line: 445, column: 39, scope: !13863)
!13873 = !DILocation(line: 447, column: 8, scope: !13863)
!13874 = !DILocation(line: 447, column: 13, scope: !13863)
!13875 = !DILocation(line: 448, column: 8, scope: !13863)
!13876 = !DILocation(line: 448, column: 13, scope: !13863)
!13877 = !DILocation(line: 449, column: 8, scope: !13863)
!13878 = !DILocation(line: 449, column: 13, scope: !13863)
!13879 = !DILocation(line: 450, column: 18, scope: !13863)
!13880 = !DILocation(line: 451, column: 1, scope: !13863)
!13881 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !13882, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{!2368, !13811, !2368}
!13884 = !{!13885, !13886}
!13885 = !DILocalVariable(name: "list", arg: 1, scope: !13881, file: !233, line: 341, type: !13811)
!13886 = !DILocalVariable(name: "node", arg: 2, scope: !13881, file: !233, line: 342, type: !2368)
!13887 = !DILocation(line: 0, scope: !13881)
!13888 = !DILocation(line: 344, column: 15, scope: !13881)
!13889 = !DILocation(line: 344, column: 9, scope: !13881)
!13890 = !DILocation(line: 344, column: 26, scope: !13881)
!13891 = !DILocation(line: 344, column: 2, scope: !13881)
!13892 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !13893, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13895)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !13811, !2368}
!13895 = !{!13896, !13897, !13898}
!13896 = !DILocalVariable(name: "list", arg: 1, scope: !13892, file: !233, line: 404, type: !13811)
!13897 = !DILocalVariable(name: "node", arg: 2, scope: !13892, file: !233, line: 404, type: !2368)
!13898 = !DILocalVariable(name: "tail", scope: !13892, file: !233, line: 406, type: !13870)
!13899 = !DILocation(line: 0, scope: !13892)
!13900 = !DILocation(line: 406, column: 34, scope: !13892)
!13901 = !DILocation(line: 408, column: 8, scope: !13892)
!13902 = !DILocation(line: 408, column: 13, scope: !13892)
!13903 = !DILocation(line: 409, column: 8, scope: !13892)
!13904 = !DILocation(line: 409, column: 13, scope: !13892)
!13905 = !DILocation(line: 411, column: 8, scope: !13892)
!13906 = !DILocation(line: 411, column: 13, scope: !13892)
!13907 = !DILocation(line: 412, column: 13, scope: !13892)
!13908 = !DILocation(line: 413, column: 1, scope: !13892)
!13909 = distinct !DISubprogram(name: "update_cache", scope: !2372, file: !2372, line: 559, type: !7761, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13910)
!13910 = !{!13911, !13912}
!13911 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13909, file: !2372, line: 559, type: !107)
!13912 = !DILocalVariable(name: "thread", scope: !13909, file: !2372, line: 562, type: !2267)
!13913 = !DILocation(line: 0, scope: !13909)
!13914 = !DILocation(line: 239, column: 9, scope: !13915, inlinedAt: !13918)
!13915 = distinct !DISubprogram(name: "runq_best", scope: !2372, file: !2372, line: 237, type: !13916, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!13916 = !DISubroutineType(types: !13917)
!13917 = !{!2267}
!13918 = distinct !DILocation(line: 314, column: 28, scope: !13919, inlinedAt: !13922)
!13919 = distinct !DISubprogram(name: "next_up", scope: !2372, file: !2372, line: 312, type: !13916, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13920)
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "thread", scope: !13919, file: !2372, line: 314, type: !2267)
!13922 = distinct !DILocation(line: 562, column: 28, scope: !13909)
!13923 = !DILocation(line: 0, scope: !13919, inlinedAt: !13922)
!13924 = !DILocation(line: 340, column: 17, scope: !13919, inlinedAt: !13922)
!13925 = !DILocation(line: 340, column: 9, scope: !13919, inlinedAt: !13922)
!13926 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !2372, line: 127, type: !2267)
!13927 = distinct !DISubprogram(name: "should_preempt", scope: !2372, file: !2372, line: 127, type: !13928, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13930)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!136, !2267, !107}
!13930 = !{!13926, !13931}
!13931 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13927, file: !2372, line: 128, type: !107)
!13932 = !DILocation(line: 0, scope: !13927, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 564, column: 6, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13909, file: !2372, line: 564, column: 6)
!13935 = !DILocation(line: 133, column: 17, scope: !13936, inlinedAt: !13933)
!13936 = distinct !DILexicalBlock(scope: !13927, file: !2372, line: 133, column: 6)
!13937 = !DILocation(line: 0, scope: !13934)
!13938 = !DILocation(line: 133, column: 6, scope: !13927, inlinedAt: !13933)
!13939 = !DILocation(line: 140, column: 6, scope: !13940, inlinedAt: !13933)
!13940 = distinct !DILexicalBlock(scope: !13927, file: !2372, line: 140, column: 6)
!13941 = !DILocation(line: 140, column: 6, scope: !13927, inlinedAt: !13933)
!13942 = !DILocation(line: 150, column: 9, scope: !13943, inlinedAt: !13933)
!13943 = distinct !DILexicalBlock(scope: !13927, file: !2372, line: 149, column: 6)
!13944 = !DILocation(line: 149, column: 6, scope: !13927, inlinedAt: !13933)
!13945 = !DILocation(line: 157, column: 6, scope: !13946, inlinedAt: !13933)
!13946 = distinct !DILexicalBlock(scope: !13927, file: !2372, line: 157, column: 6)
!13947 = !DILocation(line: 564, column: 6, scope: !13909)
!13948 = !DILocation(line: 566, column: 14, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13950, file: !2372, line: 566, column: 7)
!13950 = distinct !DILexicalBlock(scope: !13934, file: !2372, line: 564, column: 42)
!13951 = !DILocation(line: 566, column: 7, scope: !13950)
!13952 = !DILocation(line: 567, column: 4, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13949, file: !2372, line: 566, column: 27)
!13954 = !DILocation(line: 568, column: 3, scope: !13953)
!13955 = !DILocation(line: 585, column: 1, scope: !13909)
!13956 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2372, file: !2372, line: 1144, type: !13957, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{!2267, !13811}
!13959 = !{!13960, !13961, !13962}
!13960 = !DILocalVariable(name: "pq", arg: 1, scope: !13956, file: !2372, line: 1144, type: !13811)
!13961 = !DILocalVariable(name: "thread", scope: !13956, file: !2372, line: 1146, type: !2267)
!13962 = !DILocalVariable(name: "n", scope: !13956, file: !2372, line: 1147, type: !2368)
!13963 = !DILocation(line: 0, scope: !13956)
!13964 = !DILocation(line: 1147, column: 19, scope: !13956)
!13965 = !DILocation(line: 1152, column: 2, scope: !13956)
!13966 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12441, file: !12441, line: 115, type: !13726, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13967)
!13967 = !{!13968}
!13968 = !DILocalVariable(name: "thread", arg: 1, scope: !13966, file: !12441, line: 115, type: !2267)
!13969 = !DILocation(line: 0, scope: !13966)
!13970 = !DILocation(line: 117, column: 46, scope: !13966)
!13971 = !DILocation(line: 117, column: 10, scope: !13966)
!13972 = !DILocation(line: 117, column: 9, scope: !13966)
!13973 = !DILocation(line: 117, column: 2, scope: !13966)
!13974 = distinct !DISubprogram(name: "is_preempt", scope: !2372, file: !2372, line: 62, type: !13584, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13975)
!13975 = !{!13976}
!13976 = !DILocalVariable(name: "thread", arg: 1, scope: !13974, file: !2372, line: 62, type: !2267)
!13977 = !DILocation(line: 0, scope: !13974)
!13978 = !DILocation(line: 65, column: 22, scope: !13974)
!13979 = !DILocation(line: 65, column: 30, scope: !13974)
!13980 = !DILocation(line: 65, column: 2, scope: !13974)
!13981 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12833, file: !12833, line: 35, type: !13982, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13986)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{!136, !13984}
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13985, size: 32)
!13985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "to", arg: 1, scope: !13981, file: !12833, line: 35, type: !13984)
!13988 = !DILocation(line: 0, scope: !13981)
!13989 = !DILocation(line: 37, column: 35, scope: !13981)
!13990 = !DILocation(line: 37, column: 10, scope: !13981)
!13991 = !DILocation(line: 37, column: 9, scope: !13981)
!13992 = !DILocation(line: 37, column: 2, scope: !13981)
!13993 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !13994, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !13998)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!136, !13996}
!13996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13997, size: 32)
!13997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2277)
!13998 = !{!13999}
!13999 = !DILocalVariable(name: "node", arg: 1, scope: !13993, file: !233, line: 225, type: !13996)
!14000 = !DILocation(line: 0, scope: !13993)
!14001 = !DILocation(line: 227, column: 15, scope: !13993)
!14002 = !DILocation(line: 227, column: 20, scope: !13993)
!14003 = !DILocation(line: 227, column: 2, scope: !13993)
!14004 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !13882, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14005)
!14005 = !{!14006, !14007}
!14006 = !DILocalVariable(name: "list", arg: 1, scope: !14004, file: !233, line: 325, type: !13811)
!14007 = !DILocalVariable(name: "node", arg: 2, scope: !14004, file: !233, line: 326, type: !2368)
!14008 = !DILocation(line: 0, scope: !14004)
!14009 = !DILocation(line: 328, column: 24, scope: !14004)
!14010 = !DILocation(line: 328, column: 15, scope: !14004)
!14011 = !DILocation(line: 328, column: 9, scope: !14004)
!14012 = !DILocation(line: 328, column: 45, scope: !14004)
!14013 = !DILocation(line: 328, column: 2, scope: !14004)
!14014 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !14015, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14017)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!136, !13811}
!14017 = !{!14018}
!14018 = !DILocalVariable(name: "list", arg: 1, scope: !14014, file: !233, line: 266, type: !13811)
!14019 = !DILocation(line: 0, scope: !14014)
!14020 = !DILocation(line: 268, column: 15, scope: !14014)
!14021 = !DILocation(line: 268, column: 20, scope: !14014)
!14022 = !DILocation(line: 268, column: 2, scope: !14014)
!14023 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !14024, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14026)
!14024 = !DISubroutineType(types: !14025)
!14025 = !{null, !2368}
!14026 = !{!14027, !14028, !14029}
!14027 = !DILocalVariable(name: "node", arg: 1, scope: !14023, file: !233, line: 496, type: !2368)
!14028 = !DILocalVariable(name: "prev", scope: !14023, file: !233, line: 498, type: !13870)
!14029 = !DILocalVariable(name: "next", scope: !14023, file: !233, line: 499, type: !13870)
!14030 = !DILocation(line: 0, scope: !14023)
!14031 = !DILocation(line: 498, column: 34, scope: !14023)
!14032 = !DILocation(line: 499, column: 34, scope: !14023)
!14033 = !DILocation(line: 501, column: 8, scope: !14023)
!14034 = !DILocation(line: 501, column: 13, scope: !14023)
!14035 = !DILocation(line: 502, column: 8, scope: !14023)
!14036 = !DILocation(line: 502, column: 13, scope: !14023)
!14037 = !DILocation(line: 503, column: 2, scope: !14023)
!14038 = !DILocation(line: 504, column: 1, scope: !14023)
!14039 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !14024, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14040)
!14040 = !{!14041}
!14041 = !DILocalVariable(name: "node", arg: 1, scope: !14039, file: !233, line: 211, type: !2368)
!14042 = !DILocation(line: 0, scope: !14039)
!14043 = !DILocation(line: 213, column: 8, scope: !14039)
!14044 = !DILocation(line: 213, column: 13, scope: !14039)
!14045 = !DILocation(line: 214, column: 8, scope: !14039)
!14046 = !DILocation(line: 214, column: 13, scope: !14039)
!14047 = !DILocation(line: 215, column: 1, scope: !14039)
!14048 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12441, file: !12441, line: 131, type: !14049, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!136, !2267, !162}
!14051 = !{!14052, !14053}
!14052 = !DILocalVariable(name: "thread", arg: 1, scope: !14048, file: !12441, line: 131, type: !2267)
!14053 = !DILocalVariable(name: "state", arg: 2, scope: !14048, file: !12441, line: 131, type: !162)
!14054 = !DILocation(line: 0, scope: !14048)
!14055 = !DILocation(line: 133, column: 23, scope: !14048)
!14056 = !DILocation(line: 133, column: 45, scope: !14048)
!14057 = !DILocation(line: 133, column: 2, scope: !14048)
!14058 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12441, file: !12441, line: 211, type: !14059, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{!136, !107, !107}
!14061 = !{!14062, !14063}
!14062 = !DILocalVariable(name: "prio", arg: 1, scope: !14058, file: !12441, line: 211, type: !107)
!14063 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14058, file: !12441, line: 211, type: !107)
!14064 = !DILocation(line: 0, scope: !14058)
!14065 = !DILocation(line: 213, column: 9, scope: !14058)
!14066 = !DILocation(line: 213, column: 2, scope: !14058)
!14067 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12441, file: !12441, line: 83, type: !13726, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14068)
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !12441, line: 83, type: !2267)
!14070 = !DILocation(line: 0, scope: !14067)
!14071 = !DILocation(line: 89, column: 16, scope: !14067)
!14072 = !DILocation(line: 89, column: 2, scope: !14067)
!14073 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12441, file: !12441, line: 206, type: !14059, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14074)
!14074 = !{!14075, !14076}
!14075 = !DILocalVariable(name: "prio1", arg: 1, scope: !14073, file: !12441, line: 206, type: !107)
!14076 = !DILocalVariable(name: "prio2", arg: 2, scope: !14073, file: !12441, line: 206, type: !107)
!14077 = !DILocation(line: 0, scope: !14073)
!14078 = !DILocation(line: 208, column: 15, scope: !14073)
!14079 = !DILocation(line: 208, column: 2, scope: !14073)
!14080 = distinct !DISubprogram(name: "z_ready_thread", scope: !2372, file: !2372, line: 635, type: !13566, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14081)
!14081 = !{!14082, !14083, !14085}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14080, file: !2372, line: 635, type: !2267)
!14083 = !DILocalVariable(name: "__i", scope: !14084, file: !2372, line: 637, type: !13600)
!14084 = distinct !DILexicalBlock(scope: !14080, file: !2372, line: 637, column: 2)
!14085 = !DILocalVariable(name: "__key", scope: !14084, file: !2372, line: 637, type: !13600)
!14086 = !DILocation(line: 0, scope: !14080)
!14087 = !DILocation(line: 0, scope: !14084)
!14088 = !DILocation(line: 0, scope: !13608, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 637, column: 2, scope: !14084)
!14090 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14089)
!14092 = !DILocation(line: 0, scope: !13617, inlinedAt: !14091)
!14093 = !DILocation(line: 639, column: 4, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !2372, line: 638, column: 41)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !2372, line: 638, column: 7)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !2372, line: 637, column: 26)
!14097 = distinct !DILexicalBlock(scope: !14084, file: !2372, line: 637, column: 2)
!14098 = !DILocation(line: 0, scope: !13635, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 637, column: 2, scope: !14097)
!14100 = !DILocation(line: 0, scope: !13643, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14099)
!14102 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14101)
!14103 = !DILocation(line: 642, column: 1, scope: !14080)
!14104 = distinct !DISubprogram(name: "ready_thread", scope: !2372, file: !2372, line: 617, type: !13566, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14105)
!14105 = !{!14106}
!14106 = !DILocalVariable(name: "thread", arg: 1, scope: !14104, file: !2372, line: 617, type: !2267)
!14107 = !DILocation(line: 0, scope: !14104)
!14108 = !DILocation(line: 626, column: 7, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14104, file: !2372, line: 626, column: 6)
!14110 = !DILocation(line: 626, column: 34, scope: !14109)
!14111 = !DILocation(line: 626, column: 37, scope: !14109)
!14112 = !DILocation(line: 626, column: 6, scope: !14104)
!14113 = !DILocation(line: 0, scope: !13794, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 629, column: 3, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14109, file: !2372, line: 626, column: 64)
!14116 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !14114)
!14117 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !14114)
!14118 = !DILocation(line: 0, scope: !13801, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !14114)
!14120 = !DILocation(line: 0, scope: !13808, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !14119)
!14122 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14121)
!14123 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14121)
!14124 = !DILocation(line: 0, scope: !13818, inlinedAt: !14121)
!14125 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14121)
!14126 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14121)
!14127 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14121)
!14128 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !14121)
!14129 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14121)
!14130 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14121)
!14131 = distinct !{!14131, !14122, !14132}
!14132 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14121)
!14133 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !14121)
!14134 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14121)
!14135 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14121)
!14136 = !DILocation(line: 630, column: 3, scope: !14115)
!14137 = !DILocation(line: 632, column: 2, scope: !14115)
!14138 = !DILocation(line: 633, column: 1, scope: !14104)
!14139 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12441, file: !12441, line: 120, type: !13726, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14140)
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "thread", arg: 1, scope: !14139, file: !12441, line: 120, type: !2267)
!14142 = !DILocation(line: 0, scope: !14139)
!14143 = !DILocation(line: 122, column: 12, scope: !14139)
!14144 = !DILocation(line: 122, column: 62, scope: !14139)
!14145 = !DILocation(line: 123, column: 4, scope: !14139)
!14146 = !DILocation(line: 122, column: 2, scope: !14139)
!14147 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2372, file: !2372, line: 644, type: !13566, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14148)
!14148 = !{!14149, !14150, !14152}
!14149 = !DILocalVariable(name: "thread", arg: 1, scope: !14147, file: !2372, line: 644, type: !2267)
!14150 = !DILocalVariable(name: "__i", scope: !14151, file: !2372, line: 646, type: !13600)
!14151 = distinct !DILexicalBlock(scope: !14147, file: !2372, line: 646, column: 2)
!14152 = !DILocalVariable(name: "__key", scope: !14151, file: !2372, line: 646, type: !13600)
!14153 = !DILocation(line: 0, scope: !14147)
!14154 = !DILocation(line: 0, scope: !14151)
!14155 = !DILocation(line: 0, scope: !13608, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 646, column: 2, scope: !14151)
!14157 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14158)
!14158 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14156)
!14159 = !DILocation(line: 0, scope: !13617, inlinedAt: !14158)
!14160 = !DILocation(line: 647, column: 3, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !2372, line: 646, column: 26)
!14162 = distinct !DILexicalBlock(scope: !14151, file: !2372, line: 646, column: 2)
!14163 = !DILocation(line: 0, scope: !13635, inlinedAt: !14164)
!14164 = distinct !DILocation(line: 646, column: 2, scope: !14162)
!14165 = !DILocation(line: 0, scope: !13643, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14164)
!14167 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14166)
!14168 = !DILocation(line: 649, column: 1, scope: !14147)
!14169 = distinct !DISubprogram(name: "z_sched_start", scope: !2372, file: !2372, line: 651, type: !13566, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14170)
!14170 = !{!14171, !14172}
!14171 = !DILocalVariable(name: "thread", arg: 1, scope: !14169, file: !2372, line: 651, type: !2267)
!14172 = !DILocalVariable(name: "key", scope: !14169, file: !2372, line: 653, type: !13600)
!14173 = !DILocation(line: 0, scope: !14169)
!14174 = !DILocation(line: 0, scope: !13608, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 653, column: 25, scope: !14169)
!14176 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14177)
!14177 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14175)
!14178 = !DILocation(line: 0, scope: !13617, inlinedAt: !14177)
!14179 = !DILocation(line: 655, column: 6, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14169, file: !2372, line: 655, column: 6)
!14181 = !DILocation(line: 655, column: 6, scope: !14169)
!14182 = !DILocation(line: 0, scope: !13635, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 656, column: 3, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14180, file: !2372, line: 655, column: 36)
!14185 = !DILocation(line: 0, scope: !13643, inlinedAt: !14186)
!14186 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14183)
!14187 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14186)
!14188 = !DILocation(line: 657, column: 3, scope: !14184)
!14189 = !DILocation(line: 660, column: 2, scope: !14169)
!14190 = !DILocation(line: 661, column: 2, scope: !14169)
!14191 = !DILocation(line: 662, column: 2, scope: !14169)
!14192 = !DILocation(line: 663, column: 1, scope: !14169)
!14193 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12441, file: !12441, line: 126, type: !13726, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14194)
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "thread", arg: 1, scope: !14193, file: !12441, line: 126, type: !2267)
!14196 = !DILocation(line: 0, scope: !14193)
!14197 = !DILocation(line: 128, column: 23, scope: !14193)
!14198 = !DILocation(line: 128, column: 36, scope: !14193)
!14199 = !DILocation(line: 128, column: 56, scope: !14193)
!14200 = !DILocation(line: 128, column: 2, scope: !14193)
!14201 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12441, file: !12441, line: 155, type: !13566, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14202)
!14202 = !{!14203}
!14203 = !DILocalVariable(name: "thread", arg: 1, scope: !14201, file: !12441, line: 155, type: !2267)
!14204 = !DILocation(line: 0, scope: !14201)
!14205 = !DILocation(line: 157, column: 15, scope: !14201)
!14206 = !DILocation(line: 157, column: 28, scope: !14201)
!14207 = !DILocation(line: 158, column: 1, scope: !14201)
!14208 = distinct !DISubprogram(name: "z_reschedule", scope: !2372, file: !2372, line: 967, type: !13636, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14209)
!14209 = !{!14210, !14211}
!14210 = !DILocalVariable(name: "lock", arg: 1, scope: !14208, file: !2372, line: 967, type: !13611)
!14211 = !DILocalVariable(name: "key", arg: 2, scope: !14208, file: !2372, line: 967, type: !13600)
!14212 = !DILocation(line: 0, scope: !14208)
!14213 = !DILocation(line: 969, column: 6, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14208, file: !2372, line: 969, column: 6)
!14215 = !DILocation(line: 969, column: 23, scope: !14214)
!14216 = !DILocation(line: 969, column: 26, scope: !14214)
!14217 = !DILocation(line: 969, column: 6, scope: !14208)
!14218 = !DILocalVariable(name: "key", arg: 2, scope: !14219, file: !12545, line: 193, type: !13600)
!14219 = distinct !DISubprogram(name: "z_swap", scope: !12545, file: !12545, line: 193, type: !14220, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!107, !13611, !13600}
!14222 = !{!14223, !14218}
!14223 = !DILocalVariable(name: "lock", arg: 1, scope: !14219, file: !12545, line: 193, type: !13611)
!14224 = !DILocation(line: 0, scope: !14219, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 970, column: 3, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14214, file: !2372, line: 969, column: 39)
!14227 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !14225)
!14228 = !DILocation(line: 971, column: 2, scope: !14226)
!14229 = !DILocation(line: 0, scope: !13635, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 972, column: 3, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14214, file: !2372, line: 971, column: 9)
!14232 = !DILocation(line: 0, scope: !13643, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14230)
!14234 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14233)
!14235 = !DILocation(line: 975, column: 1, scope: !14208)
!14236 = distinct !DISubprogram(name: "resched", scope: !2372, file: !2372, line: 940, type: !14237, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14239)
!14237 = !DISubroutineType(types: !14238)
!14238 = !{!136, !162}
!14239 = !{!14240}
!14240 = !DILocalVariable(name: "key", arg: 1, scope: !14236, file: !2372, line: 940, type: !162)
!14241 = !DILocation(line: 0, scope: !14236)
!14242 = !DILocalVariable(name: "key", arg: 1, scope: !14243, file: !5943, line: 112, type: !32)
!14243 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5943, file: !5943, line: 112, type: !14244, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14246)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!136, !32}
!14246 = !{!14242}
!14247 = !DILocation(line: 0, scope: !14243, inlinedAt: !14248)
!14248 = distinct !DILocation(line: 946, column: 9, scope: !14236)
!14249 = !DILocation(line: 115, column: 13, scope: !14243, inlinedAt: !14248)
!14250 = !DILocation(line: 946, column: 32, scope: !14236)
!14251 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !14255)
!14252 = distinct !DISubprogram(name: "__get_IPSR", scope: !6117, file: !6117, line: 1027, type: !6198, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14253)
!14253 = !{!14254}
!14254 = !DILocalVariable(name: "result", scope: !14252, file: !6117, line: 1029, type: !162)
!14255 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !14257)
!14256 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6911, file: !6911, line: 46, type: !6912, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!14257 = distinct !DILocation(line: 946, column: 36, scope: !14236)
!14258 = !{i64 2955626}
!14259 = !DILocation(line: 0, scope: !14252, inlinedAt: !14255)
!14260 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !14257)
!14261 = !DILocation(line: 946, column: 2, scope: !14236)
!14262 = distinct !DISubprogram(name: "need_swap", scope: !2372, file: !2372, line: 953, type: !6912, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14263)
!14263 = !{!14264}
!14264 = !DILocalVariable(name: "new_thread", scope: !14262, file: !2372, line: 959, type: !2267)
!14265 = !DILocation(line: 962, column: 31, scope: !14262)
!14266 = !DILocation(line: 0, scope: !14262)
!14267 = !DILocation(line: 963, column: 23, scope: !14262)
!14268 = !DILocation(line: 963, column: 20, scope: !14262)
!14269 = !DILocation(line: 963, column: 2, scope: !14262)
!14270 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12545, file: !12545, line: 181, type: !6127, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14271)
!14271 = !{!14272, !14273}
!14272 = !DILocalVariable(name: "key", arg: 1, scope: !14270, file: !12545, line: 181, type: !32)
!14273 = !DILocalVariable(name: "ret", scope: !14270, file: !12545, line: 183, type: !107)
!14274 = !DILocation(line: 0, scope: !14270)
!14275 = !DILocation(line: 185, column: 8, scope: !14270)
!14276 = !DILocation(line: 186, column: 2, scope: !14270)
!14277 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2372, file: !2372, line: 665, type: !13566, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14278)
!14278 = !{!14279, !14280, !14282}
!14279 = !DILocalVariable(name: "thread", arg: 1, scope: !14277, file: !2372, line: 665, type: !2267)
!14280 = !DILocalVariable(name: "__i", scope: !14281, file: !2372, line: 671, type: !13600)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !2372, line: 671, column: 2)
!14282 = !DILocalVariable(name: "__key", scope: !14281, file: !2372, line: 671, type: !13600)
!14283 = !DILocation(line: 0, scope: !14277)
!14284 = !DILocation(line: 669, column: 8, scope: !14277)
!14285 = !DILocation(line: 0, scope: !14281)
!14286 = !DILocation(line: 0, scope: !13608, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 671, column: 2, scope: !14281)
!14288 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14287)
!14290 = !DILocation(line: 0, scope: !13617, inlinedAt: !14289)
!14291 = !DILocation(line: 672, column: 7, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2372, line: 672, column: 7)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2372, line: 671, column: 26)
!14294 = distinct !DILexicalBlock(scope: !14281, file: !2372, line: 671, column: 2)
!14295 = !DILocation(line: 672, column: 7, scope: !14293)
!14296 = !DILocation(line: 0, scope: !13777, inlinedAt: !14297)
!14297 = distinct !DILocation(line: 673, column: 4, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14292, file: !2372, line: 672, column: 35)
!14299 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !14297)
!14300 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14297)
!14301 = !DILocation(line: 0, scope: !13785, inlinedAt: !14302)
!14302 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14297)
!14303 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14302)
!14304 = !DILocation(line: 674, column: 3, scope: !14298)
!14305 = !DILocation(line: 675, column: 3, scope: !14293)
!14306 = !DILocation(line: 676, column: 26, scope: !14293)
!14307 = !DILocation(line: 676, column: 23, scope: !14293)
!14308 = !DILocation(line: 676, column: 3, scope: !14293)
!14309 = !DILocation(line: 0, scope: !13635, inlinedAt: !14310)
!14310 = distinct !DILocation(line: 671, column: 2, scope: !14294)
!14311 = !DILocation(line: 0, scope: !13643, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14310)
!14313 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14312)
!14314 = !DILocation(line: 679, column: 16, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14277, file: !2372, line: 679, column: 6)
!14316 = !DILocation(line: 679, column: 13, scope: !14315)
!14317 = !DILocation(line: 679, column: 6, scope: !14277)
!14318 = !DILocation(line: 680, column: 3, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14315, file: !2372, line: 679, column: 26)
!14320 = !DILocation(line: 681, column: 2, scope: !14319)
!14321 = !DILocation(line: 684, column: 1, scope: !14277)
!14322 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12833, file: !12833, line: 52, type: !13584, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14323)
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "thread", arg: 1, scope: !14322, file: !12833, line: 52, type: !2267)
!14325 = !DILocation(line: 0, scope: !14322)
!14326 = !DILocation(line: 54, column: 39, scope: !14322)
!14327 = !DILocation(line: 54, column: 9, scope: !14322)
!14328 = !DILocation(line: 54, column: 2, scope: !14322)
!14329 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12441, file: !12441, line: 141, type: !13566, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14330)
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "thread", arg: 1, scope: !14329, file: !12441, line: 141, type: !2267)
!14332 = !DILocation(line: 0, scope: !14329)
!14333 = !DILocation(line: 143, column: 15, scope: !14329)
!14334 = !DILocation(line: 143, column: 28, scope: !14329)
!14335 = !DILocation(line: 146, column: 1, scope: !14329)
!14336 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12441, file: !12441, line: 73, type: !3169, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!14337 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14338)
!14338 = distinct !DILocation(line: 75, column: 30, scope: !14336)
!14339 = !DILocation(line: 0, scope: !13617, inlinedAt: !14338)
!14340 = !DILocation(line: 75, column: 9, scope: !14336)
!14341 = !DILocation(line: 76, column: 1, scope: !14336)
!14342 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2372, file: !2372, line: 977, type: !6208, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14343)
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "key", arg: 1, scope: !14342, file: !2372, line: 977, type: !162)
!14345 = !DILocation(line: 0, scope: !14342)
!14346 = !DILocation(line: 979, column: 6, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14342, file: !2372, line: 979, column: 6)
!14348 = !DILocation(line: 979, column: 6, scope: !14342)
!14349 = !DILocation(line: 980, column: 3, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14347, file: !2372, line: 979, column: 20)
!14351 = !DILocation(line: 981, column: 2, scope: !14350)
!14352 = !DILocation(line: 0, scope: !13643, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 982, column: 3, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14347, file: !2372, line: 981, column: 9)
!14355 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14353)
!14356 = !DILocation(line: 985, column: 1, scope: !14342)
!14357 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2372, file: !2372, line: 695, type: !13566, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14358)
!14358 = !{!14359, !14360}
!14359 = !DILocalVariable(name: "thread", arg: 1, scope: !14357, file: !2372, line: 695, type: !2267)
!14360 = !DILocalVariable(name: "key", scope: !14357, file: !2372, line: 699, type: !13600)
!14361 = !DILocation(line: 0, scope: !14357)
!14362 = !DILocation(line: 0, scope: !13608, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 699, column: 25, scope: !14357)
!14364 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14363)
!14366 = !DILocation(line: 0, scope: !13617, inlinedAt: !14365)
!14367 = !DILocation(line: 702, column: 7, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14357, file: !2372, line: 702, column: 6)
!14369 = !DILocation(line: 702, column: 6, scope: !14357)
!14370 = !DILocation(line: 0, scope: !13635, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 703, column: 3, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14368, file: !2372, line: 702, column: 38)
!14373 = !DILocation(line: 0, scope: !13643, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14371)
!14375 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14374)
!14376 = !DILocation(line: 704, column: 3, scope: !14372)
!14377 = !DILocation(line: 707, column: 2, scope: !14357)
!14378 = !DILocation(line: 708, column: 2, scope: !14357)
!14379 = !DILocation(line: 710, column: 2, scope: !14357)
!14380 = !DILocation(line: 713, column: 1, scope: !14357)
!14381 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12441, file: !12441, line: 96, type: !13726, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14382)
!14382 = !{!14383}
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14381, file: !12441, line: 96, type: !2267)
!14384 = !DILocation(line: 0, scope: !14381)
!14385 = !DILocation(line: 98, column: 23, scope: !14381)
!14386 = !DILocation(line: 98, column: 36, scope: !14381)
!14387 = !DILocation(line: 98, column: 57, scope: !14381)
!14388 = !DILocation(line: 98, column: 2, scope: !14381)
!14389 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12441, file: !12441, line: 148, type: !13566, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14390)
!14390 = !{!14391}
!14391 = !DILocalVariable(name: "thread", arg: 1, scope: !14389, file: !12441, line: 148, type: !2267)
!14392 = !DILocation(line: 0, scope: !14389)
!14393 = !DILocation(line: 150, column: 15, scope: !14389)
!14394 = !DILocation(line: 150, column: 28, scope: !14389)
!14395 = !DILocation(line: 153, column: 1, scope: !14389)
!14396 = distinct !DISubprogram(name: "z_pend_thread", scope: !2372, file: !2372, line: 770, type: !14397, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14403)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{null, !2267, !2298, !14399}
!14399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14400)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14401)
!14401 = !{!14402}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14400, file: !104, line: 66, baseType: !103, size: 64)
!14403 = !{!14404, !14405, !14406, !14407, !14409}
!14404 = !DILocalVariable(name: "thread", arg: 1, scope: !14396, file: !2372, line: 770, type: !2267)
!14405 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14396, file: !2372, line: 770, type: !2298)
!14406 = !DILocalVariable(name: "timeout", arg: 3, scope: !14396, file: !2372, line: 771, type: !14399)
!14407 = !DILocalVariable(name: "__i", scope: !14408, file: !2372, line: 774, type: !13600)
!14408 = distinct !DILexicalBlock(scope: !14396, file: !2372, line: 774, column: 2)
!14409 = !DILocalVariable(name: "__key", scope: !14408, file: !2372, line: 774, type: !13600)
!14410 = !DILocation(line: 0, scope: !14396)
!14411 = !DILocation(line: 0, scope: !14408)
!14412 = !DILocation(line: 0, scope: !13608, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 774, column: 2, scope: !14408)
!14414 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14413)
!14416 = !DILocation(line: 0, scope: !13617, inlinedAt: !14415)
!14417 = !DILocation(line: 775, column: 3, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !2372, line: 774, column: 26)
!14419 = distinct !DILexicalBlock(scope: !14408, file: !2372, line: 774, column: 2)
!14420 = !DILocation(line: 0, scope: !13635, inlinedAt: !14421)
!14421 = distinct !DILocation(line: 774, column: 2, scope: !14419)
!14422 = !DILocation(line: 0, scope: !13643, inlinedAt: !14423)
!14423 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14421)
!14424 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14423)
!14425 = !DILocation(line: 777, column: 1, scope: !14396)
!14426 = distinct !DISubprogram(name: "pend_locked", scope: !2372, file: !2372, line: 760, type: !14397, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14427)
!14427 = !{!14428, !14429, !14430}
!14428 = !DILocalVariable(name: "thread", arg: 1, scope: !14426, file: !2372, line: 760, type: !2267)
!14429 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14426, file: !2372, line: 760, type: !2298)
!14430 = !DILocalVariable(name: "timeout", arg: 3, scope: !14426, file: !2372, line: 761, type: !14399)
!14431 = !DILocation(line: 0, scope: !14426)
!14432 = !DILocation(line: 766, column: 2, scope: !14426)
!14433 = !DILocation(line: 767, column: 2, scope: !14426)
!14434 = !DILocation(line: 768, column: 1, scope: !14426)
!14435 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2372, file: !2372, line: 740, type: !14436, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{null, !2267, !2298}
!14438 = !{!14439, !14440}
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14435, file: !2372, line: 740, type: !2267)
!14440 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14435, file: !2372, line: 740, type: !2298)
!14441 = !DILocation(line: 0, scope: !14435)
!14442 = !DILocation(line: 742, column: 2, scope: !14435)
!14443 = !DILocation(line: 743, column: 2, scope: !14435)
!14444 = !DILocation(line: 747, column: 13, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14435, file: !2372, line: 747, column: 6)
!14446 = !DILocation(line: 747, column: 6, scope: !14435)
!14447 = !DILocation(line: 748, column: 16, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14445, file: !2372, line: 747, column: 22)
!14449 = !DILocation(line: 748, column: 26, scope: !14448)
!14450 = !DILocation(line: 749, column: 28, scope: !14448)
!14451 = !DILocation(line: 0, scope: !13808, inlinedAt: !14452)
!14452 = distinct !DILocation(line: 749, column: 3, scope: !14448)
!14453 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14452)
!14454 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14452)
!14455 = !DILocation(line: 0, scope: !13818, inlinedAt: !14452)
!14456 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14452)
!14457 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14452)
!14458 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14452)
!14459 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !14452)
!14460 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14452)
!14461 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14452)
!14462 = distinct !{!14462, !14453, !14463}
!14463 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14452)
!14464 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !14452)
!14465 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14452)
!14466 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14452)
!14467 = !DILocation(line: 751, column: 1, scope: !14435)
!14468 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2372, file: !2372, line: 753, type: !14469, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14471)
!14469 = !DISubroutineType(types: !14470)
!14470 = !{null, !2267, !14399}
!14471 = !{!14472, !14473}
!14472 = !DILocalVariable(name: "thread", arg: 1, scope: !14468, file: !2372, line: 753, type: !2267)
!14473 = !DILocalVariable(name: "timeout", arg: 2, scope: !14468, file: !2372, line: 753, type: !14399)
!14474 = !DILocation(line: 0, scope: !14468)
!14475 = !DILocation(line: 755, column: 7, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14468, file: !2372, line: 755, column: 6)
!14477 = !DILocation(line: 755, column: 6, scope: !14468)
!14478 = !DILocation(line: 756, column: 3, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14476, file: !2372, line: 755, column: 41)
!14480 = !DILocation(line: 757, column: 2, scope: !14479)
!14481 = !DILocation(line: 758, column: 1, scope: !14468)
!14482 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12833, file: !12833, line: 47, type: !14469, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14483)
!14483 = !{!14484, !14485}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !12833, line: 47, type: !2267)
!14485 = !DILocalVariable(name: "ticks", arg: 2, scope: !14482, file: !12833, line: 47, type: !14399)
!14486 = !DILocation(line: 0, scope: !14482)
!14487 = !DILocation(line: 49, column: 30, scope: !14482)
!14488 = !DILocation(line: 49, column: 2, scope: !14482)
!14489 = !DILocation(line: 50, column: 1, scope: !14482)
!14490 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2372, file: !2372, line: 795, type: !2324, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14491)
!14491 = !{!14492, !14493, !14494, !14496, !14497}
!14492 = !DILocalVariable(name: "timeout", arg: 1, scope: !14490, file: !2372, line: 795, type: !2326)
!14493 = !DILocalVariable(name: "thread", scope: !14490, file: !2372, line: 797, type: !2267)
!14494 = !DILocalVariable(name: "__i", scope: !14495, file: !2372, line: 800, type: !13600)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !2372, line: 800, column: 2)
!14496 = !DILocalVariable(name: "__key", scope: !14495, file: !2372, line: 800, type: !13600)
!14497 = !DILocalVariable(name: "killed", scope: !14498, file: !2372, line: 801, type: !136)
!14498 = distinct !DILexicalBlock(scope: !14499, file: !2372, line: 800, column: 26)
!14499 = distinct !DILexicalBlock(scope: !14495, file: !2372, line: 800, column: 2)
!14500 = !DILocation(line: 0, scope: !14490)
!14501 = !DILocation(line: 797, column: 28, scope: !14490)
!14502 = !DILocation(line: 0, scope: !14495)
!14503 = !DILocation(line: 0, scope: !13608, inlinedAt: !14504)
!14504 = distinct !DILocation(line: 800, column: 2, scope: !14495)
!14505 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14504)
!14507 = !DILocation(line: 0, scope: !13617, inlinedAt: !14506)
!14508 = !DILocation(line: 801, column: 27, scope: !14498)
!14509 = !DILocation(line: 801, column: 32, scope: !14498)
!14510 = !DILocation(line: 801, column: 61, scope: !14498)
!14511 = !DILocation(line: 0, scope: !14498)
!14512 = !DILocation(line: 804, column: 7, scope: !14498)
!14513 = !DILocation(line: 805, column: 21, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14515, file: !2372, line: 805, column: 8)
!14515 = distinct !DILexicalBlock(scope: !14516, file: !2372, line: 804, column: 16)
!14516 = distinct !DILexicalBlock(scope: !14498, file: !2372, line: 804, column: 7)
!14517 = !DILocation(line: 805, column: 31, scope: !14514)
!14518 = !DILocation(line: 805, column: 8, scope: !14515)
!14519 = !DILocation(line: 806, column: 5, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14514, file: !2372, line: 805, column: 40)
!14521 = !DILocation(line: 807, column: 4, scope: !14520)
!14522 = !DILocation(line: 808, column: 4, scope: !14515)
!14523 = !DILocation(line: 809, column: 4, scope: !14515)
!14524 = !DILocation(line: 810, column: 4, scope: !14515)
!14525 = !DILocation(line: 811, column: 3, scope: !14515)
!14526 = !DILocation(line: 0, scope: !13635, inlinedAt: !14527)
!14527 = distinct !DILocation(line: 800, column: 2, scope: !14499)
!14528 = !DILocation(line: 0, scope: !13643, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14527)
!14530 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14529)
!14531 = !DILocation(line: 813, column: 1, scope: !14490)
!14532 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2372, file: !2372, line: 779, type: !13566, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14533)
!14533 = !{!14534}
!14534 = !DILocalVariable(name: "thread", arg: 1, scope: !14532, file: !2372, line: 779, type: !2267)
!14535 = !DILocation(line: 0, scope: !14532)
!14536 = !DILocation(line: 781, column: 2, scope: !14532)
!14537 = !DILocation(line: 782, column: 2, scope: !14532)
!14538 = !DILocation(line: 783, column: 15, scope: !14532)
!14539 = !DILocation(line: 783, column: 25, scope: !14532)
!14540 = !DILocation(line: 784, column: 1, scope: !14532)
!14541 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12441, file: !12441, line: 165, type: !13566, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14542)
!14542 = !{!14543}
!14543 = !DILocalVariable(name: "thread", arg: 1, scope: !14541, file: !12441, line: 165, type: !2267)
!14544 = !DILocation(line: 0, scope: !14541)
!14545 = !DILocation(line: 167, column: 15, scope: !14541)
!14546 = !DILocation(line: 167, column: 28, scope: !14541)
!14547 = !DILocation(line: 168, column: 1, scope: !14541)
!14548 = distinct !DISubprogram(name: "unready_thread", scope: !2372, file: !2372, line: 731, type: !13566, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !2372, line: 731, type: !2267)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 733, column: 6, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14548, file: !2372, line: 733, column: 6)
!14554 = !DILocation(line: 733, column: 6, scope: !14548)
!14555 = !DILocation(line: 0, scope: !13777, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 734, column: 3, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14553, file: !2372, line: 733, column: 34)
!14558 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !14556)
!14559 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14556)
!14560 = !DILocation(line: 0, scope: !13785, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14556)
!14562 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14561)
!14563 = !DILocation(line: 735, column: 2, scope: !14557)
!14564 = !DILocation(line: 736, column: 25, scope: !14548)
!14565 = !DILocation(line: 736, column: 22, scope: !14548)
!14566 = !DILocation(line: 736, column: 2, scope: !14548)
!14567 = !DILocation(line: 737, column: 1, scope: !14548)
!14568 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12441, file: !12441, line: 160, type: !13566, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14569)
!14569 = !{!14570}
!14570 = !DILocalVariable(name: "thread", arg: 1, scope: !14568, file: !12441, line: 160, type: !2267)
!14571 = !DILocation(line: 0, scope: !14568)
!14572 = !DILocation(line: 162, column: 15, scope: !14568)
!14573 = !DILocation(line: 162, column: 28, scope: !14568)
!14574 = !DILocation(line: 163, column: 1, scope: !14568)
!14575 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2372, file: !2372, line: 786, type: !13566, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14576)
!14576 = !{!14577, !14578, !14580}
!14577 = !DILocalVariable(name: "thread", arg: 1, scope: !14575, file: !2372, line: 786, type: !2267)
!14578 = !DILocalVariable(name: "__i", scope: !14579, file: !2372, line: 788, type: !13600)
!14579 = distinct !DILexicalBlock(scope: !14575, file: !2372, line: 788, column: 2)
!14580 = !DILocalVariable(name: "__key", scope: !14579, file: !2372, line: 788, type: !13600)
!14581 = !DILocation(line: 0, scope: !14575)
!14582 = !DILocation(line: 0, scope: !14579)
!14583 = !DILocation(line: 0, scope: !13608, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 788, column: 2, scope: !14579)
!14585 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14584)
!14587 = !DILocation(line: 0, scope: !13617, inlinedAt: !14586)
!14588 = !DILocation(line: 789, column: 3, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !2372, line: 788, column: 26)
!14590 = distinct !DILexicalBlock(scope: !14579, file: !2372, line: 788, column: 2)
!14591 = !DILocation(line: 0, scope: !13635, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 788, column: 2, scope: !14590)
!14593 = !DILocation(line: 0, scope: !13643, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14592)
!14595 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14594)
!14596 = !DILocation(line: 791, column: 1, scope: !14575)
!14597 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2372, file: !2372, line: 816, type: !14598, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14600)
!14598 = !DISubroutineType(types: !14599)
!14599 = !{!107, !162, !2298, !14399}
!14600 = !{!14601, !14602, !14603, !14604, !14605, !14607}
!14601 = !DILocalVariable(name: "key", arg: 1, scope: !14597, file: !2372, line: 816, type: !162)
!14602 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14597, file: !2372, line: 816, type: !2298)
!14603 = !DILocalVariable(name: "timeout", arg: 3, scope: !14597, file: !2372, line: 816, type: !14399)
!14604 = !DILocalVariable(name: "ret", scope: !14597, file: !2372, line: 828, type: !107)
!14605 = !DILocalVariable(name: "__i", scope: !14606, file: !2372, line: 829, type: !13600)
!14606 = distinct !DILexicalBlock(scope: !14597, file: !2372, line: 829, column: 2)
!14607 = !DILocalVariable(name: "__key", scope: !14606, file: !2372, line: 829, type: !13600)
!14608 = !DILocation(line: 0, scope: !14597)
!14609 = !DILocation(line: 823, column: 14, scope: !14597)
!14610 = !DILocation(line: 823, column: 2, scope: !14597)
!14611 = !DILocation(line: 826, column: 20, scope: !14597)
!14612 = !DILocation(line: 826, column: 18, scope: !14597)
!14613 = !DILocation(line: 828, column: 12, scope: !14597)
!14614 = !DILocation(line: 0, scope: !14606)
!14615 = !DILocation(line: 0, scope: !13608, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 829, column: 2, scope: !14606)
!14617 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14618)
!14618 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14616)
!14619 = !DILocation(line: 0, scope: !13617, inlinedAt: !14618)
!14620 = !DILocation(line: 830, column: 7, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !2372, line: 830, column: 7)
!14622 = distinct !DILexicalBlock(scope: !14623, file: !2372, line: 829, column: 26)
!14623 = distinct !DILexicalBlock(scope: !14606, file: !2372, line: 829, column: 2)
!14624 = !DILocation(line: 830, column: 26, scope: !14621)
!14625 = !DILocation(line: 830, column: 23, scope: !14621)
!14626 = !DILocation(line: 830, column: 7, scope: !14622)
!14627 = !DILocation(line: 831, column: 20, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14621, file: !2372, line: 830, column: 36)
!14629 = !DILocation(line: 832, column: 3, scope: !14628)
!14630 = !DILocation(line: 0, scope: !13635, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 829, column: 2, scope: !14623)
!14632 = !DILocation(line: 0, scope: !13643, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14631)
!14634 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14633)
!14635 = !DILocation(line: 834, column: 2, scope: !14597)
!14636 = distinct !DISubprogram(name: "z_pend_curr", scope: !2372, file: !2372, line: 840, type: !14637, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14639)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{!107, !13611, !13600, !2298, !14399}
!14639 = !{!14640, !14641, !14642, !14643}
!14640 = !DILocalVariable(name: "lock", arg: 1, scope: !14636, file: !2372, line: 840, type: !13611)
!14641 = !DILocalVariable(name: "key", arg: 2, scope: !14636, file: !2372, line: 840, type: !13600)
!14642 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14636, file: !2372, line: 841, type: !2298)
!14643 = !DILocalVariable(name: "timeout", arg: 4, scope: !14636, file: !2372, line: 841, type: !14399)
!14644 = !DILocation(line: 0, scope: !14636)
!14645 = !DILocation(line: 844, column: 20, scope: !14636)
!14646 = !DILocation(line: 844, column: 18, scope: !14636)
!14647 = !DILocation(line: 0, scope: !13608, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 856, column: 9, scope: !14636)
!14649 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14650)
!14650 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14648)
!14651 = !DILocation(line: 0, scope: !13617, inlinedAt: !14650)
!14652 = !DILocation(line: 857, column: 14, scope: !14636)
!14653 = !DILocation(line: 857, column: 2, scope: !14636)
!14654 = !DILocation(line: 0, scope: !14219, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 859, column: 9, scope: !14636)
!14656 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !14655)
!14657 = !DILocation(line: 859, column: 2, scope: !14636)
!14658 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2372, file: !2372, line: 862, type: !14659, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!2267, !2298}
!14661 = !{!14662, !14663, !14664, !14666}
!14662 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14658, file: !2372, line: 862, type: !2298)
!14663 = !DILocalVariable(name: "thread", scope: !14658, file: !2372, line: 864, type: !2267)
!14664 = !DILocalVariable(name: "__i", scope: !14665, file: !2372, line: 866, type: !13600)
!14665 = distinct !DILexicalBlock(scope: !14658, file: !2372, line: 866, column: 2)
!14666 = !DILocalVariable(name: "__key", scope: !14665, file: !2372, line: 866, type: !13600)
!14667 = !DILocation(line: 0, scope: !14658)
!14668 = !DILocation(line: 0, scope: !14665)
!14669 = !DILocation(line: 0, scope: !13608, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 866, column: 2, scope: !14665)
!14671 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14672)
!14672 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14670)
!14673 = !DILocation(line: 0, scope: !13617, inlinedAt: !14672)
!14674 = !DILocation(line: 867, column: 12, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14676, file: !2372, line: 866, column: 26)
!14676 = distinct !DILexicalBlock(scope: !14665, file: !2372, line: 866, column: 2)
!14677 = !DILocation(line: 869, column: 14, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2372, line: 869, column: 7)
!14679 = !DILocation(line: 869, column: 7, scope: !14675)
!14680 = !DILocation(line: 870, column: 4, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14678, file: !2372, line: 869, column: 23)
!14682 = !DILocation(line: 871, column: 3, scope: !14681)
!14683 = !DILocation(line: 0, scope: !13635, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 866, column: 2, scope: !14676)
!14685 = !DILocation(line: 0, scope: !13643, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14684)
!14687 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14686)
!14688 = !DILocation(line: 874, column: 2, scope: !14658)
!14689 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2372, file: !2372, line: 877, type: !14659, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14690)
!14690 = !{!14691, !14692, !14693, !14695}
!14691 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14689, file: !2372, line: 877, type: !2298)
!14692 = !DILocalVariable(name: "thread", scope: !14689, file: !2372, line: 879, type: !2267)
!14693 = !DILocalVariable(name: "__i", scope: !14694, file: !2372, line: 881, type: !13600)
!14694 = distinct !DILexicalBlock(scope: !14689, file: !2372, line: 881, column: 2)
!14695 = !DILocalVariable(name: "__key", scope: !14694, file: !2372, line: 881, type: !13600)
!14696 = !DILocation(line: 0, scope: !14689)
!14697 = !DILocation(line: 0, scope: !14694)
!14698 = !DILocation(line: 0, scope: !13608, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 881, column: 2, scope: !14694)
!14700 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14699)
!14702 = !DILocation(line: 0, scope: !13617, inlinedAt: !14701)
!14703 = !DILocation(line: 882, column: 12, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !2372, line: 881, column: 26)
!14705 = distinct !DILexicalBlock(scope: !14694, file: !2372, line: 881, column: 2)
!14706 = !DILocation(line: 884, column: 14, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14704, file: !2372, line: 884, column: 7)
!14708 = !DILocation(line: 884, column: 7, scope: !14704)
!14709 = !DILocation(line: 885, column: 4, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14707, file: !2372, line: 884, column: 23)
!14711 = !DILocation(line: 886, column: 10, scope: !14710)
!14712 = !DILocation(line: 887, column: 3, scope: !14710)
!14713 = !DILocation(line: 0, scope: !13635, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 881, column: 2, scope: !14705)
!14715 = !DILocation(line: 0, scope: !13643, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14714)
!14717 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14716)
!14718 = !DILocation(line: 890, column: 2, scope: !14689)
!14719 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2372, file: !2372, line: 893, type: !13566, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14720)
!14720 = !{!14721}
!14721 = !DILocalVariable(name: "thread", arg: 1, scope: !14719, file: !2372, line: 893, type: !2267)
!14722 = !DILocation(line: 0, scope: !14719)
!14723 = !DILocation(line: 0, scope: !14575, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 895, column: 2, scope: !14719)
!14725 = !DILocation(line: 0, scope: !14579, inlinedAt: !14724)
!14726 = !DILocation(line: 0, scope: !13608, inlinedAt: !14727)
!14727 = distinct !DILocation(line: 788, column: 2, scope: !14579, inlinedAt: !14724)
!14728 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14727)
!14730 = !DILocation(line: 0, scope: !13617, inlinedAt: !14729)
!14731 = !DILocation(line: 789, column: 3, scope: !14589, inlinedAt: !14724)
!14732 = !DILocation(line: 0, scope: !13635, inlinedAt: !14733)
!14733 = distinct !DILocation(line: 788, column: 2, scope: !14590, inlinedAt: !14724)
!14734 = !DILocation(line: 0, scope: !13643, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14733)
!14736 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14735)
!14737 = !DILocation(line: 896, column: 8, scope: !14719)
!14738 = !DILocation(line: 897, column: 1, scope: !14719)
!14739 = distinct !DISubprogram(name: "z_set_prio", scope: !2372, file: !2372, line: 902, type: !13928, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14740)
!14740 = !{!14741, !14742, !14743, !14744, !14746}
!14741 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !2372, line: 902, type: !2267)
!14742 = !DILocalVariable(name: "prio", arg: 2, scope: !14739, file: !2372, line: 902, type: !107)
!14743 = !DILocalVariable(name: "need_sched", scope: !14739, file: !2372, line: 904, type: !136)
!14744 = !DILocalVariable(name: "__i", scope: !14745, file: !2372, line: 906, type: !13600)
!14745 = distinct !DILexicalBlock(scope: !14739, file: !2372, line: 906, column: 2)
!14746 = !DILocalVariable(name: "__key", scope: !14745, file: !2372, line: 906, type: !13600)
!14747 = !DILocation(line: 0, scope: !14739)
!14748 = !DILocation(line: 0, scope: !14745)
!14749 = !DILocation(line: 0, scope: !13608, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 906, column: 2, scope: !14745)
!14751 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14750)
!14753 = !DILocation(line: 0, scope: !13617, inlinedAt: !14752)
!14754 = !DILocation(line: 907, column: 16, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14756, file: !2372, line: 906, column: 26)
!14756 = distinct !DILexicalBlock(scope: !14745, file: !2372, line: 906, column: 2)
!14757 = !DILocation(line: 909, column: 7, scope: !14755)
!14758 = !DILocation(line: 0, scope: !13777, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 912, column: 5, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !2372, line: 911, column: 63)
!14761 = distinct !DILexicalBlock(scope: !14762, file: !2372, line: 911, column: 8)
!14762 = distinct !DILexicalBlock(scope: !14763, file: !2372, line: 909, column: 19)
!14763 = distinct !DILexicalBlock(scope: !14755, file: !2372, line: 909, column: 7)
!14764 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !14759)
!14765 = !DILocation(line: 0, scope: !13785, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !14759)
!14767 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !14766)
!14768 = !DILocation(line: 913, column: 23, scope: !14760)
!14769 = !DILocation(line: 0, scope: !13794, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 914, column: 5, scope: !14760)
!14771 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !14770)
!14772 = !DILocation(line: 0, scope: !13801, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !14770)
!14774 = !DILocation(line: 0, scope: !13808, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !14773)
!14776 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !14775)
!14777 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !14775)
!14778 = !DILocation(line: 0, scope: !13818, inlinedAt: !14775)
!14779 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !14775)
!14780 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !14775)
!14781 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !14775)
!14782 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !14775)
!14783 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !14775)
!14784 = distinct !{!14784, !14776, !14785}
!14785 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !14775)
!14786 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !14775)
!14787 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !14775)
!14788 = !DILocation(line: 918, column: 4, scope: !14762)
!14789 = !DILocation(line: 919, column: 3, scope: !14762)
!14790 = !DILocation(line: 920, column: 22, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14763, file: !2372, line: 919, column: 10)
!14792 = !DILocation(line: 0, scope: !13635, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 906, column: 2, scope: !14756)
!14794 = !DILocation(line: 0, scope: !13643, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14793)
!14796 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14795)
!14797 = !DILocation(line: 926, column: 2, scope: !14739)
!14798 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2372, file: !2372, line: 929, type: !14799, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14801)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{null, !2267, !107}
!14801 = !{!14802, !14803, !14804}
!14802 = !DILocalVariable(name: "thread", arg: 1, scope: !14798, file: !2372, line: 929, type: !2267)
!14803 = !DILocalVariable(name: "prio", arg: 2, scope: !14798, file: !2372, line: 929, type: !107)
!14804 = !DILocalVariable(name: "need_sched", scope: !14798, file: !2372, line: 931, type: !136)
!14805 = !DILocation(line: 0, scope: !14798)
!14806 = !DILocation(line: 931, column: 20, scope: !14798)
!14807 = !DILocation(line: 935, column: 17, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14798, file: !2372, line: 935, column: 6)
!14809 = !DILocation(line: 935, column: 20, scope: !14808)
!14810 = !DILocation(line: 935, column: 35, scope: !14808)
!14811 = !DILocation(line: 935, column: 48, scope: !14808)
!14812 = !DILocation(line: 935, column: 6, scope: !14798)
!14813 = !DILocation(line: 936, column: 3, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14808, file: !2372, line: 935, column: 55)
!14815 = !DILocation(line: 937, column: 2, scope: !14814)
!14816 = !DILocation(line: 938, column: 1, scope: !14798)
!14817 = distinct !DISubprogram(name: "k_sched_lock", scope: !2372, file: !2372, line: 987, type: !3169, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14818)
!14818 = !{!14819, !14821}
!14819 = !DILocalVariable(name: "__i", scope: !14820, file: !2372, line: 989, type: !13600)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !2372, line: 989, column: 2)
!14821 = !DILocalVariable(name: "__key", scope: !14820, file: !2372, line: 989, type: !13600)
!14822 = !DILocation(line: 0, scope: !14820)
!14823 = !DILocation(line: 0, scope: !13608, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 989, column: 2, scope: !14820)
!14825 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14824)
!14827 = !DILocation(line: 0, scope: !13617, inlinedAt: !14826)
!14828 = !DILocation(line: 992, column: 3, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14830, file: !2372, line: 989, column: 26)
!14830 = distinct !DILexicalBlock(scope: !14820, file: !2372, line: 989, column: 2)
!14831 = !DILocation(line: 0, scope: !13635, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 989, column: 2, scope: !14830)
!14833 = !DILocation(line: 0, scope: !13643, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14832)
!14835 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14834)
!14836 = !DILocation(line: 994, column: 1, scope: !14817)
!14837 = distinct !DISubprogram(name: "z_sched_lock", scope: !12441, file: !12441, line: 251, type: !3169, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!14838 = !DILocation(line: 256, column: 4, scope: !14837)
!14839 = !DILocation(line: 256, column: 19, scope: !14837)
!14840 = !DILocation(line: 256, column: 2, scope: !14837)
!14841 = !DILocation(line: 258, column: 2, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !12441, line: 258, column: 2)
!14843 = !{i64 2154274866}
!14844 = !DILocation(line: 259, column: 1, scope: !14837)
!14845 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2372, file: !2372, line: 996, type: !3169, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14846)
!14846 = !{!14847, !14849}
!14847 = !DILocalVariable(name: "__i", scope: !14848, file: !2372, line: 998, type: !13600)
!14848 = distinct !DILexicalBlock(scope: !14845, file: !2372, line: 998, column: 2)
!14849 = !DILocalVariable(name: "__key", scope: !14848, file: !2372, line: 998, type: !13600)
!14850 = !DILocation(line: 0, scope: !14848)
!14851 = !DILocation(line: 0, scope: !13608, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 998, column: 2, scope: !14848)
!14853 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !14852)
!14855 = !DILocation(line: 0, scope: !13617, inlinedAt: !14854)
!14856 = !DILocation(line: 1002, column: 5, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2372, line: 998, column: 26)
!14858 = distinct !DILexicalBlock(scope: !14848, file: !2372, line: 998, column: 2)
!14859 = !DILocation(line: 1002, column: 20, scope: !14857)
!14860 = !DILocation(line: 1002, column: 3, scope: !14857)
!14861 = !DILocation(line: 1003, column: 3, scope: !14857)
!14862 = !DILocation(line: 0, scope: !13635, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 998, column: 2, scope: !14858)
!14864 = !DILocation(line: 0, scope: !13643, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !14863)
!14866 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !14865)
!14867 = !DILocation(line: 1011, column: 2, scope: !14845)
!14868 = !DILocation(line: 1012, column: 1, scope: !14845)
!14869 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2372, file: !2372, line: 1014, type: !13916, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!14870 = !DILocation(line: 1028, column: 25, scope: !14869)
!14871 = !DILocation(line: 1028, column: 2, scope: !14869)
!14872 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2372, file: !2372, line: 1155, type: !14873, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14875)
!14873 = !DISubroutineType(types: !14874)
!14874 = !{!136, !2296, !2296}
!14875 = !{!14876, !14877, !14878, !14879, !14880}
!14876 = !DILocalVariable(name: "a", arg: 1, scope: !14872, file: !2372, line: 1155, type: !2296)
!14877 = !DILocalVariable(name: "b", arg: 2, scope: !14872, file: !2372, line: 1155, type: !2296)
!14878 = !DILocalVariable(name: "thread_a", scope: !14872, file: !2372, line: 1157, type: !2267)
!14879 = !DILocalVariable(name: "thread_b", scope: !14872, file: !2372, line: 1157, type: !2267)
!14880 = !DILocalVariable(name: "cmp", scope: !14872, file: !2372, line: 1158, type: !706)
!14881 = !DILocation(line: 0, scope: !14872)
!14882 = !DILocation(line: 1160, column: 13, scope: !14872)
!14883 = !DILocation(line: 1161, column: 13, scope: !14872)
!14884 = !DILocation(line: 1163, column: 8, scope: !14872)
!14885 = !DILocation(line: 1165, column: 10, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14872, file: !2372, line: 1165, column: 6)
!14887 = !DILocation(line: 1165, column: 6, scope: !14872)
!14888 = !DILocation(line: 1167, column: 17, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14886, file: !2372, line: 1167, column: 13)
!14890 = !DILocation(line: 1167, column: 13, scope: !14886)
!14891 = !DILocation(line: 1170, column: 25, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14889, file: !2372, line: 1169, column: 9)
!14893 = !DILocation(line: 1170, column: 52, scope: !14892)
!14894 = !DILocation(line: 1170, column: 35, scope: !14892)
!14895 = !DILocation(line: 1170, column: 3, scope: !14892)
!14896 = !DILocation(line: 0, scope: !14886)
!14897 = !DILocation(line: 1173, column: 1, scope: !14872)
!14898 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2372, file: !2372, line: 1175, type: !14899, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14914)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{null, !14901, !2267}
!14901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14902, size: 32)
!14902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14903, line: 37, size: 128, elements: !14904)
!14903 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14904 = !{!14905, !14913}
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14902, file: !14903, line: 38, baseType: !14906, size: 96)
!14906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !384, line: 83, size: 96, elements: !14907)
!14907 = !{!14908, !14909, !14912}
!14908 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14906, file: !384, line: 84, baseType: !2296, size: 32)
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14906, file: !384, line: 85, baseType: !14910, size: 32, offset: 32)
!14910 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !384, line: 81, baseType: !14911)
!14911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14873, size: 32)
!14912 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14906, file: !384, line: 86, baseType: !107, size: 32, offset: 64)
!14913 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14902, file: !14903, line: 39, baseType: !107, size: 32, offset: 96)
!14914 = !{!14915, !14916, !14917, !14918, !14927}
!14915 = !DILocalVariable(name: "pq", arg: 1, scope: !14898, file: !2372, line: 1175, type: !14901)
!14916 = !DILocalVariable(name: "thread", arg: 2, scope: !14898, file: !2372, line: 1175, type: !2267)
!14917 = !DILocalVariable(name: "t", scope: !14898, file: !2372, line: 1177, type: !2267)
!14918 = !DILocalVariable(name: "__f", scope: !14919, file: !2372, line: 1190, type: !14922)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2372, line: 1190, column: 3)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !2372, line: 1189, column: 27)
!14921 = distinct !DILexicalBlock(scope: !14898, file: !2372, line: 1189, column: 6)
!14922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !384, line: 155, size: 96, elements: !14923)
!14923 = !{!14924, !14925, !14926}
!14924 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14922, file: !384, line: 156, baseType: !2367, size: 32)
!14925 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14922, file: !384, line: 157, baseType: !182, size: 32, offset: 32)
!14926 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14922, file: !384, line: 158, baseType: !706, size: 32, offset: 64)
!14927 = !DILocalVariable(name: "n", scope: !14928, file: !2372, line: 1190, type: !2296)
!14928 = distinct !DILexicalBlock(scope: !14929, file: !2372, line: 1190, column: 3)
!14929 = distinct !DILexicalBlock(scope: !14919, file: !2372, line: 1190, column: 3)
!14930 = !DILocation(line: 0, scope: !14898)
!14931 = !DILocation(line: 1181, column: 31, scope: !14898)
!14932 = !DILocation(line: 1181, column: 45, scope: !14898)
!14933 = !DILocation(line: 1181, column: 15, scope: !14898)
!14934 = !DILocation(line: 1181, column: 25, scope: !14898)
!14935 = !DILocation(line: 1189, column: 11, scope: !14921)
!14936 = !DILocation(line: 1189, column: 7, scope: !14921)
!14937 = !DILocation(line: 1189, column: 6, scope: !14898)
!14938 = !DILocation(line: 1190, column: 3, scope: !14919)
!14939 = !DILocation(line: 1190, column: 3, scope: !14928)
!14940 = !DILocation(line: 0, scope: !14928)
!14941 = !DILocation(line: 1190, column: 3, scope: !14929)
!14942 = !DILocation(line: 1193, column: 2, scope: !14920)
!14943 = !DILocation(line: 1191, column: 42, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14929, file: !2372, line: 1190, column: 54)
!14945 = !DILocation(line: 1191, column: 12, scope: !14944)
!14946 = !DILocation(line: 1191, column: 22, scope: !14944)
!14947 = distinct !{!14947, !14938, !14948}
!14948 = !DILocation(line: 1192, column: 3, scope: !14919)
!14949 = !DILocation(line: 1195, column: 17, scope: !14898)
!14950 = !DILocation(line: 1195, column: 37, scope: !14898)
!14951 = !DILocation(line: 1195, column: 2, scope: !14898)
!14952 = !DILocation(line: 1196, column: 1, scope: !14898)
!14953 = !DISubprogram(name: "z_rb_foreach_next", scope: !384, file: !384, line: 176, type: !14954, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14954 = !DISubroutineType(types: !14955)
!14955 = !{!2296, !14956, !14957}
!14956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14906, size: 32)
!14957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14922, size: 32)
!14958 = !DISubprogram(name: "rb_insert", scope: !384, file: !384, line: 105, type: !14959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{null, !14956, !2296}
!14961 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2372, file: !2372, line: 1198, type: !14899, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14962)
!14962 = !{!14963, !14964}
!14963 = !DILocalVariable(name: "pq", arg: 1, scope: !14961, file: !2372, line: 1198, type: !14901)
!14964 = !DILocalVariable(name: "thread", arg: 2, scope: !14961, file: !2372, line: 1198, type: !2267)
!14965 = !DILocation(line: 0, scope: !14961)
!14966 = !DILocation(line: 1202, column: 17, scope: !14961)
!14967 = !DILocation(line: 1202, column: 37, scope: !14961)
!14968 = !DILocation(line: 1202, column: 2, scope: !14961)
!14969 = !DILocation(line: 1204, column: 16, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14961, file: !2372, line: 1204, column: 6)
!14971 = !DILocation(line: 1204, column: 7, scope: !14970)
!14972 = !DILocation(line: 1204, column: 6, scope: !14961)
!14973 = !DILocation(line: 1205, column: 7, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14970, file: !2372, line: 1204, column: 22)
!14975 = !DILocation(line: 1205, column: 22, scope: !14974)
!14976 = !DILocation(line: 1206, column: 2, scope: !14974)
!14977 = !DILocation(line: 1207, column: 1, scope: !14961)
!14978 = !DISubprogram(name: "rb_remove", scope: !384, file: !384, line: 110, type: !14959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14979 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2372, file: !2372, line: 1209, type: !14980, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14982)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!2267, !14901}
!14982 = !{!14983, !14984, !14985}
!14983 = !DILocalVariable(name: "pq", arg: 1, scope: !14979, file: !2372, line: 1209, type: !14901)
!14984 = !DILocalVariable(name: "thread", scope: !14979, file: !2372, line: 1211, type: !2267)
!14985 = !DILocalVariable(name: "n", scope: !14979, file: !2372, line: 1212, type: !2296)
!14986 = !DILocation(line: 0, scope: !14979)
!14987 = !DILocation(line: 1212, column: 37, scope: !14979)
!14988 = !DILocation(line: 1212, column: 21, scope: !14979)
!14989 = !DILocation(line: 1217, column: 2, scope: !14979)
!14990 = distinct !DISubprogram(name: "rb_get_min", scope: !384, file: !384, line: 115, type: !14991, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{!2296, !14956}
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "tree", arg: 1, scope: !14990, file: !384, line: 115, type: !14956)
!14995 = !DILocation(line: 0, scope: !14990)
!14996 = !DILocation(line: 117, column: 9, scope: !14990)
!14997 = !DILocation(line: 117, column: 2, scope: !14990)
!14998 = !DISubprogram(name: "z_rb_get_minmax", scope: !384, file: !384, line: 100, type: !14999, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{!2296, !14956, !133}
!15001 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2372, file: !2372, line: 1246, type: !15002, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15010)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{!2267, !15004}
!15004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15005, size: 32)
!15005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14903, line: 53, size: 2080, elements: !15006)
!15006 = !{!15007, !15009}
!15007 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15005, file: !14903, line: 54, baseType: !15008, size: 2048)
!15008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2303, size: 2048, elements: !219)
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15005, file: !14903, line: 55, baseType: !32, size: 32, offset: 2048)
!15010 = !{!15011, !15012, !15013, !15014}
!15011 = !DILocalVariable(name: "pq", arg: 1, scope: !15001, file: !2372, line: 1246, type: !15004)
!15012 = !DILocalVariable(name: "thread", scope: !15001, file: !2372, line: 1252, type: !2267)
!15013 = !DILocalVariable(name: "l", scope: !15001, file: !2372, line: 1253, type: !13811)
!15014 = !DILocalVariable(name: "n", scope: !15001, file: !2372, line: 1254, type: !2368)
!15015 = !DILocation(line: 0, scope: !15001)
!15016 = !DILocation(line: 1248, column: 11, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15001, file: !2372, line: 1248, column: 6)
!15018 = !DILocation(line: 1248, column: 7, scope: !15017)
!15019 = !DILocation(line: 1248, column: 6, scope: !15001)
!15020 = !DILocation(line: 1253, column: 31, scope: !15001)
!15021 = !DILocation(line: 1253, column: 20, scope: !15001)
!15022 = !DILocation(line: 1254, column: 19, scope: !15001)
!15023 = !DILocation(line: 1260, column: 1, scope: !15001)
!15024 = distinct !DISubprogram(name: "z_unpend_all", scope: !2372, file: !2372, line: 1262, type: !15025, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15027)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{!107, !2298}
!15027 = !{!15028, !15029, !15030}
!15028 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15024, file: !2372, line: 1262, type: !2298)
!15029 = !DILocalVariable(name: "need_sched", scope: !15024, file: !2372, line: 1264, type: !107)
!15030 = !DILocalVariable(name: "thread", scope: !15024, file: !2372, line: 1265, type: !2267)
!15031 = !DILocation(line: 0, scope: !15024)
!15032 = !DILocation(line: 1267, column: 19, scope: !15024)
!15033 = !DILocation(line: 1267, column: 41, scope: !15024)
!15034 = !DILocation(line: 1267, column: 2, scope: !15024)
!15035 = !DILocation(line: 1268, column: 3, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15024, file: !2372, line: 1267, column: 50)
!15037 = !DILocation(line: 1269, column: 3, scope: !15036)
!15038 = distinct !{!15038, !15034, !15039}
!15039 = !DILocation(line: 1271, column: 2, scope: !15024)
!15040 = !DILocation(line: 1273, column: 2, scope: !15024)
!15041 = distinct !DISubprogram(name: "z_waitq_head", scope: !12765, file: !12765, line: 52, type: !14659, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15042)
!15042 = !{!15043}
!15043 = !DILocalVariable(name: "w", arg: 1, scope: !15041, file: !12765, line: 52, type: !2298)
!15044 = !DILocation(line: 0, scope: !15041)
!15045 = !DILocation(line: 54, column: 52, scope: !15041)
!15046 = !DILocation(line: 54, column: 28, scope: !15041)
!15047 = !DILocation(line: 54, column: 9, scope: !15041)
!15048 = !DILocation(line: 54, column: 2, scope: !15041)
!15049 = distinct !DISubprogram(name: "init_ready_q", scope: !2372, file: !2372, line: 1276, type: !15050, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15057)
!15050 = !DISubroutineType(types: !15051)
!15051 = !{null, !15052}
!15052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15053, size: 32)
!15053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !15054)
!15054 = !{!15055, !15056}
!15055 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15053, file: !228, line: 86, baseType: !2267, size: 32)
!15056 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15053, file: !228, line: 90, baseType: !2303, size: 64, offset: 32)
!15057 = !{!15058}
!15058 = !DILocalVariable(name: "rq", arg: 1, scope: !15049, file: !2372, line: 1276, type: !15052)
!15059 = !DILocation(line: 0, scope: !15049)
!15060 = !DILocation(line: 1289, column: 22, scope: !15049)
!15061 = !DILocation(line: 1289, column: 2, scope: !15049)
!15062 = !DILocation(line: 1291, column: 1, scope: !15049)
!15063 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15064, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15066)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{null, !13811}
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "list", arg: 1, scope: !15063, file: !233, line: 197, type: !13811)
!15068 = !DILocation(line: 0, scope: !15063)
!15069 = !DILocation(line: 199, column: 8, scope: !15063)
!15070 = !DILocation(line: 199, column: 13, scope: !15063)
!15071 = !DILocation(line: 200, column: 8, scope: !15063)
!15072 = !DILocation(line: 200, column: 13, scope: !15063)
!15073 = !DILocation(line: 201, column: 1, scope: !15063)
!15074 = distinct !DISubprogram(name: "z_sched_init", scope: !2372, file: !2372, line: 1293, type: !3169, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!15075 = !DILocation(line: 1302, column: 2, scope: !15074)
!15076 = !DILocation(line: 1306, column: 2, scope: !15074)
!15077 = !DILocation(line: 1309, column: 1, scope: !15074)
!15078 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2372, file: !2372, line: 1311, type: !15079, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15082)
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!107, !15081}
!15081 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2267)
!15082 = !{!15083}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15078, file: !2372, line: 1311, type: !15081)
!15084 = !DILocation(line: 0, scope: !15078)
!15085 = !DILocation(line: 1313, column: 22, scope: !15078)
!15086 = !DILocation(line: 1313, column: 9, scope: !15078)
!15087 = !DILocation(line: 1313, column: 2, scope: !15078)
!15088 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2372, file: !2372, line: 1325, type: !15089, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15091)
!15089 = !DISubroutineType(types: !15090)
!15090 = !{null, !15081, !107}
!15091 = !{!15092, !15093, !15094}
!15092 = !DILocalVariable(name: "thread", arg: 1, scope: !15088, file: !2372, line: 1325, type: !15081)
!15093 = !DILocalVariable(name: "prio", arg: 2, scope: !15088, file: !2372, line: 1325, type: !107)
!15094 = !DILocalVariable(name: "th", scope: !15088, file: !2372, line: 1334, type: !2267)
!15095 = !DILocation(line: 0, scope: !15088)
!15096 = !DILocation(line: 1336, column: 2, scope: !15088)
!15097 = !DILocation(line: 1337, column: 1, scope: !15088)
!15098 = distinct !DISubprogram(name: "k_can_yield", scope: !2372, file: !2372, line: 1384, type: !6912, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!15099 = !DILocation(line: 1386, column: 11, scope: !15098)
!15100 = !DILocation(line: 1386, column: 29, scope: !15098)
!15101 = !DILocation(line: 1386, column: 32, scope: !15098)
!15102 = !DILocation(line: 1386, column: 46, scope: !15098)
!15103 = !DILocation(line: 1387, column: 28, scope: !15098)
!15104 = !DILocation(line: 1387, column: 4, scope: !15098)
!15105 = !DILocation(line: 1386, column: 2, scope: !15098)
!15106 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6912, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!15107 = !DILocation(line: 993, column: 10, scope: !15106)
!15108 = !DILocation(line: 993, column: 2, scope: !15106)
!15109 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2372, file: !2372, line: 1390, type: !3169, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15110)
!15110 = !{!15111}
!15111 = !DILocalVariable(name: "key", scope: !15109, file: !2372, line: 1396, type: !13600)
!15112 = !DILocation(line: 0, scope: !13608, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 1396, column: 25, scope: !15109)
!15114 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15113)
!15116 = !DILocation(line: 0, scope: !13617, inlinedAt: !15115)
!15117 = !DILocation(line: 0, scope: !15109)
!15118 = !DILocation(line: 1400, column: 18, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15120, file: !2372, line: 1399, column: 36)
!15120 = distinct !DILexicalBlock(scope: !15109, file: !2372, line: 1398, column: 6)
!15121 = !DILocation(line: 0, scope: !13777, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 1400, column: 3, scope: !15119)
!15123 = !DILocation(line: 266, column: 15, scope: !13777, inlinedAt: !15122)
!15124 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !15122)
!15125 = !DILocation(line: 0, scope: !13785, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !15122)
!15127 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !15126)
!15128 = !DILocation(line: 1402, column: 15, scope: !15109)
!15129 = !DILocation(line: 0, scope: !13794, inlinedAt: !15130)
!15130 = distinct !DILocation(line: 1402, column: 2, scope: !15109)
!15131 = !DILocation(line: 252, column: 15, scope: !13794, inlinedAt: !15130)
!15132 = !DILocation(line: 252, column: 28, scope: !13794, inlinedAt: !15130)
!15133 = !DILocation(line: 0, scope: !13801, inlinedAt: !15134)
!15134 = distinct !DILocation(line: 254, column: 3, scope: !13805, inlinedAt: !15130)
!15135 = !DILocation(line: 0, scope: !13808, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 229, column: 2, scope: !13801, inlinedAt: !15134)
!15137 = !DILocation(line: 188, column: 2, scope: !13818, inlinedAt: !15136)
!15138 = !DILocation(line: 188, column: 2, scope: !13820, inlinedAt: !15136)
!15139 = !DILocation(line: 0, scope: !13818, inlinedAt: !15136)
!15140 = !DILocation(line: 189, column: 7, scope: !13823, inlinedAt: !15136)
!15141 = !DILocation(line: 189, column: 35, scope: !13823, inlinedAt: !15136)
!15142 = !DILocation(line: 189, column: 7, scope: !13824, inlinedAt: !15136)
!15143 = !DILocation(line: 191, column: 21, scope: !13828, inlinedAt: !15136)
!15144 = !DILocation(line: 190, column: 4, scope: !13828, inlinedAt: !15136)
!15145 = !DILocation(line: 192, column: 4, scope: !13828, inlinedAt: !15136)
!15146 = distinct !{!15146, !15137, !15147}
!15147 = !DILocation(line: 194, column: 2, scope: !13818, inlinedAt: !15136)
!15148 = !DILocation(line: 196, column: 37, scope: !13808, inlinedAt: !15136)
!15149 = !DILocation(line: 196, column: 2, scope: !13808, inlinedAt: !15136)
!15150 = !DILocation(line: 197, column: 1, scope: !13808, inlinedAt: !15136)
!15151 = !DILocation(line: 1403, column: 2, scope: !15109)
!15152 = !DILocation(line: 0, scope: !14219, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 1404, column: 2, scope: !15109)
!15154 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15153)
!15155 = !DILocation(line: 1405, column: 1, scope: !15109)
!15156 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2372, file: !2372, line: 1459, type: !15157, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!706, !14399}
!15159 = !{!15160, !15161, !15162}
!15160 = !DILocalVariable(name: "timeout", arg: 1, scope: !15156, file: !2372, line: 1459, type: !14399)
!15161 = !DILocalVariable(name: "ticks", scope: !15156, file: !2372, line: 1461, type: !103)
!15162 = !DILocalVariable(name: "ret", scope: !15156, file: !2372, line: 1480, type: !706)
!15163 = !DILocation(line: 0, scope: !15156)
!15164 = !DILocation(line: 1468, column: 6, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15156, file: !2372, line: 1468, column: 6)
!15166 = !DILocation(line: 1468, column: 6, scope: !15156)
!15167 = !DILocation(line: 1469, column: 20, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15165, file: !2372, line: 1468, column: 40)
!15169 = !DILocation(line: 1469, column: 3, scope: !15168)
!15170 = !DILocation(line: 1473, column: 3, scope: !15168)
!15171 = !DILocation(line: 1478, column: 10, scope: !15156)
!15172 = !DILocation(line: 1480, column: 16, scope: !15156)
!15173 = !DILocation(line: 1485, column: 1, scope: !15156)
!15174 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3354, file: !3354, line: 310, type: !15175, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15177)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{null, !15081}
!15177 = !{!15178}
!15178 = !DILocalVariable(name: "thread", arg: 1, scope: !15174, file: !3354, line: 310, type: !15081)
!15179 = !DILocation(line: 0, scope: !15174)
!15180 = !DILocation(line: 319, column: 2, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15174, file: !3354, line: 319, column: 2)
!15182 = !{i64 2154193255}
!15183 = !DILocation(line: 320, column: 2, scope: !15174)
!15184 = !DILocation(line: 321, column: 1, scope: !15174)
!15185 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2372, file: !2372, line: 1415, type: !15186, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15188)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{!706, !103}
!15188 = !{!15189, !15190, !15191, !15192}
!15189 = !DILocalVariable(name: "ticks", arg: 1, scope: !15185, file: !2372, line: 1415, type: !103)
!15190 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15185, file: !2372, line: 1418, type: !162)
!15191 = !DILocalVariable(name: "timeout", scope: !15185, file: !2372, line: 1430, type: !14399)
!15192 = !DILocalVariable(name: "key", scope: !15185, file: !2372, line: 1437, type: !13600)
!15193 = !DILocation(line: 0, scope: !15185)
!15194 = !DILocation(line: 1425, column: 12, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15185, file: !2372, line: 1425, column: 6)
!15196 = !DILocation(line: 1425, column: 6, scope: !15185)
!15197 = !DILocation(line: 1426, column: 3, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15195, file: !2372, line: 1425, column: 18)
!15199 = !DILocation(line: 1427, column: 3, scope: !15198)
!15200 = !DILocation(line: 1431, column: 24, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15185, file: !2372, line: 1431, column: 6)
!15202 = !DILocation(line: 1431, column: 6, scope: !15185)
!15203 = !DILocation(line: 1432, column: 35, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15201, file: !2372, line: 1431, column: 30)
!15205 = !DILocation(line: 1432, column: 27, scope: !15204)
!15206 = !DILocation(line: 1433, column: 2, scope: !15204)
!15207 = !DILocation(line: 1434, column: 27, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15201, file: !2372, line: 1433, column: 9)
!15209 = !DILocation(line: 0, scope: !15201)
!15210 = !DILocation(line: 0, scope: !13608, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 1437, column: 25, scope: !15185)
!15212 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15211)
!15214 = !DILocation(line: 0, scope: !13617, inlinedAt: !15213)
!15215 = !DILocation(line: 1440, column: 20, scope: !15185)
!15216 = !DILocation(line: 1440, column: 18, scope: !15185)
!15217 = !DILocation(line: 1442, column: 2, scope: !15185)
!15218 = !DILocation(line: 1443, column: 23, scope: !15185)
!15219 = !DILocation(line: 1443, column: 2, scope: !15185)
!15220 = !DILocation(line: 1444, column: 29, scope: !15185)
!15221 = !DILocation(line: 1444, column: 2, scope: !15185)
!15222 = !DILocation(line: 0, scope: !14219, inlinedAt: !15223)
!15223 = distinct !DILocation(line: 1446, column: 8, scope: !15185)
!15224 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15223)
!15225 = !DILocation(line: 1450, column: 10, scope: !15185)
!15226 = !DILocation(line: 1450, column: 45, scope: !15185)
!15227 = !DILocation(line: 1450, column: 43, scope: !15185)
!15228 = !DILocation(line: 1451, column: 6, scope: !15185)
!15229 = !DILocation(line: 1457, column: 1, scope: !15185)
!15230 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13000, file: !13000, line: 1103, type: !13001, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15231)
!15231 = !{!15232}
!15232 = !DILocalVariable(name: "t", arg: 1, scope: !15230, file: !13000, line: 1103, type: !1474)
!15233 = !DILocation(line: 0, scope: !15230)
!15234 = !DILocation(line: 0, scope: !13655, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 1106, column: 9, scope: !15230)
!15236 = !DILocation(line: 139, column: 13, scope: !15237, inlinedAt: !15235)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !13000, line: 138, column: 10)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !13000, line: 136, column: 7)
!15239 = distinct !DILexicalBlock(scope: !13676, file: !13000, line: 134, column: 17)
!15240 = !DILocation(line: 1106, column: 2, scope: !15230)
!15241 = distinct !DISubprogram(name: "k_yield", scope: !3354, file: !3354, line: 140, type: !3169, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!15242 = !DILocation(line: 148, column: 2, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15241, file: !3354, line: 148, column: 2)
!15244 = !{i64 2154192575}
!15245 = !DILocation(line: 149, column: 2, scope: !15241)
!15246 = !DILocation(line: 150, column: 1, scope: !15241)
!15247 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2372, file: !2372, line: 1495, type: !15248, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15250)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{!706, !107}
!15250 = !{!15251, !15252}
!15251 = !DILocalVariable(name: "us", arg: 1, scope: !15247, file: !2372, line: 1495, type: !107)
!15252 = !DILocalVariable(name: "ticks", scope: !15247, file: !2372, line: 1497, type: !706)
!15253 = !DILocation(line: 0, scope: !15247)
!15254 = !DILocation(line: 1501, column: 31, scope: !15247)
!15255 = !DILocation(line: 1501, column: 10, scope: !15247)
!15256 = !DILocation(line: 1502, column: 23, scope: !15247)
!15257 = !DILocation(line: 1502, column: 10, scope: !15247)
!15258 = !DILocation(line: 1506, column: 31, scope: !15247)
!15259 = !DILocation(line: 1506, column: 9, scope: !15247)
!15260 = !DILocation(line: 1506, column: 2, scope: !15247)
!15261 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13000, file: !13000, line: 571, type: !13001, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "t", arg: 1, scope: !15261, file: !13000, line: 571, type: !1474)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 0, scope: !13655, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 574, column: 9, scope: !15261)
!15267 = !DILocation(line: 135, column: 5, scope: !15239, inlinedAt: !15266)
!15268 = !DILocation(line: 139, column: 13, scope: !15237, inlinedAt: !15266)
!15269 = !DILocation(line: 574, column: 2, scope: !15261)
!15270 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13000, file: !13000, line: 1187, type: !13001, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15271)
!15271 = !{!15272}
!15272 = !DILocalVariable(name: "t", arg: 1, scope: !15270, file: !13000, line: 1187, type: !1474)
!15273 = !DILocation(line: 0, scope: !15270)
!15274 = !DILocation(line: 0, scope: !13655, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 1190, column: 9, scope: !15270)
!15276 = !DILocation(line: 145, column: 13, scope: !15277, inlinedAt: !15275)
!15277 = distinct !DILexicalBlock(scope: !13673, file: !13000, line: 144, column: 10)
!15278 = !DILocation(line: 1190, column: 2, scope: !15270)
!15279 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2372, file: !2372, line: 1517, type: !15175, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15280)
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2372, line: 1517, type: !15081)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 1521, column: 6, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15279, file: !2372, line: 1521, column: 6)
!15285 = !DILocation(line: 1521, column: 6, scope: !15279)
!15286 = !DILocation(line: 1525, column: 6, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15279, file: !2372, line: 1525, column: 6)
!15288 = !DILocation(line: 1525, column: 37, scope: !15287)
!15289 = !DILocation(line: 1525, column: 6, scope: !15279)
!15290 = !DILocation(line: 1527, column: 20, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15292, file: !2372, line: 1527, column: 7)
!15292 = distinct !DILexicalBlock(scope: !15287, file: !2372, line: 1525, column: 42)
!15293 = !DILocation(line: 1527, column: 33, scope: !15291)
!15294 = !DILocation(line: 1527, column: 7, scope: !15292)
!15295 = !DILocation(line: 1532, column: 2, scope: !15279)
!15296 = !DILocation(line: 1533, column: 2, scope: !15279)
!15297 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15298)
!15298 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 1537, column: 7, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15279, file: !2372, line: 1537, column: 6)
!15301 = !DILocation(line: 0, scope: !14252, inlinedAt: !15298)
!15302 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15299)
!15303 = !DILocation(line: 1537, column: 6, scope: !15279)
!15304 = !DILocation(line: 1538, column: 3, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15300, file: !2372, line: 1537, column: 25)
!15306 = !DILocation(line: 1539, column: 2, scope: !15305)
!15307 = !DILocation(line: 1540, column: 1, scope: !15279)
!15308 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12441, file: !12441, line: 101, type: !13726, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15309)
!15309 = !{!15310}
!15310 = !DILocalVariable(name: "thread", arg: 1, scope: !15308, file: !12441, line: 101, type: !2267)
!15311 = !DILocation(line: 0, scope: !15308)
!15312 = !DILocation(line: 103, column: 23, scope: !15308)
!15313 = !DILocation(line: 103, column: 36, scope: !15308)
!15314 = !DILocation(line: 103, column: 55, scope: !15308)
!15315 = !DILocation(line: 103, column: 2, scope: !15308)
!15316 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2372, file: !2372, line: 1567, type: !15317, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15319)
!15317 = !DISubroutineType(types: !15318)
!15318 = !{!15081}
!15319 = !{!15320}
!15320 = !DILocalVariable(name: "ret", scope: !15316, file: !2372, line: 1577, type: !15081)
!15321 = !DILocation(line: 1577, column: 30, scope: !15316)
!15322 = !DILocation(line: 0, scope: !15316)
!15323 = !DILocation(line: 1582, column: 2, scope: !15316)
!15324 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2372, file: !2372, line: 1593, type: !7186, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !250)
!15325 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 1595, column: 10, scope: !15324)
!15328 = !DILocation(line: 0, scope: !14252, inlinedAt: !15326)
!15329 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15327)
!15330 = !DILocation(line: 1595, column: 27, scope: !15324)
!15331 = !DILocation(line: 1595, column: 41, scope: !15324)
!15332 = !DILocation(line: 1595, column: 30, scope: !15324)
!15333 = !DILocation(line: 1595, column: 2, scope: !15324)
!15334 = distinct !DISubprogram(name: "z_thread_abort", scope: !2372, file: !2372, line: 1725, type: !13566, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15335)
!15335 = !{!15336, !15337}
!15336 = !DILocalVariable(name: "thread", arg: 1, scope: !15334, file: !2372, line: 1725, type: !2267)
!15337 = !DILocalVariable(name: "key", scope: !15334, file: !2372, line: 1727, type: !13600)
!15338 = !DILocation(line: 0, scope: !15334)
!15339 = !DILocation(line: 0, scope: !13608, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 1727, column: 25, scope: !15334)
!15341 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15340)
!15343 = !DILocation(line: 0, scope: !13617, inlinedAt: !15342)
!15344 = !DILocation(line: 1729, column: 20, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15334, file: !2372, line: 1729, column: 6)
!15346 = !DILocation(line: 1729, column: 33, scope: !15345)
!15347 = !DILocation(line: 1729, column: 48, scope: !15345)
!15348 = !DILocation(line: 1729, column: 6, scope: !15334)
!15349 = !DILocation(line: 0, scope: !13635, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 1730, column: 3, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15345, file: !2372, line: 1729, column: 54)
!15352 = !DILocation(line: 0, scope: !13643, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15350)
!15354 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15353)
!15355 = !DILocation(line: 1732, column: 3, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15351, file: !2372, line: 1732, column: 3)
!15357 = !{i64 2154929985, i64 2154930001, i64 2154930027, i64 2154930055, i64 2154930075}
!15358 = !DILocation(line: 1733, column: 3, scope: !15351)
!15359 = !DILocation(line: 1736, column: 20, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15334, file: !2372, line: 1736, column: 6)
!15361 = !DILocation(line: 1736, column: 33, scope: !15360)
!15362 = !DILocation(line: 1736, column: 49, scope: !15360)
!15363 = !DILocation(line: 1736, column: 6, scope: !15334)
!15364 = !DILocation(line: 0, scope: !13635, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 1737, column: 3, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15360, file: !2372, line: 1736, column: 56)
!15367 = !DILocation(line: 0, scope: !13643, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15365)
!15369 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15368)
!15370 = !DILocation(line: 1738, column: 3, scope: !15366)
!15371 = !DILocation(line: 1775, column: 2, scope: !15334)
!15372 = !DILocation(line: 1776, column: 16, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15334, file: !2372, line: 1776, column: 6)
!15374 = !DILocation(line: 1776, column: 13, scope: !15373)
!15375 = !DILocation(line: 1776, column: 25, scope: !15373)
!15376 = !DILocation(line: 1031, column: 3, scope: !14252, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 48, column: 10, scope: !14256, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 1776, column: 29, scope: !15373)
!15379 = !DILocation(line: 0, scope: !14252, inlinedAt: !15377)
!15380 = !DILocation(line: 48, column: 9, scope: !14256, inlinedAt: !15378)
!15381 = !DILocation(line: 1776, column: 6, scope: !15334)
!15382 = !DILocation(line: 0, scope: !14219, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 1777, column: 3, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15373, file: !2372, line: 1776, column: 47)
!15385 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15383)
!15386 = !DILocation(line: 1779, column: 2, scope: !15384)
!15387 = !DILocation(line: 0, scope: !13635, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 1780, column: 2, scope: !15334)
!15389 = !DILocation(line: 0, scope: !13643, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15388)
!15391 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15390)
!15392 = !DILocation(line: 1781, column: 1, scope: !15334)
!15393 = distinct !DISubprogram(name: "end_thread", scope: !2372, file: !2372, line: 1690, type: !13566, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15394)
!15394 = !{!15395}
!15395 = !DILocalVariable(name: "thread", arg: 1, scope: !15393, file: !2372, line: 1690, type: !2267)
!15396 = !DILocation(line: 0, scope: !15393)
!15397 = !DILocation(line: 1695, column: 20, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !2372, line: 1695, column: 6)
!15399 = !DILocation(line: 1695, column: 33, scope: !15398)
!15400 = !DILocation(line: 1695, column: 49, scope: !15398)
!15401 = !DILocation(line: 1695, column: 6, scope: !15393)
!15402 = !DILocation(line: 1697, column: 29, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15398, file: !2372, line: 1695, column: 56)
!15404 = !DILocation(line: 1698, column: 7, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15403, file: !2372, line: 1698, column: 7)
!15406 = !DILocation(line: 1698, column: 7, scope: !15403)
!15407 = !DILocation(line: 0, scope: !13777, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 1699, column: 4, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15405, file: !2372, line: 1698, column: 35)
!15410 = !DILocation(line: 266, column: 28, scope: !13777, inlinedAt: !15408)
!15411 = !DILocation(line: 0, scope: !13785, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 268, column: 3, scope: !13789, inlinedAt: !15408)
!15413 = !DILocation(line: 234, column: 2, scope: !13785, inlinedAt: !15412)
!15414 = !DILocation(line: 1700, column: 3, scope: !15409)
!15415 = !DILocation(line: 1701, column: 20, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15403, file: !2372, line: 1701, column: 7)
!15417 = !DILocation(line: 1701, column: 30, scope: !15416)
!15418 = !DILocation(line: 1701, column: 7, scope: !15403)
!15419 = !DILocation(line: 1702, column: 4, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15416, file: !2372, line: 1701, column: 39)
!15421 = !DILocation(line: 1703, column: 3, scope: !15420)
!15422 = !DILocation(line: 1704, column: 9, scope: !15403)
!15423 = !DILocation(line: 1705, column: 23, scope: !15403)
!15424 = !DILocation(line: 1705, column: 3, scope: !15403)
!15425 = !DILocation(line: 1706, column: 3, scope: !15403)
!15426 = !DILocation(line: 1722, column: 2, scope: !15403)
!15427 = !DILocation(line: 1723, column: 1, scope: !15393)
!15428 = distinct !DISubprogram(name: "unpend_all", scope: !2372, file: !2372, line: 1674, type: !15429, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15431)
!15429 = !DISubroutineType(types: !15430)
!15430 = !{null, !2298}
!15431 = !{!15432, !15433}
!15432 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15428, file: !2372, line: 1674, type: !2298)
!15433 = !DILocalVariable(name: "thread", scope: !15428, file: !2372, line: 1676, type: !2267)
!15434 = !DILocation(line: 0, scope: !15428)
!15435 = !DILocation(line: 1678, column: 19, scope: !15428)
!15436 = !DILocation(line: 1678, column: 41, scope: !15428)
!15437 = !DILocation(line: 1678, column: 2, scope: !15428)
!15438 = !DILocation(line: 1679, column: 3, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15428, file: !2372, line: 1678, column: 50)
!15440 = !DILocation(line: 1680, column: 9, scope: !15439)
!15441 = !DILocalVariable(name: "thread", arg: 1, scope: !15442, file: !12461, line: 65, type: !2267)
!15442 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12461, file: !12461, line: 65, type: !15443, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15445)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{null, !2267, !32}
!15445 = !{!15441, !15446}
!15446 = !DILocalVariable(name: "value", arg: 2, scope: !15442, file: !12461, line: 65, type: !32)
!15447 = !DILocation(line: 0, scope: !15442, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 1681, column: 3, scope: !15439)
!15449 = !DILocation(line: 67, column: 15, scope: !15442, inlinedAt: !15448)
!15450 = !DILocation(line: 67, column: 33, scope: !15442, inlinedAt: !15448)
!15451 = !DILocation(line: 1682, column: 3, scope: !15439)
!15452 = distinct !{!15452, !15437, !15453}
!15453 = !DILocation(line: 1683, column: 2, scope: !15428)
!15454 = !DILocation(line: 1684, column: 1, scope: !15428)
!15455 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2372, file: !2372, line: 1794, type: !15456, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15458)
!15456 = !DISubroutineType(types: !15457)
!15457 = !{!107, !2267, !14399}
!15458 = !{!15459, !15460, !15461, !15462}
!15459 = !DILocalVariable(name: "thread", arg: 1, scope: !15455, file: !2372, line: 1794, type: !2267)
!15460 = !DILocalVariable(name: "timeout", arg: 2, scope: !15455, file: !2372, line: 1794, type: !14399)
!15461 = !DILocalVariable(name: "key", scope: !15455, file: !2372, line: 1796, type: !13600)
!15462 = !DILocalVariable(name: "ret", scope: !15455, file: !2372, line: 1797, type: !107)
!15463 = !DILocation(line: 0, scope: !15455)
!15464 = !DILocation(line: 0, scope: !13608, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 1796, column: 25, scope: !15455)
!15466 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15465)
!15468 = !DILocation(line: 0, scope: !13617, inlinedAt: !15467)
!15469 = !DILocation(line: 1801, column: 20, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15455, file: !2372, line: 1801, column: 6)
!15471 = !DILocation(line: 1801, column: 33, scope: !15470)
!15472 = !DILocation(line: 1801, column: 49, scope: !15470)
!15473 = !DILocation(line: 1801, column: 6, scope: !15455)
!15474 = !DILocation(line: 1803, column: 13, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15470, file: !2372, line: 1803, column: 13)
!15476 = !DILocation(line: 1803, column: 13, scope: !15470)
!15477 = !DILocation(line: 1805, column: 24, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !2372, line: 1805, column: 13)
!15479 = !DILocation(line: 1805, column: 21, scope: !15478)
!15480 = !DILocation(line: 1805, column: 34, scope: !15478)
!15481 = !DILocation(line: 1806, column: 20, scope: !15478)
!15482 = !DILocation(line: 1806, column: 44, scope: !15478)
!15483 = !DILocation(line: 1806, column: 30, scope: !15478)
!15484 = !DILocation(line: 1805, column: 13, scope: !15475)
!15485 = !DILocation(line: 1810, column: 42, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15478, file: !2372, line: 1808, column: 9)
!15487 = !DILocation(line: 1810, column: 3, scope: !15486)
!15488 = !DILocation(line: 1811, column: 22, scope: !15486)
!15489 = !DILocation(line: 1811, column: 3, scope: !15486)
!15490 = !DILocation(line: 0, scope: !14219, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 1814, column: 9, scope: !15486)
!15492 = !DILocation(line: 196, column: 9, scope: !14219, inlinedAt: !15491)
!15493 = !DILocation(line: 1817, column: 3, scope: !15486)
!15494 = !DILocation(line: 0, scope: !15470)
!15495 = !DILocation(line: 0, scope: !13635, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 1822, column: 2, scope: !15455)
!15497 = !DILocation(line: 0, scope: !13643, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15496)
!15499 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15498)
!15500 = !DILocation(line: 1823, column: 2, scope: !15455)
!15501 = !DILocation(line: 1824, column: 1, scope: !15455)
!15502 = distinct !DISubprogram(name: "z_sched_wake", scope: !2372, file: !2372, line: 1882, type: !15503, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!136, !2298, !107, !102}
!15505 = !{!15506, !15507, !15508, !15509, !15510, !15511, !15513}
!15506 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15502, file: !2372, line: 1882, type: !2298)
!15507 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15502, file: !2372, line: 1882, type: !107)
!15508 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15502, file: !2372, line: 1882, type: !102)
!15509 = !DILocalVariable(name: "thread", scope: !15502, file: !2372, line: 1884, type: !2267)
!15510 = !DILocalVariable(name: "ret", scope: !15502, file: !2372, line: 1885, type: !136)
!15511 = !DILocalVariable(name: "__i", scope: !15512, file: !2372, line: 1887, type: !13600)
!15512 = distinct !DILexicalBlock(scope: !15502, file: !2372, line: 1887, column: 2)
!15513 = !DILocalVariable(name: "__key", scope: !15512, file: !2372, line: 1887, type: !13600)
!15514 = !DILocation(line: 0, scope: !15502)
!15515 = !DILocation(line: 0, scope: !15512)
!15516 = !DILocation(line: 0, scope: !13608, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 1887, column: 2, scope: !15512)
!15518 = !DILocation(line: 55, column: 2, scope: !13617, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 145, column: 10, scope: !13608, inlinedAt: !15517)
!15520 = !DILocation(line: 0, scope: !13617, inlinedAt: !15519)
!15521 = !DILocation(line: 1888, column: 12, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !2372, line: 1887, column: 26)
!15523 = distinct !DILexicalBlock(scope: !15512, file: !2372, line: 1887, column: 2)
!15524 = !DILocation(line: 1890, column: 14, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15522, file: !2372, line: 1890, column: 7)
!15526 = !DILocation(line: 1890, column: 7, scope: !15522)
!15527 = !DILocalVariable(name: "thread", arg: 1, scope: !15528, file: !13215, line: 134, type: !2267)
!15528 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13215, file: !13215, line: 134, type: !15529, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15531)
!15529 = !DISubroutineType(types: !15530)
!15530 = !{null, !2267, !32, !102}
!15531 = !{!15527, !15532, !15533}
!15532 = !DILocalVariable(name: "value", arg: 2, scope: !15528, file: !13215, line: 135, type: !32)
!15533 = !DILocalVariable(name: "data", arg: 3, scope: !15528, file: !13215, line: 136, type: !102)
!15534 = !DILocation(line: 0, scope: !15528, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 1891, column: 4, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15525, file: !2372, line: 1890, column: 23)
!15537 = !DILocation(line: 0, scope: !15442, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 138, column: 2, scope: !15528, inlinedAt: !15535)
!15539 = !DILocation(line: 67, column: 15, scope: !15442, inlinedAt: !15538)
!15540 = !DILocation(line: 67, column: 33, scope: !15442, inlinedAt: !15538)
!15541 = !DILocation(line: 139, column: 15, scope: !15528, inlinedAt: !15535)
!15542 = !DILocation(line: 139, column: 25, scope: !15528, inlinedAt: !15535)
!15543 = !DILocation(line: 1894, column: 4, scope: !15536)
!15544 = !DILocation(line: 1895, column: 10, scope: !15536)
!15545 = !DILocation(line: 1896, column: 4, scope: !15536)
!15546 = !DILocation(line: 1898, column: 3, scope: !15536)
!15547 = !DILocation(line: 0, scope: !13635, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 1887, column: 2, scope: !15523)
!15549 = !DILocation(line: 0, scope: !13643, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 215, column: 2, scope: !13635, inlinedAt: !15548)
!15551 = !DILocation(line: 95, column: 2, scope: !13643, inlinedAt: !15550)
!15552 = !DILocation(line: 1901, column: 2, scope: !15502)
!15553 = distinct !DISubprogram(name: "z_sched_wait", scope: !2372, file: !2372, line: 1904, type: !15554, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !15557)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{!107, !13611, !13600, !2298, !14399, !15556}
!15556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15557 = !{!15558, !15559, !15560, !15561, !15562, !15563}
!15558 = !DILocalVariable(name: "lock", arg: 1, scope: !15553, file: !2372, line: 1904, type: !13611)
!15559 = !DILocalVariable(name: "key", arg: 2, scope: !15553, file: !2372, line: 1904, type: !13600)
!15560 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15553, file: !2372, line: 1905, type: !2298)
!15561 = !DILocalVariable(name: "timeout", arg: 4, scope: !15553, file: !2372, line: 1905, type: !14399)
!15562 = !DILocalVariable(name: "data", arg: 5, scope: !15553, file: !2372, line: 1905, type: !15556)
!15563 = !DILocalVariable(name: "ret", scope: !15553, file: !2372, line: 1907, type: !107)
!15564 = !DILocation(line: 0, scope: !15553)
!15565 = !DILocation(line: 1907, column: 12, scope: !15553)
!15566 = !DILocation(line: 1909, column: 11, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15553, file: !2372, line: 1909, column: 6)
!15568 = !DILocation(line: 1909, column: 6, scope: !15553)
!15569 = !DILocation(line: 1910, column: 11, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2372, line: 1909, column: 20)
!15571 = !DILocation(line: 1910, column: 26, scope: !15570)
!15572 = !DILocation(line: 1910, column: 9, scope: !15570)
!15573 = !DILocation(line: 1911, column: 2, scope: !15570)
!15574 = !DILocation(line: 1912, column: 2, scope: !15553)
!15575 = distinct !DISubprogram(name: "z_data_copy", scope: !15576, file: !15576, line: 22, type: !3169, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !250)
!15576 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15577 = !DILocation(line: 24, column: 2, scope: !15575)
!15578 = !DILocation(line: 27, column: 2, scope: !15575)
!15579 = !DILocation(line: 71, column: 1, scope: !15575)
!15580 = distinct !DISubprogram(name: "z_add_timeout", scope: !2409, file: !2409, line: 88, type: !15581, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15587)
!15581 = !DISubroutineType(types: !15582)
!15582 = !{null, !2382, !2401, !15583}
!15583 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15584)
!15584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15585)
!15585 = !{!15586}
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15584, file: !104, line: 66, baseType: !103, size: 64)
!15587 = !{!15588, !15589, !15590, !15591, !15597, !15598, !15601, !15604}
!15588 = !DILocalVariable(name: "to", arg: 1, scope: !15580, file: !2409, line: 88, type: !2382)
!15589 = !DILocalVariable(name: "fn", arg: 2, scope: !15580, file: !2409, line: 88, type: !2401)
!15590 = !DILocalVariable(name: "timeout", arg: 3, scope: !15580, file: !2409, line: 89, type: !15583)
!15591 = !DILocalVariable(name: "__i", scope: !15592, file: !2409, line: 102, type: !15593)
!15592 = distinct !DILexicalBlock(scope: !15580, file: !2409, line: 102, column: 2)
!15593 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !15594)
!15594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !15595)
!15595 = !{!15596}
!15596 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15594, file: !249, line: 33, baseType: !107, size: 32)
!15597 = !DILocalVariable(name: "__key", scope: !15592, file: !2409, line: 102, type: !15593)
!15598 = !DILocalVariable(name: "t", scope: !15599, file: !2409, line: 103, type: !2382)
!15599 = distinct !DILexicalBlock(scope: !15600, file: !2409, line: 102, column: 24)
!15600 = distinct !DILexicalBlock(scope: !15592, file: !2409, line: 102, column: 2)
!15601 = !DILocalVariable(name: "ticks", scope: !15602, file: !2409, line: 107, type: !103)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2409, line: 106, column: 39)
!15603 = distinct !DILexicalBlock(scope: !15599, file: !2409, line: 105, column: 7)
!15604 = !DILocalVariable(name: "next_time", scope: !15605, file: !2409, line: 137, type: !706)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2409, line: 127, column: 22)
!15606 = distinct !DILexicalBlock(scope: !15599, file: !2409, line: 127, column: 7)
!15607 = !DILocation(line: 0, scope: !15580)
!15608 = !DILocation(line: 91, column: 6, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15580, file: !2409, line: 91, column: 6)
!15610 = !DILocation(line: 91, column: 6, scope: !15580)
!15611 = !DILocation(line: 100, column: 6, scope: !15580)
!15612 = !DILocation(line: 100, column: 9, scope: !15580)
!15613 = !DILocation(line: 0, scope: !15592)
!15614 = !DILocalVariable(name: "l", arg: 1, scope: !15615, file: !249, line: 136, type: !15618)
!15615 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !15616, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15619)
!15616 = !DISubroutineType(types: !15617)
!15617 = !{!15593, !15618}
!15618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!15619 = !{!15614, !15620}
!15620 = !DILocalVariable(name: "k", scope: !15615, file: !249, line: 139, type: !15593)
!15621 = !DILocation(line: 0, scope: !15615, inlinedAt: !15622)
!15622 = distinct !DILocation(line: 102, column: 2, scope: !15592)
!15623 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15628)
!15624 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15625)
!15625 = !{!15626, !15627}
!15626 = !DILocalVariable(name: "key", scope: !15624, file: !5943, line: 44, type: !32)
!15627 = !DILocalVariable(name: "tmp", scope: !15624, file: !5943, line: 53, type: !32)
!15628 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15622)
!15629 = !{i64 2042593}
!15630 = !DILocation(line: 0, scope: !15624, inlinedAt: !15628)
!15631 = !DILocation(line: 106, column: 33, scope: !15603)
!15632 = !DILocation(line: 105, column: 7, scope: !15599)
!15633 = !DILocation(line: 107, column: 50, scope: !15602)
!15634 = !DILocation(line: 107, column: 48, scope: !15602)
!15635 = !DILocation(line: 0, scope: !15602)
!15636 = !DILocation(line: 109, column: 17, scope: !15602)
!15637 = !DILocation(line: 110, column: 3, scope: !15602)
!15638 = !DILocation(line: 111, column: 31, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15603, file: !2409, line: 110, column: 10)
!15640 = !DILocation(line: 111, column: 37, scope: !15639)
!15641 = !DILocation(line: 111, column: 35, scope: !15639)
!15642 = !DILocation(line: 0, scope: !15603)
!15643 = !DILocation(line: 109, column: 8, scope: !15602)
!15644 = !DILocation(line: 109, column: 15, scope: !15602)
!15645 = !DILocation(line: 114, column: 12, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15599, file: !2409, line: 114, column: 3)
!15647 = !DILocation(line: 0, scope: !15599)
!15648 = !DILocation(line: 114, column: 3, scope: !15646)
!15649 = !DILocation(line: 115, column: 24, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !2409, line: 115, column: 8)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2409, line: 114, column: 45)
!15652 = distinct !DILexicalBlock(scope: !15646, file: !2409, line: 114, column: 3)
!15653 = !DILocation(line: 115, column: 11, scope: !15650)
!15654 = !DILocation(line: 115, column: 18, scope: !15650)
!15655 = !DILocation(line: 115, column: 8, scope: !15651)
!15656 = !DILocation(line: 116, column: 15, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15650, file: !2409, line: 115, column: 32)
!15658 = !DILocation(line: 117, column: 26, scope: !15657)
!15659 = !DILocation(line: 117, column: 37, scope: !15657)
!15660 = !DILocation(line: 117, column: 5, scope: !15657)
!15661 = !DILocation(line: 123, column: 7, scope: !15599)
!15662 = !DILocation(line: 120, column: 15, scope: !15651)
!15663 = !DILocation(line: 114, column: 36, scope: !15652)
!15664 = distinct !{!15664, !15648, !15665}
!15665 = !DILocation(line: 121, column: 3, scope: !15646)
!15666 = !DILocation(line: 124, column: 41, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2409, line: 123, column: 18)
!15668 = distinct !DILexicalBlock(scope: !15599, file: !2409, line: 123, column: 7)
!15669 = !DILocation(line: 124, column: 4, scope: !15667)
!15670 = !DILocation(line: 125, column: 3, scope: !15667)
!15671 = !DILocation(line: 127, column: 13, scope: !15606)
!15672 = !DILocation(line: 127, column: 10, scope: !15606)
!15673 = !DILocation(line: 127, column: 7, scope: !15599)
!15674 = !DILocation(line: 137, column: 24, scope: !15605)
!15675 = !DILocation(line: 0, scope: !15605)
!15676 = !DILocation(line: 139, column: 18, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15605, file: !2409, line: 139, column: 8)
!15678 = !DILocation(line: 139, column: 23, scope: !15677)
!15679 = !DILocation(line: 141, column: 5, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15677, file: !2409, line: 140, column: 48)
!15681 = !DILocation(line: 142, column: 4, scope: !15680)
!15682 = !DILocalVariable(name: "key", arg: 2, scope: !15683, file: !249, line: 190, type: !15593)
!15683 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !15684, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{null, !15618, !15593}
!15686 = !{!15687, !15682}
!15687 = !DILocalVariable(name: "l", arg: 1, scope: !15683, file: !249, line: 189, type: !15618)
!15688 = !DILocation(line: 0, scope: !15683, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 102, column: 2, scope: !15600)
!15690 = !DILocalVariable(name: "key", arg: 1, scope: !15691, file: !5943, line: 84, type: !32)
!15691 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15692)
!15692 = !{!15690}
!15693 = !DILocation(line: 0, scope: !15691, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15689)
!15695 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15694)
!15696 = !{i64 2043410}
!15697 = !DILocation(line: 148, column: 1, scope: !15580)
!15698 = distinct !DISubprogram(name: "elapsed", scope: !2409, file: !2409, line: 62, type: !15699, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !250)
!15699 = !DISubroutineType(types: !15700)
!15700 = !{!706}
!15701 = !DILocation(line: 64, column: 9, scope: !15698)
!15702 = !DILocation(line: 64, column: 28, scope: !15698)
!15703 = !DILocation(line: 64, column: 35, scope: !15698)
!15704 = !DILocation(line: 64, column: 2, scope: !15698)
!15705 = distinct !DISubprogram(name: "first", scope: !2409, file: !2409, line: 39, type: !15706, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15708)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{!2382}
!15708 = !{!15709}
!15709 = !DILocalVariable(name: "t", scope: !15705, file: !2409, line: 41, type: !15710)
!15710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!15711 = !DILocation(line: 41, column: 19, scope: !15705)
!15712 = !DILocation(line: 0, scope: !15705)
!15713 = !DILocation(line: 43, column: 9, scope: !15705)
!15714 = !DILocation(line: 43, column: 2, scope: !15705)
!15715 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !15716, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15718)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{null, !15710, !15710}
!15718 = !{!15719, !15720, !15721}
!15719 = !DILocalVariable(name: "successor", arg: 1, scope: !15715, file: !233, line: 443, type: !15710)
!15720 = !DILocalVariable(name: "node", arg: 2, scope: !15715, file: !233, line: 443, type: !15710)
!15721 = !DILocalVariable(name: "prev", scope: !15715, file: !233, line: 445, type: !15722)
!15722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15710)
!15723 = !DILocation(line: 0, scope: !15715)
!15724 = !DILocation(line: 445, column: 39, scope: !15715)
!15725 = !DILocation(line: 447, column: 8, scope: !15715)
!15726 = !DILocation(line: 447, column: 13, scope: !15715)
!15727 = !DILocation(line: 448, column: 8, scope: !15715)
!15728 = !DILocation(line: 448, column: 13, scope: !15715)
!15729 = !DILocation(line: 449, column: 8, scope: !15715)
!15730 = !DILocation(line: 449, column: 13, scope: !15715)
!15731 = !DILocation(line: 450, column: 18, scope: !15715)
!15732 = !DILocation(line: 451, column: 1, scope: !15715)
!15733 = distinct !DISubprogram(name: "next", scope: !2409, file: !2409, line: 46, type: !15734, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{!2382, !2382}
!15736 = !{!15737, !15738}
!15737 = !DILocalVariable(name: "t", arg: 1, scope: !15733, file: !2409, line: 46, type: !2382)
!15738 = !DILocalVariable(name: "n", scope: !15733, file: !2409, line: 48, type: !15710)
!15739 = !DILocation(line: 0, scope: !15733)
!15740 = !DILocation(line: 48, column: 58, scope: !15733)
!15741 = !DILocation(line: 48, column: 19, scope: !15733)
!15742 = !DILocation(line: 50, column: 9, scope: !15733)
!15743 = !DILocation(line: 50, column: 2, scope: !15733)
!15744 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !15745, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15748)
!15745 = !DISubroutineType(types: !15746)
!15746 = !{null, !15747, !15710}
!15747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!15748 = !{!15749, !15750, !15751}
!15749 = !DILocalVariable(name: "list", arg: 1, scope: !15744, file: !233, line: 404, type: !15747)
!15750 = !DILocalVariable(name: "node", arg: 2, scope: !15744, file: !233, line: 404, type: !15710)
!15751 = !DILocalVariable(name: "tail", scope: !15744, file: !233, line: 406, type: !15722)
!15752 = !DILocation(line: 0, scope: !15744)
!15753 = !DILocation(line: 406, column: 34, scope: !15744)
!15754 = !DILocation(line: 408, column: 8, scope: !15744)
!15755 = !DILocation(line: 408, column: 13, scope: !15744)
!15756 = !DILocation(line: 409, column: 8, scope: !15744)
!15757 = !DILocation(line: 409, column: 13, scope: !15744)
!15758 = !DILocation(line: 411, column: 8, scope: !15744)
!15759 = !DILocation(line: 411, column: 13, scope: !15744)
!15760 = !DILocation(line: 412, column: 13, scope: !15744)
!15761 = !DILocation(line: 413, column: 1, scope: !15744)
!15762 = distinct !DISubprogram(name: "next_timeout", scope: !2409, file: !2409, line: 67, type: !15699, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15763)
!15763 = !{!15764, !15765, !15766}
!15764 = !DILocalVariable(name: "to", scope: !15762, file: !2409, line: 69, type: !2382)
!15765 = !DILocalVariable(name: "ticks_elapsed", scope: !15762, file: !2409, line: 70, type: !706)
!15766 = !DILocalVariable(name: "ret", scope: !15762, file: !2409, line: 71, type: !706)
!15767 = !DILocation(line: 69, column: 24, scope: !15762)
!15768 = !DILocation(line: 0, scope: !15762)
!15769 = !DILocation(line: 70, column: 26, scope: !15762)
!15770 = !DILocation(line: 73, column: 10, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15762, file: !2409, line: 73, column: 6)
!15772 = !DILocation(line: 73, column: 19, scope: !15771)
!15773 = !DILocation(line: 74, column: 21, scope: !15771)
!15774 = !DILocation(line: 74, column: 30, scope: !15771)
!15775 = !DILocation(line: 74, column: 28, scope: !15771)
!15776 = !DILocation(line: 74, column: 45, scope: !15771)
!15777 = !DILocation(line: 73, column: 6, scope: !15762)
!15778 = !DILocation(line: 77, column: 9, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15771, file: !2409, line: 76, column: 9)
!15780 = !DILocation(line: 0, scope: !15771)
!15781 = !DILocation(line: 81, column: 20, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15762, file: !2409, line: 81, column: 6)
!15783 = !DILocation(line: 81, column: 6, scope: !15782)
!15784 = !DILocation(line: 81, column: 32, scope: !15782)
!15785 = !DILocation(line: 85, column: 2, scope: !15762)
!15786 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !15787, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15789)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!15710, !15747, !15710}
!15789 = !{!15790, !15791}
!15790 = !DILocalVariable(name: "list", arg: 1, scope: !15786, file: !233, line: 341, type: !15747)
!15791 = !DILocalVariable(name: "node", arg: 2, scope: !15786, file: !233, line: 342, type: !15710)
!15792 = !DILocation(line: 0, scope: !15786)
!15793 = !DILocation(line: 344, column: 15, scope: !15786)
!15794 = !DILocation(line: 344, column: 9, scope: !15786)
!15795 = !DILocation(line: 344, column: 26, scope: !15786)
!15796 = !DILocation(line: 344, column: 2, scope: !15786)
!15797 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !15787, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15798)
!15798 = !{!15799, !15800}
!15799 = !DILocalVariable(name: "list", arg: 1, scope: !15797, file: !233, line: 325, type: !15747)
!15800 = !DILocalVariable(name: "node", arg: 2, scope: !15797, file: !233, line: 326, type: !15710)
!15801 = !DILocation(line: 0, scope: !15797)
!15802 = !DILocation(line: 328, column: 24, scope: !15797)
!15803 = !DILocation(line: 328, column: 15, scope: !15797)
!15804 = !DILocation(line: 328, column: 9, scope: !15797)
!15805 = !DILocation(line: 328, column: 45, scope: !15797)
!15806 = !DILocation(line: 328, column: 2, scope: !15797)
!15807 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !15808, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15810)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!15710, !15747}
!15810 = !{!15811}
!15811 = !DILocalVariable(name: "list", arg: 1, scope: !15807, file: !233, line: 294, type: !15747)
!15812 = !DILocation(line: 0, scope: !15807)
!15813 = !DILocation(line: 296, column: 9, scope: !15807)
!15814 = !DILocation(line: 296, column: 2, scope: !15807)
!15815 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !15816, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15818)
!15816 = !DISubroutineType(types: !15817)
!15817 = !{!136, !15747}
!15818 = !{!15819}
!15819 = !DILocalVariable(name: "list", arg: 1, scope: !15815, file: !233, line: 266, type: !15747)
!15820 = !DILocation(line: 0, scope: !15815)
!15821 = !DILocation(line: 268, column: 15, scope: !15815)
!15822 = !DILocation(line: 268, column: 20, scope: !15815)
!15823 = !DILocation(line: 268, column: 2, scope: !15815)
!15824 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2409, file: !2409, line: 150, type: !15825, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15827)
!15825 = !DISubroutineType(types: !15826)
!15826 = !{!107, !2382}
!15827 = !{!15828, !15829, !15830, !15832}
!15828 = !DILocalVariable(name: "to", arg: 1, scope: !15824, file: !2409, line: 150, type: !2382)
!15829 = !DILocalVariable(name: "ret", scope: !15824, file: !2409, line: 152, type: !107)
!15830 = !DILocalVariable(name: "__i", scope: !15831, file: !2409, line: 154, type: !15593)
!15831 = distinct !DILexicalBlock(scope: !15824, file: !2409, line: 154, column: 2)
!15832 = !DILocalVariable(name: "__key", scope: !15831, file: !2409, line: 154, type: !15593)
!15833 = !DILocation(line: 0, scope: !15824)
!15834 = !DILocation(line: 0, scope: !15831)
!15835 = !DILocation(line: 0, scope: !15615, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 154, column: 2, scope: !15831)
!15837 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15836)
!15839 = !DILocation(line: 0, scope: !15624, inlinedAt: !15838)
!15840 = !DILocation(line: 155, column: 7, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !2409, line: 155, column: 7)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !2409, line: 154, column: 24)
!15843 = distinct !DILexicalBlock(scope: !15831, file: !2409, line: 154, column: 2)
!15844 = !DILocation(line: 155, column: 7, scope: !15842)
!15845 = !DILocation(line: 156, column: 4, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15841, file: !2409, line: 155, column: 39)
!15847 = !DILocation(line: 158, column: 3, scope: !15846)
!15848 = !DILocation(line: 0, scope: !15683, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 154, column: 2, scope: !15843)
!15850 = !DILocation(line: 0, scope: !15691, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15849)
!15852 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15851)
!15853 = !DILocation(line: 161, column: 2, scope: !15824)
!15854 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !15855, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15859)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{!136, !15857}
!15857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15858, size: 32)
!15858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2386)
!15859 = !{!15860}
!15860 = !DILocalVariable(name: "node", arg: 1, scope: !15854, file: !233, line: 225, type: !15857)
!15861 = !DILocation(line: 0, scope: !15854)
!15862 = !DILocation(line: 227, column: 15, scope: !15854)
!15863 = !DILocation(line: 227, column: 20, scope: !15854)
!15864 = !DILocation(line: 227, column: 2, scope: !15854)
!15865 = distinct !DISubprogram(name: "remove_timeout", scope: !2409, file: !2409, line: 53, type: !2403, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15866)
!15866 = !{!15867}
!15867 = !DILocalVariable(name: "t", arg: 1, scope: !15865, file: !2409, line: 53, type: !2382)
!15868 = !DILocation(line: 0, scope: !15865)
!15869 = !DILocation(line: 55, column: 6, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15865, file: !2409, line: 55, column: 6)
!15871 = !DILocation(line: 55, column: 14, scope: !15870)
!15872 = !DILocation(line: 55, column: 6, scope: !15865)
!15873 = !DILocation(line: 56, column: 25, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15870, file: !2409, line: 55, column: 23)
!15875 = !DILocation(line: 56, column: 12, scope: !15874)
!15876 = !DILocation(line: 56, column: 19, scope: !15874)
!15877 = !DILocation(line: 57, column: 2, scope: !15874)
!15878 = !DILocation(line: 59, column: 23, scope: !15865)
!15879 = !DILocation(line: 59, column: 2, scope: !15865)
!15880 = !DILocation(line: 60, column: 1, scope: !15865)
!15881 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !15882, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15884)
!15882 = !DISubroutineType(types: !15883)
!15883 = !{null, !15710}
!15884 = !{!15885, !15886, !15887}
!15885 = !DILocalVariable(name: "node", arg: 1, scope: !15881, file: !233, line: 496, type: !15710)
!15886 = !DILocalVariable(name: "prev", scope: !15881, file: !233, line: 498, type: !15722)
!15887 = !DILocalVariable(name: "next", scope: !15881, file: !233, line: 499, type: !15722)
!15888 = !DILocation(line: 0, scope: !15881)
!15889 = !DILocation(line: 498, column: 34, scope: !15881)
!15890 = !DILocation(line: 499, column: 34, scope: !15881)
!15891 = !DILocation(line: 501, column: 8, scope: !15881)
!15892 = !DILocation(line: 501, column: 13, scope: !15881)
!15893 = !DILocation(line: 502, column: 8, scope: !15881)
!15894 = !DILocation(line: 502, column: 13, scope: !15881)
!15895 = !DILocation(line: 503, column: 2, scope: !15881)
!15896 = !DILocation(line: 504, column: 1, scope: !15881)
!15897 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !15882, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15898)
!15898 = !{!15899}
!15899 = !DILocalVariable(name: "node", arg: 1, scope: !15897, file: !233, line: 211, type: !15710)
!15900 = !DILocation(line: 0, scope: !15897)
!15901 = !DILocation(line: 213, column: 8, scope: !15897)
!15902 = !DILocation(line: 213, column: 13, scope: !15897)
!15903 = !DILocation(line: 214, column: 8, scope: !15897)
!15904 = !DILocation(line: 214, column: 13, scope: !15897)
!15905 = !DILocation(line: 215, column: 1, scope: !15897)
!15906 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2409, file: !2409, line: 183, type: !15907, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15911)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{!103, !15909}
!15909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15910, size: 32)
!15910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2383)
!15911 = !{!15912, !15913, !15914, !15916}
!15912 = !DILocalVariable(name: "timeout", arg: 1, scope: !15906, file: !2409, line: 183, type: !15909)
!15913 = !DILocalVariable(name: "ticks", scope: !15906, file: !2409, line: 185, type: !103)
!15914 = !DILocalVariable(name: "__i", scope: !15915, file: !2409, line: 187, type: !15593)
!15915 = distinct !DILexicalBlock(scope: !15906, file: !2409, line: 187, column: 2)
!15916 = !DILocalVariable(name: "__key", scope: !15915, file: !2409, line: 187, type: !15593)
!15917 = !DILocation(line: 0, scope: !15906)
!15918 = !DILocation(line: 0, scope: !15915)
!15919 = !DILocation(line: 0, scope: !15615, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 187, column: 2, scope: !15915)
!15921 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15920)
!15923 = !DILocation(line: 0, scope: !15624, inlinedAt: !15922)
!15924 = !DILocation(line: 188, column: 11, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2409, line: 187, column: 24)
!15926 = distinct !DILexicalBlock(scope: !15915, file: !2409, line: 187, column: 2)
!15927 = !DILocation(line: 0, scope: !15683, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 187, column: 2, scope: !15926)
!15929 = !DILocation(line: 0, scope: !15691, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15928)
!15931 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15930)
!15932 = !DILocation(line: 191, column: 2, scope: !15906)
!15933 = distinct !DISubprogram(name: "timeout_rem", scope: !2409, file: !2409, line: 165, type: !15907, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15934)
!15934 = !{!15935, !15936, !15937}
!15935 = !DILocalVariable(name: "timeout", arg: 1, scope: !15933, file: !2409, line: 165, type: !15909)
!15936 = !DILocalVariable(name: "ticks", scope: !15933, file: !2409, line: 167, type: !103)
!15937 = !DILocalVariable(name: "t", scope: !15938, file: !2409, line: 173, type: !2382)
!15938 = distinct !DILexicalBlock(scope: !15933, file: !2409, line: 173, column: 2)
!15939 = !DILocation(line: 0, scope: !15933)
!15940 = !DILocation(line: 169, column: 6, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15933, file: !2409, line: 169, column: 6)
!15942 = !DILocation(line: 169, column: 6, scope: !15933)
!15943 = !DILocation(line: 173, column: 28, scope: !15938)
!15944 = !DILocation(line: 0, scope: !15938)
!15945 = !DILocation(line: 173, column: 39, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15938, file: !2409, line: 173, column: 2)
!15947 = !DILocation(line: 173, column: 2, scope: !15938)
!15948 = !DILocation(line: 174, column: 15, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15946, file: !2409, line: 173, column: 61)
!15950 = !DILocation(line: 174, column: 9, scope: !15949)
!15951 = !DILocation(line: 175, column: 15, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !2409, line: 175, column: 7)
!15953 = !DILocation(line: 175, column: 7, scope: !15949)
!15954 = !DILocation(line: 173, column: 52, scope: !15946)
!15955 = distinct !{!15955, !15947, !15956}
!15956 = !DILocation(line: 178, column: 2, scope: !15938)
!15957 = !DILocation(line: 180, column: 17, scope: !15933)
!15958 = !DILocation(line: 180, column: 15, scope: !15933)
!15959 = !DILocation(line: 180, column: 2, scope: !15933)
!15960 = !DILocation(line: 181, column: 1, scope: !15933)
!15961 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12833, file: !12833, line: 35, type: !15962, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15964)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{!136, !15909}
!15964 = !{!15965}
!15965 = !DILocalVariable(name: "to", arg: 1, scope: !15961, file: !12833, line: 35, type: !15909)
!15966 = !DILocation(line: 0, scope: !15961)
!15967 = !DILocation(line: 37, column: 35, scope: !15961)
!15968 = !DILocation(line: 37, column: 10, scope: !15961)
!15969 = !DILocation(line: 37, column: 9, scope: !15961)
!15970 = !DILocation(line: 37, column: 2, scope: !15961)
!15971 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2409, file: !2409, line: 194, type: !15907, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15972)
!15972 = !{!15973, !15974, !15975, !15977}
!15973 = !DILocalVariable(name: "timeout", arg: 1, scope: !15971, file: !2409, line: 194, type: !15909)
!15974 = !DILocalVariable(name: "ticks", scope: !15971, file: !2409, line: 196, type: !103)
!15975 = !DILocalVariable(name: "__i", scope: !15976, file: !2409, line: 198, type: !15593)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !2409, line: 198, column: 2)
!15977 = !DILocalVariable(name: "__key", scope: !15976, file: !2409, line: 198, type: !15593)
!15978 = !DILocation(line: 0, scope: !15971)
!15979 = !DILocation(line: 0, scope: !15976)
!15980 = !DILocation(line: 0, scope: !15615, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 198, column: 2, scope: !15976)
!15982 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !15981)
!15984 = !DILocation(line: 0, scope: !15624, inlinedAt: !15983)
!15985 = !DILocation(line: 199, column: 11, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15987, file: !2409, line: 198, column: 24)
!15987 = distinct !DILexicalBlock(scope: !15976, file: !2409, line: 198, column: 2)
!15988 = !DILocation(line: 199, column: 23, scope: !15986)
!15989 = !DILocation(line: 0, scope: !15683, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 198, column: 2, scope: !15987)
!15991 = !DILocation(line: 0, scope: !15691, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !15990)
!15993 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !15992)
!15994 = !DILocation(line: 199, column: 21, scope: !15986)
!15995 = !DILocation(line: 202, column: 2, scope: !15971)
!15996 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2409, file: !2409, line: 205, type: !15699, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !15997)
!15997 = !{!15998, !15999, !16001}
!15998 = !DILocalVariable(name: "ret", scope: !15996, file: !2409, line: 207, type: !706)
!15999 = !DILocalVariable(name: "__i", scope: !16000, file: !2409, line: 209, type: !15593)
!16000 = distinct !DILexicalBlock(scope: !15996, file: !2409, line: 209, column: 2)
!16001 = !DILocalVariable(name: "__key", scope: !16000, file: !2409, line: 209, type: !15593)
!16002 = !DILocation(line: 0, scope: !15996)
!16003 = !DILocation(line: 0, scope: !16000)
!16004 = !DILocation(line: 0, scope: !15615, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 209, column: 2, scope: !16000)
!16006 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !15624, inlinedAt: !16007)
!16009 = !DILocation(line: 210, column: 9, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16011, file: !2409, line: 209, column: 24)
!16011 = distinct !DILexicalBlock(scope: !16000, file: !2409, line: 209, column: 2)
!16012 = !DILocation(line: 0, scope: !15683, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 209, column: 2, scope: !16011)
!16014 = !DILocation(line: 0, scope: !15691, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16013)
!16016 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16015)
!16017 = !DILocation(line: 212, column: 2, scope: !15996)
!16018 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2409, file: !2409, line: 215, type: !10472, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !16019)
!16019 = !{!16020, !16021, !16022, !16024, !16025, !16028, !16029}
!16020 = !DILocalVariable(name: "ticks", arg: 1, scope: !16018, file: !2409, line: 215, type: !706)
!16021 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16018, file: !2409, line: 215, type: !136)
!16022 = !DILocalVariable(name: "__i", scope: !16023, file: !2409, line: 217, type: !15593)
!16023 = distinct !DILexicalBlock(scope: !16018, file: !2409, line: 217, column: 2)
!16024 = !DILocalVariable(name: "__key", scope: !16023, file: !2409, line: 217, type: !15593)
!16025 = !DILocalVariable(name: "next_to", scope: !16026, file: !2409, line: 218, type: !107)
!16026 = distinct !DILexicalBlock(scope: !16027, file: !2409, line: 217, column: 24)
!16027 = distinct !DILexicalBlock(scope: !16023, file: !2409, line: 217, column: 2)
!16028 = !DILocalVariable(name: "sooner", scope: !16026, file: !2409, line: 219, type: !136)
!16029 = !DILocalVariable(name: "imminent", scope: !16026, file: !2409, line: 221, type: !136)
!16030 = !DILocation(line: 0, scope: !16018)
!16031 = !DILocation(line: 0, scope: !16023)
!16032 = !DILocation(line: 0, scope: !15615, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 217, column: 2, scope: !16023)
!16034 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16033)
!16036 = !DILocation(line: 0, scope: !15624, inlinedAt: !16035)
!16037 = !DILocation(line: 218, column: 17, scope: !16026)
!16038 = !DILocation(line: 0, scope: !16026)
!16039 = !DILocation(line: 221, column: 27, scope: !16026)
!16040 = !DILocation(line: 233, column: 17, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16026, file: !2409, line: 233, column: 7)
!16042 = !DILocation(line: 234, column: 26, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16041, file: !2409, line: 233, column: 56)
!16044 = !DILocation(line: 234, column: 4, scope: !16043)
!16045 = !DILocation(line: 235, column: 3, scope: !16043)
!16046 = !DILocation(line: 0, scope: !15683, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 217, column: 2, scope: !16027)
!16048 = !DILocation(line: 0, scope: !15691, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16047)
!16050 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16049)
!16051 = !DILocation(line: 237, column: 1, scope: !16018)
!16052 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2409, file: !2409, line: 239, type: !16053, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !16055)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{null, !706}
!16055 = !{!16056, !16057, !16058, !16060}
!16056 = !DILocalVariable(name: "ticks", arg: 1, scope: !16052, file: !2409, line: 239, type: !706)
!16057 = !DILocalVariable(name: "key", scope: !16052, file: !2409, line: 245, type: !15593)
!16058 = !DILocalVariable(name: "t", scope: !16059, file: !2409, line: 262, type: !2382)
!16059 = distinct !DILexicalBlock(scope: !16052, file: !2409, line: 261, column: 67)
!16060 = !DILocalVariable(name: "dt", scope: !16059, file: !2409, line: 263, type: !107)
!16061 = !DILocation(line: 0, scope: !16052)
!16062 = !DILocation(line: 242, column: 2, scope: !16052)
!16063 = !DILocation(line: 0, scope: !15615, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 245, column: 25, scope: !16052)
!16065 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16064)
!16067 = !DILocation(line: 0, scope: !15624, inlinedAt: !16066)
!16068 = !DILocation(line: 261, column: 9, scope: !16052)
!16069 = !DILocation(line: 261, column: 17, scope: !16052)
!16070 = !DILocation(line: 261, column: 25, scope: !16052)
!16071 = !DILocation(line: 261, column: 37, scope: !16052)
!16072 = !DILocation(line: 261, column: 47, scope: !16052)
!16073 = !DILocation(line: 261, column: 44, scope: !16052)
!16074 = !DILocation(line: 261, column: 2, scope: !16052)
!16075 = !DILocation(line: 0, scope: !16059)
!16076 = !DILocation(line: 263, column: 12, scope: !16059)
!16077 = !DILocation(line: 265, column: 16, scope: !16059)
!16078 = !DILocation(line: 265, column: 13, scope: !16059)
!16079 = !DILocation(line: 266, column: 13, scope: !16059)
!16080 = !DILocation(line: 267, column: 3, scope: !16059)
!16081 = !DILocation(line: 0, scope: !15683, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 269, column: 3, scope: !16059)
!16083 = !DILocation(line: 0, scope: !15691, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16082)
!16085 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16084)
!16086 = !DILocation(line: 270, column: 6, scope: !16059)
!16087 = !DILocation(line: 270, column: 3, scope: !16059)
!16088 = !DILocation(line: 0, scope: !15615, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 271, column: 9, scope: !16059)
!16090 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16091)
!16091 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16089)
!16092 = !DILocation(line: 0, scope: !15624, inlinedAt: !16091)
!16093 = !DILocation(line: 272, column: 22, scope: !16059)
!16094 = distinct !{!16094, !16074, !16095}
!16095 = !DILocation(line: 273, column: 2, scope: !16052)
!16096 = !DILocation(line: 276, column: 19, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16098, file: !2409, line: 275, column: 23)
!16098 = distinct !DILexicalBlock(scope: !16052, file: !2409, line: 275, column: 6)
!16099 = !DILocation(line: 277, column: 2, scope: !16097)
!16100 = !DILocation(line: 279, column: 15, scope: !16052)
!16101 = !DILocation(line: 279, column: 12, scope: !16052)
!16102 = !DILocation(line: 280, column: 21, scope: !16052)
!16103 = !DILocation(line: 282, column: 24, scope: !16052)
!16104 = !DILocation(line: 282, column: 2, scope: !16052)
!16105 = !DILocation(line: 0, scope: !15683, inlinedAt: !16106)
!16106 = distinct !DILocation(line: 284, column: 2, scope: !16052)
!16107 = !DILocation(line: 0, scope: !15691, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16106)
!16109 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16108)
!16110 = !DILocation(line: 285, column: 1, scope: !16052)
!16111 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2409, file: !2409, line: 287, type: !16112, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !16114)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!105}
!16114 = !{!16115, !16116, !16118}
!16115 = !DILocalVariable(name: "t", scope: !16111, file: !2409, line: 289, type: !1474)
!16116 = !DILocalVariable(name: "__i", scope: !16117, file: !2409, line: 291, type: !15593)
!16117 = distinct !DILexicalBlock(scope: !16111, file: !2409, line: 291, column: 2)
!16118 = !DILocalVariable(name: "__key", scope: !16117, file: !2409, line: 291, type: !15593)
!16119 = !DILocation(line: 0, scope: !16111)
!16120 = !DILocation(line: 0, scope: !16117)
!16121 = !DILocation(line: 0, scope: !15615, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 291, column: 2, scope: !16117)
!16123 = !DILocation(line: 55, column: 2, scope: !15624, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 145, column: 10, scope: !15615, inlinedAt: !16122)
!16125 = !DILocation(line: 0, scope: !15624, inlinedAt: !16124)
!16126 = !DILocation(line: 292, column: 7, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !2409, line: 291, column: 24)
!16128 = distinct !DILexicalBlock(scope: !16117, file: !2409, line: 291, column: 2)
!16129 = !DILocation(line: 292, column: 19, scope: !16127)
!16130 = !DILocation(line: 0, scope: !15683, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 291, column: 2, scope: !16128)
!16132 = !DILocation(line: 0, scope: !15691, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 215, column: 2, scope: !15683, inlinedAt: !16131)
!16134 = !DILocation(line: 95, column: 2, scope: !15691, inlinedAt: !16133)
!16135 = !DILocation(line: 292, column: 17, scope: !16127)
!16136 = !DILocation(line: 294, column: 2, scope: !16111)
!16137 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2409, file: !2409, line: 297, type: !6198, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !250)
!16138 = !DILocation(line: 300, column: 19, scope: !16137)
!16139 = !DILocation(line: 300, column: 9, scope: !16137)
!16140 = !DILocation(line: 300, column: 2, scope: !16137)
!16141 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2409, file: !2409, line: 306, type: !16112, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !250)
!16142 = !DILocation(line: 308, column: 9, scope: !16141)
!16143 = !DILocation(line: 308, column: 2, scope: !16141)
!16144 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2409, file: !2409, line: 319, type: !6208, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !16145)
!16145 = !{!16146, !16147, !16148, !16149}
!16146 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16144, file: !2409, line: 319, type: !162)
!16147 = !DILocalVariable(name: "start_cycles", scope: !16144, file: !2409, line: 328, type: !162)
!16148 = !DILocalVariable(name: "cycles_to_wait", scope: !16144, file: !2409, line: 331, type: !162)
!16149 = !DILocalVariable(name: "current_cycles", scope: !16150, file: !2409, line: 338, type: !162)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !2409, line: 337, column: 11)
!16151 = distinct !DILexicalBlock(scope: !16152, file: !2409, line: 337, column: 2)
!16152 = distinct !DILexicalBlock(scope: !16144, file: !2409, line: 337, column: 2)
!16153 = !DILocation(line: 0, scope: !16144)
!16154 = !DILocation(line: 322, column: 19, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16144, file: !2409, line: 322, column: 6)
!16156 = !DILocation(line: 322, column: 6, scope: !16144)
!16157 = !DILocation(line: 328, column: 26, scope: !16144)
!16158 = !DILocation(line: 333, column: 43, scope: !16144)
!16159 = !DILocation(line: 337, column: 2, scope: !16144)
!16160 = !DILocation(line: 338, column: 29, scope: !16150)
!16161 = !DILocation(line: 0, scope: !16150)
!16162 = !DILocation(line: 341, column: 23, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16150, file: !2409, line: 341, column: 7)
!16164 = !DILocation(line: 341, column: 39, scope: !16163)
!16165 = !DILocation(line: 349, column: 1, scope: !16144)
!16166 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6198, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !250)
!16167 = !DILocation(line: 1677, column: 9, scope: !16166)
!16168 = !DILocation(line: 1677, column: 2, scope: !16166)
!16169 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16170, file: !16170, line: 24, type: !6198, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !250)
!16170 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16171 = !DILocation(line: 26, column: 9, scope: !16169)
!16172 = !DILocation(line: 26, column: 2, scope: !16169)
!16173 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2409, file: !2409, line: 364, type: !16174, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2379, retainedNodes: !16176)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!1474, !15583}
!16176 = !{!16177, !16178}
!16177 = !DILocalVariable(name: "timeout", arg: 1, scope: !16173, file: !2409, line: 364, type: !15583)
!16178 = !DILocalVariable(name: "dt", scope: !16173, file: !2409, line: 366, type: !103)
!16179 = !DILocation(line: 0, scope: !16173)
!16180 = !DILocation(line: 368, column: 6, scope: !16173)
!16181 = !DILocation(line: 371, column: 10, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16183, file: !2409, line: 370, column: 47)
!16183 = distinct !DILexicalBlock(scope: !16184, file: !2409, line: 370, column: 13)
!16184 = distinct !DILexicalBlock(scope: !16173, file: !2409, line: 368, column: 6)
!16185 = !DILocation(line: 371, column: 3, scope: !16182)
!16186 = !DILocation(line: 376, column: 58, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2409, line: 376, column: 7)
!16188 = distinct !DILexicalBlock(scope: !16183, file: !2409, line: 372, column: 9)
!16189 = !DILocation(line: 376, column: 7, scope: !16188)
!16190 = !DILocation(line: 376, column: 43, scope: !16187)
!16191 = !DILocation(line: 377, column: 4, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16187, file: !2409, line: 376, column: 64)
!16193 = !DILocation(line: 379, column: 10, scope: !16188)
!16194 = !DILocation(line: 379, column: 33, scope: !16188)
!16195 = !DILocation(line: 379, column: 31, scope: !16188)
!16196 = !DILocation(line: 379, column: 3, scope: !16188)
!16197 = !DILocation(line: 0, scope: !16184)
!16198 = !DILocation(line: 381, column: 1, scope: !16173)
!16199 = distinct !DISubprogram(name: "boot_banner", scope: !16200, file: !16200, line: 26, type: !3169, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3155, retainedNodes: !250)
!16200 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16201 = !DILocation(line: 34, column: 2, scope: !16199)
!16202 = !DILocation(line: 36, column: 1, scope: !16199)
!16203 = distinct !DISubprogram(name: "statics_init", scope: !2437, file: !2437, line: 21, type: !2443, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16204)
!16204 = !{!16205, !16206}
!16205 = !DILocalVariable(name: "unused", arg: 1, scope: !16203, file: !2437, line: 21, type: !2445)
!16206 = !DILocalVariable(name: "h", scope: !16207, file: !2437, line: 24, type: !16208)
!16207 = distinct !DILexicalBlock(scope: !16203, file: !2437, line: 24, column: 2)
!16208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16209, size: 32)
!16209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16210)
!16210 = !{!16211, !16217, !16223}
!16211 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16209, file: !224, line: 5074, baseType: !16212, size: 96)
!16212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !16213)
!16213 = !{!16214, !16215, !16216}
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16212, file: !454, line: 57, baseType: !457, size: 32)
!16215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16212, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!16216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16212, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!16217 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16209, file: !224, line: 5075, baseType: !16218, size: 64, offset: 96)
!16218 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16219)
!16219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16220)
!16220 = !{!16221}
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16219, file: !228, line: 232, baseType: !16222, size: 64)
!16222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2423)
!16223 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16209, file: !224, line: 5076, baseType: !16224, offset: 160)
!16224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16225 = !DILocation(line: 0, scope: !16203)
!16226 = !DILocation(line: 0, scope: !16207)
!16227 = !DILocation(line: 24, column: 2, scope: !16207)
!16228 = !DILocation(line: 52, column: 2, scope: !16203)
!16229 = !DILocation(line: 49, column: 27, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2437, line: 48, column: 3)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2437, line: 24, column: 36)
!16232 = distinct !DILexicalBlock(scope: !16207, file: !2437, line: 24, column: 2)
!16233 = !DILocation(line: 49, column: 45, scope: !16230)
!16234 = !DILocation(line: 49, column: 4, scope: !16230)
!16235 = !DILocation(line: 24, column: 2, scope: !16232)
!16236 = !DILocation(line: 24, column: 2, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16232, file: !2437, line: 24, column: 2)
!16238 = distinct !{!16238, !16227, !16239}
!16239 = !DILocation(line: 51, column: 2, scope: !16207)
!16240 = distinct !DISubprogram(name: "k_heap_init", scope: !2437, file: !2437, line: 13, type: !16241, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16243)
!16241 = !DISubroutineType(types: !16242)
!16242 = !{null, !16208, !102, !252}
!16243 = !{!16244, !16245, !16246}
!16244 = !DILocalVariable(name: "h", arg: 1, scope: !16240, file: !2437, line: 13, type: !16208)
!16245 = !DILocalVariable(name: "mem", arg: 2, scope: !16240, file: !2437, line: 13, type: !102)
!16246 = !DILocalVariable(name: "bytes", arg: 3, scope: !16240, file: !2437, line: 13, type: !252)
!16247 = !DILocation(line: 0, scope: !16240)
!16248 = !DILocation(line: 15, column: 19, scope: !16240)
!16249 = !DILocation(line: 15, column: 2, scope: !16240)
!16250 = !DILocation(line: 16, column: 20, scope: !16240)
!16251 = !DILocation(line: 16, column: 2, scope: !16240)
!16252 = !DILocation(line: 19, column: 1, scope: !16240)
!16253 = distinct !DISubprogram(name: "z_waitq_init", scope: !12765, file: !12765, line: 47, type: !16254, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16257)
!16254 = !DISubroutineType(types: !16255)
!16255 = !{null, !16256}
!16256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16218, size: 32)
!16257 = !{!16258}
!16258 = !DILocalVariable(name: "w", arg: 1, scope: !16253, file: !12765, line: 47, type: !16256)
!16259 = !DILocation(line: 0, scope: !16253)
!16260 = !DILocation(line: 49, column: 21, scope: !16253)
!16261 = !DILocation(line: 49, column: 2, scope: !16253)
!16262 = !DILocation(line: 50, column: 1, scope: !16253)
!16263 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16264, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16267)
!16264 = !DISubroutineType(types: !16265)
!16265 = !{null, !16266}
!16266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16222, size: 32)
!16267 = !{!16268}
!16268 = !DILocalVariable(name: "list", arg: 1, scope: !16263, file: !233, line: 197, type: !16266)
!16269 = !DILocation(line: 0, scope: !16263)
!16270 = !DILocation(line: 199, column: 8, scope: !16263)
!16271 = !DILocation(line: 199, column: 13, scope: !16263)
!16272 = !DILocation(line: 200, column: 8, scope: !16263)
!16273 = !DILocation(line: 200, column: 13, scope: !16263)
!16274 = !DILocation(line: 201, column: 1, scope: !16263)
!16275 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2437, file: !2437, line: 64, type: !16276, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16282)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{!102, !16208, !252, !252, !16278}
!16278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16279)
!16279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16280)
!16280 = !{!16281}
!16281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16279, file: !104, line: 66, baseType: !103, size: 64)
!16282 = !{!16283, !16284, !16285, !16286, !16287, !16288, !16289, !16290, !16295}
!16283 = !DILocalVariable(name: "h", arg: 1, scope: !16275, file: !2437, line: 64, type: !16208)
!16284 = !DILocalVariable(name: "align", arg: 2, scope: !16275, file: !2437, line: 64, type: !252)
!16285 = !DILocalVariable(name: "bytes", arg: 3, scope: !16275, file: !2437, line: 64, type: !252)
!16286 = !DILocalVariable(name: "timeout", arg: 4, scope: !16275, file: !2437, line: 65, type: !16278)
!16287 = !DILocalVariable(name: "now", scope: !16275, file: !2437, line: 67, type: !105)
!16288 = !DILocalVariable(name: "end", scope: !16275, file: !2437, line: 67, type: !105)
!16289 = !DILocalVariable(name: "ret", scope: !16275, file: !2437, line: 68, type: !102)
!16290 = !DILocalVariable(name: "key", scope: !16275, file: !2437, line: 72, type: !16291)
!16291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16292)
!16292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16293)
!16293 = !{!16294}
!16294 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16292, file: !249, line: 33, baseType: !107, size: 32)
!16295 = !DILocalVariable(name: "blocked_alloc", scope: !16275, file: !2437, line: 78, type: !136)
!16296 = !DILocation(line: 0, scope: !16275)
!16297 = !DILocation(line: 67, column: 21, scope: !16275)
!16298 = !DILocation(line: 70, column: 8, scope: !16275)
!16299 = !DILocation(line: 72, column: 41, scope: !16275)
!16300 = !DILocalVariable(name: "l", arg: 1, scope: !16301, file: !249, line: 136, type: !16304)
!16301 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16302, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16305)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!16291, !16304}
!16304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16224, size: 32)
!16305 = !{!16300, !16306}
!16306 = !DILocalVariable(name: "k", scope: !16301, file: !249, line: 139, type: !16291)
!16307 = !DILocation(line: 0, scope: !16301, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 72, column: 25, scope: !16275)
!16309 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16314)
!16310 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5943, file: !5943, line: 42, type: !5944, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16311)
!16311 = !{!16312, !16313}
!16312 = !DILocalVariable(name: "key", scope: !16310, file: !5943, line: 44, type: !32)
!16313 = !DILocalVariable(name: "tmp", scope: !16310, file: !5943, line: 53, type: !32)
!16314 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16308)
!16315 = !{i64 2037647}
!16316 = !DILocation(line: 0, scope: !16310, inlinedAt: !16314)
!16317 = !DILocation(line: 81, column: 9, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16275, file: !2437, line: 80, column: 22)
!16319 = !DILocation(line: 83, column: 9, scope: !16318)
!16320 = !DILocation(line: 85, column: 12, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16318, file: !2437, line: 84, column: 7)
!16322 = !DILocation(line: 85, column: 21, scope: !16321)
!16323 = !DILocation(line: 85, column: 30, scope: !16321)
!16324 = !DILocation(line: 85, column: 37, scope: !16321)
!16325 = !DILocation(line: 84, column: 7, scope: !16318)
!16326 = !DILocation(line: 99, column: 10, scope: !16318)
!16327 = !DILocation(line: 0, scope: !16301, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 101, column: 9, scope: !16318)
!16329 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16328)
!16331 = !DILocation(line: 0, scope: !16310, inlinedAt: !16330)
!16332 = distinct !{!16332, !16333, !16334}
!16333 = !DILocation(line: 80, column: 2, scope: !16275)
!16334 = !DILocation(line: 102, column: 2, scope: !16275)
!16335 = !DILocalVariable(name: "key", arg: 2, scope: !16336, file: !249, line: 190, type: !16291)
!16336 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16337, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16339)
!16337 = !DISubroutineType(types: !16338)
!16338 = !{null, !16304, !16291}
!16339 = !{!16340, !16335}
!16340 = !DILocalVariable(name: "l", arg: 1, scope: !16336, file: !249, line: 189, type: !16304)
!16341 = !DILocation(line: 0, scope: !16336, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 106, column: 2, scope: !16275)
!16343 = !DILocalVariable(name: "key", arg: 1, scope: !16344, file: !5943, line: 84, type: !32)
!16344 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5943, file: !5943, line: 84, type: !5954, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16345)
!16345 = !{!16343}
!16346 = !DILocation(line: 0, scope: !16344, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 215, column: 2, scope: !16336, inlinedAt: !16342)
!16348 = !DILocation(line: 95, column: 2, scope: !16344, inlinedAt: !16347)
!16349 = !{i64 2038464}
!16350 = !DILocation(line: 107, column: 2, scope: !16275)
!16351 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2437, file: !2437, line: 110, type: !16352, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16354)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{!102, !16208, !252, !16278}
!16354 = !{!16355, !16356, !16357, !16358}
!16355 = !DILocalVariable(name: "h", arg: 1, scope: !16351, file: !2437, line: 110, type: !16208)
!16356 = !DILocalVariable(name: "bytes", arg: 2, scope: !16351, file: !2437, line: 110, type: !252)
!16357 = !DILocalVariable(name: "timeout", arg: 3, scope: !16351, file: !2437, line: 110, type: !16278)
!16358 = !DILocalVariable(name: "ret", scope: !16351, file: !2437, line: 114, type: !102)
!16359 = !DILocation(line: 0, scope: !16351)
!16360 = !DILocation(line: 114, column: 14, scope: !16351)
!16361 = !DILocation(line: 118, column: 2, scope: !16351)
!16362 = distinct !DISubprogram(name: "k_heap_free", scope: !2437, file: !2437, line: 121, type: !16363, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !16365)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{null, !16208, !102}
!16365 = !{!16366, !16367, !16368}
!16366 = !DILocalVariable(name: "h", arg: 1, scope: !16362, file: !2437, line: 121, type: !16208)
!16367 = !DILocalVariable(name: "mem", arg: 2, scope: !16362, file: !2437, line: 121, type: !102)
!16368 = !DILocalVariable(name: "key", scope: !16362, file: !2437, line: 123, type: !16291)
!16369 = !DILocation(line: 0, scope: !16362)
!16370 = !DILocation(line: 0, scope: !16301, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 123, column: 25, scope: !16362)
!16372 = !DILocation(line: 55, column: 2, scope: !16310, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 145, column: 10, scope: !16301, inlinedAt: !16371)
!16374 = !DILocation(line: 0, scope: !16310, inlinedAt: !16373)
!16375 = !DILocation(line: 125, column: 20, scope: !16362)
!16376 = !DILocation(line: 125, column: 2, scope: !16362)
!16377 = !DILocation(line: 128, column: 60, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16362, file: !2437, line: 128, column: 6)
!16379 = !DILocation(line: 128, column: 43, scope: !16378)
!16380 = !DILocation(line: 128, column: 68, scope: !16378)
!16381 = !DILocation(line: 128, column: 6, scope: !16362)
!16382 = !DILocation(line: 123, column: 41, scope: !16362)
!16383 = !DILocation(line: 129, column: 3, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16378, file: !2437, line: 128, column: 74)
!16385 = !DILocation(line: 130, column: 2, scope: !16384)
!16386 = !DILocation(line: 0, scope: !16336, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 131, column: 3, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16378, file: !2437, line: 130, column: 9)
!16389 = !DILocation(line: 0, scope: !16344, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 215, column: 2, scope: !16336, inlinedAt: !16387)
!16391 = !DILocation(line: 95, column: 2, scope: !16344, inlinedAt: !16390)
!16392 = !DILocation(line: 133, column: 1, scope: !16362)
