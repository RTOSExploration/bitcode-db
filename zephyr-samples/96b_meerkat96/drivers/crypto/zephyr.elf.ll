; ModuleID = 'build/96b_meerkat96/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.ctr_params, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.ctr_params, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.4], [13808 x i8], [191 x %struct.anon.4], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.4 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.4] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.4], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536855560 to i8*), void (i8*)* inttoptr (i32 536854491 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536855536 to i8*), void (i8*)* inttoptr (i32 536854331 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536855536 to i8*), void (i8*)* inttoptr (i32 536854331 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [17 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@.str.62 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.64 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.65 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.63 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.67 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.68 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.66 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !841
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !861
@.str.73 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.74 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.75 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.76 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.108 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.104 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.105 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.106 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.98 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.99 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.100 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.101 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.102 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.97 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.90 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.91 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.93 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.94 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.95 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.96 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.84 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.85 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.86 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.87 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.88 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.89 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.82 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.81 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.79 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.80 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !873
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !883
@.str.125 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !980
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1167
@.str.1.127 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1021
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1019
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.127, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !992
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1008
@.str.2.128 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.129 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.130 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.131 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.132 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.133 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1149
@.str.8.134 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.143 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.142 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.140 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.141 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.138 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.139 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.135 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.136 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.137 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !1177
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1172
@.str.144 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.ctr_params { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1313
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1344
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1311
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1299
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.144, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1287
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1289
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1346
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1358
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1175
@.str.148 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1361
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1619
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1617
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1611
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.148, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1602
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1604
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1621
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1623
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1628
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1631
@overflow_cyc = internal global i32 0, align 4, !dbg !1642
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1899
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1901
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1897
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1866
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1903
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.2 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1933
@.str.181 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.186 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.187 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.192 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.193 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.194 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.195 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.190 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.189 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.192, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.195, i32 0, i32 0)], align 4
@.str.197 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1939
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2167
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2153
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2162
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2174
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2179
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.206 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.217, i32 0, i32 0)], align 4, !dbg !2207
@.str.211 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.212 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.213 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.215 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.216 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.210 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.217 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2315
@.str.8.209 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2329
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2431
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2434
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2436
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2172
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2164
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2438
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2474
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2026
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2472
@.str.269 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3133 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #22, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #22, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #22, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #22, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #22, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #22, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #22, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #22, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #22, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #22, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #22, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #22, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #22, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #22, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #22, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #22, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #22, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #22, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #22, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #22, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #22, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #22, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #22, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #22, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #22, !dbg !3185, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #22, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #22, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #22, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #22, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #22, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #22, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #22, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #22, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #22, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #22, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #22, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #22, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #22, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #22, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #22, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #22, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #22, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #22, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #22, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #22, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #22, !dbg !3231, !srcloc !3232
  ret void, !dbg !3233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3238, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !3239, metadata !DIExpression()), !dbg !3240
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #23, !dbg !3241
  call void @llvm.dbg.value(metadata i32 %2, metadata !3239, metadata !DIExpression()), !dbg !3240
  %3 = and i32 %2, 2, !dbg !3242
  %4 = icmp eq i32 %3, 0, !dbg !3244
  br i1 %4, label %5, label %8, !dbg !3245

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3246
  %7 = zext i8 %6 to i32, !dbg !3246
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #24, !dbg !3246
  br label %21, !dbg !3252

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3253
  %10 = icmp eq i32 %9, 0, !dbg !3255
  br i1 %10, label %11, label %14, !dbg !3256

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3257
  %13 = zext i8 %12 to i32, !dbg !3257
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #24, !dbg !3257
  br label %21, !dbg !3263

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3264
  %16 = icmp eq i32 %15, 0, !dbg !3266
  br i1 %16, label %17, label %20, !dbg !3267

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3268
  %19 = zext i8 %18 to i32, !dbg !3268
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #24, !dbg !3268
  br label %21, !dbg !3274

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3275
  br label %21, !dbg !3276

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3240
  ret i32 %22, !dbg !3277
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3280, metadata !DIExpression()), !dbg !3283
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3284
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3284
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3284
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3281, metadata !DIExpression()), !dbg !3283
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3285
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3285
  %7 = tail call i32 %6(%struct.device* noundef %0) #24, !dbg !3286
  call void @llvm.dbg.value(metadata i32 %7, metadata !3282, metadata !DIExpression()), !dbg !3283
  ret i32 %7, !dbg !3287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3293, metadata !DIExpression()), !dbg !3294
  %2 = add i32 %0, -1, !dbg !3295
  %3 = icmp ult i32 %2, 3, !dbg !3295
  %4 = trunc i32 %2 to i24, !dbg !3295
  %5 = shl i24 %4, 3, !dbg !3295
  %6 = lshr i24 4806469, %5, !dbg !3295
  %7 = trunc i24 %6 to i8, !dbg !3295
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3295
  ret i8 %8, !dbg !3296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3297 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3299, metadata !DIExpression()), !dbg !3310
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22, !dbg !3311
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3300, metadata !DIExpression()), !dbg !3312
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3312
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3313
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #22, !dbg !3313
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3301, metadata !DIExpression()), !dbg !3314
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3314
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3315
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22, !dbg !3315
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3302, metadata !DIExpression()), !dbg !3316
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3316
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3317
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #22, !dbg !3317
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3304, metadata !DIExpression()), !dbg !3318
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3318
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3319
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #22, !dbg !3319
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3305, metadata !DIExpression()), !dbg !3320
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3320
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3321
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #22, !dbg !3321
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3306, metadata !DIExpression()), !dbg !3322
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3322
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3323
  store i8* %10, i8** %16, align 4, !dbg !3323
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3324
  store i16 16, i16* %17, align 4, !dbg !3324
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3324
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3325
  %20 = trunc i32 %19 to i16, !dbg !3325
  store i16 %20, i16* %18, align 2, !dbg !3324
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3326
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #22, !dbg !3326
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3307, metadata !DIExpression()), !dbg !3327
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3328
  store i8* %11, i8** %22, align 4, !dbg !3328
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3328
  store i32 16, i32* %23, align 4, !dbg !3328
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3328
  store i8* %13, i8** %24, align 4, !dbg !3328
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3328
  store i32 16, i32* %25, align 4, !dbg !3328
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3328
  store i32 0, i32* %26, align 4, !dbg !3328
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3328
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3328
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3329
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #22, !dbg !3329
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3308, metadata !DIExpression()), !dbg !3330
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3331
  store i8* %13, i8** %29, align 4, !dbg !3331
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3331
  store i32 16, i32* %30, align 4, !dbg !3331
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3331
  store i8* %14, i8** %31, align 4, !dbg !3331
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3331
  store i32 16, i32* %32, align 4, !dbg !3331
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3331
  store i32 0, i32* %33, align 4, !dbg !3331
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3331
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3331
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #23, !dbg !3332
  %36 = icmp eq i32 %35, 0, !dbg !3332
  br i1 %36, label %37, label %74, !dbg !3334

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #23, !dbg !3335
  %39 = icmp eq i32 %38, 0, !dbg !3335
  br i1 %39, label %43, label %40, !dbg !3337

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3338
  %42 = zext i8 %41 to i32, !dbg !3338
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #24, !dbg !3338
  br label %73, !dbg !3344

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3345
  %45 = zext i8 %44 to i32, !dbg !3345
  %46 = load i32, i32* %26, align 4, !dbg !3345
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #24, !dbg !3345
  %47 = load i8*, i8** %24, align 4, !dbg !3350
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #24, !dbg !3352
  %49 = icmp eq i32 %48, 0, !dbg !3352
  br i1 %49, label %54, label %50, !dbg !3353

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3354
  %52 = zext i8 %51 to i32, !dbg !3354
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #24, !dbg !3354
  %53 = load i8*, i8** %24, align 4, !dbg !3360
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #23, !dbg !3361
  br label %73, !dbg !3362

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #24, !dbg !3363
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #23, !dbg !3368
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #23, !dbg !3369
  %56 = icmp eq i32 %55, 0, !dbg !3369
  br i1 %56, label %57, label %74, !dbg !3371

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #23, !dbg !3372
  %59 = icmp eq i32 %58, 0, !dbg !3372
  br i1 %59, label %63, label %60, !dbg !3374

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3375
  %62 = zext i8 %61 to i32, !dbg !3375
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #24, !dbg !3375
  br label %73, !dbg !3381

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3382
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #24, !dbg !3382
  %65 = load i8*, i8** %31, align 4, !dbg !3387
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #24, !dbg !3389
  %67 = icmp eq i32 %66, 0, !dbg !3389
  br i1 %67, label %72, label %68, !dbg !3390

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3391
  %70 = zext i8 %69 to i32, !dbg !3391
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #24, !dbg !3391
  %71 = load i8*, i8** %31, align 4, !dbg !3397
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #23, !dbg !3398
  br label %73, !dbg !3399

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #24, !dbg !3400
  br label %73, !dbg !3405

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3309), !dbg !3406
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #23, !dbg !3407
  br label %74, !dbg !3408

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #22, !dbg !3408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22, !dbg !3408
  ret void, !dbg !3408
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3411, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3412, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 1, metadata !3413, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 %2, metadata !3414, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 %3, metadata !3415, metadata !DIExpression()), !dbg !3418
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3419
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3419
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3419
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3416, metadata !DIExpression()), !dbg !3418
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3420
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3421
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3422
  store i32 %2, i32* %9, align 4, !dbg !3423
  call void @llvm.dbg.value(metadata i16 undef, metadata !3417, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i16 undef, metadata !3417, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i16 undef, metadata !3417, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3418
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3424
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3424
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #24, !dbg !3425
  ret i32 %12, !dbg !3426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3427 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3429, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3430, metadata !DIExpression()), !dbg !3431
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3432
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3433
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3434
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3434
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #24, !dbg !3435
  ret i32 %6, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3441, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %1, metadata !3442, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %2, metadata !3443, metadata !DIExpression()), !dbg !3446
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #24, !dbg !3447
  call void @llvm.dbg.value(metadata i32 0, metadata !3444, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 1, metadata !3445, metadata !DIExpression()), !dbg !3446
  %4 = icmp eq i32 %2, 0, !dbg !3448
  br i1 %4, label %5, label %6, !dbg !3451

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #24, !dbg !3452
  call void @llvm.dbg.value(metadata i32 0, metadata !3444, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 1, metadata !3445, metadata !DIExpression()), !dbg !3446
  br label %33, !dbg !3453

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3445, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %8, metadata !3444, metadata !DIExpression()), !dbg !3446
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3455
  %10 = load i8, i8* %9, align 1, !dbg !3455
  %11 = zext i8 %10 to i32, !dbg !3455
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #24, !dbg !3457
  %12 = icmp eq i32 %7, 10, !dbg !3458
  br i1 %12, label %13, label %14, !dbg !3460

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #24, !dbg !3461
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()), !dbg !3446
  br label %14, !dbg !3463

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3464
  call void @llvm.dbg.value(metadata i32 %15, metadata !3445, metadata !DIExpression()), !dbg !3446
  %16 = add nuw i32 %8, 1, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %16, metadata !3444, metadata !DIExpression()), !dbg !3446
  %17 = add nsw i32 %15, 1, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %17, metadata !3445, metadata !DIExpression()), !dbg !3446
  %18 = icmp eq i32 %16, %2, !dbg !3448
  br i1 %18, label %19, label %6, !dbg !3451, !llvm.loop !3467

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #24, !dbg !3452
  call void @llvm.dbg.value(metadata i32 0, metadata !3444, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 1, metadata !3445, metadata !DIExpression()), !dbg !3446
  br i1 %4, label %33, label %20, !dbg !3453

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3445, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %22, metadata !3444, metadata !DIExpression()), !dbg !3446
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3469
  %24 = load i8, i8* %23, align 1, !dbg !3469
  %25 = zext i8 %24 to i32, !dbg !3469
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #24, !dbg !3472
  %26 = icmp eq i32 %21, 10, !dbg !3473
  br i1 %26, label %27, label %28, !dbg !3475

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #24, !dbg !3476
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()), !dbg !3446
  br label %28, !dbg !3478

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3479
  call void @llvm.dbg.value(metadata i32 %29, metadata !3445, metadata !DIExpression()), !dbg !3446
  %30 = add nuw i32 %22, 1, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %30, metadata !3444, metadata !DIExpression()), !dbg !3446
  %31 = add nsw i32 %29, 1, !dbg !3481
  call void @llvm.dbg.value(metadata i32 %31, metadata !3445, metadata !DIExpression()), !dbg !3446
  %32 = icmp eq i32 %30, %2, !dbg !3482
  br i1 %32, label %33, label %20, !dbg !3453, !llvm.loop !3483

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #24, !dbg !3485
  ret void, !dbg !3486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3489, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3490, metadata !DIExpression()), !dbg !3492
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3493
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3493
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3493
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3491, metadata !DIExpression()), !dbg !3492
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3494
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3494
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #24, !dbg !3495
  ret void, !dbg !3496
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3497
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3498
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #22, !dbg !3498
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3499
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3499
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3500
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #22, !dbg !3500
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3501
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3501
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3502
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #22, !dbg !3502
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3503
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3503
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3504
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3504
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3505
  store i16 16, i16* %11, align 4, !dbg !3505
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3505
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3506
  %14 = trunc i32 %13 to i16, !dbg !3506
  store i16 %14, i16* %12, align 2, !dbg !3505
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3507
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #22, !dbg !3507
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3508
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3509
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3509
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3509
  store i32 64, i32* %17, align 4, !dbg !3509
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3509
  store i8* %7, i8** %18, align 4, !dbg !3509
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3509
  store i32 80, i32* %19, align 4, !dbg !3509
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3509
  store i32 0, i32* %20, align 4, !dbg !3509
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3509
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3509
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3510
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #22, !dbg !3510
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3511
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3512
  store i8* %7, i8** %23, align 4, !dbg !3512
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3512
  store i32 80, i32* %24, align 4, !dbg !3512
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3512
  store i8* %8, i8** %25, align 4, !dbg !3512
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3512
  store i32 64, i32* %26, align 4, !dbg !3512
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3512
  store i32 0, i32* %27, align 4, !dbg !3512
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3512
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3512
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #23, !dbg !3513
  %30 = icmp eq i32 %29, 0, !dbg !3513
  br i1 %30, label %31, label %68, !dbg !3515

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #23, !dbg !3516
  %33 = icmp eq i32 %32, 0, !dbg !3516
  br i1 %33, label %37, label %34, !dbg !3518

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3519
  %36 = zext i8 %35 to i32, !dbg !3519
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #24, !dbg !3519
  br label %67, !dbg !3525

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3526
  %39 = zext i8 %38 to i32, !dbg !3526
  %40 = load i32, i32* %20, align 4, !dbg !3526
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #24, !dbg !3526
  %41 = load i8*, i8** %18, align 4, !dbg !3531
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #24, !dbg !3533
  %43 = icmp eq i32 %42, 0, !dbg !3533
  br i1 %43, label %48, label %44, !dbg !3534

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3535
  %46 = zext i8 %45 to i32, !dbg !3535
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #24, !dbg !3535
  %47 = load i8*, i8** %18, align 4, !dbg !3541
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #23, !dbg !3542
  br label %67, !dbg !3543

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #24, !dbg !3544
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3549
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #23, !dbg !3550
  %50 = icmp eq i32 %49, 0, !dbg !3550
  br i1 %50, label %51, label %68, !dbg !3552

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #23, !dbg !3553
  %53 = icmp eq i32 %52, 0, !dbg !3553
  br i1 %53, label %57, label %54, !dbg !3555

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3556
  %56 = zext i8 %55 to i32, !dbg !3556
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #24, !dbg !3556
  br label %67, !dbg !3562

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3563
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #24, !dbg !3563
  %59 = load i8*, i8** %25, align 4, !dbg !3568
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #24, !dbg !3570
  %61 = icmp eq i32 %60, 0, !dbg !3570
  br i1 %61, label %66, label %62, !dbg !3571

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3572
  %64 = zext i8 %63 to i32, !dbg !3572
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #24, !dbg !3572
  %65 = load i8*, i8** %25, align 4, !dbg !3578
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #23, !dbg !3579
  br label %67, !dbg !3580

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #24, !dbg !3581
  br label %67, !dbg !3586

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3587
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3588
  br label %68, !dbg !3589

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #22, !dbg !3589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #22, !dbg !3589
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #22, !dbg !3589
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #22, !dbg !3589
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #22, !dbg !3589
  ret void, !dbg !3589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3590 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3592, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3593, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i8* %2, metadata !3594, metadata !DIExpression()), !dbg !3595
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3596
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3597
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3598
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3598
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3598
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #24, !dbg !3599
  ret i32 %8, !dbg !3600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3601 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3603, metadata !DIExpression()), !dbg !3611
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3612
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #22, !dbg !3612
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3604, metadata !DIExpression()), !dbg !3613
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3613
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3614
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #22, !dbg !3614
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3605, metadata !DIExpression()), !dbg !3615
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3615
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3616
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3616
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3606, metadata !DIExpression()), !dbg !3617
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3618
  store i64 0, i64* %11, align 8, !dbg !3618
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3619
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3619
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3618
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3618
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3618
  store i8* null, i8** %14, align 8, !dbg !3618
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3618
  store i8* null, i8** %15, align 4, !dbg !3618
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3620
  store i32 32, i32* %16, align 8, !dbg !3620
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3618
  store i16 16, i16* %17, align 4, !dbg !3618
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3618
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3621
  %20 = trunc i32 %19 to i16, !dbg !3621
  store i16 %20, i16* %18, align 2, !dbg !3618
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #22, !dbg !3622
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3607, metadata !DIExpression()), !dbg !3623
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3624
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3624
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3624
  store i32 64, i32* %23, align 4, !dbg !3624
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3624
  store i8* %8, i8** %24, align 4, !dbg !3624
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3624
  store i32 64, i32* %25, align 4, !dbg !3624
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3624
  store i32 0, i32* %26, align 4, !dbg !3624
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3624
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3624
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3625
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #22, !dbg !3625
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3608, metadata !DIExpression()), !dbg !3626
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3627
  store i8* %8, i8** %29, align 4, !dbg !3627
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3627
  store i32 64, i32* %30, align 4, !dbg !3627
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3627
  store i8* %9, i8** %31, align 4, !dbg !3627
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3627
  store i32 64, i32* %32, align 4, !dbg !3627
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3627
  store i32 0, i32* %33, align 4, !dbg !3627
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3627
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3627
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3628
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #22, !dbg !3628
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3609, metadata !DIExpression()), !dbg !3629
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3629
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #23, !dbg !3630
  %37 = icmp eq i32 %36, 0, !dbg !3630
  br i1 %37, label %38, label %75, !dbg !3632

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #23, !dbg !3633
  %40 = icmp eq i32 %39, 0, !dbg !3633
  br i1 %40, label %44, label %41, !dbg !3635

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3636
  %43 = zext i8 %42 to i32, !dbg !3636
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #24, !dbg !3636
  br label %74, !dbg !3642

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3643
  %46 = zext i8 %45 to i32, !dbg !3643
  %47 = load i32, i32* %26, align 4, !dbg !3643
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #24, !dbg !3643
  %48 = load i8*, i8** %24, align 4, !dbg !3648
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #24, !dbg !3650
  %50 = icmp eq i32 %49, 0, !dbg !3650
  br i1 %50, label %55, label %51, !dbg !3651

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3652
  %53 = zext i8 %52 to i32, !dbg !3652
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #24, !dbg !3652
  %54 = load i8*, i8** %24, align 4, !dbg !3658
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #23, !dbg !3659
  br label %74, !dbg !3660

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #24, !dbg !3661
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3666
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #23, !dbg !3667
  %57 = icmp eq i32 %56, 0, !dbg !3667
  br i1 %57, label %58, label %75, !dbg !3669

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #23, !dbg !3670
  %60 = icmp eq i32 %59, 0, !dbg !3670
  br i1 %60, label %64, label %61, !dbg !3672

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3673
  %63 = zext i8 %62 to i32, !dbg !3673
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #24, !dbg !3673
  br label %74, !dbg !3679

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3680
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #24, !dbg !3680
  %66 = load i8*, i8** %31, align 4, !dbg !3685
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #24, !dbg !3687
  %68 = icmp eq i32 %67, 0, !dbg !3687
  br i1 %68, label %73, label %69, !dbg !3688

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3689
  %71 = zext i8 %70 to i32, !dbg !3689
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #24, !dbg !3689
  %72 = load i8*, i8** %31, align 4, !dbg !3695
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #23, !dbg !3696
  br label %74, !dbg !3697

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #24, !dbg !3698
  br label %74, !dbg !3703

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3610), !dbg !3704
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3705
  br label %75, !dbg !3706

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #22, !dbg !3706
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #22, !dbg !3706
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #22, !dbg !3706
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3706
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #22, !dbg !3706
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #22, !dbg !3706
  ret void, !dbg !3706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3707 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3709, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3710, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.value(metadata i8* %2, metadata !3711, metadata !DIExpression()), !dbg !3712
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3713
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3714
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3715
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3715
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3715
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #24, !dbg !3716
  ret i32 %8, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3718 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3720, metadata !DIExpression()), !dbg !3732
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3733
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #22, !dbg !3733
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3721, metadata !DIExpression()), !dbg !3734
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3735
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #22, !dbg !3735
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3725, metadata !DIExpression()), !dbg !3736
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3737
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3737
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3727, metadata !DIExpression()), !dbg !3738
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3739
  store i64 0, i64* %11, align 8, !dbg !3739
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3740
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3740
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3739
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3739
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3739
  store i8* null, i8** %14, align 8, !dbg !3739
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3739
  store i8* null, i8** %15, align 4, !dbg !3739
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3739
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3741
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3742
  store i16 8, i16* %18, align 8, !dbg !3742
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3742
  store i16 13, i16* %19, align 2, !dbg !3742
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3739
  store i16 16, i16* %20, align 4, !dbg !3739
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3739
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3743
  %23 = trunc i32 %22 to i16, !dbg !3743
  store i16 %23, i16* %21, align 2, !dbg !3739
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #22, !dbg !3744
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3728, metadata !DIExpression()), !dbg !3745
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3746
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3746
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3746
  store i32 23, i32* %26, align 4, !dbg !3746
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3746
  store i8* %8, i8** %27, align 4, !dbg !3746
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3746
  store i32 50, i32* %28, align 4, !dbg !3746
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3746
  store i32 0, i32* %29, align 4, !dbg !3746
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3746
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3746
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3747
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #22, !dbg !3747
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3729, metadata !DIExpression()), !dbg !3748
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3749
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3749
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3749
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3749
  store i32 8, i32* %34, align 4, !dbg !3749
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3749
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3750
  store i8* %36, i8** %35, align 4, !dbg !3749
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3751
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #22, !dbg !3751
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3730, metadata !DIExpression()), !dbg !3752
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3753
  store i8* %8, i8** %38, align 4, !dbg !3753
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3753
  store i32 23, i32* %39, align 4, !dbg !3753
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3753
  store i8* %9, i8** %40, align 4, !dbg !3753
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3753
  store i32 25, i32* %41, align 4, !dbg !3753
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3753
  store i32 0, i32* %42, align 4, !dbg !3753
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3753
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3753
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #23, !dbg !3754
  %45 = icmp eq i32 %44, 0, !dbg !3754
  br i1 %45, label %46, label %83, !dbg !3756

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3757
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #23, !dbg !3758
  %48 = icmp eq i32 %47, 0, !dbg !3758
  br i1 %48, label %52, label %49, !dbg !3760

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3761
  %51 = zext i8 %50 to i32, !dbg !3761
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #24, !dbg !3761
  br label %82, !dbg !3767

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3768
  %54 = zext i8 %53 to i32, !dbg !3768
  %55 = load i32, i32* %29, align 4, !dbg !3768
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #24, !dbg !3768
  %56 = load i8*, i8** %27, align 4, !dbg !3773
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #24, !dbg !3775
  %58 = icmp eq i32 %57, 0, !dbg !3775
  br i1 %58, label %63, label %59, !dbg !3776

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3777
  %61 = zext i8 %60 to i32, !dbg !3777
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #24, !dbg !3777
  %62 = load i8*, i8** %27, align 4, !dbg !3783
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #23, !dbg !3784
  br label %82, !dbg !3785

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #24, !dbg !3786
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3791
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #23, !dbg !3792
  %65 = icmp eq i32 %64, 0, !dbg !3792
  br i1 %65, label %66, label %83, !dbg !3794

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3795
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #23, !dbg !3796
  %68 = icmp eq i32 %67, 0, !dbg !3796
  br i1 %68, label %72, label %69, !dbg !3798

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3799
  %71 = zext i8 %70 to i32, !dbg !3799
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #24, !dbg !3799
  br label %82, !dbg !3805

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3806
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #24, !dbg !3806
  %74 = load i8*, i8** %40, align 4, !dbg !3811
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #24, !dbg !3813
  %76 = icmp eq i32 %75, 0, !dbg !3813
  br i1 %76, label %81, label %77, !dbg !3814

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3815
  %79 = zext i8 %78 to i32, !dbg !3815
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #24, !dbg !3815
  %80 = load i8*, i8** %40, align 4, !dbg !3821
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #23, !dbg !3822
  br label %82, !dbg !3823

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #24, !dbg !3824
  br label %82, !dbg !3829

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3731), !dbg !3830
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3831
  br label %83, !dbg !3832

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #22, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #22, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #22, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #22, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #22, !dbg !3832
  ret void, !dbg !3832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3835, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !3836, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !3837, metadata !DIExpression()), !dbg !3838
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !3839
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !3839
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !3840
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !3841
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3842
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !3842
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !3842
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #24, !dbg !3843
  ret i32 %9, !dbg !3844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !3845 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3847, metadata !DIExpression()), !dbg !3856
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !3857
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #22, !dbg !3857
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !3848, metadata !DIExpression()), !dbg !3858
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !3858
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !3859
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #22, !dbg !3859
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !3849, metadata !DIExpression()), !dbg !3860
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !3860
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3861
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3861
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3851, metadata !DIExpression()), !dbg !3862
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3863
  store i64 0, i64* %11, align 8, !dbg !3863
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3864
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3864
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3863
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3863
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3863
  store i8* null, i8** %14, align 8, !dbg !3863
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3863
  store i8* null, i8** %15, align 4, !dbg !3863
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3863
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3865
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3866
  store i16 16, i16* %18, align 8, !dbg !3866
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3866
  store i16 12, i16* %19, align 2, !dbg !3866
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3863
  store i16 16, i16* %20, align 4, !dbg !3863
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3863
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3867
  %23 = trunc i32 %22 to i16, !dbg !3867
  store i16 %23, i16* %21, align 2, !dbg !3863
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3868
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #22, !dbg !3868
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3852, metadata !DIExpression()), !dbg !3869
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3870
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3870
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3870
  store i32 42, i32* %26, align 4, !dbg !3870
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3870
  store i8* %8, i8** %27, align 4, !dbg !3870
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3870
  store i32 60, i32* %28, align 4, !dbg !3870
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3870
  store i32 0, i32* %29, align 4, !dbg !3870
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3870
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3870
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3871
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #22, !dbg !3871
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3853, metadata !DIExpression()), !dbg !3872
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3873
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3873
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3873
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3873
  store i32 20, i32* %34, align 4, !dbg !3873
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3873
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !3874
  store i8* %36, i8** %35, align 4, !dbg !3873
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3875
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #22, !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3854, metadata !DIExpression()), !dbg !3876
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3877
  store i8* %8, i8** %38, align 4, !dbg !3877
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3877
  store i32 42, i32* %39, align 4, !dbg !3877
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3877
  store i8* %9, i8** %40, align 4, !dbg !3877
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3877
  store i32 44, i32* %41, align 4, !dbg !3877
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3877
  store i32 0, i32* %42, align 4, !dbg !3877
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3877
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3877
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #23, !dbg !3878
  %45 = icmp eq i32 %44, 0, !dbg !3878
  br i1 %45, label %46, label %83, !dbg !3880

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3881
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #23, !dbg !3882
  %48 = icmp eq i32 %47, 0, !dbg !3882
  br i1 %48, label %52, label %49, !dbg !3884

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3885
  %51 = zext i8 %50 to i32, !dbg !3885
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #24, !dbg !3885
  br label %82, !dbg !3891

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !3892
  %54 = zext i8 %53 to i32, !dbg !3892
  %55 = load i32, i32* %29, align 4, !dbg !3892
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #24, !dbg !3892
  %56 = load i8*, i8** %27, align 4, !dbg !3897
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #24, !dbg !3899
  %58 = icmp eq i32 %57, 0, !dbg !3899
  br i1 %58, label %63, label %59, !dbg !3900

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3901
  %61 = zext i8 %60 to i32, !dbg !3901
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #24, !dbg !3901
  %62 = load i8*, i8** %27, align 4, !dbg !3907
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #23, !dbg !3908
  br label %82, !dbg !3909

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #24, !dbg !3910
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3915
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #23, !dbg !3916
  %65 = icmp eq i32 %64, 0, !dbg !3916
  br i1 %65, label %66, label %83, !dbg !3918

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3919
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #23, !dbg !3920
  %68 = icmp eq i32 %67, 0, !dbg !3920
  br i1 %68, label %72, label %69, !dbg !3922

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3923
  %71 = zext i8 %70 to i32, !dbg !3923
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #24, !dbg !3923
  br label %82, !dbg !3929

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3930
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #24, !dbg !3930
  %74 = load i8*, i8** %40, align 4, !dbg !3935
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #24, !dbg !3937
  %76 = icmp eq i32 %75, 0, !dbg !3937
  br i1 %76, label %81, label %77, !dbg !3938

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3939
  %79 = zext i8 %78 to i32, !dbg !3939
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #24, !dbg !3939
  %80 = load i8*, i8** %40, align 4, !dbg !3945
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #23, !dbg !3946
  br label %82, !dbg !3947

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #24, !dbg !3948
  br label %82, !dbg !3953

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3855), !dbg !3954
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #23, !dbg !3955
  br label %83, !dbg !3956

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #22, !dbg !3956
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #22, !dbg !3956
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #22, !dbg !3956
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !3956
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #22, !dbg !3956
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #22, !dbg !3956
  ret void, !dbg !3956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !3957 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3959, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !3960, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !3961, metadata !DIExpression()), !dbg !3962
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !3963
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !3963
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !3964
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !3965
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3966
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !3966
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !3966
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #24, !dbg !3967
  ret i32 %9, !dbg !3968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3969 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #23, !dbg !3981
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !3971, metadata !DIExpression()), !dbg !3982
  %2 = icmp eq %struct.device* %1, null, !dbg !3983
  br i1 %2, label %3, label %6, !dbg !3985

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3986
  %5 = zext i8 %4 to i32, !dbg !3986
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #24, !dbg !3986
  br label %23, !dbg !3992

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !3972, metadata !DIExpression()), !dbg !3993
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #23, !dbg !3994
  %8 = icmp eq i32 %7, 0, !dbg !3994
  br i1 %8, label %12, label %9, !dbg !3996

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #23, !dbg !3997
  %11 = zext i8 %10 to i32, !dbg !3997
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #24, !dbg !3997
  br label %23, !dbg !4003

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #23, !dbg !4004
  %14 = zext i8 %13 to i32, !dbg !4004
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #24, !dbg !4004
  call void @llvm.dbg.value(metadata i32 0, metadata !3980, metadata !DIExpression()), !dbg !3982
  br label %15, !dbg !4009

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3980, metadata !DIExpression()), !dbg !3982
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4011
  %18 = load i8*, i8** %17, align 4, !dbg !4013
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #24, !dbg !4013
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4019
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4019
  tail call void %20(%struct.device* noundef nonnull %1) #24, !dbg !4020
  %21 = add nuw nsw i32 %16, 1, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %21, metadata !3980, metadata !DIExpression()), !dbg !3982
  %22 = icmp eq i32 %21, 5, !dbg !4009
  br i1 %22, label %23, label %15, !dbg !4009, !llvm.loop !4022

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4025 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4030, metadata !DIExpression()), !dbg !4031
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !4032, !srcloc !4034
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #24, !dbg !4035
  ret %struct.device* %1, !dbg !4036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4037 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %0, metadata !4048, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %1, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %2, metadata !4050, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %3, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %0, metadata !4053, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %0, metadata !4054, metadata !DIExpression()), !dbg !4114
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4115
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22, !dbg !4115
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4057, metadata !DIExpression()), !dbg !4116
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #22, !dbg !4117
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4058, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 0, metadata !4059, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 0, metadata !4060, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 0, metadata !4061, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 -1, metadata !4062, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 0, metadata !4065, metadata !DIExpression()), !dbg !4114
  %12 = and i32 %2, 4, !dbg !4119
  %13 = icmp eq i32 %12, 0, !dbg !4120
  call void @llvm.dbg.value(metadata i1 %13, metadata !4066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4114
  %14 = lshr i32 %2, 3, !dbg !4121
  %15 = and i32 %14, 7, !dbg !4121
  %16 = add nuw nsw i32 %15, 1, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %16, metadata !4067, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 0, metadata !4068, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %0, metadata !4069, metadata !DIExpression()), !dbg !4114
  %17 = ptrtoint i8* %0 to i32, !dbg !4123
  %18 = and i32 %17, 3, !dbg !4125
  %19 = icmp eq i32 %18, 0, !dbg !4125
  br i1 %19, label %20, label %316, !dbg !4126

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4127
  call void @llvm.dbg.value(metadata i8* %21, metadata !4054, metadata !DIExpression()), !dbg !4114
  %22 = icmp eq i8* %0, null, !dbg !4128
  %23 = and i32 %1, 7, !dbg !4130
  %24 = sub nuw nsw i32 8, %23, !dbg !4130
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4130
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4130
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %27, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %26, metadata !4054, metadata !DIExpression()), !dbg !4114
  br i1 %22, label %33, label %28, !dbg !4131

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4133
  %30 = sub i32 4, %17, !dbg !4133
  %31 = add i32 %30, %29, !dbg !4134
  %32 = icmp ugt i32 %31, %27, !dbg !4135
  br i1 %32, label %316, label %33, !dbg !4136

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %34, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %3, metadata !4064, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 4, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 4, metadata !4055, metadata !DIExpression()), !dbg !4114
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4138

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %42, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %43, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %44, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %45, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %72, metadata !4062, metadata !DIExpression()), !dbg !4114
  br i1 %46, label %73, label %47, !dbg !4139

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4140
  %49 = zext i1 %48 to i32, !dbg !4144
  %50 = add nsw i32 %72, %49, !dbg !4144
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4144
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %52, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %51, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %50, metadata !4062, metadata !DIExpression()), !dbg !4114
  br label %53, !dbg !4145

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %40, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %58, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %57, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %56, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %54, metadata !4062, metadata !DIExpression()), !dbg !4114
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %60, metadata !4051, metadata !DIExpression()), !dbg !4114
  %61 = load i8, i8* %60, align 1, !dbg !4148
  %62 = icmp eq i8 %61, 0, !dbg !4149
  br i1 %62, label %223, label %63, !dbg !4150, !llvm.loop !4151

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4139

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4154

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4065, metadata !DIExpression()), !dbg !4114
  %75 = add nsw i32 %72, -1, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %75, metadata !4062, metadata !DIExpression()), !dbg !4114
  br label %53, !dbg !4156

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4157

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 4, metadata !4055, metadata !DIExpression()), !dbg !4114
  br label %53, !dbg !4158

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 4, metadata !4055, metadata !DIExpression()), !dbg !4114
  br label %53, !dbg !4159

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4160
  %81 = icmp eq i8 %80, 108, !dbg !4162
  br i1 %81, label %82, label %109, !dbg !4163

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4164
  %84 = load i8, i8* %83, align 1, !dbg !4164
  %85 = icmp eq i8 %84, 108, !dbg !4167
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4168
  %89 = add i32 %88, 7, !dbg !4168
  %90 = and i32 %89, -8, !dbg !4168
  %91 = inttoptr i32 %90 to i8*, !dbg !4168
  %92 = inttoptr i32 %90 to double*, !dbg !4168
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4168
  %94 = load double, double* %92, align 8, !dbg !4168
  call void @llvm.dbg.value(metadata i8* %93, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 8, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 8, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata double %94, metadata !4082, metadata !DIExpression()), !dbg !4170
  %95 = ptrtoint i8* %43 to i32, !dbg !4171
  %96 = add i32 %95, 7, !dbg !4171
  %97 = and i32 %96, -8, !dbg !4171
  %98 = inttoptr i32 %97 to i8*, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %98, metadata !4054, metadata !DIExpression()), !dbg !4114
  br i1 %22, label %104, label %99, !dbg !4173

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4174
  %101 = icmp ugt i32 %100, %194, !dbg !4178
  br i1 %101, label %316, label %102, !dbg !4179

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4180
  store double %94, double* %103, align 8, !dbg !4180
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4183
  call void @llvm.dbg.value(metadata i8* %105, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4065, metadata !DIExpression()), !dbg !4114
  br label %53, !dbg !4184

107:                                              ; preds = %73, %73
  br label %109, !dbg !4185

108:                                              ; preds = %73
  br label %109, !dbg !4185

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4114
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4114
  call void @llvm.dbg.value(metadata i32 %113, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %112, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  %114 = ptrtoint i8* %43 to i32, !dbg !4185
  %115 = add i32 %114, -1, !dbg !4185
  %116 = add i32 %115, %112, !dbg !4185
  %117 = sub i32 0, %112, !dbg !4185
  %118 = and i32 %116, %117, !dbg !4185
  %119 = inttoptr i32 %118 to i8*, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %119, metadata !4054, metadata !DIExpression()), !dbg !4114
  br i1 %22, label %124, label %120, !dbg !4187

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4189
  %122 = add i32 %121, %118, !dbg !4190
  %123 = icmp ugt i32 %122, %194, !dbg !4191
  br i1 %123, label %316, label %124, !dbg !4192

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4193

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4186
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %127, metadata !4052, metadata !DIExpression()), !dbg !4114
  %128 = bitcast i8* %41 to i8**, !dbg !4194
  %129 = load i8*, i8** %128, align 4, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %129, metadata !4064, metadata !DIExpression()), !dbg !4114
  br label %130, !dbg !4195

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4196
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4197
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4114
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4198
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4114
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4199
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4114
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4114
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4114
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4114
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4200
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %142, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %141, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %140, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %139, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %138, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %137, metadata !4059, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %136, metadata !4067, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %135, metadata !4060, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %133, metadata !4064, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %132, metadata !4062, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %131, metadata !4061, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.label(metadata !4113), !dbg !4202
  br i1 %22, label %146, label %144, !dbg !4203

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4204
  store i8* %133, i8** %145, align 4, !dbg !4207
  br label %146, !dbg !4208

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %147, metadata !4067, metadata !DIExpression()), !dbg !4114
  %148 = icmp sgt i32 %136, 0, !dbg !4210
  br i1 %148, label %152, label %149, !dbg !4211

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #23, !dbg !4212
  %151 = zext i1 %150 to i32, !dbg !4212
  br label %152, !dbg !4211

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4211
  %154 = icmp eq i32 %153, 0, !dbg !4211
  call void @llvm.dbg.value(metadata i1 %154, metadata !4091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4213
  call void @llvm.dbg.value(metadata i1 %36, metadata !4094, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4213
  %155 = or i1 %36, %154, !dbg !4214
  br i1 %155, label %156, label %190, !dbg !4214

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4215
  %158 = sub i32 %157, %17, !dbg !4215
  %159 = lshr i32 %158, 2, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %159, metadata !4095, metadata !DIExpression()), !dbg !4217
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4218
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4218
  br i1 %163, label %316, label %164, !dbg !4218

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4220

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4221
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4224
  store i8 %166, i8* %167, align 1, !dbg !4225
  %168 = trunc i32 %132 to i8, !dbg !4226
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4227
  store i8 %168, i8* %169, align 1, !dbg !4228
  br i1 %154, label %173, label %170, !dbg !4229

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4230
  store i8 %171, i8* %167, align 1, !dbg !4230
  %172 = add i32 %131, 1, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %172, metadata !4061, metadata !DIExpression()), !dbg !4114
  br label %185, !dbg !4234

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %174, metadata !4060, metadata !DIExpression()), !dbg !4114
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4237

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %177, metadata !4049, metadata !DIExpression()), !dbg !4114
  br label %185, !dbg !4241

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4242

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %180, metadata !4049, metadata !DIExpression()), !dbg !4114
  br label %185, !dbg !4246

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !4247
  %183 = add i32 %142, 2, !dbg !4249
  %184 = add i32 %183, %182, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %184, metadata !4049, metadata !DIExpression()), !dbg !4114
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4114
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4114
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4114
  call void @llvm.dbg.value(metadata i32 %188, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %187, metadata !4060, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %186, metadata !4061, metadata !DIExpression()), !dbg !4114
  %189 = add nuw nsw i32 %137, 1, !dbg !4251
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 undef, metadata !4059, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 undef, metadata !4060, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 undef, metadata !4061, metadata !DIExpression()), !dbg !4114
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4196
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4198
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4199
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4200
  call void @llvm.dbg.value(metadata i32 %194, metadata !4049, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %193, metadata !4059, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %192, metadata !4060, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %191, metadata !4061, metadata !DIExpression()), !dbg !4114
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %195, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %143, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %141, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %139, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %138, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %132, metadata !4062, metadata !DIExpression()), !dbg !4114
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %196, metadata !4051, metadata !DIExpression()), !dbg !4114
  %197 = load i8, i8* %196, align 1, !dbg !4148
  %198 = icmp eq i8 %197, 0, !dbg !4149
  br i1 %198, label %223, label %63, !dbg !4150

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4253

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %201, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 undef, metadata !4098, metadata !DIExpression()), !dbg !4255
  br i1 %22, label %216, label %202, !dbg !4256

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4254
  %204 = load i32, i32* %203, align 4, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %204, metadata !4098, metadata !DIExpression()), !dbg !4255
  %205 = inttoptr i32 %118 to i32*, !dbg !4257
  store i32 %204, i32* %205, align 4, !dbg !4260
  br label %216, !dbg !4261

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4262
  %208 = add i32 %207, 7, !dbg !4262
  %209 = and i32 %208, -8, !dbg !4262
  %210 = inttoptr i32 %209 to i8*, !dbg !4262
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %211, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i64 undef, metadata !4104, metadata !DIExpression()), !dbg !4263
  br i1 %22, label %216, label %212, !dbg !4264

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4262
  %214 = load i64, i64* %213, align 8, !dbg !4262
  call void @llvm.dbg.value(metadata i64 %214, metadata !4104, metadata !DIExpression()), !dbg !4263
  %215 = inttoptr i32 %118 to i64*, !dbg !4265
  store i64 %214, i64* %215, align 8, !dbg !4270
  br label %216, !dbg !4271

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4272
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4272
  call void @llvm.dbg.value(metadata i8* %218, metadata !4052, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %40, metadata !4051, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %219, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %113, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %112, metadata !4056, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8 poison, metadata !4065, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %72, metadata !4062, metadata !DIExpression()), !dbg !4114
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4146
  call void @llvm.dbg.value(metadata i8* %220, metadata !4051, metadata !DIExpression()), !dbg !4114
  %221 = load i8, i8* %220, align 1, !dbg !4148
  %222 = icmp eq i8 %221, 0, !dbg !4149
  br i1 %222, label %223, label %38, !dbg !4150

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4273
  %225 = ptrtoint i8* %224 to i32, !dbg !4274
  %226 = sub i32 %225, %17, !dbg !4274
  %227 = lshr i32 %226, 2, !dbg !4276
  %228 = icmp ugt i32 %226, 1023, !dbg !4277
  br i1 %228, label %316, label %229, !dbg !4278

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4279

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4280
  %232 = add i32 %231, %226, !dbg !4283
  br label %316, !dbg !4284

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4285
  store i8 %234, i8* %0, align 1, !dbg !4286
  %235 = trunc i32 %192 to i8, !dbg !4287
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4289
  store i8 %236, i8* %238, align 1, !dbg !4291
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4292
  store i8 %237, i8* %239, align 1, !dbg !4293
  %240 = trunc i32 %191 to i8, !dbg !4294
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4295
  store i8 %240, i8* %241, align 1, !dbg !4296
  %242 = icmp eq i32 %191, 0, !dbg !4297
  %243 = xor i1 %242, true, !dbg !4298
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4298
  call void @llvm.dbg.value(metadata i8* %224, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 0, metadata !4063, metadata !DIExpression()), !dbg !4114
  br i1 %245, label %246, label %265, !dbg !4298

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4299

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %250, metadata !4063, metadata !DIExpression()), !dbg !4114
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4300
  %252 = load i8, i8* %251, align 1, !dbg !4300
  %253 = icmp sgt i8 %252, -1, !dbg !4302
  br i1 %253, label %261, label %254, !dbg !4303

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4107, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4304
  %255 = ptrtoint i8* %249 to i32, !dbg !4305
  %256 = add i32 %247, %255, !dbg !4307
  %257 = icmp ugt i32 %256, %194, !dbg !4308
  br i1 %257, label %316, label %258, !dbg !4309

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4310
  call void @llvm.dbg.value(metadata i8 %259, metadata !4107, metadata !DIExpression()), !dbg !4304
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4311
  call void @llvm.dbg.value(metadata i8* %260, metadata !4054, metadata !DIExpression()), !dbg !4114
  store i8 %259, i8* %249, align 1, !dbg !4312
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4252
  call void @llvm.dbg.value(metadata i8* %262, metadata !4054, metadata !DIExpression()), !dbg !4114
  %263 = add nuw i32 %250, 1, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %263, metadata !4063, metadata !DIExpression()), !dbg !4114
  %264 = icmp eq i32 %263, %193, !dbg !4314
  br i1 %264, label %265, label %248, !dbg !4299, !llvm.loop !4315

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4252
  call void @llvm.dbg.value(metadata i8* %266, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 0, metadata !4063, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %133, metadata !4064, metadata !DIExpression()), !dbg !4114
  %267 = icmp eq i32 %193, 0, !dbg !4317
  br i1 %267, label %312, label %268, !dbg !4320

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4320

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %272, metadata !4064, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %273, metadata !4063, metadata !DIExpression()), !dbg !4114
  br i1 %242, label %278, label %274, !dbg !4321

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4324
  %276 = load i8, i8* %275, align 1, !dbg !4324
  %277 = icmp sgt i8 %276, -1, !dbg !4325
  br i1 %277, label %278, label %307, !dbg !4326

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4327

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4055, metadata !DIExpression()), !dbg !4114
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4328
  %281 = load i8, i8* %280, align 1, !dbg !4328
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %282, metadata !4054, metadata !DIExpression()), !dbg !4114
  store i8 %281, i8* %271, align 1, !dbg !4332
  br label %293, !dbg !4333

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4334
  %285 = load i8, i8* %284, align 1, !dbg !4334
  %286 = zext i8 %285 to i32, !dbg !4334
  %287 = shl nuw nsw i32 %286, 2, !dbg !4336
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4337
  %289 = bitcast i8* %288 to i8**, !dbg !4338
  %290 = load i8*, i8** %289, align 4, !dbg !4338
  call void @llvm.dbg.value(metadata i8* %290, metadata !4064, metadata !DIExpression()), !dbg !4114
  store i8* null, i8** %289, align 4, !dbg !4339
  %291 = tail call i32 @strlen(i8* noundef %290) #24, !dbg !4340
  %292 = add i32 %291, 1, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %292, metadata !4055, metadata !DIExpression()), !dbg !4114
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4114
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4342
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4114
  call void @llvm.dbg.value(metadata i8* %296, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i32 %295, metadata !4055, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %294, metadata !4064, metadata !DIExpression()), !dbg !4114
  %297 = ptrtoint i8* %296 to i32, !dbg !4343
  %298 = add i32 %269, %295, !dbg !4345
  %299 = add i32 %298, %297, !dbg !4346
  %300 = icmp ugt i32 %299, %194, !dbg !4347
  br i1 %300, label %316, label %301, !dbg !4348

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4349
  %303 = load i8, i8* %302, align 1, !dbg !4349
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4350
  call void @llvm.dbg.value(metadata i8* %304, metadata !4054, metadata !DIExpression()), !dbg !4114
  store i8 %303, i8* %296, align 1, !dbg !4351
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #24, !dbg !4352
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %306, metadata !4054, metadata !DIExpression()), !dbg !4114
  br label %307, !dbg !4354

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4355
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4114
  call void @llvm.dbg.value(metadata i8* %309, metadata !4054, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.value(metadata i8* %308, metadata !4064, metadata !DIExpression()), !dbg !4114
  %310 = add nuw i32 %273, 1, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %310, metadata !4063, metadata !DIExpression()), !dbg !4114
  %311 = icmp eq i32 %310, %193, !dbg !4317
  br i1 %311, label %312, label %270, !dbg !4320, !llvm.loop !4357

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4252
  %314 = ptrtoint i8* %313 to i32, !dbg !4359
  %315 = sub i32 %314, %17, !dbg !4359
  br label %316, !dbg !4360

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #22, !dbg !4361
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22, !dbg !4361
  ret i32 %317, !dbg !4361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4366, metadata !DIExpression()), !dbg !4367
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #23, !dbg !4368
  ret i1 %2, !dbg !4369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4375, metadata !DIExpression()), !dbg !4376
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4377
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4378
  %4 = and i1 %2, %3, !dbg !4378
  ret i1 %4, !dbg !4379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4380 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4384, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %1, metadata !4385, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %2, metadata !4386, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i8* %3, metadata !4387, metadata !DIExpression()), !dbg !4390
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4391
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !4391
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4388, metadata !DIExpression()), !dbg !4392
  call void @llvm.va_start(i8* nonnull %6), !dbg !4393
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4394
  %8 = load i32, i32* %7, align 4, !dbg !4394
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4394
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #23, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %10, metadata !4389, metadata !DIExpression()), !dbg !4390
  call void @llvm.va_end(i8* nonnull %6), !dbg !4395
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !4396
  ret i32 %10, !dbg !4397
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4398 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4410, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4411, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8* %2, metadata !4412, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8* %3, metadata !4413, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8* %3, metadata !4414, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8* %3, metadata !4415, metadata !DIExpression()), !dbg !4429
  %5 = icmp eq i8* %3, null, !dbg !4430
  br i1 %5, label %45, label %6, !dbg !4432

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4429
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4433
  %8 = load i8, i8* %7, align 1, !dbg !4433
  %9 = zext i8 %8 to i32, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %9, metadata !4425, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i8 undef, metadata !4426, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata i8 undef, metadata !4427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata i32 0, metadata !4423, metadata !DIExpression()), !dbg !4429
  %10 = icmp eq i8 %8, 0, !dbg !4435
  br i1 %10, label %39, label %11, !dbg !4438

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4439
  call void @llvm.dbg.value(metadata i8 %12, metadata !4424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %13 = zext i8 %12 to i32, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %13, metadata !4424, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %14 = shl nuw nsw i32 %13, 2, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %14, metadata !4424, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4442
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4443
  %17 = load i8, i8* %16, align 1, !dbg !4443
  call void @llvm.dbg.value(metadata i8 %17, metadata !4426, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %18 = zext i8 %17 to i32, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %18, metadata !4426, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4445
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4446
  %21 = load i8, i8* %20, align 1, !dbg !4446
  call void @llvm.dbg.value(metadata i8 %21, metadata !4427, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %22 = zext i8 %21 to i32, !dbg !4447
  call void @llvm.dbg.value(metadata i32 %22, metadata !4427, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %23 = shl nuw nsw i32 %22, 1, !dbg !4448
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4421, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4429
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4449
  call void @llvm.dbg.value(metadata i8* %24, metadata !4421, metadata !DIExpression()), !dbg !4429
  br label %25, !dbg !4438

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4421, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.value(metadata i32 %27, metadata !4423, metadata !DIExpression()), !dbg !4429
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4450
  call void @llvm.dbg.value(metadata i8* %28, metadata !4421, metadata !DIExpression()), !dbg !4429
  %29 = load i8, i8* %26, align 1, !dbg !4452
  %30 = zext i8 %29 to i32, !dbg !4452
  call void @llvm.dbg.value(metadata i32 %30, metadata !4428, metadata !DIExpression()), !dbg !4429
  %31 = shl nuw nsw i32 %30, 2, !dbg !4453
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4454
  %33 = bitcast i8* %32 to i8**, !dbg !4455
  call void @llvm.dbg.value(metadata i8** %33, metadata !4422, metadata !DIExpression()), !dbg !4429
  store i8* %28, i8** %33, align 4, !dbg !4456
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !4457
  %35 = add i32 %34, 1, !dbg !4458
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %36, metadata !4421, metadata !DIExpression()), !dbg !4429
  %37 = add nuw nsw i32 %27, 1, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %37, metadata !4423, metadata !DIExpression()), !dbg !4429
  %38 = icmp eq i32 %37, %9, !dbg !4435
  br i1 %38, label %39, label %25, !dbg !4438, !llvm.loop !4461

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4463
  call void @llvm.dbg.value(metadata i8* %40, metadata !4414, metadata !DIExpression()), !dbg !4429
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4464
  %42 = bitcast i8* %41 to i8**, !dbg !4464
  %43 = load i8*, i8** %42, align 1, !dbg !4464
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #23, !dbg !4465
  br label %45, !dbg !4466

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4429
  ret i32 %46, !dbg !4467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4468 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4472, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4473, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i8* %2, metadata !4474, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i8* %3, metadata !4475, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i8* %4, metadata !4476, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i8* %4, metadata !4477, metadata !DIExpression()), !dbg !4482
  %6 = ptrtoint i8* %4 to i32, !dbg !4483
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4483
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !4483
  ret i32 %8, !dbg !4484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4485 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4489, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i32 %1, metadata !4490, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8 0, metadata !4492, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i32 0, metadata !4493, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8 poison, metadata !4492, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8* %0, metadata !4489, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4494
  %3 = load i8, i8* %0, align 1, !dbg !4495
  call void @llvm.dbg.value(metadata i8 %3, metadata !4491, metadata !DIExpression()), !dbg !4494
  %4 = icmp eq i8 %3, 0, !dbg !4496
  br i1 %4, label %29, label %5, !dbg !4497

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %8, metadata !4493, metadata !DIExpression()), !dbg !4494
  br i1 %9, label %11, label %22, !dbg !4499

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4501
  br i1 %12, label %13, label %17, !dbg !4505

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4506
  br i1 %14, label %29, label %15, !dbg !4509

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #23, !dbg !4510
  br i1 %16, label %29, label %22, !dbg !4512

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #23, !dbg !4513
  %19 = xor i1 %18, true, !dbg !4515
  %20 = zext i1 %18 to i32, !dbg !4515
  %21 = add nsw i32 %8, %20, !dbg !4515
  br label %22, !dbg !4515

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %24, metadata !4493, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8 poison, metadata !4492, metadata !DIExpression()), !dbg !4494
  %25 = icmp eq i8 %6, 37, !dbg !4516
  %26 = xor i1 %25, %23, !dbg !4518
  call void @llvm.dbg.value(metadata i8* %10, metadata !4489, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i8* %10, metadata !4489, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4494
  %27 = load i8, i8* %10, align 1, !dbg !4495
  call void @llvm.dbg.value(metadata i8 %27, metadata !4491, metadata !DIExpression()), !dbg !4494
  %28 = icmp eq i8 %27, 0, !dbg !4496
  br i1 %28, label %29, label %5, !dbg !4497, !llvm.loop !4519

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4494
  ret i1 %30, !dbg !4521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4522 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4526, metadata !DIExpression()), !dbg !4527
  %2 = add i8 %0, -64, !dbg !4528
  %3 = icmp ult i8 %2, 59, !dbg !4528
  ret i1 %3, !dbg !4529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4530 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4538, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %1, metadata !4539, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4540, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %3, metadata !4541, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %4, metadata !4542, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i16* %5, metadata !4543, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %6, metadata !4544, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %0, metadata !4545, metadata !DIExpression()), !dbg !4607
  %11 = bitcast i8* %0 to i32*, !dbg !4608
  call void @llvm.dbg.value(metadata i32* %11, metadata !4546, metadata !DIExpression()), !dbg !4607
  %12 = and i32 %4, 8, !dbg !4609
  %13 = icmp eq i32 %12, 0, !dbg !4610
  call void @llvm.dbg.value(metadata i1 %13, metadata !4550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %0, metadata !4553, metadata !DIExpression()), !dbg !4607
  %14 = icmp eq i32 %1, 0, !dbg !4611
  br i1 %14, label %15, label %17, !dbg !4612

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #23, !dbg !4613
  br label %17, !dbg !4612

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4612
  call void @llvm.dbg.value(metadata i32 %18, metadata !4539, metadata !DIExpression()), !dbg !4607
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4614
  %20 = load i8, i8* %19, align 1, !dbg !4614
  %21 = zext i8 %20 to i32, !dbg !4615
  call void @llvm.dbg.value(metadata i32 %21, metadata !4548, metadata !DIExpression()), !dbg !4607
  %22 = icmp ne i8 %20, 0, !dbg !4616
  %23 = and i32 %4, 1, !dbg !4617
  %24 = icmp ne i32 %23, 0, !dbg !4617
  %25 = and i1 %24, %22, !dbg !4617
  call void @llvm.dbg.value(metadata i1 %25, metadata !4552, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4607
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4618
  %27 = load i8, i8* %26, align 1, !dbg !4618
  %28 = zext i8 %27 to i32, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %28, metadata !4549, metadata !DIExpression()), !dbg !4607
  %29 = icmp ne i8 %27, 0, !dbg !4620
  %30 = and i32 %4, 2, !dbg !4621
  %31 = icmp ne i32 %30, 0, !dbg !4621
  %32 = and i1 %31, %29, !dbg !4621
  call void @llvm.dbg.value(metadata i1 %32, metadata !4551, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4607
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4622
  br i1 %33, label %38, label %34, !dbg !4622

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4624
  br i1 %35, label %267, label %36, !dbg !4627

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #24, !dbg !4628
  br label %267, !dbg !4630

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4631
  %40 = zext i8 %39 to i32, !dbg !4632
  %41 = shl nuw nsw i32 %40, 2, !dbg !4633
  call void @llvm.dbg.value(metadata i32 %41, metadata !4547, metadata !DIExpression()), !dbg !4607
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4634
  %43 = bitcast i8* %42 to i8**, !dbg !4635
  %44 = load i8*, i8** %43, align 4, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %44, metadata !4556, metadata !DIExpression()), !dbg !4607
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %45, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4558, metadata !DIExpression()), !dbg !4607
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4637
  br i1 %46, label %47, label %132, !dbg !4638

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4555, metadata !DIExpression()), !dbg !4607
  br i1 %25, label %48, label %73, !dbg !4639

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %45, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4558, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4559, metadata !DIExpression()), !dbg !4640
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4641

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %52, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %53, metadata !4558, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %54, metadata !4559, metadata !DIExpression()), !dbg !4640
  %55 = load i8, i8* %52, align 1, !dbg !4642
  %56 = zext i8 %55 to i32, !dbg !4643
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4643
  %58 = bitcast i32* %57 to i8**, !dbg !4644
  %59 = load i8*, i8** %58, align 4, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %59, metadata !4565, metadata !DIExpression()), !dbg !4645
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #23, !dbg !4646
  call void @llvm.dbg.value(metadata i32 %60, metadata !4568, metadata !DIExpression()), !dbg !4645
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4647
  br i1 %62, label %63, label %67, !dbg !4647

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4649
  %65 = add nuw i32 %53, 1, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %65, metadata !4558, metadata !DIExpression()), !dbg !4607
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4652
  store i16 %64, i16* %66, align 2, !dbg !4653
  br label %67, !dbg !4654

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4607
  call void @llvm.dbg.value(metadata i32 %68, metadata !4558, metadata !DIExpression()), !dbg !4607
  %69 = add nsw i32 %60, %51, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %69, metadata !4555, metadata !DIExpression()), !dbg !4607
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %70, metadata !4557, metadata !DIExpression()), !dbg !4607
  %71 = add nuw nsw i32 %54, 1, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %71, metadata !4559, metadata !DIExpression()), !dbg !4640
  %72 = icmp eq i32 %71, %21, !dbg !4658
  br i1 %72, label %79, label %50, !dbg !4641, !llvm.loop !4659

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4661
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4661
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4661
  br label %79, !dbg !4661

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4664
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4607
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4665
  call void @llvm.dbg.value(metadata i1 undef, metadata !4569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4666
  call void @llvm.dbg.value(metadata i32 0, metadata !4570, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata i32 %82, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %81, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %80, metadata !4558, metadata !DIExpression()), !dbg !4607
  %83 = icmp eq i8 %27, 0, !dbg !4668
  br i1 %83, label %267, label %84, !dbg !4669

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4670
  %86 = icmp eq i32 %85, 0, !dbg !4671
  call void @llvm.dbg.value(metadata i1 %86, metadata !4569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4666
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4669

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8* %93, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %94, metadata !4558, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %95, metadata !4570, metadata !DIExpression()), !dbg !4667
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %96, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 undef, metadata !4572, metadata !DIExpression()), !dbg !4673
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %97, metadata !4557, metadata !DIExpression()), !dbg !4607
  %98 = load i8, i8* %96, align 1, !dbg !4675
  call void @llvm.dbg.value(metadata i8 %98, metadata !4575, metadata !DIExpression()), !dbg !4673
  %99 = zext i8 %98 to i32, !dbg !4676
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4676
  %101 = bitcast i32* %100 to i8**, !dbg !4677
  %102 = load i8*, i8** %101, align 4, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %102, metadata !4576, metadata !DIExpression()), !dbg !4673
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #23, !dbg !4678
  call void @llvm.dbg.value(metadata i1 %103, metadata !4577, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4673
  br i1 %13, label %110, label %104, !dbg !4679

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4681
  call void @llvm.dbg.value(metadata i8 %105, metadata !4572, metadata !DIExpression()), !dbg !4673
  %106 = zext i8 %105 to i32, !dbg !4682
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #23, !dbg !4683
  br i1 %107, label %108, label %110, !dbg !4684

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #24, !dbg !4685
  %109 = add nsw i32 %92, -2, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %109, metadata !4555, metadata !DIExpression()), !dbg !4607
  br label %127, !dbg !4692

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4693

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4694

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %113, metadata !4555, metadata !DIExpression()), !dbg !4607
  br label %127, !dbg !4699

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4700

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4603), !dbg !4701
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #23, !dbg !4702
  call void @llvm.dbg.value(metadata i32 %116, metadata !4578, metadata !DIExpression()), !dbg !4673
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4703
  br i1 %118, label %119, label %123, !dbg !4703

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4705
  %121 = add nuw i32 %94, 1, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %121, metadata !4558, metadata !DIExpression()), !dbg !4607
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4708
  store i16 %120, i16* %122, align 2, !dbg !4709
  br label %123, !dbg !4710

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4607
  call void @llvm.dbg.value(metadata i32 %124, metadata !4558, metadata !DIExpression()), !dbg !4607
  %125 = add i32 %92, -1, !dbg !4711
  %126 = add i32 %125, %116, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %126, metadata !4555, metadata !DIExpression()), !dbg !4607
  br label %127, !dbg !4713

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4607
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4673
  call void @llvm.dbg.value(metadata i32 %129, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %128, metadata !4558, metadata !DIExpression()), !dbg !4607
  %130 = add nuw nsw i32 %95, 1, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %97, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %130, metadata !4570, metadata !DIExpression()), !dbg !4667
  %131 = icmp eq i32 %130, %28, !dbg !4668
  br i1 %131, label %267, label %91, !dbg !4669, !llvm.loop !4715

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4580, metadata !DIExpression()), !dbg !4717
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4581, metadata !DIExpression()), !dbg !4718
  br i1 %25, label %133, label %135, !dbg !4719

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4582, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 0, metadata !4583, metadata !DIExpression()), !dbg !4607
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %134, metadata !4584, metadata !DIExpression()), !dbg !4607
  br label %140, !dbg !4723

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4724
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4724

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4584, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 undef, metadata !4583, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 0, metadata !4582, metadata !DIExpression()), !dbg !4607
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #24, !dbg !4726
  br label %145, !dbg !4729

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %148, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4586, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i8 %146, metadata !4583, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 %147, metadata !4582, metadata !DIExpression()), !dbg !4607
  %149 = icmp eq i8 %27, 0, !dbg !4732
  br i1 %149, label %150, label %152, !dbg !4733

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4734
  br label %157, !dbg !4733

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4733

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4734
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4735
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4736
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4607
  call void @llvm.dbg.value(metadata i8 undef, metadata !4579, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4607
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4737
  %163 = load i8, i8* %162, align 1, !dbg !4737
  %164 = zext i8 %159 to i32, !dbg !4738
  %165 = add i8 %163, %159, !dbg !4739
  call void @llvm.dbg.value(metadata i8 %165, metadata !4579, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4607
  %166 = icmp eq i32 %30, 0, !dbg !4740
  %167 = lshr i8 %160, 1, !dbg !4741
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4741
  call void @llvm.dbg.value(metadata i8 %168, metadata !4579, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4607
  %169 = icmp eq i32 %23, 0, !dbg !4742
  %170 = icmp eq i32 %158, 0, !dbg !4734
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4734
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4734
  call void @llvm.dbg.value(metadata i8 %172, metadata !4579, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4607
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4594, metadata !DIExpression()), !dbg !4743
  %173 = load i32, i32* %11, align 1, !dbg !4744
  store i8 %165, i8* %162, align 1, !dbg !4745
  store i8 %172, i8* %19, align 1, !dbg !4745
  store i8 %168, i8* %26, align 1, !dbg !4745
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #24, !dbg !4746
  call void @llvm.dbg.value(metadata i32 %174, metadata !4585, metadata !DIExpression()), !dbg !4607
  %175 = icmp slt i32 %174, 0, !dbg !4747
  br i1 %175, label %267, label %220, !dbg !4749

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %178, metadata !4586, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i8 %179, metadata !4583, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 %180, metadata !4582, metadata !DIExpression()), !dbg !4607
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %181, metadata !4557, metadata !DIExpression()), !dbg !4607
  %182 = load i8, i8* %177, align 1, !dbg !4751
  call void @llvm.dbg.value(metadata i8 %182, metadata !4588, metadata !DIExpression()), !dbg !4752
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4753
  call void @llvm.dbg.value(metadata i8* %183, metadata !4557, metadata !DIExpression()), !dbg !4607
  %184 = load i8, i8* %181, align 1, !dbg !4754
  call void @llvm.dbg.value(metadata i8 %184, metadata !4591, metadata !DIExpression()), !dbg !4752
  %185 = zext i8 %184 to i32, !dbg !4755
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4755
  %187 = bitcast i32* %186 to i8**, !dbg !4756
  %188 = load i8*, i8** %187, align 4, !dbg !4756
  call void @llvm.dbg.value(metadata i8* %188, metadata !4592, metadata !DIExpression()), !dbg !4752
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #23, !dbg !4757
  call void @llvm.dbg.value(metadata i1 %189, metadata !4593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4752
  br i1 %13, label %193, label %190, !dbg !4758

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4760
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #23, !dbg !4761
  br i1 %192, label %215, label %193, !dbg !4762

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4763

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4764

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4767
  call void @llvm.dbg.value(metadata i8 %196, metadata !4582, metadata !DIExpression()), !dbg !4607
  br label %208, !dbg !4770

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4771

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4772
  call void @llvm.dbg.value(metadata i8 %199, metadata !4583, metadata !DIExpression()), !dbg !4607
  br label %208, !dbg !4775

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4776

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4778
  call void @llvm.dbg.value(metadata i8 %202, metadata !4582, metadata !DIExpression()), !dbg !4607
  br label %208, !dbg !4781

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %204, metadata !4583, metadata !DIExpression()), !dbg !4607
  %205 = zext i8 %179 to i32, !dbg !4784
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4784
  store i8 %182, i8* %206, align 1, !dbg !4785
  %207 = add i8 %179, 2, !dbg !4786
  call void @llvm.dbg.value(metadata i8 %207, metadata !4583, metadata !DIExpression()), !dbg !4607
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4787
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4787
  store i8 %184, i8* %214, align 1, !dbg !4787
  br label %215, !dbg !4788

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4607
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4736
  call void @llvm.dbg.value(metadata i8 %217, metadata !4583, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i8 %216, metadata !4582, metadata !DIExpression()), !dbg !4607
  %218 = add nuw nsw i32 %178, 1, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %183, metadata !4557, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %218, metadata !4586, metadata !DIExpression()), !dbg !4731
  %219 = icmp eq i32 %218, %28, !dbg !4732
  br i1 %219, label %157, label %176, !dbg !4733, !llvm.loop !4789

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %174, metadata !4555, metadata !DIExpression()), !dbg !4607
  store i32 %173, i32* %11, align 1, !dbg !4791
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4792
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #24, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %223, metadata !4585, metadata !DIExpression()), !dbg !4607
  %224 = icmp slt i32 %223, 0, !dbg !4794
  br i1 %224, label %267, label %225, !dbg !4796

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4607
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4797
  %228 = add nuw nsw i32 %41, %21, !dbg !4797
  %229 = sub i32 %227, %228, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %229, metadata !4595, metadata !DIExpression()), !dbg !4607
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #24, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %230, metadata !4585, metadata !DIExpression()), !dbg !4607
  %231 = icmp slt i32 %230, 0, !dbg !4799
  br i1 %231, label %267, label %232, !dbg !4801

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %233, metadata !4555, metadata !DIExpression()), !dbg !4607
  %234 = add nuw nsw i32 %233, %230, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %234, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4596, metadata !DIExpression()), !dbg !4804
  %235 = icmp eq i8 %159, 0, !dbg !4805
  br i1 %235, label %264, label %236, !dbg !4806

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4806

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4596, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %240, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #22, !dbg !4807
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4808
  %242 = load i8, i8* %241, align 1, !dbg !4808
  call void @llvm.dbg.value(metadata i8 %242, metadata !4598, metadata !DIExpression()), !dbg !4809
  store i8 %242, i8* %10, align 1, !dbg !4810
  %243 = zext i8 %242 to i32, !dbg !4811
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4811
  %245 = bitcast i32* %244 to i8**, !dbg !4812
  %246 = load i8*, i8** %245, align 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %246, metadata !4601, metadata !DIExpression()), !dbg !4809
  br i1 %237, label %250, label %247, !dbg !4813

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4814
  %249 = load i16, i16* %248, align 2, !dbg !4814
  br label %250, !dbg !4813

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 undef, metadata !4602, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %10, metadata !4598, metadata !DIExpression(DW_OP_deref)), !dbg !4809
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %252, metadata !4585, metadata !DIExpression()), !dbg !4607
  %253 = icmp slt i32 %252, 0, !dbg !4816
  br i1 %253, label %257, label %254, !dbg !4818

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4602, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4607
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #23, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %255, metadata !4585, metadata !DIExpression()), !dbg !4607
  %256 = icmp slt i32 %255, 0, !dbg !4820
  br i1 %256, label %257, label %259, !dbg !4822

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #22, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4555, metadata !DIExpression()), !dbg !4607
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %260, metadata !4555, metadata !DIExpression()), !dbg !4607
  %261 = add nsw i32 %260, %255, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %261, metadata !4555, metadata !DIExpression()), !dbg !4607
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #22, !dbg !4823
  %262 = add nuw nsw i32 %239, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %262, metadata !4596, metadata !DIExpression()), !dbg !4804
  %263 = icmp eq i32 %262, %164, !dbg !4805
  br i1 %263, label %264, label %238, !dbg !4806, !llvm.loop !4827

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4803
  call void @llvm.dbg.value(metadata i32 %265, metadata !4555, metadata !DIExpression()), !dbg !4607
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4829
  br label %267, !dbg !4830

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4607
  ret i32 %268, !dbg !4831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4832 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4836, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.value(metadata i8* %0, metadata !4837, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.value(metadata i8* %0, metadata !4838, metadata !DIExpression()), !dbg !4844
  %2 = load i8, i8* %0, align 1, !dbg !4845
  %3 = zext i8 %2 to i32, !dbg !4845
  %4 = shl nuw nsw i32 %3, 2, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %4, metadata !4839, metadata !DIExpression()), !dbg !4844
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4847
  %6 = load i8, i8* %5, align 1, !dbg !4847
  %7 = zext i8 %6 to i32, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %7, metadata !4840, metadata !DIExpression()), !dbg !4844
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4848
  %9 = load i8, i8* %8, align 1, !dbg !4848
  %10 = zext i8 %9 to i32, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %10, metadata !4841, metadata !DIExpression()), !dbg !4844
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %11, metadata !4837, metadata !DIExpression()), !dbg !4844
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %12, metadata !4837, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !4851
  %13 = icmp eq i8 %6, 0, !dbg !4852
  br i1 %13, label %14, label %19, !dbg !4854

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4844
  %16 = ptrtoint i8* %15 to i32, !dbg !4855
  %17 = ptrtoint i8* %0 to i32, !dbg !4855
  %18 = sub i32 %16, %17, !dbg !4855
  ret i32 %18, !dbg !4856

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4842, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata i8* %21, metadata !4837, metadata !DIExpression()), !dbg !4844
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %22, metadata !4837, metadata !DIExpression()), !dbg !4844
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #24, !dbg !4859
  %24 = add i32 %23, 1, !dbg !4860
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %25, metadata !4837, metadata !DIExpression()), !dbg !4844
  %26 = add nuw nsw i32 %20, 1, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %26, metadata !4842, metadata !DIExpression()), !dbg !4851
  %27 = icmp eq i32 %26, %7, !dbg !4852
  br i1 %27, label %14, label %19, !dbg !4854, !llvm.loop !4863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4865 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4869, metadata !DIExpression()), !dbg !4873
  call void @llvm.dbg.value(metadata i8* %1, metadata !4870, metadata !DIExpression()), !dbg !4873
  call void @llvm.dbg.value(metadata i8* %2, metadata !4871, metadata !DIExpression()), !dbg !4873
  call void @llvm.dbg.value(metadata i16 %3, metadata !4872, metadata !DIExpression()), !dbg !4873
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4874
  br i1 %5, label %6, label %9, !dbg !4876

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4877
  %8 = add i32 %7, 1, !dbg !4879
  br label %20, !dbg !4880

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4881
  br i1 %10, label %13, label %11, !dbg !4882

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4882
  br label %16, !dbg !4882

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4883
  %15 = add i32 %14, 1, !dbg !4884
  br label %16, !dbg !4882

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4882
  %18 = and i32 %17, 65535, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %17, metadata !4872, metadata !DIExpression()), !dbg !4873
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4886
  br label %20, !dbg !4887

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4873
  ret i32 %21, !dbg !4888
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4891, metadata !DIExpression()), !dbg !4892
  ret i32 0, !dbg !4893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4894 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4898, metadata !DIExpression()), !dbg !4899
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4900
  ret void, !dbg !4901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4902 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4905
  ret i8* %1, !dbg !4906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4907 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4918, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.value(metadata i8* %0, metadata !4917, metadata !DIExpression()), !dbg !4929
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #23, !dbg !4930
  ret void, !dbg !4932
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4937, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata i8* %1, metadata !4938, metadata !DIExpression()), !dbg !4939
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4940
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4940
  ret i32 %4, !dbg !4941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4942 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4946, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %1, metadata !4947, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i8* %2, metadata !4948, metadata !DIExpression()), !dbg !4950
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4951
  ret void, !dbg !4952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4953 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4957, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i32 %1, metadata !4958, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.value(metadata i32 0, metadata !4959, metadata !DIExpression()), !dbg !4960
  %3 = icmp eq i32 %1, 0, !dbg !4961
  br i1 %3, label %13, label %4, !dbg !4964

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4959, metadata !DIExpression()), !dbg !4960
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4965
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4967
  %8 = load i8, i8* %7, align 1, !dbg !4967
  %9 = zext i8 %8 to i32, !dbg !4967
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4965
  %11 = add nuw i32 %5, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %11, metadata !4959, metadata !DIExpression()), !dbg !4960
  %12 = icmp eq i32 %11, %1, !dbg !4961
  br i1 %12, label %13, label %4, !dbg !4964, !llvm.loop !4969

13:                                               ; preds = %4, %2
  ret void, !dbg !4971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4972 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4976, metadata !DIExpression()), !dbg !4978
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !4979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4979
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !4977, metadata !DIExpression()), !dbg !4980
  call void @llvm.va_start(i8* nonnull %3), !dbg !4981
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !4982
  %5 = load i32, i32* %4, align 4, !dbg !4982
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4982
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #23, !dbg !4982
  call void @llvm.va_end(i8* nonnull %3), !dbg !4983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4984
  ret void, !dbg !4984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4985 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4989, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %1, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %2, metadata !4991, metadata !DIExpression()), !dbg !4994
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !4995
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4995
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !4992, metadata !DIExpression()), !dbg !4996
  call void @llvm.va_start(i8* nonnull %5), !dbg !4997
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !4998
  %7 = load i32, i32* %6, align 4, !dbg !4998
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4998
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #23, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %9, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.va_end(i8* nonnull %5), !dbg !4999
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5000
  ret i32 %9, !dbg !5001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5002 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5009, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i8* %0, metadata !5006, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i32 %1, metadata !5007, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i8* %2, metadata !5008, metadata !DIExpression()), !dbg !5016
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5017
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #22, !dbg !5017
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5010, metadata !DIExpression()), !dbg !5018
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5019
  store i8* %0, i8** %7, align 4, !dbg !5019
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5019
  store i32 %1, i32* %8, align 4, !dbg !5019
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5019
  store i32 0, i32* %9, align 4, !dbg !5019
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #23, !dbg !5020
  %10 = load i32, i32* %9, align 4, !dbg !5021
  %11 = load i32, i32* %8, align 4, !dbg !5023
  %12 = icmp slt i32 %10, %11, !dbg !5024
  br i1 %12, label %13, label %15, !dbg !5025

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5026
  store i8 0, i8* %14, align 1, !dbg !5028
  br label %15, !dbg !5029

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #22, !dbg !5030
  ret i32 %10, !dbg !5031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5038, metadata !DIExpression()), !dbg !5039
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5040
  %4 = load i8*, i8** %3, align 4, !dbg !5040
  %5 = icmp eq i8* %4, null, !dbg !5042
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5043
  br i1 %5, label %12, label %8, !dbg !5044

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5045
  %10 = load i32, i32* %9, align 4, !dbg !5045
  %11 = icmp slt i32 %7, %10, !dbg !5046
  br i1 %11, label %15, label %12, !dbg !5047

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5048
  %14 = add nsw i32 %7, 1, !dbg !5050
  store i32 %14, i32* %13, align 4, !dbg !5050
  br label %25, !dbg !5051

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5052
  %17 = icmp eq i32 %7, %16, !dbg !5054
  br i1 %17, label %18, label %21, !dbg !5055

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5056
  store i32 %19, i32* %6, align 4, !dbg !5056
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5058
  store i8 0, i8* %20, align 1, !dbg !5059
  br label %25, !dbg !5060

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5061
  %23 = add nsw i32 %7, 1, !dbg !5063
  store i32 %23, i32* %6, align 4, !dbg !5063
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5064
  store i8 %22, i8* %24, align 1, !dbg !5065
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5066
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5067 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5077, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.value(metadata i8* %1, metadata !5078, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.value(metadata i8* %2, metadata !5079, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.value(metadata i8* %3, metadata !5080, metadata !DIExpression()), !dbg !5081
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !5082
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !5083
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #23, !dbg !5084
  unreachable, !dbg !5085
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5086 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !5184
  ret %struct.k_thread* %1, !dbg !5185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5191, metadata !DIExpression()), !dbg !5192
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5193, !srcloc !5195
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5196
  ret void, !dbg !5197
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5198 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !5199, !srcloc !5201
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !5202
  ret %struct.k_thread* %1, !dbg !5203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5204 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5214, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %1, metadata !5215, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %2, metadata !5216, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %4, metadata !5218, metadata !DIExpression()), !dbg !5343
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5344
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #22, !dbg !5344
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5219, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.value(metadata i32 0, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i1 undef, metadata !5225, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5343
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5346

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5346

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5347
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %30, metadata !5216, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %29, metadata !5223, metadata !DIExpression()), !dbg !5343
  %31 = load i8, i8* %30, align 1, !dbg !5348
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5346

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5348
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5349
  call void @llvm.dbg.value(metadata i8* %34, metadata !5216, metadata !DIExpression()), !dbg !5343
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %35, metadata !5227, metadata !DIExpression()), !dbg !5350
  %36 = icmp slt i32 %35, 0, !dbg !5351
  %37 = add i32 %29, 1, !dbg !5349
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %36, label %365, label %28, !llvm.loop !5353

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #22, !dbg !5355
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5232, metadata !DIExpression()), !dbg !5356
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5356
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5275, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5278, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %30, metadata !5281, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 -1, metadata !5282, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 -1, metadata !5283, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* null, metadata !5284, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %14, metadata !5285, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8 0, metadata !5286, metadata !DIExpression()), !dbg !5357
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #23, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %39, metadata !5216, metadata !DIExpression()), !dbg !5343
  %40 = load i24, i24* %15, align 8, !dbg !5359
  %41 = and i24 %40, 256, !dbg !5359
  %42 = icmp eq i24 %41, 0, !dbg !5359
  br i1 %42, label %51, label %43, !dbg !5361

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5362
  call void @llvm.dbg.value(metadata i8* %44, metadata !5217, metadata !DIExpression()), !dbg !5343
  %45 = bitcast i8* %27 to i32*, !dbg !5362
  %46 = load i32, i32* %45, align 4, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %46, metadata !5282, metadata !DIExpression()), !dbg !5357
  %47 = icmp slt i32 %46, 0, !dbg !5364
  br i1 %47, label %48, label %56, !dbg !5366

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5367
  store i24 %49, i24* %15, align 8, !dbg !5367
  %50 = sub nsw i32 0, %46, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %50, metadata !5282, metadata !DIExpression()), !dbg !5357
  br label %56, !dbg !5370

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5371
  %53 = icmp eq i24 %52, 0, !dbg !5371
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5373
  br label %56, !dbg !5373

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5374
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5357
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %58, metadata !5282, metadata !DIExpression()), !dbg !5357
  %60 = and i24 %57, 1024, !dbg !5374
  %61 = icmp eq i24 %60, 0, !dbg !5374
  br i1 %61, label %69, label %62, !dbg !5375

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %63, metadata !5217, metadata !DIExpression()), !dbg !5343
  %64 = bitcast i8* %59 to i32*, !dbg !5376
  %65 = load i32, i32* %64, align 4, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %65, metadata !5287, metadata !DIExpression()), !dbg !5377
  %66 = icmp slt i32 %65, 0, !dbg !5378
  br i1 %66, label %67, label %74, !dbg !5380

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5381
  store i24 %68, i24* %15, align 8, !dbg !5381
  br label %74, !dbg !5383

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5384
  %71 = icmp eq i24 %70, 0, !dbg !5384
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5386
  br label %74, !dbg !5386

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5387
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5357
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5357
  call void @llvm.dbg.value(metadata i8* %77, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %76, metadata !5283, metadata !DIExpression()), !dbg !5357
  store i32 0, i32* %16, align 4, !dbg !5388
  store i32 0, i32* %17, align 8, !dbg !5389
  %78 = lshr i24 %75, 16, !dbg !5387
  call void @llvm.dbg.value(metadata i24 %78, metadata !5290, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5357
  %79 = lshr i24 %75, 11, !dbg !5390
  %80 = and i24 %79, 15, !dbg !5390
  %81 = zext i24 %80 to i32, !dbg !5390
  call void @llvm.dbg.value(metadata i32 %81, metadata !5291, metadata !DIExpression()), !dbg !5357
  %82 = trunc i24 %78 to i3, !dbg !5391
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5391

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5392

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5395
  call void @llvm.dbg.value(metadata i8* %85, metadata !5217, metadata !DIExpression()), !dbg !5343
  %86 = bitcast i8* %77 to i32*, !dbg !5395
  %87 = load i32, i32* %86, align 4, !dbg !5395
  %88 = sext i32 %87 to i64, !dbg !5395
  store i64 %88, i64* %20, align 8, !dbg !5397
  br label %115, !dbg !5398

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5399
  call void @llvm.dbg.value(metadata i8* %90, metadata !5217, metadata !DIExpression()), !dbg !5343
  %91 = bitcast i8* %77 to i32*, !dbg !5399
  %92 = load i32, i32* %91, align 4, !dbg !5399
  %93 = sext i32 %92 to i64, !dbg !5399
  store i64 %93, i64* %20, align 8, !dbg !5402
  br label %115, !dbg !5403

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5404
  %96 = add i32 %95, 7, !dbg !5404
  %97 = and i32 %96, -8, !dbg !5404
  %98 = inttoptr i32 %97 to i8*, !dbg !5404
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5404
  call void @llvm.dbg.value(metadata i8* %99, metadata !5217, metadata !DIExpression()), !dbg !5343
  %100 = inttoptr i32 %97 to i64*, !dbg !5404
  %101 = load i64, i64* %100, align 8, !dbg !5404
  store i64 %101, i64* %20, align 8, !dbg !5405
  br label %115, !dbg !5406

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5407
  %104 = add i32 %103, 7, !dbg !5407
  %105 = and i32 %104, -8, !dbg !5407
  %106 = inttoptr i32 %105 to i8*, !dbg !5407
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5407
  call void @llvm.dbg.value(metadata i8* %107, metadata !5217, metadata !DIExpression()), !dbg !5343
  %108 = inttoptr i32 %105 to i64*, !dbg !5407
  %109 = load i64, i64* %108, align 8, !dbg !5407
  store i64 %109, i64* %20, align 8, !dbg !5408
  br label %115, !dbg !5409

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5410
  call void @llvm.dbg.value(metadata i8* %111, metadata !5217, metadata !DIExpression()), !dbg !5343
  %112 = bitcast i8* %77 to i32*, !dbg !5410
  %113 = load i32, i32* %112, align 4, !dbg !5410
  %114 = sext i32 %113 to i64, !dbg !5411
  store i64 %114, i64* %20, align 8, !dbg !5412
  br label %115, !dbg !5413

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5414
  call void @llvm.dbg.value(metadata i8* %117, metadata !5217, metadata !DIExpression()), !dbg !5343
  %118 = trunc i24 %79 to i4, !dbg !5415
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5415

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5416
  %121 = ashr exact i64 %120, 56, !dbg !5416
  store i64 %121, i64* %20, align 8, !dbg !5419
  br label %177, !dbg !5420

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5421
  %124 = ashr exact i64 %123, 48, !dbg !5421
  store i64 %124, i64* %20, align 8, !dbg !5424
  br label %177, !dbg !5425

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5426

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5429
  call void @llvm.dbg.value(metadata i8* %127, metadata !5217, metadata !DIExpression()), !dbg !5343
  %128 = bitcast i8* %77 to i32*, !dbg !5429
  %129 = load i32, i32* %128, align 4, !dbg !5429
  %130 = zext i32 %129 to i64, !dbg !5429
  store i64 %130, i64* %20, align 8, !dbg !5431
  br label %157, !dbg !5432

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5433
  call void @llvm.dbg.value(metadata i8* %132, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %132, metadata !5217, metadata !DIExpression()), !dbg !5343
  %133 = bitcast i8* %77 to i32*, !dbg !5433
  %134 = load i32, i32* %133, align 4, !dbg !5433
  %135 = zext i32 %134 to i64, !dbg !5433
  store i64 %135, i64* %20, align 8, !dbg !5433
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5435
  %138 = add i32 %137, 7, !dbg !5435
  %139 = and i32 %138, -8, !dbg !5435
  %140 = inttoptr i32 %139 to i8*, !dbg !5435
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5435
  call void @llvm.dbg.value(metadata i8* %141, metadata !5217, metadata !DIExpression()), !dbg !5343
  %142 = inttoptr i32 %139 to i64*, !dbg !5435
  %143 = load i64, i64* %142, align 8, !dbg !5435
  store i64 %143, i64* %20, align 8, !dbg !5436
  br label %157, !dbg !5437

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5438
  %146 = add i32 %145, 7, !dbg !5438
  %147 = and i32 %146, -8, !dbg !5438
  %148 = inttoptr i32 %147 to i8*, !dbg !5438
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5438
  call void @llvm.dbg.value(metadata i8* %149, metadata !5217, metadata !DIExpression()), !dbg !5343
  %150 = inttoptr i32 %147 to i64*, !dbg !5438
  %151 = load i64, i64* %150, align 8, !dbg !5438
  store i64 %151, i64* %20, align 8, !dbg !5439
  br label %157, !dbg !5440

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5441
  call void @llvm.dbg.value(metadata i8* %153, metadata !5217, metadata !DIExpression()), !dbg !5343
  %154 = bitcast i8* %77 to i32*, !dbg !5441
  %155 = load i32, i32* %154, align 4, !dbg !5441
  %156 = zext i32 %155 to i64, !dbg !5442
  store i64 %156, i64* %20, align 8, !dbg !5443
  br label %157, !dbg !5444

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5445
  call void @llvm.dbg.value(metadata i8* %159, metadata !5217, metadata !DIExpression()), !dbg !5343
  %160 = trunc i24 %79 to i4, !dbg !5446
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5446

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5447
  store i64 %162, i64* %20, align 8, !dbg !5450
  br label %177, !dbg !5451

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5452
  store i64 %164, i64* %20, align 8, !dbg !5455
  br label %177, !dbg !5456

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5457
  %167 = add i32 %166, 7, !dbg !5457
  %168 = and i32 %167, -8, !dbg !5457
  %169 = inttoptr i32 %168 to i8*, !dbg !5457
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5457
  call void @llvm.dbg.value(metadata i8* %170, metadata !5217, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %170, metadata !5217, metadata !DIExpression()), !dbg !5343
  %171 = inttoptr i32 %168 to double*, !dbg !5457
  %172 = load double, double* %171, align 8, !dbg !5457
  store double %172, double* %19, align 8, !dbg !5457
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5461
  call void @llvm.dbg.value(metadata i8* %174, metadata !5217, metadata !DIExpression()), !dbg !5343
  %175 = bitcast i8* %77 to i8**, !dbg !5461
  %176 = load i8*, i8** %175, align 4, !dbg !5461
  store i8* %176, i8** %18, align 8, !dbg !5464
  br label %177, !dbg !5465

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5357
  call void @llvm.dbg.value(metadata i8* %178, metadata !5217, metadata !DIExpression()), !dbg !5343
  %179 = and i24 %75, 3, !dbg !5466
  %180 = icmp eq i24 %179, 0, !dbg !5466
  br i1 %180, label %185, label %181, !dbg !5466

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #23, !dbg !5467
  call void @llvm.dbg.value(metadata i32 %182, metadata !5292, metadata !DIExpression()), !dbg !5468
  %183 = icmp slt i32 %182, 0, !dbg !5469
  %184 = add i32 %182, %29, !dbg !5467
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5471
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5472

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !5473
  call void @llvm.dbg.value(metadata i32 %188, metadata !5296, metadata !DIExpression()), !dbg !5474
  %189 = icmp slt i32 %188, 0, !dbg !5475
  %190 = add i32 %29, 1, !dbg !5473
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5477
  call void @llvm.dbg.value(metadata i8* %192, metadata !5284, metadata !DIExpression()), !dbg !5357
  %193 = icmp sgt i32 %76, -1, !dbg !5478
  br i1 %193, label %194, label %196, !dbg !5480

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %195, metadata !5299, metadata !DIExpression()), !dbg !5483
  br label %241, !dbg !5484

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !5485
  call void @llvm.dbg.value(metadata i32 %197, metadata !5299, metadata !DIExpression()), !dbg !5483
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5284, metadata !DIExpression()), !dbg !5357
  %199 = load i64, i64* %20, align 8, !dbg !5487
  %200 = trunc i64 %199 to i8, !dbg !5488
  store i8 %200, i8* %10, align 1, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %23, metadata !5285, metadata !DIExpression()), !dbg !5357
  br label %245, !dbg !5490

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5491
  %203 = icmp eq i24 %202, 0, !dbg !5491
  %204 = trunc i24 %75 to i8, !dbg !5493
  %205 = shl i8 %204, 1, !dbg !5493
  %206 = and i8 %205, 32, !dbg !5493
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5493
  call void @llvm.dbg.value(metadata i8 %207, metadata !5286, metadata !DIExpression()), !dbg !5357
  %208 = load i64, i64* %20, align 8, !dbg !5494
  call void @llvm.dbg.value(metadata i64 %208, metadata !5224, metadata !DIExpression()), !dbg !5343
  %209 = icmp slt i64 %208, 0, !dbg !5495
  br i1 %209, label %210, label %212, !dbg !5497

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5286, metadata !DIExpression()), !dbg !5357
  %211 = sub nsw i64 0, %208, !dbg !5498
  store i64 %211, i64* %20, align 8, !dbg !5500
  br label %212, !dbg !5501

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5357
  call void @llvm.dbg.value(metadata i8 %213, metadata !5286, metadata !DIExpression()), !dbg !5357
  %214 = load i64, i64* %20, align 8, !dbg !5502
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #23, !dbg !5503
  call void @llvm.dbg.value(metadata i8* %215, metadata !5284, metadata !DIExpression()), !dbg !5357
  br label %216, !dbg !5504

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5505
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5506
  call void @llvm.dbg.value(metadata i8* %218, metadata !5284, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8 %217, metadata !5286, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.label(metadata !5342), !dbg !5507
  %219 = icmp sgt i32 %76, -1, !dbg !5508
  br i1 %219, label %222, label %220, !dbg !5509

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5510
  br label %245, !dbg !5509

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5512
  %224 = sub i32 %22, %223, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %224, metadata !5301, metadata !DIExpression()), !dbg !5513
  %225 = load i24, i24* %15, align 8, !dbg !5514
  %226 = and i24 %225, -65, !dbg !5514
  store i24 %226, i24* %15, align 8, !dbg !5514
  %227 = icmp ugt i32 %76, %224, !dbg !5515
  br i1 %227, label %228, label %245, !dbg !5517

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5518
  store i32 %229, i32* %16, align 4, !dbg !5520
  br label %245, !dbg !5521

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5522
  %232 = icmp eq i8* %231, null, !dbg !5524
  br i1 %232, label %245, label %233, !dbg !5525

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5526
  %235 = zext i32 %234 to i64, !dbg !5526
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #23, !dbg !5528
  call void @llvm.dbg.value(metadata i8* %236, metadata !5284, metadata !DIExpression()), !dbg !5357
  %237 = load i24, i24* %15, align 8, !dbg !5529
  %238 = or i24 %237, 1048576, !dbg !5529
  store i24 %238, i24* %15, align 8, !dbg !5529
  store i8 120, i8* %21, align 1, !dbg !5530
  br label %216, !dbg !5531

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5532
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #23, !dbg !5535
  br label %363, !dbg !5536

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5537
  call void @llvm.dbg.value(metadata i32 %242, metadata !5299, metadata !DIExpression()), !dbg !5483
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5538
  call void @llvm.dbg.value(metadata i32 -1, metadata !5283, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %29, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %192, metadata !5284, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %243, metadata !5285, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8 0, metadata !5286, metadata !DIExpression()), !dbg !5357
  %244 = icmp eq i8* %192, null, !dbg !5539
  br i1 %244, label %363, label %245, !dbg !5541, !llvm.loop !5353

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5510
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()), !dbg !5357
  %250 = zext i8 %249 to i32, !dbg !5542
  %251 = icmp eq i8 %249, 0, !dbg !5544
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5357
  %252 = icmp sgt i32 %58, 0, !dbg !5545
  br i1 %252, label %253, label %302, !dbg !5546

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5510
  %255 = icmp eq i24 %254, 0, !dbg !5510
  %256 = ptrtoint i8* %248 to i32, !dbg !5547
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  %257 = ptrtoint i8* %247 to i32, !dbg !5547
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  %258 = xor i1 %251, true, !dbg !5548
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  %259 = sext i1 %258 to i32, !dbg !5548
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  %260 = lshr i24 %246, 19, !dbg !5549
  %261 = and i24 %260, 1, !dbg !5549
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5549
  %263 = zext i24 %262 to i32, !dbg !5549
  %264 = add i32 %257, %259, !dbg !5549
  %265 = add i32 %256, %263, !dbg !5549
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  %266 = and i24 %246, 4194304, !dbg !5550
  %267 = icmp eq i24 %266, 0, !dbg !5550
  %268 = load i32, i32* %16, align 4, !dbg !5552
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5357
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5357
  %269 = load i32, i32* %17, align 8, !dbg !5553
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5553
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5357
  %271 = add i32 %264, %58, !dbg !5553
  %272 = add i32 %265, %268, !dbg !5553
  %273 = add i32 %272, %270, !dbg !5554
  %274 = sub i32 %271, %273, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %274, metadata !5282, metadata !DIExpression()), !dbg !5357
  %275 = and i24 %246, 4, !dbg !5555
  %276 = icmp eq i24 %275, 0, !dbg !5555
  br i1 %276, label %277, label %302, !dbg !5556

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5306, metadata !DIExpression()), !dbg !5557
  %278 = and i24 %246, 64, !dbg !5558
  %279 = icmp eq i24 %278, 0, !dbg !5558
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5559
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5559
  %282 = select i1 %279, i32 32, i32 48, !dbg !5559
  br i1 %280, label %287, label %283, !dbg !5559

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %284, metadata !5311, metadata !DIExpression()), !dbg !5561
  %285 = icmp slt i32 %284, 0, !dbg !5562
  %286 = add i32 %29, 1, !dbg !5560
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5357
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %290, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8 undef, metadata !5306, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8 %288, metadata !5286, metadata !DIExpression()), !dbg !5357
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5564
  %292 = add i32 %291, -1, !dbg !5564
  br label %293, !dbg !5564

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5565
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %295, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %294, metadata !5282, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %294, metadata !5282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5357
  %296 = icmp sgt i32 %294, 0, !dbg !5566
  br i1 %296, label %297, label %302, !dbg !5564

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5567
  call void @llvm.dbg.value(metadata i32 %298, metadata !5282, metadata !DIExpression()), !dbg !5357
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %299, metadata !5317, metadata !DIExpression()), !dbg !5569
  %300 = icmp slt i32 %299, 0, !dbg !5570
  %301 = add i32 %295, 1, !dbg !5568
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %300, label %361, label %293, !llvm.loop !5572

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5357
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5357
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %305, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %304, metadata !5282, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8 %303, metadata !5286, metadata !DIExpression()), !dbg !5357
  %306 = icmp eq i8 %303, 0, !dbg !5574
  br i1 %306, label %312, label %307, !dbg !5575

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5576
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !5577
  call void @llvm.dbg.value(metadata i32 %309, metadata !5320, metadata !DIExpression()), !dbg !5578
  %310 = icmp slt i32 %309, 0, !dbg !5579
  %311 = add i32 %305, 1, !dbg !5577
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %313, metadata !5223, metadata !DIExpression()), !dbg !5343
  %314 = lshr i24 %246, 20, !dbg !5581
  %315 = lshr i24 %246, 19, !dbg !5582
  %316 = or i24 %314, %315, !dbg !5583
  %317 = and i24 %316, 1, !dbg !5583
  %318 = icmp eq i24 %317, 0, !dbg !5583
  br i1 %318, label %323, label %319, !dbg !5584

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %320, metadata !5324, metadata !DIExpression()), !dbg !5586
  %321 = icmp slt i32 %320, 0, !dbg !5587
  %322 = add i32 %313, 1, !dbg !5585
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %324, metadata !5223, metadata !DIExpression()), !dbg !5343
  %325 = and i24 %246, 1048576, !dbg !5589
  %326 = icmp eq i24 %325, 0, !dbg !5589
  br i1 %326, label %333, label %327, !dbg !5590

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5591
  %329 = zext i8 %328 to i32, !dbg !5591
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !5591
  call void @llvm.dbg.value(metadata i32 %330, metadata !5330, metadata !DIExpression()), !dbg !5592
  %331 = icmp slt i32 %330, 0, !dbg !5593
  %332 = add i32 %324, 1, !dbg !5591
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %334, metadata !5223, metadata !DIExpression()), !dbg !5343
  %335 = load i32, i32* %16, align 4, !dbg !5595
  call void @llvm.dbg.value(metadata i32 %335, metadata !5305, metadata !DIExpression()), !dbg !5357
  br label %336, !dbg !5596

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5597
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %338, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %337, metadata !5305, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5357
  %339 = icmp sgt i32 %337, 0, !dbg !5598
  br i1 %339, label %340, label %345, !dbg !5596

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %341, metadata !5305, metadata !DIExpression()), !dbg !5357
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %342, metadata !5334, metadata !DIExpression()), !dbg !5601
  %343 = icmp slt i32 %342, 0, !dbg !5602
  %344 = add i32 %338, 1, !dbg !5600
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %343, label %361, label %336, !llvm.loop !5604

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #23, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %346, metadata !5337, metadata !DIExpression()), !dbg !5607
  %347 = icmp slt i32 %346, 0, !dbg !5608
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %349, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %304, metadata !5282, metadata !DIExpression()), !dbg !5357
  %350 = icmp sgt i32 %304, 0, !dbg !5610
  br i1 %350, label %351, label %363, !dbg !5611

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5611
  %353 = add i32 %352, %338, !dbg !5611
  br label %354, !dbg !5611

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %355, metadata !5282, metadata !DIExpression()), !dbg !5357
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %356, metadata !5339, metadata !DIExpression()), !dbg !5613
  %357 = icmp slt i32 %356, 0, !dbg !5614
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5616
  call void @llvm.dbg.value(metadata i32 undef, metadata !5223, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  call void @llvm.dbg.value(metadata i32 %359, metadata !5282, metadata !DIExpression()), !dbg !5357
  %360 = icmp sgt i32 %355, 1, !dbg !5610
  br i1 %360, label %354, label %363, !dbg !5611, !llvm.loop !5617

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !5354
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %364, metadata !5223, metadata !DIExpression()), !dbg !5343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #22, !dbg !5354
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5343
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #22, !dbg !5619
  ret i32 %366, !dbg !5619
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5620 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i8* %1, metadata !5625, metadata !DIExpression()), !dbg !5626
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5627
  store i24 0, i24* %3, align 4, !dbg !5627
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5627
  store i8 0, i8* %4, align 1, !dbg !5627
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5627
  store i32 0, i32* %5, align 4, !dbg !5627
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5627
  store i32 0, i32* %6, align 4, !dbg !5627
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5628
  call void @llvm.dbg.value(metadata i8* %7, metadata !5625, metadata !DIExpression()), !dbg !5626
  %8 = load i8, i8* %7, align 1, !dbg !5629
  %9 = icmp eq i8 %8, 37, !dbg !5631
  br i1 %9, label %10, label %12, !dbg !5632

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5633
  call void @llvm.dbg.value(metadata i8* %11, metadata !5625, metadata !DIExpression()), !dbg !5626
  store i8 37, i8* %4, align 1, !dbg !5635
  br label %18, !dbg !5636

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #23, !dbg !5637
  call void @llvm.dbg.value(metadata i8* %13, metadata !5625, metadata !DIExpression()), !dbg !5626
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #23, !dbg !5638
  call void @llvm.dbg.value(metadata i8* %14, metadata !5625, metadata !DIExpression()), !dbg !5626
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #23, !dbg !5639
  call void @llvm.dbg.value(metadata i8* %15, metadata !5625, metadata !DIExpression()), !dbg !5626
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #23, !dbg !5640
  call void @llvm.dbg.value(metadata i8* %16, metadata !5625, metadata !DIExpression()), !dbg !5626
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #23, !dbg !5641
  call void @llvm.dbg.value(metadata i8* %17, metadata !5625, metadata !DIExpression()), !dbg !5626
  br label %18, !dbg !5642

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5626
  ret i8* %19, !dbg !5643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5644 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5648, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i8* %1, metadata !5649, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i8* %2, metadata !5650, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i8* %3, metadata !5651, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i32 0, metadata !5652, metadata !DIExpression()), !dbg !5655
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5656

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5657
  call void @llvm.dbg.value(metadata i32 %9, metadata !5652, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.value(metadata i8* %8, metadata !5650, metadata !DIExpression()), !dbg !5655
  %10 = icmp ult i8* %8, %3, !dbg !5658
  br i1 %10, label %11, label %13, !dbg !5659

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5660
  br label %17, !dbg !5659

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5661

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5662
  %16 = icmp eq i8 %15, 0, !dbg !5661
  br i1 %16, label %24, label %17, !dbg !5656

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5660
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5663
  call void @llvm.dbg.value(metadata i8* %19, metadata !5650, metadata !DIExpression()), !dbg !5655
  %20 = zext i8 %18 to i32, !dbg !5664
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %21, metadata !5653, metadata !DIExpression()), !dbg !5666
  %22 = icmp slt i32 %21, 0, !dbg !5667
  %23 = add i32 %9, 1, !dbg !5669
  call void @llvm.dbg.value(metadata i32 undef, metadata !5652, metadata !DIExpression()), !dbg !5655
  br i1 %22, label %24, label %7, !llvm.loop !5670

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5655
  ret i32 %25, !dbg !5672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5673 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5677, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5678, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i8* %2, metadata !5679, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i8* %3, metadata !5680, metadata !DIExpression()), !dbg !5687
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5688
  %6 = load i8, i8* %5, align 1, !dbg !5688
  %7 = zext i8 %6 to i32, !dbg !5689
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #23, !dbg !5690
  %9 = icmp eq i32 %8, 0, !dbg !5690
  call void @llvm.dbg.value(metadata i1 %9, metadata !5681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5687
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #23, !dbg !5691
  call void @llvm.dbg.value(metadata i32 %10, metadata !5682, metadata !DIExpression()), !dbg !5687
  %11 = ptrtoint i8* %3 to i32, !dbg !5692
  %12 = ptrtoint i8* %2 to i32, !dbg !5692
  %13 = sub i32 %11, %12, !dbg !5692
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5693
  call void @llvm.dbg.value(metadata i8* %14, metadata !5684, metadata !DIExpression()), !dbg !5687
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5694

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5687
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5677, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.value(metadata i8* %18, metadata !5684, metadata !DIExpression()), !dbg !5687
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5695
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5696
  call void @llvm.dbg.value(metadata i32 %25, metadata !5685, metadata !DIExpression()), !dbg !5697
  %26 = icmp ult i32 %25, 10, !dbg !5698
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5699
  %28 = add i32 %27, %25, !dbg !5697
  %29 = trunc i32 %28 to i8, !dbg !5699
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5700
  call void @llvm.dbg.value(metadata i8* %30, metadata !5684, metadata !DIExpression()), !dbg !5687
  store i8 %29, i8* %30, align 1, !dbg !5701
  call void @llvm.dbg.value(metadata i64 %22, metadata !5677, metadata !DIExpression()), !dbg !5687
  %31 = icmp uge i64 %19, %15, !dbg !5702
  %32 = icmp ugt i8* %30, %2, !dbg !5703
  %33 = and i1 %31, %32, !dbg !5703
  br i1 %33, label %17, label %34, !dbg !5704, !llvm.loop !5705

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5707
  %36 = load i24, i24* %35, align 4, !dbg !5707
  %37 = and i24 %36, 32, !dbg !5707
  %38 = icmp eq i24 %37, 0, !dbg !5707
  br i1 %38, label %44, label %39, !dbg !5709

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5710

40:                                               ; preds = %39
  br label %41, !dbg !5712

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5716
  store i24 %43, i24* %35, align 4, !dbg !5716
  br label %44, !dbg !5717

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5718 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5724, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i8* %1, metadata !5725, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i32 %2, metadata !5726, metadata !DIExpression()), !dbg !5727
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5728
  %5 = load i24, i24* %4, align 4, !dbg !5728
  %6 = lshr i24 %5, 11, !dbg !5728
  %7 = and i24 %6, 15, !dbg !5728
  %8 = zext i24 %7 to i32, !dbg !5728
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5729

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5730
  store i32 %2, i32* %10, align 4, !dbg !5732
  br label %28, !dbg !5733

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5734
  store i8 %12, i8* %1, align 1, !dbg !5735
  br label %28, !dbg !5736

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5737
  %15 = bitcast i8* %1 to i16*, !dbg !5738
  store i16 %14, i16* %15, align 2, !dbg !5739
  br label %28, !dbg !5740

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5741
  store i32 %2, i32* %17, align 4, !dbg !5742
  br label %28, !dbg !5743

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5744
  %20 = bitcast i8* %1 to i64*, !dbg !5745
  store i64 %19, i64* %20, align 8, !dbg !5746
  br label %28, !dbg !5747

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5748
  %23 = bitcast i8* %1 to i64*, !dbg !5749
  store i64 %22, i64* %23, align 8, !dbg !5750
  br label %28, !dbg !5751

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5752
  store i32 %2, i32* %25, align 4, !dbg !5753
  br label %28, !dbg !5754

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5755
  store i32 %2, i32* %27, align 4, !dbg !5756
  br label %28, !dbg !5757

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5758
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5762, metadata !DIExpression()), !dbg !5763
  %2 = add i32 %0, -65, !dbg !5764
  %3 = icmp ult i32 %2, 26, !dbg !5765
  %4 = zext i1 %3 to i32, !dbg !5765
  ret i32 %4, !dbg !5766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5767 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5771, metadata !DIExpression()), !dbg !5772
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5773

2:                                                ; preds = %1
  br label %4, !dbg !5774

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5776

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5777
  ret i32 %5, !dbg !5778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5779 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5781, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8* %1, metadata !5782, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8 1, metadata !5783, metadata !DIExpression()), !dbg !5784
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5785

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8* %5, metadata !5782, metadata !DIExpression()), !dbg !5784
  %6 = load i8, i8* %5, align 1, !dbg !5786
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5788

7:                                                ; preds = %4
  br label %11, !dbg !5789

8:                                                ; preds = %4
  br label %11, !dbg !5791

9:                                                ; preds = %4
  br label %11, !dbg !5792

10:                                               ; preds = %4
  br label %11, !dbg !5793

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5794
  %14 = or i24 %13, %12, !dbg !5794
  store i24 %14, i24* %3, align 4, !dbg !5794
  call void @llvm.dbg.value(metadata i8 poison, metadata !5783, metadata !DIExpression()), !dbg !5784
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5782, metadata !DIExpression()), !dbg !5784
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8* %15, metadata !5782, metadata !DIExpression()), !dbg !5784
  %17 = load i24, i24* %3, align 4, !dbg !5795
  %18 = and i24 %17, 68, !dbg !5797
  %19 = icmp eq i24 %18, 68, !dbg !5797
  br i1 %19, label %20, label %22, !dbg !5797

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5798
  store i24 %21, i24* %3, align 4, !dbg !5798
  br label %22, !dbg !5800

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5802 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5804, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8* %1, metadata !5805, metadata !DIExpression()), !dbg !5808
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5809
  %5 = load i24, i24* %4, align 4, !dbg !5810
  %6 = or i24 %5, 128, !dbg !5810
  store i24 %6, i24* %4, align 4, !dbg !5810
  call void @llvm.dbg.value(metadata i8* %1, metadata !5805, metadata !DIExpression()), !dbg !5808
  %7 = load i8, i8* %1, align 1, !dbg !5811
  %8 = icmp eq i8 %7, 42, !dbg !5813
  br i1 %8, label %9, label %12, !dbg !5814

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5815
  store i24 %10, i24* %4, align 4, !dbg !5815
  call void @llvm.dbg.value(metadata i8* %1, metadata !5805, metadata !DIExpression()), !dbg !5808
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5817
  call void @llvm.dbg.value(metadata i8* %11, metadata !5805, metadata !DIExpression()), !dbg !5808
  store i8* %11, i8** %3, align 4, !dbg !5817
  br label %29, !dbg !5818

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5806, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8** %3, metadata !5805, metadata !DIExpression(DW_OP_deref)), !dbg !5808
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #23, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %13, metadata !5807, metadata !DIExpression()), !dbg !5808
  %14 = load i8*, i8** %3, align 4, !dbg !5820
  call void @llvm.dbg.value(metadata i8* %14, metadata !5805, metadata !DIExpression()), !dbg !5808
  %15 = icmp eq i8* %14, %1, !dbg !5822
  br i1 %15, label %29, label %16, !dbg !5823

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5824
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5826
  store i32 %13, i32* %18, align 4, !dbg !5827
  %19 = lshr i32 %13, 31, !dbg !5828
  %20 = lshr i24 %17, 1, !dbg !5829
  %21 = and i24 %20, 1, !dbg !5829
  %22 = zext i24 %21 to i32, !dbg !5829
  %23 = or i32 %19, %22, !dbg !5829
  %24 = trunc i32 %23 to i24, !dbg !5829
  %25 = shl nuw nsw i24 %24, 1, !dbg !5829
  %26 = and i24 %17, -131, !dbg !5829
  %27 = or i24 %26, 128, !dbg !5829
  %28 = or i24 %25, %27, !dbg !5829
  store i24 %28, i24* %4, align 4, !dbg !5829
  br label %29, !dbg !5830

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5808
  ret i8* %30, !dbg !5831
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5832 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5834, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %1, metadata !5835, metadata !DIExpression()), !dbg !5837
  %4 = load i8, i8* %1, align 1, !dbg !5838
  %5 = icmp eq i8 %4, 46, !dbg !5839
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5840
  %7 = load i24, i24* %6, align 4, !dbg !5841
  %8 = select i1 %5, i24 512, i24 0, !dbg !5841
  %9 = and i24 %7, -513, !dbg !5841
  %10 = or i24 %9, %8, !dbg !5841
  store i24 %10, i24* %6, align 4, !dbg !5841
  br i1 %5, label %11, label %32, !dbg !5842

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5835, metadata !DIExpression()), !dbg !5837
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5843
  call void @llvm.dbg.value(metadata i8* %12, metadata !5835, metadata !DIExpression()), !dbg !5837
  store i8* %12, i8** %3, align 4, !dbg !5843
  %13 = load i8, i8* %12, align 1, !dbg !5844
  %14 = icmp eq i8 %13, 42, !dbg !5846
  br i1 %14, label %15, label %18, !dbg !5847

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5848
  store i24 %16, i24* %6, align 4, !dbg !5848
  call void @llvm.dbg.value(metadata i8* %12, metadata !5835, metadata !DIExpression()), !dbg !5837
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5850
  call void @llvm.dbg.value(metadata i8* %17, metadata !5835, metadata !DIExpression()), !dbg !5837
  store i8* %17, i8** %3, align 4, !dbg !5850
  br label %32, !dbg !5851

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5835, metadata !DIExpression(DW_OP_deref)), !dbg !5837
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #23, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %19, metadata !5836, metadata !DIExpression()), !dbg !5837
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5853
  store i32 %19, i32* %20, align 4, !dbg !5854
  %21 = lshr i32 %19, 31, !dbg !5855
  %22 = load i24, i24* %6, align 4, !dbg !5856
  %23 = lshr i24 %22, 1, !dbg !5856
  %24 = and i24 %23, 1, !dbg !5856
  %25 = zext i24 %24 to i32, !dbg !5856
  %26 = or i32 %21, %25, !dbg !5856
  %27 = trunc i32 %26 to i24, !dbg !5856
  %28 = shl nuw nsw i24 %27, 1, !dbg !5856
  %29 = and i24 %22, -3, !dbg !5856
  %30 = or i24 %28, %29, !dbg !5856
  store i24 %30, i24* %6, align 4, !dbg !5856
  %31 = load i8*, i8** %3, align 4, !dbg !5857
  call void @llvm.dbg.value(metadata i8* %31, metadata !5835, metadata !DIExpression()), !dbg !5837
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5837
  ret i8* %33, !dbg !5858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5859 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5861, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i8* %1, metadata !5862, metadata !DIExpression()), !dbg !5863
  %3 = load i8, i8* %1, align 1, !dbg !5864
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5865

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5866
  call void @llvm.dbg.value(metadata i8* %5, metadata !5862, metadata !DIExpression()), !dbg !5863
  %6 = load i8, i8* %5, align 1, !dbg !5869
  %7 = icmp eq i8 %6, 104, !dbg !5870
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5871
  %9 = load i24, i24* %8, align 4, !dbg !5871
  %10 = and i24 %9, -30721, !dbg !5871
  br i1 %7, label %11, label %14, !dbg !5872

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5873
  store i24 %12, i24* %8, align 4, !dbg !5873
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5875
  call void @llvm.dbg.value(metadata i8* %13, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %56, !dbg !5876

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5877
  store i24 %15, i24* %8, align 4, !dbg !5877
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5879
  call void @llvm.dbg.value(metadata i8* %17, metadata !5862, metadata !DIExpression()), !dbg !5863
  %18 = load i8, i8* %17, align 1, !dbg !5881
  %19 = icmp eq i8 %18, 108, !dbg !5882
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5883
  %21 = load i24, i24* %20, align 4, !dbg !5883
  %22 = and i24 %21, -30721, !dbg !5883
  br i1 %19, label %23, label %26, !dbg !5884

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5885
  store i24 %24, i24* %20, align 4, !dbg !5885
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5887
  call void @llvm.dbg.value(metadata i8* %25, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %56, !dbg !5888

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5889
  store i24 %27, i24* %20, align 4, !dbg !5889
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5891
  %30 = load i24, i24* %29, align 4, !dbg !5892
  %31 = and i24 %30, -30721, !dbg !5892
  %32 = or i24 %31, 10240, !dbg !5892
  store i24 %32, i24* %29, align 4, !dbg !5892
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5893
  call void @llvm.dbg.value(metadata i8* %33, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %56, !dbg !5894

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5895
  %36 = load i24, i24* %35, align 4, !dbg !5896
  %37 = and i24 %36, -30721, !dbg !5896
  %38 = or i24 %37, 12288, !dbg !5896
  store i24 %38, i24* %35, align 4, !dbg !5896
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5897
  call void @llvm.dbg.value(metadata i8* %39, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %56, !dbg !5898

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5899
  %42 = load i24, i24* %41, align 4, !dbg !5900
  %43 = and i24 %42, -30721, !dbg !5900
  %44 = or i24 %43, 14336, !dbg !5900
  store i24 %44, i24* %41, align 4, !dbg !5900
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5901
  call void @llvm.dbg.value(metadata i8* %45, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %56, !dbg !5902

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5903
  %48 = load i24, i24* %47, align 4, !dbg !5904
  %49 = and i24 %48, -30723, !dbg !5904
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5905
  call void @llvm.dbg.value(metadata i8* %50, metadata !5862, metadata !DIExpression()), !dbg !5863
  %51 = or i24 %49, 16386, !dbg !5906
  store i24 %51, i24* %47, align 4, !dbg !5906
  br label %56, !dbg !5907

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5908
  %54 = load i24, i24* %53, align 4, !dbg !5909
  %55 = and i24 %54, -30721, !dbg !5909
  store i24 %55, i24* %53, align 4, !dbg !5909
  br label %56, !dbg !5910

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5862, metadata !DIExpression()), !dbg !5863
  ret i8* %57, !dbg !5911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5912 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5914, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %1, metadata !5915, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8 0, metadata !5916, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %1, metadata !5915, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5919
  %3 = load i8, i8* %1, align 1, !dbg !5920
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5921
  store i8 %3, i8* %4, align 1, !dbg !5922
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5923

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5924

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5925
  %9 = load i24, i24* %8, align 4, !dbg !5925
  %10 = and i24 %9, -458753, !dbg !5925
  %11 = or i24 %10, %7, !dbg !5925
  call void @llvm.dbg.label(metadata !5917), !dbg !5926
  %12 = and i24 %9, 30720, !dbg !5927
  %13 = icmp eq i24 %12, 16384, !dbg !5927
  %14 = zext i1 %13 to i24, !dbg !5929
  %15 = or i24 %11, %14, !dbg !5929
  %16 = icmp eq i8 %3, 99, !dbg !5930
  br i1 %16, label %17, label %43, !dbg !5932

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5933
  %19 = icmp ne i24 %18, 0, !dbg !5933
  call void @llvm.dbg.value(metadata i1 %19, metadata !5916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5919
  br label %43, !dbg !5935

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5936
  %22 = load i24, i24* %21, align 4, !dbg !5937
  %23 = and i24 %22, -458753, !dbg !5937
  %24 = or i24 %23, 262144, !dbg !5937
  call void @llvm.dbg.value(metadata i8 1, metadata !5916, metadata !DIExpression()), !dbg !5919
  br label %43, !dbg !5938

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5941
  %27 = load i24, i24* %26, align 4, !dbg !5942
  %28 = and i24 %27, -458753, !dbg !5942
  %29 = or i24 %28, 196608, !dbg !5942
  %30 = and i24 %27, 30720, !dbg !5943
  %31 = icmp eq i24 %30, 16384, !dbg !5943
  br label %43, !dbg !5945

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5946
  %34 = load i24, i24* %33, align 4, !dbg !5947
  %35 = and i24 %34, -458753, !dbg !5947
  %36 = or i24 %35, 196608, !dbg !5947
  %37 = and i24 %34, 30720, !dbg !5948
  %38 = icmp ne i24 %37, 0, !dbg !5948
  br label %43, !dbg !5950

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5951
  %41 = load i24, i24* %40, align 4, !dbg !5952
  %42 = or i24 %41, 1, !dbg !5952
  br label %43, !dbg !5953

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5954
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5955
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %48, metadata !5915, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8 poison, metadata !5916, metadata !DIExpression()), !dbg !5919
  %49 = lshr i24 %44, 1, !dbg !5954
  %50 = and i24 %49, 1, !dbg !5954
  %51 = zext i24 %50 to i32, !dbg !5954
  %52 = or i32 %51, %47, !dbg !5954
  %53 = trunc i32 %52 to i24, !dbg !5954
  %54 = shl nuw nsw i24 %53, 1, !dbg !5954
  %55 = and i24 %44, -3, !dbg !5954
  %56 = or i24 %54, %55, !dbg !5954
  store i24 %56, i24* %46, align 4, !dbg !5954
  ret i8* %48, !dbg !5957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5958 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5962, metadata !DIExpression()), !dbg !5965
  %2 = load i8*, i8** %0, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata i8* %2, metadata !5963, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 0, metadata !5964, metadata !DIExpression()), !dbg !5965
  %3 = load i8, i8* %2, align 1, !dbg !5967
  %4 = zext i8 %3 to i32, !dbg !5968
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #23, !dbg !5969
  %6 = icmp eq i32 %5, 0, !dbg !5970
  br i1 %6, label %19, label %7, !dbg !5970

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i8* %10, metadata !5963, metadata !DIExpression()), !dbg !5965
  %11 = mul i32 %9, 10, !dbg !5971
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5973
  call void @llvm.dbg.value(metadata i8* %12, metadata !5963, metadata !DIExpression()), !dbg !5965
  %13 = add i32 %11, -48, !dbg !5974
  %14 = add i32 %13, %8, !dbg !5975
  call void @llvm.dbg.value(metadata i32 %14, metadata !5964, metadata !DIExpression()), !dbg !5965
  %15 = load i8, i8* %12, align 1, !dbg !5967
  %16 = zext i8 %15 to i32, !dbg !5968
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #23, !dbg !5969
  %18 = icmp eq i32 %17, 0, !dbg !5970
  br i1 %18, label %19, label %7, !dbg !5970, !llvm.loop !5976

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5965
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5965
  store i8* %20, i8** %0, align 4, !dbg !5978
  ret i32 %21, !dbg !5979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5982, metadata !DIExpression()), !dbg !5983
  %2 = add i32 %0, -48, !dbg !5984
  %3 = icmp ult i32 %2, 10, !dbg !5985
  %4 = zext i1 %3 to i32, !dbg !5985
  ret i32 %4, !dbg !5986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5987 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #22, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #22, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #22, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #22, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #22, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #22, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #22, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #22, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #22, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #22, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #22, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #22, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #22, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #22, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #22, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #22, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #22, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #22, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #22, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #22, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #22, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #22, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #22, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #22, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #22, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #22, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #22, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #22, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #22, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #22, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #22, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #22, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #22, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #22, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #22, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #22, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #22, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #22, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #22, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #22, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #22, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #22, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #22, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #22, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #22, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #22, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #22, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #22, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #22, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #22, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #22, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #22, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #22, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #22, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #22, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #22, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #22, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #22, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #22, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #22, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #22, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #22, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #22, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #22, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #22, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #22, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #22, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #22, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #22, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #22, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #22, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #22, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #22, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #22, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #22, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #22, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #22, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #22, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #22, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #22, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #22, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #22, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #22, !dbg !6153, !srcloc !6154
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #22, !dbg !6155, !srcloc !6156
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #22, !dbg !6157, !srcloc !6158
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #22, !dbg !6159, !srcloc !6160
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #22, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #22, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #22, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #22, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #22, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #22, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #22, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #22, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #22, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #22, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #22, !dbg !6181, !srcloc !6182
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #22, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #22, !dbg !6185, !srcloc !6186
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #22, !dbg !6187, !srcloc !6188
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #22, !dbg !6189, !srcloc !6190
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #22, !dbg !6191, !srcloc !6192
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #22, !dbg !6193, !srcloc !6194
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #22, !dbg !6195, !srcloc !6196
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #22, !dbg !6197, !srcloc !6198
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #22, !dbg !6199, !srcloc !6200
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #22, !dbg !6201, !srcloc !6202
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #22, !dbg !6203, !srcloc !6204
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #22, !dbg !6205, !srcloc !6206
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #22, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #22, !dbg !6209, !srcloc !6210
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #22, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #22, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #22, !dbg !6215, !srcloc !6216
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #22, !dbg !6217, !srcloc !6218
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #22, !dbg !6219, !srcloc !6220
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #22, !dbg !6221, !srcloc !6222
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #22, !dbg !6223, !srcloc !6224
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #22, !dbg !6225, !srcloc !6226
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #22, !dbg !6227, !srcloc !6228
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #22, !dbg !6229, !srcloc !6230
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #22, !dbg !6231, !srcloc !6232
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #22, !dbg !6233, !srcloc !6234
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #22, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #22, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #22, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #22, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #22, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #22, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #22, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #22, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #22, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #22, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #22, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #22, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #22, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #22, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #22, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #22, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #22, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #22, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #22, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #22, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #22, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #22, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #22, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #22, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #22, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #22, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #22, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #22, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #22, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #22, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #22, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #22, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #22, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #22, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #22, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #22, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #22, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #22, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #22, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #22, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #22, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #22, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #22, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #22, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #22, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #22, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #22, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #22, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #22, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #22, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #22, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #22, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #22, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #22, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #22, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #22, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #22, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #22, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #22, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #22, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #22, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #22, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #22, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #22, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #22, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #22, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #22, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #22, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #22, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #22, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #22, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #22, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #22, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #22, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #22, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #22, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #22, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #22, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #22, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #22, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #22, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #22, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #22, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #22, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #22, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #22, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #22, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #22, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #22, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #22, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #22, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #22, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #22, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #22, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #22, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #22, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #22, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #22, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #22, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #22, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #22, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #22, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #22, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #22, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #22, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #22, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #22, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #22, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #22, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #22, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #22, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #22, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #22, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #22, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #22, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #22, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #22, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #22, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #22, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #22, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #22, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #22, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #22, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #22, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #22, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #22, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #22, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #22, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #22, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #22, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #22, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #22, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #22, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #22, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #22, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #22, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #22, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #22, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #22, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #22, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #22, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #22, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #22, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #22, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #22, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #22, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #22, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #22, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #22, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #22, !dbg !6539, !srcloc !6540
  ret void, !dbg !6541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6544, metadata !DIExpression()), !dbg !6545
  tail call void @SOC_RdcInit() #23, !dbg !6546
  tail call void @SOC_ClockInit() #23, !dbg !6547
  tail call fastcc void @nxp_mcimx7_gpio_config() #23, !dbg !6548
  ret i32 0, !dbg !6549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #15 !dbg !6550 {
  tail call fastcc void @RDC_SetDomainID() #23, !dbg !6551
  ret void, !dbg !6552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !6553 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !6554
  tail call fastcc void @CCM_EnableRoot() #23, !dbg !6555
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #23, !dbg !6556
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #23, !dbg !6557
  tail call fastcc void @WDOG_DisablePowerdown() #23, !dbg !6558
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #23, !dbg !6559
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #23, !dbg !6560
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #23, !dbg !6561
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #23, !dbg !6562
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #23, !dbg !6563
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #23, !dbg !6564
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #23, !dbg !6565
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #23, !dbg !6566
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #23, !dbg !6567
  ret void, !dbg !6568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #15 !dbg !6569 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #23, !dbg !6570
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #23, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6573 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !6578, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i32 %0, metadata !6579, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i8 %1, metadata !6580, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i8 0, metadata !6581, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i8 0, metadata !6582, metadata !DIExpression()), !dbg !6583
  %3 = zext i8 %1 to i32, !dbg !6584
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !6585
  store volatile i32 %3, i32* %4, align 4, !dbg !6586
  ret void, !dbg !6587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6588 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !6592, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i32 %0, metadata !6593, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i32 %1, metadata !6594, metadata !DIExpression()), !dbg !6595
  %3 = inttoptr i32 %0 to i32*, !dbg !6596
  store volatile i32 %1, i32* %3, align 4, !dbg !6597
  ret void, !dbg !6598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #15 !dbg !6599 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !6603, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i32 809024384, metadata !6604, metadata !DIExpression()), !dbg !6605
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !6606
  ret void, !dbg !6607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #15 !dbg !6608 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !6613, metadata !DIExpression()), !dbg !6614
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !6615
  %2 = and i16 %1, -2, !dbg !6615
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !6615
  ret void, !dbg !6616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #15 !dbg !6617 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !6621, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 1, metadata !6622, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 1, metadata !6623, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i8 0, metadata !6624, metadata !DIExpression()), !dbg !6625
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !6626
  ret void, !dbg !6627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6628 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6631, metadata !DIExpression()), !dbg !6639
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6640
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6632, metadata !DIExpression()), !dbg !6641
  call void @llvm.va_start(i8* nonnull %3), !dbg !6642
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6643
  %5 = load i32, i32* %4, align 4, !dbg !6643
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6643
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6643
  call void @llvm.va_end(i8* nonnull %3), !dbg !6644
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6645
  ret void, !dbg !6645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6646 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i8* %0, metadata !6650, metadata !DIExpression()), !dbg !6652
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6653
  ret void, !dbg !6654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6659, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata i8* %1, metadata !6660, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata i32 %2, metadata !6661, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata i8* %1, metadata !6662, metadata !DIExpression()), !dbg !6663
  %4 = icmp eq i32 %2, 0, !dbg !6664
  br i1 %4, label %14, label %5, !dbg !6665

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.61(i32 noundef %0) #23, !dbg !6663
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6665

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata i32 %10, metadata !6661, metadata !DIExpression()), !dbg !6663
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i32 noundef %7) #24, !dbg !6666
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #23, !dbg !6668
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %11, metadata !6661, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.value(metadata i8* %12, metadata !6662, metadata !DIExpression()), !dbg !6663
  br i1 %13, label %14, label %8, !dbg !6669, !llvm.loop !6670

14:                                               ; preds = %8, %3
  ret void, !dbg !6672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.61(i32 noundef %0) unnamed_addr #3 !dbg !6673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6675, metadata !DIExpression()), !dbg !6676
  %2 = add i32 %0, -1, !dbg !6677
  %3 = icmp ult i32 %2, 4, !dbg !6677
  %4 = shl i32 %2, 3, !dbg !6677
  %5 = lshr i32 1145657157, %4, !dbg !6677
  %6 = trunc i32 %5 to i8, !dbg !6677
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6677
  ret i8 %7, !dbg !6678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6679 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6683, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.value(metadata i32 %1, metadata !6684, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.value(metadata i32 0, metadata !6685, metadata !DIExpression()), !dbg !6695
  br label %4, !dbg !6696

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.63, i32 0, i32 0)) #24, !dbg !6697
  call void @llvm.dbg.value(metadata i32 0, metadata !6687, metadata !DIExpression()), !dbg !6698
  br label %16, !dbg !6699

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6685, metadata !DIExpression()), !dbg !6695
  %6 = icmp ult i32 %5, %1, !dbg !6700
  br i1 %6, label %7, label %11, !dbg !6704

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6705
  %9 = load i8, i8* %8, align 1, !dbg !6705
  %10 = zext i8 %9 to i32, !dbg !6707
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.64, i32 0, i32 0), i32 noundef %10) #24, !dbg !6708
  br label %12, !dbg !6709

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.65, i32 0, i32 0)) #24, !dbg !6710
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %13, metadata !6685, metadata !DIExpression()), !dbg !6695
  %14 = icmp eq i32 %13, 8, !dbg !6713
  br i1 %14, label %3, label %4, !dbg !6696, !llvm.loop !6714

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.66, i32 0, i32 0)) #24, !dbg !6716
  ret void, !dbg !6717

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6687, metadata !DIExpression()), !dbg !6698
  %18 = icmp ult i32 %17, %1, !dbg !6718
  br i1 %18, label %19, label %26, !dbg !6719

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6720
  %21 = load i8, i8* %20, align 1, !dbg !6720
  call void @llvm.dbg.value(metadata i8 %21, metadata !6689, metadata !DIExpression()), !dbg !6721
  %22 = zext i8 %21 to i32, !dbg !6722
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #23, !dbg !6723
  %24 = icmp eq i32 %23, 0, !dbg !6724
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6723
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.67, i32 0, i32 0), i32 noundef %25) #24, !dbg !6725
  br label %27, !dbg !6726

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.68, i32 0, i32 0)) #24, !dbg !6727
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6729
  call void @llvm.dbg.value(metadata i32 %28, metadata !6687, metadata !DIExpression()), !dbg !6698
  %29 = icmp eq i32 %28, 8, !dbg !6730
  br i1 %29, label %15, label %16, !dbg !6699, !llvm.loop !6731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  %2 = add i32 %0, -32, !dbg !6737
  %3 = icmp ult i32 %2, 95, !dbg !6737
  %4 = zext i1 %3 to i32, !dbg !6737
  ret i32 %4, !dbg !6738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6744, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32 %1, metadata !6745, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i8* %2, metadata !6746, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32 %3, metadata !6747, metadata !DIExpression()), !dbg !6748
  %5 = icmp ugt i32 %3, %1, !dbg !6749
  br i1 %5, label %8, label %6, !dbg !6751

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #24, !dbg !6752
  br label %8, !dbg !6754

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !6755
  ret i32 %9, !dbg !6756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6761, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i8 %1, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i32 %2, metadata !6763, metadata !DIExpression()), !dbg !6764
  %4 = zext i8 %1 to i32, !dbg !6765
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #24, !dbg !6766
  ret void, !dbg !6767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !6768 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6772, metadata !DIExpression()), !dbg !6773
  %2 = shl i8 %0, 1, !dbg !6774
  %3 = icmp slt i8 %0, 0, !dbg !6775
  %4 = select i1 %3, i8 27, i8 0, !dbg !6775
  %5 = xor i8 %4, %2, !dbg !6776
  ret i8 %5, !dbg !6777
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !6778 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6782, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i8* %1, metadata !6783, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i32 %2, metadata !6784, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i8* %0, metadata !6785, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i8* %1, metadata !6786, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i8 0, metadata !6787, metadata !DIExpression()), !dbg !6790
  call void @llvm.dbg.value(metadata i32 0, metadata !6788, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8 undef, metadata !6787, metadata !DIExpression()), !dbg !6790
  %4 = icmp eq i32 %2, 0, !dbg !6792
  br i1 %4, label %5, label %7, !dbg !6794

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !6795

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6788, metadata !DIExpression()), !dbg !6791
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !6796
  %11 = load i8, i8* %10, align 1, !dbg !6796
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !6798
  %13 = load i8, i8* %12, align 1, !dbg !6798
  %14 = xor i8 %13, %11, !dbg !6799
  %15 = zext i8 %14 to i32, !dbg !6799
  %16 = or i32 %9, %15, !dbg !6800
  call void @llvm.dbg.value(metadata i32 %16, metadata !6787, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6790
  %17 = add nuw i32 %8, 1, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %17, metadata !6788, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8 undef, metadata !6787, metadata !DIExpression()), !dbg !6790
  %18 = icmp eq i32 %17, %2, !dbg !6792
  br i1 %18, label %5, label %7, !dbg !6794, !llvm.loop !6802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !6804 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !6808, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i8* %1, metadata !6809, metadata !DIExpression()), !dbg !6810
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #24, !dbg !6811
  ret i32 %3, !dbg !6812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !6813 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !6818, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %1, metadata !6819, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !6820, metadata !DIExpression()), !dbg !6823
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !6824
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #22, !dbg !6824
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !6821, metadata !DIExpression()), !dbg !6825
  %6 = icmp eq i8* %0, null, !dbg !6826
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !6828
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !6828
  br i1 %10, label %23, label %11, !dbg !6828

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #24, !dbg !6829
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !6830
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #23, !dbg !6831
  call void @llvm.dbg.value(metadata i32 9, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %14, !dbg !6832

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6822, metadata !DIExpression()), !dbg !6823
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #23, !dbg !6834
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #23, !dbg !6837
  %16 = shl i32 %15, 2, !dbg !6838
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !6839
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #23, !dbg !6840
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #23, !dbg !6841
  %18 = add nsw i32 %15, -1, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %18, metadata !6822, metadata !DIExpression()), !dbg !6823
  %19 = icmp eq i32 %18, 0, !dbg !6843
  br i1 %19, label %20, label %14, !dbg !6832, !llvm.loop !6844

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !6846
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #23, !dbg !6847
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #23, !dbg !6848
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #23, !dbg !6849
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #24, !dbg !6850
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #24, !dbg !6851
  br label %23, !dbg !6852

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !6823
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #22, !dbg !6853
  ret i32 %24, !dbg !6853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !6854 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6859, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32* %1, metadata !6860, metadata !DIExpression()), !dbg !6861
  %3 = load i32, i32* %1, align 4, !dbg !6862
  %4 = lshr i32 %3, 24, !dbg !6863
  %5 = load i8, i8* %0, align 1, !dbg !6864
  %6 = trunc i32 %4 to i8, !dbg !6864
  %7 = xor i8 %5, %6, !dbg !6864
  store i8 %7, i8* %0, align 1, !dbg !6864
  %8 = load i32, i32* %1, align 4, !dbg !6865
  %9 = lshr i32 %8, 16, !dbg !6866
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !6867
  %11 = load i8, i8* %10, align 1, !dbg !6868
  %12 = trunc i32 %9 to i8, !dbg !6868
  %13 = xor i8 %11, %12, !dbg !6868
  store i8 %13, i8* %10, align 1, !dbg !6868
  %14 = load i32, i32* %1, align 4, !dbg !6869
  %15 = lshr i32 %14, 8, !dbg !6870
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !6871
  %17 = load i8, i8* %16, align 1, !dbg !6872
  %18 = trunc i32 %15 to i8, !dbg !6872
  %19 = xor i8 %17, %18, !dbg !6872
  store i8 %19, i8* %16, align 1, !dbg !6872
  %20 = load i32, i32* %1, align 4, !dbg !6873
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !6874
  %22 = load i8, i8* %21, align 1, !dbg !6875
  %23 = trunc i32 %20 to i8, !dbg !6875
  %24 = xor i8 %22, %23, !dbg !6875
  store i8 %24, i8* %21, align 1, !dbg !6875
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !6876
  %26 = load i32, i32* %25, align 4, !dbg !6876
  %27 = lshr i32 %26, 24, !dbg !6877
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !6878
  %29 = load i8, i8* %28, align 1, !dbg !6879
  %30 = trunc i32 %27 to i8, !dbg !6879
  %31 = xor i8 %29, %30, !dbg !6879
  store i8 %31, i8* %28, align 1, !dbg !6879
  %32 = load i32, i32* %25, align 4, !dbg !6880
  %33 = lshr i32 %32, 16, !dbg !6881
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !6882
  %35 = load i8, i8* %34, align 1, !dbg !6883
  %36 = trunc i32 %33 to i8, !dbg !6883
  %37 = xor i8 %35, %36, !dbg !6883
  store i8 %37, i8* %34, align 1, !dbg !6883
  %38 = load i32, i32* %25, align 4, !dbg !6884
  %39 = lshr i32 %38, 8, !dbg !6885
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !6886
  %41 = load i8, i8* %40, align 1, !dbg !6887
  %42 = trunc i32 %39 to i8, !dbg !6887
  %43 = xor i8 %41, %42, !dbg !6887
  store i8 %43, i8* %40, align 1, !dbg !6887
  %44 = load i32, i32* %25, align 4, !dbg !6888
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !6889
  %46 = load i8, i8* %45, align 1, !dbg !6890
  %47 = trunc i32 %44 to i8, !dbg !6890
  %48 = xor i8 %46, %47, !dbg !6890
  store i8 %48, i8* %45, align 1, !dbg !6890
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !6891
  %50 = load i32, i32* %49, align 4, !dbg !6891
  %51 = lshr i32 %50, 24, !dbg !6892
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !6893
  %53 = load i8, i8* %52, align 1, !dbg !6894
  %54 = trunc i32 %51 to i8, !dbg !6894
  %55 = xor i8 %53, %54, !dbg !6894
  store i8 %55, i8* %52, align 1, !dbg !6894
  %56 = load i32, i32* %49, align 4, !dbg !6895
  %57 = lshr i32 %56, 16, !dbg !6896
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !6897
  %59 = load i8, i8* %58, align 1, !dbg !6898
  %60 = trunc i32 %57 to i8, !dbg !6898
  %61 = xor i8 %59, %60, !dbg !6898
  store i8 %61, i8* %58, align 1, !dbg !6898
  %62 = load i32, i32* %49, align 4, !dbg !6899
  %63 = lshr i32 %62, 8, !dbg !6900
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !6901
  %65 = load i8, i8* %64, align 1, !dbg !6902
  %66 = trunc i32 %63 to i8, !dbg !6902
  %67 = xor i8 %65, %66, !dbg !6902
  store i8 %67, i8* %64, align 1, !dbg !6902
  %68 = load i32, i32* %49, align 4, !dbg !6903
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !6904
  %70 = load i8, i8* %69, align 1, !dbg !6905
  %71 = trunc i32 %68 to i8, !dbg !6905
  %72 = xor i8 %70, %71, !dbg !6905
  store i8 %72, i8* %69, align 1, !dbg !6905
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !6906
  %74 = load i32, i32* %73, align 4, !dbg !6906
  %75 = lshr i32 %74, 24, !dbg !6907
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6908
  %77 = load i8, i8* %76, align 1, !dbg !6909
  %78 = trunc i32 %75 to i8, !dbg !6909
  %79 = xor i8 %77, %78, !dbg !6909
  store i8 %79, i8* %76, align 1, !dbg !6909
  %80 = load i32, i32* %73, align 4, !dbg !6910
  %81 = lshr i32 %80, 16, !dbg !6911
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !6912
  %83 = load i8, i8* %82, align 1, !dbg !6913
  %84 = trunc i32 %81 to i8, !dbg !6913
  %85 = xor i8 %83, %84, !dbg !6913
  store i8 %85, i8* %82, align 1, !dbg !6913
  %86 = load i32, i32* %73, align 4, !dbg !6914
  %87 = lshr i32 %86, 8, !dbg !6915
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !6916
  %89 = load i8, i8* %88, align 1, !dbg !6917
  %90 = trunc i32 %87 to i8, !dbg !6917
  %91 = xor i8 %89, %90, !dbg !6917
  store i8 %91, i8* %88, align 1, !dbg !6917
  %92 = load i32, i32* %73, align 4, !dbg !6918
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !6919
  %94 = load i8, i8* %93, align 1, !dbg !6920
  %95 = trunc i32 %92 to i8, !dbg !6920
  %96 = xor i8 %94, %95, !dbg !6920
  store i8 %96, i8* %93, align 1, !dbg !6920
  ret void, !dbg !6921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !6922 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !6926, metadata !DIExpression()), !dbg !6928
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !6929
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #22, !dbg !6929
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !6927, metadata !DIExpression()), !dbg !6930
  %4 = load i8, i8* %0, align 1, !dbg !6931
  store i8 %4, i8* %3, align 1, !dbg !6932
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !6933
  %6 = load i8, i8* %5, align 1, !dbg !6933
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !6934
  store i8 %6, i8* %7, align 1, !dbg !6935
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !6936
  %9 = load i8, i8* %8, align 1, !dbg !6936
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !6937
  store i8 %9, i8* %10, align 1, !dbg !6938
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !6939
  %12 = load i8, i8* %11, align 1, !dbg !6939
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !6940
  store i8 %12, i8* %13, align 1, !dbg !6941
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !6942
  %15 = load i8, i8* %14, align 1, !dbg !6942
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !6943
  store i8 %15, i8* %16, align 1, !dbg !6944
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !6945
  %18 = load i8, i8* %17, align 1, !dbg !6945
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !6946
  store i8 %18, i8* %19, align 1, !dbg !6947
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !6948
  %21 = load i8, i8* %20, align 1, !dbg !6948
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !6949
  store i8 %21, i8* %22, align 1, !dbg !6950
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !6951
  %24 = load i8, i8* %23, align 1, !dbg !6951
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !6952
  store i8 %24, i8* %25, align 1, !dbg !6953
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !6954
  %27 = load i8, i8* %26, align 1, !dbg !6954
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !6955
  store i8 %27, i8* %28, align 1, !dbg !6956
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !6957
  %30 = load i8, i8* %29, align 1, !dbg !6957
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !6958
  store i8 %30, i8* %31, align 1, !dbg !6959
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !6960
  %33 = load i8, i8* %32, align 1, !dbg !6960
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !6961
  store i8 %33, i8* %34, align 1, !dbg !6962
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !6963
  %36 = load i8, i8* %35, align 1, !dbg !6963
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !6964
  store i8 %36, i8* %37, align 1, !dbg !6965
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6966
  %39 = load i8, i8* %38, align 1, !dbg !6966
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !6967
  store i8 %39, i8* %40, align 1, !dbg !6968
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !6969
  %42 = load i8, i8* %41, align 1, !dbg !6969
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !6970
  store i8 %42, i8* %43, align 1, !dbg !6971
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !6972
  %45 = load i8, i8* %44, align 1, !dbg !6972
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !6973
  store i8 %45, i8* %46, align 1, !dbg !6974
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !6975
  %48 = load i8, i8* %47, align 1, !dbg !6975
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !6976
  store i8 %48, i8* %49, align 1, !dbg !6977
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #24, !dbg !6978
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #22, !dbg !6979
  ret void, !dbg !6979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !6980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6982, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 0, metadata !6983, metadata !DIExpression()), !dbg !6984
  br label %2, !dbg !6985

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6983, metadata !DIExpression()), !dbg !6984
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6987
  %5 = load i8, i8* %4, align 1, !dbg !6987
  %6 = zext i8 %5 to i32, !dbg !6990
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !6990
  %8 = load i8, i8* %7, align 1, !dbg !6990
  store i8 %8, i8* %4, align 1, !dbg !6991
  %9 = add nuw nsw i32 %3, 1, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %9, metadata !6983, metadata !DIExpression()), !dbg !6984
  %10 = icmp eq i32 %9, 16, !dbg !6993
  br i1 %10, label %11, label %2, !dbg !6985, !llvm.loop !6994

11:                                               ; preds = %2
  ret void, !dbg !6996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !6997 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !6999, metadata !DIExpression()), !dbg !7001
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7002
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7002
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7000, metadata !DIExpression()), !dbg !7003
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #23, !dbg !7004
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7005
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7006
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #23, !dbg !7007
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7008
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7009
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #23, !dbg !7010
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7011
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7012
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #23, !dbg !7013
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #24, !dbg !7014
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7015
  ret void, !dbg !7015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7020, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i8* %1, metadata !7021, metadata !DIExpression()), !dbg !7022
  %3 = load i8, i8* %1, align 1, !dbg !7023
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #24, !dbg !7023
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #24, !dbg !7023
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #24, !dbg !7023
  %7 = load i8, i8* %1, align 1, !dbg !7023
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #24, !dbg !7023
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #24, !dbg !7023
  %10 = load i8, i8* %1, align 1, !dbg !7023
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #24, !dbg !7023
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7024
  %13 = load i8, i8* %12, align 1, !dbg !7024
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #24, !dbg !7024
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #24, !dbg !7024
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #24, !dbg !7024
  %17 = load i8, i8* %12, align 1, !dbg !7024
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #24, !dbg !7024
  %19 = load i8, i8* %12, align 1, !dbg !7024
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7025
  %21 = load i8, i8* %20, align 1, !dbg !7025
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #24, !dbg !7025
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #24, !dbg !7025
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #24, !dbg !7025
  %25 = load i8, i8* %20, align 1, !dbg !7025
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #24, !dbg !7025
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #24, !dbg !7025
  %28 = load i8, i8* %20, align 1, !dbg !7025
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7026
  %30 = load i8, i8* %29, align 1, !dbg !7026
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #24, !dbg !7026
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #24, !dbg !7026
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #24, !dbg !7026
  %34 = load i8, i8* %29, align 1, !dbg !7026
  %35 = xor i8 %9, %6, !dbg !7026
  %36 = xor i8 %35, %11, !dbg !7025
  %37 = xor i8 %36, %16, !dbg !7025
  %38 = xor i8 %37, %18, !dbg !7024
  %39 = xor i8 %38, %19, !dbg !7024
  %40 = xor i8 %39, %24, !dbg !7023
  %41 = xor i8 %40, %27, !dbg !7023
  %42 = xor i8 %41, %28, !dbg !7027
  %43 = xor i8 %42, %33, !dbg !7028
  %44 = xor i8 %43, %34, !dbg !7029
  store i8 %44, i8* %0, align 1, !dbg !7030
  %45 = load i8, i8* %1, align 1, !dbg !7031
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #24, !dbg !7031
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #24, !dbg !7031
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #24, !dbg !7031
  %49 = load i8, i8* %1, align 1, !dbg !7031
  %50 = load i8, i8* %12, align 1, !dbg !7032
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #24, !dbg !7032
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #24, !dbg !7032
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #24, !dbg !7032
  %54 = load i8, i8* %12, align 1, !dbg !7032
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #24, !dbg !7032
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #24, !dbg !7032
  %57 = load i8, i8* %12, align 1, !dbg !7032
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #24, !dbg !7032
  %59 = load i8, i8* %20, align 1, !dbg !7033
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #24, !dbg !7033
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #24, !dbg !7033
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #24, !dbg !7033
  %63 = load i8, i8* %20, align 1, !dbg !7033
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #24, !dbg !7033
  %65 = load i8, i8* %20, align 1, !dbg !7033
  %66 = load i8, i8* %29, align 1, !dbg !7034
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #24, !dbg !7034
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #24, !dbg !7034
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #24, !dbg !7034
  %70 = load i8, i8* %29, align 1, !dbg !7034
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #24, !dbg !7034
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #24, !dbg !7034
  %73 = load i8, i8* %29, align 1, !dbg !7034
  %74 = xor i8 %49, %48, !dbg !7034
  %75 = xor i8 %74, %53, !dbg !7034
  %76 = xor i8 %75, %56, !dbg !7033
  %77 = xor i8 %76, %58, !dbg !7033
  %78 = xor i8 %77, %62, !dbg !7032
  %79 = xor i8 %78, %64, !dbg !7032
  %80 = xor i8 %79, %65, !dbg !7031
  %81 = xor i8 %80, %69, !dbg !7035
  %82 = xor i8 %81, %72, !dbg !7036
  %83 = xor i8 %82, %73, !dbg !7037
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7038
  store i8 %83, i8* %84, align 1, !dbg !7039
  %85 = load i8, i8* %1, align 1, !dbg !7040
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #24, !dbg !7040
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #24, !dbg !7040
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #24, !dbg !7040
  %89 = load i8, i8* %1, align 1, !dbg !7040
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #24, !dbg !7040
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #24, !dbg !7040
  %92 = load i8, i8* %1, align 1, !dbg !7040
  %93 = load i8, i8* %12, align 1, !dbg !7041
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #24, !dbg !7041
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #24, !dbg !7041
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #24, !dbg !7041
  %97 = load i8, i8* %12, align 1, !dbg !7041
  %98 = load i8, i8* %20, align 1, !dbg !7042
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #24, !dbg !7042
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #24, !dbg !7042
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #24, !dbg !7042
  %102 = load i8, i8* %20, align 1, !dbg !7042
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #24, !dbg !7042
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #24, !dbg !7042
  %105 = load i8, i8* %20, align 1, !dbg !7042
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #24, !dbg !7042
  %107 = load i8, i8* %29, align 1, !dbg !7043
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #24, !dbg !7043
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #24, !dbg !7043
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #24, !dbg !7043
  %111 = load i8, i8* %29, align 1, !dbg !7043
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #24, !dbg !7043
  %113 = load i8, i8* %29, align 1, !dbg !7043
  %114 = xor i8 %91, %88, !dbg !7043
  %115 = xor i8 %114, %92, !dbg !7043
  %116 = xor i8 %115, %96, !dbg !7042
  %117 = xor i8 %116, %97, !dbg !7042
  %118 = xor i8 %117, %101, !dbg !7041
  %119 = xor i8 %118, %104, !dbg !7040
  %120 = xor i8 %119, %106, !dbg !7040
  %121 = xor i8 %120, %110, !dbg !7044
  %122 = xor i8 %121, %112, !dbg !7045
  %123 = xor i8 %122, %113, !dbg !7046
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7047
  store i8 %123, i8* %124, align 1, !dbg !7048
  %125 = load i8, i8* %1, align 1, !dbg !7049
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #24, !dbg !7049
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #24, !dbg !7049
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #24, !dbg !7049
  %129 = load i8, i8* %1, align 1, !dbg !7049
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #24, !dbg !7049
  %131 = load i8, i8* %1, align 1, !dbg !7049
  %132 = load i8, i8* %12, align 1, !dbg !7050
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #24, !dbg !7050
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #24, !dbg !7050
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #24, !dbg !7050
  %136 = load i8, i8* %12, align 1, !dbg !7050
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #24, !dbg !7050
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #24, !dbg !7050
  %139 = load i8, i8* %12, align 1, !dbg !7050
  %140 = load i8, i8* %20, align 1, !dbg !7051
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #24, !dbg !7051
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #24, !dbg !7051
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #24, !dbg !7051
  %144 = load i8, i8* %20, align 1, !dbg !7051
  %145 = load i8, i8* %29, align 1, !dbg !7052
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #24, !dbg !7052
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #24, !dbg !7052
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #24, !dbg !7052
  %149 = load i8, i8* %29, align 1, !dbg !7052
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #24, !dbg !7052
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #24, !dbg !7052
  %152 = load i8, i8* %29, align 1, !dbg !7052
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #24, !dbg !7052
  %154 = xor i8 %130, %128, !dbg !7052
  %155 = xor i8 %154, %131, !dbg !7052
  %156 = xor i8 %155, %135, !dbg !7051
  %157 = xor i8 %156, %138, !dbg !7050
  %158 = xor i8 %157, %139, !dbg !7050
  %159 = xor i8 %158, %143, !dbg !7049
  %160 = xor i8 %159, %144, !dbg !7049
  %161 = xor i8 %160, %148, !dbg !7053
  %162 = xor i8 %161, %151, !dbg !7054
  %163 = xor i8 %162, %153, !dbg !7055
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7056
  store i8 %163, i8* %164, align 1, !dbg !7057
  ret void, !dbg !7058
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7059 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7063, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i8* %1, metadata !7064, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7065, metadata !DIExpression()), !dbg !7072
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7073
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7075
  br i1 %5, label %80, label %9, !dbg !7075

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7069, metadata !DIExpression()), !dbg !7071
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7076
  br label %36, !dbg !7080

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7069, metadata !DIExpression()), !dbg !7071
  %11 = shl nuw nsw i32 %10, 2, !dbg !7081
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7085
  %13 = load i8, i8* %12, align 1, !dbg !7085
  %14 = zext i8 %13 to i32, !dbg !7085
  %15 = shl nuw i32 %14, 24, !dbg !7086
  %16 = or i32 %11, 1, !dbg !7087
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7088
  %18 = load i8, i8* %17, align 1, !dbg !7088
  %19 = zext i8 %18 to i32, !dbg !7088
  %20 = shl nuw nsw i32 %19, 16, !dbg !7089
  %21 = or i32 %20, %15, !dbg !7090
  %22 = or i32 %11, 2, !dbg !7091
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7092
  %24 = load i8, i8* %23, align 1, !dbg !7092
  %25 = zext i8 %24 to i32, !dbg !7092
  %26 = shl nuw nsw i32 %25, 8, !dbg !7093
  %27 = or i32 %21, %26, !dbg !7094
  %28 = or i32 %11, 3, !dbg !7095
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7096
  %30 = load i8, i8* %29, align 1, !dbg !7096
  %31 = zext i8 %30 to i32, !dbg !7097
  %32 = or i32 %27, %31, !dbg !7098
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7099
  store i32 %32, i32* %33, align 4, !dbg !7100
  %34 = add nuw nsw i32 %10, 1, !dbg !7101
  call void @llvm.dbg.value(metadata i32 %34, metadata !7069, metadata !DIExpression()), !dbg !7071
  %35 = icmp eq i32 %34, 4, !dbg !7102
  br i1 %35, label %6, label %9, !dbg !7103, !llvm.loop !7104

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7076
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7069, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %37, metadata !7070, metadata !DIExpression()), !dbg !7071
  %39 = and i32 %38, 3, !dbg !7106
  %40 = icmp eq i32 %39, 0, !dbg !7108
  br i1 %40, label %41, label %71, !dbg !7109

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #23, !dbg !7110
  %43 = lshr i32 %42, 24, !dbg !7110
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7110
  %45 = load i8, i8* %44, align 1, !dbg !7110
  %46 = zext i8 %45 to i32, !dbg !7110
  %47 = shl nuw i32 %46, 24, !dbg !7110
  %48 = lshr i32 %42, 16, !dbg !7110
  %49 = and i32 %48, 255, !dbg !7110
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7110
  %51 = load i8, i8* %50, align 1, !dbg !7110
  %52 = zext i8 %51 to i32, !dbg !7110
  %53 = shl nuw nsw i32 %52, 16, !dbg !7110
  %54 = or i32 %53, %47, !dbg !7110
  %55 = lshr i32 %42, 8, !dbg !7110
  %56 = and i32 %55, 255, !dbg !7110
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7110
  %58 = load i8, i8* %57, align 1, !dbg !7110
  %59 = zext i8 %58 to i32, !dbg !7110
  %60 = shl nuw nsw i32 %59, 8, !dbg !7110
  %61 = or i32 %54, %60, !dbg !7110
  %62 = and i32 %42, 255, !dbg !7110
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7110
  %64 = load i8, i8* %63, align 1, !dbg !7110
  %65 = zext i8 %64 to i32, !dbg !7110
  %66 = or i32 %61, %65, !dbg !7110
  %67 = lshr i32 %38, 2, !dbg !7112
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7113
  %69 = load i32, i32* %68, align 4, !dbg !7113
  %70 = xor i32 %66, %69, !dbg !7114
  call void @llvm.dbg.value(metadata i32 %70, metadata !7070, metadata !DIExpression()), !dbg !7071
  br label %71, !dbg !7115

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7116
  call void @llvm.dbg.value(metadata i32 %72, metadata !7070, metadata !DIExpression()), !dbg !7071
  %73 = add nsw i32 %38, -4, !dbg !7117
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7118
  %75 = load i32, i32* %74, align 4, !dbg !7118
  %76 = xor i32 %75, %72, !dbg !7119
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7120
  store i32 %76, i32* %77, align 4, !dbg !7121
  %78 = add nuw nsw i32 %38, 1, !dbg !7122
  call void @llvm.dbg.value(metadata i32 %78, metadata !7069, metadata !DIExpression()), !dbg !7071
  %79 = icmp eq i32 %78, 44, !dbg !7123
  br i1 %79, label %80, label %36, !dbg !7080, !llvm.loop !7124

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7071
  ret i32 %81, !dbg !7126
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7131, metadata !DIExpression()), !dbg !7132
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7133
  ret i32 %2, !dbg !7134
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7135 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7140, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i8* %1, metadata !7141, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7142, metadata !DIExpression()), !dbg !7145
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7146
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #22, !dbg !7146
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7143, metadata !DIExpression()), !dbg !7147
  %6 = icmp eq i8* %0, null, !dbg !7148
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7150
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7150
  br i1 %10, label %23, label %11, !dbg !7150

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #24, !dbg !7151
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7152
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %13) #23, !dbg !7153
  call void @llvm.dbg.value(metadata i32 0, metadata !7144, metadata !DIExpression()), !dbg !7145
  br label %14, !dbg !7154

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7144, metadata !DIExpression()), !dbg !7145
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #23, !dbg !7156
  call fastcc void @shift_rows(i8* noundef nonnull %5) #23, !dbg !7159
  call fastcc void @mix_columns(i8* noundef nonnull %5) #23, !dbg !7160
  %16 = add nuw nsw i32 %15, 1, !dbg !7161
  %17 = shl nuw nsw i32 %16, 2, !dbg !7162
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7163
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %18) #23, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %16, metadata !7144, metadata !DIExpression()), !dbg !7145
  %19 = icmp eq i32 %16, 9, !dbg !7165
  br i1 %19, label %20, label %14, !dbg !7154, !llvm.loop !7166

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #23, !dbg !7168
  call fastcc void @shift_rows(i8* noundef nonnull %5) #23, !dbg !7169
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7170
  call fastcc void @add_round_key.71(i8* noundef nonnull %5, i32* noundef nonnull %21) #23, !dbg !7171
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #24, !dbg !7172
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #24, !dbg !7173
  br label %23, !dbg !7174

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #22, !dbg !7175
  ret i32 %24, !dbg !7175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.71(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7178, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i32* %1, metadata !7179, metadata !DIExpression()), !dbg !7180
  %3 = load i32, i32* %1, align 4, !dbg !7181
  %4 = lshr i32 %3, 24, !dbg !7182
  %5 = load i8, i8* %0, align 1, !dbg !7183
  %6 = trunc i32 %4 to i8, !dbg !7183
  %7 = xor i8 %5, %6, !dbg !7183
  store i8 %7, i8* %0, align 1, !dbg !7183
  %8 = load i32, i32* %1, align 4, !dbg !7184
  %9 = lshr i32 %8, 16, !dbg !7185
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7186
  %11 = load i8, i8* %10, align 1, !dbg !7187
  %12 = trunc i32 %9 to i8, !dbg !7187
  %13 = xor i8 %11, %12, !dbg !7187
  store i8 %13, i8* %10, align 1, !dbg !7187
  %14 = load i32, i32* %1, align 4, !dbg !7188
  %15 = lshr i32 %14, 8, !dbg !7189
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7190
  %17 = load i8, i8* %16, align 1, !dbg !7191
  %18 = trunc i32 %15 to i8, !dbg !7191
  %19 = xor i8 %17, %18, !dbg !7191
  store i8 %19, i8* %16, align 1, !dbg !7191
  %20 = load i32, i32* %1, align 4, !dbg !7192
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7193
  %22 = load i8, i8* %21, align 1, !dbg !7194
  %23 = trunc i32 %20 to i8, !dbg !7194
  %24 = xor i8 %22, %23, !dbg !7194
  store i8 %24, i8* %21, align 1, !dbg !7194
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7195
  %26 = load i32, i32* %25, align 4, !dbg !7195
  %27 = lshr i32 %26, 24, !dbg !7196
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7197
  %29 = load i8, i8* %28, align 1, !dbg !7198
  %30 = trunc i32 %27 to i8, !dbg !7198
  %31 = xor i8 %29, %30, !dbg !7198
  store i8 %31, i8* %28, align 1, !dbg !7198
  %32 = load i32, i32* %25, align 4, !dbg !7199
  %33 = lshr i32 %32, 16, !dbg !7200
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7201
  %35 = load i8, i8* %34, align 1, !dbg !7202
  %36 = trunc i32 %33 to i8, !dbg !7202
  %37 = xor i8 %35, %36, !dbg !7202
  store i8 %37, i8* %34, align 1, !dbg !7202
  %38 = load i32, i32* %25, align 4, !dbg !7203
  %39 = lshr i32 %38, 8, !dbg !7204
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7205
  %41 = load i8, i8* %40, align 1, !dbg !7206
  %42 = trunc i32 %39 to i8, !dbg !7206
  %43 = xor i8 %41, %42, !dbg !7206
  store i8 %43, i8* %40, align 1, !dbg !7206
  %44 = load i32, i32* %25, align 4, !dbg !7207
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7208
  %46 = load i8, i8* %45, align 1, !dbg !7209
  %47 = trunc i32 %44 to i8, !dbg !7209
  %48 = xor i8 %46, %47, !dbg !7209
  store i8 %48, i8* %45, align 1, !dbg !7209
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7210
  %50 = load i32, i32* %49, align 4, !dbg !7210
  %51 = lshr i32 %50, 24, !dbg !7211
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7212
  %53 = load i8, i8* %52, align 1, !dbg !7213
  %54 = trunc i32 %51 to i8, !dbg !7213
  %55 = xor i8 %53, %54, !dbg !7213
  store i8 %55, i8* %52, align 1, !dbg !7213
  %56 = load i32, i32* %49, align 4, !dbg !7214
  %57 = lshr i32 %56, 16, !dbg !7215
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7216
  %59 = load i8, i8* %58, align 1, !dbg !7217
  %60 = trunc i32 %57 to i8, !dbg !7217
  %61 = xor i8 %59, %60, !dbg !7217
  store i8 %61, i8* %58, align 1, !dbg !7217
  %62 = load i32, i32* %49, align 4, !dbg !7218
  %63 = lshr i32 %62, 8, !dbg !7219
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7220
  %65 = load i8, i8* %64, align 1, !dbg !7221
  %66 = trunc i32 %63 to i8, !dbg !7221
  %67 = xor i8 %65, %66, !dbg !7221
  store i8 %67, i8* %64, align 1, !dbg !7221
  %68 = load i32, i32* %49, align 4, !dbg !7222
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7223
  %70 = load i8, i8* %69, align 1, !dbg !7224
  %71 = trunc i32 %68 to i8, !dbg !7224
  %72 = xor i8 %70, %71, !dbg !7224
  store i8 %72, i8* %69, align 1, !dbg !7224
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7225
  %74 = load i32, i32* %73, align 4, !dbg !7225
  %75 = lshr i32 %74, 24, !dbg !7226
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7227
  %77 = load i8, i8* %76, align 1, !dbg !7228
  %78 = trunc i32 %75 to i8, !dbg !7228
  %79 = xor i8 %77, %78, !dbg !7228
  store i8 %79, i8* %76, align 1, !dbg !7228
  %80 = load i32, i32* %73, align 4, !dbg !7229
  %81 = lshr i32 %80, 16, !dbg !7230
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7231
  %83 = load i8, i8* %82, align 1, !dbg !7232
  %84 = trunc i32 %81 to i8, !dbg !7232
  %85 = xor i8 %83, %84, !dbg !7232
  store i8 %85, i8* %82, align 1, !dbg !7232
  %86 = load i32, i32* %73, align 4, !dbg !7233
  %87 = lshr i32 %86, 8, !dbg !7234
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7235
  %89 = load i8, i8* %88, align 1, !dbg !7236
  %90 = trunc i32 %87 to i8, !dbg !7236
  %91 = xor i8 %89, %90, !dbg !7236
  store i8 %91, i8* %88, align 1, !dbg !7236
  %92 = load i32, i32* %73, align 4, !dbg !7237
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7238
  %94 = load i8, i8* %93, align 1, !dbg !7239
  %95 = trunc i32 %92 to i8, !dbg !7239
  %96 = xor i8 %94, %95, !dbg !7239
  store i8 %96, i8* %93, align 1, !dbg !7239
  ret void, !dbg !7240
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %2, !dbg !7246

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7244, metadata !DIExpression()), !dbg !7245
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7248
  %5 = load i8, i8* %4, align 1, !dbg !7248
  %6 = zext i8 %5 to i32, !dbg !7251
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7251
  %8 = load i8, i8* %7, align 1, !dbg !7251
  store i8 %8, i8* %4, align 1, !dbg !7252
  %9 = add nuw nsw i32 %3, 1, !dbg !7253
  call void @llvm.dbg.value(metadata i32 %9, metadata !7244, metadata !DIExpression()), !dbg !7245
  %10 = icmp eq i32 %9, 16, !dbg !7254
  br i1 %10, label %11, label %2, !dbg !7246, !llvm.loop !7255

11:                                               ; preds = %2
  ret void, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7258 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7260, metadata !DIExpression()), !dbg !7262
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7263
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7263
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7261, metadata !DIExpression()), !dbg !7264
  %4 = load i8, i8* %0, align 1, !dbg !7265
  store i8 %4, i8* %3, align 1, !dbg !7266
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7267
  %6 = load i8, i8* %5, align 1, !dbg !7267
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7268
  store i8 %6, i8* %7, align 1, !dbg !7269
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7270
  %9 = load i8, i8* %8, align 1, !dbg !7270
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7271
  store i8 %9, i8* %10, align 1, !dbg !7272
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7273
  %12 = load i8, i8* %11, align 1, !dbg !7273
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7274
  store i8 %12, i8* %13, align 1, !dbg !7275
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7276
  %15 = load i8, i8* %14, align 1, !dbg !7276
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7277
  store i8 %15, i8* %16, align 1, !dbg !7278
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7279
  %18 = load i8, i8* %17, align 1, !dbg !7279
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7280
  store i8 %18, i8* %19, align 1, !dbg !7281
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7282
  %21 = load i8, i8* %20, align 1, !dbg !7282
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7283
  store i8 %21, i8* %22, align 1, !dbg !7284
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7285
  %24 = load i8, i8* %23, align 1, !dbg !7285
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7286
  store i8 %24, i8* %25, align 1, !dbg !7287
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7288
  %27 = load i8, i8* %26, align 1, !dbg !7288
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7289
  store i8 %27, i8* %28, align 1, !dbg !7290
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7291
  %30 = load i8, i8* %29, align 1, !dbg !7291
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7292
  store i8 %30, i8* %31, align 1, !dbg !7293
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7294
  %33 = load i8, i8* %32, align 1, !dbg !7294
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7295
  store i8 %33, i8* %34, align 1, !dbg !7296
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7297
  %36 = load i8, i8* %35, align 1, !dbg !7297
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7298
  store i8 %36, i8* %37, align 1, !dbg !7299
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7300
  %39 = load i8, i8* %38, align 1, !dbg !7300
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7301
  store i8 %39, i8* %40, align 1, !dbg !7302
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7303
  %42 = load i8, i8* %41, align 1, !dbg !7303
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7304
  store i8 %42, i8* %43, align 1, !dbg !7305
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7306
  %45 = load i8, i8* %44, align 1, !dbg !7306
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7307
  store i8 %45, i8* %46, align 1, !dbg !7308
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7309
  %48 = load i8, i8* %47, align 1, !dbg !7309
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7310
  store i8 %48, i8* %49, align 1, !dbg !7311
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #24, !dbg !7312
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7313
  ret void, !dbg !7313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7314 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7316, metadata !DIExpression()), !dbg !7318
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7319
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7319
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7317, metadata !DIExpression()), !dbg !7320
  call fastcc void @mult_row_column.72(i8* noundef nonnull %3, i8* noundef %0) #23, !dbg !7321
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7322
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7323
  call fastcc void @mult_row_column.72(i8* noundef nonnull %4, i8* noundef nonnull %5) #23, !dbg !7324
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7325
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7326
  call fastcc void @mult_row_column.72(i8* noundef nonnull %6, i8* noundef nonnull %7) #23, !dbg !7327
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7328
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7329
  call fastcc void @mult_row_column.72(i8* noundef nonnull %8, i8* noundef nonnull %9) #23, !dbg !7330
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #24, !dbg !7331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #22, !dbg !7332
  ret void, !dbg !7332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.72(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7333 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7335, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.value(metadata i8* %1, metadata !7336, metadata !DIExpression()), !dbg !7337
  %3 = load i8, i8* %1, align 1, !dbg !7338
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #24, !dbg !7339
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7340
  %6 = load i8, i8* %5, align 1, !dbg !7340
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #24, !dbg !7340
  %8 = load i8, i8* %5, align 1, !dbg !7340
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7341
  %10 = load i8, i8* %9, align 1, !dbg !7341
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7342
  %12 = load i8, i8* %11, align 1, !dbg !7342
  %13 = xor i8 %7, %4, !dbg !7340
  %14 = xor i8 %13, %8, !dbg !7343
  %15 = xor i8 %14, %10, !dbg !7344
  %16 = xor i8 %15, %12, !dbg !7345
  store i8 %16, i8* %0, align 1, !dbg !7346
  %17 = load i8, i8* %1, align 1, !dbg !7347
  %18 = load i8, i8* %5, align 1, !dbg !7348
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #24, !dbg !7349
  %20 = load i8, i8* %9, align 1, !dbg !7350
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #24, !dbg !7350
  %22 = load i8, i8* %9, align 1, !dbg !7350
  %23 = load i8, i8* %11, align 1, !dbg !7351
  %24 = xor i8 %19, %17, !dbg !7350
  %25 = xor i8 %24, %21, !dbg !7352
  %26 = xor i8 %25, %22, !dbg !7353
  %27 = xor i8 %26, %23, !dbg !7354
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7355
  store i8 %27, i8* %28, align 1, !dbg !7356
  %29 = load i8, i8* %1, align 1, !dbg !7357
  %30 = load i8, i8* %5, align 1, !dbg !7358
  %31 = load i8, i8* %9, align 1, !dbg !7359
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #24, !dbg !7360
  %33 = load i8, i8* %11, align 1, !dbg !7361
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #24, !dbg !7361
  %35 = load i8, i8* %11, align 1, !dbg !7361
  %36 = xor i8 %30, %29, !dbg !7361
  %37 = xor i8 %36, %32, !dbg !7362
  %38 = xor i8 %37, %34, !dbg !7363
  %39 = xor i8 %38, %35, !dbg !7364
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7365
  store i8 %39, i8* %40, align 1, !dbg !7366
  %41 = load i8, i8* %1, align 1, !dbg !7367
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #24, !dbg !7367
  %43 = load i8, i8* %1, align 1, !dbg !7367
  %44 = xor i8 %43, %42, !dbg !7367
  %45 = load i8, i8* %5, align 1, !dbg !7368
  %46 = xor i8 %44, %45, !dbg !7369
  %47 = load i8, i8* %9, align 1, !dbg !7370
  %48 = xor i8 %46, %47, !dbg !7371
  %49 = load i8, i8* %11, align 1, !dbg !7372
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #24, !dbg !7373
  %51 = xor i8 %48, %50, !dbg !7374
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7375
  store i8 %51, i8* %52, align 1, !dbg !7376
  ret void, !dbg !7377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7378 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7384, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 %1, metadata !7385, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %2, metadata !7386, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 %3, metadata !7387, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %4, metadata !7388, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7389, metadata !DIExpression()), !dbg !7393
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7394
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7394
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7390, metadata !DIExpression()), !dbg !7395
  %9 = icmp eq i8* %0, null, !dbg !7396
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7398
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7398
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7398
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7398
  %18 = xor i1 %17, true, !dbg !7398
  %19 = or i32 %3, %1, !dbg !7398
  %20 = and i32 %19, 15, !dbg !7398
  %21 = icmp eq i32 %20, 0, !dbg !7398
  %22 = and i1 %21, %18, !dbg !7398
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7398
  br i1 %25, label %26, label %52, !dbg !7398

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #24, !dbg !7399
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #24, !dbg !7400
  call void @llvm.dbg.value(metadata i8* %0, metadata !7384, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7393
  call void @llvm.dbg.value(metadata i32 0, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 0, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %2, metadata !7386, metadata !DIExpression()), !dbg !7393
  br i1 %14, label %52, label %29, !dbg !7401

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7403
  call void @llvm.dbg.value(metadata i8* %30, metadata !7384, metadata !DIExpression()), !dbg !7393
  br label %31, !dbg !7401

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 %33, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %34, metadata !7384, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %35, metadata !7386, metadata !DIExpression()), !dbg !7393
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7404
  call void @llvm.dbg.value(metadata i8* %36, metadata !7386, metadata !DIExpression()), !dbg !7393
  %37 = load i8, i8* %35, align 1, !dbg !7407
  %38 = add i32 %32, 1, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %38, metadata !7392, metadata !DIExpression()), !dbg !7393
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7409
  %40 = load i8, i8* %39, align 1, !dbg !7410
  %41 = xor i8 %40, %37, !dbg !7410
  store i8 %41, i8* %39, align 1, !dbg !7410
  %42 = icmp eq i32 %38, 16, !dbg !7411
  br i1 %42, label %43, label %47, !dbg !7413

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #24, !dbg !7414
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #24, !dbg !7416
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7417
  call void @llvm.dbg.value(metadata i8* %46, metadata !7384, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i32 0, metadata !7392, metadata !DIExpression()), !dbg !7393
  br label %47, !dbg !7418

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7393
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7419
  call void @llvm.dbg.value(metadata i32 %49, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %48, metadata !7384, metadata !DIExpression()), !dbg !7393
  %50 = add nuw i32 %33, 1, !dbg !7420
  call void @llvm.dbg.value(metadata i32 %50, metadata !7391, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata i8* %36, metadata !7386, metadata !DIExpression()), !dbg !7393
  %51 = icmp eq i32 %50, %3, !dbg !7421
  br i1 %51, label %52, label %31, !dbg !7401, !llvm.loop !7422

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7424
  ret i32 %53, !dbg !7424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7425 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7427, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i32 %1, metadata !7428, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %2, metadata !7429, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i32 %3, metadata !7430, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %4, metadata !7431, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7432, metadata !DIExpression()), !dbg !7437
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7438
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7438
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7433, metadata !DIExpression()), !dbg !7439
  %9 = icmp eq i8* %0, null, !dbg !7440
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7442
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7442
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7442
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7442
  %18 = xor i1 %17, true, !dbg !7442
  %19 = or i32 %3, %1, !dbg !7442
  %20 = and i32 %19, 15, !dbg !7442
  %21 = icmp eq i32 %20, 0, !dbg !7442
  %22 = and i1 %21, %18, !dbg !7442
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7442
  %25 = xor i1 %24, true, !dbg !7442
  %26 = or i1 %14, %25, !dbg !7442
  %27 = zext i1 %24 to i32, !dbg !7442
  br i1 %26, label %51, label %28, !dbg !7442

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i32 %30, metadata !7435, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %31, metadata !7434, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %32, metadata !7427, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %33, metadata !7429, metadata !DIExpression()), !dbg !7437
  %34 = and i32 %30, 15, !dbg !7443
  %35 = icmp eq i32 %34, 0, !dbg !7448
  br i1 %35, label %36, label %39, !dbg !7449

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #24, !dbg !7450
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7452
  call void @llvm.dbg.value(metadata i8* %38, metadata !7429, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i32 0, metadata !7436, metadata !DIExpression()), !dbg !7437
  br label %39, !dbg !7453

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7454
  call void @llvm.dbg.value(metadata i32 %41, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %40, metadata !7429, metadata !DIExpression()), !dbg !7437
  %42 = add i32 %41, 1, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %42, metadata !7436, metadata !DIExpression()), !dbg !7437
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7456
  %44 = load i8, i8* %43, align 1, !dbg !7456
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8* %45, metadata !7434, metadata !DIExpression()), !dbg !7437
  %46 = load i8, i8* %31, align 1, !dbg !7458
  %47 = xor i8 %46, %44, !dbg !7459
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7460
  call void @llvm.dbg.value(metadata i8* %48, metadata !7427, metadata !DIExpression()), !dbg !7437
  store i8 %47, i8* %32, align 1, !dbg !7461
  %49 = add nuw i32 %30, 1, !dbg !7462
  call void @llvm.dbg.value(metadata i32 %49, metadata !7435, metadata !DIExpression()), !dbg !7437
  %50 = icmp eq i32 %49, %3, !dbg !7463
  br i1 %50, label %51, label %28, !dbg !7464, !llvm.loop !7465

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !7467
  ret i32 %52, !dbg !7467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7468 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7474, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 %1, metadata !7475, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %2, metadata !7476, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 %3, metadata !7477, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %4, metadata !7478, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7479, metadata !DIExpression()), !dbg !7484
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7485
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #22, !dbg !7485
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7480, metadata !DIExpression()), !dbg !7486
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7487
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22, !dbg !7487
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7481, metadata !DIExpression()), !dbg !7488
  %11 = icmp eq i8* %0, null, !dbg !7489
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7491
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7491
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7491
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7491
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7491
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7491
  br i1 %23, label %86, label %24, !dbg !7491

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #24, !dbg !7492
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7493
  %27 = load i8, i8* %26, align 1, !dbg !7493
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7494
  %29 = load i8, i8* %28, align 1, !dbg !7494
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7495
  %31 = load i8, i8* %30, align 1, !dbg !7495
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7496
  %33 = load i8, i8* %32, align 1, !dbg !7496
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  call void @llvm.dbg.value(metadata i32 0, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %0, metadata !7474, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %2, metadata !7476, metadata !DIExpression()), !dbg !7484
  %34 = zext i8 %29 to i32, !dbg !7494
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %35 = shl nuw nsw i32 %34, 16, !dbg !7497
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %36 = zext i8 %27 to i32, !dbg !7493
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %37 = shl nuw i32 %36, 24, !dbg !7498
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %38 = or i32 %35, %37, !dbg !7499
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %39 = zext i8 %31 to i32, !dbg !7495
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %40 = shl nuw nsw i32 %39, 8, !dbg !7500
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %41 = or i32 %38, %40, !dbg !7501
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %42 = zext i8 %33 to i32, !dbg !7502
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7484
  %43 = or i32 %41, %42, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %43, metadata !7482, metadata !DIExpression()), !dbg !7484
  br label %44, !dbg !7504

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 %50, metadata !7482, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %51, metadata !7474, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %52, metadata !7476, metadata !DIExpression()), !dbg !7484
  %53 = and i32 %49, 15, !dbg !7506
  %54 = icmp eq i32 %53, 0, !dbg !7510
  br i1 %54, label %55, label %67, !dbg !7511

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #24, !dbg !7512
  %57 = icmp eq i32 %56, 0, !dbg !7512
  br i1 %57, label %86, label %58, !dbg !7515

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7516
  call void @llvm.dbg.value(metadata i32 %59, metadata !7482, metadata !DIExpression()), !dbg !7484
  %60 = lshr i32 %59, 24, !dbg !7518
  %61 = trunc i32 %60 to i8, !dbg !7519
  store i8 %61, i8* %26, align 1, !dbg !7520
  %62 = lshr i32 %59, 16, !dbg !7521
  %63 = trunc i32 %62 to i8, !dbg !7522
  store i8 %63, i8* %28, align 1, !dbg !7523
  %64 = lshr i32 %59, 8, !dbg !7524
  %65 = trunc i32 %64 to i8, !dbg !7525
  store i8 %65, i8* %30, align 1, !dbg !7526
  %66 = trunc i32 %59 to i8, !dbg !7527
  store i8 %66, i8* %32, align 1, !dbg !7528
  br label %67, !dbg !7529

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7484
  call void @llvm.dbg.value(metadata i32 %72, metadata !7482, metadata !DIExpression()), !dbg !7484
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7530
  %74 = load i8, i8* %73, align 1, !dbg !7530
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7531
  call void @llvm.dbg.value(metadata i8* %75, metadata !7476, metadata !DIExpression()), !dbg !7484
  %76 = load i8, i8* %52, align 1, !dbg !7532
  %77 = xor i8 %76, %74, !dbg !7533
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7534
  call void @llvm.dbg.value(metadata i8* %78, metadata !7474, metadata !DIExpression()), !dbg !7484
  store i8 %77, i8* %51, align 1, !dbg !7535
  %79 = add nuw i32 %49, 1, !dbg !7536
  call void @llvm.dbg.value(metadata i32 %79, metadata !7483, metadata !DIExpression()), !dbg !7484
  %80 = icmp eq i32 %79, %3, !dbg !7537
  br i1 %80, label %81, label %44, !dbg !7504, !llvm.loop !7538

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7540
  store i8 %71, i8* %82, align 1, !dbg !7541
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7542
  store i8 %70, i8* %83, align 1, !dbg !7543
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7544
  store i8 %69, i8* %84, align 1, !dbg !7545
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7546
  store i8 %68, i8* %85, align 1, !dbg !7547
  br label %86, !dbg !7548

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7484
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22, !dbg !7549
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #22, !dbg !7549
  ret i32 %87, !dbg !7549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7550 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7555, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7556, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i8* %2, metadata !7557, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 %3, metadata !7558, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 %4, metadata !7559, metadata !DIExpression()), !dbg !7560
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7561
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7563
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7563
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7563
  br i1 %12, label %23, label %13, !dbg !7563

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7564
  %15 = icmp ult i32 %14, 13, !dbg !7564
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7564
  br i1 %18, label %19, label %23, !dbg !7564

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7567
  store i32 %4, i32* %20, align 4, !dbg !7568
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7569
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7570
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7571
  store i8* %2, i8** %22, align 4, !dbg !7572
  br label %23, !dbg !7573

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7560
  ret i32 %24, !dbg !7574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7575 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7579, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %1, metadata !7580, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8* %2, metadata !7581, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %3, metadata !7582, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8* %4, metadata !7583, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %5, metadata !7584, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7585, metadata !DIExpression()), !dbg !7589
  %10 = icmp eq i8* %0, null, !dbg !7590
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7592
  br i1 %12, label %85, label %13, !dbg !7592

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7593
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7594
  br i1 %16, label %85, label %17, !dbg !7594

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7595
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7596
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7596
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7596
  br i1 %24, label %85, label %25, !dbg !7596

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7597
  %27 = load i32, i32* %26, align 4, !dbg !7597
  %28 = add i32 %27, %5, !dbg !7598
  %29 = icmp ugt i32 %28, %1, !dbg !7599
  br i1 %29, label %85, label %30, !dbg !7600

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7601
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #22, !dbg !7601
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7586, metadata !DIExpression()), !dbg !7602
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7603
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #22, !dbg !7603
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7587, metadata !DIExpression()), !dbg !7604
  %33 = select i1 %18, i32 64, i32 0, !dbg !7605
  %34 = shl i32 %27, 2, !dbg !7606
  %35 = add i32 %34, 248, !dbg !7606
  %36 = and i32 %35, 248, !dbg !7606
  %37 = or i32 %36, %33, !dbg !7607
  %38 = trunc i32 %37 to i8, !dbg !7608
  %39 = or i8 %38, 1, !dbg !7608
  store i8 %39, i8* %31, align 1, !dbg !7609
  call void @llvm.dbg.value(metadata i32 1, metadata !7588, metadata !DIExpression()), !dbg !7589
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7588, metadata !DIExpression()), !dbg !7589
  br label %42, !dbg !7610

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7588, metadata !DIExpression()), !dbg !7589
  %44 = add nsw i32 %43, -1, !dbg !7612
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7615
  %46 = load i8, i8* %45, align 1, !dbg !7615
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7616
  store i8 %46, i8* %47, align 1, !dbg !7617
  %48 = add nuw nsw i32 %43, 1, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %48, metadata !7588, metadata !DIExpression()), !dbg !7589
  %49 = icmp eq i32 %48, 14, !dbg !7619
  br i1 %49, label %50, label %42, !dbg !7610, !llvm.loop !7620

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7622
  %52 = trunc i32 %51 to i8, !dbg !7623
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7624
  store i8 %52, i8* %53, align 1, !dbg !7625
  %54 = trunc i32 %5 to i8, !dbg !7626
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7627
  store i8 %54, i8* %55, align 1, !dbg !7628
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7629
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7629
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #24, !dbg !7630
  br i1 %18, label %59, label %61, !dbg !7631

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7632
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #23, !dbg !7635
  br label %61, !dbg !7636

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7637

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7638
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #23, !dbg !7641
  br label %64, !dbg !7642

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7643
  store i8 0, i8* %55, align 1, !dbg !7644
  store i8 0, i8* %53, align 1, !dbg !7645
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7646
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #23, !dbg !7647
  store i8 0, i8* %55, align 1, !dbg !7648
  store i8 0, i8* %53, align 1, !dbg !7649
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7650
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #24, !dbg !7651
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7579, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7589
  call void @llvm.dbg.value(metadata i32 0, metadata !7588, metadata !DIExpression()), !dbg !7589
  %68 = load i32, i32* %26, align 4, !dbg !7652
  %69 = icmp eq i32 %68, 0, !dbg !7655
  br i1 %69, label %84, label %70, !dbg !7656

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7657
  call void @llvm.dbg.value(metadata i8* %71, metadata !7579, metadata !DIExpression()), !dbg !7589
  br label %72, !dbg !7656

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8* %74, metadata !7579, metadata !DIExpression()), !dbg !7589
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7658
  %76 = load i8, i8* %75, align 1, !dbg !7658
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7660
  %78 = load i8, i8* %77, align 1, !dbg !7660
  %79 = xor i8 %78, %76, !dbg !7661
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7662
  call void @llvm.dbg.value(metadata i8* %80, metadata !7579, metadata !DIExpression()), !dbg !7589
  store i8 %79, i8* %74, align 1, !dbg !7663
  %81 = add nuw i32 %73, 1, !dbg !7664
  call void @llvm.dbg.value(metadata i32 %81, metadata !7588, metadata !DIExpression()), !dbg !7589
  %82 = load i32, i32* %26, align 4, !dbg !7652
  %83 = icmp ult i32 %81, %82, !dbg !7655
  br i1 %83, label %72, label %84, !dbg !7656, !llvm.loop !7665

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #22, !dbg !7667
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #22, !dbg !7667
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7589
  ret i32 %86, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7672, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %1, metadata !7673, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %2, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %3, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7676, metadata !DIExpression()), !dbg !7678
  %6 = icmp eq i32 %3, 0, !dbg !7679
  br i1 %6, label %17, label %7, !dbg !7681

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7682
  %9 = load i8, i8* %0, align 1, !dbg !7684
  %10 = trunc i32 %8 to i8, !dbg !7684
  %11 = xor i8 %9, %10, !dbg !7684
  store i8 %11, i8* %0, align 1, !dbg !7684
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7685
  %13 = load i8, i8* %12, align 1, !dbg !7686
  %14 = trunc i32 %2 to i8, !dbg !7686
  %15 = xor i8 %13, %14, !dbg !7686
  store i8 %15, i8* %12, align 1, !dbg !7686
  %16 = add i32 %2, 2, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %16, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 2, metadata !7677, metadata !DIExpression()), !dbg !7678
  br label %17, !dbg !7688

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7689
  call void @llvm.dbg.value(metadata i32 %19, metadata !7677, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %18, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %1, metadata !7673, metadata !DIExpression()), !dbg !7678
  %20 = icmp ult i32 %19, %18, !dbg !7690
  br i1 %20, label %21, label %39, !dbg !7691

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7677, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %23, metadata !7673, metadata !DIExpression()), !dbg !7678
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %24, metadata !7673, metadata !DIExpression()), !dbg !7678
  %25 = load i8, i8* %23, align 1, !dbg !7694
  %26 = add i32 %22, 1, !dbg !7695
  call void @llvm.dbg.value(metadata i32 %26, metadata !7677, metadata !DIExpression()), !dbg !7678
  %27 = and i32 %22, 15, !dbg !7696
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7697
  %29 = load i8, i8* %28, align 1, !dbg !7698
  %30 = xor i8 %29, %25, !dbg !7698
  store i8 %30, i8* %28, align 1, !dbg !7698
  %31 = and i32 %26, 15, !dbg !7699
  %32 = icmp eq i32 %31, 0, !dbg !7701
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7702
  br i1 %34, label %35, label %37, !dbg !7702

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #24, !dbg !7703
  br label %37, !dbg !7705

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7677, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %24, metadata !7673, metadata !DIExpression()), !dbg !7678
  %38 = icmp eq i32 %26, %18, !dbg !7690
  br i1 %38, label %39, label %21, !dbg !7691, !llvm.loop !7706

39:                                               ; preds = %37, %17
  ret void, !dbg !7708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7709 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i32 %1, metadata !7715, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %2, metadata !7716, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i32 %3, metadata !7717, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %4, metadata !7718, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7719, metadata !DIExpression()), !dbg !7724
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7725
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #22, !dbg !7725
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7720, metadata !DIExpression()), !dbg !7726
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7727
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #22, !dbg !7727
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7721, metadata !DIExpression()), !dbg !7728
  %11 = icmp eq i8* %0, null, !dbg !7729
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7731
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7731
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7731
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7731
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7731
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7731
  br i1 %23, label %63, label %24, !dbg !7731

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #24, !dbg !7732
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7733
  %27 = load i8, i8* %26, align 1, !dbg !7733
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7734
  %29 = load i8, i8* %28, align 1, !dbg !7734
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  call void @llvm.dbg.value(metadata i32 0, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %0, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %2, metadata !7716, metadata !DIExpression()), !dbg !7724
  %30 = zext i8 %27 to i16, !dbg !7733
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %31 = shl nuw i16 %30, 8, !dbg !7735
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %32 = zext i8 %29 to i16, !dbg !7736
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7724
  %33 = or i16 %31, %32, !dbg !7737
  call void @llvm.dbg.value(metadata i16 %33, metadata !7722, metadata !DIExpression()), !dbg !7724
  br label %34, !dbg !7738

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i16 %36, metadata !7722, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %37, metadata !7714, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.value(metadata i8* %38, metadata !7716, metadata !DIExpression()), !dbg !7724
  %39 = and i32 %35, 15, !dbg !7740
  %40 = icmp eq i32 %39, 0, !dbg !7744
  br i1 %40, label %41, label %48, !dbg !7745

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !7746
  call void @llvm.dbg.value(metadata i16 %42, metadata !7722, metadata !DIExpression()), !dbg !7724
  %43 = lshr i16 %42, 8, !dbg !7748
  %44 = trunc i16 %43 to i8, !dbg !7749
  store i8 %44, i8* %26, align 1, !dbg !7750
  %45 = trunc i16 %42 to i8, !dbg !7751
  store i8 %45, i8* %28, align 1, !dbg !7752
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #24, !dbg !7753
  %47 = icmp eq i32 %46, 0, !dbg !7753
  br i1 %47, label %63, label %48, !dbg !7755

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7724
  call void @llvm.dbg.value(metadata i16 %49, metadata !7722, metadata !DIExpression()), !dbg !7724
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !7756
  %51 = load i8, i8* %50, align 1, !dbg !7756
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !7757
  call void @llvm.dbg.value(metadata i8* %52, metadata !7716, metadata !DIExpression()), !dbg !7724
  %53 = load i8, i8* %38, align 1, !dbg !7758
  %54 = xor i8 %53, %51, !dbg !7759
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7760
  call void @llvm.dbg.value(metadata i8* %55, metadata !7714, metadata !DIExpression()), !dbg !7724
  store i8 %54, i8* %37, align 1, !dbg !7761
  %56 = add nuw i32 %35, 1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %56, metadata !7723, metadata !DIExpression()), !dbg !7724
  %57 = icmp eq i32 %56, %3, !dbg !7763
  br i1 %57, label %58, label %34, !dbg !7738, !llvm.loop !7764

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !7766
  %60 = load i8, i8* %28, align 1, !dbg !7767
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7768
  store i8 %59, i8* %61, align 1, !dbg !7769
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7770
  store i8 %60, i8* %62, align 1, !dbg !7771
  br label %63, !dbg !7772

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #22, !dbg !7773
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #22, !dbg !7773
  ret void, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7774 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7776, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i32 %1, metadata !7777, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i8* %2, metadata !7778, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i32 %3, metadata !7779, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i8* %4, metadata !7780, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i32 %5, metadata !7781, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7782, metadata !DIExpression()), !dbg !7786
  %10 = icmp eq i8* %0, null, !dbg !7787
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7789
  br i1 %12, label %106, label %13, !dbg !7789

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7790
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7791
  br i1 %16, label %106, label %17, !dbg !7791

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7792
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7793
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7793
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7793
  br i1 %24, label %106, label %25, !dbg !7793

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7794
  %27 = load i32, i32* %26, align 4, !dbg !7794
  %28 = sub i32 %5, %27, !dbg !7795
  %29 = icmp ugt i32 %28, %1, !dbg !7796
  br i1 %29, label %106, label %30, !dbg !7797

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7798
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #22, !dbg !7798
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7783, metadata !DIExpression()), !dbg !7799
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7800
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #22, !dbg !7800
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7784, metadata !DIExpression()), !dbg !7801
  store i8 1, i8* %31, align 1, !dbg !7802
  call void @llvm.dbg.value(metadata i32 1, metadata !7785, metadata !DIExpression()), !dbg !7786
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7785, metadata !DIExpression()), !dbg !7786
  br label %35, !dbg !7803

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !7785, metadata !DIExpression()), !dbg !7786
  %37 = add nsw i32 %36, -1, !dbg !7805
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !7808
  %39 = load i8, i8* %38, align 1, !dbg !7808
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !7809
  store i8 %39, i8* %40, align 1, !dbg !7810
  %41 = add nuw nsw i32 %36, 1, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %41, metadata !7785, metadata !DIExpression()), !dbg !7786
  %42 = icmp eq i32 %41, 14, !dbg !7812
  br i1 %42, label %43, label %35, !dbg !7803, !llvm.loop !7813

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7815
  store i8 0, i8* %44, align 1, !dbg !7816
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7817
  store i8 0, i8* %45, align 1, !dbg !7818
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7819
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !7819
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #23, !dbg !7820
  store i8 0, i8* %44, align 1, !dbg !7821
  store i8 0, i8* %45, align 1, !dbg !7822
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !7823
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #24, !dbg !7824
  call void @llvm.dbg.value(metadata i32 0, metadata !7785, metadata !DIExpression()), !dbg !7786
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !7785, metadata !DIExpression()), !dbg !7786
  %51 = icmp eq i32 %50, 0, !dbg !7825
  br i1 %51, label %66, label %52, !dbg !7828

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !7828

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !7785, metadata !DIExpression()), !dbg !7786
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !7829
  %59 = load i8, i8* %58, align 1, !dbg !7831
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !7832
  %61 = load i8, i8* %60, align 1, !dbg !7832
  %62 = xor i8 %61, %59, !dbg !7833
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !7834
  store i8 %62, i8* %63, align 1, !dbg !7835
  %64 = add nuw i32 %57, 1, !dbg !7836
  call void @llvm.dbg.value(metadata i32 %64, metadata !7785, metadata !DIExpression()), !dbg !7786
  %65 = icmp eq i32 %64, %50, !dbg !7825
  br i1 %65, label %66, label %56, !dbg !7828, !llvm.loop !7837

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !7839
  %68 = shl i32 %50, 2, !dbg !7840
  %69 = add i32 %68, 248, !dbg !7840
  %70 = and i32 %69, 248, !dbg !7840
  %71 = or i32 %70, %67, !dbg !7841
  %72 = trunc i32 %71 to i8, !dbg !7842
  %73 = or i8 %72, 1, !dbg !7842
  store i8 %73, i8* %31, align 1, !dbg !7843
  call void @llvm.dbg.value(metadata i32 1, metadata !7785, metadata !DIExpression()), !dbg !7786
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !7844

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !7785, metadata !DIExpression()), !dbg !7786
  %77 = add nsw i32 %76, -1, !dbg !7846
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !7849
  %79 = load i8, i8* %78, align 1, !dbg !7849
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !7850
  store i8 %79, i8* %80, align 1, !dbg !7851
  %81 = add nuw nsw i32 %76, 1, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %81, metadata !7785, metadata !DIExpression()), !dbg !7786
  %82 = icmp eq i32 %81, 14, !dbg !7853
  br i1 %82, label %83, label %75, !dbg !7844, !llvm.loop !7854

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !7856
  %85 = lshr i32 %84, 8, !dbg !7857
  %86 = trunc i32 %85 to i8, !dbg !7858
  store i8 %86, i8* %45, align 1, !dbg !7859
  %87 = trunc i32 %84 to i8, !dbg !7860
  store i8 %87, i8* %44, align 1, !dbg !7861
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !7862
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #24, !dbg !7863
  br i1 %18, label %90, label %92, !dbg !7864

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !7865
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #23, !dbg !7868
  br label %92, !dbg !7869

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !7870

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !7871
  %95 = sub i32 %5, %94, !dbg !7874
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !7875
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #23, !dbg !7876
  br label %97, !dbg !7877

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !7878
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #24, !dbg !7880
  %100 = icmp eq i32 %99, 0, !dbg !7881
  br i1 %100, label %104, label %101, !dbg !7882

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !7883
  %103 = sub i32 %5, %102, !dbg !7885
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #24, !dbg !7886
  br label %104, !dbg !7887

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !7888
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #22, !dbg !7889
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #22, !dbg !7889
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7786
  ret i32 %107, !dbg !7889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7939, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7940, metadata !DIExpression()), !dbg !7941
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7942
  br i1 %3, label %5, label %4, !dbg !7944

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #23, !dbg !7945
  br label %5, !dbg !7947

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7948
  ret void, !dbg !7949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7950 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7954, metadata !DIExpression()), !dbg !7955
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7956
  %3 = load i32, i32* %2, align 4, !dbg !7956
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7956
  %5 = load i32, i32* %4, align 4, !dbg !7956
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7956
  %7 = load i32, i32* %6, align 4, !dbg !7956
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !7956
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7961
  %9 = load i32, i32* %8, align 4, !dbg !7961
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7961
  %11 = load i32, i32* %10, align 4, !dbg !7961
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7961
  %13 = load i32, i32* %12, align 4, !dbg !7961
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.74, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !7961
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7966
  %15 = load i32, i32* %14, align 4, !dbg !7966
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.75, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !7966
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7971
  %17 = load i32, i32* %16, align 4, !dbg !7971
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.76, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7971
  ret void, !dbg !7976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7977 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7994, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7995, metadata !DIExpression()), !dbg !7997
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7998
  %4 = load i32, i32* %3, align 4, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %4, metadata !7996, metadata !DIExpression()), !dbg !7997
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #23, !dbg !7999
  ret void, !dbg !8000
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8001 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8005, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %0, metadata !8006, metadata !DIExpression()), !dbg !8008
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8009
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #22, !dbg !8009
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8007, metadata !DIExpression()), !dbg !8010
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8010
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8011
  %5 = bitcast i8* %4 to i32*, !dbg !8011
  %6 = load i32, i32* %5, align 4, !dbg !8011
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8012
  store i32 %6, i32* %7, align 4, !dbg !8013
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #23, !dbg !8014
  unreachable, !dbg !8015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8021, metadata !DIExpression()), !dbg !8022
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #23, !dbg !8023
  ret void, !dbg !8024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8029, metadata !DIExpression()), !dbg !8030
  %2 = icmp sgt i32 %0, -1, !dbg !8031
  br i1 %2, label %3, label %8, !dbg !8033

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !8034, !srcloc !8036
  %4 = and i32 %0, 31, !dbg !8037
  %5 = shl nuw i32 1, %4, !dbg !8038
  %6 = lshr i32 %0, 5, !dbg !8039
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8040
  store volatile i32 %5, i32* %7, align 4, !dbg !8041
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !8042, !srcloc !8043
  br label %8, !dbg !8044

8:                                                ; preds = %3, %1
  ret void, !dbg !8045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8048, metadata !DIExpression()), !dbg !8049
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #23, !dbg !8050
  ret void, !dbg !8051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8054, metadata !DIExpression()), !dbg !8055
  %2 = icmp sgt i32 %0, -1, !dbg !8056
  br i1 %2, label %3, label %8, !dbg !8058

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8059
  %5 = shl nuw i32 1, %4, !dbg !8061
  %6 = lshr i32 %0, 5, !dbg !8062
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8063
  store volatile i32 %5, i32* %7, align 4, !dbg !8064
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !8065, !srcloc !8069
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !8070, !srcloc !8073
  br label %8, !dbg !8074

8:                                                ; preds = %3, %1
  ret void, !dbg !8075
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8080, metadata !DIExpression()), !dbg !8081
  %2 = lshr i32 %0, 5, !dbg !8082
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8083
  %4 = load volatile i32, i32* %3, align 4, !dbg !8083
  %5 = and i32 %0, 31, !dbg !8084
  %6 = shl nuw i32 1, %5, !dbg !8084
  %7 = and i32 %4, %6, !dbg !8085
  ret i32 %7, !dbg !8086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8091, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i32 %1, metadata !8092, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i32 %2, metadata !8093, metadata !DIExpression()), !dbg !8094
  %4 = add i32 %1, 1, !dbg !8095
  call void @llvm.dbg.value(metadata i32 %4, metadata !8092, metadata !DIExpression()), !dbg !8094
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #23, !dbg !8098
  ret void, !dbg !8099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 %1, metadata !8105, metadata !DIExpression()), !dbg !8106
  %3 = trunc i32 %1 to i8, !dbg !8107
  %4 = shl i8 %3, 4, !dbg !8107
  %5 = and i32 %0, 15, !dbg !8109
  %6 = add nsw i32 %5, -4, !dbg !8109
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8109
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8109
  %9 = icmp slt i32 %0, 0, !dbg !8109
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8109
  store volatile i8 %4, i8* %10, align 1, !dbg !8107
  ret void, !dbg !8110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8113, metadata !DIExpression()), !dbg !8114
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !8115
  ret void, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8117 {
  tail call void @z_SysNmiOnReset() #24, !dbg !8119
  tail call void @z_arm_int_exit() #24, !dbg !8120
  ret void, !dbg !8121
}

; Function Attrs: optsize
declare !dbg !8122 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8123 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8125 {
  tail call fastcc void @relocate_vector_table() #23, !dbg !8127
  tail call fastcc void @z_arm_floating_point_init() #23, !dbg !8128
  tail call void @z_bss_zero() #24, !dbg !8129
  tail call void @z_data_copy() #24, !dbg !8130
  tail call void @z_arm_interrupt_init() #24, !dbg !8131
  tail call void @z_cstart() #26, !dbg !8132
  unreachable, !dbg !8132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8133 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8134
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !8135, !srcloc !8138
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !8139, !srcloc !8142
  ret void, !dbg !8143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8144 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8145
  %2 = and i32 %1, -15728641, !dbg !8145
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8145
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #22, !dbg !8146, !srcloc !8153
  call void @llvm.dbg.value(metadata i32 %3, metadata !8151, metadata !DIExpression()) #22, !dbg !8154
  %4 = and i32 %3, -5, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %4, metadata !8156, metadata !DIExpression()) #22, !dbg !8161
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #22, !dbg !8163, !srcloc !8164
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !8165, !srcloc !8142
  ret void, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8172
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8173
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !8174
  store i32 %0, i32* %3, align 8, !dbg !8175
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8176
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !8177
  store i32 %4, i32* %5, align 4, !dbg !8178
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8179
  %7 = or i32 %6, 268435456, !dbg !8179
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8179
  call void @llvm.dbg.value(metadata i32 0, metadata !8180, metadata !DIExpression()) #22, !dbg !8184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !8186, !srcloc !8187
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8188
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !8189
  %10 = load i32, i32* %9, align 4, !dbg !8189
  ret i32 %10, !dbg !8190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8295, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8296, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %2, metadata !8297, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8298, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %4, metadata !8299, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %5, metadata !8300, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %6, metadata !8301, metadata !DIExpression()), !dbg !8303
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8304
  call void @llvm.dbg.value(metadata i8* %8, metadata !8302, metadata !DIExpression()), !dbg !8303
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8305
  %10 = bitcast i8* %9 to i32*, !dbg !8305
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8306
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8307
  %12 = bitcast i8* %8 to i32*, !dbg !8308
  store i32 %11, i32* %12, align 4, !dbg !8309
  %13 = ptrtoint i8* %4 to i32, !dbg !8310
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8311
  %15 = bitcast i8* %14 to i32*, !dbg !8311
  store i32 %13, i32* %15, align 4, !dbg !8312
  %16 = ptrtoint i8* %5 to i32, !dbg !8313
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8314
  %18 = bitcast i8* %17 to i32*, !dbg !8314
  store i32 %16, i32* %18, align 4, !dbg !8315
  %19 = ptrtoint i8* %6 to i32, !dbg !8316
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8317
  %21 = bitcast i8* %20 to i32*, !dbg !8317
  store i32 %19, i32* %21, align 4, !dbg !8318
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8319
  %23 = bitcast i8* %22 to i32*, !dbg !8319
  store i32 16777216, i32* %23, align 4, !dbg !8320
  %24 = ptrtoint i8* %8 to i32, !dbg !8321
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8322
  store i32 %24, i32* %25, align 8, !dbg !8323
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !8324
  store i32 0, i32* %26, align 8, !dbg !8325
  ret void, !dbg !8326
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %1, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8333, metadata !DIExpression()), !dbg !8334
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8335
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #22, !dbg !8336, !srcloc !8337
  unreachable, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8339 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8357, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 %1, metadata !8358, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 %2, metadata !8359, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8360, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 0, metadata !8361, metadata !DIExpression()), !dbg !8367
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8368
  %9 = and i32 %8, 511, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %9, metadata !8362, metadata !DIExpression()), !dbg !8367
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #22, !dbg !8370
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #22, !dbg !8370
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8371
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #22, !dbg !8371
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8366, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 0, metadata !8373, metadata !DIExpression()) #22, !dbg !8376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #22, !dbg !8378, !srcloc !8379
  call void @llvm.dbg.value(metadata i8* %6, metadata !8364, metadata !DIExpression(DW_OP_deref)), !dbg !8367
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #23, !dbg !8380
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8365, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i8* %5, metadata !8363, metadata !DIExpression(DW_OP_deref)), !dbg !8367
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #23, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %12, metadata !8361, metadata !DIExpression()), !dbg !8367
  %13 = load i8, i8* %5, align 1, !dbg !8382, !range !8384
  call void @llvm.dbg.value(metadata i8 %13, metadata !8363, metadata !DIExpression()), !dbg !8367
  %14 = icmp eq i8 %13, 0, !dbg !8382
  br i1 %14, label %15, label %32, !dbg !8385

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8386
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !8387
  %18 = load i8, i8* %6, align 1, !dbg !8388, !range !8384
  call void @llvm.dbg.value(metadata i8 %18, metadata !8364, metadata !DIExpression()), !dbg !8367
  %19 = icmp eq i8 %18, 0, !dbg !8388
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8390
  %21 = load i32, i32* %20, align 4, !dbg !8390
  br i1 %19, label %27, label %22, !dbg !8391

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8392
  %24 = icmp eq i32 %23, 0, !dbg !8395
  br i1 %24, label %25, label %31, !dbg !8396

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8397
  br label %29, !dbg !8399

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8400
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8390
  br label %31, !dbg !8402

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !8402
  br label %32, !dbg !8403

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #22, !dbg !8403
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #22, !dbg !8403
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #22, !dbg !8403
  ret void, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8409, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %1, metadata !8410, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %2, metadata !8411, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i8* %3, metadata !8412, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i8 0, metadata !8413, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8414, metadata !DIExpression()), !dbg !8415
  store i8 0, i8* %3, align 1, !dbg !8416
  %5 = icmp ugt i32 %2, -16777217, !dbg !8417
  br i1 %5, label %6, label %17, !dbg !8419

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8420
  %8 = icmp eq i32 %7, 8, !dbg !8420
  br i1 %8, label %9, label %10, !dbg !8420

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.108, i32 0, i32 0), i32 noundef 69) #24, !dbg !8422
  br label %17, !dbg !8428

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8429
  %12 = icmp eq i32 %11, 0, !dbg !8429
  br i1 %12, label %13, label %14, !dbg !8430

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  store i8 1, i8* %3, align 1, !dbg !8433
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8414, metadata !DIExpression()), !dbg !8415
  br label %17, !dbg !8436

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8415
  ret %struct.__esf* %18, !dbg !8437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8438 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %1, metadata !8443, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %2, metadata !8444, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8446
  store i8 0, i8* %2, align 1, !dbg !8447
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !8448

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #23, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %5, metadata !8445, metadata !DIExpression()), !dbg !8446
  br label %11, !dbg !8451

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #23, !dbg !8452
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8446
  br label %11, !dbg !8453

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #23, !dbg !8454
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8446
  br label %11, !dbg !8455

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #23, !dbg !8456
  call void @llvm.dbg.value(metadata i32 0, metadata !8445, metadata !DIExpression()), !dbg !8446
  br label %11, !dbg !8457

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #23, !dbg !8458
  br label %11, !dbg !8459

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #23, !dbg !8460
  br label %11, !dbg !8461

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !8446
  call void @llvm.dbg.value(metadata i32 %12, metadata !8445, metadata !DIExpression()), !dbg !8446
  ret i32 %12, !dbg !8462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8463 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8467, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i8* %1, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 0, metadata !8469, metadata !DIExpression()), !dbg !8470
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.103, i32 0, i32 0), i32 noundef 69) #24, !dbg !8471
  store i8 0, i8* %1, align 1, !dbg !8476
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8477
  %4 = and i32 %3, 2, !dbg !8479
  %5 = icmp eq i32 %4, 0, !dbg !8480
  br i1 %5, label %7, label %6, !dbg !8481

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 69) #24, !dbg !8482
  br label %35, !dbg !8488

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8489
  %9 = icmp sgt i32 %8, -1, !dbg !8491
  br i1 %9, label %11, label %10, !dbg !8492

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 69) #24, !dbg !8493
  br label %35, !dbg !8499

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8500
  %13 = and i32 %12, 1073741824, !dbg !8502
  %14 = icmp eq i32 %13, 0, !dbg !8503
  br i1 %14, label %35, label %15, !dbg !8504

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.106, i32 0, i32 0), i32 noundef 69) #24, !dbg !8505
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #23, !dbg !8511
  br i1 %16, label %17, label %21, !dbg !8513

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8514
  %19 = load i32, i32* %18, align 4, !dbg !8514
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.107, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !8514
  %20 = load i32, i32* %18, align 4, !dbg !8520
  call void @llvm.dbg.value(metadata i32 %20, metadata !8469, metadata !DIExpression()), !dbg !8470
  br label %35, !dbg !8521

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8522
  %23 = and i32 %22, 255, !dbg !8524
  %24 = icmp eq i32 %23, 0, !dbg !8525
  br i1 %24, label %26, label %25, !dbg !8526

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #23, !dbg !8527
  call void @llvm.dbg.value(metadata i32 0, metadata !8469, metadata !DIExpression()), !dbg !8470
  br label %35, !dbg !8529

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8530
  %28 = and i32 %27, 65280, !dbg !8532
  %29 = icmp eq i32 %28, 0, !dbg !8533
  br i1 %29, label %31, label %30, !dbg !8534

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #23, !dbg !8535
  call void @llvm.dbg.value(metadata i32 0, metadata !8469, metadata !DIExpression()), !dbg !8470
  br label %35, !dbg !8537

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8538
  %33 = icmp ult i32 %32, 65536, !dbg !8540
  br i1 %33, label %35, label %34, !dbg !8541

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #23, !dbg !8542
  call void @llvm.dbg.value(metadata i32 0, metadata !8469, metadata !DIExpression()), !dbg !8470
  br label %35, !dbg !8544

35:                                               ; preds = %10, %11, %17, %30, %31, %34, %25, %6
  %36 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], [ 0, %31 ], [ 0, %11 ], !dbg !8470
  call void @llvm.dbg.value(metadata i32 %36, metadata !8469, metadata !DIExpression()), !dbg !8470
  ret i32 %36, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8548, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i32 %0, metadata !8549, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i8* %1, metadata !8550, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i32 0, metadata !8551, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i32 -22, metadata !8552, metadata !DIExpression()), !dbg !8556
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.98, i32 0, i32 0), i32 noundef 69) #24, !dbg !8557
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8562
  %4 = and i32 %3, 16, !dbg !8564
  %5 = icmp eq i32 %4, 0, !dbg !8565
  br i1 %5, label %7, label %6, !dbg !8566

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.99, i32 0, i32 0), i32 noundef 69) #24, !dbg !8567
  br label %7, !dbg !8573

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8574
  %9 = and i32 %8, 8, !dbg !8576
  %10 = icmp eq i32 %9, 0, !dbg !8577
  br i1 %10, label %12, label %11, !dbg !8578

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #24, !dbg !8579
  br label %12, !dbg !8585

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8586
  %14 = and i32 %13, 2, !dbg !8587
  %15 = icmp eq i32 %14, 0, !dbg !8588
  br i1 %15, label %26, label %16, !dbg !8589

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.100, i32 0, i32 0), i32 noundef 69) #24, !dbg !8590
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8595
  call void @llvm.dbg.value(metadata i32 %17, metadata !8553, metadata !DIExpression()), !dbg !8596
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8597
  %19 = and i32 %18, 128, !dbg !8599
  %20 = icmp eq i32 %19, 0, !dbg !8600
  br i1 %20, label %26, label %21, !dbg !8601

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8552, metadata !DIExpression()), !dbg !8556
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.101, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8602
  %22 = icmp eq i32 %0, 0, !dbg !8608
  br i1 %22, label %26, label %23, !dbg !8610

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8611
  %25 = and i32 %24, -129, !dbg !8611
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8611
  br label %26, !dbg !8613

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8552, metadata !DIExpression()), !dbg !8556
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8614
  %28 = and i32 %27, 1, !dbg !8616
  %29 = icmp eq i32 %28, 0, !dbg !8617
  br i1 %29, label %31, label %30, !dbg !8618

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.102, i32 0, i32 0), i32 noundef 69) #24, !dbg !8619
  br label %31, !dbg !8625

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8626
  %33 = and i32 %32, 32, !dbg !8628
  %34 = icmp eq i32 %33, 0, !dbg !8629
  br i1 %34, label %36, label %35, !dbg !8630

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.97, i32 0, i32 0), i32 noundef 69) #24, !dbg !8631
  br label %36, !dbg !8637

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8638
  %38 = and i32 %37, 16, !dbg !8640
  %39 = icmp eq i32 %38, 0, !dbg !8640
  br i1 %39, label %40, label %42, !dbg !8641

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8642
  br label %42, !dbg !8643

42:                                               ; preds = %40, %36
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8644
  %44 = and i32 %43, 32, !dbg !8646
  %45 = icmp eq i32 %44, 0, !dbg !8647
  br i1 %45, label %49, label %46, !dbg !8648

46:                                               ; preds = %42
  %47 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8649
  %48 = and i32 %47, -8193, !dbg !8649
  store volatile i32 %48, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8649
  br label %49, !dbg !8651

49:                                               ; preds = %46, %42
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8652
  %51 = or i32 %50, 255, !dbg !8652
  store volatile i32 %51, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8652
  store i8 0, i8* %1, align 1, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8659, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i32 %0, metadata !8660, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i8* %1, metadata !8661, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i32 0, metadata !8662, metadata !DIExpression()), !dbg !8666
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.90, i32 0, i32 0), i32 noundef 69) #24, !dbg !8667
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8672
  %4 = and i32 %3, 4096, !dbg !8674
  %5 = icmp eq i32 %4, 0, !dbg !8674
  br i1 %5, label %7, label %6, !dbg !8675

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.91, i32 0, i32 0), i32 noundef 69) #24, !dbg !8676
  br label %7, !dbg !8682

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8683
  %9 = and i32 %8, 2048, !dbg !8685
  %10 = icmp eq i32 %9, 0, !dbg !8685
  br i1 %10, label %12, label %11, !dbg !8686

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #24, !dbg !8687
  br label %12, !dbg !8693

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8694
  %14 = and i32 %13, 512, !dbg !8695
  %15 = icmp eq i32 %14, 0, !dbg !8695
  br i1 %15, label %26, label %16, !dbg !8696

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.93, i32 0, i32 0), i32 noundef 69) #24, !dbg !8697
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8702
  call void @llvm.dbg.value(metadata i32 %17, metadata !8663, metadata !DIExpression()), !dbg !8703
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8704
  %19 = and i32 %18, 32768, !dbg !8706
  %20 = icmp eq i32 %19, 0, !dbg !8707
  br i1 %20, label %26, label %21, !dbg !8708

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.94, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8709
  %22 = icmp eq i32 %0, 0, !dbg !8715
  br i1 %22, label %26, label %23, !dbg !8717

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8718
  %25 = and i32 %24, -32769, !dbg !8718
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8718
  br label %26, !dbg !8720

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8721
  %28 = and i32 %27, 1024, !dbg !8723
  %29 = icmp eq i32 %28, 0, !dbg !8723
  br i1 %29, label %31, label %30, !dbg !8724

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.95, i32 0, i32 0), i32 noundef 69) #24, !dbg !8725
  br label %31, !dbg !8731

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8732
  %33 = and i32 %32, 256, !dbg !8734
  %34 = icmp eq i32 %33, 0, !dbg !8735
  br i1 %34, label %35, label %39, !dbg !8736

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8737
  %37 = and i32 %36, 8192, !dbg !8739
  %38 = icmp eq i32 %37, 0, !dbg !8739
  br i1 %38, label %41, label %39, !dbg !8740

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.96, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.97, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !8741
  br label %41, !dbg !8742

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8742
  %43 = or i32 %42, 65280, !dbg !8742
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8742
  store i8 0, i8* %1, align 1, !dbg !8743
  ret void, !dbg !8744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8745 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8751, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i32 0, metadata !8752, metadata !DIExpression()), !dbg !8753
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.83, i32 0, i32 0), i32 noundef 69) #24, !dbg !8754
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8759
  %2 = and i32 %1, 33554432, !dbg !8761
  %3 = icmp eq i32 %2, 0, !dbg !8762
  br i1 %3, label %5, label %4, !dbg !8763

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.84, i32 0, i32 0), i32 noundef 69) #24, !dbg !8764
  br label %5, !dbg !8770

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8771
  %7 = and i32 %6, 16777216, !dbg !8773
  %8 = icmp eq i32 %7, 0, !dbg !8774
  br i1 %8, label %10, label %9, !dbg !8775

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.85, i32 0, i32 0), i32 noundef 69) #24, !dbg !8776
  br label %10, !dbg !8782

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8783
  %12 = and i32 %11, 524288, !dbg !8785
  %13 = icmp eq i32 %12, 0, !dbg !8786
  br i1 %13, label %15, label %14, !dbg !8787

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.86, i32 0, i32 0), i32 noundef 69) #24, !dbg !8788
  br label %15, !dbg !8794

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8795
  %17 = and i32 %16, 262144, !dbg !8797
  %18 = icmp eq i32 %17, 0, !dbg !8798
  br i1 %18, label %20, label %19, !dbg !8799

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.87, i32 0, i32 0), i32 noundef 69) #24, !dbg !8800
  br label %20, !dbg !8806

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8807
  %22 = and i32 %21, 131072, !dbg !8809
  %23 = icmp eq i32 %22, 0, !dbg !8810
  br i1 %23, label %25, label %24, !dbg !8811

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.88, i32 0, i32 0), i32 noundef 69) #24, !dbg !8812
  br label %25, !dbg !8818

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8819
  %27 = and i32 %26, 65536, !dbg !8821
  %28 = icmp eq i32 %27, 0, !dbg !8822
  br i1 %28, label %30, label %29, !dbg !8823

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.89, i32 0, i32 0), i32 noundef 69) #24, !dbg !8824
  br label %30, !dbg !8830

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8831
  %32 = or i32 %31, -65536, !dbg !8831
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8831
  ret void, !dbg !8832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8833 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %0, metadata !8838, metadata !DIExpression()), !dbg !8839
  store i8 0, i8* %0, align 1, !dbg !8840
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.82, i32 0, i32 0), i32 noundef 69) #24, !dbg !8841
  ret void, !dbg !8846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8847 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %0, metadata !8852, metadata !DIExpression()), !dbg !8853
  %2 = icmp slt i32 %0, 16, !dbg !8854
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.79, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.80, i32 0, i32 0), !dbg !8854
  %4 = add nsw i32 %0, -16, !dbg !8854
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.81, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !8854
  ret void, !dbg !8859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8860 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8864, metadata !DIExpression()), !dbg !8867
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8868
  %3 = load i32, i32* %2, align 4, !dbg !8868
  %4 = inttoptr i32 %3 to i16*, !dbg !8869
  call void @llvm.dbg.value(metadata i16* %4, metadata !8865, metadata !DIExpression()), !dbg !8867
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8870
  %6 = or i32 %5, 256, !dbg !8870
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8870
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !8871, !srcloc !8874
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !8875, !srcloc !8878
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8879
  %8 = load i16, i16* %7, align 2, !dbg !8880
  call void @llvm.dbg.value(metadata i16 %8, metadata !8866, metadata !DIExpression()), !dbg !8867
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8881
  %10 = and i32 %9, -257, !dbg !8881
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8881
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #22, !dbg !8882, !srcloc !8874
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #22, !dbg !8884, !srcloc !8878
  %11 = icmp eq i16 %8, -8446, !dbg !8886
  ret i1 %11, !dbg !8888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !8889 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8890
  %2 = or i32 %1, 16, !dbg !8890
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8890
  ret void, !dbg !8891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !8892 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8895, metadata !DIExpression()), !dbg !8896
  br label %1, !dbg !8897

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8895, metadata !DIExpression()), !dbg !8896
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef %2) #23, !dbg !8899
  %3 = add nuw nsw i32 %2, 1, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %3, metadata !8895, metadata !DIExpression()), !dbg !8896
  %4 = icmp eq i32 %3, 127, !dbg !8903
  br i1 %4, label %5, label %1, !dbg !8897, !llvm.loop !8904

5:                                                ; preds = %1
  ret void, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.111(i32 noundef %0) unnamed_addr #15 !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8909, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.value(metadata i32 1, metadata !8910, metadata !DIExpression()), !dbg !8911
  %2 = and i32 %0, 15, !dbg !8912
  %3 = add nsw i32 %2, -4, !dbg !8912
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8912
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8912
  %6 = icmp slt i32 %0, 0, !dbg !8912
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8912
  store volatile i8 16, i8* %7, align 1, !dbg !8913
  ret void, !dbg !8915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9016, metadata !DIExpression()), !dbg !9017
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9018
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9020
  br i1 %3, label %4, label %12, !dbg !9021

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !9022, !srcloc !9034
  call void @llvm.dbg.value(metadata i32 %5, metadata !9025, metadata !DIExpression()) #22, !dbg !9035
  %6 = icmp eq i32 %5, 0, !dbg !9036
  br i1 %6, label %12, label %7, !dbg !9037

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9038
  %9 = or i32 %8, 268435456, !dbg !9038
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9038
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9040
  %11 = and i32 %10, -32769, !dbg !9040
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9040
  br label %12, !dbg !9041

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9051, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i8* %1, metadata !9052, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i8* %0, metadata !9053, metadata !DIExpression()), !dbg !9054
  %3 = load i8, i8* %1, align 1, !dbg !9055
  %4 = icmp eq i8 %3, 0, !dbg !9056
  br i1 %4, label %13, label %5, !dbg !9057

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9051, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i8* %8, metadata !9052, metadata !DIExpression()), !dbg !9054
  store i8 %6, i8* %7, align 1, !dbg !9058
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9060
  call void @llvm.dbg.value(metadata i8* %9, metadata !9051, metadata !DIExpression()), !dbg !9054
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9061
  call void @llvm.dbg.value(metadata i8* %10, metadata !9052, metadata !DIExpression()), !dbg !9054
  %11 = load i8, i8* %10, align 1, !dbg !9055
  %12 = icmp eq i8 %11, 0, !dbg !9056
  br i1 %12, label %13, label %5, !dbg !9057, !llvm.loop !9062

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9064
  ret i8* %0, !dbg !9065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9070, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i8* %1, metadata !9071, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %2, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i8* %0, metadata !9073, metadata !DIExpression()), !dbg !9074
  %4 = icmp eq i32 %2, 0, !dbg !9075
  br i1 %4, label %22, label %5, !dbg !9076

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9070, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %7, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i8* %8, metadata !9071, metadata !DIExpression()), !dbg !9074
  %9 = load i8, i8* %8, align 1, !dbg !9077
  %10 = icmp eq i8 %9, 0, !dbg !9078
  br i1 %10, label %16, label %11, !dbg !9079

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9080
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9082
  call void @llvm.dbg.value(metadata i8* %12, metadata !9071, metadata !DIExpression()), !dbg !9074
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9083
  call void @llvm.dbg.value(metadata i8* %13, metadata !9070, metadata !DIExpression()), !dbg !9074
  %14 = add i32 %7, -1, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %14, metadata !9072, metadata !DIExpression()), !dbg !9074
  %15 = icmp eq i32 %14, 0, !dbg !9075
  br i1 %15, label %22, label %5, !dbg !9076, !llvm.loop !9085

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9070, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %18, metadata !9072, metadata !DIExpression()), !dbg !9074
  store i8 0, i8* %17, align 1, !dbg !9087
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9089
  call void @llvm.dbg.value(metadata i8* %19, metadata !9070, metadata !DIExpression()), !dbg !9074
  %20 = add i32 %18, -1, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %20, metadata !9072, metadata !DIExpression()), !dbg !9074
  %21 = icmp eq i32 %20, 0, !dbg !9091
  br i1 %21, label %22, label %16, !dbg !9092, !llvm.loop !9093

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9100, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %1, metadata !9101, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %1, metadata !9102, metadata !DIExpression()), !dbg !9103
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9104

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9100, metadata !DIExpression()), !dbg !9103
  %6 = load i8, i8* %5, align 1, !dbg !9105
  %7 = icmp eq i8 %6, %3, !dbg !9106
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9107
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9108
  call void @llvm.dbg.value(metadata i8* %10, metadata !9100, metadata !DIExpression()), !dbg !9103
  br i1 %9, label %11, label %4, !dbg !9107, !llvm.loop !9110

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9112
  ret i8* %12, !dbg !9113
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9116, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i8* null, metadata !9118, metadata !DIExpression()), !dbg !9119
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9120

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9119
  call void @llvm.dbg.value(metadata i8* %6, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i8* %5, metadata !9116, metadata !DIExpression()), !dbg !9119
  %7 = load i8, i8* %5, align 1, !dbg !9121
  %8 = icmp eq i8 %7, %3, !dbg !9124
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9125
  call void @llvm.dbg.value(metadata i8* %9, metadata !9118, metadata !DIExpression()), !dbg !9119
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9126
  call void @llvm.dbg.value(metadata i8* %10, metadata !9116, metadata !DIExpression()), !dbg !9119
  %11 = icmp eq i8 %7, 0, !dbg !9127
  br i1 %11, label %12, label %4, !dbg !9127, !llvm.loop !9128

12:                                               ; preds = %4
  ret i8* %9, !dbg !9130
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9135, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 0, metadata !9136, metadata !DIExpression()), !dbg !9137
  %2 = load i8, i8* %0, align 1, !dbg !9138
  %3 = icmp eq i8 %2, 0, !dbg !9139
  br i1 %3, label %11, label %4, !dbg !9140

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i8* %6, metadata !9135, metadata !DIExpression()), !dbg !9137
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9141
  call void @llvm.dbg.value(metadata i8* %7, metadata !9135, metadata !DIExpression()), !dbg !9137
  %8 = add i32 %5, 1, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %8, metadata !9136, metadata !DIExpression()), !dbg !9137
  %9 = load i8, i8* %7, align 1, !dbg !9138
  %10 = icmp eq i8 %9, 0, !dbg !9139
  br i1 %10, label %11, label %4, !dbg !9140, !llvm.loop !9144

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9137
  ret i32 %12, !dbg !9146
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9151, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i32 %1, metadata !9152, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i32 0, metadata !9153, metadata !DIExpression()), !dbg !9154
  %3 = load i8, i8* %0, align 1, !dbg !9155
  %4 = icmp ne i8 %3, 0, !dbg !9156
  %5 = icmp ne i32 %1, 0, !dbg !9157
  %6 = and i1 %4, %5, !dbg !9157
  br i1 %6, label %7, label %16, !dbg !9158

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9153, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i8* %9, metadata !9151, metadata !DIExpression()), !dbg !9154
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9159
  call void @llvm.dbg.value(metadata i8* %10, metadata !9151, metadata !DIExpression()), !dbg !9154
  %11 = add nuw i32 %8, 1, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %11, metadata !9153, metadata !DIExpression()), !dbg !9154
  %12 = load i8, i8* %10, align 1, !dbg !9155
  %13 = icmp ne i8 %12, 0, !dbg !9156
  %14 = icmp ult i32 %11, %1, !dbg !9157
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9157
  br i1 %15, label %7, label %16, !dbg !9158, !llvm.loop !9162

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9154
  ret i32 %17, !dbg !9164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9169, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i8* %1, metadata !9170, metadata !DIExpression()), !dbg !9171
  %3 = load i8, i8* %0, align 1, !dbg !9172
  %4 = load i8, i8* %1, align 1, !dbg !9173
  %5 = icmp ne i8 %3, %4, !dbg !9174
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9175
  br i1 %7, label %18, label %8, !dbg !9175

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9170, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i8* %10, metadata !9169, metadata !DIExpression()), !dbg !9171
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9176
  call void @llvm.dbg.value(metadata i8* %11, metadata !9169, metadata !DIExpression()), !dbg !9171
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9178
  call void @llvm.dbg.value(metadata i8* %12, metadata !9170, metadata !DIExpression()), !dbg !9171
  %13 = load i8, i8* %11, align 1, !dbg !9172
  %14 = load i8, i8* %12, align 1, !dbg !9173
  %15 = icmp ne i8 %13, %14, !dbg !9174
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9175
  br i1 %17, label %18, label %8, !dbg !9175, !llvm.loop !9179

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9172
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9173
  %21 = zext i8 %19 to i32, !dbg !9182
  %22 = zext i8 %20 to i32, !dbg !9183
  %23 = sub nsw i32 %21, %22, !dbg !9184
  ret i32 %23, !dbg !9185
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9190, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i8* %1, metadata !9191, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 %2, metadata !9192, metadata !DIExpression()), !dbg !9193
  %4 = icmp eq i32 %2, 0, !dbg !9194
  br i1 %4, label %23, label %5, !dbg !9194

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i8* %7, metadata !9191, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i8* %8, metadata !9190, metadata !DIExpression()), !dbg !9193
  %9 = load i8, i8* %8, align 1, !dbg !9195
  %10 = load i8, i8* %7, align 1, !dbg !9196
  %11 = icmp ne i8 %9, %10, !dbg !9197
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9198
  br i1 %13, label %19, label %14, !dbg !9198

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9199
  call void @llvm.dbg.value(metadata i8* %15, metadata !9190, metadata !DIExpression()), !dbg !9193
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9201
  call void @llvm.dbg.value(metadata i8* %16, metadata !9191, metadata !DIExpression()), !dbg !9193
  %17 = add i32 %6, -1, !dbg !9202
  call void @llvm.dbg.value(metadata i32 %17, metadata !9192, metadata !DIExpression()), !dbg !9193
  %18 = icmp eq i32 %17, 0, !dbg !9194
  br i1 %18, label %23, label %5, !dbg !9194, !llvm.loop !9203

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9206
  %21 = zext i8 %10 to i32, !dbg !9207
  %22 = sub nsw i32 %20, %21, !dbg !9208
  br label %23, !dbg !9209

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9209
  ret i32 %24, !dbg !9210
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9211 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9215, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata i8* %1, metadata !9216, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata i8** %2, metadata !9217, metadata !DIExpression()), !dbg !9220
  %4 = icmp eq i8* %0, null, !dbg !9221
  br i1 %4, label %5, label %7, !dbg !9221

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9222
  br label %7, !dbg !9221

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9221
  call void @llvm.dbg.value(metadata i8* %8, metadata !9218, metadata !DIExpression()), !dbg !9220
  %9 = load i8, i8* %8, align 1, !dbg !9223
  %10 = icmp eq i8 %9, 0, !dbg !9223
  br i1 %10, label %33, label %11, !dbg !9224

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9218, metadata !DIExpression()), !dbg !9220
  %14 = zext i8 %12 to i32, !dbg !9223
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #23, !dbg !9225
  %16 = icmp eq i8* %15, null, !dbg !9224
  br i1 %16, label %21, label %17, !dbg !9226

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9227
  call void @llvm.dbg.value(metadata i8* %18, metadata !9218, metadata !DIExpression()), !dbg !9220
  %19 = load i8, i8* %18, align 1, !dbg !9223
  %20 = icmp eq i8 %19, 0, !dbg !9223
  br i1 %20, label %33, label %11, !dbg !9224, !llvm.loop !9229

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9219, metadata !DIExpression()), !dbg !9220
  %24 = zext i8 %22 to i32, !dbg !9231
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #23, !dbg !9232
  %26 = icmp eq i8* %25, null, !dbg !9233
  br i1 %26, label %27, label %31, !dbg !9234

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9235
  call void @llvm.dbg.value(metadata i8* %28, metadata !9219, metadata !DIExpression()), !dbg !9220
  %29 = load i8, i8* %28, align 1, !dbg !9231
  %30 = icmp eq i8 %29, 0, !dbg !9231
  br i1 %30, label %33, label %21, !dbg !9237, !llvm.loop !9238

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9240
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9243
  br label %33, !dbg !9244

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9220
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9220
  store i8* %34, i8** %2, align 4, !dbg !9220
  ret i8* %35, !dbg !9245
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9248, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i8* %1, metadata !9249, metadata !DIExpression()), !dbg !9250
  %3 = tail call i32 @strlen(i8* noundef %0) #23, !dbg !9251
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9252
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #23, !dbg !9253
  ret i8* %0, !dbg !9254
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9255 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9257, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8* %1, metadata !9258, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %2, metadata !9259, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8* %0, metadata !9260, metadata !DIExpression()), !dbg !9262
  %4 = tail call i32 @strlen(i8* noundef %0) #23, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %4, metadata !9261, metadata !DIExpression()), !dbg !9262
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9264
  call void @llvm.dbg.value(metadata i8* %5, metadata !9257, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8* %1, metadata !9258, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %2, metadata !9259, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %2, metadata !9259, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9262
  %6 = icmp eq i32 %2, 0, !dbg !9265
  br i1 %6, label %18, label %7, !dbg !9266

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9267
  call void @llvm.dbg.value(metadata i8* %9, metadata !9257, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8* %10, metadata !9258, metadata !DIExpression()), !dbg !9262
  %12 = load i8, i8* %10, align 1, !dbg !9268
  %13 = icmp eq i8 %12, 0, !dbg !9269
  br i1 %13, label %18, label %14, !dbg !9270

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9271
  call void @llvm.dbg.value(metadata i8* %15, metadata !9258, metadata !DIExpression()), !dbg !9262
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9273
  call void @llvm.dbg.value(metadata i8* %16, metadata !9257, metadata !DIExpression()), !dbg !9262
  store i8 %12, i8* %9, align 1, !dbg !9274
  call void @llvm.dbg.value(metadata i32 %11, metadata !9259, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %11, metadata !9259, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9262
  %17 = icmp eq i32 %11, 0, !dbg !9265
  br i1 %17, label %18, label %7, !dbg !9266, !llvm.loop !9275

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9262
  store i8 0, i8* %19, align 1, !dbg !9277
  ret i8* %0, !dbg !9278
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9283, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i8* %1, metadata !9284, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 %2, metadata !9285, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i8* %0, metadata !9286, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i8* %1, metadata !9287, metadata !DIExpression()), !dbg !9288
  %4 = icmp eq i32 %2, 0, !dbg !9289
  br i1 %4, label %31, label %5, !dbg !9291

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i8* %0, metadata !9286, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 %2, metadata !9285, metadata !DIExpression()), !dbg !9288
  %6 = add i32 %2, -1, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %6, metadata !9285, metadata !DIExpression()), !dbg !9288
  %7 = icmp eq i32 %6, 0, !dbg !9293
  br i1 %7, label %23, label %8, !dbg !9294

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9295
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9295
  br label %11, !dbg !9295

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i8* %14, metadata !9286, metadata !DIExpression()), !dbg !9288
  %15 = load i8, i8* %14, align 1, !dbg !9296
  %16 = load i8, i8* %13, align 1, !dbg !9297
  %17 = icmp eq i8 %15, %16, !dbg !9298
  br i1 %17, label %18, label %23, !dbg !9295

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9299
  call void @llvm.dbg.value(metadata i8* %19, metadata !9286, metadata !DIExpression()), !dbg !9288
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9301
  call void @llvm.dbg.value(metadata i8* %20, metadata !9287, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata i32 %12, metadata !9285, metadata !DIExpression()), !dbg !9288
  %21 = add i32 %12, -1, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %21, metadata !9285, metadata !DIExpression()), !dbg !9288
  %22 = icmp eq i32 %21, 0, !dbg !9293
  br i1 %22, label %23, label %11, !dbg !9294, !llvm.loop !9302

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9288
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9288
  %26 = load i8, i8* %24, align 1, !dbg !9304
  %27 = zext i8 %26 to i32, !dbg !9304
  %28 = load i8, i8* %25, align 1, !dbg !9305
  %29 = zext i8 %28 to i32, !dbg !9305
  %30 = sub nsw i32 %27, %29, !dbg !9306
  br label %31, !dbg !9307

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9288
  ret i32 %32, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9309 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9313, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i8* %1, metadata !9314, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i32 %2, metadata !9315, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i8* %0, metadata !9316, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i8* %1, metadata !9317, metadata !DIExpression()), !dbg !9318
  %4 = ptrtoint i8* %0 to i32, !dbg !9319
  %5 = ptrtoint i8* %1 to i32, !dbg !9319
  %6 = sub i32 %4, %5, !dbg !9319
  %7 = icmp ult i32 %6, %2, !dbg !9321
  br i1 %7, label %10, label %8, !dbg !9322

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9317, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i8* %0, metadata !9316, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i32 %2, metadata !9315, metadata !DIExpression()), !dbg !9318
  %9 = icmp eq i32 %2, 0, !dbg !9323
  br i1 %9, label %26, label %17, !dbg !9325

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9315, metadata !DIExpression()), !dbg !9318
  %12 = add i32 %11, -1, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %12, metadata !9315, metadata !DIExpression()), !dbg !9318
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9329
  %14 = load i8, i8* %13, align 1, !dbg !9329
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9330
  store i8 %14, i8* %15, align 1, !dbg !9331
  %16 = icmp eq i32 %12, 0, !dbg !9332
  br i1 %16, label %26, label %10, !dbg !9333, !llvm.loop !9334

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9317, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i8* %19, metadata !9316, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.value(metadata i32 %20, metadata !9315, metadata !DIExpression()), !dbg !9318
  %21 = load i8, i8* %18, align 1, !dbg !9336
  store i8 %21, i8* %19, align 1, !dbg !9338
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9339
  call void @llvm.dbg.value(metadata i8* %22, metadata !9316, metadata !DIExpression()), !dbg !9318
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9340
  call void @llvm.dbg.value(metadata i8* %23, metadata !9317, metadata !DIExpression()), !dbg !9318
  %24 = add i32 %20, -1, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %24, metadata !9315, metadata !DIExpression()), !dbg !9318
  %25 = icmp eq i32 %24, 0, !dbg !9323
  br i1 %25, label %26, label %17, !dbg !9325, !llvm.loop !9342

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9344
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9345 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9351, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %1, metadata !9352, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %2, metadata !9353, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %0, metadata !9354, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %1, metadata !9355, metadata !DIExpression()), !dbg !9356
  %4 = icmp eq i32 %2, 0, !dbg !9357
  br i1 %4, label %14, label %5, !dbg !9358

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %7, metadata !9354, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %8, metadata !9353, metadata !DIExpression()), !dbg !9356
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9359
  call void @llvm.dbg.value(metadata i8* %9, metadata !9355, metadata !DIExpression()), !dbg !9356
  %10 = load i8, i8* %6, align 1, !dbg !9361
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9362
  call void @llvm.dbg.value(metadata i8* %11, metadata !9354, metadata !DIExpression()), !dbg !9356
  store i8 %10, i8* %7, align 1, !dbg !9363
  %12 = add i32 %8, -1, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %12, metadata !9353, metadata !DIExpression()), !dbg !9356
  %13 = icmp eq i32 %12, 0, !dbg !9357
  br i1 %13, label %14, label %5, !dbg !9358, !llvm.loop !9365

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9367
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !9368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9372, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i32 %1, metadata !9373, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i32 %2, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %0, metadata !9375, metadata !DIExpression()), !dbg !9377
  %4 = trunc i32 %1 to i8, !dbg !9378
  call void @llvm.dbg.value(metadata i8 %4, metadata !9376, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i32 %2, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %0, metadata !9375, metadata !DIExpression()), !dbg !9377
  %5 = icmp eq i32 %2, 0, !dbg !9379
  br i1 %5, label %12, label %6, !dbg !9380

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %8, metadata !9375, metadata !DIExpression()), !dbg !9377
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9381
  call void @llvm.dbg.value(metadata i8* %9, metadata !9375, metadata !DIExpression()), !dbg !9377
  store i8 %4, i8* %8, align 1, !dbg !9383
  %10 = add i32 %7, -1, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %10, metadata !9374, metadata !DIExpression()), !dbg !9377
  %11 = icmp eq i32 %10, 0, !dbg !9379
  br i1 %11, label %12, label %6, !dbg !9380, !llvm.loop !9385

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9387
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9392, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %1, metadata !9393, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %2, metadata !9394, metadata !DIExpression()), !dbg !9398
  %4 = icmp eq i32 %2, 0, !dbg !9399
  br i1 %4, label %17, label %5, !dbg !9400

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9401

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9402
  call void @llvm.dbg.value(metadata i8* %9, metadata !9395, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %8, metadata !9394, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8* %9, metadata !9395, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9402
  %10 = load i8, i8* %9, align 1, !dbg !9403
  %11 = icmp eq i8 %10, %6, !dbg !9406
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9407
  call void @llvm.dbg.value(metadata i8* %12, metadata !9395, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %13, metadata !9394, metadata !DIExpression()), !dbg !9398
  br i1 %15, label %16, label %7, !dbg !9407, !llvm.loop !9408

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9410

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9398
  ret i8* %19, !dbg !9411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9412 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9414, metadata !DIExpression()), !dbg !9415
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9416
  ret void, !dbg !9417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !9418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9420, metadata !DIExpression()), !dbg !9421
  ret i32 -1, !dbg !9422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9427, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i32* %1, metadata !9428, metadata !DIExpression()), !dbg !9429
  %3 = ptrtoint i32* %1 to i32, !dbg !9430
  %4 = and i32 %3, -2, !dbg !9430
  %5 = icmp eq i32 %4, 2, !dbg !9430
  br i1 %5, label %6, label %9, !dbg !9430

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9431
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !9431
  br label %9, !dbg !9432

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9432
  ret i32 %10, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9436, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32* %1, metadata !9437, metadata !DIExpression()), !dbg !9438
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #23, !dbg !9439
  ret i32 %3, !dbg !9440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i32* %1, metadata !9445, metadata !DIExpression()), !dbg !9446
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !9447, !srcloc !9449
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #23, !dbg !9450
  ret i32 %3, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9457, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32* %1, metadata !9458, metadata !DIExpression()), !dbg !9461
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %3, metadata !9459, metadata !DIExpression()), !dbg !9461
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #23, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %4, metadata !9460, metadata !DIExpression()), !dbg !9461
  %5 = icmp ne i32 %3, %4, !dbg !9464
  %6 = sext i1 %5 to i32, !dbg !9465
  ret i32 %6, !dbg !9466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9467 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9471, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %1, metadata !9472, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32 %2, metadata !9473, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i32* %3, metadata !9474, metadata !DIExpression()), !dbg !9475
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #23, !dbg !9476
  ret i32 %5, !dbg !9477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9480, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32 %1, metadata !9481, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32 %2, metadata !9482, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32* %3, metadata !9483, metadata !DIExpression()), !dbg !9484
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !9485, !srcloc !9487
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #23, !dbg !9488
  ret i32 %5, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9492, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %1, metadata !9493, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %2, metadata !9494, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32* %3, metadata !9495, metadata !DIExpression()), !dbg !9500
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9501
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9503
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9503
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9503
  br i1 %11, label %33, label %12, !dbg !9503

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9500
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9500
  call void @llvm.dbg.value(metadata i8* %14, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %13, metadata !9496, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %1, metadata !9497, metadata !DIExpression()), !dbg !9500
  br label %15, !dbg !9504

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9506
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9500
  call void @llvm.dbg.value(metadata i8* %17, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %16, metadata !9497, metadata !DIExpression()), !dbg !9500
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9507
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9510
  call void @llvm.dbg.value(metadata i8* %19, metadata !9498, metadata !DIExpression()), !dbg !9500
  %20 = load i8, i8* %17, align 1, !dbg !9511
  %21 = zext i8 %20 to i32, !dbg !9512
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !9507
  %23 = icmp eq i32 %22, -1, !dbg !9513
  br i1 %23, label %30, label %24, !dbg !9514

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %25, metadata !9497, metadata !DIExpression()), !dbg !9500
  %26 = icmp eq i32 %25, 0, !dbg !9516
  br i1 %26, label %27, label %15, !dbg !9517, !llvm.loop !9518

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9520
  call void @llvm.dbg.value(metadata i32 %28, metadata !9496, metadata !DIExpression()), !dbg !9500
  %29 = icmp eq i32 %28, 0, !dbg !9521
  br i1 %29, label %30, label %12, !dbg !9522, !llvm.loop !9523

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9500
  call void @llvm.dbg.value(metadata i32 %31, metadata !9496, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.label(metadata !9499), !dbg !9526
  %32 = sub i32 %2, %31, !dbg !9527
  br label %33, !dbg !9528

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9500
  ret i32 %34, !dbg !9529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9534, metadata !DIExpression()), !dbg !9535
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #23, !dbg !9536
  %3 = icmp eq i32 %2, -1, !dbg !9538
  br i1 %3, label %8, label %4, !dbg !9539

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #23, !dbg !9540
  %6 = icmp eq i32 %5, -1, !dbg !9541
  %7 = sext i1 %6 to i32, !dbg !9540
  br label %8, !dbg !9542

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9535
  ret i32 %9, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9546, metadata !DIExpression()), !dbg !9547
  %2 = tail call fastcc zeroext i1 @device_is_ready() #23, !dbg !9548
  br i1 %2, label %3, label %4, !dbg !9550

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #23, !dbg !9551
  br label %4, !dbg !9552

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9547
  ret i32 %5, !dbg !9553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9554 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9558, metadata !DIExpression()), !dbg !9559
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !9560, !srcloc !9562
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #23, !dbg !9563
  ret i1 %1, !dbg !9564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9565 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9566
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9572
  %2 = icmp eq i32 %0, 10, !dbg !9573
  br i1 %2, label %3, label %4, !dbg !9575

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #23, !dbg !9576
  br label %4, !dbg !9578

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9579
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #23, !dbg !9580
  ret i32 %0, !dbg !9581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9582 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9585, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i8 %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !9588, !srcloc !9590
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #23, !dbg !9591
  ret void, !dbg !9592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9593 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9595, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i8 %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9597, metadata !DIExpression()), !dbg !9598
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9600
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9600
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9603 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9605, metadata !DIExpression()), !dbg !9606
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !9607
  ret i1 %1, !dbg !9608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !9609 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9656, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9657, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9658, metadata !DIExpression()), !dbg !9659
  ret void, !dbg !9660
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !9661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9663, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 0, metadata !9664, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 0, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !9666
  call void @llvm.dbg.value(metadata i32 1, metadata !9664, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 1, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !9666
  call void @llvm.dbg.value(metadata i32 2, metadata !9664, metadata !DIExpression()), !dbg !9665
  ret i32 0, !dbg !9670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !9671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  ret i32 50, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !9676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9678, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !9679, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %2, metadata !9680, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %3, metadata !9681, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %4, metadata !9682, metadata !DIExpression()), !dbg !9686
  %6 = icmp eq i32 %2, 1, !dbg !9687
  br i1 %6, label %8, label %7, !dbg !9689

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 69) #24, !dbg !9690
  br label %70, !dbg !9696

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !9697
  %10 = load i16, i16* %9, align 2, !dbg !9697
  %11 = and i16 %10, 32, !dbg !9699
  %12 = icmp eq i16 %11, 0, !dbg !9699
  br i1 %12, label %13, label %14, !dbg !9700

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.129, i32 0, i32 0), i32 noundef 69) #24, !dbg !9701
  br label %70, !dbg !9707

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !9708
  %16 = load i16, i16* %15, align 4, !dbg !9708
  %17 = icmp eq i16 %16, 16, !dbg !9710
  br i1 %17, label %19, label %18, !dbg !9711

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.130, i32 0, i32 0), i32 noundef 69) #24, !dbg !9712
  br label %70, !dbg !9718

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !9719
  br i1 %20, label %21, label %37, !dbg !9721

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !9722

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9724
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !9724
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !9726
  br label %53, !dbg !9727

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !9728
  %27 = load i32, i32* %26, align 4, !dbg !9728
  %28 = icmp eq i32 %27, 32, !dbg !9730
  br i1 %28, label %30, label %29, !dbg !9731

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.131, i32 0, i32 0), i32 noundef 69) #24, !dbg !9732
  br label %70, !dbg !9738

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9739
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !9739
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !9740
  br label %53, !dbg !9741

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9742
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !9742
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !9743
  br label %53, !dbg !9744

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.132, i32 0, i32 0), i32 noundef 69) #24, !dbg !9745
  br label %70, !dbg !9750

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !9751

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9753
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !9753
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !9755
  br label %53, !dbg !9756

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !9757
  %43 = load i32, i32* %42, align 4, !dbg !9757
  %44 = icmp eq i32 %43, 32, !dbg !9759
  br i1 %44, label %46, label %45, !dbg !9760

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.131, i32 0, i32 0), i32 noundef 69) #24, !dbg !9761
  br label %70, !dbg !9767

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9768
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !9768
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !9769
  br label %53, !dbg !9770

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !9771
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !9771
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !9772
  br label %53, !dbg !9773

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.132, i32 0, i32 0), i32 noundef 69) #24, !dbg !9774
  br label %70, !dbg !9779

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !9780
  store i32 %3, i32* %54, align 4, !dbg !9781
  %55 = tail call fastcc i32 @get_unused_session() #23, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %55, metadata !9685, metadata !DIExpression()), !dbg !9686
  %56 = icmp eq i32 %55, 2, !dbg !9783
  br i1 %56, label %57, label %58, !dbg !9785

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.133, i32 0, i32 0), i32 noundef 69) #24, !dbg !9786
  br label %70, !dbg !9792

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !9793
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !9683, metadata !DIExpression()), !dbg !9686
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !9794
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !9796
  %62 = load i8*, i8** %61, align 4, !dbg !9796
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #24, !dbg !9797
  %64 = icmp eq i32 %63, 0, !dbg !9798
  br i1 %64, label %65, label %67, !dbg !9799

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.134, i32 0, i32 0), i32 noundef 69) #24, !dbg !9800
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !9806
  store i32 0, i32* %66, align 4, !dbg !9807
  br label %70, !dbg !9808

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !9809
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !9810
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !9810
  br label %70, !dbg !9811

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !9686
  ret i32 %71, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9815, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !9816, metadata !DIExpression()), !dbg !9818
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !9819
  %4 = load i8*, i8** %3, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata i8* %4, metadata !9817, metadata !DIExpression()), !dbg !9818
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #24, !dbg !9820
  %6 = bitcast i8* %4 to i32*, !dbg !9821
  store i32 0, i32* %6, align 4, !dbg !9822
  ret i32 0, !dbg !9823
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !9824 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !9826, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !9827, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %2, metadata !9828, metadata !DIExpression()), !dbg !9830
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !9831
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !9831
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !9831
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !9829, metadata !DIExpression()), !dbg !9830
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !9832
  %8 = load i8*, i8** %7, align 4, !dbg !9832
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !9834
  %10 = load i32, i32* %9, align 4, !dbg !9834
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !9835
  %12 = load i8*, i8** %11, align 4, !dbg !9835
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !9836
  %14 = load i32, i32* %13, align 4, !dbg !9836
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !9837
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #24, !dbg !9838
  %17 = icmp eq i32 %16, 0, !dbg !9839
  br i1 %17, label %18, label %19, !dbg !9840

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.143, i32 0, i32 0), i32 noundef 69) #24, !dbg !9841
  br label %22, !dbg !9847

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !9848
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !9849
  store i32 %20, i32* %21, align 4, !dbg !9850
  br label %22, !dbg !9851

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !9830
  ret i32 %23, !dbg !9852
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !9853 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !9855, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !9856, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i8* %2, metadata !9857, metadata !DIExpression()), !dbg !9861
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !9862
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !9862
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !9862
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !9858, metadata !DIExpression()), !dbg !9861
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !9863
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #22, !dbg !9863
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !9859, metadata !DIExpression()), !dbg !9864
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !9864
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !9865
  %10 = load i16, i16* %9, align 4, !dbg !9865
  %11 = zext i16 %10 to i32, !dbg !9866
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !9867
  %13 = load i32, i32* %12, align 4, !dbg !9867
  %14 = lshr i32 %13, 3, !dbg !9868
  %15 = sub nsw i32 %11, %14, !dbg !9869
  call void @llvm.dbg.value(metadata i32 %15, metadata !9860, metadata !DIExpression()), !dbg !9861
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #24, !dbg !9870
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !9871
  %18 = load i8*, i8** %17, align 4, !dbg !9871
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !9873
  %20 = load i32, i32* %19, align 4, !dbg !9873
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !9874
  %22 = load i8*, i8** %21, align 4, !dbg !9874
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !9875
  %24 = load i32, i32* %23, align 4, !dbg !9875
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !9876
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #24, !dbg !9877
  %27 = icmp eq i32 %26, 0, !dbg !9878
  br i1 %27, label %28, label %29, !dbg !9879

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.142, i32 0, i32 0), i32 noundef 69) #24, !dbg !9880
  br label %32, !dbg !9886

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !9887
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !9888
  store i32 %30, i32* %31, align 4, !dbg !9889
  br label %32, !dbg !9890

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !9861
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #22, !dbg !9891
  ret i32 %33, !dbg !9891
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !9892 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !9894, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !9895, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.value(metadata i8* %2, metadata !9896, metadata !DIExpression()), !dbg !9909
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !9910
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #22, !dbg !9910
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !9897, metadata !DIExpression()), !dbg !9911
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !9912
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !9912
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !9905, metadata !DIExpression()), !dbg !9909
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !9913
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !9914
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !9906, metadata !DIExpression()), !dbg !9909
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !9915
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !9908, metadata !DIExpression()), !dbg !9909
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !9916
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !9918
  %15 = load i16, i16* %14, align 2, !dbg !9918
  %16 = zext i16 %15 to i32, !dbg !9919
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !9920
  %18 = load i16, i16* %17, align 2, !dbg !9920
  %19 = zext i16 %18 to i32, !dbg !9921
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #24, !dbg !9922
  %21 = icmp eq i32 %20, 0, !dbg !9923
  br i1 %21, label %22, label %23, !dbg !9924

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.140, i32 0, i32 0), i32 noundef 69) #24, !dbg !9925
  br label %56, !dbg !9931

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !9932
  %25 = load i8*, i8** %24, align 4, !dbg !9932
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !9934
  %27 = load i32, i32* %26, align 4, !dbg !9934
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !9935
  %29 = load i8*, i8** %28, align 4, !dbg !9935
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !9936
  %31 = load i32, i32* %30, align 4, !dbg !9936
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !9937
  %33 = load i8*, i8** %32, align 4, !dbg !9937
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !9938
  %35 = load i32, i32* %34, align 4, !dbg !9938
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #24, !dbg !9939
  %37 = icmp eq i32 %36, 0, !dbg !9940
  br i1 %37, label %38, label %39, !dbg !9941

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.141, i32 0, i32 0), i32 noundef 69) #24, !dbg !9942
  br label %56, !dbg !9948

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !9949
  %41 = load i8*, i8** %40, align 4, !dbg !9949
  %42 = icmp eq i8* %41, null, !dbg !9951
  br i1 %42, label %50, label %43, !dbg !9952

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !9953
  %45 = load i32, i32* %34, align 4, !dbg !9955
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !9956
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !9957
  %48 = load i32, i32* %47, align 4, !dbg !9957
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #24, !dbg !9958
  br label %50, !dbg !9959

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !9960
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !9961
  %53 = load i32, i32* %52, align 4, !dbg !9961
  %54 = add i32 %53, %51, !dbg !9962
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !9963
  store i32 %54, i32* %55, align 4, !dbg !9964
  br label %56, !dbg !9965

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !9909
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #22, !dbg !9966
  ret i32 %57, !dbg !9966
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !9967 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !9969, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !9970, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i8* %2, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !9972, metadata !DIExpression()), !dbg !9973
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !9974
  %5 = load i8*, i8** %4, align 4, !dbg !9974
  %6 = icmp eq i8* %5, %2, !dbg !9976
  br i1 %6, label %8, label %7, !dbg !9977

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.138, i32 0, i32 0), i32 noundef 69) #24, !dbg !9978
  br label %27, !dbg !9984

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !9985
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !9985
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !9985
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !9972, metadata !DIExpression()), !dbg !9973
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !9986
  %13 = load i8*, i8** %12, align 4, !dbg !9986
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !9988
  %15 = load i32, i32* %14, align 4, !dbg !9988
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !9989
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !9990
  %18 = load i32, i32* %17, align 4, !dbg !9990
  %19 = add nsw i32 %18, -16, !dbg !9991
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !9992
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #24, !dbg !9993
  %22 = icmp eq i32 %21, 0, !dbg !9994
  br i1 %22, label %23, label %24, !dbg !9995

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.139, i32 0, i32 0), i32 noundef 69) #24, !dbg !9996
  br label %27, !dbg !10002

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !10003
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !10004
  store i32 %25, i32* %26, align 4, !dbg !10005
  br label %27, !dbg !10006

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !9973
  ret i32 %28, !dbg !10007
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !10008 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !10010, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !10011, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %2, metadata !10012, metadata !DIExpression()), !dbg !10017
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !10018
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #22, !dbg !10018
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !10013, metadata !DIExpression()), !dbg !10019
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !10020
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !10020
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !10014, metadata !DIExpression()), !dbg !10017
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !10021
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !10022
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !10015, metadata !DIExpression()), !dbg !10017
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !10023
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !10016, metadata !DIExpression()), !dbg !10017
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !10024
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !10026
  %15 = load i16, i16* %14, align 2, !dbg !10026
  %16 = zext i16 %15 to i32, !dbg !10027
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !10028
  %18 = load i16, i16* %17, align 2, !dbg !10028
  %19 = zext i16 %18 to i32, !dbg !10029
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #24, !dbg !10030
  %21 = icmp eq i32 %20, 0, !dbg !10031
  br i1 %21, label %22, label %23, !dbg !10032

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.135, i32 0, i32 0), i32 noundef 69) #24, !dbg !10033
  br label %54, !dbg !10039

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !10040
  %25 = load i8*, i8** %24, align 4, !dbg !10040
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !10042
  %27 = load i8*, i8** %26, align 4, !dbg !10042
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !10043
  %29 = load i32, i32* %28, align 4, !dbg !10043
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !10044
  %31 = icmp eq i8* %25, %30, !dbg !10045
  br i1 %31, label %33, label %32, !dbg !10046

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.136, i32 0, i32 0), i32 noundef 69) #24, !dbg !10047
  br label %54, !dbg !10053

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !10054
  %35 = load i8*, i8** %34, align 4, !dbg !10054
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !10056
  %37 = load i32, i32* %36, align 4, !dbg !10056
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !10057
  %39 = load i8*, i8** %38, align 4, !dbg !10057
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !10058
  %41 = load i32, i32* %40, align 4, !dbg !10058
  %42 = load i16, i16* %17, align 2, !dbg !10059
  %43 = zext i16 %42 to i32, !dbg !10060
  %44 = add nsw i32 %29, %43, !dbg !10061
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #24, !dbg !10062
  %46 = icmp eq i32 %45, 0, !dbg !10063
  br i1 %46, label %47, label %48, !dbg !10064

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.137, i32 0, i32 0), i32 noundef 69) #24, !dbg !10065
  br label %54, !dbg !10071

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !10072
  %50 = load i16, i16* %17, align 2, !dbg !10073
  %51 = zext i16 %50 to i32, !dbg !10074
  %52 = add nsw i32 %49, %51, !dbg !10075
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !10076
  store i32 %52, i32* %53, align 4, !dbg !10077
  br label %54, !dbg !10078

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !10017
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #22, !dbg !10079
  ret i32 %55, !dbg !10079
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !10080 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10084, metadata !DIExpression()), !dbg !10085
  br label %1, !dbg !10086

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10084, metadata !DIExpression()), !dbg !10085
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !10088
  %5 = load i32, i32* %4, align 4, !dbg !10088
  %6 = icmp eq i32 %5, 0, !dbg !10092
  br i1 %6, label %7, label %8, !dbg !10093

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !10094
  br label %9, !dbg !10096

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !10084, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10085
  br i1 %2, label %1, label %9, !dbg !10086, !llvm.loop !10097

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !10099
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10100 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10102, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i8 %1, metadata !10103, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata i32 %2, metadata !10104, metadata !DIExpression()), !dbg !10115
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10116
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !10116
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !10116
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !10105, metadata !DIExpression()), !dbg !10115
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !10117
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10117
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !10107, metadata !DIExpression()), !dbg !10115
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !10118
  %13 = icmp eq i32 %12, 196608, !dbg !10118
  br i1 %13, label %66, label %14, !dbg !10118

14:                                               ; preds = %3
  %15 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !10120
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #22, !dbg !10120
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !10108, metadata !DIExpression()), !dbg !10121
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !10122
  %17 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %16, align 4, !dbg !10122
  %18 = zext i8 %1 to i32, !dbg !10123
  %19 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, i32 1, !dbg !10124
  %20 = load i32, i32* %19, align 4, !dbg !10124
  %21 = inttoptr i32 %20 to i32*, !dbg !10125
  call void @llvm.dbg.value(metadata i32* %21, metadata !10113, metadata !DIExpression()), !dbg !10115
  %22 = load volatile i32, i32* %21, align 4, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %22, metadata !10114, metadata !DIExpression()), !dbg !10115
  %23 = and i32 %2, 2, !dbg !10127
  %24 = icmp eq i32 %23, 0, !dbg !10129
  br i1 %24, label %25, label %64, !dbg !10130

25:                                               ; preds = %14
  %26 = and i32 %2, 48, !dbg !10131
  %27 = icmp eq i32 %26, 0, !dbg !10131
  br i1 %27, label %36, label %28, !dbg !10131

28:                                               ; preds = %25
  %29 = and i32 %2, 16, !dbg !10133
  %30 = icmp eq i32 %29, 0, !dbg !10134
  call void @llvm.dbg.value(metadata i32 %22, metadata !10114, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !10115
  br i1 %30, label %33, label %31, !dbg !10135

31:                                               ; preds = %28
  %32 = or i32 %22, 48, !dbg !10137
  call void @llvm.dbg.value(metadata i32 %32, metadata !10114, metadata !DIExpression()), !dbg !10115
  br label %38, !dbg !10140

33:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %22, metadata !10114, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !10115
  %34 = and i32 %22, -49, !dbg !10141
  %35 = or i32 %34, 16, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %35, metadata !10114, metadata !DIExpression()), !dbg !10115
  br label %38

36:                                               ; preds = %25
  %37 = and i32 %22, -17, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %37, metadata !10114, metadata !DIExpression()), !dbg !10115
  br label %38

38:                                               ; preds = %31, %33, %36
  %39 = phi i32 [ %32, %31 ], [ %35, %33 ], [ %37, %36 ], !dbg !10145
  call void @llvm.dbg.value(metadata i32 %39, metadata !10114, metadata !DIExpression()), !dbg !10115
  %40 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %17, i32 %18, !dbg !10146
  %41 = bitcast %struct.pinctrl_soc_pinmux* %40 to i8*, !dbg !10147
  %42 = call i8* @memcpy(i8* noundef nonnull %15, i8* noundef %41, i32 noundef 20) #24, !dbg !10148
  %43 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !10149
  store i32 %39, i32* %43, align 4, !dbg !10150
  %44 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !10151
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !10152
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %18, i1 noundef zeroext false) #24, !dbg !10153
  br i1 %11, label %58, label %45, !dbg !10154

45:                                               ; preds = %38
  %46 = and i32 %2, 262144, !dbg !10155
  %47 = icmp eq i32 %46, 0, !dbg !10159
  br i1 %47, label %48, label %51, !dbg !10160

48:                                               ; preds = %45
  %49 = and i32 %2, 524288, !dbg !10161
  %50 = icmp eq i32 %49, 0, !dbg !10163
  br i1 %50, label %53, label %51, !dbg !10164

51:                                               ; preds = %48, %45
  %52 = phi i32 [ 0, %45 ], [ 1, %48 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %18, i32 noundef %52) #24, !dbg !10165
  br label %53, !dbg !10166

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10166
  %55 = load volatile i32, i32* %54, align 4, !dbg !10166
  %56 = shl nuw i32 1, %18, !dbg !10166
  %57 = or i32 %55, %56, !dbg !10166
  store volatile i32 %57, i32* %54, align 4, !dbg !10166
  br label %64, !dbg !10167

58:                                               ; preds = %38
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10168
  %60 = load volatile i32, i32* %59, align 4, !dbg !10168
  %61 = shl nuw i32 1, %18, !dbg !10168
  %62 = xor i32 %61, -1, !dbg !10168
  %63 = and i32 %60, %62, !dbg !10168
  store volatile i32 %63, i32* %59, align 4, !dbg !10168
  br label %64

64:                                               ; preds = %53, %58, %14
  %65 = phi i32 [ -134, %14 ], [ 0, %58 ], [ 0, %53 ], !dbg !10115
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #22, !dbg !10170
  br label %66

66:                                               ; preds = %3, %64
  %67 = phi i32 [ %65, %64 ], [ -134, %3 ], !dbg !10115
  ret i32 %67, !dbg !10170
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10175, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.value(metadata i32* %1, metadata !10176, metadata !DIExpression()), !dbg !10179
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10180
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10180
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10180
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10177, metadata !DIExpression()), !dbg !10179
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10181
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10181
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10178, metadata !DIExpression()), !dbg !10179
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #23, !dbg !10182
  store i32 %8, i32* %1, align 4, !dbg !10183
  ret i32 0, !dbg !10184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10187, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10188, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %2, metadata !10189, metadata !DIExpression()), !dbg !10192
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10193
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !10193
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !10193
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !10190, metadata !DIExpression()), !dbg !10192
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !10194
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !10194
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !10191, metadata !DIExpression()), !dbg !10192
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #23, !dbg !10195
  %10 = xor i32 %1, -1, !dbg !10196
  %11 = and i32 %9, %10, !dbg !10197
  %12 = and i32 %2, %1, !dbg !10198
  %13 = or i32 %11, %12, !dbg !10199
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #23, !dbg !10200
  ret i32 0, !dbg !10201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10204, metadata !DIExpression()), !dbg !10208
  call void @llvm.dbg.value(metadata i32 %1, metadata !10205, metadata !DIExpression()), !dbg !10208
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10209
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10209
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10209
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10206, metadata !DIExpression()), !dbg !10208
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10210
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10210
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10207, metadata !DIExpression()), !dbg !10208
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #23, !dbg !10211
  %9 = or i32 %8, %1, !dbg !10212
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #23, !dbg !10213
  ret i32 0, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10217, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %1, metadata !10218, metadata !DIExpression()), !dbg !10221
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10222
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10222
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10222
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10219, metadata !DIExpression()), !dbg !10221
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10223
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10223
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10220, metadata !DIExpression()), !dbg !10221
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #23, !dbg !10224
  %9 = xor i32 %1, -1, !dbg !10225
  %10 = and i32 %8, %9, !dbg !10226
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #23, !dbg !10227
  ret i32 0, !dbg !10228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10231, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 %1, metadata !10232, metadata !DIExpression()), !dbg !10235
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10236
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10236
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10236
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10233, metadata !DIExpression()), !dbg !10235
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10237
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10237
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10234, metadata !DIExpression()), !dbg !10235
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #23, !dbg !10238
  %9 = xor i32 %8, %1, !dbg !10239
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #23, !dbg !10240
  ret i32 0, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10244, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i8 %1, metadata !10245, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i32 %2, metadata !10246, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i32 %3, metadata !10247, metadata !DIExpression()), !dbg !10254
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10255
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !10255
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !10255
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !10248, metadata !DIExpression()), !dbg !10254
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !10256
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10256
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !10249, metadata !DIExpression()), !dbg !10254
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10257
  %11 = load volatile i32, i32* %10, align 4, !dbg !10257
  %12 = zext i8 %1 to i32, !dbg !10259
  %13 = shl nuw i32 1, %12, !dbg !10259
  %14 = and i32 %11, %13, !dbg !10260
  %15 = icmp ne i32 %14, 0, !dbg !10261
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !10262
  br i1 %17, label %77, label %18, !dbg !10262

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !10263
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !10265
  br i1 %21, label %29, label %22, !dbg !10265

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !10266
  br i1 %24, label %29, label %25, !dbg !10266

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !10268
  %27 = and i1 %26, %23, !dbg !10270
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !10271
  call void @llvm.dbg.value(metadata i32 %30, metadata !10252, metadata !DIExpression()), !dbg !10254
  %31 = icmp ult i8 %1, 16, !dbg !10272
  br i1 %31, label %32, label %35, !dbg !10274

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !10275
  call void @llvm.dbg.value(metadata i8 %33, metadata !10253, metadata !DIExpression()), !dbg !10254
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !10277
  call void @llvm.dbg.value(metadata i32* %34, metadata !10250, metadata !DIExpression()), !dbg !10254
  br label %41, !dbg !10278

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !10279
  br i1 %36, label %37, label %77, !dbg !10281

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !10282
  %39 = add nsw i8 %38, -32, !dbg !10282
  call void @llvm.dbg.value(metadata i8 %39, metadata !10253, metadata !DIExpression()), !dbg !10254
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !10284
  call void @llvm.dbg.value(metadata i32* %40, metadata !10250, metadata !DIExpression()), !dbg !10254
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !10285
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !10285
  call void @llvm.dbg.value(metadata i8 %43, metadata !10253, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i32* %42, metadata !10250, metadata !DIExpression()), !dbg !10254
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10286, !srcloc !10294
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %45, metadata !10291, metadata !DIExpression()) #22, !dbg !10295
  call void @llvm.dbg.value(metadata i32 undef, metadata !10292, metadata !DIExpression()) #22, !dbg !10295
  call void @llvm.dbg.value(metadata i32 %45, metadata !10251, metadata !DIExpression()), !dbg !10254
  %46 = load volatile i32, i32* %42, align 4, !dbg !10296
  %47 = zext i8 %43 to i32, !dbg !10297
  %48 = shl nuw i32 3, %47, !dbg !10298
  %49 = xor i32 %48, -1, !dbg !10299
  %50 = and i32 %46, %49, !dbg !10300
  %51 = shl nuw i32 %30, %47, !dbg !10301
  %52 = or i32 %50, %51, !dbg !10302
  store volatile i32 %52, i32* %42, align 4, !dbg !10303
  %53 = icmp eq i32 %3, 100663296, !dbg !10304
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10304
  %55 = load volatile i32, i32* %54, align 4, !dbg !10304
  %56 = or i32 %55, %13, !dbg !10304
  %57 = xor i32 %13, -1, !dbg !10304
  %58 = and i32 %55, %57, !dbg !10304
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !10304
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10304
  store volatile i32 %59, i32* %60, align 4, !dbg !10304
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10305
  %62 = load volatile i32, i32* %61, align 4, !dbg !10305
  br i1 %16, label %63, label %68, !dbg !10305

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !10305
  store volatile i32 %64, i32* %61, align 4, !dbg !10305
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10306
  %66 = load volatile i32, i32* %65, align 4, !dbg !10306
  %67 = or i32 %66, %13, !dbg !10306
  br label %74, !dbg !10306

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !10305
  %70 = and i32 %62, %69, !dbg !10305
  store volatile i32 %70, i32* %61, align 4, !dbg !10305
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10306
  %72 = load volatile i32, i32* %71, align 4, !dbg !10306
  %73 = and i32 %72, %69, !dbg !10306
  br label %74, !dbg !10306

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !10306
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10306
  store volatile i32 %75, i32* %76, align 4, !dbg !10306
  call void @llvm.dbg.value(metadata i32 %45, metadata !10307, metadata !DIExpression()) #22, !dbg !10310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #22, !dbg !10312, !srcloc !10313
  br label %77, !dbg !10314

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !10254
  ret i32 %78, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10319, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata i1 %2, metadata !10320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10323
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10324
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !10324
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !10324
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !10321, metadata !DIExpression()), !dbg !10323
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !10325
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #23, !dbg !10326
  ret i32 %8, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10334, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10335, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata i1 %2, metadata !10336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10337
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #23, !dbg !10338
  br i1 %4, label %10, label %5, !dbg !10340

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10341
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #23, !dbg !10344
  %8 = or i1 %7, %2, !dbg !10345
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10345
  br i1 %2, label %11, label %13, !dbg !10345

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10346

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10347
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #23, !dbg !10350
  br label %13, !dbg !10351

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10337
  ret i32 %14, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10357, metadata !DIExpression()), !dbg !10358
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10359
  %3 = icmp eq %struct._snode* %2, null, !dbg !10359
  ret i1 %3, !dbg !10359
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10364, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10365, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10366, metadata !DIExpression()), !dbg !10368
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10369
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10367, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10366, metadata !DIExpression()), !dbg !10368
  %4 = icmp eq %struct._snode* %3, null, !dbg !10371
  br i1 %4, label %15, label %5, !dbg !10369

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10367, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10366, metadata !DIExpression()), !dbg !10368
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10373
  br i1 %6, label %9, label %11, !dbg !10376

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10367, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10366, metadata !DIExpression()), !dbg !10368
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10373
  br i1 %8, label %9, label %11, !dbg !10376, !llvm.loop !10377

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #23, !dbg !10378
  br label %15, !dbg !10378

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10367, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10366, metadata !DIExpression()), !dbg !10368
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #23, !dbg !10371
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10367, metadata !DIExpression()), !dbg !10368
  %14 = icmp eq %struct._snode* %13, null, !dbg !10371
  br i1 %14, label %15, label %7, !dbg !10369, !llvm.loop !10377

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10381 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10385, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10386, metadata !DIExpression()), !dbg !10387
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10388
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #23, !dbg !10388
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #23, !dbg !10388
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #23, !dbg !10389
  %5 = icmp eq %struct._snode* %4, null, !dbg !10389
  br i1 %5, label %6, label %8, !dbg !10388

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10391
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #23, !dbg !10391
  br label %8, !dbg !10391

8:                                                ; preds = %6, %2
  ret void, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10397, metadata !DIExpression()), !dbg !10398
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10399
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10399
  ret %struct._snode* %3, !dbg !10400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10401 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10406, metadata !DIExpression()), !dbg !10407
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10408
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10409
  ret void, !dbg !10410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10411 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10413, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10414, metadata !DIExpression()), !dbg !10415
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10416
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10417
  ret void, !dbg !10418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10421, metadata !DIExpression()), !dbg !10422
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10423
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10423
  ret %struct._snode* %3, !dbg !10424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10425 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10427, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10428, metadata !DIExpression()), !dbg !10429
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10430
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10431
  ret void, !dbg !10432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10437, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10438, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10439, metadata !DIExpression()), !dbg !10440
  %4 = icmp eq %struct._snode* %1, null, !dbg !10441
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #23, !dbg !10443
  br i1 %4, label %6, label %11, !dbg !10444

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #23, !dbg !10445
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #23, !dbg !10447
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10447
  br i1 %8, label %9, label %15, !dbg !10445

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10449
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #23, !dbg !10449
  br label %15, !dbg !10449

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #23, !dbg !10451
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #23, !dbg !10453
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10453
  br i1 %13, label %14, label %15, !dbg !10451

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #23, !dbg !10455
  br label %15, !dbg !10455

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #23, !dbg !10444
  ret void, !dbg !10444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10461, metadata !DIExpression()), !dbg !10462
  %2 = icmp eq %struct._snode* %0, null, !dbg !10463
  br i1 %2, label %5, label %3, !dbg !10463

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #23, !dbg !10463
  br label %5, !dbg !10463

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10463
  ret %struct._snode* %6, !dbg !10463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10466, metadata !DIExpression()), !dbg !10467
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #23, !dbg !10468
  ret %struct._snode* %2, !dbg !10468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10471, metadata !DIExpression()), !dbg !10472
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10473
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10473
  ret %struct._snode* %3, !dbg !10474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !10475 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10479, metadata !DIExpression()), !dbg !10480
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10481
  %3 = load volatile i32, i32* %2, align 4, !dbg !10481
  ret i32 %3, !dbg !10482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10487, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10488, metadata !DIExpression()), !dbg !10489
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10490
  store volatile i32 %1, i32* %3, align 4, !dbg !10491
  ret void, !dbg !10492
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !10493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10497, metadata !DIExpression()), !dbg !10501
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10502
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !10502
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !10502
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !10498, metadata !DIExpression()), !dbg !10501
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10503
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !10503
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !10503
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !10499, metadata !DIExpression()), !dbg !10501
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !10504
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10504
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10505
  %11 = load volatile i32, i32* %10, align 4, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %11, metadata !10500, metadata !DIExpression()), !dbg !10501
  store volatile i32 %11, i32* %10, align 4, !dbg !10506
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !10507
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #23, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10514, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10515, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata i32 %2, metadata !10516, metadata !DIExpression()), !dbg !10519
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #23, !dbg !10520
  %5 = icmp eq %struct._snode* %4, null, !dbg !10520
  br i1 %5, label %21, label %6, !dbg !10520

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #23, !dbg !10522
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10518, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10517, metadata !DIExpression()), !dbg !10519
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10523
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10523
  %11 = load i32, i32* %10, align 4, !dbg !10523
  %12 = and i32 %11, %2, !dbg !10527
  %13 = icmp eq i32 %12, 0, !dbg !10527
  br i1 %13, label %19, label %14, !dbg !10528

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10517, metadata !DIExpression()), !dbg !10519
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10529
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10529
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10529
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !10531
  br label %19, !dbg !10532

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10517, metadata !DIExpression()), !dbg !10519
  %20 = icmp eq %struct._snode* %8, null, !dbg !10533
  br i1 %20, label %21, label %6, !dbg !10533

21:                                               ; preds = %19, %3
  ret void, !dbg !10534
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1348 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1350, metadata !DIExpression()), !dbg !10535
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !10536
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !10538
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !10539
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !10538
  ret i32 0, !dbg !10538
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10543, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.value(metadata i8* %1, metadata !10544, metadata !DIExpression()), !dbg !10547
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10548
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10548
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10548
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10548
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10548
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10545, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.value(metadata i32 -1, metadata !10546, metadata !DIExpression()), !dbg !10547
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #23, !dbg !10549
  br i1 %8, label %9, label %13, !dbg !10551

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #23, !dbg !10552
  store i8 %10, i8* %1, align 1, !dbg !10554
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #23, !dbg !10555
  br i1 %11, label %12, label %13, !dbg !10557

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !10558
  br label %13, !dbg !10560

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !10547
  call void @llvm.dbg.value(metadata i32 %14, metadata !10546, metadata !DIExpression()), !dbg !10547
  ret i32 %14, !dbg !10561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !10562 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i8 %1, metadata !10565, metadata !DIExpression()), !dbg !10567
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10568
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10568
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10568
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10568
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10568
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10566, metadata !DIExpression()), !dbg !10567
  br label %8, !dbg !10569

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #23, !dbg !10570
  br i1 %9, label %10, label %8, !dbg !10569, !llvm.loop !10571

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #23, !dbg !10573
  ret void, !dbg !10574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10577, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i8* %1, metadata !10578, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i32 %2, metadata !10579, metadata !DIExpression()), !dbg !10582
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10583
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10583
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10583
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10583
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10583
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10580, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i32 0, metadata !10581, metadata !DIExpression()), !dbg !10582
  %9 = icmp eq i32 %2, 0, !dbg !10584
  br i1 %9, label %18, label %10, !dbg !10585

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10581, metadata !DIExpression()), !dbg !10582
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #23, !dbg !10586
  br i1 %12, label %13, label %18, !dbg !10587

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10588
  %15 = load i8, i8* %14, align 1, !dbg !10588
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #23, !dbg !10590
  %16 = add nuw i32 %11, 1, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %16, metadata !10581, metadata !DIExpression()), !dbg !10582
  %17 = icmp eq i32 %16, %2, !dbg !10584
  br i1 %17, label %18, label %10, !dbg !10585, !llvm.loop !10592

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10582
  ret i32 %19, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !10595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10597, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i8* %1, metadata !10598, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i32 %2, metadata !10599, metadata !DIExpression()), !dbg !10602
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10603
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10603
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10603
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10603
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10603
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10600, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i32 0, metadata !10601, metadata !DIExpression()), !dbg !10602
  %9 = icmp eq i32 %2, 0, !dbg !10604
  br i1 %9, label %18, label %10, !dbg !10605

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10601, metadata !DIExpression()), !dbg !10602
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #23, !dbg !10606
  br i1 %12, label %13, label %18, !dbg !10607

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #23, !dbg !10608
  %15 = add nuw i32 %11, 1, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %15, metadata !10601, metadata !DIExpression()), !dbg !10602
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10611
  store i8 %14, i8* %16, align 1, !dbg !10612
  %17 = icmp eq i32 %15, %2, !dbg !10604
  br i1 %17, label %18, label %10, !dbg !10605, !llvm.loop !10613

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10602
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #23, !dbg !10615
  br i1 %20, label %21, label %22, !dbg !10617

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !10618
  br label %22, !dbg !10620

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !10621
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10624, metadata !DIExpression()), !dbg !10626
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10627
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10627
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10627
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10627
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10627
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10625, metadata !DIExpression()), !dbg !10626
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !10628
  ret void, !dbg !10629
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10632, metadata !DIExpression()), !dbg !10634
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10635
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10635
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10635
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10635
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10635
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10633, metadata !DIExpression()), !dbg !10634
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !10636
  ret void, !dbg !10637
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10640, metadata !DIExpression()), !dbg !10642
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10643
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10643
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10643
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10643
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10641, metadata !DIExpression()), !dbg !10642
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #23, !dbg !10644
  %8 = zext i1 %7 to i32, !dbg !10644
  ret i32 %8, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10648, metadata !DIExpression()), !dbg !10650
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10651
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10651
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10651
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10651
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10651
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10649, metadata !DIExpression()), !dbg !10650
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10656, metadata !DIExpression()), !dbg !10658
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10659
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10659
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10659
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10659
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10659
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10657, metadata !DIExpression()), !dbg !10658
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10664, metadata !DIExpression()), !dbg !10666
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10667
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10667
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10667
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10667
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10665, metadata !DIExpression()), !dbg !10666
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #23, !dbg !10668
  %8 = zext i1 %7 to i32, !dbg !10668
  ret i32 %8, !dbg !10669
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10672, metadata !DIExpression()), !dbg !10674
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10675
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10675
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10675
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10675
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10675
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10673, metadata !DIExpression()), !dbg !10674
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !10676
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10681, metadata !DIExpression()), !dbg !10683
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10684
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10684
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10684
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10684
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10684
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10682, metadata !DIExpression()), !dbg !10683
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !10685
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10690, metadata !DIExpression()), !dbg !10692
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10693
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10693
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10693
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10693
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10693
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10691, metadata !DIExpression()), !dbg !10692
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #23, !dbg !10694
  br i1 %7, label %11, label %8, !dbg !10695

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #23, !dbg !10696
  %10 = zext i1 %9 to i32, !dbg !10695
  br label %11, !dbg !10695

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !10697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #3 !dbg !10698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10700, metadata !DIExpression()), !dbg !10701
  ret i32 1, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #11 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10705, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10706, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i8* %2, metadata !10707, metadata !DIExpression()), !dbg !10710
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10711
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !10711
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !10711
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !10708, metadata !DIExpression()), !dbg !10710
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !10712
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10713
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !10714
  store i8* %2, i8** %8, align 4, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32* null, metadata !10723, metadata !DIExpression()), !dbg !10724
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10725
  %4 = lshr i32 %1, 16, !dbg !10726
  %5 = add i32 %4, %3, !dbg !10727
  %6 = inttoptr i32 %5 to i32*, !dbg !10728
  call void @llvm.dbg.value(metadata i32* %6, metadata !10723, metadata !DIExpression()), !dbg !10724
  %7 = load volatile i32, i32* %6, align 4, !dbg !10729
  %8 = and i32 %1, 65535, !dbg !10730
  %9 = shl nuw i32 1, %8, !dbg !10731
  %10 = and i32 %7, %9, !dbg !10731
  %11 = icmp ne i32 %10, 0, !dbg !10731
  ret i1 %11, !dbg !10732
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !10733 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10737, metadata !DIExpression()), !dbg !10738
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10739
  %3 = load volatile i32, i32* %2, align 4, !dbg !10739
  %4 = trunc i32 %3 to i8, !dbg !10740
  ret i8 %4, !dbg !10741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10742 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10746, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i8 %1, metadata !10747, metadata !DIExpression()), !dbg !10748
  %3 = zext i8 %1 to i32, !dbg !10749
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10750
  store volatile i32 %3, i32* %4, align 4, !dbg !10751
  ret void, !dbg !10752
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1635, metadata !DIExpression()), !dbg !10753
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !10754
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !10756
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10759, metadata !DIExpression()), !dbg !10761
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10762
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !10762
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !10762
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !10760, metadata !DIExpression()), !dbg !10761
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !10763
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10763
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10765
  br i1 %7, label %11, label %8, !dbg !10766

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !10767
  %10 = load i8*, i8** %9, align 4, !dbg !10767
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !10769
  br label %11, !dbg !10770

11:                                               ; preds = %8, %1
  ret void, !dbg !10771
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !10772 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10774, metadata !DIExpression()), !dbg !10789
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10790
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10790
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10790
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10790
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10790
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10775, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !10776, metadata !DIExpression()), !dbg !10789
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10791, !srcloc !10797
  call void @llvm.dbg.value(metadata i32 undef, metadata !10794, metadata !DIExpression()) #22, !dbg !10798
  call void @llvm.dbg.value(metadata i32 undef, metadata !10795, metadata !DIExpression()) #22, !dbg !10798
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()), !dbg !10789
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !10799
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #22, !dbg !10799
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !10779, metadata !DIExpression()), !dbg !10800
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !10801
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !10802
  %12 = load i32, i32* %11, align 4, !dbg !10802
  store i32 %12, i32* %10, align 4, !dbg !10801
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !10801
  store i32 32, i32* %13, align 4, !dbg !10801
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !10801
  store i32 0, i32* %14, align 4, !dbg !10801
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !10801
  store i32 0, i32* %15, align 4, !dbg !10801
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !10801
  store i32 6, i32* %16, align 4, !dbg !10801
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !10803
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !10803
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #23, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %19, metadata !10778, metadata !DIExpression()), !dbg !10789
  %20 = icmp eq i32 %19, 0, !dbg !10805
  br i1 %20, label %21, label %30, !dbg !10807

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !10801
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !10791
  call void @llvm.dbg.value(metadata i32 %23, metadata !10794, metadata !DIExpression()) #22, !dbg !10798
  call void @llvm.dbg.value(metadata i32 %23, metadata !10777, metadata !DIExpression()), !dbg !10789
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !10808
  store i32 %24, i32* %22, align 4, !dbg !10809
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !10810
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #23, !dbg !10811
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #23, !dbg !10812
  call void @llvm.dbg.value(metadata i32 undef, metadata !10813, metadata !DIExpression()) #22, !dbg !10816
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !10818, !srcloc !10819
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !10820
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !10820
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !10821
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !10822
  %28 = load i8, i8* %27, align 4, !dbg !10822
  %29 = zext i8 %28 to i32, !dbg !10823
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !10824
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #23, !dbg !10825
  br label %30, !dbg !10826

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #22, !dbg !10827
  ret i32 %19, !dbg !10827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10828 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10832, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.value(metadata i8 0, metadata !10833, metadata !DIExpression()), !dbg !10836
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10837
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !10837
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10835, metadata !DIExpression(DW_OP_deref)), !dbg !10836
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %4, metadata !10834, metadata !DIExpression()), !dbg !10836
  %5 = icmp slt i32 %4, 0, !dbg !10839
  br i1 %5, label %9, label %6, !dbg !10841

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10842
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10835, metadata !DIExpression()), !dbg !10836
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #23, !dbg !10843
  br label %9, !dbg !10844

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10836
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !10845
  ret i32 %10, !dbg !10845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !10846 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10848, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i8 2, metadata !10849, metadata !DIExpression()), !dbg !10850
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10851
  %3 = load volatile i32, i32* %2, align 4, !dbg !10851
  %4 = and i32 %3, -64513, !dbg !10852
  %5 = or i32 %4, 2048, !dbg !10853
  store volatile i32 %5, i32* %2, align 4, !dbg !10854
  ret void, !dbg !10855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !10856 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i8 1, metadata !10859, metadata !DIExpression()), !dbg !10860
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10861
  %3 = load volatile i32, i32* %2, align 4, !dbg !10861
  %4 = and i32 %3, -64, !dbg !10862
  %5 = or i32 %4, 1, !dbg !10863
  store volatile i32 %5, i32* %2, align 4, !dbg !10864
  ret void, !dbg !10865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !10866 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10870, metadata !DIExpression()), !dbg !10871
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10872
  %3 = load volatile i32, i32* %2, align 4, !dbg !10873
  %4 = or i32 %3, 1, !dbg !10873
  store volatile i32 %4, i32* %2, align 4, !dbg !10873
  ret void, !dbg !10874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10875 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 0, metadata !10881, metadata !DIExpression()), !dbg !10882
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10883
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !10883
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10884
  %5 = load i8, i8* %4, align 4, !dbg !10884
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10885
  ret i32 %6, !dbg !10886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10889, metadata !DIExpression()), !dbg !10890
  tail call fastcc void @__NVIC_SetPriority.151() #23, !dbg !10891
  store i32 19999, i32* @last_load, align 4, !dbg !10892
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10893
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10894
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10895
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10896
  %3 = or i32 %2, 7, !dbg !10896
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10896
  ret i32 0, !dbg !10897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.151() unnamed_addr #15 !dbg !10898 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10900, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 1, metadata !10901, metadata !DIExpression()), !dbg !10902
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10903
  ret void, !dbg !10906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10909, metadata !DIExpression()), !dbg !10911
  %2 = tail call fastcc i32 @elapsed() #23, !dbg !10912
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10913
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10914
  %5 = add i32 %4, %3, !dbg !10914
  store i32 %5, i32* @cycle_count, align 4, !dbg !10914
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10915
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10916
  %7 = sub i32 %5, %6, !dbg !10919
  %8 = udiv i32 %7, 20000, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %8, metadata !10910, metadata !DIExpression()), !dbg !10911
  %9 = mul nuw i32 %8, 20000, !dbg !10921
  %10 = add i32 %9, %6, !dbg !10922
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10922
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10923
  tail call void @z_arm_int_exit() #24, !dbg !10924
  ret void, !dbg !10925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10926 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %1, metadata !10928, metadata !DIExpression()), !dbg !10932
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %2, metadata !10929, metadata !DIExpression()), !dbg !10932
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %3, metadata !10930, metadata !DIExpression()), !dbg !10932
  %4 = and i32 %2, 65536, !dbg !10935
  %5 = icmp ne i32 %4, 0, !dbg !10935
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10937
  %8 = load i32, i32* @last_load, align 4, !dbg !10932
  br i1 %7, label %9, label %13, !dbg !10937

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10938
  %11 = add i32 %10, %8, !dbg !10938
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10938
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10940
  br label %13, !dbg !10941

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10942
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10943
  %16 = add i32 %14, %15, !dbg !10944
  ret i32 %16, !dbg !10945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10950, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i1 %1, metadata !10951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10963
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10964
  br i1 %4, label %5, label %8, !dbg !10964

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10966
  %7 = and i32 %6, -2, !dbg !10966
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10966
  store i32 -16777216, i32* @last_load, align 4, !dbg !10968
  br label %54, !dbg !10969

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10970
  call void @llvm.dbg.value(metadata i32 %9, metadata !10955, metadata !DIExpression()), !dbg !10963
  br i1 %3, label %18, label %10, !dbg !10971

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10971
  call void @llvm.dbg.value(metadata i32 undef, metadata !10950, metadata !DIExpression()), !dbg !10963
  %12 = icmp slt i32 %11, 1, !dbg !10972
  br i1 %12, label %18, label %13, !dbg !10972

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !10972
  %15 = select i1 %14, i32 %11, i32 837, !dbg !10972
  %16 = mul nuw nsw i32 %15, 20000, !dbg !10972
  %17 = add nuw nsw i32 %16, 19999, !dbg !10972
  br label %18, !dbg !10972

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10950, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10973, metadata !DIExpression()) #22, !dbg !10980
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !10982, !srcloc !10988
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10982
  call void @llvm.dbg.value(metadata i32 %21, metadata !10985, metadata !DIExpression()) #22, !dbg !10989
  call void @llvm.dbg.value(metadata i32 undef, metadata !10986, metadata !DIExpression()) #22, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %21, metadata !10979, metadata !DIExpression()) #22, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %21, metadata !10956, metadata !DIExpression()), !dbg !10963
  %22 = tail call fastcc i32 @elapsed() #23, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %22, metadata !10961, metadata !DIExpression()), !dbg !10963
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %23, metadata !10953, metadata !DIExpression()), !dbg !10963
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10992
  %25 = add i32 %24, %22, !dbg !10992
  store i32 %25, i32* @cycle_count, align 4, !dbg !10992
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10993
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10994
  %27 = sub i32 %25, %26, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %27, metadata !10962, metadata !DIExpression()), !dbg !10963
  %28 = icmp slt i32 %27, 0, !dbg !10996
  br i1 %28, label %38, label %29, !dbg !10998

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10952, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i32 undef, metadata !10952, metadata !DIExpression()), !dbg !10963
  %30 = add nuw i32 %19, %27, !dbg !10999
  %31 = urem i32 %30, 20000, !dbg !11001
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10952, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10963
  %32 = sub nuw nsw i32 %19, %31, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %32, metadata !10952, metadata !DIExpression()), !dbg !10963
  %33 = icmp ugt i32 %32, 1250, !dbg !11003
  br i1 %33, label %34, label %36, !dbg !11003

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10952, metadata !DIExpression()), !dbg !10963
  %35 = icmp ugt i32 %32, 16740000, !dbg !11004
  br i1 %35, label %38, label %36, !dbg !11006

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1250, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1250, %18 ], [ 16740000, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11007
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %40, metadata !10954, metadata !DIExpression()), !dbg !10963
  %41 = add nsw i32 %39, -1, !dbg !11009
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11010
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11011
  %42 = icmp ult i32 %23, %40, !dbg !11012
  br i1 %42, label %43, label %48, !dbg !11014

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11015
  %45 = add i32 %23, %9, !dbg !11017
  %46 = sub i32 %45, %40, !dbg !11018
  %47 = add i32 %46, %44, !dbg !11015
  br label %52, !dbg !11019

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11020
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11022
  %51 = add i32 %49, %50, !dbg !11022
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11023
  store i32 %53, i32* @cycle_count, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata i32 %21, metadata !11024, metadata !DIExpression()) #22, !dbg !11030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11029, metadata !DIExpression()) #22, !dbg !11030
  call void @llvm.dbg.value(metadata i32 %21, metadata !11032, metadata !DIExpression()) #22, !dbg !11035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #22, !dbg !11037, !srcloc !11038
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11040 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10973, metadata !DIExpression()) #22, !dbg !11044
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11046, !srcloc !10988
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %2, metadata !10985, metadata !DIExpression()) #22, !dbg !11048
  call void @llvm.dbg.value(metadata i32 undef, metadata !10986, metadata !DIExpression()) #22, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %2, metadata !10979, metadata !DIExpression()) #22, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %2, metadata !11042, metadata !DIExpression()), !dbg !11049
  %3 = tail call fastcc i32 @elapsed() #23, !dbg !11050
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11051
  %5 = add i32 %4, %3, !dbg !11052
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11053
  %7 = sub i32 %5, %6, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %7, metadata !11043, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i32 %2, metadata !11024, metadata !DIExpression()) #22, !dbg !11055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11029, metadata !DIExpression()) #22, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %2, metadata !11032, metadata !DIExpression()) #22, !dbg !11057
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !11059, !srcloc !11038
  %8 = udiv i32 %7, 20000, !dbg !11060
  ret i32 %8, !dbg !11061
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10973, metadata !DIExpression()) #22, !dbg !11066
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !11068, !srcloc !10988
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %2, metadata !10985, metadata !DIExpression()) #22, !dbg !11070
  call void @llvm.dbg.value(metadata i32 undef, metadata !10986, metadata !DIExpression()) #22, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %2, metadata !10979, metadata !DIExpression()) #22, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %2, metadata !11064, metadata !DIExpression()), !dbg !11071
  %3 = tail call fastcc i32 @elapsed() #23, !dbg !11072
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11073
  %5 = add i32 %4, %3, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %5, metadata !11065, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.value(metadata i32 %2, metadata !11024, metadata !DIExpression()) #22, !dbg !11075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11029, metadata !DIExpression()) #22, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %2, metadata !11032, metadata !DIExpression()) #22, !dbg !11077
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !11079, !srcloc !11038
  ret i32 %5, !dbg !11080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11081 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11082
  %2 = icmp eq i32 %1, -16777216, !dbg !11084
  br i1 %2, label %3, label %6, !dbg !11085

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11086
  %5 = or i32 %4, 1, !dbg !11086
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11086
  br label %6, !dbg !11088

6:                                                ; preds = %3, %0
  ret void, !dbg !11089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11090 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11091
  %2 = and i32 %1, -2, !dbg !11091
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11091
  ret void, !dbg !11092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11093 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11126, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata i8 %1, metadata !11127, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11128, metadata !DIExpression()), !dbg !11129
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11130
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11130
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11129
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11131
  %8 = load i8, i8* %6, align 4, !dbg !11132
  %9 = zext i8 %8 to i32, !dbg !11133
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11133
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11134
  br i1 %11, label %18, label %24, !dbg !11135

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11129
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11131
  %14 = load i8, i8* %6, align 4, !dbg !11132
  %15 = zext i8 %14 to i32, !dbg !11133
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11133
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11134
  br i1 %17, label %18, label %24, !dbg !11135, !llvm.loop !11136

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11138
  %21 = load i8, i8* %20, align 1, !dbg !11138
  %22 = icmp eq i8 %21, %1, !dbg !11141
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11142
  br i1 %22, label %24, label %12, !dbg !11143

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11129
  ret i32 %25, !dbg !11144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #3 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11147, metadata !DIExpression()), !dbg !11148
  ret i32 0, !dbg !11149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !11168, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i8 %1, metadata !11169, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i32 %2, metadata !11170, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i8 0, metadata !11171, metadata !DIExpression()), !dbg !11182
  %4 = icmp eq i8 %1, 0, !dbg !11183
  br i1 %4, label %7, label %5, !dbg !11184

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11183
  br label %8, !dbg !11184

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !11185

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11171, metadata !DIExpression()), !dbg !11182
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !11186
  %11 = load i32, i32* %10, align 4, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %11, metadata !11173, metadata !DIExpression()), !dbg !11187
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !11188
  %13 = load i8, i8* %12, align 4, !dbg !11188
  call void @llvm.dbg.value(metadata i8 %13, metadata !11176, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11187
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !11189
  %15 = load i32, i32* %14, align 4, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %15, metadata !11177, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8 %13, metadata !11178, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11187
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !11190
  %17 = load i32, i32* %16, align 4, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %17, metadata !11179, metadata !DIExpression()), !dbg !11187
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !11191
  %19 = load i32, i32* %18, align 4, !dbg !11191
  call void @llvm.dbg.value(metadata i32 %19, metadata !11180, metadata !DIExpression()), !dbg !11187
  %20 = and i8 %13, 15, !dbg !11192
  %21 = zext i8 %20 to i32, !dbg !11192
  %22 = lshr i32 %19, 27, !dbg !11193
  %23 = and i32 %22, 16, !dbg !11193
  %24 = or i32 %23, %21, !dbg !11194
  %25 = inttoptr i32 %11 to i32*, !dbg !11195
  store volatile i32 %24, i32* %25, align 4, !dbg !11196
  %26 = icmp eq i32 %15, 0, !dbg !11197
  br i1 %26, label %32, label %27, !dbg !11199

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !11200
  call void @llvm.dbg.value(metadata i8 %28, metadata !11178, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11187
  %29 = and i8 %28, 7, !dbg !11201
  %30 = zext i8 %29 to i32, !dbg !11201
  %31 = inttoptr i32 %15 to i32*, !dbg !11203
  store volatile i32 %30, i32* %31, align 4, !dbg !11204
  br label %32, !dbg !11205

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !11206
  br i1 %33, label %37, label %34, !dbg !11208

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !11209
  %36 = inttoptr i32 %17 to i32*, !dbg !11211
  store volatile i32 %35, i32* %36, align 4, !dbg !11212
  br label %37, !dbg !11213

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %38, metadata !11171, metadata !DIExpression()), !dbg !11182
  %39 = icmp eq i32 %38, %6, !dbg !11183
  br i1 %39, label %7, label %8, !dbg !11184, !llvm.loop !11215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !11217 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11274, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %1, metadata !11275, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %2, metadata !11276, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %3, metadata !11277, metadata !DIExpression()), !dbg !11278
  %5 = inttoptr i32 %1 to i32*, !dbg !11279
  %6 = load volatile i32, i32* %5, align 4, !dbg !11279
  %7 = and i32 %6, -458816, !dbg !11280
  %8 = shl i32 %2, 16, !dbg !11281
  %9 = and i32 %8, 458752, !dbg !11281
  %10 = and i32 %3, 63, !dbg !11282
  %11 = or i32 %10, %9, !dbg !11283
  %12 = or i32 %11, %7, !dbg !11284
  store volatile i32 %12, i32* %5, align 4, !dbg !11285
  ret void, !dbg !11286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #17 !dbg !11287 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11291, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32 %1, metadata !11292, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32* %2, metadata !11293, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32* %3, metadata !11294, metadata !DIExpression()), !dbg !11295
  %5 = inttoptr i32 %1 to i32*, !dbg !11296
  %6 = load volatile i32, i32* %5, align 4, !dbg !11296
  %7 = lshr i32 %6, 16, !dbg !11297
  %8 = and i32 %7, 7, !dbg !11297
  store i32 %8, i32* %2, align 4, !dbg !11298
  %9 = load volatile i32, i32* %5, align 4, !dbg !11299
  %10 = and i32 %9, 63, !dbg !11300
  store i32 %10, i32* %3, align 4, !dbg !11301
  ret void, !dbg !11302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #15 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11307, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 %1, metadata !11308, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 %2, metadata !11309, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 %3, metadata !11310, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 %4, metadata !11311, metadata !DIExpression()), !dbg !11312
  %6 = inttoptr i32 %1 to i32*, !dbg !11313
  %7 = load volatile i32, i32* %6, align 4, !dbg !11313
  %8 = and i32 %7, -117899328, !dbg !11314
  %9 = shl i32 %2, 24, !dbg !11315
  %10 = and i32 %9, 117440512, !dbg !11315
  %11 = shl i32 %3, 16, !dbg !11316
  %12 = and i32 %11, 458752, !dbg !11316
  %13 = and i32 %4, 63, !dbg !11317
  %14 = or i32 %12, %10, !dbg !11318
  %15 = or i32 %14, %13, !dbg !11319
  %16 = or i32 %15, %8, !dbg !11320
  store volatile i32 %16, i32* %6, align 4, !dbg !11321
  ret void, !dbg !11322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11323 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11328, metadata !DIExpression()), !dbg !11329
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #23, !dbg !11330
  br i1 %2, label %7, label %3, !dbg !11332

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !11333
  %5 = and i32 %4, 127, !dbg !11334
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !11335
  br label %7, !dbg !11336

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !11329
  ret i32 %8, !dbg !11337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11338 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11342, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.value(metadata i32 %1, metadata !11343, metadata !DIExpression()), !dbg !11344
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11345
  %4 = and i32 %1, 65535, !dbg !11345
  %5 = add i32 %4, %3, !dbg !11345
  %6 = inttoptr i32 %5 to i32*, !dbg !11345
  %7 = load volatile i32, i32* %6, align 4, !dbg !11345
  %8 = and i32 %7, 65536, !dbg !11346
  %9 = icmp ne i32 %8, 0, !dbg !11347
  ret i1 %9, !dbg !11348
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11349 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11351, metadata !DIExpression()), !dbg !11352
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #23, !dbg !11353
  br i1 %2, label %8, label %3, !dbg !11355

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !11356
  %5 = and i32 %4, 1, !dbg !11358
  %6 = icmp eq i32 %5, 0, !dbg !11358
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !11359
  br label %8, !dbg !11359

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !11352
  ret i32 %9, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11361 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11363, metadata !DIExpression()), !dbg !11367
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #23, !dbg !11368
  br i1 %2, label %40, label %3, !dbg !11370

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11371
  %5 = trunc i32 %4 to i8, !dbg !11371
  %6 = and i8 %5, 127, !dbg !11371
  call void @llvm.dbg.value(metadata i8 %6, metadata !11364, metadata !DIExpression()), !dbg !11367
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11372
  %8 = lshr i32 %7, 21, !dbg !11373
  %9 = and i32 %8, 3, !dbg !11374
  call void @llvm.dbg.value(metadata i32 %9, metadata !11365, metadata !DIExpression()), !dbg !11367
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %9, !dbg !11375
  %11 = load i32, i32* %10, align 4, !dbg !11375
  call void @llvm.dbg.value(metadata i8 undef, metadata !11365, metadata !DIExpression()), !dbg !11367
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !11376
  %13 = load volatile i32, i32* %12, align 4, !dbg !11376
  %14 = and i32 %13, 32768, !dbg !11378
  %15 = icmp eq i32 %14, 0, !dbg !11378
  br i1 %15, label %36, label %16, !dbg !11379

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !11380
  %18 = and i32 %17, 32767, !dbg !11382
  %19 = uitofp i32 %18 to float, !dbg !11383
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !11384
  %21 = load volatile i32, i32* %20, align 4, !dbg !11384
  %22 = and i32 %21, 1073741823, !dbg !11385
  %23 = uitofp i32 %22 to float, !dbg !11386
  %24 = fdiv float %19, %23, !dbg !11387
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !11388
  %26 = load volatile i32, i32* %25, align 4, !dbg !11388
  %27 = and i32 %26, 1073741823, !dbg !11389
  %28 = uitofp i32 %27 to float, !dbg !11390
  %29 = fmul float %24, %28, !dbg !11391
  call void @llvm.dbg.value(metadata float %29, metadata !11366, metadata !DIExpression()), !dbg !11367
  %30 = lshr i32 24000000, %11, !dbg !11392
  %31 = uitofp i32 %30 to float, !dbg !11393
  %32 = uitofp i8 %6 to float, !dbg !11394
  %33 = fadd float %29, %32, !dbg !11395
  %34 = fmul float %33, %31, !dbg !11396
  %35 = fptoui float %34 to i32, !dbg !11397
  br label %40, !dbg !11398

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !11399
  %38 = zext i8 %6 to i32, !dbg !11401
  %39 = mul nuw i32 %37, %38, !dbg !11402
  br label %40, !dbg !11403

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !11367
  ret i32 %41, !dbg !11404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11407, metadata !DIExpression()), !dbg !11408
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #23, !dbg !11409
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !11408
  ret i32 %3, !dbg !11411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11414, metadata !DIExpression()), !dbg !11419
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #23, !dbg !11420
  br i1 %2, label %47, label %3, !dbg !11422

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11423
  %5 = trunc i32 %4 to i8, !dbg !11423
  %6 = and i8 %5, 127, !dbg !11423
  call void @llvm.dbg.value(metadata i8 %6, metadata !11415, metadata !DIExpression()), !dbg !11419
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11424
  %8 = lshr i32 %7, 22, !dbg !11425
  %9 = and i32 %8, 3, !dbg !11426
  call void @llvm.dbg.value(metadata i32 %8, metadata !11416, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11419
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11427
  %11 = lshr i32 %10, 19, !dbg !11428
  %12 = and i32 %11, 3, !dbg !11429
  call void @llvm.dbg.value(metadata i32 %11, metadata !11417, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11419
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11430
  %14 = load i32, i32* %13, align 4, !dbg !11430
  call void @llvm.dbg.value(metadata i8 undef, metadata !11416, metadata !DIExpression()), !dbg !11419
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !11431
  %16 = load i32, i32* %15, align 4, !dbg !11431
  call void @llvm.dbg.value(metadata i8 undef, metadata !11417, metadata !DIExpression()), !dbg !11419
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !11432
  %18 = load volatile i32, i32* %17, align 4, !dbg !11432
  %19 = and i32 %18, 32768, !dbg !11434
  %20 = icmp eq i32 %19, 0, !dbg !11434
  br i1 %20, label %42, label %21, !dbg !11435

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11436
  %23 = and i32 %22, 32767, !dbg !11438
  %24 = uitofp i32 %23 to float, !dbg !11439
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !11440
  %26 = load volatile i32, i32* %25, align 4, !dbg !11440
  %27 = and i32 %26, 1073741823, !dbg !11441
  %28 = uitofp i32 %27 to float, !dbg !11442
  %29 = fdiv float %24, %28, !dbg !11443
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !11444
  %31 = load volatile i32, i32* %30, align 4, !dbg !11444
  %32 = and i32 %31, 1073741823, !dbg !11445
  %33 = uitofp i32 %32 to float, !dbg !11446
  %34 = fmul float %29, %33, !dbg !11447
  call void @llvm.dbg.value(metadata float %34, metadata !11418, metadata !DIExpression()), !dbg !11419
  %35 = lshr i32 24000000, %16, !dbg !11448
  %36 = lshr i32 %35, %14, !dbg !11449
  %37 = uitofp i32 %36 to float, !dbg !11450
  %38 = uitofp i8 %6 to float, !dbg !11451
  %39 = fadd float %34, %38, !dbg !11452
  %40 = fmul float %39, %37, !dbg !11453
  %41 = fptoui float %40 to i32, !dbg !11454
  br label %47, !dbg !11455

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11456
  %44 = lshr i32 %43, %14, !dbg !11458
  %45 = zext i8 %6 to i32, !dbg !11459
  %46 = mul nuw i32 %44, %45, !dbg !11460
  br label %47, !dbg !11461

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11419
  ret i32 %48, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11465, metadata !DIExpression()), !dbg !11470
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #23, !dbg !11471
  br i1 %2, label %47, label %3, !dbg !11473

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11474
  %5 = trunc i32 %4 to i8, !dbg !11474
  %6 = and i8 %5, 127, !dbg !11474
  call void @llvm.dbg.value(metadata i8 %6, metadata !11466, metadata !DIExpression()), !dbg !11470
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11475
  %8 = lshr i32 %7, 22, !dbg !11476
  %9 = and i32 %8, 3, !dbg !11477
  call void @llvm.dbg.value(metadata i32 %8, metadata !11467, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11470
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11478
  %11 = lshr i32 %10, 19, !dbg !11479
  %12 = and i32 %11, 3, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %11, metadata !11468, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11470
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11481
  %14 = load i32, i32* %13, align 4, !dbg !11481
  call void @llvm.dbg.value(metadata i8 undef, metadata !11467, metadata !DIExpression()), !dbg !11470
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.2, i32 0, i32 %12, !dbg !11482
  %16 = load i32, i32* %15, align 4, !dbg !11482
  call void @llvm.dbg.value(metadata i8 undef, metadata !11468, metadata !DIExpression()), !dbg !11470
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !11483
  %18 = load volatile i32, i32* %17, align 4, !dbg !11483
  %19 = and i32 %18, 32768, !dbg !11485
  %20 = icmp eq i32 %19, 0, !dbg !11485
  br i1 %20, label %42, label %21, !dbg !11486

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11487
  %23 = and i32 %22, 32767, !dbg !11489
  %24 = uitofp i32 %23 to float, !dbg !11490
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !11491
  %26 = load volatile i32, i32* %25, align 4, !dbg !11491
  %27 = and i32 %26, 1073741823, !dbg !11492
  %28 = uitofp i32 %27 to float, !dbg !11493
  %29 = fdiv float %24, %28, !dbg !11494
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !11495
  %31 = load volatile i32, i32* %30, align 4, !dbg !11495
  %32 = and i32 %31, 1073741823, !dbg !11496
  %33 = uitofp i32 %32 to float, !dbg !11497
  %34 = fmul float %29, %33, !dbg !11498
  call void @llvm.dbg.value(metadata float %34, metadata !11469, metadata !DIExpression()), !dbg !11470
  %35 = lshr i32 24000000, %16, !dbg !11499
  %36 = lshr i32 %35, %14, !dbg !11500
  %37 = uitofp i32 %36 to float, !dbg !11501
  %38 = uitofp i8 %6 to float, !dbg !11502
  %39 = fadd float %34, %38, !dbg !11503
  %40 = fmul float %39, %37, !dbg !11504
  %41 = fptoui float %40 to i32, !dbg !11505
  br label %47, !dbg !11506

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11507
  %44 = lshr i32 %43, %14, !dbg !11509
  %45 = zext i8 %6 to i32, !dbg !11510
  %46 = mul nuw i32 %44, %45, !dbg !11511
  br label %47, !dbg !11512

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11470
  ret i32 %48, !dbg !11513
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !11514 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11518, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %1, metadata !11519, metadata !DIExpression()), !dbg !11522
  %3 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #23, !dbg !11523
  call void @llvm.dbg.value(metadata i32 %3, metadata !11520, metadata !DIExpression()), !dbg !11522
  %4 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #23, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %4, metadata !11521, metadata !DIExpression()), !dbg !11522
  %5 = udiv i32 %3, %4, !dbg !11525
  %6 = mul i32 %5, 18, !dbg !11526
  ret i32 %6, !dbg !11527
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11530, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i32 %1, metadata !11531, metadata !DIExpression()), !dbg !11532
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11533
  %4 = and i32 %1, 65535, !dbg !11533
  %5 = add i32 %4, %3, !dbg !11533
  %6 = inttoptr i32 %5 to i32*, !dbg !11533
  %7 = load volatile i32, i32* %6, align 4, !dbg !11533
  %8 = lshr i32 %1, 16, !dbg !11534
  %9 = and i32 %8, 31, !dbg !11534
  %10 = lshr i32 %7, %9, !dbg !11535
  %11 = and i32 %10, 63, !dbg !11536
  ret i32 %11, !dbg !11537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11565, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !11566, metadata !DIExpression()), !dbg !11569
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11570
  store volatile i32 0, i32* %3, align 4, !dbg !11571
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11572
  store volatile i32 0, i32* %4, align 4, !dbg !11573
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !11574
  %6 = load i32, i32* %5, align 4, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %6, metadata !11567, metadata !DIExpression()), !dbg !11569
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !11575
  %8 = load i32, i32* %7, align 4, !dbg !11575
  %9 = icmp eq i32 %8, 1, !dbg !11577
  %10 = shl nuw i32 1, %6, !dbg !11578
  br i1 %9, label %11, label %15, !dbg !11579

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11580
  %13 = load volatile i32, i32* %12, align 4, !dbg !11581
  %14 = or i32 %13, %10, !dbg !11581
  store volatile i32 %14, i32* %12, align 4, !dbg !11581
  br label %20, !dbg !11580

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !11582
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11583
  %18 = load volatile i32, i32* %17, align 4, !dbg !11584
  %19 = and i32 %18, %16, !dbg !11584
  store volatile i32 %19, i32* %17, align 4, !dbg !11584
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !11585
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !11587
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !11587
  %24 = add i32 %6, -16, !dbg !11587
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !11587
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !11587
  call void @llvm.dbg.value(metadata i32* %26, metadata !11568, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 %25, metadata !11567, metadata !DIExpression()), !dbg !11569
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !11588
  %28 = load i32, i32* %27, align 4, !dbg !11588
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !11589

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !11590
  %31 = shl i32 3, %30, !dbg !11593
  %32 = xor i32 %31, -1, !dbg !11594
  %33 = load volatile i32, i32* %26, align 4, !dbg !11595
  %34 = and i32 %33, %32, !dbg !11595
  br label %56, !dbg !11596

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !11597
  %37 = shl i32 %25, 1, !dbg !11599
  %38 = shl i32 3, %37, !dbg !11600
  %39 = xor i32 %38, -1, !dbg !11601
  %40 = and i32 %36, %39, !dbg !11602
  %41 = shl nuw i32 1, %37, !dbg !11603
  %42 = or i32 %40, %41, !dbg !11604
  br label %56, !dbg !11605

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !11606
  %45 = shl i32 %25, 1, !dbg !11608
  %46 = shl i32 3, %45, !dbg !11609
  %47 = xor i32 %46, -1, !dbg !11610
  %48 = and i32 %44, %47, !dbg !11611
  %49 = shl i32 2, %45, !dbg !11612
  %50 = or i32 %48, %49, !dbg !11613
  br label %56, !dbg !11614

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !11615
  %53 = shl i32 3, %52, !dbg !11617
  %54 = load volatile i32, i32* %26, align 4, !dbg !11618
  %55 = or i32 %54, %53, !dbg !11618
  br label %56, !dbg !11619

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !11620
  br label %58, !dbg !11621

58:                                               ; preds = %56, %20
  ret void, !dbg !11621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !11622 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11627, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 %1, metadata !11628, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 %2, metadata !11629, metadata !DIExpression()), !dbg !11630
  %4 = icmp eq i32 %2, 1, !dbg !11631
  %5 = shl nuw i32 1, %1, !dbg !11633
  br i1 %4, label %6, label %10, !dbg !11634

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11635
  %8 = load volatile i32, i32* %7, align 4, !dbg !11637
  %9 = or i32 %8, %5, !dbg !11637
  store volatile i32 %9, i32* %7, align 4, !dbg !11637
  br label %15, !dbg !11638

10:                                               ; preds = %3
  %11 = xor i32 %5, -1, !dbg !11639
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11641
  %13 = load volatile i32, i32* %12, align 4, !dbg !11642
  %14 = and i32 %13, %11, !dbg !11642
  store volatile i32 %14, i32* %12, align 4, !dbg !11642
  br label %15

15:                                               ; preds = %10, %6
  ret void, !dbg !11643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !11644 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11648, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.value(metadata i32 %1, metadata !11649, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.value(metadata i1 %2, metadata !11650, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11651
  %4 = shl nuw i32 1, %1, !dbg !11652
  br i1 %2, label %5, label %9, !dbg !11654

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11655
  %7 = load volatile i32, i32* %6, align 4, !dbg !11656
  %8 = or i32 %7, %4, !dbg !11656
  store volatile i32 %8, i32* %6, align 4, !dbg !11656
  br label %14, !dbg !11655

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !11657
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11658
  %12 = load volatile i32, i32* %11, align 4, !dbg !11659
  %13 = and i32 %12, %10, !dbg !11659
  store volatile i32 %13, i32* %11, align 4, !dbg !11659
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11663, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i32 %1, metadata !11664, metadata !DIExpression()), !dbg !11666
  call void @llvm.dbg.value(metadata i1 %2, metadata !11665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11666
  %4 = shl nuw i32 1, %1, !dbg !11667
  br i1 %2, label %5, label %9, !dbg !11669

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11670
  %7 = load volatile i32, i32* %6, align 4, !dbg !11671
  %8 = or i32 %7, %4, !dbg !11671
  store volatile i32 %8, i32* %6, align 4, !dbg !11671
  br label %14, !dbg !11670

9:                                                ; preds = %3
  %10 = xor i32 %4, -1, !dbg !11672
  %11 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11673
  %12 = load volatile i32, i32* %11, align 4, !dbg !11674
  %13 = and i32 %12, %10, !dbg !11674
  store volatile i32 %13, i32* %11, align 4, !dbg !11674
  br label %14

14:                                               ; preds = %9, %5
  ret void, !dbg !11675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11715, metadata !DIExpression()), !dbg !11717
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !11716, metadata !DIExpression()), !dbg !11717
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11718
  %4 = load volatile i32, i32* %3, align 4, !dbg !11719
  %5 = and i32 %4, -2, !dbg !11719
  store volatile i32 %5, i32* %3, align 4, !dbg !11719
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #23, !dbg !11720
  %6 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !11721
  %7 = load i32, i32* %6, align 4, !dbg !11721
  %8 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !11722
  %9 = load i32, i32* %8, align 4, !dbg !11722
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !11723
  %11 = load i32, i32* %10, align 4, !dbg !11723
  %12 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !11724
  %13 = load i32, i32* %12, align 4, !dbg !11724
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11725
  %15 = load volatile i32, i32* %14, align 4, !dbg !11726
  %16 = or i32 %7, %9, !dbg !11727
  %17 = or i32 %16, %11, !dbg !11728
  %18 = or i32 %17, %13, !dbg !11729
  %19 = or i32 %18, %15, !dbg !11726
  %20 = or i32 %19, 16384, !dbg !11726
  store volatile i32 %20, i32* %14, align 4, !dbg !11726
  %21 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11730
  %22 = load volatile i32, i32* %21, align 4, !dbg !11731
  %23 = or i32 %22, 4, !dbg !11731
  store volatile i32 %23, i32* %21, align 4, !dbg !11731
  %24 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !11732
  %25 = load i32, i32* %24, align 4, !dbg !11732
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !11733
  %27 = load i32, i32* %26, align 4, !dbg !11733
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %25, i32 noundef %27) #23, !dbg !11734
  ret void, !dbg !11735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !11736 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11742
  %3 = load volatile i32, i32* %2, align 4, !dbg !11743
  %4 = and i32 %3, -2, !dbg !11743
  store volatile i32 %4, i32* %2, align 4, !dbg !11743
  store volatile i32 0, i32* %2, align 4, !dbg !11744
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11745
  store volatile i32 1, i32* %5, align 4, !dbg !11746
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11747
  store volatile i32 1792, i32* %6, align 4, !dbg !11748
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11749
  store volatile i32 32768, i32* %7, align 4, !dbg !11750
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11751
  store volatile i32 2049, i32* %8, align 4, !dbg !11752
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !11753
  store volatile i32 43, i32* %9, align 4, !dbg !11754
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !11755
  store volatile i32 0, i32* %10, align 4, !dbg !11756
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11757
  store volatile i32 0, i32* %11, align 4, !dbg !11758
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !11759
  store volatile i32 96, i32* %12, align 4, !dbg !11760
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11761
  store volatile i32 0, i32* %13, align 4, !dbg !11762
  %14 = load volatile i32, i32* %5, align 4, !dbg !11763
  %15 = and i32 %14, -2, !dbg !11763
  store volatile i32 %15, i32* %5, align 4, !dbg !11763
  br label %16, !dbg !11764

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !11765
  %18 = and i32 %17, 1, !dbg !11766
  %19 = icmp eq i32 %18, 0, !dbg !11767
  br i1 %19, label %16, label %20, !dbg !11764, !llvm.loop !11768

20:                                               ; preds = %16
  ret void, !dbg !11770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !11771 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11775, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11776, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %2, metadata !11777, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 1, metadata !11782, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11778, metadata !DIExpression()), !dbg !11788
  %4 = shl i32 %2, 4, !dbg !11789
  call void @llvm.dbg.value(metadata i32 %4, metadata !11779, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 1, metadata !11780, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11778, metadata !DIExpression()), !dbg !11788
  %5 = icmp eq i32 %4, 0, !dbg !11790
  br i1 %5, label %11, label %6, !dbg !11791

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11778, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %8, metadata !11779, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %8, metadata !11780, metadata !DIExpression()), !dbg !11788
  %9 = urem i32 %7, %8, !dbg !11792
  call void @llvm.dbg.value(metadata i32 %8, metadata !11778, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %9, metadata !11779, metadata !DIExpression()), !dbg !11788
  %10 = icmp eq i32 %9, 0, !dbg !11790
  br i1 %10, label %11, label %6, !dbg !11791, !llvm.loop !11794

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !11788
  %13 = udiv i32 %1, %12, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %13, metadata !11778, metadata !DIExpression()), !dbg !11788
  %14 = udiv i32 %4, %12, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %14, metadata !11779, metadata !DIExpression()), !dbg !11788
  %15 = icmp ugt i32 %13, 458745, !dbg !11798
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !11799
  br i1 %17, label %18, label %33, !dbg !11799

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !11800
  %20 = udiv i32 %19, 458745, !dbg !11801
  %21 = add nuw nsw i32 %20, 1, !dbg !11802
  call void @llvm.dbg.value(metadata i32 %21, metadata !11783, metadata !DIExpression()), !dbg !11803
  %22 = add i32 %14, -1, !dbg !11804
  %23 = udiv i32 %22, 65535, !dbg !11805
  %24 = add nuw nsw i32 %23, 1, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %24, metadata !11786, metadata !DIExpression()), !dbg !11803
  %25 = icmp ugt i32 %21, %24, !dbg !11807
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %26, metadata !11787, metadata !DIExpression()), !dbg !11803
  %27 = udiv i32 %13, %26, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %27, metadata !11778, metadata !DIExpression()), !dbg !11788
  %28 = udiv i32 %14, %26, !dbg !11810
  call void @llvm.dbg.value(metadata i32 %28, metadata !11779, metadata !DIExpression()), !dbg !11788
  %29 = icmp ugt i32 %26, %13, !dbg !11811
  %30 = select i1 %29, i32 1, i32 %27, !dbg !11813
  call void @llvm.dbg.value(metadata i32 %30, metadata !11778, metadata !DIExpression()), !dbg !11788
  %31 = icmp ugt i32 %26, %14, !dbg !11814
  %32 = select i1 %31, i32 1, i32 %28, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %32, metadata !11779, metadata !DIExpression()), !dbg !11788
  br label %33, !dbg !11817

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !11788
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !11788
  call void @llvm.dbg.value(metadata i32 %35, metadata !11778, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %34, metadata !11779, metadata !DIExpression()), !dbg !11788
  %36 = add i32 %35, -1, !dbg !11818
  %37 = udiv i32 %36, 65535, !dbg !11819
  %38 = add nuw nsw i32 %37, 1, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %38, metadata !11782, metadata !DIExpression()), !dbg !11788
  %39 = add nsw i32 %37, -1, !dbg !11821
  %40 = icmp ult i32 %39, 6, !dbg !11821
  br i1 %40, label %41, label %44, !dbg !11821

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !11821
  %43 = load i32, i32* %42, align 4, !dbg !11821
  br label %44, !dbg !11821

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !11822
  call void @llvm.dbg.value(metadata i32 %45, metadata !11781, metadata !DIExpression()), !dbg !11788
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11824
  %47 = load volatile i32, i32* %46, align 4, !dbg !11825
  %48 = and i32 %47, -897, !dbg !11825
  store volatile i32 %48, i32* %46, align 4, !dbg !11825
  %49 = load volatile i32, i32* %46, align 4, !dbg !11826
  %50 = or i32 %49, %45, !dbg !11826
  store volatile i32 %50, i32* %46, align 4, !dbg !11826
  %51 = add i32 %34, 65535, !dbg !11827
  %52 = and i32 %51, 65535, !dbg !11827
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !11828
  store volatile i32 %52, i32* %53, align 4, !dbg !11829
  %54 = udiv i32 %35, %38, !dbg !11830
  %55 = add i32 %54, 65535, !dbg !11830
  %56 = and i32 %55, 65535, !dbg !11830
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !11831
  store volatile i32 %56, i32* %57, align 4, !dbg !11832
  %58 = mul nuw nsw i32 %38, 1000, !dbg !11833
  %59 = udiv i32 %1, %58, !dbg !11833
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !11834
  store volatile i32 %59, i32* %60, align 4, !dbg !11835
  ret void, !dbg !11836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !11837 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11841, metadata !DIExpression()), !dbg !11844
  call void @llvm.dbg.value(metadata i32 %1, metadata !11842, metadata !DIExpression()), !dbg !11844
  call void @llvm.dbg.value(metadata i1 %2, metadata !11843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11844
  %4 = and i32 %1, 2, !dbg !11845
  %5 = icmp eq i32 %4, 0, !dbg !11845
  br i1 %2, label %6, label %18, !dbg !11847

6:                                                ; preds = %3
  br i1 %5, label %11, label %7, !dbg !11848

7:                                                ; preds = %6
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11850
  %9 = load volatile i32, i32* %8, align 4, !dbg !11852
  %10 = or i32 %9, 512, !dbg !11852
  store volatile i32 %10, i32* %8, align 4, !dbg !11852
  br label %11, !dbg !11850

11:                                               ; preds = %7, %6
  %12 = and i32 %1, 4, !dbg !11853
  %13 = icmp eq i32 %12, 0, !dbg !11853
  br i1 %13, label %30, label %14, !dbg !11855

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11856
  %16 = load volatile i32, i32* %15, align 4, !dbg !11857
  %17 = or i32 %16, 2, !dbg !11857
  store volatile i32 %17, i32* %15, align 4, !dbg !11857
  br label %30, !dbg !11856

18:                                               ; preds = %3
  br i1 %5, label %23, label %19, !dbg !11858

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11860
  %21 = load volatile i32, i32* %20, align 4, !dbg !11862
  %22 = and i32 %21, -513, !dbg !11862
  store volatile i32 %22, i32* %20, align 4, !dbg !11862
  br label %23, !dbg !11860

23:                                               ; preds = %19, %18
  %24 = and i32 %1, 4, !dbg !11863
  %25 = icmp eq i32 %24, 0, !dbg !11863
  br i1 %25, label %30, label %26, !dbg !11865

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11866
  %28 = load volatile i32, i32* %27, align 4, !dbg !11867
  %29 = and i32 %28, -3, !dbg !11867
  store volatile i32 %29, i32* %27, align 4, !dbg !11867
  br label %30, !dbg !11866

30:                                               ; preds = %23, %26, %11, %14
  ret void, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11869 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11873, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.value(metadata i1 %1, metadata !11874, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11875
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11876
  %4 = load volatile i32, i32* %3, align 4, !dbg !11876
  %5 = and i32 %4, 2, !dbg !11878
  %6 = select i1 %1, i32 0, i32 -3, !dbg !11878
  %7 = or i32 %5, %6, !dbg !11878
  store volatile i32 %7, i32* %3, align 4, !dbg !11876
  ret void, !dbg !11879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11882, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i1 %1, metadata !11883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11884
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11885
  %4 = load volatile i32, i32* %3, align 4, !dbg !11885
  %5 = and i32 %4, -17, !dbg !11887
  %6 = select i1 %1, i32 0, i32 16, !dbg !11887
  %7 = or i32 %5, %6, !dbg !11887
  store volatile i32 %7, i32* %3, align 4, !dbg !11885
  ret void, !dbg !11888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !11889 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11891, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %1, metadata !11892, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i1 %2, metadata !11893, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11896
  call void @llvm.dbg.value(metadata i32* null, metadata !11894, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 0, metadata !11895, metadata !DIExpression()), !dbg !11896
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11897
  %5 = lshr i32 %1, 16, !dbg !11898
  %6 = add i32 %5, %4, !dbg !11899
  %7 = inttoptr i32 %6 to i32*, !dbg !11900
  call void @llvm.dbg.value(metadata i32* %7, metadata !11894, metadata !DIExpression()), !dbg !11896
  %8 = and i32 %1, 65535, !dbg !11901
  %9 = shl nuw i32 1, %8, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %9, metadata !11895, metadata !DIExpression()), !dbg !11896
  br i1 %2, label %10, label %13, !dbg !11903

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11904
  %12 = or i32 %11, %9, !dbg !11904
  br label %17, !dbg !11906

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11907
  %15 = load volatile i32, i32* %7, align 4, !dbg !11908
  %16 = and i32 %15, %14, !dbg !11908
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11909
  ret void, !dbg !11910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !11911 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11915, metadata !DIExpression()), !dbg !11919
  call void @llvm.dbg.value(metadata i32 %1, metadata !11916, metadata !DIExpression()), !dbg !11919
  call void @llvm.dbg.value(metadata i32* null, metadata !11917, metadata !DIExpression()), !dbg !11919
  call void @llvm.dbg.value(metadata i32 0, metadata !11918, metadata !DIExpression()), !dbg !11919
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11920
  %4 = lshr i32 %1, 16, !dbg !11921
  %5 = add i32 %4, %3, !dbg !11922
  %6 = inttoptr i32 %5 to i32*, !dbg !11923
  call void @llvm.dbg.value(metadata i32* %6, metadata !11917, metadata !DIExpression()), !dbg !11919
  %7 = and i32 %1, 65535, !dbg !11924
  %8 = shl nuw i32 1, %7, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %8, metadata !11918, metadata !DIExpression()), !dbg !11919
  store volatile i32 %8, i32* %6, align 4, !dbg !11926
  ret void, !dbg !11927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !11928 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11930, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32 %1, metadata !11931, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i1 %2, metadata !11932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11935
  call void @llvm.dbg.value(metadata i32* null, metadata !11933, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.value(metadata i32 0, metadata !11934, metadata !DIExpression()), !dbg !11935
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11936
  %5 = lshr i32 %1, 16, !dbg !11937
  %6 = add i32 %5, %4, !dbg !11938
  %7 = inttoptr i32 %6 to i32*, !dbg !11939
  call void @llvm.dbg.value(metadata i32* %7, metadata !11933, metadata !DIExpression()), !dbg !11935
  %8 = and i32 %1, 65535, !dbg !11940
  %9 = shl nuw i32 1, %8, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %9, metadata !11934, metadata !DIExpression()), !dbg !11935
  br i1 %2, label %10, label %13, !dbg !11942

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11943
  %12 = or i32 %11, %9, !dbg !11943
  br label %17, !dbg !11945

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11946
  %15 = load volatile i32, i32* %7, align 4, !dbg !11947
  %16 = and i32 %15, %14, !dbg !11947
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11948
  ret void, !dbg !11949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11950 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11952, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i1 %1, metadata !11953, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11954
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11955
  %4 = load volatile i32, i32* %3, align 4, !dbg !11955
  %5 = and i32 %4, -16385, !dbg !11957
  %6 = select i1 %1, i32 0, i32 16384, !dbg !11957
  %7 = or i32 %5, %6, !dbg !11957
  store volatile i32 %7, i32* %3, align 4, !dbg !11955
  ret void, !dbg !11958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11961, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata i1 %1, metadata !11962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11963
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11964
  %4 = load volatile i32, i32* %3, align 4, !dbg !11964
  %5 = and i32 %4, -8193, !dbg !11966
  %6 = select i1 %1, i32 8192, i32 0, !dbg !11966
  %7 = or i32 %5, %6, !dbg !11966
  store volatile i32 %7, i32* %3, align 4, !dbg !11964
  ret void, !dbg !11967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11968 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11970, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.value(metadata i1 %1, metadata !11971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11972
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11973
  %4 = load volatile i32, i32* %3, align 4, !dbg !11973
  %5 = and i32 %4, -4097, !dbg !11975
  %6 = select i1 %1, i32 4096, i32 0, !dbg !11975
  %7 = or i32 %5, %6, !dbg !11975
  store volatile i32 %7, i32* %3, align 4, !dbg !11973
  ret void, !dbg !11976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11979, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 %1, metadata !11980, metadata !DIExpression()), !dbg !11981
  %3 = icmp eq i32 %1, 0, !dbg !11982
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11984
  %5 = load volatile i32, i32* %4, align 4, !dbg !11984
  %6 = and i32 %5, -65, !dbg !11985
  %7 = select i1 %3, i32 0, i32 64, !dbg !11985
  %8 = or i32 %6, %7, !dbg !11985
  store volatile i32 %8, i32* %4, align 4, !dbg !11984
  ret void, !dbg !11986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11987 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i1 %1, metadata !11990, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11991
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11992
  %4 = load volatile i32, i32* %3, align 4, !dbg !11992
  %5 = and i32 %4, -1025, !dbg !11994
  %6 = select i1 %1, i32 1024, i32 0, !dbg !11994
  %7 = or i32 %5, %6, !dbg !11994
  store volatile i32 %7, i32* %3, align 4, !dbg !11992
  ret void, !dbg !11995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !11996 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i1 %1, metadata !11999, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12000
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12001
  %4 = load volatile i32, i32* %3, align 4, !dbg !12001
  %5 = and i32 %4, -513, !dbg !12003
  %6 = select i1 %1, i32 512, i32 0, !dbg !12003
  %7 = or i32 %5, %6, !dbg !12003
  store volatile i32 %7, i32* %3, align 4, !dbg !12001
  ret void, !dbg !12004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12005 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12007, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.value(metadata i1 %1, metadata !12008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12009
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12010
  %4 = load volatile i32, i32* %3, align 4, !dbg !12010
  %5 = and i32 %4, -257, !dbg !12012
  %6 = select i1 %1, i32 256, i32 0, !dbg !12012
  %7 = or i32 %5, %6, !dbg !12012
  store volatile i32 %7, i32* %3, align 4, !dbg !12010
  ret void, !dbg !12013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !12014 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12018, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i16 %1, metadata !12019, metadata !DIExpression()), !dbg !12020
  %3 = zext i16 %1 to i32, !dbg !12021
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12023
  %5 = load volatile i32, i32* %4, align 4, !dbg !12023
  %6 = and i32 %5, -5, !dbg !12024
  %7 = lshr i32 %3, 6, !dbg !12024
  %8 = and i32 %7, 4, !dbg !12024
  %9 = or i32 %6, %8, !dbg !12024
  store volatile i32 %9, i32* %4, align 4, !dbg !12023
  %10 = and i32 %3, 255, !dbg !12025
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !12026
  store volatile i32 %10, i32* %11, align 4, !dbg !12027
  ret void, !dbg !12028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12033, metadata !DIExpression()), !dbg !12035
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !12036
  %3 = load volatile i32, i32* %2, align 4, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %3, metadata !12034, metadata !DIExpression()), !dbg !12035
  %4 = trunc i32 %3 to i16, !dbg !12037
  %5 = and i16 %4, 255, !dbg !12037
  %6 = lshr i16 %4, 2, !dbg !12037
  %7 = and i16 %6, 256, !dbg !12037
  %8 = or i16 %7, %5, !dbg !12037
  call void @llvm.dbg.value(metadata i16 %8, metadata !12034, metadata !DIExpression()), !dbg !12035
  ret i16 %8, !dbg !12038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12039 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12041, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i1 %1, metadata !12042, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12043
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12044
  %4 = load volatile i32, i32* %3, align 4, !dbg !12044
  %5 = and i32 %4, -2, !dbg !12046
  %6 = zext i1 %1 to i32, !dbg !12046
  %7 = or i32 %5, %6, !dbg !12046
  store volatile i32 %7, i32* %3, align 4, !dbg !12044
  ret void, !dbg !12047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12048 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12050, metadata !DIExpression()), !dbg !12052
  call void @llvm.dbg.value(metadata i1 %1, metadata !12051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12052
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12053
  %4 = load volatile i32, i32* %3, align 4, !dbg !12053
  %5 = and i32 %4, -3, !dbg !12055
  %6 = select i1 %1, i32 2, i32 0, !dbg !12055
  %7 = or i32 %5, %6, !dbg !12055
  store volatile i32 %7, i32* %3, align 4, !dbg !12053
  ret void, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12057 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12059, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i1 %1, metadata !12060, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12061
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12062
  %4 = load volatile i32, i32* %3, align 4, !dbg !12062
  %5 = and i32 %4, -129, !dbg !12064
  %6 = select i1 %1, i32 128, i32 0, !dbg !12064
  %7 = or i32 %5, %6, !dbg !12064
  store volatile i32 %7, i32* %3, align 4, !dbg !12062
  ret void, !dbg !12065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !12066 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12068, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %1, metadata !12069, metadata !DIExpression()), !dbg !12070
  %3 = icmp eq i32 %1, 0, !dbg !12071
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12073
  %5 = load volatile i32, i32* %4, align 4, !dbg !12073
  %6 = and i32 %5, -33, !dbg !12074
  %7 = select i1 %3, i32 32, i32 0, !dbg !12074
  %8 = or i32 %6, %7, !dbg !12074
  store volatile i32 %8, i32* %4, align 4, !dbg !12073
  ret void, !dbg !12075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12076 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12078, metadata !DIExpression()), !dbg !12080
  call void @llvm.dbg.value(metadata i1 %1, metadata !12079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12080
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12081
  %4 = load volatile i32, i32* %3, align 4, !dbg !12081
  %5 = and i32 %4, -16385, !dbg !12083
  %6 = select i1 %1, i32 16384, i32 0, !dbg !12083
  %7 = or i32 %5, %6, !dbg !12083
  store volatile i32 %7, i32* %3, align 4, !dbg !12081
  ret void, !dbg !12084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12087, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i1 %1, metadata !12088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12089
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12090
  %4 = load volatile i32, i32* %3, align 4, !dbg !12090
  %5 = and i32 %4, -17, !dbg !12092
  %6 = select i1 %1, i32 16, i32 0, !dbg !12092
  %7 = or i32 %5, %6, !dbg !12092
  store volatile i32 %7, i32* %3, align 4, !dbg !12090
  ret void, !dbg !12093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !12094 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12096, metadata !DIExpression()), !dbg !12098
  call void @llvm.dbg.value(metadata i1 %1, metadata !12097, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12098
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12099
  %4 = load volatile i32, i32* %3, align 4, !dbg !12099
  %5 = and i32 %4, -2049, !dbg !12101
  %6 = select i1 %1, i32 2048, i32 0, !dbg !12101
  %7 = or i32 %5, %6, !dbg !12101
  store volatile i32 %7, i32* %3, align 4, !dbg !12099
  ret void, !dbg !12102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !12103 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !12122, metadata !DIExpression()), !dbg !12127
  %4 = bitcast i32* %2 to i8*, !dbg !12128
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12128
  %5 = bitcast i32* %3 to i8*, !dbg !12128
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12128
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !12129
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !12130

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12123, metadata !DIExpression()), !dbg !12127
  call void @llvm.dbg.value(metadata i32* %2, metadata !12125, metadata !DIExpression(DW_OP_deref)), !dbg !12127
  call void @llvm.dbg.value(metadata i32* %3, metadata !12126, metadata !DIExpression(DW_OP_deref)), !dbg !12127
  br label %8, !dbg !12131

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #23, !dbg !12133
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %10, metadata !12123, metadata !DIExpression()), !dbg !12127
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !12134

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %12, metadata !12124, metadata !DIExpression()), !dbg !12127
  br label %13, !dbg !12137

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12138
  call void @llvm.dbg.value(metadata i32 %14, metadata !12124, metadata !DIExpression()), !dbg !12127
  %15 = load i32, i32* %2, align 4, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %15, metadata !12125, metadata !DIExpression()), !dbg !12127
  %16 = add i32 %15, 1, !dbg !12140
  %17 = udiv i32 %14, %16, !dbg !12141
  %18 = load i32, i32* %3, align 4, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %18, metadata !12126, metadata !DIExpression()), !dbg !12127
  %19 = add i32 %18, 1, !dbg !12143
  %20 = udiv i32 %17, %19, !dbg !12144
  br label %21, !dbg !12145

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12146
  ret i32 %22, !dbg !12146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !12147 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !12151, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 %0, metadata !12152, metadata !DIExpression()), !dbg !12153
  %2 = inttoptr i32 %0 to i32*, !dbg !12154
  %3 = load volatile i32, i32* %2, align 4, !dbg !12154
  %4 = lshr i32 %3, 24, !dbg !12155
  %5 = and i32 %4, 7, !dbg !12155
  ret i32 %5, !dbg !12156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !12157 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !12179, metadata !DIExpression()), !dbg !12184
  %4 = bitcast i32* %2 to i8*, !dbg !12185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12185
  %5 = bitcast i32* %3 to i8*, !dbg !12185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12185
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !12186
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !12187

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12180, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata i32* %2, metadata !12182, metadata !DIExpression(DW_OP_deref)), !dbg !12184
  call void @llvm.dbg.value(metadata i32* %3, metadata !12183, metadata !DIExpression(DW_OP_deref)), !dbg !12184
  br label %8, !dbg !12188

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #23, !dbg !12190
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %10, metadata !12180, metadata !DIExpression()), !dbg !12184
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !12191

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !12192
  call void @llvm.dbg.value(metadata i32 %12, metadata !12181, metadata !DIExpression()), !dbg !12184
  br label %13, !dbg !12194

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12195
  call void @llvm.dbg.value(metadata i32 %14, metadata !12181, metadata !DIExpression()), !dbg !12184
  %15 = load i32, i32* %2, align 4, !dbg !12196
  call void @llvm.dbg.value(metadata i32 %15, metadata !12182, metadata !DIExpression()), !dbg !12184
  %16 = add i32 %15, 1, !dbg !12197
  %17 = udiv i32 %14, %16, !dbg !12198
  %18 = load i32, i32* %3, align 4, !dbg !12199
  call void @llvm.dbg.value(metadata i32 %18, metadata !12183, metadata !DIExpression()), !dbg !12184
  %19 = add i32 %18, 1, !dbg !12200
  %20 = udiv i32 %17, %19, !dbg !12201
  br label %21, !dbg !12202

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12203
  ret i32 %22, !dbg !12203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !12204 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !12247, metadata !DIExpression()), !dbg !12252
  %4 = bitcast i32* %2 to i8*, !dbg !12253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12253
  %5 = bitcast i32* %3 to i8*, !dbg !12253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12253
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !12254
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !12255

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12248, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32* %2, metadata !12250, metadata !DIExpression(DW_OP_deref)), !dbg !12252
  call void @llvm.dbg.value(metadata i32* %3, metadata !12251, metadata !DIExpression(DW_OP_deref)), !dbg !12252
  br label %8, !dbg !12256

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #23, !dbg !12258
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12258
  call void @llvm.dbg.value(metadata i32 %10, metadata !12248, metadata !DIExpression()), !dbg !12252
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !12259

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12260
  %13 = lshr i32 %12, 2, !dbg !12262
  call void @llvm.dbg.value(metadata i32 %13, metadata !12249, metadata !DIExpression()), !dbg !12252
  br label %16, !dbg !12263

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %15, metadata !12249, metadata !DIExpression()), !dbg !12252
  br label %16, !dbg !12265

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !12266
  call void @llvm.dbg.value(metadata i32 %17, metadata !12249, metadata !DIExpression()), !dbg !12252
  %18 = load i32, i32* %2, align 4, !dbg !12267
  call void @llvm.dbg.value(metadata i32 %18, metadata !12250, metadata !DIExpression()), !dbg !12252
  %19 = add i32 %18, 1, !dbg !12268
  %20 = udiv i32 %17, %19, !dbg !12269
  %21 = load i32, i32* %3, align 4, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %21, metadata !12251, metadata !DIExpression()), !dbg !12252
  %22 = add i32 %21, 1, !dbg !12271
  %23 = udiv i32 %20, %22, !dbg !12272
  br label %24, !dbg !12273

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !12252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12274
  ret i32 %25, !dbg !12274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !12275 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !12293, metadata !DIExpression()), !dbg !12298
  %4 = bitcast i32* %2 to i8*, !dbg !12299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12299
  %5 = bitcast i32* %3 to i8*, !dbg !12299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12299
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !12300
  %7 = add i32 %6, -815923200, !dbg !12301
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !12301
  %9 = icmp ult i32 %8, 4, !dbg !12301
  br i1 %9, label %10, label %25, !dbg !12301

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !12301
  %12 = add i32 %11, 809020800, !dbg !12301
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #23, !dbg !12302
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %13, metadata !12294, metadata !DIExpression()), !dbg !12298
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !12304

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12305
  %16 = lshr i32 %15, 2, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %16, metadata !12295, metadata !DIExpression()), !dbg !12298
  br label %17, !dbg !12308

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !12309
  call void @llvm.dbg.value(metadata i32 %18, metadata !12295, metadata !DIExpression()), !dbg !12298
  %19 = load i32, i32* %2, align 4, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %19, metadata !12296, metadata !DIExpression()), !dbg !12298
  %20 = add i32 %19, 1, !dbg !12311
  %21 = udiv i32 %18, %20, !dbg !12312
  %22 = load i32, i32* %3, align 4, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %22, metadata !12297, metadata !DIExpression()), !dbg !12298
  %23 = add i32 %22, 1, !dbg !12314
  %24 = udiv i32 %21, %23, !dbg !12315
  br label %25, !dbg !12316

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !12298
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12317
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12317
  ret i32 %26, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !12318 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12345, metadata !DIExpression()), !dbg !12350
  %4 = bitcast i32* %2 to i8*, !dbg !12351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12351
  %5 = bitcast i32* %3 to i8*, !dbg !12351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12351
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12352
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !12353

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12354

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12356

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12357

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12358

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12359

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !12346, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %2, metadata !12348, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  call void @llvm.dbg.value(metadata i32* %3, metadata !12349, metadata !DIExpression(DW_OP_deref)), !dbg !12350
  br label %13, !dbg !12360

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #23, !dbg !12361
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12361
  call void @llvm.dbg.value(metadata i32 %15, metadata !12346, metadata !DIExpression()), !dbg !12350
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !12362

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12363
  %18 = lshr i32 %17, 1, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %18, metadata !12347, metadata !DIExpression()), !dbg !12350
  br label %21, !dbg !12366

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %20, metadata !12347, metadata !DIExpression()), !dbg !12350
  br label %21, !dbg !12368

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !12369
  call void @llvm.dbg.value(metadata i32 %22, metadata !12347, metadata !DIExpression()), !dbg !12350
  %23 = load i32, i32* %2, align 4, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %23, metadata !12348, metadata !DIExpression()), !dbg !12350
  %24 = add i32 %23, 1, !dbg !12371
  %25 = udiv i32 %22, %24, !dbg !12372
  %26 = load i32, i32* %3, align 4, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %26, metadata !12349, metadata !DIExpression()), !dbg !12350
  %27 = add i32 %26, 1, !dbg !12374
  %28 = udiv i32 %25, %27, !dbg !12375
  br label %29, !dbg !12376

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !12350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12377
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !12377
  ret i32 %30, !dbg !12377
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !12378 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12381, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 undef, metadata !12381, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.value(metadata i32 undef, metadata !12381, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12397
  ret void, !dbg !12398
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12399 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12403, metadata !DIExpression()), !dbg !12405
  %2 = icmp eq i8* %0, null, !dbg !12406
  br i1 %2, label %29, label %3, !dbg !12408

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12409
  %5 = icmp eq i8 %4, 0, !dbg !12410
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12411
  br i1 %6, label %29, label %8, !dbg !12411

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12404, metadata !DIExpression()), !dbg !12405
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12412

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12404, metadata !DIExpression()), !dbg !12405
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #23, !dbg !12414
  br i1 %10, label %11, label %15, !dbg !12419

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12420
  %13 = load i8*, i8** %12, align 4, !dbg !12420
  %14 = icmp eq i8* %13, %0, !dbg !12421
  br i1 %14, label %29, label %15, !dbg !12422

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12423
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12404, metadata !DIExpression()), !dbg !12405
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12424
  br i1 %17, label %7, label %8, !dbg !12425, !llvm.loop !12426

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12404, metadata !DIExpression()), !dbg !12405
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #23, !dbg !12428
  br i1 %20, label %21, label %26, !dbg !12432

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12433
  %23 = load i8*, i8** %22, align 4, !dbg !12433
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12434
  %25 = icmp eq i32 %24, 0, !dbg !12435
  br i1 %25, label %29, label %26, !dbg !12436

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12437
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12404, metadata !DIExpression()), !dbg !12405
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12438
  br i1 %28, label %29, label %18, !dbg !12412, !llvm.loop !12439

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12405
  ret %struct.device* %30, !dbg !12441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12446, metadata !DIExpression()), !dbg !12447
  %2 = icmp eq %struct.device* %0, null, !dbg !12448
  br i1 %2, label %14, label %3, !dbg !12450

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12451
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12451
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12452
  %7 = load i8, i8* %6, align 1, !dbg !12452
  %8 = and i8 %7, 1, !dbg !12452
  %9 = icmp eq i8 %8, 0, !dbg !12452
  br i1 %9, label %14, label %10, !dbg !12453

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12454
  %12 = load i8, i8* %11, align 1, !dbg !12454
  %13 = icmp eq i8 %12, 0, !dbg !12455
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12447
  ret i1 %15, !dbg !12456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12457 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12462, metadata !DIExpression()), !dbg !12463
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12464
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12466 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12474, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12475, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i8* %2, metadata !12476, metadata !DIExpression()), !dbg !12479
  %5 = bitcast i32* %4 to i8*, !dbg !12480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12480
  call void @llvm.dbg.value(metadata i32 0, metadata !12477, metadata !DIExpression()), !dbg !12479
  store i32 0, i32* %4, align 4, !dbg !12481
  call void @llvm.dbg.value(metadata i32* %4, metadata !12477, metadata !DIExpression(DW_OP_deref)), !dbg !12479
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #23, !dbg !12482
  call void @llvm.dbg.value(metadata i16* %6, metadata !12478, metadata !DIExpression()), !dbg !12479
  %7 = load i32, i32* %4, align 4, !dbg !12483
  call void @llvm.dbg.value(metadata i32 %7, metadata !12477, metadata !DIExpression()), !dbg !12479
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #23, !dbg !12484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12485
  ret i32 %8, !dbg !12486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12491, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32* %1, metadata !12492, metadata !DIExpression()), !dbg !12497
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12498
  %4 = load i16*, i16** %3, align 4, !dbg !12498
  call void @llvm.dbg.value(metadata i16* %4, metadata !12493, metadata !DIExpression()), !dbg !12497
  %5 = icmp eq i16* %4, null, !dbg !12499
  br i1 %5, label %14, label %6, !dbg !12500

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12501
  call void @llvm.dbg.value(metadata i32 %7, metadata !12494, metadata !DIExpression()), !dbg !12501
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12502
  %9 = load i16, i16* %8, align 2, !dbg !12502
  %10 = add i16 %9, -32767, !dbg !12503
  %11 = icmp ult i16 %10, 2, !dbg !12503
  %12 = add i32 %7, 1, !dbg !12504
  call void @llvm.dbg.value(metadata i32 %12, metadata !12494, metadata !DIExpression()), !dbg !12501
  br i1 %11, label %13, label %6, !dbg !12503, !llvm.loop !12506

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12509
  br label %14, !dbg !12510

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12512 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12516, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 %1, metadata !12517, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12518, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i8* %3, metadata !12519, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 0, metadata !12520, metadata !DIExpression()), !dbg !12528
  %5 = icmp eq i32 %1, 0, !dbg !12529
  br i1 %5, label %16, label %8, !dbg !12530

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12520, metadata !DIExpression()), !dbg !12528
  %7 = icmp eq i32 %15, %1, !dbg !12529
  br i1 %7, label %16, label %8, !dbg !12530, !llvm.loop !12531

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12520, metadata !DIExpression()), !dbg !12528
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12533
  %11 = load i16, i16* %10, align 2, !dbg !12533
  call void @llvm.dbg.value(metadata i16 %11, metadata !12522, metadata !DIExpression()), !dbg !12534
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #23, !dbg !12535
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12525, metadata !DIExpression()), !dbg !12534
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %13, metadata !12526, metadata !DIExpression()), !dbg !12534
  %14 = icmp slt i32 %13, 0, !dbg !12537
  %15 = add nuw i32 %9, 1, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %15, metadata !12520, metadata !DIExpression()), !dbg !12528
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !12541 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12545, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12546, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12547, metadata !DIExpression()), !dbg !12548
  %2 = sext i16 %0 to i32, !dbg !12549
  %3 = icmp slt i16 %0, 1, !dbg !12551
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12552
  %6 = add nsw i32 %2, -1, !dbg !12552
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12552
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12552
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12546, metadata !DIExpression()), !dbg !12548
  ret %struct.device* %8, !dbg !12553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12554 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12556, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12557, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.value(metadata i8* %2, metadata !12558, metadata !DIExpression()), !dbg !12561
  %5 = bitcast i32* %4 to i8*, !dbg !12562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12562
  call void @llvm.dbg.value(metadata i32 0, metadata !12559, metadata !DIExpression()), !dbg !12561
  store i32 0, i32* %4, align 4, !dbg !12563
  call void @llvm.dbg.value(metadata i32* %4, metadata !12559, metadata !DIExpression(DW_OP_deref)), !dbg !12561
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #23, !dbg !12564
  call void @llvm.dbg.value(metadata i16* %6, metadata !12560, metadata !DIExpression()), !dbg !12561
  %7 = load i32, i32* %4, align 4, !dbg !12565
  call void @llvm.dbg.value(metadata i32 %7, metadata !12559, metadata !DIExpression()), !dbg !12561
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #23, !dbg !12566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !12567
  ret i32 %8, !dbg !12568
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12571, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32* %1, metadata !12572, metadata !DIExpression()), !dbg !12576
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12577
  %4 = load i16*, i16** %3, align 4, !dbg !12577
  call void @llvm.dbg.value(metadata i16* %4, metadata !12573, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !12575, metadata !DIExpression()), !dbg !12576
  %5 = icmp eq i16* %4, null, !dbg !12578
  br i1 %5, label %22, label %6, !dbg !12580

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i16* %8, metadata !12573, metadata !DIExpression()), !dbg !12576
  %9 = load i16, i16* %8, align 2, !dbg !12581
  %10 = icmp eq i16 %9, -32768, !dbg !12585
  call void @llvm.dbg.value(metadata i32 undef, metadata !12574, metadata !DIExpression()), !dbg !12576
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12586
  call void @llvm.dbg.value(metadata i16* %11, metadata !12573, metadata !DIExpression()), !dbg !12576
  %12 = zext i1 %10 to i32, !dbg !12587
  %13 = add i32 %7, %12, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %13, metadata !12574, metadata !DIExpression()), !dbg !12576
  %14 = icmp eq i32 %13, 2, !dbg !12588
  br i1 %14, label %15, label %6, !dbg !12589

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12576
  call void @llvm.dbg.value(metadata i32 %16, metadata !12575, metadata !DIExpression()), !dbg !12576
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12590
  %18 = load i16, i16* %17, align 2, !dbg !12590
  %19 = icmp eq i16 %18, 32767, !dbg !12591
  %20 = add i32 %16, 1, !dbg !12592
  call void @llvm.dbg.value(metadata i32 %20, metadata !12575, metadata !DIExpression()), !dbg !12576
  br i1 %19, label %21, label %15, !dbg !12594, !llvm.loop !12595

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12597
  br label %22, !dbg !12598

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12599
  call void @llvm.dbg.value(metadata i16* %23, metadata !12573, metadata !DIExpression()), !dbg !12576
  ret i16* %23, !dbg !12600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12601 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12604
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12605
  ret i32* %2, !dbg !12606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !12607 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12750, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12751, metadata !DIExpression()), !dbg !12752
  ret void, !dbg !12753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12758, metadata !DIExpression()), !dbg !12760
  call void @llvm.dbg.value(metadata i32 %1, metadata !12759, metadata !DIExpression()), !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12766, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata i32 %1, metadata !12767, metadata !DIExpression()), !dbg !12768
  ret void, !dbg !12769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12774, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata i8* %1, metadata !12775, metadata !DIExpression()), !dbg !12776
  ret i32 -134, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12782, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i8* %1, metadata !12783, metadata !DIExpression()), !dbg !12784
  ret i32 -134, !dbg !12785
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12791, !srcloc !12797
  call void @llvm.dbg.value(metadata i32 undef, metadata !12794, metadata !DIExpression()) #22, !dbg !12798
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #22, !dbg !12798
  br label %3, !dbg !12799

3:                                                ; preds = %3, %1
  br label %3, !dbg !12800, !llvm.loop !12803
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12810, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12811, metadata !DIExpression()), !dbg !12812
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.181, i32 0, i32 0), i32 noundef 69) #24, !dbg !12813
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !12818
  unreachable, !dbg !12818
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12821, metadata !DIExpression()), !dbg !12822
  tail call void @arch_system_halt(i32 noundef %0) #27, !dbg !12823
  unreachable, !dbg !12823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12827, metadata !DIExpression()), !dbg !12830
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !12831, !srcloc !12797
  call void @llvm.dbg.value(metadata i32 undef, metadata !12794, metadata !DIExpression()) #22, !dbg !12833
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #22, !dbg !12833
  call void @llvm.dbg.value(metadata i32 undef, metadata !12828, metadata !DIExpression()), !dbg !12830
  %4 = tail call fastcc %struct.k_thread* @k_current_get.184() #25, !dbg !12834
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12829, metadata !DIExpression()), !dbg !12830
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #23, !dbg !12835
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.185, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #24, !dbg !12835
  %6 = icmp eq %struct.__esf* %1, null, !dbg !12840
  br i1 %6, label %15, label %7, !dbg !12842

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12843, metadata !DIExpression()), !dbg !12848
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12850
  %9 = load i32, i32* %8, align 4, !dbg !12850
  %10 = and i32 %9, 511, !dbg !12851
  %11 = icmp eq i32 %10, 0, !dbg !12852
  br i1 %11, label %13, label %12, !dbg !12853

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 69) #24, !dbg !12854
  br label %13, !dbg !12860

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #23, !dbg !12861
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #24, !dbg !12861
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #23, !dbg !12866
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12843, metadata !DIExpression()), !dbg !12867
  br label %17, !dbg !12872

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #23, !dbg !12861
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #24, !dbg !12861
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #23, !dbg !12866
  br label %17, !dbg !12873

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %18, metadata !12794, metadata !DIExpression()) #22, !dbg !12833
  call void @llvm.dbg.value(metadata i32 %18, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 undef, metadata !12874, metadata !DIExpression()) #22, !dbg !12877
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #22, !dbg !12879, !srcloc !12880
  tail call fastcc void @k_thread_abort.188(%struct.k_thread* noundef %4) #23, !dbg !12881
  ret void, !dbg !12884
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.184() unnamed_addr #13 !dbg !12885 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.196() #25, !dbg !12889
  ret %struct.k_thread* %1, !dbg !12890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !12891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12895, metadata !DIExpression()), !dbg !12896
  %2 = icmp ult i32 %0, 5, !dbg !12897
  br i1 %2, label %3, label %6, !dbg !12897

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12897
  %5 = load i8*, i8** %4, align 4, !dbg !12897
  br label %6, !dbg !12897

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.190, i32 0, i32 0), %1 ], !dbg !12898
  ret i8* %7, !dbg !12900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12901 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12905, metadata !DIExpression()), !dbg !12907
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12908
  br i1 %2, label %9, label %3, !dbg !12909

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12910
  call void @llvm.dbg.value(metadata i8* %4, metadata !12906, metadata !DIExpression()), !dbg !12907
  %5 = icmp eq i8* %4, null, !dbg !12911
  br i1 %5, label %9, label %6, !dbg !12913

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12914
  %8 = icmp eq i8 %7, 0, !dbg !12915
  br i1 %8, label %9, label %10, !dbg !12916

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), metadata !12906, metadata !DIExpression()), !dbg !12907
  br label %10, !dbg !12917

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12907
  call void @llvm.dbg.value(metadata i8* %11, metadata !12906, metadata !DIExpression()), !dbg !12907
  ret i8* %11, !dbg !12919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.188(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12920 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12924, metadata !DIExpression()), !dbg !12925
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !12926, !srcloc !12928
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12929
  ret void, !dbg !12930
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.196() unnamed_addr #13 !dbg !12931 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !12932, !srcloc !12934
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12935
  ret %struct.k_thread* %1, !dbg !12936
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12937 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12941, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 %1, metadata !12942, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 %2, metadata !12943, metadata !DIExpression()), !dbg !12944
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12945
  ret void, !dbg !12946
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12947 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12951, metadata !DIExpression()), !dbg !12954
  call void @llvm.dbg.value(metadata i8* %1, metadata !12952, metadata !DIExpression()), !dbg !12954
  call void @llvm.dbg.value(metadata i32 %2, metadata !12953, metadata !DIExpression()), !dbg !12954
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12955
  ret void, !dbg !12956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12957 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #23, !dbg !12958
  ret void, !dbg !12959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12964, metadata !DIExpression()), !dbg !12965
  tail call fastcc void @init_idle_thread(i32 noundef %0) #23, !dbg !12966
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12967
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12968
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12969
  %4 = trunc i32 %0 to i8, !dbg !12970
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12971
  store i8 %4, i8* %5, align 4, !dbg !12972
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12973
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #23, !dbg !12974
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12975
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12976
  store i8* %8, i8** %9, align 4, !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12981, metadata !DIExpression()), !dbg !12987
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12988
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12982, metadata !DIExpression()), !dbg !12987
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12989
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12983, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.value(metadata i8* null, metadata !12986, metadata !DIExpression()), !dbg !12987
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12990
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12991
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !12992
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #23, !dbg !12993
  ret void, !dbg !12994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !12995 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12999, metadata !DIExpression()), !dbg !13000
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !13001
  ret i8* %2, !dbg !13002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13008, metadata !DIExpression()), !dbg !13009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13010
  %3 = load i8, i8* %2, align 1, !dbg !13011
  %4 = and i8 %3, -5, !dbg !13011
  store i8 %4, i8* %2, align 1, !dbg !13011
  ret void, !dbg !13012
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !13013 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #23, !dbg !13016
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !13017
  %3 = ptrtoint i8* %2 to i32, !dbg !13026
  %4 = add i32 %3, 2048, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %4, metadata !13021, metadata !DIExpression()) #22, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %4, metadata !13029, metadata !DIExpression()) #22, !dbg !13032
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #22, !dbg !13034, !srcloc !13035
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13036
  %6 = or i32 %5, 512, !dbg !13036
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13036
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -2, i32 noundef 255) #24, !dbg !13037
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -5, i32 noundef 0) #24, !dbg !13040
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -12, i32 noundef 0) #24, !dbg !13041
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -11, i32 noundef 0) #24, !dbg !13042
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -10, i32 noundef 0) #24, !dbg !13043
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -4, i32 noundef 0) #24, !dbg !13044
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13045
  %8 = or i32 %7, 458752, !dbg !13045
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13045
  tail call void @z_arm_fault_init() #24, !dbg !13046
  tail call void @z_arm_cpu_idle_init() #24, !dbg !13047
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13048
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13051
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !13052
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #22, !dbg !13052
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13015, metadata !DIExpression()), !dbg !13053
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #23, !dbg !13054
  call void @z_device_state_init() #24, !dbg !13055
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #23, !dbg !13056
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #23, !dbg !13057
  %10 = call fastcc i8* @prepare_multithreading() #23, !dbg !13058
  call fastcc void @switch_to_main_thread(i8* noundef %10) #27, !dbg !13059
  unreachable, !dbg !13059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2185, metadata !DIExpression()), !dbg !13060
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13061
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13061
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2186, metadata !DIExpression()), !dbg !13060
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2186, metadata !DIExpression()), !dbg !13060
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13062
  br i1 %7, label %8, label %35, !dbg !13063

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2186, metadata !DIExpression()), !dbg !13060
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13064
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13064
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2196, metadata !DIExpression()), !dbg !13065
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13066
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13066
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %14, metadata !2200, metadata !DIExpression()), !dbg !13065
  %15 = icmp eq %struct.device* %11, null, !dbg !13068
  br i1 %15, label %32, label %16, !dbg !13070

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13071
  br i1 %17, label %26, label %18, !dbg !13074

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13075
  call void @llvm.dbg.value(metadata i32 %19, metadata !2200, metadata !DIExpression()), !dbg !13065
  %20 = icmp ult i32 %19, 255, !dbg !13077
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %21, metadata !2200, metadata !DIExpression()), !dbg !13065
  %22 = trunc i32 %21 to i8, !dbg !13078
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13079
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13079
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13080
  store i8 %22, i8* %25, align 1, !dbg !13081
  br label %26, !dbg !13082

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13083
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13083
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13084
  %30 = load i8, i8* %29, align 1, !dbg !13085
  %31 = or i8 %30, 1, !dbg !13085
  store i8 %31, i8* %29, align 1, !dbg !13085
  br label %32, !dbg !13086

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13087
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2186, metadata !DIExpression()), !dbg !13060
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13062
  br i1 %34, label %8, label %35, !dbg !13063, !llvm.loop !13088

35:                                               ; preds = %32, %1
  ret void, !dbg !13090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.205(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13093, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i32 %1, metadata !13094, metadata !DIExpression()), !dbg !13095
  %3 = trunc i32 %1 to i8, !dbg !13096
  %4 = shl i8 %3, 4, !dbg !13096
  %5 = and i32 %0, 15, !dbg !13099
  %6 = add nsw i32 %5, -4, !dbg !13100
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13101
  store volatile i8 %4, i8* %7, align 1, !dbg !13102
  ret void, !dbg !13103
}

; Function Attrs: optsize
declare !dbg !13104 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !13105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13108, metadata !DIExpression()), !dbg !13109
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13110
  store i8 1, i8* %2, align 1, !dbg !13111
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13112
  store i8 1, i8* %3, align 4, !dbg !13113
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13114
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !13115
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13118 {
  tail call void @z_sched_init() #24, !dbg !13123
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13124
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.206, i32 0, i32 0)) #24, !dbg !13125
  call void @llvm.dbg.value(metadata i8* %1, metadata !13122, metadata !DIExpression()), !dbg !13126
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #23, !dbg !13127
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13128
  tail call void @z_init_cpu(i32 noundef 0) #23, !dbg !13129
  ret i8* %1, !dbg !13130
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !13131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13135, metadata !DIExpression()), !dbg !13136
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13137
  unreachable, !dbg !13138
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13141, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8* %1, metadata !13142, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8* %2, metadata !13143, metadata !DIExpression()), !dbg !13144
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13145
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #23, !dbg !13146
  tail call void @boot_banner() #24, !dbg !13147
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #23, !dbg !13148
  tail call void @z_init_static_threads() #24, !dbg !13149
  tail call void @main() #24, !dbg !13150
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13151
  %5 = and i8 %4, -2, !dbg !13151
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13153 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13163, metadata !DIExpression()), !dbg !13165
  call void @llvm.dbg.value(metadata i8* %1, metadata !13164, metadata !DIExpression()), !dbg !13165
  ret void, !dbg !13166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13167 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13169, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i8* %1, metadata !13170, metadata !DIExpression()), !dbg !13171
  ret void, !dbg !13172
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13173 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !13174, !srcloc !13181
  call void @llvm.dbg.value(metadata i32 %1, metadata !13177, metadata !DIExpression()) #22, !dbg !13182
  %2 = icmp ne i32 %1, 0, !dbg !13183
  ret i1 %2, !dbg !13184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13185 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13186
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13187
  %3 = load i8, i8* %2, align 4, !dbg !13188
  %4 = or i8 %3, 1, !dbg !13188
  store i8 %4, i8* %2, align 4, !dbg !13188
  ret void, !dbg !13189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13190 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13191
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13192
  %3 = load i8, i8* %2, align 4, !dbg !13193
  %4 = and i8 %3, -2, !dbg !13193
  store i8 %4, i8* %2, align 4, !dbg !13193
  ret void, !dbg !13194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13195 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13197
  %3 = load i8, i8* %2, align 4, !dbg !13197
  %4 = and i8 %3, 1, !dbg !13198
  %5 = icmp ne i8 %4, 0, !dbg !13199
  ret i1 %5, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i8* %1, metadata !13206, metadata !DIExpression()), !dbg !13207
  ret i32 -88, !dbg !13208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13213, metadata !DIExpression()), !dbg !13214
  ret i8* null, !dbg !13215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !13216 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13220, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata i8* %1, metadata !13221, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata i32 %2, metadata !13222, metadata !DIExpression()), !dbg !13223
  ret i32 -88, !dbg !13224
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2320, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i8* %1, metadata !2321, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 %2, metadata !2322, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 0, metadata !2323, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i8 undef, metadata !2325, metadata !DIExpression()), !dbg !13225
  %4 = icmp eq i8* %1, null, !dbg !13226
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13228
  br i1 %6, label %46, label %7, !dbg !13228

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13229
  %9 = load i8, i8* %8, align 1, !dbg !13229
  call void @llvm.dbg.value(metadata i8 %9, metadata !2325, metadata !DIExpression()), !dbg !13225
  %10 = add i32 %2, -1, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %10, metadata !2322, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i8 0, metadata !2326, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i8 %9, metadata !2325, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 0, metadata !2323, metadata !DIExpression()), !dbg !13225
  %11 = icmp eq i8 %9, 0, !dbg !13232
  br i1 %11, label %12, label %15, !dbg !13234

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13235
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13236
  store i8 0, i8* %14, align 1, !dbg !13237
  br label %46, !dbg !13238

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2326, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i8 %17, metadata !2325, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 %18, metadata !2323, metadata !DIExpression()), !dbg !13225
  %19 = zext i8 %17 to i32, !dbg !13239
  %20 = zext i8 %16 to i32, !dbg !13240
  %21 = shl nuw i32 1, %20, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %21, metadata !2324, metadata !DIExpression()), !dbg !13225
  %22 = and i32 %21, %19, !dbg !13242
  %23 = icmp eq i32 %22, 0, !dbg !13244
  br i1 %23, label %42, label %24, !dbg !13245

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13246
  %26 = sub i32 %10, %18, !dbg !13247
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13248
  %28 = load i8*, i8** %27, align 4, !dbg !13248
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13249
  %30 = load i32, i32* %29, align 4, !dbg !13249
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #23, !dbg !13250
  %32 = add i32 %31, %18, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %32, metadata !2323, metadata !DIExpression()), !dbg !13225
  %33 = trunc i32 %21 to i8, !dbg !13252
  %34 = xor i8 %33, -1, !dbg !13252
  %35 = and i8 %17, %34, !dbg !13252
  call void @llvm.dbg.value(metadata i8 %35, metadata !2325, metadata !DIExpression()), !dbg !13225
  %36 = icmp eq i8 %35, 0, !dbg !13253
  br i1 %36, label %12, label %37, !dbg !13255

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13256
  %39 = sub i32 %10, %32, !dbg !13258
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.209, i32 0, i32 0), i32 noundef 1) #23, !dbg !13259
  %41 = add i32 %40, %32, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %41, metadata !2323, metadata !DIExpression()), !dbg !13225
  br label %42, !dbg !13261

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13225
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13225
  call void @llvm.dbg.value(metadata i8 %44, metadata !2325, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.value(metadata i32 %43, metadata !2323, metadata !DIExpression()), !dbg !13225
  %45 = add i8 %16, 1, !dbg !13262
  call void @llvm.dbg.value(metadata i8 %45, metadata !2326, metadata !DIExpression()), !dbg !13231
  br label %15, !dbg !13234

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), %3 ], !dbg !13225
  ret i8* %47, !dbg !13263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13268, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %1, metadata !13269, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i8* %2, metadata !13270, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %3, metadata !13271, metadata !DIExpression()), !dbg !13273
  %5 = icmp ult i32 %1, %3, !dbg !13274
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %6, metadata !13272, metadata !DIExpression()), !dbg !13273
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13275
  ret i32 %6, !dbg !13276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13281, metadata !DIExpression()), !dbg !13282
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13283
  ret void, !dbg !13284
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13294, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13295, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %2, metadata !13296, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13297, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i8* %4, metadata !13298, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i8* %5, metadata !13299, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i8* %6, metadata !13300, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %7, metadata !13301, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 %8, metadata !13302, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i8* undef, metadata !13303, metadata !DIExpression()), !dbg !13305
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13306
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #23, !dbg !13307
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13308
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #23, !dbg !13309
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #23, !dbg !13310
  call void @llvm.dbg.value(metadata i8* %13, metadata !13304, metadata !DIExpression()), !dbg !13305
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13311
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13312
  store i8* null, i8** %14, align 4, !dbg !13313
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13314
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13314
  br i1 %16, label %20, label %17, !dbg !13316

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 5, !dbg !13317
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 4, !dbg !13317
  br label %20, !dbg !13318

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13305
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13319
  store %struct.k_heap* %21, %struct.k_heap** %22, align 4, !dbg !13321
  ret i8* %13, !dbg !13322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13323 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13328, metadata !DIExpression()), !dbg !13329
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13330
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #23, !dbg !13331
  ret void, !dbg !13332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13333 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13338, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.value(metadata i32 %1, metadata !13339, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.value(metadata i32 %2, metadata !13340, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.value(metadata i32 %3, metadata !13341, metadata !DIExpression()), !dbg !13342
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13343
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13344
  %6 = trunc i32 %3 to i8, !dbg !13345
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13346
  store i8 %6, i8* %7, align 4, !dbg !13347
  %8 = trunc i32 %2 to i8, !dbg !13348
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13349
  store i8 %8, i8* %9, align 1, !dbg !13350
  %10 = trunc i32 %1 to i8, !dbg !13351
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13352
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13352
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13352
  store i8 %10, i8* %13, align 2, !dbg !13353
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13354
  store i8 0, i8* %14, align 1, !dbg !13355
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #23, !dbg !13356
  ret void, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #3 !dbg !13358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13362, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13363, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 %1, metadata !13364, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 0, metadata !13369, metadata !DIExpression()), !dbg !13370
  %3 = add i32 %1, 7, !dbg !13371
  %4 = and i32 %3, -8, !dbg !13371
  call void @llvm.dbg.value(metadata i32 %4, metadata !13365, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i8* undef, metadata !13368, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 %4, metadata !13366, metadata !DIExpression()), !dbg !13370
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !13373
  call void @llvm.dbg.value(metadata i8* %5, metadata !13367, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 0, metadata !13369, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i8* %5, metadata !13367, metadata !DIExpression()), !dbg !13370
  ret i8* %5, !dbg !13374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13375 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13380, metadata !DIExpression()), !dbg !13381
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13382
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #23, !dbg !13383
  ret void, !dbg !13384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13385 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13387, metadata !DIExpression()), !dbg !13388
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13389
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #23, !dbg !13390
  ret void, !dbg !13391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13392 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13396, metadata !DIExpression()), !dbg !13397
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13398
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13399
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13400
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13401
  ret void, !dbg !13402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13403 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13408, metadata !DIExpression()), !dbg !13409
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13410
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13411
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13412
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13413
  ret void, !dbg !13414
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13415 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13432, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13423, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13424, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i32 %2, metadata !13425, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13426, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i8* %4, metadata !13427, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i8* %5, metadata !13428, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i8* %6, metadata !13429, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i32 %7, metadata !13430, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i32 %8, metadata !13431, metadata !DIExpression()), !dbg !13433
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #23, !dbg !13434
  %13 = icmp eq i64 %11, -1, !dbg !13435
  br i1 %13, label %15, label %14, !dbg !13437

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #23, !dbg !13438
  br label %15, !dbg !13440

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13442 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13447, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13446, metadata !DIExpression()), !dbg !13448
  %4 = icmp eq i64 %3, 0, !dbg !13449
  br i1 %4, label %5, label %6, !dbg !13451

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #23, !dbg !13452
  br label %7, !dbg !13454

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #23, !dbg !13455
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13458 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13462, metadata !DIExpression()), !dbg !13463
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !13464, !srcloc !13466
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #23, !dbg !13467
  ret void, !dbg !13468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13469 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13472, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13471, metadata !DIExpression()), !dbg !13473
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13474
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13475
  ret void, !dbg !13476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13477 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13479, metadata !DIExpression()), !dbg !13499
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13500

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13501
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13497, metadata !DIExpression()), !dbg !13502
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13503

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13479, metadata !DIExpression()), !dbg !13499
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13504
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13504
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13507
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13507
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13508
  %9 = load i32, i32* %8, align 4, !dbg !13508
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13509
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13509
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13510
  %13 = load i8*, i8** %12, align 4, !dbg !13510
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13511
  %15 = load i8*, i8** %14, align 4, !dbg !13511
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13512
  %17 = load i8*, i8** %16, align 4, !dbg !13512
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13513
  %19 = load i32, i32* %18, align 4, !dbg !13513
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13514
  %21 = load i32, i32* %20, align 4, !dbg !13514
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #23, !dbg !13515
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13516
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13517
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13518
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13518
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13519
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13479, metadata !DIExpression()), !dbg !13499
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13520
  br i1 %27, label %2, label %1, !dbg !13500, !llvm.loop !13522

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !13501
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13497, metadata !DIExpression()), !dbg !13502
  br label %29, !dbg !13503

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !13524
  ret void, !dbg !13525

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13497, metadata !DIExpression()), !dbg !13502
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13526
  %33 = load i32, i32* %32, align 4, !dbg !13526
  %34 = icmp eq i32 %33, -1, !dbg !13530
  br i1 %34, label %43, label %35, !dbg !13531

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13532
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13532
  %38 = icmp sgt i32 %33, 0, !dbg !13534
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13534
  %40 = zext i32 %39 to i64, !dbg !13534
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #23, !dbg !13534
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13535
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #23, !dbg !13535
  br label %43, !dbg !13536

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13537
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13497, metadata !DIExpression()), !dbg !13502
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13538
  br i1 %45, label %30, label %29, !dbg !13503, !llvm.loop !13540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !13542 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i64 %0, metadata !13549, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i32 1000, metadata !13554, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i32 10000, metadata !13555, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 1, metadata !13556, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 0, metadata !13557, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 1, metadata !13558, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 0, metadata !13559, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 1, metadata !13560, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i8 0, metadata !13561, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i64 0, metadata !13562, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i64 0, metadata !13562, metadata !DIExpression()), !dbg !13566
  %2 = mul i64 %0, 10, !dbg !13568
  ret i64 %2, !dbg !13574
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13575 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13577, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i8* %1, metadata !13578, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i8* %2, metadata !13579, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i8* %3, metadata !13580, metadata !DIExpression()), !dbg !13581
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13582
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13583
  %7 = load i8, i8* %6, align 4, !dbg !13584
  %8 = or i8 %7, 4, !dbg !13584
  store i8 %8, i8* %6, align 4, !dbg !13584
  tail call void @z_thread_essential_clear() #23, !dbg !13585
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !13586
  unreachable, !dbg !13586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13591, metadata !DIExpression()), !dbg !13592
  ret i32 -134, !dbg !13593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13598, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.value(metadata i32 %1, metadata !13599, metadata !DIExpression()), !dbg !13600
  ret i32 -134, !dbg !13601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !13602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13609, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13610, metadata !DIExpression()), !dbg !13611
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13612
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13614
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13611
  ret i32 %6, !dbg !13615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !13616 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13620, metadata !DIExpression()), !dbg !13621
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13622
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13621
  ret i32 %3, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13625 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13627
  ret void, !dbg !13628
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13631, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i8* %1, metadata !13632, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i8* %2, metadata !13633, metadata !DIExpression()), !dbg !13634
  br label %4, !dbg !13635

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13636, !srcloc !13643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13639, metadata !DIExpression()) #22, !dbg !13644
  call void @llvm.dbg.value(metadata i32 undef, metadata !13640, metadata !DIExpression()) #22, !dbg !13644
  tail call fastcc void @k_cpu_idle() #23, !dbg !13645
  br label %4, !dbg !13635, !llvm.loop !13646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13648 {
  tail call void @arch_cpu_idle() #24, !dbg !13649
  ret void, !dbg !13650
}

; Function Attrs: optsize
declare !dbg !13651 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13656, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13657, metadata !DIExpression()), !dbg !13660
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13661
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13661
  %5 = load i8, i8* %4, align 2, !dbg !13661
  call void @llvm.dbg.value(metadata i8 %5, metadata !13658, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13660
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13662
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13662
  %8 = load i8, i8* %7, align 2, !dbg !13662
  call void @llvm.dbg.value(metadata i8 %8, metadata !13659, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13660
  %9 = icmp eq i8 %8, %5, !dbg !13663
  %10 = sext i8 %5 to i32, !dbg !13665
  %11 = sext i8 %8 to i32, !dbg !13665
  %12 = sub nsw i32 %11, %10, !dbg !13665
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13665
  ret i32 %13, !dbg !13666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13671, metadata !DIExpression()), !dbg !13672
  %2 = tail call fastcc i32 @slice_time() #23, !dbg !13673
  %3 = icmp eq i32 %2, 0, !dbg !13675
  br i1 %3, label %8, label %4, !dbg !13676

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13677
  %6 = add i32 %5, %2, !dbg !13679
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13680
  %7 = tail call fastcc i32 @slice_time() #23, !dbg !13681
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13682
  br label %8, !dbg !13683

8:                                                ; preds = %4, %1
  ret void, !dbg !13684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13689, metadata !DIExpression()), !dbg !13691
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13692
  call void @llvm.dbg.value(metadata i32 %1, metadata !13690, metadata !DIExpression()), !dbg !13691
  ret i32 %1, !dbg !13693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13698, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.value(metadata i32 %1, metadata !13699, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.value(metadata i32 0, metadata !13700, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !13716
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13718, !srcloc !13724
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13718
  call void @llvm.dbg.value(metadata i32 %4, metadata !13721, metadata !DIExpression()) #22, !dbg !13725
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !13725
  call void @llvm.dbg.value(metadata i32 %4, metadata !13715, metadata !DIExpression()) #22, !dbg !13716
  call void @llvm.dbg.value(metadata i32 %4, metadata !13706, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13708
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13726
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #23, !dbg !13729
  %6 = icmp sgt i32 %0, 0, !dbg !13730
  %7 = icmp sgt i32 %5, 2, !dbg !13732
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13732
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13732
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13733
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13734
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #23, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %4, metadata !13736, metadata !DIExpression()) #22, !dbg !13742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !13742
  call void @llvm.dbg.value(metadata i32 %4, metadata !13744, metadata !DIExpression()) #22, !dbg !13747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !13749, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !13700, metadata !DIExpression()), !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13708
  ret void, !dbg !13751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !13752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13756, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i32 %0, metadata !13758, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13773
  call void @llvm.dbg.value(metadata i32 1000, metadata !13761, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i32 10000, metadata !13762, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i8 1, metadata !13763, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i1 true, metadata !13764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13773
  call void @llvm.dbg.value(metadata i1 true, metadata !13765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13773
  call void @llvm.dbg.value(metadata i8 0, metadata !13766, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i1 true, metadata !13767, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13773
  call void @llvm.dbg.value(metadata i1 false, metadata !13768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13773
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !13773
  %2 = mul i32 %0, 10, !dbg !13775
  ret i32 %2, !dbg !13781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13784, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !13787
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !13789, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %3, metadata !13785, metadata !DIExpression()), !dbg !13786
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13792
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13794
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13795
  br i1 %6, label %7, label %8, !dbg !13796

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #23, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !13801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !13803, !srcloc !13750
  br label %24, !dbg !13804

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13805
  %9 = tail call fastcc i32 @slice_time() #23, !dbg !13806
  %10 = icmp eq i32 %9, 0, !dbg !13806
  br i1 %10, label %21, label %11, !dbg !13808

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #23, !dbg !13809
  br i1 %12, label %13, label %21, !dbg !13810

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13811
  %15 = icmp sgt i32 %14, %0, !dbg !13814
  br i1 %15, label %19, label %16, !dbg !13815

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13816
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #23, !dbg !13816
  call void @llvm.dbg.value(metadata i32 %18, metadata !13785, metadata !DIExpression()), !dbg !13786
  br label %22, !dbg !13818

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13819
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13819
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13821
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13786
  call void @llvm.dbg.value(metadata i32 %23, metadata !13785, metadata !DIExpression()), !dbg !13786
  call void @llvm.dbg.value(metadata i32 %23, metadata !13736, metadata !DIExpression()) #22, !dbg !13823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !13823
  call void @llvm.dbg.value(metadata i32 %23, metadata !13744, metadata !DIExpression()) #22, !dbg !13825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #22, !dbg !13827, !srcloc !13750
  br label %24, !dbg !13828

24:                                               ; preds = %22, %7
  ret void, !dbg !13828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13833, metadata !DIExpression()), !dbg !13835
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #23, !dbg !13836
  %3 = icmp eq i32 %2, 0, !dbg !13836
  br i1 %3, label %16, label %4, !dbg !13837

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #23, !dbg !13838
  br i1 %5, label %16, label %6, !dbg !13839

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13840
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13840
  %9 = load i8, i8* %8, align 2, !dbg !13840
  %10 = sext i8 %9 to i32, !dbg !13841
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13842
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #23, !dbg !13843
  br i1 %12, label %16, label %13, !dbg !13844

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #23, !dbg !13845
  %15 = xor i1 %14, true, !dbg !13846
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13835
  call void @llvm.dbg.value(metadata i1 %17, metadata !13834, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13835
  ret i1 %17, !dbg !13847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13848 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13852, metadata !DIExpression()), !dbg !13854
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13855
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13853, metadata !DIExpression()), !dbg !13854
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #23, !dbg !13856
  br i1 %3, label %5, label %4, !dbg !13858

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #23, !dbg !13859
  br label %5, !dbg !13861

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13852, metadata !DIExpression()), !dbg !13854
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #23, !dbg !13862
  ret i32 %6, !dbg !13863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13866, metadata !DIExpression()), !dbg !13868
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13869
  %3 = load i8, i8* %2, align 1, !dbg !13869
  call void @llvm.dbg.value(metadata i8 %3, metadata !13867, metadata !DIExpression()), !dbg !13868
  %4 = and i8 %3, 31, !dbg !13870
  %5 = icmp ne i8 %4, 0, !dbg !13871
  ret i1 %5, !dbg !13872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13875, metadata !DIExpression()), !dbg !13876
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #23, !dbg !13877
  br i1 %2, label %3, label %7, !dbg !13879

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13880, metadata !DIExpression()) #22, !dbg !13883
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13886
  %5 = load i8, i8* %4, align 1, !dbg !13887
  %6 = and i8 %5, 127, !dbg !13887
  store i8 %6, i8* %4, align 1, !dbg !13887
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #22, !dbg !13891
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13895
  br label %7, !dbg !13896

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()) #22, !dbg !13900
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13902
  %9 = load i8, i8* %8, align 1, !dbg !13903
  %10 = or i8 %9, -128, !dbg !13903
  store i8 %10, i8* %8, align 1, !dbg !13903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13904, metadata !DIExpression()) #22, !dbg !13907
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13911, metadata !DIExpression()) #22, !dbg !13919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()) #22, !dbg !13919
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13921
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13918, metadata !DIExpression()) #22, !dbg !13919
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13923
  br i1 %12, label %23, label %13, !dbg !13921

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13918, metadata !DIExpression()) #22, !dbg !13919
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13925
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13918, metadata !DIExpression()) #22, !dbg !13919
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !13926
  %17 = icmp sgt i32 %16, 0, !dbg !13929
  br i1 %17, label %18, label %20, !dbg !13930

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13931
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !13933
  br label %25, !dbg !13934

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !13923
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13918, metadata !DIExpression()) #22, !dbg !13919
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13923
  br i1 %22, label %23, label %13, !dbg !13921, !llvm.loop !13935

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13937
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !13938
  br label %25, !dbg !13939

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13940
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13941
  %28 = zext i1 %27 to i32, !dbg !13941
  tail call fastcc void @update_cache(i32 noundef %28) #23, !dbg !13942
  ret void, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13946, metadata !DIExpression()), !dbg !13947
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #23, !dbg !13948
  ret i1 %2, !dbg !13949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !13950 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13952, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13953, metadata !DIExpression()), !dbg !13954
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13955
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #23, !dbg !13956
  ret void, !dbg !13957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13958 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13962, metadata !DIExpression()), !dbg !13963
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #23, !dbg !13964
  br i1 %2, label %6, label %3, !dbg !13964

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13965
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13965
  br label %6, !dbg !13964

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13964
  ret %struct._dnode* %7, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13971, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13972, metadata !DIExpression()), !dbg !13975
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13976
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13976
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13973, metadata !DIExpression()), !dbg !13975
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13977
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13978
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13979
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13980
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13981
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13982
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13983
  ret void, !dbg !13984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !13985 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13989, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13990, metadata !DIExpression()), !dbg !13991
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13992
  br i1 %3, label %6, label %4, !dbg !13993

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #23, !dbg !13994
  br label %6, !dbg !13993

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13993
  ret %struct._dnode* %7, !dbg !13995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !13996 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14000, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14001, metadata !DIExpression()), !dbg !14003
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14004
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14004
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14002, metadata !DIExpression()), !dbg !14003
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14005
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14006
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14007
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14008
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14009
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14010
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14011
  ret void, !dbg !14012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14015, metadata !DIExpression()), !dbg !14017
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14018
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14025, metadata !DIExpression()) #22, !dbg !14027
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14028
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14029
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14016, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14030, metadata !DIExpression()) #22, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %0, metadata !14035, metadata !DIExpression()) #22, !dbg !14036
  %6 = icmp eq i32 %0, 0, !dbg !14039
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14041
  br i1 %6, label %8, label %15, !dbg !14042

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !14043
  br i1 %9, label %15, label %10, !dbg !14045

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14046
  br i1 %11, label %15, label %12, !dbg !14048

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !14049
  %14 = icmp eq i32 %13, 0, !dbg !14049
  br i1 %14, label %18, label %15, !dbg !14051

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14052
  br i1 %16, label %18, label %17, !dbg !14055

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #23, !dbg !14056
  br label %18, !dbg !14058

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14041
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14041
  ret void, !dbg !14059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14060 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14064, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14065, metadata !DIExpression()), !dbg !14067
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #23, !dbg !14068
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14066, metadata !DIExpression()), !dbg !14067
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14065, metadata !DIExpression()), !dbg !14067
  ret %struct.k_thread* %3, !dbg !14069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14072, metadata !DIExpression()), !dbg !14073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14074
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #23, !dbg !14075
  %4 = xor i1 %3, true, !dbg !14076
  ret i1 %4, !dbg !14077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14080, metadata !DIExpression()), !dbg !14081
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14082
  %3 = load i16, i16* %2, align 2, !dbg !14082
  %4 = icmp ult i16 %3, 128, !dbg !14083
  %5 = zext i1 %4 to i32, !dbg !14083
  ret i32 %5, !dbg !14084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14091, metadata !DIExpression()), !dbg !14092
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14093
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #23, !dbg !14094
  %4 = xor i1 %3, true, !dbg !14095
  ret i1 %4, !dbg !14096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14103, metadata !DIExpression()), !dbg !14104
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14105
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14105
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14106
  ret i1 %4, !dbg !14107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14108 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14111, metadata !DIExpression()), !dbg !14112
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14113
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14113
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14114
  br i1 %5, label %9, label %6, !dbg !14115

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14116
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14116
  br label %9, !dbg !14115

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14115
  ret %struct._dnode* %10, !dbg !14117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14118 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14124
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14124
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14125
  ret i1 %4, !dbg !14126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14127 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14131, metadata !DIExpression()), !dbg !14134
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14135
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14135
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14132, metadata !DIExpression()), !dbg !14134
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14136
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14136
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14133, metadata !DIExpression()), !dbg !14134
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14137
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14138
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14139
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14140
  tail call fastcc void @sys_dnode_init.224(%struct._dnode* noundef %0) #23, !dbg !14141
  ret void, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.224(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14143 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14147
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14148
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14149
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14150
  ret void, !dbg !14151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14156, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 128, metadata !14157, metadata !DIExpression()), !dbg !14158
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14159
  %3 = load i8, i8* %2, align 1, !dbg !14159
  %4 = icmp slt i8 %3, 0, !dbg !14160
  ret i1 %4, !dbg !14161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14166, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 %1, metadata !14167, metadata !DIExpression()), !dbg !14168
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #23, !dbg !14169
  ret i1 %3, !dbg !14170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()), !dbg !14174
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14175
  ret i1 %2, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14179, metadata !DIExpression()), !dbg !14181
  call void @llvm.dbg.value(metadata i32 %1, metadata !14180, metadata !DIExpression()), !dbg !14181
  %3 = icmp slt i32 %0, %1, !dbg !14182
  ret i1 %3, !dbg !14183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14186, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 0, metadata !14187, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14192
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14194, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14194
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14196
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14196
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %3, metadata !14189, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14191
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #23, !dbg !14197
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14202
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14206, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14187, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14191
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14211
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #23, !dbg !14212
  br i1 %2, label %24, label %3, !dbg !14214

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #23, !dbg !14215
  br i1 %4, label %5, label %24, !dbg !14216

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()) #22, !dbg !14217
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14220
  %7 = load i8, i8* %6, align 1, !dbg !14221
  %8 = or i8 %7, -128, !dbg !14221
  store i8 %8, i8* %6, align 1, !dbg !14221
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13904, metadata !DIExpression()) #22, !dbg !14222
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13911, metadata !DIExpression()) #22, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()) #22, !dbg !14224
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14226
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13918, metadata !DIExpression()) #22, !dbg !14224
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14227
  br i1 %10, label %21, label %11, !dbg !14226

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13918, metadata !DIExpression()) #22, !dbg !14224
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14228
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13918, metadata !DIExpression()) #22, !dbg !14224
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !14229
  %15 = icmp sgt i32 %14, 0, !dbg !14230
  br i1 %15, label %16, label %18, !dbg !14231

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14232
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !14233
  br label %23, !dbg !14234

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !14227
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13918, metadata !DIExpression()) #22, !dbg !14224
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14227
  br i1 %20, label %21, label %11, !dbg !14226, !llvm.loop !14235

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14237
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !14238
  br label %23, !dbg !14239

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #23, !dbg !14240
  br label %24, !dbg !14241

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()), !dbg !14246
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #23, !dbg !14247
  br i1 %2, label %6, label %3, !dbg !14248

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #23, !dbg !14249
  %5 = xor i1 %4, true, !dbg !14248
  br label %6, !dbg !14248

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14253, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.value(metadata i32 0, metadata !14254, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14259
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14261, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14261
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14263
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14263
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14259
  call void @llvm.dbg.value(metadata i32 %3, metadata !14256, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()), !dbg !14258
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #23, !dbg !14264
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14271, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14254, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()), !dbg !14258
  ret void, !dbg !14272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14275, metadata !DIExpression()), !dbg !14277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14278
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14280, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14280
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14282
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14282
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %3, metadata !14276, metadata !DIExpression()), !dbg !14277
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #23, !dbg !14283
  br i1 %4, label %5, label %6, !dbg !14285

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14286
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14289
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14291, !srcloc !13750
  br label %8, !dbg !14292

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.229(%struct.k_thread* noundef %0) #23, !dbg !14293
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #23, !dbg !14294
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14295
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #23, !dbg !14295
  br label %8, !dbg !14296

8:                                                ; preds = %6, %5
  ret void, !dbg !14296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14299, metadata !DIExpression()), !dbg !14300
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14301
  %3 = load i8, i8* %2, align 1, !dbg !14301
  %4 = and i8 %3, 4, !dbg !14302
  %5 = icmp eq i8 %4, 0, !dbg !14303
  ret i1 %5, !dbg !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.229(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14307, metadata !DIExpression()), !dbg !14308
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14309
  %3 = load i8, i8* %2, align 1, !dbg !14310
  %4 = and i8 %3, -5, !dbg !14310
  store i8 %4, i8* %2, align 1, !dbg !14310
  ret void, !dbg !14311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14312 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14315, metadata !DIExpression()), !dbg !14316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14314, metadata !DIExpression()), !dbg !14316
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #23, !dbg !14317
  br i1 %4, label %5, label %9, !dbg !14319

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #23, !dbg !14320
  br i1 %6, label %7, label %9, !dbg !14321

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14322, metadata !DIExpression()) #22, !dbg !14328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !14328
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14331
  br label %10, !dbg !14332

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14333
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14338, !srcloc !13750
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata i32 %0, metadata !14346, metadata !DIExpression()), !dbg !14351
  %2 = icmp eq i32 %0, 0, !dbg !14353
  br i1 %2, label %3, label %6, !dbg !14354

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !14355, !srcloc !14362
  call void @llvm.dbg.value(metadata i32 %4, metadata !14358, metadata !DIExpression()) #22, !dbg !14363
  %5 = icmp eq i32 %4, 0, !dbg !14364
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14345
  ret i1 %7, !dbg !14365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14366 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14369
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14368, metadata !DIExpression()), !dbg !14370
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14371
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14372
  ret i1 %3, !dbg !14373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14376, metadata !DIExpression()), !dbg !14378
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %2, metadata !14377, metadata !DIExpression()), !dbg !14378
  ret i32 %2, !dbg !14380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14387
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #23, !dbg !14388
  call void @llvm.dbg.value(metadata i32 0, metadata !14384, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14390
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14392, !srcloc !13724
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14392
  call void @llvm.dbg.value(metadata i32 %4, metadata !13721, metadata !DIExpression()) #22, !dbg !14394
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14394
  call void @llvm.dbg.value(metadata i32 %4, metadata !13715, metadata !DIExpression()) #22, !dbg !14390
  call void @llvm.dbg.value(metadata i32 %4, metadata !14386, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()), !dbg !14389
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #23, !dbg !14395
  br i1 %5, label %6, label %10, !dbg !14399

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13880, metadata !DIExpression()) #22, !dbg !14400
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14403
  %8 = load i8, i8* %7, align 1, !dbg !14404
  %9 = and i8 %8, 127, !dbg !14404
  store i8 %9, i8* %7, align 1, !dbg !14404
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #22, !dbg !14405
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14407
  br label %10, !dbg !14408

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #23, !dbg !14409
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14410
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14411
  %13 = zext i1 %12 to i32, !dbg !14411
  tail call fastcc void @update_cache(i32 noundef %13) #23, !dbg !14412
  call void @llvm.dbg.value(metadata i32 %4, metadata !13736, metadata !DIExpression()) #22, !dbg !14413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14413
  call void @llvm.dbg.value(metadata i32 %4, metadata !13744, metadata !DIExpression()) #22, !dbg !14415
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !14417, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14384, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()), !dbg !14389
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14418
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14420
  br i1 %15, label %16, label %17, !dbg !14421

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #23, !dbg !14422
  br label %17, !dbg !14424

17:                                               ; preds = %16, %10
  ret void, !dbg !14425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14428, metadata !DIExpression()), !dbg !14429
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14430
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14431
  ret i32 %3, !dbg !14432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14437
  %3 = load i8, i8* %2, align 1, !dbg !14438
  %4 = or i8 %3, 16, !dbg !14438
  store i8 %4, i8* %2, align 1, !dbg !14438
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14440 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14441, !srcloc !13724
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14441
  call void @llvm.dbg.value(metadata i32 %2, metadata !13721, metadata !DIExpression()) #22, !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14443
  tail call void @z_reschedule_irqlock(i32 noundef %2) #23, !dbg !14444
  ret void, !dbg !14445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14448, metadata !DIExpression()), !dbg !14449
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #23, !dbg !14450
  br i1 %2, label %3, label %5, !dbg !14452

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #23, !dbg !14453
  br label %6, !dbg !14455

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13744, metadata !DIExpression()) #22, !dbg !14456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #22, !dbg !14459, !srcloc !13750
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14463, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14466
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14468, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14468
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14470
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14466
  call void @llvm.dbg.value(metadata i32 %3, metadata !14464, metadata !DIExpression()), !dbg !14465
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #23, !dbg !14471
  br i1 %4, label %6, label %5, !dbg !14473

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14477
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14479, !srcloc !13750
  br label %8, !dbg !14480

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #23, !dbg !14481
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #23, !dbg !14482
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14483
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #23, !dbg !14483
  br label %8, !dbg !14484

8:                                                ; preds = %6, %5
  ret void, !dbg !14484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14487, metadata !DIExpression()), !dbg !14488
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14489
  %3 = load i8, i8* %2, align 1, !dbg !14489
  %4 = and i8 %3, 16, !dbg !14490
  %5 = icmp ne i8 %4, 0, !dbg !14491
  ret i1 %5, !dbg !14492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14495, metadata !DIExpression()), !dbg !14496
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14497
  %3 = load i8, i8* %2, align 1, !dbg !14498
  %4 = and i8 %3, -17, !dbg !14498
  store i8 %4, i8* %2, align 1, !dbg !14498
  ret void, !dbg !14499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14500 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14510, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14508, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14509, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 0, metadata !14511, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14516
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14518, !srcloc !13724
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14518
  call void @llvm.dbg.value(metadata i32 %5, metadata !13721, metadata !DIExpression()) #22, !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14520
  call void @llvm.dbg.value(metadata i32 %5, metadata !13715, metadata !DIExpression()) #22, !dbg !14516
  call void @llvm.dbg.value(metadata i32 %5, metadata !14513, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()), !dbg !14515
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #23, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %5, metadata !13736, metadata !DIExpression()) #22, !dbg !14524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14524
  call void @llvm.dbg.value(metadata i32 %5, metadata !13744, metadata !DIExpression()) #22, !dbg !14526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #22, !dbg !14528, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14511, metadata !DIExpression()), !dbg !14515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14511, metadata !DIExpression()), !dbg !14515
  ret void, !dbg !14529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14530 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14534, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14532, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14533, metadata !DIExpression()), !dbg !14535
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #23, !dbg !14536
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #23, !dbg !14537
  ret void, !dbg !14538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14543, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14544, metadata !DIExpression()), !dbg !14545
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #23, !dbg !14546
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #23, !dbg !14547
  %3 = icmp eq %union.anon* %1, null, !dbg !14548
  br i1 %3, label %21, label %4, !dbg !14550

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14551
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14553
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14554
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13911, metadata !DIExpression()) #22, !dbg !14555
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()) #22, !dbg !14555
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14557
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13918, metadata !DIExpression()) #22, !dbg !14555
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14558
  br i1 %8, label %19, label %9, !dbg !14557

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13918, metadata !DIExpression()) #22, !dbg !14555
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14559
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13918, metadata !DIExpression()) #22, !dbg !14555
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !14560
  %13 = icmp sgt i32 %12, 0, !dbg !14561
  br i1 %13, label %14, label %16, !dbg !14562

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14563
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !14564
  br label %21, !dbg !14565

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !14558
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13918, metadata !DIExpression()) #22, !dbg !14555
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14558
  br i1 %18, label %19, label %9, !dbg !14557, !llvm.loop !14566

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14568
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !14569
  br label %21, !dbg !14570

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14572 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14577, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14576, metadata !DIExpression()), !dbg !14578
  %4 = icmp eq i64 %3, -1, !dbg !14579
  br i1 %4, label %6, label %5, !dbg !14581

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %0, [1 x i64] %1) #23, !dbg !14582
  br label %6, !dbg !14584

6:                                                ; preds = %5, %2
  ret void, !dbg !14585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14586 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14589, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14588, metadata !DIExpression()), !dbg !14590
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14591
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14592
  ret void, !dbg !14593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14596, metadata !DIExpression()), !dbg !14604
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14605
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14597, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.value(metadata i32 0, metadata !14598, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14607
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14609, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14600, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14598, metadata !DIExpression()), !dbg !14606
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14612
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14613
  %7 = load i8, i8* %6, align 1, !dbg !14613
  %8 = and i8 %7, 40, !dbg !14614
  %9 = icmp eq i8 %8, 0, !dbg !14614
  call void @llvm.dbg.value(metadata i1 %9, metadata !14601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14615
  br i1 %9, label %10, label %17, !dbg !14616

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14617
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !14617
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !14617
  %14 = icmp eq %union.anon* %13, null, !dbg !14621
  br i1 %14, label %16, label %15, !dbg !14622

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #23, !dbg !14623
  br label %16, !dbg !14625

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.229(%struct.k_thread* noundef nonnull %3) #23, !dbg !14626
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #23, !dbg !14627
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #23, !dbg !14628
  br label %17, !dbg !14629

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %18, metadata !13721, metadata !DIExpression()) #22, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %18, metadata !13715, metadata !DIExpression()) #22, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %18, metadata !14600, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !14632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #22, !dbg !14634, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14598, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14598, metadata !DIExpression()), !dbg !14606
  ret void, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14636 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14638, metadata !DIExpression()), !dbg !14639
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #23, !dbg !14640
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #23, !dbg !14641
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14642
  store %union.anon* null, %union.anon** %2, align 8, !dbg !14643
  ret void, !dbg !14644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14645 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14647, metadata !DIExpression()), !dbg !14648
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14649
  %3 = load i8, i8* %2, align 1, !dbg !14650
  %4 = and i8 %3, -3, !dbg !14650
  store i8 %4, i8* %2, align 1, !dbg !14650
  ret void, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14654, metadata !DIExpression()), !dbg !14655
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #23, !dbg !14656
  br i1 %2, label %3, label %7, !dbg !14658

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13880, metadata !DIExpression()) #22, !dbg !14659
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14662
  %5 = load i8, i8* %4, align 1, !dbg !14663
  %6 = and i8 %5, 127, !dbg !14663
  store i8 %6, i8* %4, align 1, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #22, !dbg !14664
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14666
  br label %7, !dbg !14667

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14668
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14669
  %10 = zext i1 %9 to i32, !dbg !14669
  tail call fastcc void @update_cache(i32 noundef %10) #23, !dbg !14670
  ret void, !dbg !14671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14672 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14674, metadata !DIExpression()), !dbg !14675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14676
  %3 = load i8, i8* %2, align 1, !dbg !14677
  %4 = or i8 %3, 2, !dbg !14677
  store i8 %4, i8* %2, align 1, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #20 !dbg !14679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i32 0, metadata !14682, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14687
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14689, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14687
  call void @llvm.dbg.value(metadata i32 %3, metadata !14684, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14682, metadata !DIExpression()), !dbg !14686
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #23, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14695
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14699, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14682, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14682, metadata !DIExpression()), !dbg !14686
  ret void, !dbg !14700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14701 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14707, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 %0, metadata !14705, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14706, metadata !DIExpression()), !dbg !14712
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14713
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #23, !dbg !14714
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14715
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14716
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #23, !dbg !14717
  call void @llvm.dbg.value(metadata i32 %6, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 0, metadata !14709, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14719
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14721, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14723
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14723
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14719
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14718
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14724
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14728
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14729
  br i1 %10, label %11, label %12, !dbg !14730

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14731
  br label %12, !dbg !14733

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14721
  call void @llvm.dbg.value(metadata i32 %13, metadata !13721, metadata !DIExpression()) #22, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %13, metadata !13715, metadata !DIExpression()) #22, !dbg !14719
  call void @llvm.dbg.value(metadata i32 %13, metadata !14711, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !14734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14734
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !14736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #22, !dbg !14738, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14709, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14718
  ret i32 %6, !dbg !14739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14740 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata i64 undef, metadata !14747, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14744, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14746, metadata !DIExpression()), !dbg !14748
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14749
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14751
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14753, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14755
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14755
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14751
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14756
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #23, !dbg !14757
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14322, metadata !DIExpression()) #22, !dbg !14758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !14758
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !14760
  ret i32 %9, !dbg !14761
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14762 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14766, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 0, metadata !14768, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14773
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14775, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()), !dbg !14772
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #23, !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14767, metadata !DIExpression()), !dbg !14771
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14781
  br i1 %5, label %7, label %6, !dbg !14783

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #23, !dbg !14784
  br label %7, !dbg !14786

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %8, metadata !13721, metadata !DIExpression()) #22, !dbg !14777
  call void @llvm.dbg.value(metadata i32 %8, metadata !13715, metadata !DIExpression()) #22, !dbg !14773
  call void @llvm.dbg.value(metadata i32 %8, metadata !14770, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !14787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !14789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !14791, !srcloc !13750
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()), !dbg !14772
  ret %struct.k_thread* %4, !dbg !14792
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14793 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14795, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 0, metadata !14797, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14802
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14804, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14806
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14806
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14802
  call void @llvm.dbg.value(metadata i32 undef, metadata !14799, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14797, metadata !DIExpression()), !dbg !14801
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #23, !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14796, metadata !DIExpression()), !dbg !14800
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14810
  br i1 %5, label %8, label %6, !dbg !14812

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #23, !dbg !14813
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #23, !dbg !14815
  br label %8, !dbg !14816

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %9, metadata !13721, metadata !DIExpression()) #22, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %9, metadata !13715, metadata !DIExpression()) #22, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %9, metadata !14799, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !14817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14817
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !14819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !14821, !srcloc !13750
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14797, metadata !DIExpression()), !dbg !14801
  ret %struct.k_thread* %4, !dbg !14822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14825, metadata !DIExpression()), !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #22, !dbg !14827
  call void @llvm.dbg.value(metadata i32 0, metadata !14682, metadata !DIExpression()) #22, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14830
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14832, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %3, metadata !14684, metadata !DIExpression()) #22, !dbg !14829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14682, metadata !DIExpression()) #22, !dbg !14829
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14835
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !14836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !14838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !14840, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14682, metadata !DIExpression()) #22, !dbg !14829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14682, metadata !DIExpression()) #22, !dbg !14829
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #23, !dbg !14841
  ret void, !dbg !14842
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14845, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32 %1, metadata !14846, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i8 0, metadata !14847, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32 0, metadata !14848, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14853
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14855, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !14857
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14857
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !14853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.value(metadata i8 poison, metadata !14847, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32 undef, metadata !14848, metadata !DIExpression()), !dbg !14852
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #23, !dbg !14858
  call void @llvm.dbg.value(metadata i1 %6, metadata !14847, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14851
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14861

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13880, metadata !DIExpression()) #22, !dbg !14862
  %11 = load i8, i8* %4, align 1, !dbg !14868
  %12 = and i8 %11, 127, !dbg !14868
  store i8 %12, i8* %4, align 1, !dbg !14868
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #22, !dbg !14869
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14871
  store i8 %9, i8* %8, align 2, !dbg !14872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()) #22, !dbg !14873
  %13 = load i8, i8* %4, align 1, !dbg !14875
  %14 = or i8 %13, -128, !dbg !14875
  store i8 %14, i8* %4, align 1, !dbg !14875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13904, metadata !DIExpression()) #22, !dbg !14876
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13911, metadata !DIExpression()) #22, !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()) #22, !dbg !14878
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14880
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13918, metadata !DIExpression()) #22, !dbg !14878
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14881
  br i1 %16, label %26, label %17, !dbg !14880

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13918, metadata !DIExpression()) #22, !dbg !14878
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14882
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13918, metadata !DIExpression()) #22, !dbg !14878
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !14883
  %21 = icmp sgt i32 %20, 0, !dbg !14884
  br i1 %21, label %22, label %23, !dbg !14885

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !14886
  br label %27, !dbg !14887

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !14881
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13918, metadata !DIExpression()) #22, !dbg !14878
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14881
  br i1 %25, label %26, label %17, !dbg !14880, !llvm.loop !14888

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !14890
  br label %27, !dbg !14891

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #23, !dbg !14892
  br label %29, !dbg !14893

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14894
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %30, metadata !13721, metadata !DIExpression()) #22, !dbg !14857
  call void @llvm.dbg.value(metadata i32 %30, metadata !13715, metadata !DIExpression()) #22, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %30, metadata !14850, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !14896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14896
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !14898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #22, !dbg !14900, !srcloc !13750
  call void @llvm.dbg.value(metadata i8 poison, metadata !14847, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32 undef, metadata !14848, metadata !DIExpression()), !dbg !14852
  ret i1 %6, !dbg !14901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata i32 %1, metadata !14907, metadata !DIExpression()), !dbg !14909
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #23, !dbg !14910
  call void @llvm.dbg.value(metadata i1 %3, metadata !14908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14909
  br i1 %3, label %4, label %12, !dbg !14911

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14913
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14914
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14914
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14914
  %9 = load i8, i8* %8, align 1, !dbg !14914
  %10 = icmp eq i8 %9, 0, !dbg !14915
  br i1 %10, label %11, label %12, !dbg !14916

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #23, !dbg !14917
  br label %12, !dbg !14919

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14921 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14923, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14927
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14929, !srcloc !13724
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %2, metadata !13721, metadata !DIExpression()) #22, !dbg !14931
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14931
  call void @llvm.dbg.value(metadata i32 %2, metadata !13715, metadata !DIExpression()) #22, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %2, metadata !14925, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 undef, metadata !14923, metadata !DIExpression()), !dbg !14926
  tail call fastcc void @z_sched_lock() #23, !dbg !14932
  call void @llvm.dbg.value(metadata i32 %2, metadata !13736, metadata !DIExpression()) #22, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %2, metadata !13744, metadata !DIExpression()) #22, !dbg !14937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !14939, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14923, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 undef, metadata !14923, metadata !DIExpression()), !dbg !14926
  ret void, !dbg !14940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14941 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14942
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14943
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14943
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14943
  %5 = load i8, i8* %4, align 1, !dbg !14944
  %6 = add i8 %5, -1, !dbg !14944
  store i8 %6, i8* %4, align 1, !dbg !14944
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !14945, !srcloc !14947
  ret void, !dbg !14948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14949 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14951, metadata !DIExpression()), !dbg !14954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !14955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !14957, !srcloc !13724
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14957
  call void @llvm.dbg.value(metadata i32 %2, metadata !13721, metadata !DIExpression()) #22, !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !14959
  call void @llvm.dbg.value(metadata i32 %2, metadata !13715, metadata !DIExpression()) #22, !dbg !14955
  call void @llvm.dbg.value(metadata i32 %2, metadata !14953, metadata !DIExpression()), !dbg !14954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14951, metadata !DIExpression()), !dbg !14954
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14960
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14963
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14963
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14963
  %7 = load i8, i8* %6, align 1, !dbg !14964
  %8 = add i8 %7, 1, !dbg !14964
  store i8 %8, i8* %6, align 1, !dbg !14964
  tail call fastcc void @update_cache(i32 noundef 0) #23, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %2, metadata !13736, metadata !DIExpression()) #22, !dbg !14966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %2, metadata !13744, metadata !DIExpression()) #22, !dbg !14968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !14970, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 1, metadata !14951, metadata !DIExpression()), !dbg !14954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14951, metadata !DIExpression()), !dbg !14954
  tail call fastcc void @z_reschedule_unlocked() #23, !dbg !14971
  ret void, !dbg !14972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !14973 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14974
  ret %struct.k_thread* %1, !dbg !14975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14976 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14980, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14981, metadata !DIExpression()), !dbg !14985
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14982, metadata !DIExpression()), !dbg !14985
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14987
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14983, metadata !DIExpression()), !dbg !14985
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #23, !dbg !14988
  call void @llvm.dbg.value(metadata i32 %5, metadata !14984, metadata !DIExpression()), !dbg !14985
  %6 = icmp sgt i32 %5, 0, !dbg !14989
  br i1 %6, label %17, label %7, !dbg !14991

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14992
  br i1 %8, label %17, label %9, !dbg !14994

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14995
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14995
  %12 = load i32, i32* %11, align 8, !dbg !14995
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14997
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14997
  %15 = load i32, i32* %14, align 8, !dbg !14997
  %16 = icmp ult i32 %12, %15, !dbg !14998
  br label %17, !dbg !14999

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15000
  ret i1 %18, !dbg !15001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15002 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15019, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15020, metadata !DIExpression()), !dbg !15034
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15035
  %5 = load i32, i32* %4, align 4, !dbg !15036
  %6 = add nsw i32 %5, 1, !dbg !15036
  store i32 %6, i32* %4, align 4, !dbg !15036
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15037
  store i32 %5, i32* %7, align 8, !dbg !15038
  %8 = load i32, i32* %4, align 4, !dbg !15039
  %9 = icmp eq i32 %8, 0, !dbg !15040
  br i1 %9, label %10, label %32, !dbg !15041

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15042
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #22, !dbg !15042
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15022, metadata !DIExpression()), !dbg !15042
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15042
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15042
  %14 = load i32, i32* %13, align 4, !dbg !15042
  %15 = shl i32 %14, 2, !dbg !15042
  %16 = alloca i8, i32 %15, align 8, !dbg !15042
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15042
  store i8* %16, i8** %17, align 4, !dbg !15042
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15042
  %19 = alloca i8, i32 %14, align 8, !dbg !15042
  store i8* %19, i8** %18, align 4, !dbg !15042
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15042
  store i32 -1, i32* %20, align 4, !dbg !15042
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15031, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15021, metadata !DIExpression()), !dbg !15034
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15045
  br i1 %22, label %23, label %24, !dbg !15042

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #22, !dbg !15045
  br label %32, !dbg !15046

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15021, metadata !DIExpression()), !dbg !15034
  %26 = load i32, i32* %4, align 4, !dbg !15047
  %27 = add nsw i32 %26, 1, !dbg !15047
  store i32 %27, i32* %4, align 4, !dbg !15047
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15049
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15049
  store i32 %26, i32* %29, align 8, !dbg !15050
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15031, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15021, metadata !DIExpression()), !dbg !15034
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15045
  br i1 %31, label %23, label %24, !dbg !15042, !llvm.loop !15051

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15053
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15054
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !15055
  ret void, !dbg !15056
}

; Function Attrs: optsize
declare !dbg !15057 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15062 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15065 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15067, metadata !DIExpression()), !dbg !15069
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15068, metadata !DIExpression()), !dbg !15069
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15070
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15071
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !15072
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15073
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15073
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15075
  br i1 %7, label %8, label %10, !dbg !15076

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15077
  store i32 0, i32* %9, align 4, !dbg !15079
  br label %10, !dbg !15080

10:                                               ; preds = %8, %2
  ret void, !dbg !15081
}

; Function Attrs: optsize
declare !dbg !15082 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15083 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15087, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15088, metadata !DIExpression()), !dbg !15090
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15091
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #23, !dbg !15092
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15089, metadata !DIExpression()), !dbg !15090
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15088, metadata !DIExpression()), !dbg !15090
  ret %struct.k_thread* %4, !dbg !15093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15094 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15100
  ret %struct.rbnode* %2, !dbg !15101
}

; Function Attrs: optsize
declare !dbg !15102 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #21 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15115, metadata !DIExpression()), !dbg !15119
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15120
  %3 = load i32, i32* %2, align 4, !dbg !15120
  %4 = icmp eq i32 %3, 0, !dbg !15122
  br i1 %4, label %10, label %5, !dbg !15123

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15116, metadata !DIExpression()), !dbg !15119
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15124, !range !15125
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15126
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15117, metadata !DIExpression()), !dbg !15119
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #23, !dbg !15127
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15118, metadata !DIExpression()), !dbg !15119
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15116, metadata !DIExpression()), !dbg !15119
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15119
  ret %struct.k_thread* %11, !dbg !15128
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15129 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15133, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 0, metadata !15134, metadata !DIExpression()), !dbg !15136
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #23, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15135, metadata !DIExpression()), !dbg !15136
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15138
  br i1 %3, label %8, label %4, !dbg !15139

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #23, !dbg !15140
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 1, metadata !15134, metadata !DIExpression()), !dbg !15136
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #23, !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15135, metadata !DIExpression()), !dbg !15136
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15138
  br i1 %7, label %8, label %4, !dbg !15139, !llvm.loop !15143

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15136
  ret i32 %9, !dbg !15145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15146 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15150
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #23, !dbg !15151
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15152
  ret %struct.k_thread* %4, !dbg !15153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15154 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15163, metadata !DIExpression()), !dbg !15164
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15165
  tail call fastcc void @sys_dlist_init.237(%struct._dnode* noundef nonnull %2) #23, !dbg !15166
  ret void, !dbg !15167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.237(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15168 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15172, metadata !DIExpression()), !dbg !15173
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15174
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15175
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15176
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15177
  ret void, !dbg !15178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15179 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #23, !dbg !15180
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #23, !dbg !15181
  ret void, !dbg !15182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15188, metadata !DIExpression()), !dbg !15189
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15190
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15190
  %4 = load i8, i8* %3, align 2, !dbg !15190
  %5 = sext i8 %4 to i32, !dbg !15191
  ret i32 %5, !dbg !15192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15197, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 %1, metadata !15198, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15199, metadata !DIExpression()), !dbg !15200
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #23, !dbg !15201
  ret void, !dbg !15202
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15203 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #23, !dbg !15204
  br i1 %1, label %8, label %2, !dbg !15205

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15206
  br i1 %3, label %8, label %4, !dbg !15207

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15208
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #23, !dbg !15209
  %7 = xor i1 %6, true, !dbg !15207
  br label %8, !dbg !15207

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15211 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15212, !range !8384
  %2 = icmp eq i8 %1, 0, !dbg !15212
  ret i1 %2, !dbg !15213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15214 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !15217
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15219, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15216, metadata !DIExpression()), !dbg !15222
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13880, metadata !DIExpression()) #22, !dbg !15226
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15228
  %4 = load i8, i8* %3, align 1, !dbg !15229
  %5 = and i8 %4, 127, !dbg !15229
  store i8 %5, i8* %3, align 1, !dbg !15229
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13888, metadata !DIExpression()) #22, !dbg !15230
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !15232
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13897, metadata !DIExpression()) #22, !dbg !15234
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15236
  %8 = load i8, i8* %7, align 1, !dbg !15237
  %9 = or i8 %8, -128, !dbg !15237
  store i8 %9, i8* %7, align 1, !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13904, metadata !DIExpression()) #22, !dbg !15238
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13911, metadata !DIExpression()) #22, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13917, metadata !DIExpression()) #22, !dbg !15240
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15242
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13918, metadata !DIExpression()) #22, !dbg !15240
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15243
  br i1 %11, label %22, label %12, !dbg !15242

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13918, metadata !DIExpression()) #22, !dbg !15240
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15244
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13918, metadata !DIExpression()) #22, !dbg !15240
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !15245
  %16 = icmp sgt i32 %15, 0, !dbg !15246
  br i1 %16, label %17, label %19, !dbg !15247

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15248
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !15249
  br label %24, !dbg !15250

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !15243
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13918, metadata !DIExpression()) #22, !dbg !15240
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15243
  br i1 %21, label %22, label %12, !dbg !15242, !llvm.loop !15251

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15253
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !15254
  br label %24, !dbg !15255

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %25, metadata !13721, metadata !DIExpression()) #22, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %25, metadata !13715, metadata !DIExpression()) #22, !dbg !15217
  call void @llvm.dbg.value(metadata i32 %25, metadata !15216, metadata !DIExpression()), !dbg !15222
  tail call fastcc void @update_cache(i32 noundef 1) #23, !dbg !15256
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #22, !dbg !15257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !15257
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15261 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15265, metadata !DIExpression()), !dbg !15268
  %3 = icmp eq i64 %2, -1, !dbg !15269
  br i1 %3, label %4, label %6, !dbg !15271

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15272
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #23, !dbg !15274
  br label %11, !dbg !15275

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15266, metadata !DIExpression()), !dbg !15268
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #23, !dbg !15276
  %8 = sext i32 %7 to i64, !dbg !15276
  call void @llvm.dbg.value(metadata i64 %8, metadata !15266, metadata !DIExpression()), !dbg !15268
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #23, !dbg !15277
  %10 = trunc i64 %9 to i32, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %10, metadata !15267, metadata !DIExpression()), !dbg !15268
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15268
  ret i32 %12, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !15285, !srcloc !15287
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #23, !dbg !15288
  ret void, !dbg !15289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15290 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15294, metadata !DIExpression()), !dbg !15298
  %2 = icmp eq i64 %0, 0, !dbg !15299
  br i1 %2, label %3, label %4, !dbg !15301

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #23, !dbg !15302
  br label %29, !dbg !15304

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15296, metadata !DIExpression()), !dbg !15298
  %5 = icmp sgt i64 %0, -3, !dbg !15305
  br i1 %5, label %6, label %10, !dbg !15307

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15308
  %8 = trunc i64 %0 to i32, !dbg !15310
  %9 = add i32 %7, %8, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %9, metadata !15295, metadata !DIExpression()), !dbg !15298
  br label %13, !dbg !15311

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15312
  %12 = sub i32 -2, %11, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %12, metadata !15295, metadata !DIExpression()), !dbg !15298
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15314
  call void @llvm.dbg.value(metadata i32 %14, metadata !15295, metadata !DIExpression()), !dbg !15298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !15315
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15317, !srcloc !13724
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15317
  call void @llvm.dbg.value(metadata i32 %16, metadata !13721, metadata !DIExpression()) #22, !dbg !15319
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !15319
  call void @llvm.dbg.value(metadata i32 %16, metadata !13715, metadata !DIExpression()) #22, !dbg !15315
  call void @llvm.dbg.value(metadata i32 %16, metadata !15297, metadata !DIExpression()), !dbg !15298
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15320
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15321
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #23, !dbg !15322
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15323
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15324
  tail call fastcc void @z_add_thread_timeout.230(%struct.k_thread* noundef %18, [1 x i64] %19) #23, !dbg !15324
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15325
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %16, metadata !14322, metadata !DIExpression()) #22, !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !15327
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !15329
  %22 = zext i32 %14 to i64, !dbg !15330
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15331
  %24 = zext i32 %23 to i64, !dbg !15331
  %25 = sub nsw i64 %22, %24, !dbg !15332
  call void @llvm.dbg.value(metadata i64 %25, metadata !15294, metadata !DIExpression()), !dbg !15298
  %26 = icmp sgt i64 %25, 0, !dbg !15333
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15333
  %28 = trunc i64 %27 to i32, !dbg !15333
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15298
  ret i32 %30, !dbg !15334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15335 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15337, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i64 %0, metadata !13758, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i32 10000, metadata !13761, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i32 1000, metadata !13762, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i8 1, metadata !13763, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i1 false, metadata !13764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15339
  call void @llvm.dbg.value(metadata i1 false, metadata !13765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15339
  call void @llvm.dbg.value(metadata i8 0, metadata !13766, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i1 false, metadata !13767, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15339
  call void @llvm.dbg.value(metadata i1 true, metadata !13768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15339
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i64 %0, metadata !13758, metadata !DIExpression()), !dbg !15339
  %2 = udiv i64 %0, 10, !dbg !15341
  ret i64 %2, !dbg !15345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15346 {
  tail call void asm sideeffect "", "~{memory}"() #22, !dbg !15347, !srcloc !15349
  tail call void @z_impl_k_yield() #23, !dbg !15350
  ret void, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15356, metadata !DIExpression()), !dbg !15358
  %2 = sext i32 %0 to i64, !dbg !15359
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i64 %3, metadata !15357, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15358
  %4 = shl i64 %3, 32, !dbg !15361
  %5 = ashr exact i64 %4, 32, !dbg !15361
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #23, !dbg !15362
  call void @llvm.dbg.value(metadata i32 %6, metadata !15357, metadata !DIExpression()), !dbg !15358
  %7 = sext i32 %6 to i64, !dbg !15363
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #23, !dbg !15364
  %9 = trunc i64 %8 to i32, !dbg !15364
  ret i32 %9, !dbg !15365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15366 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15368, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i64 %0, metadata !13758, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13761, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i32 10000, metadata !13762, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i8 1, metadata !13763, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i1 false, metadata !13764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15370
  call void @llvm.dbg.value(metadata i1 true, metadata !13765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15370
  call void @llvm.dbg.value(metadata i8 0, metadata !13766, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i1 false, metadata !13767, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15370
  call void @llvm.dbg.value(metadata i1 true, metadata !13768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15370
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15370
  %2 = add i64 %0, 99, !dbg !15372
  call void @llvm.dbg.value(metadata i64 %2, metadata !13758, metadata !DIExpression()), !dbg !15370
  %3 = udiv i64 %2, 100, !dbg !15373
  ret i64 %3, !dbg !15374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15375 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15377, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.value(metadata i64 %0, metadata !13758, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i32 10000, metadata !13761, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13762, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i8 1, metadata !13763, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i1 false, metadata !13764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15379
  call void @llvm.dbg.value(metadata i1 false, metadata !13765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15379
  call void @llvm.dbg.value(metadata i8 0, metadata !13766, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i1 true, metadata !13767, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15379
  call void @llvm.dbg.value(metadata i1 false, metadata !13768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15379
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata i64 0, metadata !13769, metadata !DIExpression()), !dbg !15379
  %2 = mul i64 %0, 100, !dbg !15381
  ret i64 %2, !dbg !15383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15386, metadata !DIExpression()), !dbg !15387
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #23, !dbg !15388
  br i1 %2, label %14, label %3, !dbg !15390

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #23, !dbg !15391
  %5 = icmp slt i32 %4, 0, !dbg !15393
  br i1 %5, label %6, label %10, !dbg !15394

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15395
  %8 = load i8, i8* %7, align 1, !dbg !15395
  %9 = icmp eq i8 %8, 16, !dbg !15398
  br i1 %9, label %10, label %14, !dbg !15399

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #23, !dbg !15400
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #23, !dbg !15401
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !15402, !srcloc !14362
  call void @llvm.dbg.value(metadata i32 %11, metadata !14358, metadata !DIExpression()) #22, !dbg !15406
  %12 = icmp eq i32 %11, 0, !dbg !15407
  br i1 %12, label %13, label %14, !dbg !15408

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #23, !dbg !15409
  br label %14, !dbg !15411

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15415, metadata !DIExpression()), !dbg !15416
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15417
  %3 = load i8, i8* %2, align 1, !dbg !15417
  %4 = and i8 %3, 2, !dbg !15418
  %5 = icmp ne i8 %4, 0, !dbg !15419
  ret i1 %5, !dbg !15420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15421 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15425, metadata !DIExpression()), !dbg !15427
  ret %struct.k_thread* %1, !dbg !15428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15429 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !15430, !srcloc !14362
  call void @llvm.dbg.value(metadata i32 %1, metadata !14358, metadata !DIExpression()) #22, !dbg !15433
  %2 = icmp eq i32 %1, 0, !dbg !15434
  br i1 %2, label %3, label %8, !dbg !15435

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15436
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #23, !dbg !15437
  %6 = icmp ne i32 %5, 0, !dbg !15435
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15441, metadata !DIExpression()), !dbg !15443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !15444
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15446, !srcloc !13724
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %3, metadata !13721, metadata !DIExpression()) #22, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %3, metadata !13715, metadata !DIExpression()) #22, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()), !dbg !15443
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15449
  %5 = load i8, i8* %4, align 4, !dbg !15449
  %6 = and i8 %5, 1, !dbg !15451
  %7 = icmp eq i8 %6, 0, !dbg !15452
  br i1 %7, label %9, label %8, !dbg !15453

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !15457
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !15459, !srcloc !13750
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #22, !dbg !15460, !srcloc !15462
  br label %24, !dbg !15463

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15464
  %11 = load i8, i8* %10, align 1, !dbg !15464
  %12 = and i8 %11, 8, !dbg !15466
  %13 = icmp eq i8 %12, 0, !dbg !15467
  br i1 %13, label %15, label %14, !dbg !15468

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !15472
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !15474, !srcloc !13750
  br label %24, !dbg !15475

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #23, !dbg !15476
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15479
  br i1 %17, label %18, label %23, !dbg !15480

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #22, !dbg !15481, !srcloc !14362
  call void @llvm.dbg.value(metadata i32 %19, metadata !14358, metadata !DIExpression()) #22, !dbg !15484
  %20 = icmp eq i32 %19, 0, !dbg !15485
  br i1 %20, label %21, label %23, !dbg !15486

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14322, metadata !DIExpression()) #22, !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !15487
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !15490
  br label %23, !dbg !15491

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13736, metadata !DIExpression()) #22, !dbg !15492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %3, metadata !13744, metadata !DIExpression()) #22, !dbg !15494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !15496, !srcloc !13750
  br label %24, !dbg !15497

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15500, metadata !DIExpression()), !dbg !15501
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15502
  %3 = load i8, i8* %2, align 1, !dbg !15502
  %4 = and i8 %3, 8, !dbg !15504
  %5 = icmp eq i8 %4, 0, !dbg !15505
  br i1 %5, label %6, label %20, !dbg !15506

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15507
  %8 = or i8 %7, 8, !dbg !15507
  store i8 %8, i8* %2, align 1, !dbg !15507
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #23, !dbg !15509
  br i1 %9, label %10, label %12, !dbg !15511

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13880, metadata !DIExpression()) #22, !dbg !15512
  %11 = and i8 %8, 95, !dbg !15515
  store i8 %11, i8* %2, align 1, !dbg !15515
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #22, !dbg !15516
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15518
  br label %12, !dbg !15519

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15520
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15520
  %15 = icmp eq %union.anon* %14, null, !dbg !15522
  br i1 %15, label %17, label %16, !dbg !15523

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #23, !dbg !15524
  br label %17, !dbg !15526

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #23, !dbg !15527
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15528
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #23, !dbg !15529
  tail call fastcc void @update_cache(i32 noundef 1) #23, !dbg !15530
  br label %20, !dbg !15531

20:                                               ; preds = %17, %1
  ret void, !dbg !15532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15533 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15537, metadata !DIExpression()), !dbg !15539
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #23, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15538, metadata !DIExpression()), !dbg !15539
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15541
  br i1 %3, label %10, label %4, !dbg !15542

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #23, !dbg !15543
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #23, !dbg !15545
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15546, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.value(metadata i32 0, metadata !15551, metadata !DIExpression()), !dbg !15552
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !15554
  store i32 0, i32* %7, align 4, !dbg !15555
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #23, !dbg !15556
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #23, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15538, metadata !DIExpression()), !dbg !15539
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15541
  br i1 %9, label %10, label %4, !dbg !15542, !llvm.loop !15557

10:                                               ; preds = %4, %1
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15565, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !15569
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15571, !srcloc !13724
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15571
  call void @llvm.dbg.value(metadata i32 %4, metadata !13721, metadata !DIExpression()) #22, !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !15573
  call void @llvm.dbg.value(metadata i32 %4, metadata !13715, metadata !DIExpression()) #22, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %4, metadata !15566, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata i32 0, metadata !15567, metadata !DIExpression()), !dbg !15568
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15574
  %6 = load i8, i8* %5, align 1, !dbg !15574
  %7 = and i8 %6, 8, !dbg !15576
  %8 = icmp eq i8 %7, 0, !dbg !15577
  br i1 %8, label %9, label %24, !dbg !15578

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15565, metadata !DIExpression()), !dbg !15568
  %11 = icmp eq i64 %10, 0, !dbg !15579
  br i1 %11, label %24, label %12, !dbg !15581

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15582
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15584
  br i1 %14, label %24, label %15, !dbg !15585

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15586
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !15586
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15587
  %19 = icmp eq %union.anon* %17, %18, !dbg !15588
  br i1 %19, label %24, label %20, !dbg !15589

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15590
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #23, !dbg !15592
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15593
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #23, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %4, metadata !14322, metadata !DIExpression()) #22, !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14327, metadata !DIExpression()) #22, !dbg !15595
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %23, metadata !15567, metadata !DIExpression()), !dbg !15568
  br label %26, !dbg !15598

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15599
  call void @llvm.dbg.value(metadata i32 %25, metadata !15567, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata i32 %4, metadata !13736, metadata !DIExpression()) #22, !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !15600
  call void @llvm.dbg.value(metadata i32 %4, metadata !13744, metadata !DIExpression()) #22, !dbg !15602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #22, !dbg !15604, !srcloc !13750
  br label %26, !dbg !15605

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15568
  ret i32 %27, !dbg !15606
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15607 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15611, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i32 %1, metadata !15612, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i8* %2, metadata !15613, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i8 0, metadata !15615, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i32 0, metadata !15616, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13709, metadata !DIExpression()) #22, !dbg !15621
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15623, !srcloc !13724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13721, metadata !DIExpression()) #22, !dbg !15625
  call void @llvm.dbg.value(metadata i32 undef, metadata !13722, metadata !DIExpression()) #22, !dbg !15625
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()) #22, !dbg !15621
  call void @llvm.dbg.value(metadata i32 undef, metadata !15618, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i8 poison, metadata !15615, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15616, metadata !DIExpression()), !dbg !15620
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #23, !dbg !15626
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15614, metadata !DIExpression()), !dbg !15619
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15629
  br i1 %7, label %12, label %8, !dbg !15631

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15632, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.value(metadata i32 %1, metadata !15638, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.value(metadata i8* %2, metadata !15639, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15546, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata i32 %1, metadata !15551, metadata !DIExpression()), !dbg !15643
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 6, i32 1, !dbg !15645
  store i32 %1, i32* %9, align 4, !dbg !15646
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15647
  store i8* %2, i8** %10, align 4, !dbg !15648
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #23, !dbg !15649
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #23, !dbg !15650
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #23, !dbg !15651
  call void @llvm.dbg.value(metadata i8 1, metadata !15615, metadata !DIExpression()), !dbg !15619
  br label %12, !dbg !15652

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15623
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15623
  call void @llvm.dbg.value(metadata i32 %14, metadata !13721, metadata !DIExpression()) #22, !dbg !15625
  call void @llvm.dbg.value(metadata i32 %14, metadata !13715, metadata !DIExpression()) #22, !dbg !15621
  call void @llvm.dbg.value(metadata i32 %14, metadata !15618, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i8 poison, metadata !15615, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #22, !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13741, metadata !DIExpression()) #22, !dbg !15653
  call void @llvm.dbg.value(metadata i32 undef, metadata !13744, metadata !DIExpression()) #22, !dbg !15655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !15657, !srcloc !13750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15616, metadata !DIExpression()), !dbg !15620
  ret i1 %13, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15665, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata i64 undef, metadata !15667, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15664, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15666, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata i8** %4, metadata !15668, metadata !DIExpression()), !dbg !15670
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #23, !dbg !15671
  call void @llvm.dbg.value(metadata i32 %6, metadata !15669, metadata !DIExpression()), !dbg !15670
  %7 = icmp eq i8** %4, null, !dbg !15672
  br i1 %7, label %12, label %8, !dbg !15674

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15675
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15677
  %11 = load i8*, i8** %10, align 4, !dbg !15677
  store i8* %11, i8** %4, align 4, !dbg !15678
  br label %12, !dbg !15679

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15681 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !15683
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !15684
  ret void, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15686 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15696, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15694, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15695, metadata !DIExpression()), !dbg !15713
  %5 = icmp eq i64 %4, -1, !dbg !15714
  br i1 %5, label %55, label %6, !dbg !15716

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15717
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15718
  call void @llvm.dbg.value(metadata i32 0, metadata !15697, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !15727
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15729, !srcloc !15735
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15729
  call void @llvm.dbg.value(metadata i32 %9, metadata !15732, metadata !DIExpression()) #22, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %9, metadata !15726, metadata !DIExpression()) #22, !dbg !15727
  call void @llvm.dbg.value(metadata i32 %9, metadata !15703, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata i32 undef, metadata !15697, metadata !DIExpression()), !dbg !15719
  %10 = icmp slt i64 %4, -1, !dbg !15737
  br i1 %10, label %11, label %17, !dbg !15738

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15739
  %13 = add i64 %4, %12, !dbg !15740
  %14 = sub i64 -2, %13, !dbg !15740
  call void @llvm.dbg.value(metadata i64 %14, metadata !15707, metadata !DIExpression()), !dbg !15741
  %15 = icmp sgt i64 %14, 1, !dbg !15742
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15742
  br label %22, !dbg !15743

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15744
  %19 = tail call fastcc i32 @elapsed.248() #23, !dbg !15746
  %20 = sext i32 %19 to i64, !dbg !15746
  %21 = add nsw i64 %18, %20, !dbg !15747
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15748
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15749
  store i64 %23, i64* %24, align 8, !dbg !15750
  %25 = tail call fastcc %struct._timeout* @first() #23, !dbg !15751
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15704, metadata !DIExpression()), !dbg !15753
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15754
  br i1 %26, label %42, label %27, !dbg !15754

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15755
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15704, metadata !DIExpression()), !dbg !15753
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15759
  %31 = load i64, i64* %30, align 8, !dbg !15759
  %32 = icmp slt i64 %28, %31, !dbg !15760
  br i1 %32, label %33, label %38, !dbg !15761

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15759
  %35 = sub nsw i64 %31, %28, !dbg !15762
  store i64 %35, i64* %34, align 8, !dbg !15762
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15764
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15765
  tail call fastcc void @sys_dlist_insert.249(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #23, !dbg !15766
  br label %44, !dbg !15767

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15768
  store i64 %39, i64* %24, align 8, !dbg !15768
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #23, !dbg !15769
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15704, metadata !DIExpression()), !dbg !15753
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15754
  br i1 %41, label %42, label %27, !dbg !15754, !llvm.loop !15770

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15772
  tail call fastcc void @sys_dlist_append.250(%struct._dnode* noundef %43) #23, !dbg !15775
  br label %44, !dbg !15776

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #23, !dbg !15777
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15778
  br i1 %46, label %47, label %54, !dbg !15779

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #23, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %48, metadata !15710, metadata !DIExpression()), !dbg !15781
  %49 = icmp ne i32 %48, 0, !dbg !15782
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15784
  br i1 %52, label %54, label %53, !dbg !15784

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !15785
  br label %54, !dbg !15787

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15788, metadata !DIExpression()) #22, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !15794
  call void @llvm.dbg.value(metadata i32 %9, metadata !15796, metadata !DIExpression()) #22, !dbg !15799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #22, !dbg !15801, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !15697, metadata !DIExpression()), !dbg !15719
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.248() unnamed_addr #1 !dbg !15804 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15807
  %2 = icmp eq i32 %1, 0, !dbg !15808
  br i1 %2, label %3, label %5, !dbg !15807

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !15809
  br label %5, !dbg !15807

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15807
  ret i32 %6, !dbg !15810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !15811 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.253() #23, !dbg !15817
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15815, metadata !DIExpression()), !dbg !15818
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15819
  ret %struct._timeout* %2, !dbg !15820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.249(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15821 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15825, metadata !DIExpression()), !dbg !15829
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15826, metadata !DIExpression()), !dbg !15829
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15830
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15830
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15827, metadata !DIExpression()), !dbg !15829
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15831
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15832
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15833
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15834
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15835
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15836
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15837
  ret void, !dbg !15838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !15839 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15843, metadata !DIExpression()), !dbg !15845
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15846
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.251(%struct._dnode* noundef %2) #23, !dbg !15847
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15844, metadata !DIExpression()), !dbg !15845
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15848
  ret %struct._timeout* %4, !dbg !15849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.250(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !15850 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15855, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15856, metadata !DIExpression()), !dbg !15858
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15859
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15857, metadata !DIExpression()), !dbg !15858
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15860
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15861
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15862
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15863
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15864
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15865
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15866
  ret void, !dbg !15867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15868 {
  %1 = tail call fastcc %struct._timeout* @first() #23, !dbg !15873
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15870, metadata !DIExpression()), !dbg !15874
  %2 = tail call fastcc i32 @elapsed.248() #23, !dbg !15875
  call void @llvm.dbg.value(metadata i32 %2, metadata !15871, metadata !DIExpression()), !dbg !15874
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15876
  br i1 %3, label %14, label %4, !dbg !15878

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15879
  %6 = load i64, i64* %5, align 8, !dbg !15879
  %7 = sext i32 %2 to i64, !dbg !15880
  %8 = sub nsw i64 %6, %7, !dbg !15881
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15882
  br i1 %9, label %14, label %10, !dbg !15883

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15884
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15884
  %13 = trunc i64 %12 to i32, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %13, metadata !15872, metadata !DIExpression()), !dbg !15874
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15886
  call void @llvm.dbg.value(metadata i32 %15, metadata !15872, metadata !DIExpression()), !dbg !15874
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15887
  %17 = icmp ne i32 %16, 0, !dbg !15889
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15890
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %20, metadata !15872, metadata !DIExpression()), !dbg !15874
  ret i32 %20, !dbg !15891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.251(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15892 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15896, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15897, metadata !DIExpression()), !dbg !15898
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15899
  br i1 %2, label %5, label %3, !dbg !15900

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.252(%struct._dnode* noundef nonnull %0) #23, !dbg !15901
  br label %5, !dbg !15900

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15900
  ret %struct._dnode* %6, !dbg !15902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.252(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15903 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15905, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15906, metadata !DIExpression()), !dbg !15907
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15908
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15909
  br i1 %3, label %7, label %4, !dbg !15910

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15911
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15911
  br label %7, !dbg !15910

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15910
  ret %struct._dnode* %8, !dbg !15912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.253() unnamed_addr #10 !dbg !15913 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15917, metadata !DIExpression()), !dbg !15918
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.254() #23, !dbg !15919
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15919
  ret %struct._dnode* %3, !dbg !15920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.254() unnamed_addr #10 !dbg !15921 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15925, metadata !DIExpression()), !dbg !15926
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15927
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15928
  ret i1 %2, !dbg !15929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15930 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15934, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 -22, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 0, metadata !15936, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !15941
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !15943, !srcloc !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #22, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #22, !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !15938, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata i32 -22, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15935, metadata !DIExpression()), !dbg !15939
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* noundef %3) #23, !dbg !15946
  br i1 %4, label %5, label %6, !dbg !15950

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #23, !dbg !15951
  call void @llvm.dbg.value(metadata i32 0, metadata !15935, metadata !DIExpression()), !dbg !15939
  br label %6, !dbg !15953

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15939
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %8, metadata !15732, metadata !DIExpression()) #22, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %8, metadata !15726, metadata !DIExpression()) #22, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %8, metadata !15938, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata i32 %7, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15788, metadata !DIExpression()) #22, !dbg !15954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()) #22, !dbg !15956
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #22, !dbg !15958, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  ret i32 %7, !dbg !15959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15960 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15966, metadata !DIExpression()), !dbg !15967
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15968
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15968
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15969
  ret i1 %4, !dbg !15970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15973, metadata !DIExpression()), !dbg !15974
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #23, !dbg !15975
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15977
  br i1 %3, label %10, label %4, !dbg !15978

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15979
  %6 = load i64, i64* %5, align 8, !dbg !15979
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15981
  %8 = load i64, i64* %7, align 8, !dbg !15982
  %9 = add nsw i64 %8, %6, !dbg !15982
  store i64 %9, i64* %7, align 8, !dbg !15982
  br label %10, !dbg !15983

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15984
  tail call fastcc void @sys_dlist_remove.258(%struct._dnode* noundef %11) #23, !dbg !15985
  ret void, !dbg !15986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.258(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15987 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15991, metadata !DIExpression()), !dbg !15994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15995
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15995
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15992, metadata !DIExpression()), !dbg !15994
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15996
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15996
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15993, metadata !DIExpression()), !dbg !15994
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15997
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15998
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15999
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16000
  tail call fastcc void @sys_dnode_init.259(%struct._dnode* noundef %0) #23, !dbg !16001
  ret void, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.259(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16005, metadata !DIExpression()), !dbg !16006
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16007
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16009
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16010
  ret void, !dbg !16011
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16012 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16018, metadata !DIExpression()), !dbg !16023
  call void @llvm.dbg.value(metadata i64 0, metadata !16019, metadata !DIExpression()), !dbg !16023
  call void @llvm.dbg.value(metadata i32 0, metadata !16020, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16025
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16027, !srcloc !15735
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #22, !dbg !16029
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16029
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #22, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %3, metadata !16022, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.value(metadata i64 0, metadata !16019, metadata !DIExpression()), !dbg !16023
  call void @llvm.dbg.value(metadata i32 undef, metadata !16020, metadata !DIExpression()), !dbg !16024
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #23, !dbg !16030
  call void @llvm.dbg.value(metadata i64 %4, metadata !16019, metadata !DIExpression()), !dbg !16023
  call void @llvm.dbg.value(metadata i32 %3, metadata !15788, metadata !DIExpression()) #22, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16033
  call void @llvm.dbg.value(metadata i32 %3, metadata !15796, metadata !DIExpression()) #22, !dbg !16035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !16037, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16020, metadata !DIExpression()), !dbg !16024
  ret i64 %4, !dbg !16038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16039 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16041, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i64 0, metadata !16042, metadata !DIExpression()), !dbg !16045
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.260(%struct._timeout* noundef %0) #23, !dbg !16046
  br i1 %2, label %21, label %3, !dbg !16048

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #23, !dbg !16049
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16043, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i64 0, metadata !16042, metadata !DIExpression()), !dbg !16045
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16051
  br i1 %5, label %16, label %6, !dbg !16053

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16043, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i64 %8, metadata !16042, metadata !DIExpression()), !dbg !16045
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16054
  %10 = load i64, i64* %9, align 8, !dbg !16054
  %11 = add nsw i64 %10, %8, !dbg !16056
  call void @llvm.dbg.value(metadata i64 %11, metadata !16042, metadata !DIExpression()), !dbg !16045
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16057
  br i1 %12, label %16, label %13, !dbg !16059

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #23, !dbg !16060
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16043, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i64 %11, metadata !16042, metadata !DIExpression()), !dbg !16045
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16051
  br i1 %15, label %16, label %6, !dbg !16053, !llvm.loop !16061

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16045
  call void @llvm.dbg.value(metadata i64 %17, metadata !16042, metadata !DIExpression()), !dbg !16045
  %18 = tail call fastcc i32 @elapsed.248() #23, !dbg !16063
  %19 = sext i32 %18 to i64, !dbg !16063
  %20 = sub nsw i64 %17, %19, !dbg !16064
  br label %21, !dbg !16065

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16045
  ret i64 %22, !dbg !16066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.260(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16071, metadata !DIExpression()), !dbg !16072
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16073
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* noundef %2) #23, !dbg !16074
  %4 = xor i1 %3, true, !dbg !16075
  ret i1 %4, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16077 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16079, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i64 0, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i32 0, metadata !16081, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16086
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16088, !srcloc !15735
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #22, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16090
  call void @llvm.dbg.value(metadata i32 %3, metadata !15726, metadata !DIExpression()) #22, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %3, metadata !16083, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata i64 0, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16081, metadata !DIExpression()), !dbg !16085
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16091
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #23, !dbg !16094
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16080, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16084
  call void @llvm.dbg.value(metadata i32 %3, metadata !15788, metadata !DIExpression()) #22, !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %3, metadata !15796, metadata !DIExpression()) #22, !dbg !16097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #22, !dbg !16099, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16081, metadata !DIExpression()), !dbg !16085
  %6 = add i64 %5, %4, !dbg !16100
  ret i64 %6, !dbg !16101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16102 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16104, metadata !DIExpression()), !dbg !16108
  call void @llvm.dbg.value(metadata i32 0, metadata !16105, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16110
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16112, !srcloc !15735
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %2, metadata !15732, metadata !DIExpression()) #22, !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %2, metadata !15726, metadata !DIExpression()) #22, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %2, metadata !16107, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.value(metadata i32 -1, metadata !16104, metadata !DIExpression()), !dbg !16108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16105, metadata !DIExpression()), !dbg !16109
  %3 = tail call fastcc i32 @next_timeout() #23, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %3, metadata !16104, metadata !DIExpression()), !dbg !16108
  call void @llvm.dbg.value(metadata i32 %2, metadata !15788, metadata !DIExpression()) #22, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %2, metadata !15796, metadata !DIExpression()) #22, !dbg !16120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !16122, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16105, metadata !DIExpression()), !dbg !16109
  ret i32 %3, !dbg !16123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16126, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i1 %1, metadata !16127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16136
  call void @llvm.dbg.value(metadata i32 0, metadata !16128, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16138
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16140, !srcloc !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #22, !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #22, !dbg !16138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16130, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i32 undef, metadata !16128, metadata !DIExpression()), !dbg !16137
  %4 = tail call fastcc i32 @next_timeout() #23, !dbg !16143
  call void @llvm.dbg.value(metadata i32 %4, metadata !16131, metadata !DIExpression()), !dbg !16144
  call void @llvm.dbg.value(metadata i1 undef, metadata !16134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16144
  %5 = icmp slt i32 %4, 2, !dbg !16145
  call void @llvm.dbg.value(metadata i1 %5, metadata !16135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16144
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16146
  call void @llvm.dbg.value(metadata i1 %6, metadata !16134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16144
  br i1 %7, label %11, label %8, !dbg !16146

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16148
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16148
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !16150
  br label %11, !dbg !16151

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %12, metadata !15732, metadata !DIExpression()) #22, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %12, metadata !15726, metadata !DIExpression()) #22, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %12, metadata !16130, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15788, metadata !DIExpression()) #22, !dbg !16152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()) #22, !dbg !16154
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #22, !dbg !16156, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 1, metadata !16128, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i32 undef, metadata !16128, metadata !DIExpression()), !dbg !16137
  ret void, !dbg !16157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16162, metadata !DIExpression()), !dbg !16167
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16169
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16171, !srcloc !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #22, !dbg !16173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #22, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16163, metadata !DIExpression()), !dbg !16167
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16167
  call void @llvm.dbg.value(metadata i32 undef, metadata !16163, metadata !DIExpression()), !dbg !16167
  %3 = tail call fastcc %struct._timeout* @first() #23, !dbg !16174
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16175
  br i1 %4, label %28, label %5, !dbg !16176

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16177
  %10 = load i64, i64* %9, align 8, !dbg !16177
  %11 = sext i32 %8 to i64, !dbg !16178
  %12 = icmp sgt i64 %10, %11, !dbg !16179
  br i1 %12, label %26, label %13, !dbg !16180

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16167
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16164, metadata !DIExpression()), !dbg !16181
  %15 = trunc i64 %10 to i32, !dbg !16182
  call void @llvm.dbg.value(metadata i32 %15, metadata !16166, metadata !DIExpression()), !dbg !16181
  %16 = sext i32 %15 to i64, !dbg !16183
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16184
  %18 = add i64 %17, %16, !dbg !16184
  store i64 %18, i64* @curr_tick, align 8, !dbg !16184
  store i64 0, i64* %9, align 8, !dbg !16185
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #23, !dbg !16186
  call void @llvm.dbg.value(metadata i32 %14, metadata !15788, metadata !DIExpression()) #22, !dbg !16187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16187
  call void @llvm.dbg.value(metadata i32 %14, metadata !15796, metadata !DIExpression()) #22, !dbg !16189
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #22, !dbg !16191, !srcloc !15802
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16192
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16192
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !16193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16194
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16196, !srcloc !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #22, !dbg !16198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()) #22, !dbg !16194
  call void @llvm.dbg.value(metadata i32 undef, metadata !16163, metadata !DIExpression()), !dbg !16167
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16199
  %23 = sub nsw i32 %22, %15, !dbg !16199
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16167
  call void @llvm.dbg.value(metadata i32 undef, metadata !16163, metadata !DIExpression()), !dbg !16167
  %24 = tail call fastcc %struct._timeout* @first() #23, !dbg !16174
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16175
  br i1 %25, label %28, label %5, !dbg !16176, !llvm.loop !16200

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16202
  store i64 %27, i64* %9, align 8, !dbg !16202
  br label %32, !dbg !16205

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16167
  %31 = sext i32 %30 to i64, !dbg !16206
  br label %32, !dbg !16206

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16206
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16167
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16207
  %37 = add i64 %36, %33, !dbg !16207
  store i64 %37, i64* @curr_tick, align 8, !dbg !16207
  store i32 0, i32* @announce_remaining, align 4, !dbg !16208
  %38 = tail call fastcc i32 @next_timeout() #23, !dbg !16209
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !16210
  call void @llvm.dbg.value(metadata i32 %35, metadata !15788, metadata !DIExpression()) #22, !dbg !16211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16211
  call void @llvm.dbg.value(metadata i32 %35, metadata !15796, metadata !DIExpression()) #22, !dbg !16213
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #22, !dbg !16215, !srcloc !15802
  ret void, !dbg !16216
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16217 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16221, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 0, metadata !16222, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15720, metadata !DIExpression()) #22, !dbg !16227
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #22, !dbg !16229, !srcloc !15735
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %2, metadata !15732, metadata !DIExpression()) #22, !dbg !16231
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #22, !dbg !16231
  call void @llvm.dbg.value(metadata i32 %2, metadata !15726, metadata !DIExpression()) #22, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %2, metadata !16224, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata i64 0, metadata !16221, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16226
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16232
  %4 = tail call fastcc i32 @elapsed.248() #23, !dbg !16235
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16221, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16225
  call void @llvm.dbg.value(metadata i32 %2, metadata !15788, metadata !DIExpression()) #22, !dbg !16236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()) #22, !dbg !16236
  call void @llvm.dbg.value(metadata i32 %2, metadata !15796, metadata !DIExpression()) #22, !dbg !16238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #22, !dbg !16240, !srcloc !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16226
  %5 = sext i32 %4 to i64, !dbg !16235
  %6 = add i64 %3, %5, !dbg !16241
  ret i64 %6, !dbg !16242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16243 {
  %1 = tail call i64 @sys_clock_tick_get() #23, !dbg !16244
  %2 = trunc i64 %1 to i32, !dbg !16245
  ret i32 %2, !dbg !16246
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16247 {
  %1 = tail call i64 @sys_clock_tick_get() #23, !dbg !16248
  ret i64 %1, !dbg !16249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16252, metadata !DIExpression()), !dbg !16259
  %2 = icmp eq i32 %0, 0, !dbg !16260
  br i1 %2, label %10, label %3, !dbg !16262

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #23, !dbg !16263
  call void @llvm.dbg.value(metadata i32 %4, metadata !16253, metadata !DIExpression()), !dbg !16259
  %5 = mul i32 %0, 200, !dbg !16264
  call void @llvm.dbg.value(metadata i32 %5, metadata !16254, metadata !DIExpression()), !dbg !16259
  br label %6, !dbg !16265

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #23, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %7, metadata !16255, metadata !DIExpression()), !dbg !16267
  %8 = sub i32 %7, %4, !dbg !16268
  %9 = icmp ult i32 %8, %5, !dbg !16270
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16272 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #23, !dbg !16273
  ret i32 %1, !dbg !16274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16275 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16277
  ret i32 %1, !dbg !16278
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16279 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16283, metadata !DIExpression()), !dbg !16285
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16286

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #23, !dbg !16287
  br label %14, !dbg !16291

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16284, metadata !DIExpression()), !dbg !16285
  %6 = icmp slt i64 %2, -1, !dbg !16292
  br i1 %6, label %7, label %9, !dbg !16295

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16296
  br label %14, !dbg !16297

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #23, !dbg !16299
  %11 = icmp ugt i64 %2, 1, !dbg !16300
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16300
  %13 = add nsw i64 %10, %12, !dbg !16301
  br label %14, !dbg !16302

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16303
  ret i64 %15, !dbg !16304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16305 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.269, i32 0, i32 0)) #24, !dbg !16307
  ret void, !dbg !16308
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin optsize "no-builtins" }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1169, !2, !2477, !27, !379, !403, !2479, !2481, !2515, !414, !2517, !2520, !843, !863, !2522, !2530, !2538, !2554, !2565, !2612, !2614, !2642, !2670, !2713, !2785, !2830, !2858, !875, !885, !982, !1179, !1363, !1644, !2863, !1905, !2865, !2868, !2944, !2958, !2970, !3095, !1935, !3098, !1941, !2308, !3116, !2331, !3118, !2440, !3121}
!llvm.ident = !{!3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123, !3123}
!llvm.module.flags = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !414, file: !828, line: 258, type: !829, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !416, retainedTypes: !699, globals: !827, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!416 = !{!417, !449, !459, !508, !514, !635, !670}
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !418, line: 54, baseType: !32, size: 32, elements: !419)
!418 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!419 = !{!420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448}
!420 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!421 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!422 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!423 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!424 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!425 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!426 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!427 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!428 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!429 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!430 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!431 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!432 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!433 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!434 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!435 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!436 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!437 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!438 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!439 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!440 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!441 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!442 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!443 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!444 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!445 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!446 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!447 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!448 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !418, line: 224, baseType: !32, size: 32, elements: !450)
!450 = !{!451, !452, !453, !454, !455, !456, !457, !458}
!451 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!452 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!453 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!454 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!455 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!456 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!457 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!458 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !418, line: 275, baseType: !32, size: 32, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507}
!461 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!462 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!463 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!464 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!465 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!466 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!467 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!468 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!469 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!470 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!471 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!472 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!473 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!474 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!475 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!476 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!477 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!478 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!479 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!480 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!481 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!482 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!483 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!484 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!485 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!486 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!487 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!488 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!489 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!490 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!491 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!492 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!493 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!494 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!495 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!496 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!497 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!498 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!499 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!500 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!501 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!502 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!503 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!504 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!505 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!506 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!507 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!508 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !418, line: 327, baseType: !32, size: 32, elements: !509)
!509 = !{!510, !511, !512, !513}
!510 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!511 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!512 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!513 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!514 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !515, line: 76, baseType: !32, size: 32, elements: !516)
!515 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634}
!517 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!518 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!519 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!520 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!521 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!522 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!523 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!524 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!525 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!526 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!527 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!528 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!529 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!530 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!531 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!532 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!533 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!534 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!535 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!536 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!537 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!538 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!539 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!540 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!541 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!542 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!543 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!544 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!545 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!546 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!547 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!548 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!549 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!550 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!551 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!552 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!553 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!554 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!555 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!556 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!557 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!558 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!559 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!560 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!561 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!562 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!563 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!564 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!565 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!566 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!567 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!568 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!569 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!570 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!571 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!572 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!573 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!574 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!575 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!576 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!577 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!578 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!579 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!580 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!581 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!582 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!583 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!584 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!585 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!586 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!587 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!588 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!589 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!590 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!591 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!592 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!593 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!594 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!595 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!596 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!597 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!598 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!599 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!600 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!601 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!602 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!603 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!604 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!605 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!606 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!607 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!608 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!609 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!610 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!611 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!612 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!613 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!614 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!615 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!616 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!617 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!618 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!619 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!620 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!621 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!622 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!623 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!624 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!625 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!626 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!627 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!628 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!629 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!630 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!631 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!632 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!633 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!634 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !418, line: 237, baseType: !32, size: 32, elements: !636)
!636 = !{!637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669}
!637 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!638 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!639 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!640 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!641 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!642 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!643 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!644 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!645 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!646 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!647 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!648 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!649 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!650 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!651 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!652 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!653 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!654 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!655 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!656 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!657 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!658 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!659 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!660 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!661 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!662 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!663 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!664 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!665 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!666 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!667 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!668 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!669 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !515, line: 44, baseType: !32, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698}
!672 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!673 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!674 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!675 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!676 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!677 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!678 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!679 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!680 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!681 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!682 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!683 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!684 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!685 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!686 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!687 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!688 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!689 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!690 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!691 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!692 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!693 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!694 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!695 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!696 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!697 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!698 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!699 = !{!700, !772, !815, !826, !208}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !702, line: 4575, baseType: !703)
!702 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 4532, size: 390144, elements: !704)
!704 = !{!705, !707, !708, !709, !710, !714, !724, !728, !738, !742}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !703, file: !702, line: 4533, baseType: !706, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !703, file: !702, line: 4534, baseType: !706, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !703, file: !702, line: 4535, baseType: !706, size: 32, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !703, file: !702, line: 4536, baseType: !706, size: 32, offset: 96)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !703, file: !702, line: 4537, baseType: !711, size: 16256, offset: 128)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 16256, elements: !712)
!712 = !{!713}
!713 = !DISubrange(count: 2032)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !703, file: !702, line: 4543, baseType: !715, size: 4224, offset: 16384)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 4224, elements: !722)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !703, file: !702, line: 4538, size: 128, elements: !717)
!717 = !{!718, !719, !720, !721}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !716, file: !702, line: 4539, baseType: !706, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !716, file: !702, line: 4540, baseType: !706, size: 32, offset: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !716, file: !702, line: 4541, baseType: !706, size: 32, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !716, file: !702, line: 4542, baseType: !706, size: 32, offset: 96)
!722 = !{!723}
!723 = !DISubrange(count: 33)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !703, file: !702, line: 4544, baseType: !725, size: 110464, offset: 20608)
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 110464, elements: !726)
!726 = !{!727}
!727 = !DISubrange(count: 13808)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !703, file: !702, line: 4550, baseType: !729, size: 24448, offset: 131072)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !730, size: 24448, elements: !736)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !703, file: !702, line: 4545, size: 128, elements: !731)
!731 = !{!732, !733, !734, !735}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !730, file: !702, line: 4546, baseType: !706, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !730, file: !702, line: 4547, baseType: !706, size: 32, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !730, file: !702, line: 4548, baseType: !706, size: 32, offset: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !730, file: !702, line: 4549, baseType: !706, size: 32, offset: 96)
!736 = !{!737}
!737 = !DISubrange(count: 191)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !703, file: !702, line: 4551, baseType: !739, size: 106624, offset: 155520)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 106624, elements: !740)
!740 = !{!741}
!741 = !DISubrange(count: 13328)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !703, file: !702, line: 4574, baseType: !743, size: 128000, offset: 262144)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 128000, elements: !770)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !703, file: !702, line: 4552, size: 1024, elements: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !766, !767, !768, !769}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !744, file: !702, line: 4553, baseType: !706, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !744, file: !702, line: 4554, baseType: !706, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !744, file: !702, line: 4555, baseType: !706, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !744, file: !702, line: 4556, baseType: !706, size: 32, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !744, file: !702, line: 4557, baseType: !706, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !744, file: !702, line: 4558, baseType: !706, size: 32, offset: 160)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !744, file: !702, line: 4559, baseType: !706, size: 32, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !744, file: !702, line: 4560, baseType: !706, size: 32, offset: 224)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !744, file: !702, line: 4561, baseType: !706, size: 32, offset: 256)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !744, file: !702, line: 4562, baseType: !706, size: 32, offset: 288)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !744, file: !702, line: 4563, baseType: !706, size: 32, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !744, file: !702, line: 4564, baseType: !706, size: 32, offset: 352)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !744, file: !702, line: 4565, baseType: !706, size: 32, offset: 384)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !744, file: !702, line: 4566, baseType: !706, size: 32, offset: 416)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !744, file: !702, line: 4567, baseType: !706, size: 32, offset: 448)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !744, file: !702, line: 4568, baseType: !706, size: 32, offset: 480)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !744, file: !702, line: 4569, baseType: !763, size: 384, offset: 512)
!763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 384, elements: !764)
!764 = !{!765}
!765 = !DISubrange(count: 48)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !744, file: !702, line: 4570, baseType: !706, size: 32, offset: 896)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !744, file: !702, line: 4571, baseType: !706, size: 32, offset: 928)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !744, file: !702, line: 4572, baseType: !706, size: 32, offset: 960)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !744, file: !702, line: 4573, baseType: !706, size: 32, offset: 992)
!770 = !{!771}
!771 = !DISubrange(count: 125)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !702, line: 38320, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 38303, size: 23040, elements: !775)
!775 = !{!776, !778, !782, !783, !784, !785, !789, !793, !797, !801, !805}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !774, file: !702, line: 38304, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !774, file: !702, line: 38305, baseType: !779, size: 256, offset: 32)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !780)
!780 = !{!781}
!781 = !DISubrange(count: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !774, file: !702, line: 38306, baseType: !706, size: 32, offset: 288)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !774, file: !702, line: 38307, baseType: !706, size: 32, offset: 320)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !774, file: !702, line: 38308, baseType: !706, size: 32, offset: 352)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !774, file: !702, line: 38309, baseType: !786, size: 3712, offset: 384)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 3712, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 464)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !774, file: !702, line: 38310, baseType: !790, size: 864, offset: 4096)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 864, elements: !791)
!791 = !{!792}
!792 = !DISubrange(count: 27)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !774, file: !702, line: 38311, baseType: !794, size: 3232, offset: 4960)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 3232, elements: !795)
!795 = !{!796}
!796 = !DISubrange(count: 404)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !774, file: !702, line: 38312, baseType: !798, size: 3776, offset: 8192)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 3776, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 118)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !774, file: !702, line: 38313, baseType: !802, size: 4416, offset: 11968)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 4416, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 552)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !774, file: !702, line: 38319, baseType: !806, size: 6656, offset: 16384)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 6656, elements: !813)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !702, line: 38314, size: 128, elements: !808)
!808 = !{!809, !810, !811, !812}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !807, file: !702, line: 38315, baseType: !706, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !807, file: !702, line: 38316, baseType: !706, size: 32, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !807, file: !702, line: 38317, baseType: !706, size: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !807, file: !702, line: 38318, baseType: !706, size: 32, offset: 96)
!813 = !{!814}
!814 = !DISubrange(count: 52)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !702, line: 43319, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 43313, size: 80, elements: !818)
!818 = !{!819, !821, !822, !824, !825}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !817, file: !702, line: 43314, baseType: !820, size: 16)
!820 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !227)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !817, file: !702, line: 43315, baseType: !820, size: 16, offset: 16)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !817, file: !702, line: 43316, baseType: !823, size: 16, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !820)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !817, file: !702, line: 43317, baseType: !820, size: 16, offset: 48)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !817, file: !702, line: 43318, baseType: !820, size: 16, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!827 = !{!412}
!828 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !832)
!831 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!832 = !{!833, !840}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !830, file: !831, line: 60, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!125, !837}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !831, line: 48, flags: DIFlagFwdDecl)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !830, file: !831, line: 65, baseType: !837, size: 32, offset: 32)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !843, file: !857, line: 37, type: !858, isLocal: true, isDefinition: true)
!843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !845, globals: !856, splitDebugInlining: false, nameTableKind: None)
!844 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!845 = !{!184, !846, !847, !150}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !849)
!848 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !851)
!851 = !{!852}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !850, file: !848, line: 65, baseType: !853, size: 1408)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !854)
!854 = !{!855}
!855 = !DISubrange(count: 44)
!856 = !{!841}
!857 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !859)
!859 = !{!860}
!860 = !DISubrange(count: 256)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "sbox", scope: !863, file: !872, line: 37, type: !858, isLocal: true, isDefinition: true)
!863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !865, globals: !871, splitDebugInlining: false, nameTableKind: None)
!864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!865 = !{!866, !846, !184, !150}
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !868, file: !848, line: 65, baseType: !853, size: 1408)
!871 = !{!861}
!872 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !875, file: !882, line: 21, type: !409, isLocal: true, isDefinition: true)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !877, globals: !881, splitDebugInlining: false, nameTableKind: None)
!876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!877 = !{!878, !125, !124}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !880, line: 22, baseType: !125)
!880 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!873}
!882 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !885, file: !973, line: 603, type: !975, isLocal: true, isDefinition: true, align: 32)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !887, globals: !970, splitDebugInlining: false, nameTableKind: None)
!886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!887 = !{!124, !125, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !891, line: 336, size: 608, elements: !892)
!891 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!892 = !{!893, !913, !917, !921, !934, !939, !943, !948, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !890, file: !891, line: 365, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!125, !897, !912}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !900)
!900 = !{!901, !902, !903, !904, !910, !911}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !899, file: !137, line: 380, baseType: !140, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !899, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !899, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !899, file: !137, line: 386, baseType: !905, size: 32, offset: 96)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !907)
!907 = !{!908, !909}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !906, file: !137, line: 359, baseType: !150, size: 8)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !906, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !899, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !899, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !890, file: !891, line: 366, baseType: !914, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !897, !151}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !890, file: !891, line: 374, baseType: !918, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{!125, !897}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !890, file: !891, line: 377, baseType: !922, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!125, !897, !925}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !891, line: 122, size: 64, elements: !928)
!928 = !{!929, !930, !931, !932, !933}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !927, file: !891, line: 123, baseType: !208, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !927, file: !891, line: 124, baseType: !150, size: 8, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !927, file: !891, line: 125, baseType: !150, size: 8, offset: 40)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !927, file: !891, line: 126, baseType: !150, size: 8, offset: 48)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !927, file: !891, line: 127, baseType: !150, size: 8, offset: 56)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !890, file: !891, line: 379, baseType: !935, size: 32, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!125, !897, !938}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !890, file: !891, line: 384, baseType: !940, size: 32, offset: 160)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DISubroutineType(types: !942)
!942 = !{!125, !897, !846, !125}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !890, file: !891, line: 393, baseType: !944, size: 32, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!125, !897, !184, !947}
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !890, file: !891, line: 402, baseType: !949, size: 32, offset: 224)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !897}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !890, file: !891, line: 405, baseType: !949, size: 32, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !890, file: !891, line: 408, baseType: !918, size: 32, offset: 288)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !890, file: !891, line: 411, baseType: !949, size: 32, offset: 320)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !890, file: !891, line: 414, baseType: !949, size: 32, offset: 352)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !890, file: !891, line: 417, baseType: !918, size: 32, offset: 384)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !890, file: !891, line: 420, baseType: !918, size: 32, offset: 416)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !890, file: !891, line: 423, baseType: !949, size: 32, offset: 448)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !890, file: !891, line: 426, baseType: !949, size: 32, offset: 480)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !890, file: !891, line: 429, baseType: !918, size: 32, offset: 512)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !890, file: !891, line: 432, baseType: !918, size: 32, offset: 544)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !890, file: !891, line: 435, baseType: !963, size: 32, offset: 576)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !897, !966, !124}
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !891, line: 142, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !897, !124}
!970 = !{!883, !971}
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !885, file: !973, line: 38, type: !974, isLocal: true, isDefinition: true)
!973 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !976, file: !831, line: 60, baseType: !918, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !976, file: !831, line: 65, baseType: !897, size: 32, offset: 32)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !982, file: !988, line: 22, type: !1162, isLocal: false, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, globals: !985, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!984 = !{!30, !39, !42, !116}
!985 = !{!980, !986, !992, !1008, !1019, !1021, !1149}
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !982, file: !988, line: 324, type: !989, isLocal: false, isDefinition: true, align: 16)
!988 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !990)
!990 = !{!991}
!991 = !DISubrange(count: 3)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !982, file: !988, line: 324, type: !994, isLocal: true, isDefinition: true, align: 32)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !996)
!996 = !{!997, !998, !999, !1000, !1006, !1007}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !995, file: !137, line: 380, baseType: !140, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !995, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !995, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !995, file: !137, line: 386, baseType: !1001, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1002, file: !137, line: 359, baseType: !150, size: 8)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1002, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !995, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !995, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !982, file: !988, line: 324, type: !1010, isLocal: true, isDefinition: true, align: 32)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !1012)
!1012 = !{!1013, !1018}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1011, file: !831, line: 60, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!125, !1017}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1011, file: !831, line: 65, baseType: !1017, size: 32, offset: 32)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !982, file: !988, line: 324, type: !1002, isLocal: true, isDefinition: true, align: 8)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !982, file: !988, line: 317, type: !1023, isLocal: true, isDefinition: true)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1024)
!1024 = !{!1025, !1026, !1102, !1106, !1114, !1137, !1141}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1023, file: !128, line: 66, baseType: !1014, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1023, file: !128, line: 69, baseType: !1027, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!125, !1017, !1030, !39, !30, !42}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1032)
!1032 = !{!1033, !1075, !1080, !1081, !1082, !1083, !1100, !1101}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1031, file: !31, line: 116, baseType: !1034, size: 64)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1035)
!1035 = !{!1036, !1037}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1034, file: !31, line: 76, baseType: !30, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, scope: !1034, file: !31, line: 78, baseType: !1038, size: 32, offset: 32)
!1038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1034, file: !31, line: 78, size: 32, elements: !1039)
!1039 = !{!1040, !1054, !1059, !1061, !1073}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1038, file: !31, line: 79, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!125, !1030, !1045}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052, !1053}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1046, file: !31, line: 183, baseType: !184, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1046, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1046, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1046, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1046, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1046, file: !31, line: 208, baseType: !1030, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1038, file: !31, line: 80, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!125, !1030, !1045, !184}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1038, file: !31, line: 81, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1056)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1038, file: !31, line: 82, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!125, !1030, !1066, !184}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1067, file: !31, line: 219, baseType: !1045, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1067, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1067, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1067, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1038, file: !31, line: 83, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1063)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1031, file: !31, line: 126, baseType: !1076, size: 32, offset: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !31, line: 119, size: 32, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1076, file: !31, line: 121, baseType: !184, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1076, file: !31, line: 125, baseType: !124, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1031, file: !31, line: 131, baseType: !1017, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1031, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1031, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1031, file: !31, line: 156, baseType: !1084, size: 32, offset: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !31, line: 152, size: 32, elements: !1085)
!1085 = !{!1086, !1091, !1095}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1084, file: !31, line: 153, baseType: !1087, size: 32)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1088)
!1088 = !{!1089, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1087, file: !31, line: 88, baseType: !227, size: 16)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1087, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1084, file: !31, line: 154, baseType: !1092, size: 32)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1093)
!1093 = !{!1094}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1092, file: !31, line: 96, baseType: !208, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1084, file: !31, line: 155, baseType: !1096, size: 32)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1096, file: !31, line: 100, baseType: !227, size: 16)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1096, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1031, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1031, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1023, file: !128, line: 74, baseType: !1103, size: 32, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!125, !1017, !1030}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1023, file: !128, line: 77, baseType: !1107, size: 32, offset: 96)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!125, !1017, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1045, !125}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1023, file: !128, line: 81, baseType: !1115, size: 32, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!125, !1017, !1118, !116}
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1135, !1136}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1119, file: !117, line: 51, baseType: !1017, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1119, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1119, file: !117, line: 65, baseType: !1124, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!125, !1118, !1128, !153}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1129, file: !117, line: 91, baseType: !184, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1129, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1129, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1129, file: !117, line: 107, baseType: !1118, size: 32, offset: 96)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1119, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1119, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1023, file: !128, line: 84, baseType: !1138, size: 32, offset: 160)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!125, !1017, !1118}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1023, file: !128, line: 86, baseType: !1142, size: 32, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!125, !1017, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !1128, !125}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !982, file: !988, line: 26, type: !1151, isLocal: true, isDefinition: true)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1152, size: 2880, elements: !1160)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1153, line: 22, size: 1440, elements: !1154)
!1153 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1154 = !{!1155, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1152, file: !1153, line: 23, baseType: !125, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1152, file: !1153, line: 24, baseType: !1157, size: 1408, offset: 32)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !1158)
!1158 = !{!1159}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1157, file: !848, line: 65, baseType: !853, size: 1408)
!1160 = !{!1161}
!1161 = !DISubrange(count: 2)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1163, file: !373, line: 17, baseType: !140, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1163, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1169, file: !1174, line: 17, type: !989, isLocal: false, isDefinition: true, align: 16)
!1169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1171, splitDebugInlining: false, nameTableKind: None)
!1170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1171 = !{!1172, !1175, !1167}
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1169, file: !1174, line: 7, type: !989, isLocal: false, isDefinition: true, align: 16)
!1174 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1169, file: !1174, line: 12, type: !989, isLocal: false, isDefinition: true, align: 16)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !1179, file: !1283, line: 318, type: !1360, isLocal: false, isDefinition: true)
!1179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1181, retainedTypes: !1198, globals: !1280, splitDebugInlining: false, nameTableKind: None)
!1180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1181 = !{!1182, !1188, !1193}
!1182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1183, line: 506, baseType: !32, size: 32, elements: !1184)
!1183 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1184 = !{!1185, !1186, !1187}
!1185 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1186 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1187 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1183, line: 512, baseType: !32, size: 32, elements: !1189)
!1189 = !{!1190, !1191, !1192}
!1190 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1191 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1192 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1194, line: 66, baseType: !32, size: 32, elements: !1195)
!1194 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1195 = !{!1196, !1197}
!1196 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1197 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1198 = !{!1199, !1269, !1274, !1234, !1188, !1182, !1279, !124, !826, !1249, !393}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1183, line: 523, size: 288, elements: !1202)
!1202 = !{!1203, !1224, !1230, !1235, !1239, !1240, !1241, !1245, !1265}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1201, file: !1183, line: 524, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!125, !1207, !1222, !1223}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1220, !1221}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1209, file: !137, line: 380, baseType: !140, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1209, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1209, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1209, file: !137, line: 386, baseType: !1215, size: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1217)
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1216, file: !137, line: 359, baseType: !150, size: 8)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1216, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1209, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1209, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1183, line: 237, baseType: !150)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1183, line: 257, baseType: !208)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1201, file: !1183, line: 530, baseType: !1225, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!125, !1207, !1228}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1183, line: 229, baseType: !208)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1201, file: !1183, line: 532, baseType: !1231, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!125, !1207, !1234, !1229}
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1183, line: 216, baseType: !208)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1201, file: !1183, line: 535, baseType: !1236, size: 32, offset: 96)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!125, !1207, !1234}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1201, file: !1183, line: 537, baseType: !1236, size: 32, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1201, file: !1183, line: 539, baseType: !1236, size: 32, offset: 160)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1201, file: !1183, line: 541, baseType: !1242, size: 32, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!125, !1207, !1222, !1182, !1188}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1201, file: !1183, line: 544, baseType: !1246, size: 32, offset: 224)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!125, !1207, !1249, !153}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1183, line: 478, size: 96, elements: !1251)
!1251 = !{!1252, !1259, !1264}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1250, file: !1183, line: 482, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1254, line: 33, baseType: !1255)
!1254 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1254, line: 29, size: 32, elements: !1256)
!1256 = !{!1257}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1255, file: !1254, line: 30, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1250, file: !1183, line: 485, baseType: !1260, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1183, line: 464, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{null, !1207, !1249, !1234}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1250, file: !1183, line: 493, baseType: !1234, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1201, file: !1183, line: 547, baseType: !1266, size: 32, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!208, !1207}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1183, line: 428, size: 32, elements: !1272)
!1272 = !{!1273}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1271, file: !1183, line: 434, baseType: !1234, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1183, line: 441, size: 32, elements: !1277)
!1277 = !{!1278}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1276, file: !1183, line: 447, baseType: !1234, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1280 = !{!1177, !1281, !1287, !1289, !1299, !1311, !1313, !1344, !1346, !1358}
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1179, file: !1283, line: 318, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1283 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 400, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 25)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1179, file: !1283, line: 318, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1179, file: !1283, line: 318, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !1293)
!1293 = !{!1294, !1298}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1292, file: !831, line: 60, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!125, !1207}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1292, file: !831, line: 65, baseType: !1207, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !1179, file: !1283, line: 318, type: !1301, isLocal: true, isDefinition: true)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1283, line: 33, size: 96, elements: !1302)
!1302 = !{!1303, !1304}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1301, file: !1283, line: 35, baseType: !1276, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1301, file: !1283, line: 37, baseType: !1305, size: 64, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1254, line: 40, baseType: !1306)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1254, line: 35, size: 64, elements: !1307)
!1307 = !{!1308, !1310}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1306, file: !1254, line: 36, baseType: !1309, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1306, file: !1254, line: 37, baseType: !1309, size: 32, offset: 32)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1179, file: !1283, line: 318, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !1179, file: !1283, line: 318, type: !1315, isLocal: true, isDefinition: true)
!1315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1283, line: 23, size: 128, elements: !1317)
!1317 = !{!1318, !1319, !1332, !1343}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1316, file: !1283, line: 25, baseType: !1271, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1316, file: !1283, line: 26, baseType: !1320, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !702, line: 19729, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 19720, size: 256, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1322, file: !702, line: 19721, baseType: !706, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1322, file: !702, line: 19722, baseType: !706, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1322, file: !702, line: 19723, baseType: !777, size: 32, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1322, file: !702, line: 19724, baseType: !706, size: 32, offset: 96)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1322, file: !702, line: 19725, baseType: !706, size: 32, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1322, file: !702, line: 19726, baseType: !706, size: 32, offset: 160)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1322, file: !702, line: 19727, baseType: !706, size: 32, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1322, file: !702, line: 19728, baseType: !706, size: 32, offset: 224)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1316, file: !1283, line: 28, baseType: !1333, size: 32, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1336, line: 51, size: 128, elements: !1337)
!1336 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1337 = !{!1338, !1339, !1340, !1341, !1342}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1335, file: !1336, line: 52, baseType: !208, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1335, file: !1336, line: 53, baseType: !208, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1335, file: !1336, line: 54, baseType: !208, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1335, file: !1336, line: 55, baseType: !150, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1335, file: !1336, line: 56, baseType: !208, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1316, file: !1283, line: 29, baseType: !150, size: 8, offset: 96)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !1179, file: !1283, line: 249, type: !1200, isLocal: true, isDefinition: true)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1348, file: !1283, line: 318, type: !1351, isLocal: true, isDefinition: true, align: 32)
!1348 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1283, file: !1283, line: 318, type: !1296, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !1349)
!1349 = !{!1350}
!1350 = !DILocalVariable(name: "port", arg: 1, scope: !1348, file: !1283, line: 318, type: !1207)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1352)
!1352 = !{!1353, !1355, !1356, !1357}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1351, file: !10, line: 55, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1351, file: !10, line: 57, baseType: !1354, size: 32, offset: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1351, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1351, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1348, file: !1283, line: 318, type: !1351, isLocal: true, isDefinition: true, align: 32)
!1360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1334, size: 2048, elements: !312)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1363, file: !1560, line: 339, type: !1558, isLocal: true, isDefinition: true)
!1363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1365, retainedTypes: !1451, globals: !1596, splitDebugInlining: false, nameTableKind: None)
!1364 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1365 = !{!46, !1366, !1404, !1432, !1436, !1440, !1445}
!1366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1367, line: 122, baseType: !32, size: 32, elements: !1368)
!1367 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1369 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1370 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1371 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1372 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1373 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1374 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1375 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1376 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1377 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1378 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1379 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1380 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1381 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1382 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1383 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1384 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1385 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1386 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1387 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1388 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1389 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1390 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1391 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1392 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1393 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1394 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1395 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1396 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1397 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1398 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1399 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1400 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1401 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1402 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1403 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1404 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1367, line: 91, baseType: !32, size: 32, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431}
!1406 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1407 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1408 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1409 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1410 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1411 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1412 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1413 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1414 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1415 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1416 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1417 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1418 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1419 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1420 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1421 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1422 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1423 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1424 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1425 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1426 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1427 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1428 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1429 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1430 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1431 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1432 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1367, line: 60, baseType: !32, size: 32, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1435 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1436 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1367, line: 67, baseType: !32, size: 32, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1439 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1367, line: 74, baseType: !32, size: 32, elements: !1441)
!1441 = !{!1442, !1443, !1444}
!1442 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1443 = !DIEnumerator(name: "uartParityEven", value: 256)
!1444 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1445 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1367, line: 82, baseType: !32, size: 32, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1450}
!1447 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1448 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1449 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1450 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1451 = !{!124, !125, !1452, !1531, !1557, !1595, !208, !153, !150}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !891, line: 336, size: 608, elements: !1455)
!1455 = !{!1456, !1475, !1479, !1483, !1496, !1501, !1505, !1509, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1454, file: !891, line: 365, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!125, !1460, !912}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1473, !1474}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1462, file: !137, line: 380, baseType: !140, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1462, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1462, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1462, file: !137, line: 386, baseType: !1468, size: 32, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1470)
!1470 = !{!1471, !1472}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1469, file: !137, line: 359, baseType: !150, size: 8)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1469, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1462, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1462, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1454, file: !891, line: 366, baseType: !1476, size: 32, offset: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{null, !1460, !151}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1454, file: !891, line: 374, baseType: !1480, size: 32, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!125, !1460}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1454, file: !891, line: 377, baseType: !1484, size: 32, offset: 96)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!125, !1460, !1487}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !891, line: 122, size: 64, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1495}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1489, file: !891, line: 123, baseType: !208, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1489, file: !891, line: 124, baseType: !150, size: 8, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1489, file: !891, line: 125, baseType: !150, size: 8, offset: 40)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1489, file: !891, line: 126, baseType: !150, size: 8, offset: 48)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1489, file: !891, line: 127, baseType: !150, size: 8, offset: 56)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1454, file: !891, line: 379, baseType: !1497, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!125, !1460, !1500}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1454, file: !891, line: 384, baseType: !1502, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!125, !1460, !846, !125}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1454, file: !891, line: 393, baseType: !1506, size: 32, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!125, !1460, !184, !947}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1454, file: !891, line: 402, baseType: !1510, size: 32, offset: 224)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{null, !1460}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1454, file: !891, line: 405, baseType: !1510, size: 32, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1454, file: !891, line: 408, baseType: !1480, size: 32, offset: 288)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1454, file: !891, line: 411, baseType: !1510, size: 32, offset: 320)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1454, file: !891, line: 414, baseType: !1510, size: 32, offset: 352)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1454, file: !891, line: 417, baseType: !1480, size: 32, offset: 384)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1454, file: !891, line: 420, baseType: !1480, size: 32, offset: 416)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1454, file: !891, line: 423, baseType: !1510, size: 32, offset: 448)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1454, file: !891, line: 426, baseType: !1510, size: 32, offset: 480)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1454, file: !891, line: 429, baseType: !1480, size: 32, offset: 512)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1454, file: !891, line: 432, baseType: !1480, size: 32, offset: 544)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1454, file: !891, line: 435, baseType: !1524, size: 32, offset: 576)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{null, !1460, !1527, !124}
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !891, line: 142, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{null, !1460, !124}
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !702, line: 41342, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 41322, size: 1504, elements: !1534)
!1534 = !{!1535, !1536, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1533, file: !702, line: 41323, baseType: !777, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1533, file: !702, line: 41324, baseType: !1537, size: 480, offset: 32)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 60)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1533, file: !702, line: 41325, baseType: !706, size: 32, offset: 512)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1533, file: !702, line: 41326, baseType: !1537, size: 480, offset: 544)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1533, file: !702, line: 41327, baseType: !706, size: 32, offset: 1024)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1533, file: !702, line: 41328, baseType: !706, size: 32, offset: 1056)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1533, file: !702, line: 41329, baseType: !706, size: 32, offset: 1088)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1533, file: !702, line: 41330, baseType: !706, size: 32, offset: 1120)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1533, file: !702, line: 41331, baseType: !706, size: 32, offset: 1152)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1533, file: !702, line: 41332, baseType: !706, size: 32, offset: 1184)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1533, file: !702, line: 41333, baseType: !706, size: 32, offset: 1216)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1533, file: !702, line: 41334, baseType: !706, size: 32, offset: 1248)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1533, file: !702, line: 41335, baseType: !706, size: 32, offset: 1280)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1533, file: !702, line: 41336, baseType: !706, size: 32, offset: 1312)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1533, file: !702, line: 41337, baseType: !706, size: 32, offset: 1344)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1533, file: !702, line: 41338, baseType: !777, size: 32, offset: 1376)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1533, file: !702, line: 41339, baseType: !706, size: 32, offset: 1408)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1533, file: !702, line: 41340, baseType: !706, size: 32, offset: 1440)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1533, file: !702, line: 41341, baseType: !706, size: 32, offset: 1472)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1560, line: 29, size: 160, elements: !1561)
!1560 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1561 = !{!1562, !1563, !1564, !1565, !1594}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1559, file: !1560, line: 30, baseType: !1531, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1559, file: !1560, line: 31, baseType: !208, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1559, file: !1560, line: 32, baseType: !150, size: 8, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1559, file: !1560, line: 33, baseType: !1566, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1569, line: 60, size: 64, elements: !1570)
!1569 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1570 = !{!1571, !1593}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1568, file: !1569, line: 69, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1569, line: 50, size: 64, elements: !1575)
!1575 = !{!1576, !1591, !1592}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1574, file: !1569, line: 52, baseType: !1577, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1336, line: 64, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1336, line: 59, size: 160, elements: !1581)
!1581 = !{!1582, !1590}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1580, file: !1336, line: 60, baseType: !1583, size: 128)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1336, line: 51, size: 128, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1583, file: !1336, line: 52, baseType: !208, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1583, file: !1336, line: 53, baseType: !208, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1583, file: !1336, line: 54, baseType: !208, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1583, file: !1336, line: 55, baseType: !150, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1583, file: !1336, line: 56, baseType: !208, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1580, file: !1336, line: 61, baseType: !208, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1574, file: !1569, line: 54, baseType: !150, size: 8, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1574, file: !1569, line: 56, baseType: !150, size: 8, offset: 40)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1568, file: !1569, line: 71, baseType: !150, size: 8, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1559, file: !1560, line: 35, baseType: !1510, size: 32, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1596 = !{!1597, !1602, !1604, !1611, !1617, !1619, !1361, !1621, !1623, !1628, !1631}
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1599, isLocal: false, isDefinition: true, align: 16)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 96, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 6)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1461, isLocal: false, isDefinition: true, align: 32)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1606, isLocal: true, isDefinition: true, align: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1607, file: !831, line: 60, baseType: !1480, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1607, file: !831, line: 65, baseType: !1460, size: 32, offset: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1363, file: !1560, line: 339, type: !1613, isLocal: true, isDefinition: true)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1560, line: 39, size: 64, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1613, file: !1560, line: 41, baseType: !1527, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1613, file: !1560, line: 42, baseType: !124, size: 32, offset: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1469, isLocal: true, isDefinition: true, align: 8)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1363, file: !1560, line: 270, type: !1453, isLocal: true, isDefinition: true)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1567, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1625, isLocal: true, isDefinition: true)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1573, size: 64, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 1)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1363, file: !1560, line: 339, type: !1630, isLocal: true, isDefinition: true)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1578, size: 320, elements: !1160)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1633, file: !1560, line: 339, type: !1636, isLocal: true, isDefinition: true, align: 32)
!1633 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1560, file: !1560, line: 339, type: !1511, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !1634)
!1634 = !{!1635}
!1635 = !DILocalVariable(name: "dev", arg: 1, scope: !1633, file: !1560, line: 339, type: !1460)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1636, file: !10, line: 55, baseType: !1354, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1636, file: !10, line: 57, baseType: !1354, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1636, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1636, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1644, file: !1868, line: 65, type: !706, isLocal: true, isDefinition: true)
!1644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1646, retainedTypes: !1787, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!1645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1646 = !{!1647}
!1647 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !702, line: 103, baseType: !125, size: 32, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786}
!1649 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1650 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1651 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1652 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1653 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1654 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1655 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1656 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1657 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1658 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1659 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1660 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1661 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1662 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1663 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1664 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1665 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1666 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1667 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1668 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1669 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1670 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1671 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1672 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1673 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1674 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1675 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1676 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1677 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1678 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1679 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1680 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1681 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1682 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1683 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1684 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1685 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1686 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1687 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1688 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1689 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1690 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1691 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1692 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1693 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1694 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1695 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1696 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1697 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1698 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1699 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1700 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1701 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1702 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1703 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1704 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1705 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1706 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1707 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1708 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1709 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1710 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1711 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1712 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1713 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1714 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1715 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1716 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1717 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1718 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1719 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1720 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1721 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1722 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1723 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1724 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1725 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1726 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1727 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1728 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1729 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1730 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1731 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1732 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1733 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1734 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1735 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1736 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1737 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1738 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1739 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1740 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1741 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1742 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1743 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1744 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1745 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1746 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1747 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1748 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1749 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1750 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1751 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1752 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1753 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1754 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1755 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1756 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1757 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1758 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1759 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1760 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1761 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1762 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1763 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1764 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1765 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1766 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1767 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1768 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1769 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1770 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1771 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1772 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1773 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1774 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1775 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1776 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1777 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1778 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1779 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1780 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1781 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1782 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1783 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1784 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1785 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1786 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1787 = !{!1788, !1791, !1354, !150, !208, !1800, !1831}
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1789, line: 46, baseType: !1790)
!1789 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1793, line: 770, baseType: !1794)
!1793 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 764, size: 128, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1794, file: !1793, line: 766, baseType: !706, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1794, file: !1793, line: 767, baseType: !706, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1794, file: !1793, line: 768, baseType: !706, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1794, file: !1793, line: 769, baseType: !777, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1793, line: 426, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 411, size: 28704, elements: !1803)
!1803 = !{!1804, !1806, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1821, !1826, !1830}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1802, file: !1793, line: 413, baseType: !1805, size: 256)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 256, elements: !337)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1802, file: !1793, line: 414, baseType: !1807, size: 768, offset: 256)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1808)
!1808 = !{!1809}
!1809 = !DISubrange(count: 24)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1802, file: !1793, line: 415, baseType: !1805, size: 256, offset: 1024)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1802, file: !1793, line: 416, baseType: !1807, size: 768, offset: 1280)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1802, file: !1793, line: 417, baseType: !1805, size: 256, offset: 2048)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1802, file: !1793, line: 418, baseType: !1807, size: 768, offset: 2304)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1802, file: !1793, line: 419, baseType: !1805, size: 256, offset: 3072)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1802, file: !1793, line: 420, baseType: !1807, size: 768, offset: 3328)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1802, file: !1793, line: 421, baseType: !1805, size: 256, offset: 4096)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1802, file: !1793, line: 422, baseType: !1818, size: 1792, offset: 4352)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1819)
!1819 = !{!1820}
!1820 = !DISubrange(count: 56)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1802, file: !1793, line: 423, baseType: !1822, size: 1920, offset: 6144)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 1920, elements: !1824)
!1823 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1824 = !{!1825}
!1825 = !DISubrange(count: 240)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1802, file: !1793, line: 424, baseType: !1827, size: 20608, offset: 8064)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1828)
!1828 = !{!1829}
!1829 = !DISubrange(count: 644)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1802, file: !1793, line: 425, baseType: !706, size: 32, offset: 28672)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838, !1839, !1840, !1841, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1852, !1853, !1854, !1858, !1862, !1864}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1833, file: !1793, line: 447, baseType: !777, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1833, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1833, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1833, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1833, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1833, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1833, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 96, elements: !364)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1833, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1833, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1833, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1833, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1833, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1833, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1833, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1833, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 64, elements: !1160)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1833, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1833, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1833, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 128, elements: !1856)
!1856 = !{!1857}
!1857 = !DISubrange(count: 4)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1833, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 160, elements: !1860)
!1860 = !{!1861}
!1861 = !DISubrange(count: 5)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1833, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1860)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1833, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!1865 = !{!1866, !1892, !1897, !1899, !1901, !1642}
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1644, file: !1868, line: 285, type: !1869, isLocal: true, isDefinition: true, align: 32)
!1868 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !1871)
!1871 = !{!1872, !1891}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1870, file: !831, line: 60, baseType: !1873, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!125, !1876}
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1879)
!1879 = !{!1880, !1881, !1882, !1883, !1889, !1890}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1878, file: !137, line: 380, baseType: !140, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1878, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1878, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1878, file: !137, line: 386, baseType: !1884, size: 32, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1886)
!1886 = !{!1887, !1888}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1885, file: !137, line: 359, baseType: !150, size: 8)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1885, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1878, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1878, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1870, file: !831, line: 65, baseType: !1876, size: 32, offset: 32)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "lock", scope: !1644, file: !1868, line: 34, type: !1894, isLocal: true, isDefinition: true)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!1895 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1896 = !{}
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "last_load", scope: !1644, file: !1868, line: 36, type: !208, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1644, file: !1868, line: 48, type: !208, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1644, file: !1868, line: 54, type: !208, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1905, file: !1909, line: 69, type: !1910, isLocal: true, isDefinition: true, align: 32)
!1905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1907, globals: !1908, splitDebugInlining: false, nameTableKind: None)
!1906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1907 = !{!826, !22}
!1908 = !{!1903}
!1909 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !1912)
!1912 = !{!1913, !1932}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1911, file: !831, line: 60, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!125, !1917}
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1920)
!1920 = !{!1921, !1922, !1923, !1924, !1930, !1931}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1919, file: !137, line: 380, baseType: !140, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1919, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1919, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1919, file: !137, line: 386, baseType: !1925, size: 32, offset: 96)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1927)
!1927 = !{!1928, !1929}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1926, file: !137, line: 359, baseType: !150, size: 8)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1926, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1919, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1919, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1911, file: !831, line: 65, baseType: !1917, size: 32, offset: 32)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1935, file: !1938, line: 23, type: !947, isLocal: false, isDefinition: true)
!1935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !1937, splitDebugInlining: false, nameTableKind: None)
!1936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1937 = !{!1933}
!1938 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1941, file: !1945, line: 37, type: !2202, isLocal: false, isDefinition: true)
!1941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1943, retainedTypes: !1952, globals: !2025, splitDebugInlining: false, nameTableKind: None)
!1942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!1943 = !{!1944, !46, !1647}
!1944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1945, line: 63, baseType: !32, size: 32, elements: !1946)
!1945 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1946 = !{!1947, !1948, !1949, !1950, !1951}
!1947 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1948 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1949 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1950 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1951 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1952 = !{!272, !124, !125, !1953, !393, !208, !1983, !1354, !150, !2008}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1956, line: 51, size: 64, elements: !1957)
!1956 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1957 = !{!1958, !1978}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1955, file: !1956, line: 52, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1956, line: 38, baseType: !1960)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!125, !1963, !184, !227}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970, !1976, !1977}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1965, file: !137, line: 380, baseType: !140, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1965, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1965, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1965, file: !137, line: 386, baseType: !1971, size: 32, offset: 96)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1972, file: !137, line: 359, baseType: !150, size: 8)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1972, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1965, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1965, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1955, file: !1956, line: 53, baseType: !1979, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1956, line: 47, baseType: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!125, !1963, !184, !227, !208}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1985, file: !1793, line: 447, baseType: !777, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1985, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1985, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1985, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1985, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1985, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1985, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1985, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1985, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1985, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1985, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1985, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1985, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1985, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1985, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1985, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1985, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1985, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1985, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1985, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1985, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1793, line: 426, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 411, size: 28704, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2010, file: !1793, line: 413, baseType: !1805, size: 256)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2010, file: !1793, line: 414, baseType: !1807, size: 768, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2010, file: !1793, line: 415, baseType: !1805, size: 256, offset: 1024)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2010, file: !1793, line: 416, baseType: !1807, size: 768, offset: 1280)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2010, file: !1793, line: 417, baseType: !1805, size: 256, offset: 2048)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2010, file: !1793, line: 418, baseType: !1807, size: 768, offset: 2304)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2010, file: !1793, line: 419, baseType: !1805, size: 256, offset: 3072)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2010, file: !1793, line: 420, baseType: !1807, size: 768, offset: 3328)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2010, file: !1793, line: 421, baseType: !1805, size: 256, offset: 4096)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2010, file: !1793, line: 422, baseType: !1818, size: 1792, offset: 4352)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2010, file: !1793, line: 423, baseType: !1822, size: 1920, offset: 6144)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2010, file: !1793, line: 424, baseType: !1827, size: 20608, offset: 8064)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2010, file: !1793, line: 425, baseType: !706, size: 32, offset: 28672)
!2025 = !{!1939, !2026, !2153, !2162, !2164, !2167, !2172, !2174, !2179}
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "_kernel", scope: !1941, file: !1945, line: 40, type: !2028, isLocal: false, isDefinition: true)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !2029, line: 158, size: 288, elements: !2030)
!2029 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2030 = !{!2031, !2148}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2028, file: !2029, line: 159, baseType: !2032, size: 192)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2033, size: 192, elements: !1626)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !2029, line: 100, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2037, !2142, !2143, !2144, !2145}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2033, file: !2029, line: 102, baseType: !208, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2033, file: !2029, line: 105, baseType: !393, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2033, file: !2029, line: 108, baseType: !2038, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !2041)
!2040 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2041 = !{!2042, !2104, !2117, !2118, !2119, !2120, !2137}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2039, file: !2040, line: 247, baseType: !2043, size: 384)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !2044)
!2044 = !{!2045, !2071, !2078, !2079, !2080, !2091, !2092, !2093}
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !2040, line: 60, baseType: !2046, size: 64)
!2046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2043, file: !2040, line: 60, size: 64, elements: !2047)
!2047 = !{!2048, !2064}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2046, file: !2040, line: 61, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !2051)
!2050 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !2052)
!2052 = !{!2053, !2059}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !2050, line: 38, baseType: !2054, size: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !2050, line: 38, size: 32, elements: !2055)
!2055 = !{!2056, !2058}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2054, file: !2050, line: 39, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2054, file: !2050, line: 40, baseType: !2057, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !2050, line: 42, baseType: !2060, size: 32, offset: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !2050, line: 42, size: 32, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2060, file: !2050, line: 43, baseType: !2057, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2060, file: !2050, line: 44, baseType: !2057, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2046, file: !2040, line: 62, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !2067)
!2066 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2065, file: !2066, line: 50, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 64, elements: !1160)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2043, file: !2040, line: 68, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2074, file: !2029, line: 232, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !2051)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2043, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2043, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !2040, line: 90, baseType: !2081, size: 16, offset: 112)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2043, file: !2040, line: 90, size: 16, elements: !2082)
!2082 = !{!2083, !2090}
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !2040, line: 91, baseType: !2084, size: 16)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2081, file: !2040, line: 91, size: 16, elements: !2085)
!2085 = !{!2086, !2089}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2084, file: !2040, line: 96, baseType: !2087, size: 8)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !2088)
!2088 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2084, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2081, file: !2040, line: 100, baseType: !227, size: 16)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2043, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2043, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2043, file: !2040, line: 131, baseType: !2094, size: 192, offset: 192)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !2095)
!2095 = !{!2096, !2097, !2103}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2094, file: !2029, line: 245, baseType: !2049, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2094, file: !2029, line: 246, baseType: !2098, size: 32, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !2099)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !2102}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2094, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2039, file: !2040, line: 250, baseType: !2105, size: 288, offset: 384)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !2107)
!2106 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2107 = !{!2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2105, file: !2106, line: 26, baseType: !208, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2105, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2105, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2105, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2105, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2105, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2105, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2105, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2105, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2039, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2039, file: !2040, line: 256, baseType: !2073, size: 64, offset: 704)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2039, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2039, file: !2040, line: 325, baseType: !2121, size: 32, offset: 800)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !2124)
!2123 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2124 = !{!2125, !2134, !2135}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2122, file: !2123, line: 5074, baseType: !2126, size: 96)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !2128)
!2127 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2128 = !{!2129, !2132, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2126, file: !2127, line: 57, baseType: !2130, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2127, line: 57, flags: DIFlagFwdDecl)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2126, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2126, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2122, file: !2123, line: 5075, baseType: !2073, size: 64, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2122, file: !2123, line: 5076, baseType: !2136, offset: 160)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2039, file: !2040, line: 343, baseType: !2138, size: 64, offset: 832)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2138, file: !2106, line: 63, baseType: !208, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2138, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2033, file: !2029, line: 111, baseType: !2038, size: 32, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2033, file: !2029, line: 124, baseType: !125, size: 32, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2033, file: !2029, line: 127, baseType: !150, size: 8, offset: 160)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2033, file: !2029, line: 153, baseType: !2146, offset: 168)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2147, line: 33, elements: !1896)
!2147 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2028, file: !2029, line: 170, baseType: !2149, size: 96, offset: 192)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !2029, line: 83, size: 96, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2149, file: !2029, line: 86, baseType: !2038, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2149, file: !2029, line: 90, baseType: !2077, size: 64, offset: 32)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1941, file: !1945, line: 43, type: !2155, isLocal: false, isDefinition: true, align: 64)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 8192, elements: !2160)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2157, line: 47, size: 8, elements: !2158)
!2157 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2158 = !{!2159}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2156, file: !2157, line: 48, baseType: !142, size: 8)
!2160 = !{!2161}
!2161 = !DISubrange(count: 1024)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1941, file: !1945, line: 44, type: !2039, isLocal: false, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1941, file: !1945, line: 48, type: !2166, isLocal: false, isDefinition: true)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 896, elements: !1626)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1941, file: !1945, line: 86, type: !2169, isLocal: false, isDefinition: true, align: 64)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 16384, elements: !2170)
!2170 = !{!1627, !2171}
!2171 = !DISubrange(count: 2048)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1941, file: !1945, line: 217, type: !153, isLocal: false, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1941, file: !1945, line: 50, type: !2176, isLocal: true, isDefinition: true, align: 64)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 2560, elements: !2177)
!2177 = !{!1627, !2178}
!2178 = !DISubrange(count: 320)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "levels", scope: !2181, file: !1945, line: 232, type: !2201, isLocal: true, isDefinition: true)
!2181 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1945, file: !1945, line: 230, type: !2182, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !2184)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{null, !1944}
!2184 = !{!2185, !2186, !2196, !2200}
!2185 = !DILocalVariable(name: "level", arg: 1, scope: !2181, file: !1945, line: 230, type: !1944)
!2186 = !DILocalVariable(name: "entry", scope: !2181, file: !1945, line: 244, type: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !831, line: 51, size: 64, elements: !2190)
!2190 = !{!2191, !2195}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2189, file: !831, line: 60, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!125, !1963}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2189, file: !831, line: 65, baseType: !1963, size: 32, offset: 32)
!2196 = !DILocalVariable(name: "dev", scope: !2197, file: !1945, line: 247, type: !1963)
!2197 = distinct !DILexicalBlock(scope: !2198, file: !1945, line: 246, column: 64)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !1945, line: 246, column: 2)
!2199 = distinct !DILexicalBlock(scope: !2181, file: !1945, line: 246, column: 2)
!2200 = !DILocalVariable(name: "rc", scope: !2197, file: !1945, line: 248, type: !125)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2187, size: 192, elements: !1600)
!2202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2203, file: !373, line: 17, baseType: !140, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2203, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "states_str", scope: !2209, file: !2210, line: 276, type: !2328, isLocal: true, isDefinition: true)
!2209 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2210, file: !2210, line: 271, type: !2211, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2319)
!2210 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!140, !2213, !393, !272}
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !2040, line: 347, baseType: !2214)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !2216)
!2216 = !{!2217, !2275, !2287, !2288, !2289, !2290, !2303}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2215, file: !2040, line: 247, baseType: !2218, size: 384)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !2219)
!2219 = !{!2220, !2244, !2251, !2252, !2253, !2262, !2263, !2264}
!2220 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !2040, line: 60, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !2040, line: 60, size: 64, elements: !2222)
!2222 = !{!2223, !2238}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2221, file: !2040, line: 61, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !2226)
!2226 = !{!2227, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !2050, line: 38, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !2050, line: 38, size: 32, elements: !2229)
!2229 = !{!2230, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !2050, line: 39, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !2050, line: 40, baseType: !2231, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !2050, line: 42, baseType: !2234, size: 32, offset: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !2050, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2234, file: !2050, line: 43, baseType: !2231, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2234, file: !2050, line: 44, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2221, file: !2040, line: 62, baseType: !2239, size: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2239, file: !2066, line: 50, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2243, size: 64, elements: !1160)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2218, file: !2040, line: 68, baseType: !2245, size: 32, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !2248)
!2248 = !{!2249}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2247, file: !2029, line: 232, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !2225)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2218, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2218, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !2040, line: 90, baseType: !2254, size: 16, offset: 112)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !2040, line: 90, size: 16, elements: !2255)
!2255 = !{!2256, !2261}
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2254, file: !2040, line: 91, baseType: !2257, size: 16)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2254, file: !2040, line: 91, size: 16, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2257, file: !2040, line: 96, baseType: !2087, size: 8)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2257, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2254, file: !2040, line: 100, baseType: !227, size: 16)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2218, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2218, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2218, file: !2040, line: 131, baseType: !2265, size: 192, offset: 192)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !2266)
!2266 = !{!2267, !2268, !2274}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2265, file: !2029, line: 245, baseType: !2224, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2265, file: !2029, line: 246, baseType: !2269, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{null, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2265, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2215, file: !2040, line: 250, baseType: !2276, size: 288, offset: 384)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2276, file: !2106, line: 26, baseType: !208, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2276, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2276, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2276, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2276, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2276, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2276, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2276, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2276, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2215, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2215, file: !2040, line: 256, baseType: !2246, size: 64, offset: 704)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2215, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2215, file: !2040, line: 325, baseType: !2291, size: 32, offset: 800)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !2293)
!2293 = !{!2294, !2300, !2301}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2292, file: !2123, line: 5074, baseType: !2295, size: 96)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !2296)
!2296 = !{!2297, !2298, !2299}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2295, file: !2127, line: 57, baseType: !2130, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2295, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2295, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2292, file: !2123, line: 5075, baseType: !2246, size: 64, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2292, file: !2123, line: 5076, baseType: !2302, offset: 160)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2215, file: !2040, line: 343, baseType: !2304, size: 64, offset: 832)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2304, file: !2106, line: 63, baseType: !208, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2304, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2310, globals: !2314, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2310 = !{!124, !140, !1788, !150, !125, !2311, !24, !272, !393, !208, !2312}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2313)
!2313 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2314 = !{!2207, !2315}
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "states_sz", scope: !2209, file: !2210, line: 279, type: !2317, isLocal: true, isDefinition: true)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2318, size: 256, elements: !337)
!2318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2320 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2209, file: !2210, line: 271, type: !2213)
!2321 = !DILocalVariable(name: "buf", arg: 2, scope: !2209, file: !2210, line: 271, type: !393)
!2322 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2209, file: !2210, line: 271, type: !272)
!2323 = !DILocalVariable(name: "off", scope: !2209, file: !2210, line: 273, type: !272)
!2324 = !DILocalVariable(name: "bit", scope: !2209, file: !2210, line: 274, type: !150)
!2325 = !DILocalVariable(name: "thread_state", scope: !2209, file: !2210, line: 275, type: !150)
!2326 = !DILocalVariable(name: "index", scope: !2327, file: !2210, line: 293, type: !150)
!2327 = distinct !DILexicalBlock(scope: !2209, file: !2210, line: 293, column: 2)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2331, file: !2433, line: 56, type: !2422, isLocal: false, isDefinition: true)
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2333, globals: !2430, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2333 = !{!2334, !393, !124, !2428, !184, !1788, !1354, !125, !208, !2312, !2429}
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !2336)
!2336 = !{!2337, !2395, !2407, !2408, !2409, !2410, !2423}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2335, file: !2040, line: 247, baseType: !2338, size: 384)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !2339)
!2339 = !{!2340, !2364, !2371, !2372, !2373, !2382, !2383, !2384}
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2338, file: !2040, line: 60, baseType: !2341, size: 64)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2338, file: !2040, line: 60, size: 64, elements: !2342)
!2342 = !{!2343, !2358}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2341, file: !2040, line: 61, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !2346)
!2346 = !{!2347, !2353}
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2345, file: !2050, line: 38, baseType: !2348, size: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2345, file: !2050, line: 38, size: 32, elements: !2349)
!2349 = !{!2350, !2352}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2348, file: !2050, line: 39, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2348, file: !2050, line: 40, baseType: !2351, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !2345, file: !2050, line: 42, baseType: !2354, size: 32, offset: 32)
!2354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2345, file: !2050, line: 42, size: 32, elements: !2355)
!2355 = !{!2356, !2357}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2354, file: !2050, line: 43, baseType: !2351, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2354, file: !2050, line: 44, baseType: !2351, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2341, file: !2040, line: 62, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2359, file: !2066, line: 50, baseType: !2362, size: 64)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2363, size: 64, elements: !1160)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2338, file: !2040, line: 68, baseType: !2365, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !2368)
!2368 = !{!2369}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2367, file: !2029, line: 232, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !2345)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2338, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2338, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!2373 = !DIDerivedType(tag: DW_TAG_member, scope: !2338, file: !2040, line: 90, baseType: !2374, size: 16, offset: 112)
!2374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2338, file: !2040, line: 90, size: 16, elements: !2375)
!2375 = !{!2376, !2381}
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2374, file: !2040, line: 91, baseType: !2377, size: 16)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2374, file: !2040, line: 91, size: 16, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2377, file: !2040, line: 96, baseType: !2087, size: 8)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2377, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2374, file: !2040, line: 100, baseType: !227, size: 16)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2338, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2338, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2338, file: !2040, line: 131, baseType: !2385, size: 192, offset: 192)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !2386)
!2386 = !{!2387, !2388, !2394}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2385, file: !2029, line: 245, baseType: !2344, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2385, file: !2029, line: 246, baseType: !2389, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !2390)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{null, !2393}
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2385, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2335, file: !2040, line: 250, baseType: !2396, size: 288, offset: 384)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2396, file: !2106, line: 26, baseType: !208, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2396, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2396, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2396, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2396, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2396, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2396, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2396, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2396, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2335, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2335, file: !2040, line: 256, baseType: !2366, size: 64, offset: 704)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2335, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2335, file: !2040, line: 325, baseType: !2411, size: 32, offset: 800)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !2413)
!2413 = !{!2414, !2420, !2421}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2412, file: !2123, line: 5074, baseType: !2415, size: 96)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !2416)
!2416 = !{!2417, !2418, !2419}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2415, file: !2127, line: 57, baseType: !2130, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2415, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2415, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2412, file: !2123, line: 5075, baseType: !2366, size: 64, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2412, file: !2123, line: 5076, baseType: !2422, offset: 160)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2335, file: !2040, line: 343, baseType: !2424, size: 64, offset: 832)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2424, file: !2106, line: 63, baseType: !208, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2424, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2430 = !{!2329, !2431, !2434, !2436}
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2331, file: !2433, line: 404, type: !125, isLocal: true, isDefinition: true)
!2433 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2331, file: !2433, line: 405, type: !125, isLocal: true, isDefinition: true)
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "pending_current", scope: !2331, file: !2433, line: 425, type: !2334, isLocal: true, isDefinition: true)
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2440, file: !2470, line: 15, type: !2312, isLocal: true, isDefinition: true)
!2440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2442, globals: !2467, splitDebugInlining: false, nameTableKind: None)
!2441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2442 = !{!1788, !124, !1354, !208, !2312, !125, !2443, !393, !1790}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !2445)
!2445 = !{!2446, !2461, !2466}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2444, file: !2029, line: 245, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !2449)
!2449 = !{!2450, !2456}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !2050, line: 38, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !2050, line: 38, size: 32, elements: !2452)
!2452 = !{!2453, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2451, file: !2050, line: 39, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2451, file: !2050, line: 40, baseType: !2454, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !2050, line: 42, baseType: !2457, size: 32, offset: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !2050, line: 42, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2457, file: !2050, line: 43, baseType: !2454, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2457, file: !2050, line: 44, baseType: !2454, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2444, file: !2029, line: 246, baseType: !2462, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{null, !2443}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2444, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!2467 = !{!2438, !2468, !2472, !2474}
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2440, file: !2470, line: 19, type: !2471, isLocal: true, isDefinition: true)
!2470 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2440, file: !2470, line: 25, type: !125, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2440, file: !2470, line: 17, type: !2476, isLocal: true, isDefinition: true)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !2448)
!2477 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2478, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2478 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2483, retainedTypes: !2503, splitDebugInlining: false, nameTableKind: None)
!2482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2483 = !{!2484, !2492}
!2484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2485, line: 69, baseType: !32, size: 32, elements: !2486)
!2485 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2486 = !{!2487, !2488, !2489, !2490, !2491}
!2487 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2488 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2489 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2490 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2491 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2485, line: 56, baseType: !32, size: 32, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2494 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2495 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2496 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2497 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2498 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2499 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2500 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2501 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2502 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2503 = !{!125, !2484, !2492, !2504, !2088, !160, !2506, !2507, !151, !228, !140, !272, !124, !22, !32, !387, !2509, !2510, !389, !388, !391, !390, !2505, !2511, !2512, !2513, !2514}
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2485, line: 31, baseType: !2505)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2485, line: 32, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2313)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2516 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2519, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2519 = !{!140, !151, !125, !32}
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2524 = !{!184, !846, !2525}
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !2526)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !2528)
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2527, file: !848, line: 65, baseType: !853, size: 1408)
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2532, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2532 = !{!184, !2533, !150}
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !2534)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !2536)
!2536 = !{!2537}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2535, file: !848, line: 65, baseType: !853, size: 1408)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2540, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2540 = !{!2541, !2547, !184, !150, !227}
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2542, line: 95, baseType: !2543)
!2542 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2542, line: 91, size: 96, elements: !2545)
!2545 = !{!2546, !2552, !2553}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2544, file: !2542, line: 92, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !2548)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !848, line: 64, size: 1408, elements: !2550)
!2550 = !{!2551}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2549, file: !848, line: 65, baseType: !853, size: 1408)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2544, file: !2542, line: 93, baseType: !184, size: 32, offset: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2544, file: !2542, line: 94, baseType: !32, size: 32, offset: 64)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2556, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2556 = !{!2557, !46}
!2557 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2558, line: 27, baseType: !32, size: 32, elements: !2559)
!2558 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2559 = !{!2560, !2561, !2562, !2563, !2564}
!2560 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2561 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2562 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2563 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2564 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2567, retainedTypes: !2568, splitDebugInlining: false, nameTableKind: None)
!2566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2567 = !{!1647, !2557, !46}
!2568 = !{!2569, !2570, !124, !125, !1354, !208, !150, !2587}
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !702, line: 249, baseType: !1647)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1793, line: 426, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 411, size: 28704, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2572, file: !1793, line: 413, baseType: !1805, size: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !1793, line: 414, baseType: !1807, size: 768, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2572, file: !1793, line: 415, baseType: !1805, size: 256, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2572, file: !1793, line: 416, baseType: !1807, size: 768, offset: 1280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2572, file: !1793, line: 417, baseType: !1805, size: 256, offset: 2048)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2572, file: !1793, line: 418, baseType: !1807, size: 768, offset: 2304)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2572, file: !1793, line: 419, baseType: !1805, size: 256, offset: 3072)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2572, file: !1793, line: 420, baseType: !1807, size: 768, offset: 3328)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2572, file: !1793, line: 421, baseType: !1805, size: 256, offset: 4096)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2572, file: !1793, line: 422, baseType: !1818, size: 1792, offset: 4352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2572, file: !1793, line: 423, baseType: !1822, size: 1920, offset: 6144)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2572, file: !1793, line: 424, baseType: !1827, size: 20608, offset: 8064)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2572, file: !1793, line: 425, baseType: !706, size: 32, offset: 28672)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !1793, line: 447, baseType: !777, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2616, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2616 = !{!124, !125, !22, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2619, file: !1793, line: 447, baseType: !777, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2619, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2619, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2619, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2619, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2619, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2619, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2619, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2619, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2619, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2619, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2619, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2619, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2619, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2619, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2619, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2619, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2619, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2619, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2619, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2644, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2644 = !{!2645, !124, !125}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2647, file: !1793, line: 447, baseType: !777, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2647, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2647, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2647, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2647, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2647, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2647, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2647, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2647, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2647, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2647, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2647, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2647, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2647, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2647, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2647, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2647, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2647, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2647, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2647, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2647, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2672, splitDebugInlining: false, nameTableKind: None)
!2671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2672 = !{!2673, !208, !124, !125}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2676)
!2675 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2676 = !{!2677, !2682, !2687, !2692, !2697, !2702, !2707, !2712}
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 99, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 99, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2678, file: !2675, line: 99, baseType: !208, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2678, file: !2675, line: 99, baseType: !208, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 100, baseType: !2683, size: 32, offset: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 100, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2683, file: !2675, line: 100, baseType: !208, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2683, file: !2675, line: 100, baseType: !208, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 101, baseType: !2688, size: 32, offset: 64)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 101, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2688, file: !2675, line: 101, baseType: !208, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2688, file: !2675, line: 101, baseType: !208, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 102, baseType: !2693, size: 32, offset: 96)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 102, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2693, file: !2675, line: 102, baseType: !208, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2693, file: !2675, line: 102, baseType: !208, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 103, baseType: !2698, size: 32, offset: 128)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 103, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2698, file: !2675, line: 103, baseType: !208, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2698, file: !2675, line: 103, baseType: !208, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 104, baseType: !2703, size: 32, offset: 160)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 104, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2703, file: !2675, line: 104, baseType: !208, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2703, file: !2675, line: 104, baseType: !208, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 105, baseType: !2708, size: 32, offset: 192)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 105, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2708, file: !2675, line: 105, baseType: !208, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2708, file: !2675, line: 105, baseType: !208, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2674, file: !2675, line: 106, baseType: !208, size: 32, offset: 224)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2556, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2715 = !{!2716, !124, !125, !2741, !2784, !208}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2718, file: !1793, line: 447, baseType: !777, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2718, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2718, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2718, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2718, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2718, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2718, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2718, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2718, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2718, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2718, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2718, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2718, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2718, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2718, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2718, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2718, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2718, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2718, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2718, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2743, file: !2675, line: 107, baseType: !2746, size: 256)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2747)
!2747 = !{!2748, !2753, !2758, !2763, !2768, !2773, !2778, !2783}
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 99, baseType: !2749, size: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 99, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2749, file: !2675, line: 99, baseType: !208, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2749, file: !2675, line: 99, baseType: !208, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 100, baseType: !2754, size: 32, offset: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 100, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2754, file: !2675, line: 100, baseType: !208, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2754, file: !2675, line: 100, baseType: !208, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 101, baseType: !2759, size: 32, offset: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 101, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2759, file: !2675, line: 101, baseType: !208, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2759, file: !2675, line: 101, baseType: !208, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 102, baseType: !2764, size: 32, offset: 96)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 102, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2764, file: !2675, line: 102, baseType: !208, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2764, file: !2675, line: 102, baseType: !208, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 103, baseType: !2769, size: 32, offset: 128)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 103, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2769, file: !2675, line: 103, baseType: !208, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2769, file: !2675, line: 103, baseType: !208, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 104, baseType: !2774, size: 32, offset: 160)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 104, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2774, file: !2675, line: 104, baseType: !208, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2774, file: !2675, line: 104, baseType: !208, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 105, baseType: !2779, size: 32, offset: 192)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 105, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2779, file: !2675, line: 105, baseType: !208, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2779, file: !2675, line: 105, baseType: !208, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2675, line: 106, baseType: !208, size: 32, offset: 224)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1646, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2787 = !{!2569, !1354, !150, !208, !2788, !2805}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1793, line: 426, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 411, size: 28704, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2790, file: !1793, line: 413, baseType: !1805, size: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !1793, line: 414, baseType: !1807, size: 768, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2790, file: !1793, line: 415, baseType: !1805, size: 256, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2790, file: !1793, line: 416, baseType: !1807, size: 768, offset: 1280)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2790, file: !1793, line: 417, baseType: !1805, size: 256, offset: 2048)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2790, file: !1793, line: 418, baseType: !1807, size: 768, offset: 2304)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2790, file: !1793, line: 419, baseType: !1805, size: 256, offset: 3072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2790, file: !1793, line: 420, baseType: !1807, size: 768, offset: 3328)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2790, file: !1793, line: 421, baseType: !1805, size: 256, offset: 4096)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2790, file: !1793, line: 422, baseType: !1818, size: 1792, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2790, file: !1793, line: 423, baseType: !1822, size: 1920, offset: 6144)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2790, file: !1793, line: 424, baseType: !1827, size: 20608, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2790, file: !1793, line: 425, baseType: !706, size: 32, offset: 28672)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2807)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2808)
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2807, file: !1793, line: 447, baseType: !777, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2807, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2807, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2807, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2807, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2807, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2807, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2807, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2807, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2807, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2807, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2807, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2807, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2807, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2807, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2807, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2807, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2807, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2807, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2807, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2807, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2832, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2832 = !{!2833, !124, !125}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1793, line: 468, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 445, size: 1120, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2835, file: !1793, line: 447, baseType: !777, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2835, file: !1793, line: 448, baseType: !706, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2835, file: !1793, line: 449, baseType: !706, size: 32, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2835, file: !1793, line: 450, baseType: !706, size: 32, offset: 96)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2835, file: !1793, line: 451, baseType: !706, size: 32, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2835, file: !1793, line: 452, baseType: !706, size: 32, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2835, file: !1793, line: 453, baseType: !1842, size: 96, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2835, file: !1793, line: 454, baseType: !706, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2835, file: !1793, line: 455, baseType: !706, size: 32, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2835, file: !1793, line: 456, baseType: !706, size: 32, offset: 352)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2835, file: !1793, line: 457, baseType: !706, size: 32, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2835, file: !1793, line: 458, baseType: !706, size: 32, offset: 416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2835, file: !1793, line: 459, baseType: !706, size: 32, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2835, file: !1793, line: 460, baseType: !706, size: 32, offset: 480)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2835, file: !1793, line: 461, baseType: !1851, size: 64, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2835, file: !1793, line: 462, baseType: !777, size: 32, offset: 576)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2835, file: !1793, line: 463, baseType: !777, size: 32, offset: 608)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2835, file: !1793, line: 464, baseType: !1855, size: 128, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2835, file: !1793, line: 465, baseType: !1859, size: 160, offset: 768)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2835, file: !1793, line: 466, baseType: !1863, size: 160, offset: 928)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2835, file: !1793, line: 467, baseType: !706, size: 32, offset: 1088)
!2858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2860 = !{!142, !393, !272, !912, !2861, !151, !124}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2867, splitDebugInlining: false, nameTableKind: None)
!2866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2867 = !{!826, !208}
!2868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2870, retainedTypes: !2880, splitDebugInlining: false, nameTableKind: None)
!2869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2870 = !{!2871}
!2871 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2872, line: 62, baseType: !32, size: 32, elements: !2873)
!2872 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879}
!2874 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2875 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2876 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2877 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2878 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2879 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2880 = !{!2881, !2943, !208, !153, !826}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !702, line: 8619, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 8563, size: 3072, elements: !2884)
!2884 = !{!2885, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2883, file: !702, line: 8564, baseType: !2886, size: 768)
!2886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 768, elements: !2887)
!2887 = !{!2888}
!2888 = !DISubrange(count: 96)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2883, file: !702, line: 8565, baseType: !706, size: 32, offset: 768)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2883, file: !702, line: 8566, baseType: !706, size: 32, offset: 800)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2883, file: !702, line: 8567, baseType: !706, size: 32, offset: 832)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2883, file: !702, line: 8568, baseType: !706, size: 32, offset: 864)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2883, file: !702, line: 8569, baseType: !706, size: 32, offset: 896)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2883, file: !702, line: 8570, baseType: !706, size: 32, offset: 928)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2883, file: !702, line: 8571, baseType: !706, size: 32, offset: 960)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2883, file: !702, line: 8572, baseType: !706, size: 32, offset: 992)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2883, file: !702, line: 8573, baseType: !706, size: 32, offset: 1024)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2883, file: !702, line: 8574, baseType: !363, size: 96, offset: 1056)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2883, file: !702, line: 8575, baseType: !706, size: 32, offset: 1152)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2883, file: !702, line: 8576, baseType: !363, size: 96, offset: 1184)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2883, file: !702, line: 8577, baseType: !706, size: 32, offset: 1280)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2883, file: !702, line: 8578, baseType: !363, size: 96, offset: 1312)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2883, file: !702, line: 8579, baseType: !706, size: 32, offset: 1408)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2883, file: !702, line: 8580, baseType: !706, size: 32, offset: 1440)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2883, file: !702, line: 8581, baseType: !706, size: 32, offset: 1472)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2883, file: !702, line: 8582, baseType: !706, size: 32, offset: 1504)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2883, file: !702, line: 8583, baseType: !706, size: 32, offset: 1536)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2883, file: !702, line: 8584, baseType: !706, size: 32, offset: 1568)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2883, file: !702, line: 8585, baseType: !706, size: 32, offset: 1600)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2883, file: !702, line: 8586, baseType: !706, size: 32, offset: 1632)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2883, file: !702, line: 8587, baseType: !706, size: 32, offset: 1664)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2883, file: !702, line: 8588, baseType: !706, size: 32, offset: 1696)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2883, file: !702, line: 8589, baseType: !706, size: 32, offset: 1728)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2883, file: !702, line: 8590, baseType: !706, size: 32, offset: 1760)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2883, file: !702, line: 8591, baseType: !706, size: 32, offset: 1792)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2883, file: !702, line: 8592, baseType: !706, size: 32, offset: 1824)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2883, file: !702, line: 8593, baseType: !706, size: 32, offset: 1856)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2883, file: !702, line: 8594, baseType: !706, size: 32, offset: 1888)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2883, file: !702, line: 8595, baseType: !706, size: 32, offset: 1920)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2883, file: !702, line: 8596, baseType: !706, size: 32, offset: 1952)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2883, file: !702, line: 8597, baseType: !706, size: 32, offset: 1984)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2883, file: !702, line: 8598, baseType: !706, size: 32, offset: 2016)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2883, file: !702, line: 8599, baseType: !706, size: 32, offset: 2048)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2883, file: !702, line: 8600, baseType: !363, size: 96, offset: 2080)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2883, file: !702, line: 8601, baseType: !706, size: 32, offset: 2176)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2883, file: !702, line: 8602, baseType: !363, size: 96, offset: 2208)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2883, file: !702, line: 8603, baseType: !706, size: 32, offset: 2304)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2883, file: !702, line: 8604, baseType: !363, size: 96, offset: 2336)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2883, file: !702, line: 8605, baseType: !706, size: 32, offset: 2432)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2883, file: !702, line: 8606, baseType: !706, size: 32, offset: 2464)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2883, file: !702, line: 8607, baseType: !706, size: 32, offset: 2496)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2883, file: !702, line: 8608, baseType: !706, size: 32, offset: 2528)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2883, file: !702, line: 8609, baseType: !706, size: 32, offset: 2560)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2883, file: !702, line: 8610, baseType: !363, size: 96, offset: 2592)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2883, file: !702, line: 8611, baseType: !706, size: 32, offset: 2688)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2883, file: !702, line: 8612, baseType: !363, size: 96, offset: 2720)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2883, file: !702, line: 8613, baseType: !706, size: 32, offset: 2816)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2883, file: !702, line: 8614, baseType: !363, size: 96, offset: 2848)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2883, file: !702, line: 8615, baseType: !706, size: 32, offset: 2944)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2883, file: !702, line: 8616, baseType: !706, size: 32, offset: 2976)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2883, file: !702, line: 8617, baseType: !706, size: 32, offset: 3008)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2883, file: !702, line: 8618, baseType: !706, size: 32, offset: 3040)
!2943 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2946, splitDebugInlining: false, nameTableKind: None)
!2945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2946 = !{!2947, !2951, !1193}
!2947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1194, line: 49, baseType: !32, size: 32, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2950 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2951 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1194, line: 56, baseType: !32, size: 32, elements: !2952)
!2952 = !{!2953, !2954, !2955, !2956, !2957}
!2953 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2954 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2955 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2956 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2957 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2958 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2959, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2960, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2959 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2960 = !{!2961, !2965}
!2961 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1367, line: 179, baseType: !32, size: 32, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2964 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2965 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1367, line: 194, baseType: !32, size: 32, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2968 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2969 = !{!208, !1595}
!2970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2972, retainedTypes: !2983, splitDebugInlining: false, nameTableKind: None)
!2971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!2972 = !{!417, !2973}
!2973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2872, line: 128, baseType: !32, size: 32, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2975 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2976 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2977 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2978 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2979 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2980 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2981 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2982 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2983 = !{!208, !2984, !3036, !826}
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !702, line: 4575, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 4532, size: 390144, elements: !2987)
!2987 = !{!2988, !2989, !2990, !2991, !2992, !2993, !3001, !3002, !3010, !3011}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2986, file: !702, line: 4533, baseType: !706, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2986, file: !702, line: 4534, baseType: !706, size: 32, offset: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2986, file: !702, line: 4535, baseType: !706, size: 32, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2986, file: !702, line: 4536, baseType: !706, size: 32, offset: 96)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2986, file: !702, line: 4537, baseType: !711, size: 16256, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2986, file: !702, line: 4543, baseType: !2994, size: 4224, offset: 16384)
!2994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2995, size: 4224, elements: !722)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2986, file: !702, line: 4538, size: 128, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2995, file: !702, line: 4539, baseType: !706, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2995, file: !702, line: 4540, baseType: !706, size: 32, offset: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2995, file: !702, line: 4541, baseType: !706, size: 32, offset: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2995, file: !702, line: 4542, baseType: !706, size: 32, offset: 96)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2986, file: !702, line: 4544, baseType: !725, size: 110464, offset: 20608)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2986, file: !702, line: 4550, baseType: !3003, size: 24448, offset: 131072)
!3003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3004, size: 24448, elements: !736)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2986, file: !702, line: 4545, size: 128, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3004, file: !702, line: 4546, baseType: !706, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !3004, file: !702, line: 4547, baseType: !706, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !3004, file: !702, line: 4548, baseType: !706, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !3004, file: !702, line: 4549, baseType: !706, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2986, file: !702, line: 4551, baseType: !739, size: 106624, offset: 155520)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2986, file: !702, line: 4574, baseType: !3012, size: 128000, offset: 262144)
!3012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3013, size: 128000, elements: !770)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2986, file: !702, line: 4552, size: 1024, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !3013, file: !702, line: 4553, baseType: !706, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !3013, file: !702, line: 4554, baseType: !706, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !3013, file: !702, line: 4555, baseType: !706, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !3013, file: !702, line: 4556, baseType: !706, size: 32, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !3013, file: !702, line: 4557, baseType: !706, size: 32, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !3013, file: !702, line: 4558, baseType: !706, size: 32, offset: 160)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !3013, file: !702, line: 4559, baseType: !706, size: 32, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !3013, file: !702, line: 4560, baseType: !706, size: 32, offset: 224)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !3013, file: !702, line: 4561, baseType: !706, size: 32, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !3013, file: !702, line: 4562, baseType: !706, size: 32, offset: 288)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !3013, file: !702, line: 4563, baseType: !706, size: 32, offset: 320)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !3013, file: !702, line: 4564, baseType: !706, size: 32, offset: 352)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !3013, file: !702, line: 4565, baseType: !706, size: 32, offset: 384)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !3013, file: !702, line: 4566, baseType: !706, size: 32, offset: 416)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !3013, file: !702, line: 4567, baseType: !706, size: 32, offset: 448)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !3013, file: !702, line: 4568, baseType: !706, size: 32, offset: 480)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3013, file: !702, line: 4569, baseType: !763, size: 384, offset: 512)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !3013, file: !702, line: 4570, baseType: !706, size: 32, offset: 896)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !3013, file: !702, line: 4571, baseType: !706, size: 32, offset: 928)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !3013, file: !702, line: 4572, baseType: !706, size: 32, offset: 960)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3013, file: !702, line: 4573, baseType: !706, size: 32, offset: 992)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !702, line: 8619, baseType: !3038)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 8563, size: 3072, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3038, file: !702, line: 8564, baseType: !2886, size: 768)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3038, file: !702, line: 8565, baseType: !706, size: 32, offset: 768)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3038, file: !702, line: 8566, baseType: !706, size: 32, offset: 800)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3038, file: !702, line: 8567, baseType: !706, size: 32, offset: 832)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3038, file: !702, line: 8568, baseType: !706, size: 32, offset: 864)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3038, file: !702, line: 8569, baseType: !706, size: 32, offset: 896)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3038, file: !702, line: 8570, baseType: !706, size: 32, offset: 928)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3038, file: !702, line: 8571, baseType: !706, size: 32, offset: 960)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3038, file: !702, line: 8572, baseType: !706, size: 32, offset: 992)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3038, file: !702, line: 8573, baseType: !706, size: 32, offset: 1024)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3038, file: !702, line: 8574, baseType: !363, size: 96, offset: 1056)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3038, file: !702, line: 8575, baseType: !706, size: 32, offset: 1152)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3038, file: !702, line: 8576, baseType: !363, size: 96, offset: 1184)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3038, file: !702, line: 8577, baseType: !706, size: 32, offset: 1280)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3038, file: !702, line: 8578, baseType: !363, size: 96, offset: 1312)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3038, file: !702, line: 8579, baseType: !706, size: 32, offset: 1408)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3038, file: !702, line: 8580, baseType: !706, size: 32, offset: 1440)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3038, file: !702, line: 8581, baseType: !706, size: 32, offset: 1472)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3038, file: !702, line: 8582, baseType: !706, size: 32, offset: 1504)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3038, file: !702, line: 8583, baseType: !706, size: 32, offset: 1536)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3038, file: !702, line: 8584, baseType: !706, size: 32, offset: 1568)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3038, file: !702, line: 8585, baseType: !706, size: 32, offset: 1600)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3038, file: !702, line: 8586, baseType: !706, size: 32, offset: 1632)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3038, file: !702, line: 8587, baseType: !706, size: 32, offset: 1664)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3038, file: !702, line: 8588, baseType: !706, size: 32, offset: 1696)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3038, file: !702, line: 8589, baseType: !706, size: 32, offset: 1728)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3038, file: !702, line: 8590, baseType: !706, size: 32, offset: 1760)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3038, file: !702, line: 8591, baseType: !706, size: 32, offset: 1792)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3038, file: !702, line: 8592, baseType: !706, size: 32, offset: 1824)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3038, file: !702, line: 8593, baseType: !706, size: 32, offset: 1856)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3038, file: !702, line: 8594, baseType: !706, size: 32, offset: 1888)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3038, file: !702, line: 8595, baseType: !706, size: 32, offset: 1920)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3038, file: !702, line: 8596, baseType: !706, size: 32, offset: 1952)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3038, file: !702, line: 8597, baseType: !706, size: 32, offset: 1984)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3038, file: !702, line: 8598, baseType: !706, size: 32, offset: 2016)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3038, file: !702, line: 8599, baseType: !706, size: 32, offset: 2048)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3038, file: !702, line: 8600, baseType: !363, size: 96, offset: 2080)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3038, file: !702, line: 8601, baseType: !706, size: 32, offset: 2176)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3038, file: !702, line: 8602, baseType: !363, size: 96, offset: 2208)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3038, file: !702, line: 8603, baseType: !706, size: 32, offset: 2304)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3038, file: !702, line: 8604, baseType: !363, size: 96, offset: 2336)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3038, file: !702, line: 8605, baseType: !706, size: 32, offset: 2432)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3038, file: !702, line: 8606, baseType: !706, size: 32, offset: 2464)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3038, file: !702, line: 8607, baseType: !706, size: 32, offset: 2496)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3038, file: !702, line: 8608, baseType: !706, size: 32, offset: 2528)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3038, file: !702, line: 8609, baseType: !706, size: 32, offset: 2560)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3038, file: !702, line: 8610, baseType: !363, size: 96, offset: 2592)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3038, file: !702, line: 8611, baseType: !706, size: 32, offset: 2688)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3038, file: !702, line: 8612, baseType: !363, size: 96, offset: 2720)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3038, file: !702, line: 8613, baseType: !706, size: 32, offset: 2816)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3038, file: !702, line: 8614, baseType: !363, size: 96, offset: 2848)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3038, file: !702, line: 8615, baseType: !706, size: 32, offset: 2944)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3038, file: !702, line: 8616, baseType: !706, size: 32, offset: 2976)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3038, file: !702, line: 8617, baseType: !706, size: 32, offset: 3008)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3038, file: !702, line: 8618, baseType: !706, size: 32, offset: 3040)
!3095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3096, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3097, splitDebugInlining: false, nameTableKind: None)
!3096 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!3097 = !{!124, !272}
!3098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3099, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3100, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3099 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!3100 = !{!3101, !3108, !46}
!3101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3102, line: 14, baseType: !32, size: 32, elements: !3103)
!3102 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3103 = !{!3104, !3105, !3106, !3107}
!3104 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3105 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3106 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3107 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3102, line: 42, baseType: !32, size: 32, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115}
!3110 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3111 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3112 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3113 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3114 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3115 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3117 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!3118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3120, splitDebugInlining: false, nameTableKind: None)
!3119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!3120 = !{!22, !124, !125}
!3121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3122, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3122 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!3123 = !{!"Ubuntu clang version 14.0.6"}
!3124 = !{i32 7, !"Dwarf Version", i32 4}
!3125 = !{i32 2, !"Debug Info Version", i32 3}
!3126 = !{i32 1, !"wchar_size", i32 4}
!3127 = !{i32 1, !"min_enum_size", i32 4}
!3128 = !{i32 1, !"branch-target-enforcement", i32 0}
!3129 = !{i32 1, !"sign-return-address", i32 0}
!3130 = !{i32 1, !"sign-return-address-all", i32 0}
!3131 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3132 = !{i32 7, !"frame-pointer", i32 2}
!3133 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3134, file: !3134, line: 26, type: !3135, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2477, retainedNodes: !1896)
!3134 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null}
!3137 = !DILocation(line: 28, column: 1, scope: !3133)
!3138 = !{i64 2155073029, i64 2155073049, i64 2155073112}
!3139 = !DILocation(line: 29, column: 1, scope: !3133)
!3140 = !{i64 2155073444, i64 2155073464, i64 2155073527}
!3141 = !DILocation(line: 30, column: 1, scope: !3133)
!3142 = !{i64 2155073863, i64 2155073883, i64 2155073946}
!3143 = !DILocation(line: 31, column: 1, scope: !3133)
!3144 = !{i64 2155074282, i64 2155074302, i64 2155074365}
!3145 = !DILocation(line: 33, column: 1, scope: !3133)
!3146 = !{i64 2155074574, i64 2155074594, i64 2155074657}
!3147 = !DILocation(line: 35, column: 1, scope: !3133)
!3148 = !{i64 2155074899, i64 2155074919, i64 2155074982}
!3149 = !DILocation(line: 50, column: 1, scope: !3133)
!3150 = !{i64 2155075326, i64 2155075346, i64 2155075409}
!3151 = !DILocation(line: 54, column: 1, scope: !3133)
!3152 = !{i64 2155075765, i64 2155075785, i64 2155075848}
!3153 = !DILocation(line: 61, column: 1, scope: !3133)
!3154 = !{i64 2155076082, i64 2155076102, i64 2155076165}
!3155 = !DILocation(line: 63, column: 1, scope: !3133)
!3156 = !{i64 2155076462, i64 2155076482, i64 2155076545}
!3157 = !DILocation(line: 64, column: 1, scope: !3133)
!3158 = !{i64 2155081045, i64 2155081065, i64 2155081128}
!3159 = !DILocation(line: 65, column: 1, scope: !3133)
!3160 = !{i64 2155081543, i64 2155081563, i64 2155081626}
!3161 = !DILocation(line: 66, column: 1, scope: !3133)
!3162 = !{i64 2155082025, i64 2155082045, i64 2155082108}
!3163 = !DILocation(line: 67, column: 1, scope: !3133)
!3164 = !{i64 2155082532, i64 2155082552, i64 2155082615}
!3165 = !DILocation(line: 68, column: 1, scope: !3133)
!3166 = !{i64 2155083020, i64 2155083040, i64 2155083103}
!3167 = !DILocation(line: 70, column: 1, scope: !3133)
!3168 = !{i64 2155083488, i64 2155083508, i64 2155083571}
!3169 = !DILocation(line: 71, column: 1, scope: !3133)
!3170 = !{i64 2155083930, i64 2155083950, i64 2155084013}
!3171 = !DILocation(line: 72, column: 1, scope: !3133)
!3172 = !{i64 2155084388, i64 2155084408, i64 2155084471}
!3173 = !DILocation(line: 97, column: 1, scope: !3133)
!3174 = !{i64 2155084695, i64 2155084715, i64 2155084778}
!3175 = !DILocation(line: 99, column: 1, scope: !3133)
!3176 = !{i64 2155084913, i64 2155084933, i64 2155084996}
!3177 = !DILocation(line: 102, column: 1, scope: !3133)
!3178 = !{i64 2155085170, i64 2155085190, i64 2155085253}
!3179 = !DILocation(line: 105, column: 1, scope: !3133)
!3180 = !{i64 2155085410, i64 2155085430, i64 2155085493}
!3181 = !DILocation(line: 115, column: 1, scope: !3133)
!3182 = !{i64 2155085749, i64 2155085769, i64 2155085832}
!3183 = !DILocation(line: 118, column: 1, scope: !3133)
!3184 = !{i64 2155086093, i64 2155086113, i64 2155086176}
!3185 = !DILocation(line: 32, column: 1, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !3133, file: !3187, discriminator: 0)
!3187 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3188 = !{i64 2155086449, i64 2155086469, i64 2155086532}
!3189 = !DILocation(line: 33, column: 1, scope: !3186)
!3190 = !{i64 2155086961, i64 2155086981, i64 2155087044}
!3191 = !DILocation(line: 53, column: 1, scope: !3186)
!3192 = !{i64 2155087469, i64 2155087489, i64 2155087552}
!3193 = !DILocation(line: 54, column: 1, scope: !3186)
!3194 = !{i64 2155087887, i64 2155087907, i64 2155087970}
!3195 = !DILocation(line: 55, column: 1, scope: !3186)
!3196 = !{i64 2155088305, i64 2155088325, i64 2155088388}
!3197 = !DILocation(line: 56, column: 1, scope: !3186)
!3198 = !{i64 2155088723, i64 2155088743, i64 2155088806}
!3199 = !DILocation(line: 57, column: 1, scope: !3186)
!3200 = !{i64 2155089141, i64 2155089161, i64 2155089224}
!3201 = !DILocation(line: 58, column: 1, scope: !3186)
!3202 = !{i64 2155089559, i64 2155089579, i64 2155089642}
!3203 = !DILocation(line: 59, column: 1, scope: !3186)
!3204 = !{i64 2155089977, i64 2155089997, i64 2155090060}
!3205 = !DILocation(line: 60, column: 1, scope: !3186)
!3206 = !{i64 2155090401, i64 2155090421, i64 2155090484}
!3207 = !DILocation(line: 61, column: 1, scope: !3186)
!3208 = !{i64 2155094779, i64 2155094799, i64 2155094862}
!3209 = !DILocation(line: 70, column: 1, scope: !3186)
!3210 = !{i64 2155095008, i64 2155095028, i64 2155095091}
!3211 = !DILocation(line: 72, column: 1, scope: !3186)
!3212 = !{i64 2155095340, i64 2155095360, i64 2155095423}
!3213 = !DILocation(line: 73, column: 1, scope: !3186)
!3214 = !{i64 2155095790, i64 2155095810, i64 2155095873}
!3215 = !DILocation(line: 74, column: 1, scope: !3186)
!3216 = !{i64 2155096240, i64 2155096260, i64 2155096323}
!3217 = !DILocation(line: 75, column: 1, scope: !3186)
!3218 = !{i64 2155096690, i64 2155096710, i64 2155096773}
!3219 = !DILocation(line: 76, column: 1, scope: !3186)
!3220 = !{i64 2155097140, i64 2155097160, i64 2155097223}
!3221 = !DILocation(line: 77, column: 1, scope: !3186)
!3222 = !{i64 2155097590, i64 2155097610, i64 2155097673}
!3223 = !DILocation(line: 78, column: 1, scope: !3186)
!3224 = !{i64 2155098040, i64 2155098060, i64 2155098123}
!3225 = !DILocation(line: 79, column: 1, scope: !3186)
!3226 = !{i64 2155098490, i64 2155098510, i64 2155098573}
!3227 = !DILocation(line: 80, column: 1, scope: !3186)
!3228 = !{i64 2155098943, i64 2155098963, i64 2155099026}
!3229 = !DILocation(line: 84, column: 1, scope: !3186)
!3230 = !{i64 2155099275, i64 2155099295, i64 2155099358}
!3231 = !DILocation(line: 106, column: 1, scope: !3186)
!3232 = !{i64 2155099525, i64 2155099545, i64 2155099608}
!3233 = !DILocation(line: 11, column: 1, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3133, file: !3235, discriminator: 0)
!3235 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3236 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3237)
!3237 = !{!3238, !3239}
!3238 = !DILocalVariable(name: "dev", arg: 1, scope: !3236, file: !294, line: 80, type: !134)
!3239 = !DILocalVariable(name: "flags", scope: !3236, file: !294, line: 82, type: !208)
!3240 = !DILocation(line: 0, scope: !3236)
!3241 = !DILocation(line: 84, column: 10, scope: !3236)
!3242 = !DILocation(line: 85, column: 13, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3236, file: !294, line: 85, column: 6)
!3244 = !DILocation(line: 85, column: 28, scope: !3243)
!3245 = !DILocation(line: 85, column: 6, scope: !3236)
!3246 = !DILocation(line: 86, column: 3, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !294, line: 86, column: 3)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !294, line: 86, column: 3)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !294, line: 86, column: 3)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !294, line: 86, column: 3)
!3251 = distinct !DILexicalBlock(scope: !3243, file: !294, line: 85, column: 35)
!3252 = !DILocation(line: 88, column: 3, scope: !3251)
!3253 = !DILocation(line: 91, column: 13, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3236, file: !294, line: 91, column: 6)
!3255 = !DILocation(line: 91, column: 29, scope: !3254)
!3256 = !DILocation(line: 91, column: 6, scope: !3236)
!3257 = !DILocation(line: 92, column: 3, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !294, line: 92, column: 3)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !294, line: 92, column: 3)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !294, line: 92, column: 3)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !294, line: 92, column: 3)
!3262 = distinct !DILexicalBlock(scope: !3254, file: !294, line: 91, column: 36)
!3263 = !DILocation(line: 94, column: 3, scope: !3262)
!3264 = !DILocation(line: 97, column: 13, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3236, file: !294, line: 97, column: 6)
!3266 = !DILocation(line: 97, column: 37, scope: !3265)
!3267 = !DILocation(line: 97, column: 6, scope: !3236)
!3268 = !DILocation(line: 98, column: 3, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !294, line: 98, column: 3)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !294, line: 98, column: 3)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !294, line: 98, column: 3)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !294, line: 98, column: 3)
!3273 = distinct !DILexicalBlock(scope: !3265, file: !294, line: 97, column: 44)
!3274 = !DILocation(line: 100, column: 3, scope: !3273)
!3275 = !DILocation(line: 103, column: 12, scope: !3236)
!3276 = !DILocation(line: 105, column: 2, scope: !3236)
!3277 = !DILocation(line: 107, column: 1, scope: !3236)
!3278 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3279)
!3279 = !{!3280, !3281, !3282}
!3280 = !DILocalVariable(name: "dev", arg: 1, scope: !3278, file: !128, line: 108, type: !134)
!3281 = !DILocalVariable(name: "api", scope: !3278, file: !128, line: 110, type: !126)
!3282 = !DILocalVariable(name: "tmp", scope: !3278, file: !128, line: 111, type: !125)
!3283 = !DILocation(line: 0, scope: !3278)
!3284 = !DILocation(line: 113, column: 42, scope: !3278)
!3285 = !DILocation(line: 115, column: 13, scope: !3278)
!3286 = !DILocation(line: 115, column: 8, scope: !3278)
!3287 = !DILocation(line: 125, column: 2, scope: !3278)
!3288 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3289, file: !3289, line: 175, type: !3290, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3292)
!3289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!142, !125}
!3292 = !{!3293}
!3293 = !DILocalVariable(name: "level", arg: 1, scope: !3288, file: !3289, line: 175, type: !125)
!3294 = !DILocation(line: 0, scope: !3288)
!3295 = !DILocation(line: 177, column: 2, scope: !3288)
!3296 = !DILocation(line: 189, column: 1, scope: !3288)
!3297 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3304, !3305, !3306, !3307, !3308, !3309}
!3299 = !DILocalVariable(name: "dev", arg: 1, scope: !3297, file: !294, line: 109, type: !134)
!3300 = !DILocalVariable(name: "ecb_key", scope: !3297, file: !294, line: 112, type: !311)
!3301 = !DILocalVariable(name: "ecb_plaintext", scope: !3297, file: !294, line: 116, type: !311)
!3302 = !DILocalVariable(name: "ecb_ciphertext", scope: !3297, file: !294, line: 120, type: !3303)
!3303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!3304 = !DILocalVariable(name: "encrypted", scope: !3297, file: !294, line: 125, type: !311)
!3305 = !DILocalVariable(name: "decrypted", scope: !3297, file: !294, line: 126, type: !311)
!3306 = !DILocalVariable(name: "ini", scope: !3297, file: !294, line: 127, type: !166)
!3307 = !DILocalVariable(name: "encrypt", scope: !3297, file: !294, line: 132, type: !181)
!3308 = !DILocalVariable(name: "decrypt", scope: !3297, file: !294, line: 138, type: !181)
!3309 = !DILabel(scope: !3297, name: "out", file: !294, line: 191)
!3310 = !DILocation(line: 0, scope: !3297)
!3311 = !DILocation(line: 112, column: 2, scope: !3297)
!3312 = !DILocation(line: 112, column: 10, scope: !3297)
!3313 = !DILocation(line: 116, column: 2, scope: !3297)
!3314 = !DILocation(line: 116, column: 10, scope: !3297)
!3315 = !DILocation(line: 120, column: 2, scope: !3297)
!3316 = !DILocation(line: 120, column: 16, scope: !3297)
!3317 = !DILocation(line: 125, column: 2, scope: !3297)
!3318 = !DILocation(line: 125, column: 10, scope: !3297)
!3319 = !DILocation(line: 126, column: 2, scope: !3297)
!3320 = !DILocation(line: 126, column: 10, scope: !3297)
!3321 = !DILocation(line: 127, column: 2, scope: !3297)
!3322 = !DILocation(line: 127, column: 20, scope: !3297)
!3323 = !DILocation(line: 129, column: 7, scope: !3297)
!3324 = !DILocation(line: 127, column: 26, scope: !3297)
!3325 = !DILocation(line: 130, column: 12, scope: !3297)
!3326 = !DILocation(line: 132, column: 2, scope: !3297)
!3327 = !DILocation(line: 132, column: 20, scope: !3297)
!3328 = !DILocation(line: 132, column: 30, scope: !3297)
!3329 = !DILocation(line: 138, column: 2, scope: !3297)
!3330 = !DILocation(line: 138, column: 20, scope: !3297)
!3331 = !DILocation(line: 138, column: 30, scope: !3297)
!3332 = !DILocation(line: 145, column: 6, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 145, column: 6)
!3334 = !DILocation(line: 145, column: 6, scope: !3297)
!3335 = !DILocation(line: 151, column: 6, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 151, column: 6)
!3337 = !DILocation(line: 151, column: 6, scope: !3297)
!3338 = !DILocation(line: 152, column: 3, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !294, line: 152, column: 3)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !294, line: 152, column: 3)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !294, line: 152, column: 3)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !294, line: 152, column: 3)
!3343 = distinct !DILexicalBlock(scope: !3336, file: !294, line: 151, column: 39)
!3344 = !DILocation(line: 153, column: 3, scope: !3343)
!3345 = !DILocation(line: 156, column: 2, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !294, line: 156, column: 2)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !294, line: 156, column: 2)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !294, line: 156, column: 2)
!3349 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 156, column: 2)
!3350 = !DILocation(line: 158, column: 21, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 158, column: 6)
!3352 = !DILocation(line: 158, column: 6, scope: !3351)
!3353 = !DILocation(line: 158, column: 6, scope: !3297)
!3354 = !DILocation(line: 159, column: 3, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !294, line: 159, column: 3)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !294, line: 159, column: 3)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !294, line: 159, column: 3)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !294, line: 159, column: 3)
!3359 = distinct !DILexicalBlock(scope: !3351, file: !294, line: 158, column: 71)
!3360 = !DILocation(line: 161, column: 51, scope: !3359)
!3361 = !DILocation(line: 161, column: 3, scope: !3359)
!3362 = !DILocation(line: 163, column: 3, scope: !3359)
!3363 = !DILocation(line: 166, column: 2, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !294, line: 166, column: 2)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !294, line: 166, column: 2)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !294, line: 166, column: 2)
!3367 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 166, column: 2)
!3368 = !DILocation(line: 167, column: 2, scope: !3297)
!3369 = !DILocation(line: 169, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 169, column: 6)
!3371 = !DILocation(line: 169, column: 6, scope: !3297)
!3372 = !DILocation(line: 175, column: 6, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 175, column: 6)
!3374 = !DILocation(line: 175, column: 6, scope: !3297)
!3375 = !DILocation(line: 176, column: 3, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !294, line: 176, column: 3)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !294, line: 176, column: 3)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !294, line: 176, column: 3)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !294, line: 176, column: 3)
!3380 = distinct !DILexicalBlock(scope: !3373, file: !294, line: 175, column: 39)
!3381 = !DILocation(line: 177, column: 3, scope: !3380)
!3382 = !DILocation(line: 180, column: 2, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !294, line: 180, column: 2)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !294, line: 180, column: 2)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !294, line: 180, column: 2)
!3386 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 180, column: 2)
!3387 = !DILocation(line: 182, column: 21, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 182, column: 6)
!3389 = !DILocation(line: 182, column: 6, scope: !3388)
!3390 = !DILocation(line: 182, column: 6, scope: !3297)
!3391 = !DILocation(line: 183, column: 3, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !294, line: 183, column: 3)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !294, line: 183, column: 3)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !294, line: 183, column: 3)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !294, line: 183, column: 3)
!3396 = distinct !DILexicalBlock(scope: !3388, file: !294, line: 182, column: 69)
!3397 = !DILocation(line: 185, column: 50, scope: !3396)
!3398 = !DILocation(line: 185, column: 3, scope: !3396)
!3399 = !DILocation(line: 187, column: 3, scope: !3396)
!3400 = !DILocation(line: 190, column: 2, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !294, line: 190, column: 2)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !294, line: 190, column: 2)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !294, line: 190, column: 2)
!3404 = distinct !DILexicalBlock(scope: !3297, file: !294, line: 190, column: 2)
!3405 = !DILocation(line: 190, column: 2, scope: !3404)
!3406 = !DILocation(line: 191, column: 1, scope: !3297)
!3407 = !DILocation(line: 192, column: 2, scope: !3297)
!3408 = !DILocation(line: 193, column: 1, scope: !3297)
!3409 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3410)
!3410 = !{!3411, !3412, !3413, !3414, !3415, !3416, !3417}
!3411 = !DILocalVariable(name: "dev", arg: 1, scope: !3409, file: !128, line: 159, type: !134)
!3412 = !DILocalVariable(name: "ctx", arg: 2, scope: !3409, file: !128, line: 160, type: !165)
!3413 = !DILocalVariable(name: "algo", arg: 3, scope: !3409, file: !128, line: 161, type: !39)
!3414 = !DILocalVariable(name: "mode", arg: 4, scope: !3409, file: !128, line: 162, type: !30)
!3415 = !DILocalVariable(name: "optype", arg: 5, scope: !3409, file: !128, line: 163, type: !42)
!3416 = !DILocalVariable(name: "api", scope: !3409, file: !128, line: 165, type: !126)
!3417 = !DILocalVariable(name: "flags", scope: !3409, file: !128, line: 166, type: !208)
!3418 = !DILocation(line: 0, scope: !3409)
!3419 = !DILocation(line: 168, column: 42, scope: !3409)
!3420 = !DILocation(line: 169, column: 7, scope: !3409)
!3421 = !DILocation(line: 169, column: 14, scope: !3409)
!3422 = !DILocation(line: 170, column: 11, scope: !3409)
!3423 = !DILocation(line: 170, column: 23, scope: !3409)
!3424 = !DILocation(line: 187, column: 14, scope: !3409)
!3425 = !DILocation(line: 187, column: 9, scope: !3409)
!3426 = !DILocation(line: 187, column: 2, scope: !3409)
!3427 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3428)
!3428 = !{!3429, !3430}
!3429 = !DILocalVariable(name: "ctx", arg: 1, scope: !3427, file: !128, line: 249, type: !165)
!3430 = !DILocalVariable(name: "pkt", arg: 2, scope: !3427, file: !128, line: 250, type: !180)
!3431 = !DILocation(line: 0, scope: !3427)
!3432 = !DILocation(line: 255, column: 7, scope: !3427)
!3433 = !DILocation(line: 255, column: 11, scope: !3427)
!3434 = !DILocation(line: 256, column: 18, scope: !3427)
!3435 = !DILocation(line: 256, column: 9, scope: !3427)
!3436 = !DILocation(line: 256, column: 2, scope: !3427)
!3437 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3438, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3440)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{null, !846, !184, !272}
!3440 = !{!3441, !3442, !3443, !3444, !3445}
!3441 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3437, file: !294, line: 50, type: !846)
!3442 = !DILocalVariable(name: "result", arg: 2, scope: !3437, file: !294, line: 51, type: !184)
!3443 = !DILocalVariable(name: "length", arg: 3, scope: !3437, file: !294, line: 51, type: !272)
!3444 = !DILocalVariable(name: "i", scope: !3437, file: !294, line: 53, type: !125)
!3445 = !DILocalVariable(name: "j", scope: !3437, file: !294, line: 53, type: !125)
!3446 = !DILocation(line: 0, scope: !3437)
!3447 = !DILocation(line: 55, column: 2, scope: !3437)
!3448 = !DILocation(line: 57, column: 23, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 57, column: 2)
!3450 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 57, column: 2)
!3451 = !DILocation(line: 57, column: 2, scope: !3450)
!3452 = !DILocation(line: 66, column: 2, scope: !3437)
!3453 = !DILocation(line: 68, column: 2, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 68, column: 2)
!3455 = !DILocation(line: 58, column: 21, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3449, file: !294, line: 57, column: 43)
!3457 = !DILocation(line: 58, column: 3, scope: !3456)
!3458 = !DILocation(line: 60, column: 9, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !294, line: 60, column: 7)
!3460 = !DILocation(line: 60, column: 7, scope: !3456)
!3461 = !DILocation(line: 61, column: 4, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3459, file: !294, line: 60, column: 16)
!3463 = !DILocation(line: 63, column: 3, scope: !3462)
!3464 = !DILocation(line: 0, scope: !3450)
!3465 = !DILocation(line: 57, column: 34, scope: !3449)
!3466 = !DILocation(line: 57, column: 39, scope: !3449)
!3467 = distinct !{!3467, !3451, !3468}
!3468 = !DILocation(line: 64, column: 2, scope: !3450)
!3469 = !DILocation(line: 69, column: 21, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !294, line: 68, column: 43)
!3471 = distinct !DILexicalBlock(scope: !3454, file: !294, line: 68, column: 2)
!3472 = !DILocation(line: 69, column: 3, scope: !3470)
!3473 = !DILocation(line: 71, column: 9, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !294, line: 71, column: 7)
!3475 = !DILocation(line: 71, column: 7, scope: !3470)
!3476 = !DILocation(line: 72, column: 4, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3474, file: !294, line: 71, column: 16)
!3478 = !DILocation(line: 74, column: 3, scope: !3477)
!3479 = !DILocation(line: 0, scope: !3454)
!3480 = !DILocation(line: 68, column: 34, scope: !3471)
!3481 = !DILocation(line: 68, column: 39, scope: !3471)
!3482 = !DILocation(line: 68, column: 23, scope: !3471)
!3483 = distinct !{!3483, !3453, !3484}
!3484 = !DILocation(line: 75, column: 2, scope: !3454)
!3485 = !DILocation(line: 77, column: 2, scope: !3437)
!3486 = !DILocation(line: 78, column: 1, scope: !3437)
!3487 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3488)
!3488 = !{!3489, !3490, !3491}
!3489 = !DILocalVariable(name: "dev", arg: 1, scope: !3487, file: !128, line: 201, type: !134)
!3490 = !DILocalVariable(name: "ctx", arg: 2, scope: !3487, file: !128, line: 202, type: !165)
!3491 = !DILocalVariable(name: "api", scope: !3487, file: !128, line: 204, type: !126)
!3492 = !DILocation(line: 0, scope: !3487)
!3493 = !DILocation(line: 206, column: 42, scope: !3487)
!3494 = !DILocation(line: 208, column: 14, scope: !3487)
!3495 = !DILocation(line: 208, column: 9, scope: !3487)
!3496 = !DILocation(line: 208, column: 2, scope: !3487)
!3497 = !DILocation(line: 0, scope: !293)
!3498 = !DILocation(line: 207, column: 2, scope: !293)
!3499 = !DILocation(line: 207, column: 10, scope: !293)
!3500 = !DILocation(line: 208, column: 2, scope: !293)
!3501 = !DILocation(line: 208, column: 10, scope: !293)
!3502 = !DILocation(line: 209, column: 2, scope: !293)
!3503 = !DILocation(line: 209, column: 20, scope: !293)
!3504 = !DILocation(line: 211, column: 7, scope: !293)
!3505 = !DILocation(line: 209, column: 26, scope: !293)
!3506 = !DILocation(line: 212, column: 12, scope: !293)
!3507 = !DILocation(line: 214, column: 2, scope: !293)
!3508 = !DILocation(line: 214, column: 20, scope: !293)
!3509 = !DILocation(line: 214, column: 30, scope: !293)
!3510 = !DILocation(line: 220, column: 2, scope: !293)
!3511 = !DILocation(line: 220, column: 20, scope: !293)
!3512 = !DILocation(line: 220, column: 30, scope: !293)
!3513 = !DILocation(line: 232, column: 6, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3515 = !DILocation(line: 232, column: 6, scope: !293)
!3516 = !DILocation(line: 238, column: 6, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3518 = !DILocation(line: 238, column: 6, scope: !293)
!3519 = !DILocation(line: 239, column: 3, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !294, line: 239, column: 3)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !294, line: 239, column: 3)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !294, line: 239, column: 3)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !294, line: 239, column: 3)
!3524 = distinct !DILexicalBlock(scope: !3517, file: !294, line: 238, column: 41)
!3525 = !DILocation(line: 240, column: 3, scope: !3524)
!3526 = !DILocation(line: 243, column: 2, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !294, line: 243, column: 2)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !294, line: 243, column: 2)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !294, line: 243, column: 2)
!3530 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3531 = !DILocation(line: 245, column: 21, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3533 = !DILocation(line: 245, column: 6, scope: !3532)
!3534 = !DILocation(line: 245, column: 6, scope: !293)
!3535 = !DILocation(line: 246, column: 3, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !294, line: 246, column: 3)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !294, line: 246, column: 3)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !294, line: 246, column: 3)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !294, line: 246, column: 3)
!3540 = distinct !DILexicalBlock(scope: !3532, file: !294, line: 245, column: 71)
!3541 = !DILocation(line: 248, column: 51, scope: !3540)
!3542 = !DILocation(line: 248, column: 3, scope: !3540)
!3543 = !DILocation(line: 250, column: 3, scope: !3540)
!3544 = !DILocation(line: 253, column: 2, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !294, line: 253, column: 2)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !294, line: 253, column: 2)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !294, line: 253, column: 2)
!3548 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3549 = !DILocation(line: 254, column: 2, scope: !293)
!3550 = !DILocation(line: 256, column: 6, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3552 = !DILocation(line: 256, column: 6, scope: !293)
!3553 = !DILocation(line: 263, column: 6, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3555 = !DILocation(line: 263, column: 6, scope: !293)
!3556 = !DILocation(line: 264, column: 3, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !294, line: 264, column: 3)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !294, line: 264, column: 3)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !294, line: 264, column: 3)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !294, line: 264, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3554, file: !294, line: 263, column: 48)
!3562 = !DILocation(line: 265, column: 3, scope: !3561)
!3563 = !DILocation(line: 268, column: 2, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !294, line: 268, column: 2)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !294, line: 268, column: 2)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !294, line: 268, column: 2)
!3567 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3568 = !DILocation(line: 270, column: 21, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3570 = !DILocation(line: 270, column: 6, scope: !3569)
!3571 = !DILocation(line: 270, column: 6, scope: !293)
!3572 = !DILocation(line: 271, column: 3, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !294, line: 271, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !294, line: 271, column: 3)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !294, line: 271, column: 3)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !294, line: 271, column: 3)
!3577 = distinct !DILexicalBlock(scope: !3569, file: !294, line: 270, column: 61)
!3578 = !DILocation(line: 273, column: 46, scope: !3577)
!3579 = !DILocation(line: 273, column: 3, scope: !3577)
!3580 = !DILocation(line: 275, column: 3, scope: !3577)
!3581 = !DILocation(line: 278, column: 2, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !294, line: 278, column: 2)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !294, line: 278, column: 2)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 278, column: 2)
!3585 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3586 = !DILocation(line: 278, column: 2, scope: !3585)
!3587 = !DILocation(line: 279, column: 1, scope: !293)
!3588 = !DILocation(line: 280, column: 2, scope: !293)
!3589 = !DILocation(line: 281, column: 1, scope: !293)
!3590 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3591)
!3591 = !{!3592, !3593, !3594}
!3592 = !DILocalVariable(name: "ctx", arg: 1, scope: !3590, file: !128, line: 270, type: !165)
!3593 = !DILocalVariable(name: "pkt", arg: 2, scope: !3590, file: !128, line: 271, type: !180)
!3594 = !DILocalVariable(name: "iv", arg: 3, scope: !3590, file: !128, line: 271, type: !184)
!3595 = !DILocation(line: 0, scope: !3590)
!3596 = !DILocation(line: 276, column: 7, scope: !3590)
!3597 = !DILocation(line: 276, column: 11, scope: !3590)
!3598 = !DILocation(line: 277, column: 18, scope: !3590)
!3599 = !DILocation(line: 277, column: 9, scope: !3590)
!3600 = !DILocation(line: 277, column: 2, scope: !3590)
!3601 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3602)
!3602 = !{!3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610}
!3603 = !DILocalVariable(name: "dev", arg: 1, scope: !3601, file: !294, line: 294, type: !134)
!3604 = !DILocalVariable(name: "encrypted", scope: !3601, file: !294, line: 296, type: !304)
!3605 = !DILocalVariable(name: "decrypted", scope: !3601, file: !294, line: 297, type: !304)
!3606 = !DILocalVariable(name: "ini", scope: !3601, file: !294, line: 298, type: !166)
!3607 = !DILocalVariable(name: "encrypt", scope: !3601, file: !294, line: 305, type: !181)
!3608 = !DILocalVariable(name: "decrypt", scope: !3601, file: !294, line: 311, type: !181)
!3609 = !DILocalVariable(name: "iv", scope: !3601, file: !294, line: 317, type: !363)
!3610 = !DILabel(scope: !3601, name: "out", file: !294, line: 368)
!3611 = !DILocation(line: 0, scope: !3601)
!3612 = !DILocation(line: 296, column: 2, scope: !3601)
!3613 = !DILocation(line: 296, column: 10, scope: !3601)
!3614 = !DILocation(line: 297, column: 2, scope: !3601)
!3615 = !DILocation(line: 297, column: 10, scope: !3601)
!3616 = !DILocation(line: 298, column: 2, scope: !3601)
!3617 = !DILocation(line: 298, column: 20, scope: !3601)
!3618 = !DILocation(line: 298, column: 26, scope: !3601)
!3619 = !DILocation(line: 300, column: 7, scope: !3601)
!3620 = !DILocation(line: 303, column: 24, scope: !3601)
!3621 = !DILocation(line: 301, column: 12, scope: !3601)
!3622 = !DILocation(line: 305, column: 2, scope: !3601)
!3623 = !DILocation(line: 305, column: 20, scope: !3601)
!3624 = !DILocation(line: 305, column: 30, scope: !3601)
!3625 = !DILocation(line: 311, column: 2, scope: !3601)
!3626 = !DILocation(line: 311, column: 20, scope: !3601)
!3627 = !DILocation(line: 311, column: 30, scope: !3601)
!3628 = !DILocation(line: 317, column: 2, scope: !3601)
!3629 = !DILocation(line: 317, column: 10, scope: !3601)
!3630 = !DILocation(line: 322, column: 6, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 322, column: 6)
!3632 = !DILocation(line: 322, column: 6, scope: !3601)
!3633 = !DILocation(line: 328, column: 6, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 328, column: 6)
!3635 = !DILocation(line: 328, column: 6, scope: !3601)
!3636 = !DILocation(line: 329, column: 3, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !294, line: 329, column: 3)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !294, line: 329, column: 3)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !294, line: 329, column: 3)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !294, line: 329, column: 3)
!3641 = distinct !DILexicalBlock(scope: !3634, file: !294, line: 328, column: 41)
!3642 = !DILocation(line: 330, column: 3, scope: !3641)
!3643 = !DILocation(line: 333, column: 2, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !294, line: 333, column: 2)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !294, line: 333, column: 2)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !294, line: 333, column: 2)
!3647 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 333, column: 2)
!3648 = !DILocation(line: 335, column: 21, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 335, column: 6)
!3650 = !DILocation(line: 335, column: 6, scope: !3649)
!3651 = !DILocation(line: 335, column: 6, scope: !3601)
!3652 = !DILocation(line: 336, column: 3, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !294, line: 336, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !294, line: 336, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !294, line: 336, column: 3)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !294, line: 336, column: 3)
!3657 = distinct !DILexicalBlock(scope: !3649, file: !294, line: 335, column: 71)
!3658 = !DILocation(line: 338, column: 51, scope: !3657)
!3659 = !DILocation(line: 338, column: 3, scope: !3657)
!3660 = !DILocation(line: 340, column: 3, scope: !3657)
!3661 = !DILocation(line: 343, column: 2, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !294, line: 343, column: 2)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !294, line: 343, column: 2)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !294, line: 343, column: 2)
!3665 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 343, column: 2)
!3666 = !DILocation(line: 344, column: 2, scope: !3601)
!3667 = !DILocation(line: 346, column: 6, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 346, column: 6)
!3669 = !DILocation(line: 346, column: 6, scope: !3601)
!3670 = !DILocation(line: 352, column: 6, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 352, column: 6)
!3672 = !DILocation(line: 352, column: 6, scope: !3601)
!3673 = !DILocation(line: 353, column: 3, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !294, line: 353, column: 3)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !294, line: 353, column: 3)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !294, line: 353, column: 3)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !294, line: 353, column: 3)
!3678 = distinct !DILexicalBlock(scope: !3671, file: !294, line: 352, column: 41)
!3679 = !DILocation(line: 354, column: 3, scope: !3678)
!3680 = !DILocation(line: 357, column: 2, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !294, line: 357, column: 2)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !294, line: 357, column: 2)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !294, line: 357, column: 2)
!3684 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 357, column: 2)
!3685 = !DILocation(line: 359, column: 21, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 359, column: 6)
!3687 = !DILocation(line: 359, column: 6, scope: !3686)
!3688 = !DILocation(line: 359, column: 6, scope: !3601)
!3689 = !DILocation(line: 360, column: 3, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !294, line: 360, column: 3)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !294, line: 360, column: 3)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !294, line: 360, column: 3)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !294, line: 360, column: 3)
!3694 = distinct !DILexicalBlock(scope: !3686, file: !294, line: 359, column: 61)
!3695 = !DILocation(line: 363, column: 14, scope: !3694)
!3696 = !DILocation(line: 362, column: 3, scope: !3694)
!3697 = !DILocation(line: 364, column: 3, scope: !3694)
!3698 = !DILocation(line: 367, column: 2, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !294, line: 367, column: 2)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !294, line: 367, column: 2)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !294, line: 367, column: 2)
!3702 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 367, column: 2)
!3703 = !DILocation(line: 367, column: 2, scope: !3702)
!3704 = !DILocation(line: 368, column: 1, scope: !3601)
!3705 = !DILocation(line: 369, column: 2, scope: !3601)
!3706 = !DILocation(line: 370, column: 1, scope: !3601)
!3707 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3708)
!3708 = !{!3709, !3710, !3711}
!3709 = !DILocalVariable(name: "ctx", arg: 1, scope: !3707, file: !128, line: 297, type: !165)
!3710 = !DILocalVariable(name: "pkt", arg: 2, scope: !3707, file: !128, line: 298, type: !180)
!3711 = !DILocalVariable(name: "iv", arg: 3, scope: !3707, file: !128, line: 298, type: !184)
!3712 = !DILocation(line: 0, scope: !3707)
!3713 = !DILocation(line: 303, column: 7, scope: !3707)
!3714 = !DILocation(line: 303, column: 11, scope: !3707)
!3715 = !DILocation(line: 304, column: 18, scope: !3707)
!3716 = !DILocation(line: 304, column: 9, scope: !3707)
!3717 = !DILocation(line: 304, column: 2, scope: !3707)
!3718 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3719)
!3719 = !{!3720, !3721, !3725, !3727, !3728, !3729, !3730, !3731}
!3720 = !DILocalVariable(name: "dev", arg: 1, scope: !3718, file: !294, line: 394, type: !134)
!3721 = !DILocalVariable(name: "encrypted", scope: !3718, file: !294, line: 396, type: !3722)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3723)
!3723 = !{!3724}
!3724 = !DISubrange(count: 50)
!3725 = !DILocalVariable(name: "decrypted", scope: !3718, file: !294, line: 397, type: !3726)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !1285)
!3727 = !DILocalVariable(name: "ini", scope: !3718, file: !294, line: 398, type: !166)
!3728 = !DILocalVariable(name: "encrypt", scope: !3718, file: !294, line: 407, type: !181)
!3729 = !DILocalVariable(name: "ccm_op", scope: !3718, file: !294, line: 413, type: !203)
!3730 = !DILocalVariable(name: "decrypt", scope: !3718, file: !294, line: 425, type: !181)
!3731 = !DILabel(scope: !3718, name: "out", file: !294, line: 480)
!3732 = !DILocation(line: 0, scope: !3718)
!3733 = !DILocation(line: 396, column: 2, scope: !3718)
!3734 = !DILocation(line: 396, column: 10, scope: !3718)
!3735 = !DILocation(line: 397, column: 2, scope: !3718)
!3736 = !DILocation(line: 397, column: 10, scope: !3718)
!3737 = !DILocation(line: 398, column: 2, scope: !3718)
!3738 = !DILocation(line: 398, column: 20, scope: !3718)
!3739 = !DILocation(line: 398, column: 26, scope: !3718)
!3740 = !DILocation(line: 400, column: 7, scope: !3718)
!3741 = !DILocation(line: 401, column: 15, scope: !3718)
!3742 = !DILocation(line: 401, column: 27, scope: !3718)
!3743 = !DILocation(line: 405, column: 12, scope: !3718)
!3744 = !DILocation(line: 407, column: 2, scope: !3718)
!3745 = !DILocation(line: 407, column: 20, scope: !3718)
!3746 = !DILocation(line: 407, column: 30, scope: !3718)
!3747 = !DILocation(line: 413, column: 2, scope: !3718)
!3748 = !DILocation(line: 413, column: 25, scope: !3718)
!3749 = !DILocation(line: 413, column: 34, scope: !3718)
!3750 = !DILocation(line: 423, column: 20, scope: !3718)
!3751 = !DILocation(line: 425, column: 2, scope: !3718)
!3752 = !DILocation(line: 425, column: 20, scope: !3718)
!3753 = !DILocation(line: 425, column: 30, scope: !3718)
!3754 = !DILocation(line: 432, column: 6, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 432, column: 6)
!3756 = !DILocation(line: 432, column: 6, scope: !3718)
!3757 = !DILocation(line: 438, column: 13, scope: !3718)
!3758 = !DILocation(line: 439, column: 6, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 439, column: 6)
!3760 = !DILocation(line: 439, column: 6, scope: !3718)
!3761 = !DILocation(line: 440, column: 3, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !294, line: 440, column: 3)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !294, line: 440, column: 3)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !294, line: 440, column: 3)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !294, line: 440, column: 3)
!3766 = distinct !DILexicalBlock(scope: !3759, file: !294, line: 439, column: 47)
!3767 = !DILocation(line: 441, column: 3, scope: !3766)
!3768 = !DILocation(line: 444, column: 2, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !294, line: 444, column: 2)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !294, line: 444, column: 2)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 444, column: 2)
!3772 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 444, column: 2)
!3773 = !DILocation(line: 446, column: 21, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 446, column: 6)
!3775 = !DILocation(line: 446, column: 6, scope: !3774)
!3776 = !DILocation(line: 446, column: 6, scope: !3718)
!3777 = !DILocation(line: 447, column: 3, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !294, line: 447, column: 3)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !294, line: 447, column: 3)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !294, line: 447, column: 3)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !294, line: 447, column: 3)
!3782 = distinct !DILexicalBlock(scope: !3774, file: !294, line: 446, column: 67)
!3783 = !DILocation(line: 450, column: 14, scope: !3782)
!3784 = !DILocation(line: 449, column: 3, scope: !3782)
!3785 = !DILocation(line: 451, column: 3, scope: !3782)
!3786 = !DILocation(line: 454, column: 2, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !294, line: 454, column: 2)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !294, line: 454, column: 2)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !294, line: 454, column: 2)
!3790 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 454, column: 2)
!3791 = !DILocation(line: 455, column: 2, scope: !3718)
!3792 = !DILocation(line: 457, column: 6, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 457, column: 6)
!3794 = !DILocation(line: 457, column: 6, scope: !3718)
!3795 = !DILocation(line: 463, column: 13, scope: !3718)
!3796 = !DILocation(line: 464, column: 6, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 464, column: 6)
!3798 = !DILocation(line: 464, column: 6, scope: !3718)
!3799 = !DILocation(line: 465, column: 3, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 465, column: 3)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !294, line: 465, column: 3)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !294, line: 465, column: 3)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !294, line: 465, column: 3)
!3804 = distinct !DILexicalBlock(scope: !3797, file: !294, line: 464, column: 47)
!3805 = !DILocation(line: 466, column: 3, scope: !3804)
!3806 = !DILocation(line: 469, column: 2, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !294, line: 469, column: 2)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !294, line: 469, column: 2)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !294, line: 469, column: 2)
!3810 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 469, column: 2)
!3811 = !DILocation(line: 471, column: 21, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 471, column: 6)
!3813 = !DILocation(line: 471, column: 6, scope: !3812)
!3814 = !DILocation(line: 471, column: 6, scope: !3718)
!3815 = !DILocation(line: 472, column: 3, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !294, line: 472, column: 3)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !294, line: 472, column: 3)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !294, line: 472, column: 3)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !294, line: 472, column: 3)
!3820 = distinct !DILexicalBlock(scope: !3812, file: !294, line: 471, column: 59)
!3821 = !DILocation(line: 475, column: 14, scope: !3820)
!3822 = !DILocation(line: 474, column: 3, scope: !3820)
!3823 = !DILocation(line: 476, column: 3, scope: !3820)
!3824 = !DILocation(line: 479, column: 2, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !294, line: 479, column: 2)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !294, line: 479, column: 2)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !294, line: 479, column: 2)
!3828 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 479, column: 2)
!3829 = !DILocation(line: 479, column: 2, scope: !3828)
!3830 = !DILocation(line: 480, column: 1, scope: !3718)
!3831 = !DILocation(line: 481, column: 2, scope: !3718)
!3832 = !DILocation(line: 482, column: 1, scope: !3718)
!3833 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3834)
!3834 = !{!3835, !3836, !3837}
!3835 = !DILocalVariable(name: "ctx", arg: 1, scope: !3833, file: !128, line: 319, type: !165)
!3836 = !DILocalVariable(name: "pkt", arg: 2, scope: !3833, file: !128, line: 320, type: !202)
!3837 = !DILocalVariable(name: "nonce", arg: 3, scope: !3833, file: !128, line: 320, type: !184)
!3838 = !DILocation(line: 0, scope: !3833)
!3839 = !DILocation(line: 325, column: 7, scope: !3833)
!3840 = !DILocation(line: 325, column: 12, scope: !3833)
!3841 = !DILocation(line: 325, column: 16, scope: !3833)
!3842 = !DILocation(line: 326, column: 18, scope: !3833)
!3843 = !DILocation(line: 326, column: 9, scope: !3833)
!3844 = !DILocation(line: 326, column: 2, scope: !3833)
!3845 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3846)
!3846 = !{!3847, !3848, !3849, !3851, !3852, !3853, !3854, !3855}
!3847 = !DILocalVariable(name: "dev", arg: 1, scope: !3845, file: !294, line: 511, type: !134)
!3848 = !DILocalVariable(name: "encrypted", scope: !3845, file: !294, line: 513, type: !1537)
!3849 = !DILocalVariable(name: "decrypted", scope: !3845, file: !294, line: 514, type: !3850)
!3850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !854)
!3851 = !DILocalVariable(name: "ini", scope: !3845, file: !294, line: 515, type: !166)
!3852 = !DILocalVariable(name: "encrypt", scope: !3845, file: !294, line: 524, type: !181)
!3853 = !DILocalVariable(name: "gcm_op", scope: !3845, file: !294, line: 530, type: !203)
!3854 = !DILocalVariable(name: "decrypt", scope: !3845, file: !294, line: 542, type: !181)
!3855 = !DILabel(scope: !3845, name: "out", file: !294, line: 597)
!3856 = !DILocation(line: 0, scope: !3845)
!3857 = !DILocation(line: 513, column: 2, scope: !3845)
!3858 = !DILocation(line: 513, column: 10, scope: !3845)
!3859 = !DILocation(line: 514, column: 2, scope: !3845)
!3860 = !DILocation(line: 514, column: 10, scope: !3845)
!3861 = !DILocation(line: 515, column: 2, scope: !3845)
!3862 = !DILocation(line: 515, column: 20, scope: !3845)
!3863 = !DILocation(line: 515, column: 26, scope: !3845)
!3864 = !DILocation(line: 517, column: 7, scope: !3845)
!3865 = !DILocation(line: 518, column: 15, scope: !3845)
!3866 = !DILocation(line: 518, column: 27, scope: !3845)
!3867 = !DILocation(line: 522, column: 12, scope: !3845)
!3868 = !DILocation(line: 524, column: 2, scope: !3845)
!3869 = !DILocation(line: 524, column: 20, scope: !3845)
!3870 = !DILocation(line: 524, column: 30, scope: !3845)
!3871 = !DILocation(line: 530, column: 2, scope: !3845)
!3872 = !DILocation(line: 530, column: 25, scope: !3845)
!3873 = !DILocation(line: 530, column: 34, scope: !3845)
!3874 = !DILocation(line: 540, column: 20, scope: !3845)
!3875 = !DILocation(line: 542, column: 2, scope: !3845)
!3876 = !DILocation(line: 542, column: 20, scope: !3845)
!3877 = !DILocation(line: 542, column: 30, scope: !3845)
!3878 = !DILocation(line: 549, column: 6, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 549, column: 6)
!3880 = !DILocation(line: 549, column: 6, scope: !3845)
!3881 = !DILocation(line: 555, column: 13, scope: !3845)
!3882 = !DILocation(line: 556, column: 6, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 556, column: 6)
!3884 = !DILocation(line: 556, column: 6, scope: !3845)
!3885 = !DILocation(line: 557, column: 3, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !294, line: 557, column: 3)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !294, line: 557, column: 3)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 557, column: 3)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !294, line: 557, column: 3)
!3890 = distinct !DILexicalBlock(scope: !3883, file: !294, line: 556, column: 47)
!3891 = !DILocation(line: 558, column: 3, scope: !3890)
!3892 = !DILocation(line: 561, column: 2, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !294, line: 561, column: 2)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !294, line: 561, column: 2)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !294, line: 561, column: 2)
!3896 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 561, column: 2)
!3897 = !DILocation(line: 563, column: 21, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 563, column: 6)
!3899 = !DILocation(line: 563, column: 6, scope: !3898)
!3900 = !DILocation(line: 563, column: 6, scope: !3845)
!3901 = !DILocation(line: 564, column: 3, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !294, line: 564, column: 3)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !294, line: 564, column: 3)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !294, line: 564, column: 3)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !294, line: 564, column: 3)
!3906 = distinct !DILexicalBlock(scope: !3898, file: !294, line: 563, column: 67)
!3907 = !DILocation(line: 567, column: 14, scope: !3906)
!3908 = !DILocation(line: 566, column: 3, scope: !3906)
!3909 = !DILocation(line: 568, column: 3, scope: !3906)
!3910 = !DILocation(line: 571, column: 2, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !294, line: 571, column: 2)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !294, line: 571, column: 2)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !294, line: 571, column: 2)
!3914 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 571, column: 2)
!3915 = !DILocation(line: 572, column: 2, scope: !3845)
!3916 = !DILocation(line: 574, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 574, column: 6)
!3918 = !DILocation(line: 574, column: 6, scope: !3845)
!3919 = !DILocation(line: 580, column: 13, scope: !3845)
!3920 = !DILocation(line: 581, column: 6, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 581, column: 6)
!3922 = !DILocation(line: 581, column: 6, scope: !3845)
!3923 = !DILocation(line: 582, column: 3, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !294, line: 582, column: 3)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !294, line: 582, column: 3)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !294, line: 582, column: 3)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !294, line: 582, column: 3)
!3928 = distinct !DILexicalBlock(scope: !3921, file: !294, line: 581, column: 47)
!3929 = !DILocation(line: 583, column: 3, scope: !3928)
!3930 = !DILocation(line: 586, column: 2, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !294, line: 586, column: 2)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !294, line: 586, column: 2)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !294, line: 586, column: 2)
!3934 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 586, column: 2)
!3935 = !DILocation(line: 588, column: 21, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 588, column: 6)
!3937 = !DILocation(line: 588, column: 6, scope: !3936)
!3938 = !DILocation(line: 588, column: 6, scope: !3845)
!3939 = !DILocation(line: 589, column: 3, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !294, line: 589, column: 3)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !294, line: 589, column: 3)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !294, line: 589, column: 3)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !294, line: 589, column: 3)
!3944 = distinct !DILexicalBlock(scope: !3936, file: !294, line: 588, column: 59)
!3945 = !DILocation(line: 592, column: 14, scope: !3944)
!3946 = !DILocation(line: 591, column: 3, scope: !3944)
!3947 = !DILocation(line: 593, column: 3, scope: !3944)
!3948 = !DILocation(line: 596, column: 2, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !294, line: 596, column: 2)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !294, line: 596, column: 2)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !294, line: 596, column: 2)
!3952 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 596, column: 2)
!3953 = !DILocation(line: 596, column: 2, scope: !3952)
!3954 = !DILocation(line: 597, column: 1, scope: !3845)
!3955 = !DILocation(line: 598, column: 2, scope: !3845)
!3956 = !DILocation(line: 599, column: 1, scope: !3845)
!3957 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3958)
!3958 = !{!3959, !3960, !3961}
!3959 = !DILocalVariable(name: "ctx", arg: 1, scope: !3957, file: !128, line: 341, type: !165)
!3960 = !DILocalVariable(name: "pkt", arg: 2, scope: !3957, file: !128, line: 342, type: !202)
!3961 = !DILocalVariable(name: "nonce", arg: 3, scope: !3957, file: !128, line: 342, type: !184)
!3962 = !DILocation(line: 0, scope: !3957)
!3963 = !DILocation(line: 347, column: 7, scope: !3957)
!3964 = !DILocation(line: 347, column: 12, scope: !3957)
!3965 = !DILocation(line: 347, column: 16, scope: !3957)
!3966 = !DILocation(line: 348, column: 18, scope: !3957)
!3967 = !DILocation(line: 348, column: 9, scope: !3957)
!3968 = !DILocation(line: 348, column: 2, scope: !3957)
!3969 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3135, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3970)
!3970 = !{!3971, !3972, !3980}
!3971 = !DILocalVariable(name: "dev", scope: !3969, file: !294, line: 609, type: !134)
!3972 = !DILocalVariable(name: "modes", scope: !3969, file: !294, line: 623, type: !3973)
!3973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3974, size: 384, elements: !1600)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3975)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !3976)
!3976 = !{!3977, !3978}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3975, file: !294, line: 602, baseType: !140, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !3975, file: !294, line: 603, baseType: !3979, size: 32, offset: 32)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!3980 = !DILocalVariable(name: "i", scope: !3969, file: !294, line: 631, type: !125)
!3981 = !DILocation(line: 609, column: 29, scope: !3969)
!3982 = !DILocation(line: 0, scope: !3969)
!3983 = !DILocation(line: 611, column: 7, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 611, column: 6)
!3985 = !DILocation(line: 611, column: 6, scope: !3969)
!3986 = !DILocation(line: 612, column: 3, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !294, line: 612, column: 3)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !294, line: 612, column: 3)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !294, line: 612, column: 3)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !294, line: 612, column: 3)
!3991 = distinct !DILexicalBlock(scope: !3984, file: !294, line: 611, column: 12)
!3992 = !DILocation(line: 613, column: 3, scope: !3991)
!3993 = !DILocation(line: 623, column: 25, scope: !3969)
!3994 = !DILocation(line: 633, column: 6, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 633, column: 6)
!3996 = !DILocation(line: 633, column: 6, scope: !3969)
!3997 = !DILocation(line: 634, column: 3, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 634, column: 3)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !294, line: 634, column: 3)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !294, line: 634, column: 3)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !294, line: 634, column: 3)
!4002 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 633, column: 38)
!4003 = !DILocation(line: 635, column: 3, scope: !4002)
!4004 = !DILocation(line: 638, column: 2, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !294, line: 638, column: 2)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !294, line: 638, column: 2)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !294, line: 638, column: 2)
!4008 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 638, column: 2)
!4009 = !DILocation(line: 640, column: 2, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 640, column: 2)
!4011 = !DILocation(line: 640, column: 23, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4010, file: !294, line: 640, column: 2)
!4013 = !DILocation(line: 641, column: 3, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !294, line: 641, column: 3)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !294, line: 641, column: 3)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !294, line: 641, column: 3)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 641, column: 3)
!4018 = distinct !DILexicalBlock(scope: !4012, file: !294, line: 640, column: 34)
!4019 = !DILocation(line: 642, column: 12, scope: !4018)
!4020 = !DILocation(line: 642, column: 3, scope: !4018)
!4021 = !DILocation(line: 640, column: 30, scope: !4012)
!4022 = distinct !{!4022, !4009, !4023}
!4023 = !DILocation(line: 643, column: 2, scope: !4010)
!4024 = !DILocation(line: 644, column: 1, scope: !3969)
!4025 = distinct !DISubprogram(name: "device_get_binding", scope: !4026, file: !4026, line: 24, type: !4027, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4029)
!4026 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!134, !140}
!4029 = !{!4030}
!4030 = !DILocalVariable(name: "name", arg: 1, scope: !4025, file: !4026, line: 24, type: !140)
!4031 = !DILocation(line: 0, scope: !4025)
!4032 = !DILocation(line: 32, column: 2, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4025, file: !4026, line: 32, column: 2)
!4034 = !{i64 2150148258}
!4035 = !DILocation(line: 33, column: 9, scope: !4025)
!4036 = !DILocation(line: 33, column: 2, scope: !4025)
!4037 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4038, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4047)
!4038 = !DISubroutineType(types: !4039)
!4039 = !{!125, !124, !272, !208, !140, !4040}
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4041, line: 99, baseType: !4042)
!4041 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4041, line: 40, baseType: !4043)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4044)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4045)
!4045 = !{!4046}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4044, file: !395, line: 18, baseType: !124, size: 32)
!4047 = !{!4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4082, !4091, !4094, !4095, !4098, !4101, !4104, !4107, !4113}
!4048 = !DILocalVariable(name: "packaged", arg: 1, scope: !4037, file: !395, line: 233, type: !124)
!4049 = !DILocalVariable(name: "len", arg: 2, scope: !4037, file: !395, line: 233, type: !272)
!4050 = !DILocalVariable(name: "flags", arg: 3, scope: !4037, file: !395, line: 233, type: !208)
!4051 = !DILocalVariable(name: "fmt", arg: 4, scope: !4037, file: !395, line: 234, type: !140)
!4052 = !DILocalVariable(name: "ap", arg: 5, scope: !4037, file: !395, line: 234, type: !4040)
!4053 = !DILocalVariable(name: "buf0", scope: !4037, file: !395, line: 247, type: !184)
!4054 = !DILocalVariable(name: "buf", scope: !4037, file: !395, line: 248, type: !184)
!4055 = !DILocalVariable(name: "size", scope: !4037, file: !395, line: 249, type: !32)
!4056 = !DILocalVariable(name: "align", scope: !4037, file: !395, line: 250, type: !32)
!4057 = !DILocalVariable(name: "str_ptr_pos", scope: !4037, file: !395, line: 251, type: !311)
!4058 = !DILocalVariable(name: "str_ptr_arg", scope: !4037, file: !395, line: 252, type: !311)
!4059 = !DILocalVariable(name: "s_idx", scope: !4037, file: !395, line: 253, type: !32)
!4060 = !DILocalVariable(name: "s_rw_cnt", scope: !4037, file: !395, line: 254, type: !32)
!4061 = !DILocalVariable(name: "s_ro_cnt", scope: !4037, file: !395, line: 255, type: !32)
!4062 = !DILocalVariable(name: "arg_idx", scope: !4037, file: !395, line: 256, type: !125)
!4063 = !DILocalVariable(name: "i", scope: !4037, file: !395, line: 257, type: !32)
!4064 = !DILocalVariable(name: "s", scope: !4037, file: !395, line: 258, type: !140)
!4065 = !DILocalVariable(name: "parsing", scope: !4037, file: !395, line: 259, type: !153)
!4066 = !DILocalVariable(name: "rws_pos_en", scope: !4037, file: !395, line: 263, type: !153)
!4067 = !DILocalVariable(name: "fros_cnt", scope: !4037, file: !395, line: 268, type: !125)
!4068 = !DILocalVariable(name: "is_str_arg", scope: !4037, file: !395, line: 269, type: !153)
!4069 = !DILocalVariable(name: "pkg_hdr", scope: !4037, file: !395, line: 270, type: !4070)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 32)
!4071 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4072, line: 78, size: 32, elements: !4073)
!4072 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4073 = !{!4074, !4081}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4071, file: !4072, line: 80, baseType: !4075, size: 32)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4072, line: 45, size: 32, elements: !4076)
!4076 = !{!4077, !4078, !4079, !4080}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4075, file: !4072, line: 47, baseType: !150, size: 8)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4075, file: !4072, line: 50, baseType: !150, size: 8, offset: 8)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4075, file: !4072, line: 53, baseType: !150, size: 8, offset: 16)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4075, file: !4072, line: 56, baseType: !150, size: 8, offset: 24)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4071, file: !4072, line: 82, baseType: !124, size: 32)
!4082 = !DILocalVariable(name: "v", scope: !4083, file: !395, line: 567, type: !4087)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !395, line: 562, column: 14)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !395, line: 481, column: 18)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !395, line: 466, column: 3)
!4086 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 343, column: 15)
!4087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4037, file: !395, line: 567, size: 64, elements: !4088)
!4088 = !{!4089, !4090}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4087, file: !395, line: 567, baseType: !385, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4087, file: !395, line: 567, baseType: !383, size: 64)
!4091 = !DILocalVariable(name: "is_ro", scope: !4092, file: !395, line: 620, type: !153)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !395, line: 613, column: 19)
!4093 = distinct !DILexicalBlock(scope: !4086, file: !395, line: 613, column: 7)
!4094 = !DILocalVariable(name: "do_ro", scope: !4092, file: !395, line: 621, type: !153)
!4095 = !DILocalVariable(name: "s_ptr_idx", scope: !4096, file: !395, line: 626, type: !208)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !395, line: 625, column: 11)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !395, line: 623, column: 8)
!4098 = !DILocalVariable(name: "v", scope: !4099, file: !395, line: 684, type: !125)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !395, line: 683, column: 35)
!4100 = distinct !DILexicalBlock(scope: !4093, file: !395, line: 683, column: 14)
!4101 = !DILocalVariable(name: "v", scope: !4102, file: !395, line: 691, type: !389)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !395, line: 690, column: 36)
!4103 = distinct !DILexicalBlock(scope: !4100, file: !395, line: 690, column: 14)
!4104 = !DILocalVariable(name: "v", scope: !4105, file: !395, line: 698, type: !391)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !395, line: 697, column: 41)
!4106 = distinct !DILexicalBlock(scope: !4103, file: !395, line: 697, column: 14)
!4107 = !DILocalVariable(name: "pos", scope: !4108, file: !395, line: 762, type: !150)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !395, line: 757, column: 31)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !395, line: 757, column: 3)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !395, line: 757, column: 3)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !395, line: 756, column: 16)
!4112 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 756, column: 6)
!4113 = !DILabel(scope: !4092, name: "process_string", file: !395, line: 615)
!4114 = !DILocation(line: 0, scope: !4037)
!4115 = !DILocation(line: 251, column: 2, scope: !4037)
!4116 = !DILocation(line: 251, column: 10, scope: !4037)
!4117 = !DILocation(line: 252, column: 2, scope: !4037)
!4118 = !DILocation(line: 252, column: 10, scope: !4037)
!4119 = !DILocation(line: 263, column: 29, scope: !4037)
!4120 = !DILocation(line: 263, column: 21, scope: !4037)
!4121 = !DILocation(line: 268, column: 21, scope: !4037)
!4122 = !DILocation(line: 268, column: 19, scope: !4037)
!4123 = !DILocation(line: 273, column: 6, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 273, column: 6)
!4125 = !DILocation(line: 273, column: 26, scope: !4124)
!4126 = !DILocation(line: 273, column: 6, scope: !4037)
!4127 = !DILocation(line: 297, column: 6, scope: !4037)
!4128 = !DILocation(line: 305, column: 11, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 305, column: 6)
!4130 = !DILocation(line: 305, column: 6, scope: !4037)
!4131 = !DILocation(line: 327, column: 19, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 327, column: 6)
!4133 = !DILocation(line: 327, column: 22, scope: !4132)
!4134 = !DILocation(line: 327, column: 33, scope: !4132)
!4135 = !DILocation(line: 327, column: 50, scope: !4132)
!4136 = !DILocation(line: 327, column: 6, scope: !4037)
!4137 = !DILocation(line: 338, column: 9, scope: !4037)
!4138 = !DILocation(line: 341, column: 2, scope: !4037)
!4139 = !DILocation(line: 472, column: 8, scope: !4085)
!4140 = !DILocation(line: 473, column: 14, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !395, line: 473, column: 9)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !395, line: 472, column: 18)
!4143 = distinct !DILexicalBlock(scope: !4085, file: !395, line: 472, column: 8)
!4144 = !DILocation(line: 473, column: 9, scope: !4142)
!4145 = !DILocation(line: 479, column: 5, scope: !4142)
!4146 = !DILocation(line: 468, column: 9, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4085, file: !395, line: 468, column: 8)
!4148 = !DILocation(line: 468, column: 8, scope: !4147)
!4149 = !DILocation(line: 468, column: 15, scope: !4147)
!4150 = !DILocation(line: 468, column: 8, scope: !4085)
!4151 = distinct !{!4151, !4152, !4153}
!4152 = !DILocation(line: 343, column: 2, scope: !4037)
!4153 = !DILocation(line: 712, column: 2, scope: !4037)
!4154 = !DILocation(line: 481, column: 4, scope: !4085)
!4155 = !DILocation(line: 484, column: 12, scope: !4084)
!4156 = !DILocation(line: 485, column: 5, scope: !4084)
!4157 = !DILocation(line: 505, column: 5, scope: !4084)
!4158 = !DILocation(line: 518, column: 5, scope: !4084)
!4159 = !DILocation(line: 523, column: 5, scope: !4084)
!4160 = !DILocation(line: 532, column: 9, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4084, file: !395, line: 532, column: 9)
!4162 = !DILocation(line: 532, column: 17, scope: !4161)
!4163 = !DILocation(line: 532, column: 9, scope: !4084)
!4164 = !DILocation(line: 533, column: 10, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !395, line: 533, column: 10)
!4166 = distinct !DILexicalBlock(scope: !4161, file: !395, line: 532, column: 25)
!4167 = !DILocation(line: 533, column: 18, scope: !4165)
!4168 = !DILocation(line: 0, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4083, file: !395, line: 569, column: 9)
!4170 = !DILocation(line: 0, scope: !4083)
!4171 = !DILocation(line: 579, column: 20, scope: !4083)
!4172 = !DILocation(line: 579, column: 11, scope: !4083)
!4173 = !DILocation(line: 580, column: 9, scope: !4083)
!4174 = !DILocation(line: 582, column: 21, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !395, line: 582, column: 10)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !395, line: 580, column: 23)
!4177 = distinct !DILexicalBlock(scope: !4083, file: !395, line: 580, column: 9)
!4178 = !DILocation(line: 582, column: 28, scope: !4175)
!4179 = !DILocation(line: 582, column: 10, scope: !4176)
!4180 = !DILocation(line: 0, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !395, line: 587, column: 17)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !395, line: 585, column: 10)
!4183 = !DILocation(line: 593, column: 9, scope: !4083)
!4184 = !DILocation(line: 600, column: 5, scope: !4084)
!4185 = !DILocation(line: 605, column: 18, scope: !4086)
!4186 = !DILocation(line: 605, column: 9, scope: !4086)
!4187 = !DILocation(line: 608, column: 20, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4086, file: !395, line: 608, column: 7)
!4189 = !DILocation(line: 608, column: 23, scope: !4188)
!4190 = !DILocation(line: 608, column: 34, scope: !4188)
!4191 = !DILocation(line: 608, column: 41, scope: !4188)
!4192 = !DILocation(line: 608, column: 7, scope: !4086)
!4193 = !DILocation(line: 613, column: 7, scope: !4086)
!4194 = !DILocation(line: 614, column: 8, scope: !4092)
!4195 = !DILocation(line: 614, column: 4, scope: !4092)
!4196 = !DILocation(line: 255, column: 15, scope: !4037)
!4197 = !DILocation(line: 256, column: 6, scope: !4037)
!4198 = !DILocation(line: 254, column: 15, scope: !4037)
!4199 = !DILocation(line: 253, column: 15, scope: !4037)
!4200 = !DILocation(line: 320, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4129, file: !395, line: 305, column: 20)
!4202 = !DILocation(line: 615, column: 1, scope: !4092)
!4203 = !DILocation(line: 616, column: 8, scope: !4092)
!4204 = !DILocation(line: 617, column: 5, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !395, line: 616, column: 22)
!4206 = distinct !DILexicalBlock(scope: !4092, file: !395, line: 616, column: 8)
!4207 = !DILocation(line: 617, column: 25, scope: !4205)
!4208 = !DILocation(line: 618, column: 4, scope: !4205)
!4209 = !DILocation(line: 620, column: 26, scope: !4092)
!4210 = !DILocation(line: 620, column: 29, scope: !4092)
!4211 = !DILocation(line: 620, column: 17, scope: !4092)
!4212 = !DILocation(line: 620, column: 43, scope: !4092)
!4213 = !DILocation(line: 0, scope: !4092)
!4214 = !DILocation(line: 623, column: 14, scope: !4097)
!4215 = !DILocation(line: 626, column: 26, scope: !4096)
!4216 = !DILocation(line: 626, column: 37, scope: !4096)
!4217 = !DILocation(line: 0, scope: !4096)
!4218 = !DILocation(line: 634, column: 15, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4096, file: !395, line: 634, column: 9)
!4220 = !DILocation(line: 644, column: 9, scope: !4096)
!4221 = !DILocation(line: 649, column: 27, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !395, line: 644, column: 23)
!4223 = distinct !DILexicalBlock(scope: !4096, file: !395, line: 644, column: 9)
!4224 = !DILocation(line: 649, column: 6, scope: !4222)
!4225 = !DILocation(line: 649, column: 25, scope: !4222)
!4226 = !DILocation(line: 650, column: 27, scope: !4222)
!4227 = !DILocation(line: 650, column: 6, scope: !4222)
!4228 = !DILocation(line: 650, column: 25, scope: !4222)
!4229 = !DILocation(line: 651, column: 10, scope: !4222)
!4230 = !DILocation(line: 653, column: 26, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !395, line: 651, column: 17)
!4232 = distinct !DILexicalBlock(scope: !4222, file: !395, line: 651, column: 10)
!4233 = !DILocation(line: 654, column: 15, scope: !4231)
!4234 = !DILocation(line: 655, column: 6, scope: !4231)
!4235 = !DILocation(line: 656, column: 15, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !395, line: 655, column: 13)
!4237 = !DILocation(line: 658, column: 16, scope: !4223)
!4238 = !DILocation(line: 663, column: 10, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !395, line: 658, column: 23)
!4240 = distinct !DILexicalBlock(scope: !4223, file: !395, line: 658, column: 16)
!4241 = !DILocation(line: 664, column: 5, scope: !4239)
!4242 = !DILocation(line: 664, column: 16, scope: !4240)
!4243 = !DILocation(line: 669, column: 10, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !395, line: 664, column: 28)
!4245 = distinct !DILexicalBlock(scope: !4240, file: !395, line: 664, column: 16)
!4246 = !DILocation(line: 670, column: 5, scope: !4244)
!4247 = !DILocation(line: 675, column: 13, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !395, line: 670, column: 12)
!4249 = !DILocation(line: 675, column: 27, scope: !4248)
!4250 = !DILocation(line: 675, column: 10, scope: !4248)
!4251 = !DILocation(line: 678, column: 10, scope: !4096)
!4252 = !DILocation(line: 680, column: 8, scope: !4092)
!4253 = !DILocation(line: 683, column: 14, scope: !4093)
!4254 = !DILocation(line: 684, column: 12, scope: !4099)
!4255 = !DILocation(line: 0, scope: !4099)
!4256 = !DILocation(line: 686, column: 8, scope: !4099)
!4257 = !DILocation(line: 687, column: 5, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !395, line: 686, column: 22)
!4259 = distinct !DILexicalBlock(scope: !4099, file: !395, line: 686, column: 8)
!4260 = !DILocation(line: 687, column: 17, scope: !4258)
!4261 = !DILocation(line: 688, column: 4, scope: !4258)
!4262 = !DILocation(line: 698, column: 18, scope: !4105)
!4263 = !DILocation(line: 0, scope: !4105)
!4264 = !DILocation(line: 700, column: 8, scope: !4105)
!4265 = !DILocation(line: 704, column: 6, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !395, line: 703, column: 12)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !395, line: 701, column: 9)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !395, line: 700, column: 22)
!4269 = distinct !DILexicalBlock(scope: !4105, file: !395, line: 700, column: 8)
!4270 = !DILocation(line: 704, column: 24, scope: !4266)
!4271 = !DILocation(line: 706, column: 4, scope: !4268)
!4272 = !DILocation(line: 0, scope: !4100)
!4273 = !DILocation(line: 0, scope: !4086)
!4274 = !DILocation(line: 720, column: 6, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 720, column: 6)
!4276 = !DILocation(line: 720, column: 17, scope: !4275)
!4277 = !DILocation(line: 720, column: 31, scope: !4275)
!4278 = !DILocation(line: 720, column: 6, scope: !4037)
!4279 = !DILocation(line: 729, column: 6, scope: !4037)
!4280 = !DILocation(line: 730, column: 21, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !395, line: 729, column: 20)
!4282 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 729, column: 6)
!4283 = !DILocation(line: 730, column: 27, scope: !4281)
!4284 = !DILocation(line: 730, column: 3, scope: !4281)
!4285 = !DILocation(line: 737, column: 22, scope: !4037)
!4286 = !DILocation(line: 737, column: 20, scope: !4037)
!4287 = !DILocation(line: 0, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 739, column: 6)
!4289 = !DILocation(line: 745, column: 17, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4288, file: !395, line: 743, column: 9)
!4291 = !DILocation(line: 745, column: 25, scope: !4290)
!4292 = !DILocation(line: 746, column: 17, scope: !4290)
!4293 = !DILocation(line: 746, column: 28, scope: !4290)
!4294 = !DILocation(line: 749, column: 29, scope: !4037)
!4295 = !DILocation(line: 749, column: 16, scope: !4037)
!4296 = !DILocation(line: 749, column: 27, scope: !4037)
!4297 = !DILocation(line: 756, column: 6, scope: !4112)
!4298 = !DILocation(line: 756, column: 6, scope: !4037)
!4299 = !DILocation(line: 757, column: 3, scope: !4110)
!4300 = !DILocation(line: 758, column: 10, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4108, file: !395, line: 758, column: 8)
!4302 = !DILocation(line: 758, column: 25, scope: !4301)
!4303 = !DILocation(line: 758, column: 8, scope: !4108)
!4304 = !DILocation(line: 0, scope: !4108)
!4305 = !DILocation(line: 765, column: 8, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4108, file: !395, line: 765, column: 8)
!4307 = !DILocation(line: 765, column: 19, scope: !4306)
!4308 = !DILocation(line: 765, column: 23, scope: !4306)
!4309 = !DILocation(line: 765, column: 8, scope: !4108)
!4310 = !DILocation(line: 762, column: 33, scope: !4108)
!4311 = !DILocation(line: 769, column: 8, scope: !4108)
!4312 = !DILocation(line: 769, column: 11, scope: !4108)
!4313 = !DILocation(line: 757, column: 27, scope: !4109)
!4314 = !DILocation(line: 757, column: 17, scope: !4109)
!4315 = distinct !{!4315, !4299, !4316}
!4316 = !DILocation(line: 770, column: 3, scope: !4110)
!4317 = !DILocation(line: 774, column: 16, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !395, line: 774, column: 2)
!4319 = distinct !DILexicalBlock(scope: !4037, file: !395, line: 774, column: 2)
!4320 = !DILocation(line: 774, column: 2, scope: !4319)
!4321 = !DILocation(line: 776, column: 16, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 776, column: 7)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !395, line: 774, column: 30)
!4324 = !DILocation(line: 776, column: 19, scope: !4322)
!4325 = !DILocation(line: 776, column: 34, scope: !4322)
!4326 = !DILocation(line: 776, column: 7, scope: !4323)
!4327 = !DILocation(line: 780, column: 7, scope: !4323)
!4328 = !DILocation(line: 782, column: 13, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !395, line: 780, column: 19)
!4330 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 780, column: 7)
!4331 = !DILocation(line: 782, column: 8, scope: !4329)
!4332 = !DILocation(line: 782, column: 11, scope: !4329)
!4333 = !DILocation(line: 783, column: 3, scope: !4329)
!4334 = !DILocation(line: 785, column: 26, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !395, line: 783, column: 10)
!4336 = !DILocation(line: 785, column: 41, scope: !4335)
!4337 = !DILocation(line: 785, column: 24, scope: !4335)
!4338 = !DILocation(line: 785, column: 8, scope: !4335)
!4339 = !DILocation(line: 787, column: 52, scope: !4335)
!4340 = !DILocation(line: 789, column: 11, scope: !4335)
!4341 = !DILocation(line: 789, column: 21, scope: !4335)
!4342 = !DILocation(line: 0, scope: !4330)
!4343 = !DILocation(line: 793, column: 7, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 793, column: 7)
!4345 = !DILocation(line: 793, column: 18, scope: !4344)
!4346 = !DILocation(line: 793, column: 22, scope: !4344)
!4347 = !DILocation(line: 793, column: 29, scope: !4344)
!4348 = !DILocation(line: 793, column: 7, scope: !4323)
!4349 = !DILocation(line: 797, column: 12, scope: !4323)
!4350 = !DILocation(line: 797, column: 7, scope: !4323)
!4351 = !DILocation(line: 797, column: 10, scope: !4323)
!4352 = !DILocation(line: 799, column: 3, scope: !4323)
!4353 = !DILocation(line: 800, column: 7, scope: !4323)
!4354 = !DILocation(line: 801, column: 2, scope: !4323)
!4355 = !DILocation(line: 338, column: 4, scope: !4037)
!4356 = !DILocation(line: 774, column: 26, scope: !4318)
!4357 = distinct !{!4357, !4320, !4358}
!4358 = !DILocation(line: 801, column: 2, scope: !4319)
!4359 = !DILocation(line: 808, column: 9, scope: !4037)
!4360 = !DILocation(line: 808, column: 2, scope: !4037)
!4361 = !DILocation(line: 813, column: 1, scope: !4037)
!4362 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4363, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4365)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!153, !140}
!4365 = !{!4366}
!4366 = !DILocalVariable(name: "addr", arg: 1, scope: !4362, file: !395, line: 33, type: !140)
!4367 = !DILocation(line: 0, scope: !4362)
!4368 = !DILocation(line: 41, column: 9, scope: !4362)
!4369 = !DILocation(line: 41, column: 2, scope: !4362)
!4370 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4371, file: !4371, line: 24, type: !4372, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4374)
!4371 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!153, !13}
!4374 = !{!4375}
!4375 = !DILocalVariable(name: "addr", arg: 1, scope: !4370, file: !4371, line: 24, type: !13)
!4376 = !DILocation(line: 0, scope: !4370)
!4377 = !DILocation(line: 49, column: 30, scope: !4370)
!4378 = !DILocation(line: 49, column: 57, scope: !4370)
!4379 = !DILocation(line: 49, column: 2, scope: !4370)
!4380 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4381, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4383)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{!125, !124, !272, !208, !140, null}
!4383 = !{!4384, !4385, !4386, !4387, !4388, !4389}
!4384 = !DILocalVariable(name: "packaged", arg: 1, scope: !4380, file: !395, line: 815, type: !124)
!4385 = !DILocalVariable(name: "len", arg: 2, scope: !4380, file: !395, line: 815, type: !272)
!4386 = !DILocalVariable(name: "flags", arg: 3, scope: !4380, file: !395, line: 815, type: !208)
!4387 = !DILocalVariable(name: "format", arg: 4, scope: !4380, file: !395, line: 816, type: !140)
!4388 = !DILocalVariable(name: "ap", scope: !4380, file: !395, line: 818, type: !4040)
!4389 = !DILocalVariable(name: "ret", scope: !4380, file: !395, line: 819, type: !125)
!4390 = !DILocation(line: 0, scope: !4380)
!4391 = !DILocation(line: 818, column: 2, scope: !4380)
!4392 = !DILocation(line: 818, column: 10, scope: !4380)
!4393 = !DILocation(line: 821, column: 2, scope: !4380)
!4394 = !DILocation(line: 822, column: 8, scope: !4380)
!4395 = !DILocation(line: 823, column: 2, scope: !4380)
!4396 = !DILocation(line: 825, column: 1, scope: !4380)
!4397 = !DILocation(line: 824, column: 2, scope: !4380)
!4398 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4399, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4409)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!125, !4401, !4405, !124, !124}
!4401 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4072, line: 297, baseType: !4402)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 32)
!4403 = !DISubroutineType(types: !4404)
!4404 = !{!125, null}
!4405 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4072, line: 328, baseType: !4406)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 32)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!125, !4401, !124, !140, !4040}
!4409 = !{!4410, !4411, !4412, !4413, !4414, !4415, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428}
!4410 = !DILocalVariable(name: "out", arg: 1, scope: !4398, file: !395, line: 827, type: !4401)
!4411 = !DILocalVariable(name: "formatter", arg: 2, scope: !4398, file: !395, line: 828, type: !4405)
!4412 = !DILocalVariable(name: "ctx", arg: 3, scope: !4398, file: !395, line: 829, type: !124)
!4413 = !DILocalVariable(name: "packaged", arg: 4, scope: !4398, file: !395, line: 829, type: !124)
!4414 = !DILocalVariable(name: "buf", scope: !4398, file: !395, line: 831, type: !184)
!4415 = !DILocalVariable(name: "hdr", scope: !4398, file: !395, line: 832, type: !4416)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 32)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4072, line: 96, size: 64, elements: !4418)
!4418 = !{!4419, !4420}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4417, file: !4072, line: 98, baseType: !4071, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4417, file: !4072, line: 101, baseType: !393, size: 32, offset: 32)
!4421 = !DILocalVariable(name: "s", scope: !4398, file: !395, line: 833, type: !393)
!4422 = !DILocalVariable(name: "ps", scope: !4398, file: !395, line: 833, type: !392)
!4423 = !DILocalVariable(name: "i", scope: !4398, file: !395, line: 834, type: !32)
!4424 = !DILocalVariable(name: "args_size", scope: !4398, file: !395, line: 834, type: !32)
!4425 = !DILocalVariable(name: "s_nbr", scope: !4398, file: !395, line: 834, type: !32)
!4426 = !DILocalVariable(name: "ros_nbr", scope: !4398, file: !395, line: 834, type: !32)
!4427 = !DILocalVariable(name: "rws_nbr", scope: !4398, file: !395, line: 834, type: !32)
!4428 = !DILocalVariable(name: "s_idx", scope: !4398, file: !395, line: 834, type: !32)
!4429 = !DILocation(line: 0, scope: !4398)
!4430 = !DILocation(line: 836, column: 10, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4398, file: !395, line: 836, column: 6)
!4432 = !DILocation(line: 836, column: 6, scope: !4398)
!4433 = !DILocation(line: 842, column: 28, scope: !4398)
!4434 = !DILocation(line: 842, column: 14, scope: !4398)
!4435 = !DILocation(line: 852, column: 16, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !395, line: 852, column: 2)
!4437 = distinct !DILexicalBlock(scope: !4398, file: !395, line: 852, column: 2)
!4438 = !DILocation(line: 852, column: 2, scope: !4437)
!4439 = !DILocation(line: 841, column: 28, scope: !4398)
!4440 = !DILocation(line: 841, column: 14, scope: !4398)
!4441 = !DILocation(line: 841, column: 32, scope: !4398)
!4442 = !DILocation(line: 847, column: 19, scope: !4398)
!4443 = !DILocation(line: 843, column: 28, scope: !4398)
!4444 = !DILocation(line: 843, column: 14, scope: !4398)
!4445 = !DILocation(line: 847, column: 31, scope: !4398)
!4446 = !DILocation(line: 844, column: 28, scope: !4398)
!4447 = !DILocation(line: 844, column: 14, scope: !4398)
!4448 = !DILocation(line: 847, column: 45, scope: !4398)
!4449 = !DILocation(line: 847, column: 41, scope: !4398)
!4450 = !DILocation(line: 854, column: 24, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4436, file: !395, line: 852, column: 30)
!4452 = !DILocation(line: 854, column: 11, scope: !4451)
!4453 = !DILocation(line: 855, column: 30, scope: !4451)
!4454 = !DILocation(line: 855, column: 22, scope: !4451)
!4455 = !DILocation(line: 855, column: 8, scope: !4451)
!4456 = !DILocation(line: 857, column: 7, scope: !4451)
!4457 = !DILocation(line: 859, column: 8, scope: !4451)
!4458 = !DILocation(line: 859, column: 18, scope: !4451)
!4459 = !DILocation(line: 859, column: 5, scope: !4451)
!4460 = !DILocation(line: 852, column: 26, scope: !4436)
!4461 = distinct !{!4461, !4438, !4462}
!4462 = !DILocation(line: 860, column: 2, scope: !4437)
!4463 = !DILocation(line: 863, column: 6, scope: !4398)
!4464 = !DILocation(line: 866, column: 56, scope: !4398)
!4465 = !DILocation(line: 866, column: 9, scope: !4398)
!4466 = !DILocation(line: 866, column: 2, scope: !4398)
!4467 = !DILocation(line: 867, column: 1, scope: !4398)
!4468 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4469, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4471)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!125, !4401, !4405, !124, !140, !124}
!4471 = !{!4472, !4473, !4474, !4475, !4476, !4477}
!4472 = !DILocalVariable(name: "out", arg: 1, scope: !4468, file: !395, line: 179, type: !4401)
!4473 = !DILocalVariable(name: "formatter", arg: 2, scope: !4468, file: !395, line: 180, type: !4405)
!4474 = !DILocalVariable(name: "ctx", arg: 3, scope: !4468, file: !395, line: 181, type: !124)
!4475 = !DILocalVariable(name: "fmt", arg: 4, scope: !4468, file: !395, line: 182, type: !140)
!4476 = !DILocalVariable(name: "buf", arg: 5, scope: !4468, file: !395, line: 182, type: !124)
!4477 = !DILocalVariable(name: "u", scope: !4468, file: !395, line: 187, type: !4478)
!4478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4468, file: !395, line: 184, size: 32, elements: !4479)
!4479 = !{!4480, !4481}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4478, file: !395, line: 185, baseType: !4040, size: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4478, file: !395, line: 186, baseType: !124, size: 32)
!4482 = !DILocation(line: 0, scope: !4468)
!4483 = !DILocation(line: 191, column: 9, scope: !4468)
!4484 = !DILocation(line: 191, column: 2, scope: !4468)
!4485 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4486, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4488)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!153, !140, !125}
!4488 = !{!4489, !4490, !4491, !4492, !4493}
!4489 = !DILocalVariable(name: "fmt", arg: 1, scope: !4485, file: !395, line: 881, type: !140)
!4490 = !DILocalVariable(name: "n", arg: 2, scope: !4485, file: !395, line: 881, type: !125)
!4491 = !DILocalVariable(name: "c", scope: !4485, file: !395, line: 883, type: !142)
!4492 = !DILocalVariable(name: "mod", scope: !4485, file: !395, line: 884, type: !153)
!4493 = !DILocalVariable(name: "cnt", scope: !4485, file: !395, line: 885, type: !125)
!4494 = !DILocation(line: 0, scope: !4485)
!4495 = !DILocation(line: 887, column: 14, scope: !4485)
!4496 = !DILocation(line: 887, column: 22, scope: !4485)
!4497 = !DILocation(line: 887, column: 2, scope: !4485)
!4498 = !DILocation(line: 887, column: 18, scope: !4485)
!4499 = !DILocation(line: 888, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4485, file: !395, line: 887, column: 31)
!4501 = !DILocation(line: 889, column: 12, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !395, line: 889, column: 8)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !395, line: 888, column: 12)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !395, line: 888, column: 7)
!4505 = !DILocation(line: 889, column: 8, scope: !4503)
!4506 = !DILocation(line: 890, column: 11, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !395, line: 890, column: 9)
!4508 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 889, column: 18)
!4509 = !DILocation(line: 890, column: 9, scope: !4508)
!4510 = !DILocation(line: 892, column: 16, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4507, file: !395, line: 892, column: 16)
!4512 = !DILocation(line: 892, column: 16, scope: !4507)
!4513 = !DILocation(line: 895, column: 15, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4502, file: !395, line: 895, column: 15)
!4515 = !DILocation(line: 895, column: 15, scope: !4502)
!4516 = !DILocation(line: 900, column: 9, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4500, file: !395, line: 900, column: 7)
!4518 = !DILocation(line: 900, column: 7, scope: !4500)
!4519 = distinct !{!4519, !4497, !4520}
!4520 = !DILocation(line: 903, column: 2, scope: !4485)
!4521 = !DILocation(line: 906, column: 1, scope: !4485)
!4522 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4523, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!153, !142}
!4525 = !{!4526}
!4526 = !DILocalVariable(name: "c", arg: 1, scope: !4522, file: !395, line: 873, type: !142)
!4527 = !DILocation(line: 0, scope: !4522)
!4528 = !DILocation(line: 875, column: 19, scope: !4522)
!4529 = !DILocation(line: 875, column: 2, scope: !4522)
!4530 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4531, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4537)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!125, !124, !272, !4533, !124, !208, !2784, !272}
!4533 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4072, line: 308, baseType: !4534)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 32)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!125, !13, !272, !124}
!4537 = !{!4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4555, !4556, !4557, !4558, !4559, !4565, !4568, !4569, !4570, !4572, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4588, !4591, !4592, !4593, !4594, !4595, !4596, !4598, !4601, !4602, !4603}
!4538 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4530, file: !395, line: 908, type: !124)
!4539 = !DILocalVariable(name: "in_len", arg: 2, scope: !4530, file: !395, line: 909, type: !272)
!4540 = !DILocalVariable(name: "cb", arg: 3, scope: !4530, file: !395, line: 910, type: !4533)
!4541 = !DILocalVariable(name: "ctx", arg: 4, scope: !4530, file: !395, line: 911, type: !124)
!4542 = !DILocalVariable(name: "flags", arg: 5, scope: !4530, file: !395, line: 912, type: !208)
!4543 = !DILocalVariable(name: "strl", arg: 6, scope: !4530, file: !395, line: 913, type: !2784)
!4544 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4530, file: !395, line: 914, type: !272)
!4545 = !DILocalVariable(name: "buf", scope: !4530, file: !395, line: 918, type: !184)
!4546 = !DILocalVariable(name: "buf32", scope: !4530, file: !395, line: 919, type: !1595)
!4547 = !DILocalVariable(name: "args_size", scope: !4530, file: !395, line: 920, type: !32)
!4548 = !DILocalVariable(name: "ros_nbr", scope: !4530, file: !395, line: 920, type: !32)
!4549 = !DILocalVariable(name: "rws_nbr", scope: !4530, file: !395, line: 920, type: !32)
!4550 = !DILocalVariable(name: "fmt_present", scope: !4530, file: !395, line: 921, type: !153)
!4551 = !DILocalVariable(name: "rw_cpy", scope: !4530, file: !395, line: 922, type: !153)
!4552 = !DILocalVariable(name: "ro_cpy", scope: !4530, file: !395, line: 923, type: !153)
!4553 = !DILocalVariable(name: "in_desc", scope: !4530, file: !395, line: 924, type: !4554)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 32)
!4555 = !DILocalVariable(name: "out_len", scope: !4530, file: !395, line: 960, type: !125)
!4556 = !DILocalVariable(name: "fmt", scope: !4530, file: !395, line: 965, type: !140)
!4557 = !DILocalVariable(name: "str_pos", scope: !4530, file: !395, line: 966, type: !184)
!4558 = !DILocalVariable(name: "strl_cnt", scope: !4530, file: !395, line: 967, type: !272)
!4559 = !DILocalVariable(name: "i", scope: !4560, file: !395, line: 973, type: !125)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !395, line: 973, column: 4)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !395, line: 972, column: 15)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !395, line: 972, column: 7)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !395, line: 970, column: 18)
!4564 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 970, column: 6)
!4565 = !DILocalVariable(name: "str", scope: !4566, file: !395, line: 974, type: !140)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !395, line: 973, column: 38)
!4567 = distinct !DILexicalBlock(scope: !4560, file: !395, line: 973, column: 4)
!4568 = !DILocalVariable(name: "len", scope: !4566, file: !395, line: 975, type: !125)
!4569 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4563, file: !395, line: 990, type: !153)
!4570 = !DILocalVariable(name: "i", scope: !4571, file: !395, line: 995, type: !125)
!4571 = distinct !DILexicalBlock(scope: !4563, file: !395, line: 995, column: 3)
!4572 = !DILocalVariable(name: "arg_idx", scope: !4573, file: !395, line: 996, type: !150)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !395, line: 995, column: 37)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !395, line: 995, column: 3)
!4575 = !DILocalVariable(name: "arg_pos", scope: !4573, file: !395, line: 997, type: !150)
!4576 = !DILocalVariable(name: "str", scope: !4573, file: !395, line: 998, type: !140)
!4577 = !DILocalVariable(name: "is_ro", scope: !4573, file: !395, line: 999, type: !153)
!4578 = !DILocalVariable(name: "len", scope: !4573, file: !395, line: 1000, type: !125)
!4579 = !DILocalVariable(name: "out_desc", scope: !4530, file: !395, line: 1038, type: !4075)
!4580 = !DILocalVariable(name: "cpy_str_pos", scope: !4530, file: !395, line: 1040, type: !311)
!4581 = !DILocalVariable(name: "keep_str_pos", scope: !4530, file: !395, line: 1042, type: !311)
!4582 = !DILocalVariable(name: "scpy_cnt", scope: !4530, file: !395, line: 1043, type: !150)
!4583 = !DILocalVariable(name: "keep_cnt", scope: !4530, file: !395, line: 1044, type: !150)
!4584 = !DILocalVariable(name: "dst", scope: !4530, file: !395, line: 1045, type: !184)
!4585 = !DILocalVariable(name: "rv", scope: !4530, file: !395, line: 1046, type: !125)
!4586 = !DILocalVariable(name: "i", scope: !4587, file: !395, line: 1074, type: !125)
!4587 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1074, column: 2)
!4588 = !DILocalVariable(name: "arg_idx", scope: !4589, file: !395, line: 1075, type: !150)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !395, line: 1074, column: 36)
!4590 = distinct !DILexicalBlock(scope: !4587, file: !395, line: 1074, column: 2)
!4591 = !DILocalVariable(name: "arg_pos", scope: !4589, file: !395, line: 1076, type: !150)
!4592 = !DILocalVariable(name: "str", scope: !4589, file: !395, line: 1077, type: !140)
!4593 = !DILocalVariable(name: "is_ro", scope: !4589, file: !395, line: 1078, type: !153)
!4594 = !DILocalVariable(name: "in_desc_backup", scope: !4530, file: !395, line: 1114, type: !4075)
!4595 = !DILocalVariable(name: "strs_len", scope: !4530, file: !395, line: 1134, type: !272)
!4596 = !DILocalVariable(name: "i", scope: !4597, file: !395, line: 1143, type: !125)
!4597 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1143, column: 2)
!4598 = !DILocalVariable(name: "loc", scope: !4599, file: !395, line: 1144, type: !150)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !395, line: 1143, column: 37)
!4600 = distinct !DILexicalBlock(scope: !4597, file: !395, line: 1143, column: 2)
!4601 = !DILocalVariable(name: "str", scope: !4599, file: !395, line: 1145, type: !140)
!4602 = !DILocalVariable(name: "str_len", scope: !4599, file: !395, line: 1146, type: !227)
!4603 = !DILabel(scope: !4604, name: "calculate_string_length", file: !395, line: 1021)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !395, line: 1020, column: 56)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !395, line: 1020, column: 15)
!4606 = distinct !DILexicalBlock(scope: !4573, file: !395, line: 1014, column: 8)
!4607 = !DILocation(line: 0, scope: !4530)
!4608 = !DILocation(line: 919, column: 20, scope: !4530)
!4609 = !DILocation(line: 921, column: 27, scope: !4530)
!4610 = !DILocation(line: 921, column: 21, scope: !4530)
!4611 = !DILocation(line: 926, column: 18, scope: !4530)
!4612 = !DILocation(line: 926, column: 11, scope: !4530)
!4613 = !DILocation(line: 926, column: 34, scope: !4530)
!4614 = !DILocation(line: 931, column: 21, scope: !4530)
!4615 = !DILocation(line: 931, column: 12, scope: !4530)
!4616 = !DILocation(line: 932, column: 11, scope: !4530)
!4617 = !DILocation(line: 932, column: 19, scope: !4530)
!4618 = !DILocation(line: 938, column: 21, scope: !4530)
!4619 = !DILocation(line: 938, column: 12, scope: !4530)
!4620 = !DILocation(line: 939, column: 19, scope: !4530)
!4621 = !DILocation(line: 939, column: 23, scope: !4530)
!4622 = !DILocation(line: 946, column: 14, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 946, column: 6)
!4624 = !DILocation(line: 947, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !395, line: 947, column: 7)
!4626 = distinct !DILexicalBlock(scope: !4623, file: !395, line: 946, column: 26)
!4627 = !DILocation(line: 947, column: 7, scope: !4626)
!4628 = !DILocation(line: 948, column: 4, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4625, file: !395, line: 947, column: 11)
!4630 = !DILocation(line: 949, column: 3, scope: !4629)
!4631 = !DILocation(line: 958, column: 23, scope: !4530)
!4632 = !DILocation(line: 958, column: 14, scope: !4530)
!4633 = !DILocation(line: 958, column: 27, scope: !4530)
!4634 = !DILocation(line: 965, column: 41, scope: !4530)
!4635 = !DILocation(line: 965, column: 20, scope: !4530)
!4636 = !DILocation(line: 966, column: 22, scope: !4530)
!4637 = !DILocation(line: 970, column: 9, scope: !4564)
!4638 = !DILocation(line: 970, column: 6, scope: !4530)
!4639 = !DILocation(line: 972, column: 7, scope: !4563)
!4640 = !DILocation(line: 0, scope: !4560)
!4641 = !DILocation(line: 973, column: 4, scope: !4560)
!4642 = !DILocation(line: 974, column: 46, scope: !4566)
!4643 = !DILocation(line: 974, column: 40, scope: !4566)
!4644 = !DILocation(line: 974, column: 23, scope: !4566)
!4645 = !DILocation(line: 0, scope: !4566)
!4646 = !DILocation(line: 975, column: 15, scope: !4566)
!4647 = !DILocation(line: 978, column: 14, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4566, file: !395, line: 978, column: 9)
!4649 = !DILocation(line: 979, column: 25, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4648, file: !395, line: 978, column: 38)
!4651 = !DILocation(line: 979, column: 19, scope: !4650)
!4652 = !DILocation(line: 979, column: 6, scope: !4650)
!4653 = !DILocation(line: 979, column: 23, scope: !4650)
!4654 = !DILocation(line: 980, column: 5, scope: !4650)
!4655 = !DILocation(line: 981, column: 13, scope: !4566)
!4656 = !DILocation(line: 982, column: 12, scope: !4566)
!4657 = !DILocation(line: 973, column: 34, scope: !4567)
!4658 = !DILocation(line: 973, column: 22, scope: !4567)
!4659 = distinct !{!4659, !4641, !4660}
!4660 = !DILocation(line: 983, column: 4, scope: !4560)
!4661 = !DILocation(line: 985, column: 16, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !395, line: 985, column: 8)
!4663 = distinct !DILexicalBlock(scope: !4562, file: !395, line: 984, column: 10)
!4664 = !DILocation(line: 967, column: 9, scope: !4530)
!4665 = !DILocation(line: 971, column: 11, scope: !4563)
!4666 = !DILocation(line: 0, scope: !4563)
!4667 = !DILocation(line: 0, scope: !4571)
!4668 = !DILocation(line: 995, column: 21, scope: !4574)
!4669 = !DILocation(line: 995, column: 3, scope: !4571)
!4670 = !DILocation(line: 990, column: 34, scope: !4563)
!4671 = !DILocation(line: 990, column: 26, scope: !4563)
!4672 = !DILocation(line: 996, column: 30, scope: !4573)
!4673 = !DILocation(line: 0, scope: !4573)
!4674 = !DILocation(line: 997, column: 30, scope: !4573)
!4675 = !DILocation(line: 997, column: 22, scope: !4573)
!4676 = !DILocation(line: 998, column: 39, scope: !4573)
!4677 = !DILocation(line: 998, column: 22, scope: !4573)
!4678 = !DILocation(line: 999, column: 17, scope: !4573)
!4679 = !DILocation(line: 1002, column: 20, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4573, file: !395, line: 1002, column: 8)
!4681 = !DILocation(line: 996, column: 22, scope: !4573)
!4682 = !DILocation(line: 1002, column: 35, scope: !4680)
!4683 = !DILocation(line: 1002, column: 23, scope: !4680)
!4684 = !DILocation(line: 1002, column: 8, scope: !4573)
!4685 = !DILocation(line: 1003, column: 5, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1003, column: 5)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !395, line: 1003, column: 5)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !395, line: 1003, column: 5)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !395, line: 1003, column: 5)
!4690 = distinct !DILexicalBlock(scope: !4680, file: !395, line: 1002, column: 45)
!4691 = !DILocation(line: 1010, column: 13, scope: !4690)
!4692 = !DILocation(line: 1011, column: 5, scope: !4690)
!4693 = !DILocation(line: 1014, column: 8, scope: !4573)
!4694 = !DILocation(line: 1015, column: 9, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4606, file: !395, line: 1014, column: 15)
!4696 = !DILocation(line: 1018, column: 14, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !395, line: 1017, column: 12)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !395, line: 1015, column: 9)
!4699 = !DILocation(line: 1020, column: 4, scope: !4695)
!4700 = !DILocation(line: 1020, column: 15, scope: !4606)
!4701 = !DILocation(line: 1021, column: 1, scope: !4604)
!4702 = !DILocation(line: 1022, column: 11, scope: !4604)
!4703 = !DILocation(line: 1025, column: 14, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4604, file: !395, line: 1025, column: 9)
!4705 = !DILocation(line: 1026, column: 25, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4704, file: !395, line: 1025, column: 38)
!4707 = !DILocation(line: 1026, column: 19, scope: !4706)
!4708 = !DILocation(line: 1026, column: 6, scope: !4706)
!4709 = !DILocation(line: 1026, column: 23, scope: !4706)
!4710 = !DILocation(line: 1027, column: 5, scope: !4706)
!4711 = !DILocation(line: 1031, column: 21, scope: !4604)
!4712 = !DILocation(line: 1031, column: 13, scope: !4604)
!4713 = !DILocation(line: 1032, column: 4, scope: !4604)
!4714 = !DILocation(line: 995, column: 33, scope: !4574)
!4715 = distinct !{!4715, !4669, !4716}
!4716 = !DILocation(line: 1033, column: 3, scope: !4571)
!4717 = !DILocation(line: 1040, column: 10, scope: !4530)
!4718 = !DILocation(line: 1042, column: 10, scope: !4530)
!4719 = !DILocation(line: 1052, column: 6, scope: !4530)
!4720 = !DILocation(line: 1055, column: 9, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !395, line: 1052, column: 14)
!4722 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1052, column: 6)
!4723 = !DILocation(line: 1056, column: 2, scope: !4721)
!4724 = !DILocation(line: 1056, column: 21, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !395, line: 1056, column: 13)
!4726 = !DILocation(line: 1066, column: 3, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !395, line: 1065, column: 11)
!4728 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1065, column: 6)
!4729 = !DILocation(line: 1067, column: 2, scope: !4727)
!4730 = !DILocation(line: 1068, column: 10, scope: !4530)
!4731 = !DILocation(line: 0, scope: !4587)
!4732 = !DILocation(line: 1074, column: 20, scope: !4590)
!4733 = !DILocation(line: 1074, column: 2, scope: !4587)
!4734 = !DILocation(line: 1110, column: 24, scope: !4530)
!4735 = !DILocation(line: 1053, column: 12, scope: !4721)
!4736 = !DILocation(line: 1054, column: 12, scope: !4721)
!4737 = !DILocation(line: 1108, column: 30, scope: !4530)
!4738 = !DILocation(line: 1108, column: 40, scope: !4530)
!4739 = !DILocation(line: 1108, column: 38, scope: !4530)
!4740 = !DILocation(line: 1109, column: 31, scope: !4530)
!4741 = !DILocation(line: 1109, column: 24, scope: !4530)
!4742 = !DILocation(line: 1110, column: 31, scope: !4530)
!4743 = !DILocation(line: 1114, column: 31, scope: !4530)
!4744 = !DILocation(line: 1114, column: 48, scope: !4530)
!4745 = !DILocation(line: 1115, column: 13, scope: !4530)
!4746 = !DILocation(line: 1118, column: 7, scope: !4530)
!4747 = !DILocation(line: 1119, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1119, column: 6)
!4749 = !DILocation(line: 1119, column: 6, scope: !4530)
!4750 = !DILocation(line: 1075, column: 29, scope: !4589)
!4751 = !DILocation(line: 1075, column: 21, scope: !4589)
!4752 = !DILocation(line: 0, scope: !4589)
!4753 = !DILocation(line: 1076, column: 29, scope: !4589)
!4754 = !DILocation(line: 1076, column: 21, scope: !4589)
!4755 = !DILocation(line: 1077, column: 38, scope: !4589)
!4756 = !DILocation(line: 1077, column: 21, scope: !4589)
!4757 = !DILocation(line: 1078, column: 16, scope: !4589)
!4758 = !DILocation(line: 1080, column: 19, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4589, file: !395, line: 1080, column: 7)
!4760 = !DILocation(line: 1080, column: 34, scope: !4759)
!4761 = !DILocation(line: 1080, column: 22, scope: !4759)
!4762 = !DILocation(line: 1080, column: 7, scope: !4589)
!4763 = !DILocation(line: 1084, column: 7, scope: !4589)
!4764 = !DILocation(line: 1085, column: 8, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !395, line: 1084, column: 14)
!4766 = distinct !DILexicalBlock(scope: !4589, file: !395, line: 1084, column: 7)
!4767 = !DILocation(line: 1087, column: 25, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !395, line: 1085, column: 49)
!4769 = distinct !DILexicalBlock(scope: !4765, file: !395, line: 1085, column: 8)
!4770 = !DILocation(line: 1088, column: 4, scope: !4768)
!4771 = !DILocation(line: 1088, column: 15, scope: !4769)
!4772 = !DILocation(line: 1090, column: 26, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !395, line: 1088, column: 61)
!4774 = distinct !DILexicalBlock(scope: !4769, file: !395, line: 1088, column: 15)
!4775 = !DILocation(line: 1091, column: 4, scope: !4773)
!4776 = !DILocation(line: 1095, column: 8, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4766, file: !395, line: 1094, column: 10)
!4778 = !DILocation(line: 1097, column: 25, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !395, line: 1095, column: 49)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !395, line: 1095, column: 8)
!4781 = !DILocation(line: 1098, column: 4, scope: !4779)
!4782 = !DILocation(line: 1100, column: 26, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !395, line: 1098, column: 11)
!4784 = !DILocation(line: 1100, column: 5, scope: !4783)
!4785 = !DILocation(line: 1100, column: 30, scope: !4783)
!4786 = !DILocation(line: 1101, column: 26, scope: !4783)
!4787 = !DILocation(line: 0, scope: !4766)
!4788 = !DILocation(line: 1074, column: 32, scope: !4590)
!4789 = distinct !{!4789, !4733, !4790}
!4790 = !DILocation(line: 1104, column: 2, scope: !4587)
!4791 = !DILocation(line: 1124, column: 13, scope: !4530)
!4792 = !DILocation(line: 1127, column: 10, scope: !4530)
!4793 = !DILocation(line: 1127, column: 7, scope: !4530)
!4794 = !DILocation(line: 1128, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1128, column: 6)
!4796 = !DILocation(line: 1128, column: 6, scope: !4530)
!4797 = !DILocation(line: 1134, column: 27, scope: !4530)
!4798 = !DILocation(line: 1136, column: 7, scope: !4530)
!4799 = !DILocation(line: 1137, column: 9, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4530, file: !395, line: 1137, column: 6)
!4801 = !DILocation(line: 1137, column: 6, scope: !4530)
!4802 = !DILocation(line: 1131, column: 10, scope: !4530)
!4803 = !DILocation(line: 1140, column: 10, scope: !4530)
!4804 = !DILocation(line: 0, scope: !4597)
!4805 = !DILocation(line: 1143, column: 20, scope: !4600)
!4806 = !DILocation(line: 1143, column: 2, scope: !4597)
!4807 = !DILocation(line: 1144, column: 3, scope: !4599)
!4808 = !DILocation(line: 1144, column: 17, scope: !4599)
!4809 = !DILocation(line: 0, scope: !4599)
!4810 = !DILocation(line: 1144, column: 11, scope: !4599)
!4811 = !DILocation(line: 1145, column: 38, scope: !4599)
!4812 = !DILocation(line: 1145, column: 21, scope: !4599)
!4813 = !DILocation(line: 1146, column: 22, scope: !4599)
!4814 = !DILocation(line: 1146, column: 29, scope: !4599)
!4815 = !DILocation(line: 1148, column: 8, scope: !4599)
!4816 = !DILocation(line: 1149, column: 10, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4599, file: !395, line: 1149, column: 7)
!4818 = !DILocation(line: 1149, column: 7, scope: !4599)
!4819 = !DILocation(line: 1154, column: 8, scope: !4599)
!4820 = !DILocation(line: 1155, column: 10, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4599, file: !395, line: 1155, column: 7)
!4822 = !DILocation(line: 1155, column: 7, scope: !4599)
!4823 = !DILocation(line: 1159, column: 2, scope: !4600)
!4824 = !DILocation(line: 1152, column: 11, scope: !4599)
!4825 = !DILocation(line: 1158, column: 11, scope: !4599)
!4826 = !DILocation(line: 1143, column: 33, scope: !4600)
!4827 = distinct !{!4827, !4806, !4828}
!4828 = !DILocation(line: 1159, column: 2, scope: !4597)
!4829 = !DILocation(line: 1162, column: 8, scope: !4530)
!4830 = !DILocation(line: 1164, column: 2, scope: !4530)
!4831 = !DILocation(line: 1165, column: 1, scope: !4530)
!4832 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !4833, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4835)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!272, !124}
!4835 = !{!4836, !4837, !4838, !4839, !4840, !4841, !4842}
!4836 = !DILocalVariable(name: "packaged", arg: 1, scope: !4832, file: !395, line: 196, type: !124)
!4837 = !DILocalVariable(name: "buf", scope: !4832, file: !395, line: 200, type: !184)
!4838 = !DILocalVariable(name: "start", scope: !4832, file: !395, line: 201, type: !184)
!4839 = !DILocalVariable(name: "args_size", scope: !4832, file: !395, line: 202, type: !32)
!4840 = !DILocalVariable(name: "s_nbr", scope: !4832, file: !395, line: 202, type: !32)
!4841 = !DILocalVariable(name: "ros_nbr", scope: !4832, file: !395, line: 202, type: !32)
!4842 = !DILocalVariable(name: "i", scope: !4843, file: !395, line: 215, type: !125)
!4843 = distinct !DILexicalBlock(scope: !4832, file: !395, line: 215, column: 2)
!4844 = !DILocation(line: 0, scope: !4832)
!4845 = !DILocation(line: 204, column: 14, scope: !4832)
!4846 = !DILocation(line: 204, column: 21, scope: !4832)
!4847 = !DILocation(line: 205, column: 14, scope: !4832)
!4848 = !DILocation(line: 206, column: 14, scope: !4832)
!4849 = !DILocation(line: 209, column: 6, scope: !4832)
!4850 = !DILocation(line: 212, column: 6, scope: !4832)
!4851 = !DILocation(line: 0, scope: !4843)
!4852 = !DILocation(line: 215, column: 20, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4843, file: !395, line: 215, column: 2)
!4854 = !DILocation(line: 215, column: 2, scope: !4843)
!4855 = !DILocation(line: 220, column: 33, scope: !4832)
!4856 = !DILocation(line: 220, column: 2, scope: !4832)
!4857 = !DILocation(line: 216, column: 6, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4853, file: !395, line: 215, column: 34)
!4859 = !DILocation(line: 217, column: 10, scope: !4858)
!4860 = !DILocation(line: 217, column: 36, scope: !4858)
!4861 = !DILocation(line: 217, column: 7, scope: !4858)
!4862 = !DILocation(line: 215, column: 30, scope: !4853)
!4863 = distinct !{!4863, !4854, !4864}
!4864 = !DILocation(line: 218, column: 2, scope: !4843)
!4865 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !4866, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4868)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{!125, !4533, !124, !140, !227}
!4868 = !{!4869, !4870, !4871, !4872}
!4869 = !DILocalVariable(name: "cb", arg: 1, scope: !4865, file: !395, line: 223, type: !4533)
!4870 = !DILocalVariable(name: "ctx", arg: 2, scope: !4865, file: !395, line: 223, type: !124)
!4871 = !DILocalVariable(name: "str", arg: 3, scope: !4865, file: !395, line: 223, type: !140)
!4872 = !DILocalVariable(name: "strl", arg: 4, scope: !4865, file: !395, line: 223, type: !227)
!4873 = !DILocation(line: 0, scope: !4865)
!4874 = !DILocation(line: 225, column: 9, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4865, file: !395, line: 225, column: 6)
!4876 = !DILocation(line: 225, column: 6, scope: !4865)
!4877 = !DILocation(line: 226, column: 14, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !395, line: 225, column: 18)
!4879 = !DILocation(line: 226, column: 12, scope: !4878)
!4880 = !DILocation(line: 226, column: 3, scope: !4878)
!4881 = !DILocation(line: 229, column: 14, scope: !4865)
!4882 = !DILocation(line: 229, column: 9, scope: !4865)
!4883 = !DILocation(line: 229, column: 27, scope: !4865)
!4884 = !DILocation(line: 229, column: 39, scope: !4865)
!4885 = !DILocation(line: 230, column: 17, scope: !4865)
!4886 = !DILocation(line: 230, column: 9, scope: !4865)
!4887 = !DILocation(line: 230, column: 2, scope: !4865)
!4888 = !DILocation(line: 231, column: 1, scope: !4865)
!4889 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4890)
!4890 = !{!4891}
!4891 = !DILocalVariable(name: "c", arg: 1, scope: !4889, file: !408, line: 45, type: !125)
!4892 = !DILocation(line: 0, scope: !4889)
!4893 = !DILocation(line: 50, column: 2, scope: !4889)
!4894 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !4895, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4897)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{null, !409}
!4897 = !{!4898}
!4898 = !DILocalVariable(name: "fn", arg: 1, scope: !4894, file: !408, line: 63, type: !409)
!4899 = !DILocation(line: 0, scope: !4894)
!4900 = !DILocation(line: 65, column: 12, scope: !4894)
!4901 = !DILocation(line: 66, column: 1, scope: !4894)
!4902 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !4903, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !1896)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!124}
!4905 = !DILocation(line: 78, column: 9, scope: !4902)
!4906 = !DILocation(line: 78, column: 2, scope: !4902)
!4907 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !4908, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4916)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !140, !4910}
!4910 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4041, line: 99, baseType: !4911)
!4911 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4041, line: 40, baseType: !4912)
!4912 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !4913)
!4913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4914)
!4914 = !{!4915}
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4913, file: !408, line: 79, baseType: !124, size: 32)
!4916 = !{!4917, !4918, !4919}
!4917 = !DILocalVariable(name: "fmt", arg: 1, scope: !4907, file: !408, line: 113, type: !140)
!4918 = !DILocalVariable(name: "ap", arg: 2, scope: !4907, file: !408, line: 113, type: !4910)
!4919 = !DILocalVariable(name: "ctx", scope: !4920, file: !408, line: 121, type: !4922)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !408, line: 120, column: 27)
!4921 = distinct !DILexicalBlock(scope: !4907, file: !408, line: 120, column: 6)
!4922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !4923)
!4923 = !{!4924, !4925}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4922, file: !408, line: 85, baseType: !32, size: 32)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4922, file: !408, line: 86, baseType: !4926, offset: 32)
!4926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !4927)
!4927 = !{!4928}
!4928 = !DISubrange(count: 0)
!4929 = !DILocation(line: 0, scope: !4907)
!4930 = !DILocation(line: 148, column: 3, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4921, file: !408, line: 138, column: 9)
!4932 = !DILocation(line: 155, column: 1, scope: !4907)
!4933 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !4934, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4936)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{!125, !125, !124}
!4936 = !{!4937, !4938}
!4937 = !DILocalVariable(name: "c", arg: 1, scope: !4933, file: !408, line: 107, type: !125)
!4938 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4933, file: !408, line: 107, type: !124)
!4939 = !DILocation(line: 0, scope: !4933)
!4940 = !DILocation(line: 110, column: 9, scope: !4933)
!4941 = !DILocation(line: 110, column: 2, scope: !4933)
!4942 = distinct !DISubprogram(name: "cbvprintf", scope: !4072, file: !4072, line: 739, type: !4943, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4945)
!4943 = !DISubroutineType(types: !4944)
!4944 = !{!125, !4401, !124, !140, !4910}
!4945 = !{!4946, !4947, !4948, !4949}
!4946 = !DILocalVariable(name: "out", arg: 1, scope: !4942, file: !4072, line: 739, type: !4401)
!4947 = !DILocalVariable(name: "ctx", arg: 2, scope: !4942, file: !4072, line: 739, type: !124)
!4948 = !DILocalVariable(name: "format", arg: 3, scope: !4942, file: !4072, line: 739, type: !140)
!4949 = !DILocalVariable(name: "ap", arg: 4, scope: !4942, file: !4072, line: 739, type: !4910)
!4950 = !DILocation(line: 0, scope: !4942)
!4951 = !DILocation(line: 741, column: 9, scope: !4942)
!4952 = !DILocation(line: 741, column: 2, scope: !4942)
!4953 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !4954, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4956)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{null, !393, !272}
!4956 = !{!4957, !4958, !4959}
!4957 = !DILocalVariable(name: "c", arg: 1, scope: !4953, file: !408, line: 157, type: !393)
!4958 = !DILocalVariable(name: "n", arg: 2, scope: !4953, file: !408, line: 157, type: !272)
!4959 = !DILocalVariable(name: "i", scope: !4953, file: !408, line: 159, type: !272)
!4960 = !DILocation(line: 0, scope: !4953)
!4961 = !DILocation(line: 164, column: 16, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !408, line: 164, column: 2)
!4963 = distinct !DILexicalBlock(scope: !4953, file: !408, line: 164, column: 2)
!4964 = !DILocation(line: 164, column: 2, scope: !4963)
!4965 = !DILocation(line: 165, column: 3, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4962, file: !408, line: 164, column: 26)
!4967 = !DILocation(line: 165, column: 13, scope: !4966)
!4968 = !DILocation(line: 164, column: 22, scope: !4962)
!4969 = distinct !{!4969, !4964, !4970}
!4970 = !DILocation(line: 166, column: 2, scope: !4963)
!4971 = !DILocation(line: 171, column: 1, scope: !4953)
!4972 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !4973, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{null, !140, null}
!4975 = !{!4976, !4977}
!4976 = !DILocalVariable(name: "fmt", arg: 1, scope: !4972, file: !408, line: 203, type: !140)
!4977 = !DILocalVariable(name: "ap", scope: !4972, file: !408, line: 205, type: !4910)
!4978 = !DILocation(line: 0, scope: !4972)
!4979 = !DILocation(line: 205, column: 2, scope: !4972)
!4980 = !DILocation(line: 205, column: 10, scope: !4972)
!4981 = !DILocation(line: 207, column: 2, scope: !4972)
!4982 = !DILocation(line: 209, column: 2, scope: !4972)
!4983 = !DILocation(line: 211, column: 2, scope: !4972)
!4984 = !DILocation(line: 212, column: 1, scope: !4972)
!4985 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !4986, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!125, !393, !272, !140, null}
!4988 = !{!4989, !4990, !4991, !4992, !4993}
!4989 = !DILocalVariable(name: "str", arg: 1, scope: !4985, file: !408, line: 239, type: !393)
!4990 = !DILocalVariable(name: "size", arg: 2, scope: !4985, file: !408, line: 239, type: !272)
!4991 = !DILocalVariable(name: "fmt", arg: 3, scope: !4985, file: !408, line: 239, type: !140)
!4992 = !DILocalVariable(name: "ap", scope: !4985, file: !408, line: 241, type: !4910)
!4993 = !DILocalVariable(name: "ret", scope: !4985, file: !408, line: 242, type: !125)
!4994 = !DILocation(line: 0, scope: !4985)
!4995 = !DILocation(line: 241, column: 2, scope: !4985)
!4996 = !DILocation(line: 241, column: 10, scope: !4985)
!4997 = !DILocation(line: 244, column: 2, scope: !4985)
!4998 = !DILocation(line: 245, column: 8, scope: !4985)
!4999 = !DILocation(line: 246, column: 2, scope: !4985)
!5000 = !DILocation(line: 249, column: 1, scope: !4985)
!5001 = !DILocation(line: 248, column: 2, scope: !4985)
!5002 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5003, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5005)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{!125, !393, !272, !140, !4910}
!5005 = !{!5006, !5007, !5008, !5009, !5010}
!5006 = !DILocalVariable(name: "str", arg: 1, scope: !5002, file: !408, line: 251, type: !393)
!5007 = !DILocalVariable(name: "size", arg: 2, scope: !5002, file: !408, line: 251, type: !272)
!5008 = !DILocalVariable(name: "fmt", arg: 3, scope: !5002, file: !408, line: 251, type: !140)
!5009 = !DILocalVariable(name: "ap", arg: 4, scope: !5002, file: !408, line: 251, type: !4910)
!5010 = !DILocalVariable(name: "ctx", scope: !5002, file: !408, line: 253, type: !5011)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5012)
!5012 = !{!5013, !5014, !5015}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5011, file: !408, line: 218, baseType: !393, size: 32)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5011, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5011, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5016 = !DILocation(line: 0, scope: !5002)
!5017 = !DILocation(line: 253, column: 2, scope: !5002)
!5018 = !DILocation(line: 253, column: 21, scope: !5002)
!5019 = !DILocation(line: 253, column: 27, scope: !5002)
!5020 = !DILocation(line: 255, column: 2, scope: !5002)
!5021 = !DILocation(line: 257, column: 10, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5002, file: !408, line: 257, column: 6)
!5023 = !DILocation(line: 257, column: 22, scope: !5022)
!5024 = !DILocation(line: 257, column: 16, scope: !5022)
!5025 = !DILocation(line: 257, column: 6, scope: !5002)
!5026 = !DILocation(line: 258, column: 3, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !408, line: 257, column: 27)
!5028 = !DILocation(line: 258, column: 18, scope: !5027)
!5029 = !DILocation(line: 259, column: 2, scope: !5027)
!5030 = !DILocation(line: 262, column: 1, scope: !5002)
!5031 = !DILocation(line: 261, column: 2, scope: !5002)
!5032 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5033, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5036)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!125, !125, !5035}
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 32)
!5036 = !{!5037, !5038}
!5037 = !DILocalVariable(name: "c", arg: 1, scope: !5032, file: !408, line: 223, type: !125)
!5038 = !DILocalVariable(name: "ctx", arg: 2, scope: !5032, file: !408, line: 223, type: !5035)
!5039 = !DILocation(line: 0, scope: !5032)
!5040 = !DILocation(line: 225, column: 11, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5032, file: !408, line: 225, column: 6)
!5042 = !DILocation(line: 225, column: 15, scope: !5041)
!5043 = !DILocation(line: 0, scope: !5041)
!5044 = !DILocation(line: 225, column: 23, scope: !5041)
!5045 = !DILocation(line: 225, column: 45, scope: !5041)
!5046 = !DILocation(line: 225, column: 37, scope: !5041)
!5047 = !DILocation(line: 225, column: 6, scope: !5032)
!5048 = !DILocation(line: 226, column: 8, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5041, file: !408, line: 225, column: 50)
!5050 = !DILocation(line: 226, column: 13, scope: !5049)
!5051 = !DILocation(line: 227, column: 3, scope: !5049)
!5052 = !DILocation(line: 230, column: 29, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5032, file: !408, line: 230, column: 6)
!5054 = !DILocation(line: 230, column: 17, scope: !5053)
!5055 = !DILocation(line: 230, column: 6, scope: !5032)
!5056 = !DILocation(line: 231, column: 22, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5053, file: !408, line: 230, column: 34)
!5058 = !DILocation(line: 231, column: 3, scope: !5057)
!5059 = !DILocation(line: 231, column: 26, scope: !5057)
!5060 = !DILocation(line: 232, column: 2, scope: !5057)
!5061 = !DILocation(line: 233, column: 28, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5053, file: !408, line: 232, column: 9)
!5063 = !DILocation(line: 233, column: 22, scope: !5062)
!5064 = !DILocation(line: 233, column: 3, scope: !5062)
!5065 = !DILocation(line: 233, column: 26, scope: !5062)
!5066 = !DILocation(line: 237, column: 1, scope: !5032)
!5067 = distinct !DISubprogram(name: "z_thread_entry", scope: !5068, file: !5068, line: 30, type: !5069, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !5076)
!5068 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5069 = !DISubroutineType(types: !5070)
!5070 = !{null, !5071, !124, !124, !124}
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5072, line: 46, baseType: !5073)
!5072 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 32)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !124, !124, !124}
!5076 = !{!5077, !5078, !5079, !5080}
!5077 = !DILocalVariable(name: "entry", arg: 1, scope: !5067, file: !5068, line: 30, type: !5071)
!5078 = !DILocalVariable(name: "p1", arg: 2, scope: !5067, file: !5068, line: 31, type: !124)
!5079 = !DILocalVariable(name: "p2", arg: 3, scope: !5067, file: !5068, line: 31, type: !124)
!5080 = !DILocalVariable(name: "p3", arg: 4, scope: !5067, file: !5068, line: 31, type: !124)
!5081 = !DILocation(line: 0, scope: !5067)
!5082 = !DILocation(line: 36, column: 2, scope: !5067)
!5083 = !DILocation(line: 38, column: 17, scope: !5067)
!5084 = !DILocation(line: 38, column: 2, scope: !5067)
!5085 = !DILocation(line: 45, column: 2, scope: !5067)
!5086 = distinct !DISubprogram(name: "k_current_get", scope: !2123, file: !2123, line: 530, type: !5087, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !1896)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!5089}
!5089 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !2040, line: 347, baseType: !5090)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 32)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !5092)
!5092 = !{!5093, !5151, !5163, !5164, !5165, !5166, !5179}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5091, file: !2040, line: 247, baseType: !5094, size: 384)
!5094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !5095)
!5095 = !{!5096, !5120, !5127, !5128, !5129, !5138, !5139, !5140}
!5096 = !DIDerivedType(tag: DW_TAG_member, scope: !5094, file: !2040, line: 60, baseType: !5097, size: 64)
!5097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5094, file: !2040, line: 60, size: 64, elements: !5098)
!5098 = !{!5099, !5114}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5097, file: !2040, line: 61, baseType: !5100, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !5101)
!5101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !5102)
!5102 = !{!5103, !5109}
!5103 = !DIDerivedType(tag: DW_TAG_member, scope: !5101, file: !2050, line: 38, baseType: !5104, size: 32)
!5104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5101, file: !2050, line: 38, size: 32, elements: !5105)
!5105 = !{!5106, !5108}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5104, file: !2050, line: 39, baseType: !5107, size: 32)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 32)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5104, file: !2050, line: 40, baseType: !5107, size: 32)
!5109 = !DIDerivedType(tag: DW_TAG_member, scope: !5101, file: !2050, line: 42, baseType: !5110, size: 32, offset: 32)
!5110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5101, file: !2050, line: 42, size: 32, elements: !5111)
!5111 = !{!5112, !5113}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5110, file: !2050, line: 43, baseType: !5107, size: 32)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5110, file: !2050, line: 44, baseType: !5107, size: 32)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5097, file: !2040, line: 62, baseType: !5115, size: 64)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !5116)
!5116 = !{!5117}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5115, file: !2066, line: 50, baseType: !5118, size: 64)
!5118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5119, size: 64, elements: !1160)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 32)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5094, file: !2040, line: 68, baseType: !5121, size: 32, offset: 64)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 32)
!5122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !5123)
!5123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !5124)
!5124 = !{!5125}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5123, file: !2029, line: 232, baseType: !5126, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !5101)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5094, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5094, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!5129 = !DIDerivedType(tag: DW_TAG_member, scope: !5094, file: !2040, line: 90, baseType: !5130, size: 16, offset: 112)
!5130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5094, file: !2040, line: 90, size: 16, elements: !5131)
!5131 = !{!5132, !5137}
!5132 = !DIDerivedType(tag: DW_TAG_member, scope: !5130, file: !2040, line: 91, baseType: !5133, size: 16)
!5133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5130, file: !2040, line: 91, size: 16, elements: !5134)
!5134 = !{!5135, !5136}
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5133, file: !2040, line: 96, baseType: !2087, size: 8)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5133, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5130, file: !2040, line: 100, baseType: !227, size: 16)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5094, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5094, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5094, file: !2040, line: 131, baseType: !5141, size: 192, offset: 192)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !5142)
!5142 = !{!5143, !5144, !5150}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5141, file: !2029, line: 245, baseType: !5100, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5141, file: !2029, line: 246, baseType: !5145, size: 32, offset: 64)
!5145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !5146)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 32)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !5149}
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 32)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5141, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5091, file: !2040, line: 250, baseType: !5152, size: 288, offset: 384)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !5153)
!5153 = !{!5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5152, file: !2106, line: 26, baseType: !208, size: 32)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5152, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5152, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5152, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5152, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5152, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5152, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5152, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5152, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5091, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5091, file: !2040, line: 256, baseType: !5122, size: 64, offset: 704)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5091, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5091, file: !2040, line: 325, baseType: !5167, size: 32, offset: 800)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 32)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !5169)
!5169 = !{!5170, !5176, !5177}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5168, file: !2123, line: 5074, baseType: !5171, size: 96)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !5172)
!5172 = !{!5173, !5174, !5175}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5171, file: !2127, line: 57, baseType: !2130, size: 32)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5171, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5171, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5168, file: !2123, line: 5075, baseType: !5122, size: 64, offset: 96)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5168, file: !2123, line: 5076, baseType: !5178, offset: 160)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5091, file: !2040, line: 343, baseType: !5180, size: 64, offset: 832)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !5181)
!5181 = !{!5182, !5183}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5180, file: !2106, line: 63, baseType: !208, size: 32)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5180, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!5184 = !DILocation(line: 535, column: 9, scope: !5086)
!5185 = !DILocation(line: 535, column: 2, scope: !5086)
!5186 = distinct !DISubprogram(name: "k_thread_abort", scope: !5187, file: !5187, line: 188, type: !5188, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !5190)
!5187 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!5188 = !DISubroutineType(types: !5189)
!5189 = !{null, !5089}
!5190 = !{!5191}
!5191 = !DILocalVariable(name: "thread", arg: 1, scope: !5186, file: !5187, line: 188, type: !5089)
!5192 = !DILocation(line: 0, scope: !5186)
!5193 = !DILocation(line: 197, column: 2, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5186, file: !5187, line: 197, column: 2)
!5195 = !{i64 2151035118}
!5196 = !DILocation(line: 198, column: 2, scope: !5186)
!5197 = !DILocation(line: 199, column: 1, scope: !5186)
!5198 = distinct !DISubprogram(name: "z_current_get", scope: !5187, file: !5187, line: 173, type: !5087, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !1896)
!5199 = !DILocation(line: 180, column: 2, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5198, file: !5187, line: 180, column: 2)
!5201 = !{i64 2151035050}
!5202 = !DILocation(line: 181, column: 9, scope: !5198)
!5203 = !DILocation(line: 181, column: 2, scope: !5198)
!5204 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2485, file: !2485, line: 1338, type: !5205, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5213)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!125, !4401, !124, !140, !5207, !208}
!5207 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4041, line: 99, baseType: !5208)
!5208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4041, line: 40, baseType: !5209)
!5209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2485, baseType: !5210)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5211)
!5211 = !{!5212}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5210, file: !2485, baseType: !124, size: 32)
!5213 = !{!5214, !5215, !5216, !5217, !5218, !5219, !5223, !5224, !5225, !5227, !5232, !5275, !5278, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5290, !5291, !5292, !5296, !5299, !5301, !5304, !5305, !5306, !5311, !5317, !5320, !5324, !5330, !5334, !5337, !5339, !5342}
!5214 = !DILocalVariable(name: "out", arg: 1, scope: !5204, file: !2485, line: 1338, type: !4401)
!5215 = !DILocalVariable(name: "ctx", arg: 2, scope: !5204, file: !2485, line: 1338, type: !124)
!5216 = !DILocalVariable(name: "fp", arg: 3, scope: !5204, file: !2485, line: 1338, type: !140)
!5217 = !DILocalVariable(name: "ap", arg: 4, scope: !5204, file: !2485, line: 1339, type: !5207)
!5218 = !DILocalVariable(name: "flags", arg: 5, scope: !5204, file: !2485, line: 1339, type: !208)
!5219 = !DILocalVariable(name: "buf", scope: !5204, file: !2485, line: 1341, type: !5220)
!5220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5221)
!5221 = !{!5222}
!5222 = !DISubrange(count: 22)
!5223 = !DILocalVariable(name: "count", scope: !5204, file: !2485, line: 1342, type: !272)
!5224 = !DILocalVariable(name: "sint", scope: !5204, file: !2485, line: 1343, type: !2504)
!5225 = !DILocalVariable(name: "tagged_ap", scope: !5204, file: !2485, line: 1345, type: !5226)
!5226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5227 = !DILocalVariable(name: "rc", scope: !5228, file: !2485, line: 1377, type: !125)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !2485, line: 1377, column: 4)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !2485, line: 1376, column: 19)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1376, column: 7)
!5231 = distinct !DILexicalBlock(scope: !5204, file: !2485, line: 1375, column: 19)
!5232 = !DILocalVariable(name: "state", scope: !5231, file: !2485, line: 1395, type: !5233)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5204, file: !2485, line: 1392, size: 192, elements: !5234)
!5234 = !{!5235, !5243}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5233, file: !2485, line: 1393, baseType: !5236, size: 64)
!5236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2485, line: 166, size: 64, elements: !5237)
!5237 = !{!5238, !5239, !5240, !5241, !5242}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5236, file: !2485, line: 168, baseType: !2504, size: 64)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5236, file: !2485, line: 171, baseType: !2507, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5236, file: !2485, line: 174, baseType: !385, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5236, file: !2485, line: 177, baseType: !383, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5236, file: !2485, line: 180, baseType: !124, size: 32)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5233, file: !2485, line: 1394, baseType: !5244, size: 96, offset: 64)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2485, line: 189, size: 96, elements: !5245)
!5245 = !{!5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5270}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5244, file: !2485, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5244, file: !2485, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5244, file: !2485, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5244, file: !2485, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5244, file: !2485, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5244, file: !2485, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5244, file: !2485, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5244, file: !2485, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5244, file: !2485, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5244, file: !2485, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5244, file: !2485, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5244, file: !2485, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5244, file: !2485, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5244, file: !2485, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5244, file: !2485, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5244, file: !2485, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5244, file: !2485, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5244, file: !2485, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5244, file: !2485, line: 260, baseType: !151, size: 8, offset: 24)
!5265 = !DIDerivedType(tag: DW_TAG_member, scope: !5244, file: !2485, line: 262, baseType: !5266, size: 32, offset: 32)
!5266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5244, file: !2485, line: 262, size: 32, elements: !5267)
!5267 = !{!5268, !5269}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5266, file: !2485, line: 267, baseType: !125, size: 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5266, file: !2485, line: 289, baseType: !125, size: 32)
!5270 = !DIDerivedType(tag: DW_TAG_member, scope: !5244, file: !2485, line: 292, baseType: !5271, size: 32, offset: 64)
!5271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5244, file: !2485, line: 292, size: 32, elements: !5272)
!5272 = !{!5273, !5274}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5271, file: !2485, line: 297, baseType: !125, size: 32)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5271, file: !2485, line: 306, baseType: !125, size: 32)
!5275 = !DILocalVariable(name: "conv", scope: !5231, file: !2485, line: 1400, type: !5276)
!5276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5277)
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 32)
!5278 = !DILocalVariable(name: "value", scope: !5231, file: !2485, line: 1401, type: !5279)
!5279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5280)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 32)
!5281 = !DILocalVariable(name: "sp", scope: !5231, file: !2485, line: 1402, type: !140)
!5282 = !DILocalVariable(name: "width", scope: !5231, file: !2485, line: 1403, type: !125)
!5283 = !DILocalVariable(name: "precision", scope: !5231, file: !2485, line: 1404, type: !125)
!5284 = !DILocalVariable(name: "bps", scope: !5231, file: !2485, line: 1405, type: !140)
!5285 = !DILocalVariable(name: "bpe", scope: !5231, file: !2485, line: 1406, type: !140)
!5286 = !DILocalVariable(name: "sign", scope: !5231, file: !2485, line: 1407, type: !142)
!5287 = !DILocalVariable(name: "arg", scope: !5288, file: !2485, line: 1432, type: !125)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !2485, line: 1431, column: 24)
!5289 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1431, column: 7)
!5290 = !DILocalVariable(name: "specifier_cat", scope: !5231, file: !2485, line: 1468, type: !2484)
!5291 = !DILocalVariable(name: "length_mod", scope: !5231, file: !2485, line: 1470, type: !2492)
!5292 = !DILocalVariable(name: "rc", scope: !5293, file: !2485, line: 1575, type: !125)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !2485, line: 1575, column: 4)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !2485, line: 1574, column: 43)
!5295 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1574, column: 7)
!5296 = !DILocalVariable(name: "rc", scope: !5297, file: !2485, line: 1584, type: !125)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1584, column: 4)
!5298 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1582, column: 28)
!5299 = !DILocalVariable(name: "len", scope: !5300, file: !2485, line: 1589, type: !272)
!5300 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1586, column: 13)
!5301 = !DILocalVariable(name: "len", scope: !5302, file: !2485, line: 1641, type: !272)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !2485, line: 1640, column: 24)
!5303 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1640, column: 8)
!5304 = !DILocalVariable(name: "nj_len", scope: !5231, file: !2485, line: 1722, type: !272)
!5305 = !DILocalVariable(name: "pad_len", scope: !5231, file: !2485, line: 1723, type: !125)
!5306 = !DILocalVariable(name: "pad", scope: !5307, file: !2485, line: 1751, type: !142)
!5307 = distinct !DILexicalBlock(scope: !5308, file: !2485, line: 1750, column: 26)
!5308 = distinct !DILexicalBlock(scope: !5309, file: !2485, line: 1750, column: 8)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !2485, line: 1747, column: 18)
!5310 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1747, column: 7)
!5311 = !DILocalVariable(name: "rc", scope: !5312, file: !2485, line: 1758, type: !125)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !2485, line: 1758, column: 7)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !2485, line: 1757, column: 21)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !2485, line: 1757, column: 10)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !2485, line: 1756, column: 26)
!5316 = distinct !DILexicalBlock(scope: !5307, file: !2485, line: 1756, column: 9)
!5317 = !DILocalVariable(name: "rc", scope: !5318, file: !2485, line: 1765, type: !125)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !2485, line: 1765, column: 6)
!5319 = distinct !DILexicalBlock(scope: !5307, file: !2485, line: 1764, column: 25)
!5320 = !DILocalVariable(name: "rc", scope: !5321, file: !2485, line: 1774, type: !125)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !2485, line: 1774, column: 4)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !2485, line: 1773, column: 18)
!5323 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1773, column: 7)
!5324 = !DILocalVariable(name: "rc", scope: !5325, file: !2485, line: 1819, type: !125)
!5325 = distinct !DILexicalBlock(scope: !5326, file: !2485, line: 1819, column: 5)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !2485, line: 1818, column: 44)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !2485, line: 1818, column: 8)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !2485, line: 1817, column: 10)
!5329 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1777, column: 7)
!5330 = !DILocalVariable(name: "rc", scope: !5331, file: !2485, line: 1823, type: !125)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !2485, line: 1823, column: 5)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !2485, line: 1822, column: 26)
!5333 = distinct !DILexicalBlock(scope: !5328, file: !2485, line: 1822, column: 8)
!5334 = !DILocalVariable(name: "rc", scope: !5335, file: !2485, line: 1828, type: !125)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !2485, line: 1828, column: 5)
!5336 = distinct !DILexicalBlock(scope: !5328, file: !2485, line: 1827, column: 26)
!5337 = !DILocalVariable(name: "rc", scope: !5338, file: !2485, line: 1831, type: !125)
!5338 = distinct !DILexicalBlock(scope: !5328, file: !2485, line: 1831, column: 4)
!5339 = !DILocalVariable(name: "rc", scope: !5340, file: !2485, line: 1836, type: !125)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !2485, line: 1836, column: 4)
!5341 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1835, column: 21)
!5342 = !DILabel(scope: !5298, name: "prec_int_pad0", file: !2485, line: 1634)
!5343 = !DILocation(line: 0, scope: !5204)
!5344 = !DILocation(line: 1341, column: 2, scope: !5204)
!5345 = !DILocation(line: 1341, column: 7, scope: !5204)
!5346 = !DILocation(line: 1375, column: 2, scope: !5204)
!5347 = !DILocation(line: 1342, column: 9, scope: !5204)
!5348 = !DILocation(line: 1375, column: 9, scope: !5204)
!5349 = !DILocation(line: 1377, column: 4, scope: !5228)
!5350 = !DILocation(line: 0, scope: !5228)
!5351 = !DILocation(line: 1377, column: 4, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5228, file: !2485, line: 1377, column: 4)
!5353 = distinct !{!5353, !5346, !5354}
!5354 = !DILocation(line: 1839, column: 2, scope: !5204)
!5355 = !DILocation(line: 1392, column: 3, scope: !5231)
!5356 = !DILocation(line: 1395, column: 5, scope: !5231)
!5357 = !DILocation(line: 0, scope: !5231)
!5358 = !DILocation(line: 1409, column: 8, scope: !5231)
!5359 = !DILocation(line: 1414, column: 13, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1414, column: 7)
!5361 = !DILocation(line: 1414, column: 7, scope: !5231)
!5362 = !DILocation(line: 1415, column: 12, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5360, file: !2485, line: 1414, column: 25)
!5364 = !DILocation(line: 1417, column: 14, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5363, file: !2485, line: 1417, column: 8)
!5366 = !DILocation(line: 1417, column: 8, scope: !5363)
!5367 = !DILocation(line: 1418, column: 21, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5365, file: !2485, line: 1417, column: 19)
!5369 = !DILocation(line: 1419, column: 13, scope: !5368)
!5370 = !DILocation(line: 1420, column: 4, scope: !5368)
!5371 = !DILocation(line: 1421, column: 20, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5360, file: !2485, line: 1421, column: 14)
!5373 = !DILocation(line: 1421, column: 14, scope: !5360)
!5374 = !DILocation(line: 1431, column: 13, scope: !5289)
!5375 = !DILocation(line: 1431, column: 7, scope: !5231)
!5376 = !DILocation(line: 1432, column: 14, scope: !5288)
!5377 = !DILocation(line: 0, scope: !5288)
!5378 = !DILocation(line: 1434, column: 12, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5288, file: !2485, line: 1434, column: 8)
!5380 = !DILocation(line: 1434, column: 8, scope: !5288)
!5381 = !DILocation(line: 1435, column: 24, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5379, file: !2485, line: 1434, column: 17)
!5383 = !DILocation(line: 1436, column: 4, scope: !5382)
!5384 = !DILocation(line: 1439, column: 20, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5289, file: !2485, line: 1439, column: 14)
!5386 = !DILocation(line: 1439, column: 14, scope: !5289)
!5387 = !DILocation(line: 1469, column: 37, scope: !5231)
!5388 = !DILocation(line: 1448, column: 20, scope: !5231)
!5389 = !DILocation(line: 1449, column: 22, scope: !5231)
!5390 = !DILocation(line: 1471, column: 34, scope: !5231)
!5391 = !DILocation(line: 1478, column: 7, scope: !5231)
!5392 = !DILocation(line: 1479, column: 4, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !2485, line: 1478, column: 40)
!5394 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1478, column: 7)
!5395 = !DILocation(line: 1484, column: 19, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5393, file: !2485, line: 1479, column: 24)
!5397 = !DILocation(line: 1484, column: 17, scope: !5396)
!5398 = !DILocation(line: 1485, column: 5, scope: !5396)
!5399 = !DILocation(line: 1492, column: 20, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !2485, line: 1491, column: 12)
!5401 = distinct !DILexicalBlock(scope: !5396, file: !2485, line: 1487, column: 9)
!5402 = !DILocation(line: 1492, column: 18, scope: !5400)
!5403 = !DILocation(line: 1494, column: 5, scope: !5396)
!5404 = !DILocation(line: 1497, column: 23, scope: !5396)
!5405 = !DILocation(line: 1496, column: 17, scope: !5396)
!5406 = !DILocation(line: 1498, column: 5, scope: !5396)
!5407 = !DILocation(line: 1501, column: 23, scope: !5396)
!5408 = !DILocation(line: 1500, column: 17, scope: !5396)
!5409 = !DILocation(line: 1502, column: 5, scope: !5396)
!5410 = !DILocation(line: 1513, column: 23, scope: !5396)
!5411 = !DILocation(line: 1513, column: 6, scope: !5396)
!5412 = !DILocation(line: 1512, column: 17, scope: !5396)
!5413 = !DILocation(line: 1514, column: 5, scope: !5396)
!5414 = !DILocation(line: 0, scope: !5396)
!5415 = !DILocation(line: 1516, column: 8, scope: !5393)
!5416 = !DILocation(line: 1517, column: 19, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !2485, line: 1516, column: 33)
!5418 = distinct !DILexicalBlock(scope: !5393, file: !2485, line: 1516, column: 8)
!5419 = !DILocation(line: 1517, column: 17, scope: !5417)
!5420 = !DILocation(line: 1518, column: 4, scope: !5417)
!5421 = !DILocation(line: 1519, column: 19, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !2485, line: 1518, column: 39)
!5423 = distinct !DILexicalBlock(scope: !5418, file: !2485, line: 1518, column: 15)
!5424 = !DILocation(line: 1519, column: 17, scope: !5422)
!5425 = !DILocation(line: 1520, column: 4, scope: !5422)
!5426 = !DILocation(line: 1522, column: 4, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5428, file: !2485, line: 1521, column: 47)
!5428 = distinct !DILexicalBlock(scope: !5394, file: !2485, line: 1521, column: 14)
!5429 = !DILocation(line: 1527, column: 19, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !2485, line: 1522, column: 24)
!5431 = !DILocation(line: 1527, column: 17, scope: !5430)
!5432 = !DILocation(line: 1528, column: 5, scope: !5430)
!5433 = !DILocation(line: 0, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !2485, line: 1530, column: 9)
!5435 = !DILocation(line: 1540, column: 23, scope: !5430)
!5436 = !DILocation(line: 1539, column: 17, scope: !5430)
!5437 = !DILocation(line: 1542, column: 5, scope: !5430)
!5438 = !DILocation(line: 1545, column: 23, scope: !5430)
!5439 = !DILocation(line: 1544, column: 17, scope: !5430)
!5440 = !DILocation(line: 1547, column: 5, scope: !5430)
!5441 = !DILocation(line: 1551, column: 23, scope: !5430)
!5442 = !DILocation(line: 1551, column: 6, scope: !5430)
!5443 = !DILocation(line: 1550, column: 17, scope: !5430)
!5444 = !DILocation(line: 1552, column: 5, scope: !5430)
!5445 = !DILocation(line: 0, scope: !5430)
!5446 = !DILocation(line: 1554, column: 8, scope: !5427)
!5447 = !DILocation(line: 1555, column: 19, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !2485, line: 1554, column: 33)
!5449 = distinct !DILexicalBlock(scope: !5427, file: !2485, line: 1554, column: 8)
!5450 = !DILocation(line: 1555, column: 17, scope: !5448)
!5451 = !DILocation(line: 1556, column: 4, scope: !5448)
!5452 = !DILocation(line: 1557, column: 19, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2485, line: 1556, column: 39)
!5454 = distinct !DILexicalBlock(scope: !5449, file: !2485, line: 1556, column: 15)
!5455 = !DILocation(line: 1557, column: 17, scope: !5453)
!5456 = !DILocation(line: 1558, column: 4, scope: !5453)
!5457 = !DILocation(line: 0, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !2485, line: 1560, column: 8)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !2485, line: 1559, column: 45)
!5460 = distinct !DILexicalBlock(scope: !5428, file: !2485, line: 1559, column: 14)
!5461 = !DILocation(line: 1566, column: 17, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !2485, line: 1565, column: 46)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !2485, line: 1565, column: 14)
!5464 = !DILocation(line: 1566, column: 15, scope: !5462)
!5465 = !DILocation(line: 1567, column: 3, scope: !5462)
!5466 = !DILocation(line: 1574, column: 21, scope: !5295)
!5467 = !DILocation(line: 1575, column: 4, scope: !5293)
!5468 = !DILocation(line: 0, scope: !5293)
!5469 = !DILocation(line: 1575, column: 4, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5293, file: !2485, line: 1575, column: 4)
!5471 = !DILocation(line: 1582, column: 17, scope: !5231)
!5472 = !DILocation(line: 1582, column: 3, scope: !5231)
!5473 = !DILocation(line: 1584, column: 4, scope: !5297)
!5474 = !DILocation(line: 0, scope: !5297)
!5475 = !DILocation(line: 1584, column: 4, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5297, file: !2485, line: 1584, column: 4)
!5477 = !DILocation(line: 1587, column: 31, scope: !5300)
!5478 = !DILocation(line: 1591, column: 18, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5300, file: !2485, line: 1591, column: 8)
!5480 = !DILocation(line: 1591, column: 8, scope: !5300)
!5481 = !DILocation(line: 1592, column: 11, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5479, file: !2485, line: 1591, column: 24)
!5483 = !DILocation(line: 0, scope: !5300)
!5484 = !DILocation(line: 1593, column: 4, scope: !5482)
!5485 = !DILocation(line: 1594, column: 11, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5479, file: !2485, line: 1593, column: 11)
!5487 = !DILocation(line: 1604, column: 51, scope: !5298)
!5488 = !DILocation(line: 1604, column: 13, scope: !5298)
!5489 = !DILocation(line: 1604, column: 11, scope: !5298)
!5490 = !DILocation(line: 1606, column: 4, scope: !5298)
!5491 = !DILocation(line: 1609, column: 14, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1609, column: 8)
!5493 = !DILocation(line: 1609, column: 8, scope: !5298)
!5494 = !DILocation(line: 1619, column: 18, scope: !5298)
!5495 = !DILocation(line: 1620, column: 13, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1620, column: 8)
!5497 = !DILocation(line: 1620, column: 8, scope: !5298)
!5498 = !DILocation(line: 1622, column: 36, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5496, file: !2485, line: 1620, column: 18)
!5500 = !DILocation(line: 1622, column: 17, scope: !5499)
!5501 = !DILocation(line: 1623, column: 4, scope: !5499)
!5502 = !DILocation(line: 1632, column: 29, scope: !5298)
!5503 = !DILocation(line: 1632, column: 10, scope: !5298)
!5504 = !DILocation(line: 1632, column: 4, scope: !5298)
!5505 = !DILocation(line: 1407, column: 8, scope: !5231)
!5506 = !DILocation(line: 0, scope: !5298)
!5507 = !DILocation(line: 1634, column: 3, scope: !5298)
!5508 = !DILocation(line: 1640, column: 18, scope: !5303)
!5509 = !DILocation(line: 1640, column: 8, scope: !5298)
!5510 = !DILocation(line: 1729, column: 13, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1729, column: 7)
!5512 = !DILocation(line: 1641, column: 22, scope: !5302)
!5513 = !DILocation(line: 0, scope: !5302)
!5514 = !DILocation(line: 1646, column: 21, scope: !5302)
!5515 = !DILocation(line: 1649, column: 13, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5302, file: !2485, line: 1649, column: 9)
!5517 = !DILocation(line: 1649, column: 9, scope: !5302)
!5518 = !DILocation(line: 1650, column: 35, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5516, file: !2485, line: 1649, column: 34)
!5520 = !DILocation(line: 1650, column: 23, scope: !5519)
!5521 = !DILocation(line: 1651, column: 5, scope: !5519)
!5522 = !DILocation(line: 1660, column: 15, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1660, column: 8)
!5524 = !DILocation(line: 1660, column: 19, scope: !5523)
!5525 = !DILocation(line: 1660, column: 8, scope: !5298)
!5526 = !DILocation(line: 1661, column: 23, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5523, file: !2485, line: 1660, column: 28)
!5528 = !DILocation(line: 1661, column: 11, scope: !5527)
!5529 = !DILocation(line: 1665, column: 22, scope: !5527)
!5530 = !DILocation(line: 1666, column: 21, scope: !5527)
!5531 = !DILocation(line: 1668, column: 5, scope: !5527)
!5532 = !DILocation(line: 1677, column: 30, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5534, file: !2485, line: 1676, column: 49)
!5534 = distinct !DILexicalBlock(scope: !5298, file: !2485, line: 1676, column: 8)
!5535 = !DILocation(line: 1677, column: 5, scope: !5533)
!5536 = !DILocation(line: 1680, column: 4, scope: !5298)
!5537 = !DILocation(line: 0, scope: !5479)
!5538 = !DILocation(line: 1597, column: 14, scope: !5300)
!5539 = !DILocation(line: 1699, column: 11, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1699, column: 7)
!5541 = !DILocation(line: 1699, column: 7, scope: !5231)
!5542 = !DILocation(line: 1725, column: 7, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1725, column: 7)
!5544 = !DILocation(line: 1725, column: 12, scope: !5543)
!5545 = !DILocation(line: 1747, column: 13, scope: !5310)
!5546 = !DILocation(line: 1747, column: 7, scope: !5231)
!5547 = !DILocation(line: 1722, column: 24, scope: !5231)
!5548 = !DILocation(line: 1725, column: 7, scope: !5231)
!5549 = !DILocation(line: 1729, column: 7, scope: !5231)
!5550 = !DILocation(line: 1736, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5231, file: !2485, line: 1736, column: 7)
!5552 = !DILocation(line: 1735, column: 19, scope: !5231)
!5553 = !DILocation(line: 1736, column: 7, scope: !5231)
!5554 = !DILocation(line: 1748, column: 10, scope: !5309)
!5555 = !DILocation(line: 1750, column: 15, scope: !5308)
!5556 = !DILocation(line: 1750, column: 8, scope: !5309)
!5557 = !DILocation(line: 0, scope: !5307)
!5558 = !DILocation(line: 1756, column: 15, scope: !5316)
!5559 = !DILocation(line: 1756, column: 9, scope: !5307)
!5560 = !DILocation(line: 1758, column: 7, scope: !5312)
!5561 = !DILocation(line: 0, scope: !5312)
!5562 = !DILocation(line: 1758, column: 7, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5312, file: !2485, line: 1758, column: 7)
!5564 = !DILocation(line: 1764, column: 5, scope: !5307)
!5565 = !DILocation(line: 0, scope: !5309)
!5566 = !DILocation(line: 1764, column: 20, scope: !5307)
!5567 = !DILocation(line: 1764, column: 17, scope: !5307)
!5568 = !DILocation(line: 1765, column: 6, scope: !5318)
!5569 = !DILocation(line: 0, scope: !5318)
!5570 = !DILocation(line: 1765, column: 6, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5318, file: !2485, line: 1765, column: 6)
!5572 = distinct !{!5572, !5564, !5573}
!5573 = !DILocation(line: 1766, column: 5, scope: !5307)
!5574 = !DILocation(line: 1773, column: 12, scope: !5323)
!5575 = !DILocation(line: 1773, column: 7, scope: !5231)
!5576 = !DILocation(line: 1773, column: 7, scope: !5323)
!5577 = !DILocation(line: 1774, column: 4, scope: !5321)
!5578 = !DILocation(line: 0, scope: !5321)
!5579 = !DILocation(line: 1774, column: 4, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5321, file: !2485, line: 1774, column: 4)
!5581 = !DILocation(line: 1818, column: 8, scope: !5327)
!5582 = !DILocation(line: 1818, column: 27, scope: !5327)
!5583 = !DILocation(line: 1818, column: 25, scope: !5327)
!5584 = !DILocation(line: 1818, column: 8, scope: !5328)
!5585 = !DILocation(line: 1819, column: 5, scope: !5325)
!5586 = !DILocation(line: 0, scope: !5325)
!5587 = !DILocation(line: 1819, column: 5, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5325, file: !2485, line: 1819, column: 5)
!5589 = !DILocation(line: 1822, column: 14, scope: !5333)
!5590 = !DILocation(line: 1822, column: 8, scope: !5328)
!5591 = !DILocation(line: 1823, column: 5, scope: !5331)
!5592 = !DILocation(line: 0, scope: !5331)
!5593 = !DILocation(line: 1823, column: 5, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5331, file: !2485, line: 1823, column: 5)
!5595 = !DILocation(line: 1826, column: 20, scope: !5328)
!5596 = !DILocation(line: 1827, column: 4, scope: !5328)
!5597 = !DILocation(line: 0, scope: !5328)
!5598 = !DILocation(line: 1827, column: 21, scope: !5328)
!5599 = !DILocation(line: 1827, column: 18, scope: !5328)
!5600 = !DILocation(line: 1828, column: 5, scope: !5335)
!5601 = !DILocation(line: 0, scope: !5335)
!5602 = !DILocation(line: 1828, column: 5, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5335, file: !2485, line: 1828, column: 5)
!5604 = distinct !{!5604, !5596, !5605}
!5605 = !DILocation(line: 1829, column: 4, scope: !5328)
!5606 = !DILocation(line: 1831, column: 4, scope: !5338)
!5607 = !DILocation(line: 0, scope: !5338)
!5608 = !DILocation(line: 1831, column: 4, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5338, file: !2485, line: 1831, column: 4)
!5610 = !DILocation(line: 1835, column: 16, scope: !5231)
!5611 = !DILocation(line: 1835, column: 3, scope: !5231)
!5612 = !DILocation(line: 1836, column: 4, scope: !5340)
!5613 = !DILocation(line: 0, scope: !5340)
!5614 = !DILocation(line: 1836, column: 4, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5340, file: !2485, line: 1836, column: 4)
!5616 = !DILocation(line: 1837, column: 4, scope: !5341)
!5617 = distinct !{!5617, !5611, !5618}
!5618 = !DILocation(line: 1838, column: 3, scope: !5231)
!5619 = !DILocation(line: 1844, column: 1, scope: !5204)
!5620 = distinct !DISubprogram(name: "extract_conversion", scope: !2485, file: !2485, line: 642, type: !5621, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5623)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!140, !5277, !140}
!5623 = !{!5624, !5625}
!5624 = !DILocalVariable(name: "conv", arg: 1, scope: !5620, file: !2485, line: 642, type: !5277)
!5625 = !DILocalVariable(name: "sp", arg: 2, scope: !5620, file: !2485, line: 643, type: !140)
!5626 = !DILocation(line: 0, scope: !5620)
!5627 = !DILocation(line: 645, column: 10, scope: !5620)
!5628 = !DILocation(line: 653, column: 2, scope: !5620)
!5629 = !DILocation(line: 654, column: 6, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5620, file: !2485, line: 654, column: 6)
!5631 = !DILocation(line: 654, column: 10, scope: !5630)
!5632 = !DILocation(line: 654, column: 6, scope: !5620)
!5633 = !DILocation(line: 655, column: 24, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5630, file: !2485, line: 654, column: 18)
!5635 = !DILocation(line: 655, column: 19, scope: !5634)
!5636 = !DILocation(line: 656, column: 3, scope: !5634)
!5637 = !DILocation(line: 659, column: 7, scope: !5620)
!5638 = !DILocation(line: 660, column: 7, scope: !5620)
!5639 = !DILocation(line: 661, column: 7, scope: !5620)
!5640 = !DILocation(line: 662, column: 7, scope: !5620)
!5641 = !DILocation(line: 663, column: 7, scope: !5620)
!5642 = !DILocation(line: 665, column: 2, scope: !5620)
!5643 = !DILocation(line: 666, column: 1, scope: !5620)
!5644 = distinct !DISubprogram(name: "outs", scope: !2485, file: !2485, line: 1319, type: !5645, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5647)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!125, !4401, !124, !140, !140}
!5647 = !{!5648, !5649, !5650, !5651, !5652, !5653}
!5648 = !DILocalVariable(name: "out", arg: 1, scope: !5644, file: !2485, line: 1319, type: !4401)
!5649 = !DILocalVariable(name: "ctx", arg: 2, scope: !5644, file: !2485, line: 1320, type: !124)
!5650 = !DILocalVariable(name: "sp", arg: 3, scope: !5644, file: !2485, line: 1321, type: !140)
!5651 = !DILocalVariable(name: "ep", arg: 4, scope: !5644, file: !2485, line: 1322, type: !140)
!5652 = !DILocalVariable(name: "count", scope: !5644, file: !2485, line: 1324, type: !272)
!5653 = !DILocalVariable(name: "rc", scope: !5654, file: !2485, line: 1327, type: !125)
!5654 = distinct !DILexicalBlock(scope: !5644, file: !2485, line: 1326, column: 45)
!5655 = !DILocation(line: 0, scope: !5644)
!5656 = !DILocation(line: 1326, column: 2, scope: !5644)
!5657 = !DILocation(line: 1324, column: 9, scope: !5644)
!5658 = !DILocation(line: 1326, column: 13, scope: !5644)
!5659 = !DILocation(line: 1326, column: 19, scope: !5644)
!5660 = !DILocation(line: 1327, column: 21, scope: !5654)
!5661 = !DILocation(line: 1326, column: 36, scope: !5644)
!5662 = !DILocation(line: 1326, column: 39, scope: !5644)
!5663 = !DILocation(line: 1327, column: 24, scope: !5654)
!5664 = !DILocation(line: 1327, column: 16, scope: !5654)
!5665 = !DILocation(line: 1327, column: 12, scope: !5654)
!5666 = !DILocation(line: 0, scope: !5654)
!5667 = !DILocation(line: 1329, column: 10, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5654, file: !2485, line: 1329, column: 7)
!5669 = !DILocation(line: 1329, column: 7, scope: !5654)
!5670 = distinct !{!5670, !5656, !5671}
!5671 = !DILocation(line: 1333, column: 2, scope: !5644)
!5672 = !DILocation(line: 1336, column: 1, scope: !5644)
!5673 = distinct !DISubprogram(name: "encode_uint", scope: !2485, file: !2485, line: 788, type: !5674, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5676)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!393, !2507, !5277, !393, !140}
!5676 = !{!5677, !5678, !5679, !5680, !5681, !5682, !5684, !5685}
!5677 = !DILocalVariable(name: "value", arg: 1, scope: !5673, file: !2485, line: 788, type: !2507)
!5678 = !DILocalVariable(name: "conv", arg: 2, scope: !5673, file: !2485, line: 789, type: !5277)
!5679 = !DILocalVariable(name: "bps", arg: 3, scope: !5673, file: !2485, line: 790, type: !393)
!5680 = !DILocalVariable(name: "bpe", arg: 4, scope: !5673, file: !2485, line: 791, type: !140)
!5681 = !DILocalVariable(name: "upcase", scope: !5673, file: !2485, line: 793, type: !153)
!5682 = !DILocalVariable(name: "radix", scope: !5673, file: !2485, line: 794, type: !5683)
!5683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5684 = !DILocalVariable(name: "bp", scope: !5673, file: !2485, line: 795, type: !393)
!5685 = !DILocalVariable(name: "lsv", scope: !5686, file: !2485, line: 798, type: !32)
!5686 = distinct !DILexicalBlock(scope: !5673, file: !2485, line: 797, column: 5)
!5687 = !DILocation(line: 0, scope: !5673)
!5688 = !DILocation(line: 793, column: 35, scope: !5673)
!5689 = !DILocation(line: 793, column: 24, scope: !5673)
!5690 = !DILocation(line: 793, column: 16, scope: !5673)
!5691 = !DILocation(line: 794, column: 29, scope: !5673)
!5692 = !DILocation(line: 795, column: 24, scope: !5673)
!5693 = !DILocation(line: 795, column: 17, scope: !5673)
!5694 = !DILocation(line: 797, column: 2, scope: !5673)
!5695 = !DILocation(line: 802, column: 9, scope: !5686)
!5696 = !DILocation(line: 798, column: 22, scope: !5686)
!5697 = !DILocation(line: 0, scope: !5686)
!5698 = !DILocation(line: 800, column: 16, scope: !5686)
!5699 = !DILocation(line: 800, column: 11, scope: !5686)
!5700 = !DILocation(line: 800, column: 4, scope: !5686)
!5701 = !DILocation(line: 800, column: 9, scope: !5686)
!5702 = !DILocation(line: 803, column: 18, scope: !5673)
!5703 = !DILocation(line: 803, column: 24, scope: !5673)
!5704 = !DILocation(line: 803, column: 2, scope: !5686)
!5705 = distinct !{!5705, !5694, !5706}
!5706 = !DILocation(line: 803, column: 37, scope: !5673)
!5707 = !DILocation(line: 808, column: 12, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5673, file: !2485, line: 808, column: 6)
!5709 = !DILocation(line: 808, column: 6, scope: !5673)
!5710 = !DILocation(line: 809, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5708, file: !2485, line: 808, column: 23)
!5712 = !DILocation(line: 813, column: 3, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5714, file: !2485, line: 811, column: 27)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !2485, line: 811, column: 14)
!5715 = distinct !DILexicalBlock(scope: !5711, file: !2485, line: 809, column: 7)
!5716 = !DILocation(line: 0, scope: !5715)
!5717 = !DILocation(line: 818, column: 2, scope: !5673)
!5718 = distinct !DISubprogram(name: "store_count", scope: !2485, file: !2485, line: 1280, type: !5719, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5723)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !5721, !124, !125}
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 32)
!5722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5244)
!5723 = !{!5724, !5725, !5726}
!5724 = !DILocalVariable(name: "conv", arg: 1, scope: !5718, file: !2485, line: 1280, type: !5721)
!5725 = !DILocalVariable(name: "dp", arg: 2, scope: !5718, file: !2485, line: 1281, type: !124)
!5726 = !DILocalVariable(name: "count", arg: 3, scope: !5718, file: !2485, line: 1282, type: !125)
!5727 = !DILocation(line: 0, scope: !5718)
!5728 = !DILocation(line: 1284, column: 38, scope: !5718)
!5729 = !DILocation(line: 1284, column: 2, scope: !5718)
!5730 = !DILocation(line: 1286, column: 4, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5718, file: !2485, line: 1284, column: 50)
!5732 = !DILocation(line: 1286, column: 14, scope: !5731)
!5733 = !DILocation(line: 1287, column: 3, scope: !5731)
!5734 = !DILocation(line: 1289, column: 24, scope: !5731)
!5735 = !DILocation(line: 1289, column: 22, scope: !5731)
!5736 = !DILocation(line: 1290, column: 3, scope: !5731)
!5737 = !DILocation(line: 1292, column: 18, scope: !5731)
!5738 = !DILocation(line: 1292, column: 4, scope: !5731)
!5739 = !DILocation(line: 1292, column: 16, scope: !5731)
!5740 = !DILocation(line: 1293, column: 3, scope: !5731)
!5741 = !DILocation(line: 1295, column: 4, scope: !5731)
!5742 = !DILocation(line: 1295, column: 15, scope: !5731)
!5743 = !DILocation(line: 1296, column: 3, scope: !5731)
!5744 = !DILocation(line: 1298, column: 22, scope: !5731)
!5745 = !DILocation(line: 1298, column: 4, scope: !5731)
!5746 = !DILocation(line: 1298, column: 20, scope: !5731)
!5747 = !DILocation(line: 1299, column: 3, scope: !5731)
!5748 = !DILocation(line: 1301, column: 21, scope: !5731)
!5749 = !DILocation(line: 1301, column: 4, scope: !5731)
!5750 = !DILocation(line: 1301, column: 19, scope: !5731)
!5751 = !DILocation(line: 1302, column: 3, scope: !5731)
!5752 = !DILocation(line: 1304, column: 4, scope: !5731)
!5753 = !DILocation(line: 1304, column: 17, scope: !5731)
!5754 = !DILocation(line: 1305, column: 3, scope: !5731)
!5755 = !DILocation(line: 1307, column: 4, scope: !5731)
!5756 = !DILocation(line: 1307, column: 20, scope: !5731)
!5757 = !DILocation(line: 1308, column: 3, scope: !5731)
!5758 = !DILocation(line: 1316, column: 1, scope: !5718)
!5759 = distinct !DISubprogram(name: "isupper", scope: !5760, file: !5760, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5761)
!5760 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5761 = !{!5762}
!5762 = !DILocalVariable(name: "a", arg: 1, scope: !5759, file: !5760, line: 16, type: !125)
!5763 = !DILocation(line: 0, scope: !5759)
!5764 = !DILocation(line: 18, column: 29, scope: !5759)
!5765 = !DILocation(line: 18, column: 45, scope: !5759)
!5766 = !DILocation(line: 18, column: 2, scope: !5759)
!5767 = distinct !DISubprogram(name: "conversion_radix", scope: !2485, file: !2485, line: 761, type: !5768, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5770)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{!272, !142}
!5770 = !{!5771}
!5771 = !DILocalVariable(name: "specifier", arg: 1, scope: !5767, file: !2485, line: 761, type: !142)
!5772 = !DILocation(line: 0, scope: !5767)
!5773 = !DILocation(line: 763, column: 2, scope: !5767)
!5774 = !DILocation(line: 770, column: 3, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5767, file: !2485, line: 763, column: 21)
!5776 = !DILocation(line: 774, column: 3, scope: !5775)
!5777 = !DILocation(line: 0, scope: !5775)
!5778 = !DILocation(line: 776, column: 1, scope: !5767)
!5779 = distinct !DISubprogram(name: "extract_flags", scope: !2485, file: !2485, line: 339, type: !5621, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5780)
!5780 = !{!5781, !5782, !5783}
!5781 = !DILocalVariable(name: "conv", arg: 1, scope: !5779, file: !2485, line: 339, type: !5277)
!5782 = !DILocalVariable(name: "sp", arg: 2, scope: !5779, file: !2485, line: 340, type: !140)
!5783 = !DILocalVariable(name: "loop", scope: !5779, file: !2485, line: 342, type: !153)
!5784 = !DILocation(line: 0, scope: !5779)
!5785 = !DILocation(line: 344, column: 2, scope: !5779)
!5786 = !DILocation(line: 345, column: 11, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5779, file: !2485, line: 344, column: 5)
!5788 = !DILocation(line: 345, column: 3, scope: !5787)
!5789 = !DILocation(line: 351, column: 4, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !2485, line: 345, column: 16)
!5791 = !DILocation(line: 354, column: 4, scope: !5790)
!5792 = !DILocation(line: 357, column: 4, scope: !5790)
!5793 = !DILocation(line: 360, column: 4, scope: !5790)
!5794 = !DILocation(line: 0, scope: !5790)
!5795 = !DILocation(line: 370, column: 12, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5779, file: !2485, line: 370, column: 6)
!5797 = !DILocation(line: 370, column: 22, scope: !5796)
!5798 = !DILocation(line: 371, column: 19, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5796, file: !2485, line: 370, column: 42)
!5800 = !DILocation(line: 372, column: 2, scope: !5799)
!5801 = !DILocation(line: 376, column: 2, scope: !5779)
!5802 = distinct !DISubprogram(name: "extract_width", scope: !2485, file: !2485, line: 388, type: !5621, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5803)
!5803 = !{!5804, !5805, !5806, !5807}
!5804 = !DILocalVariable(name: "conv", arg: 1, scope: !5802, file: !2485, line: 388, type: !5277)
!5805 = !DILocalVariable(name: "sp", arg: 2, scope: !5802, file: !2485, line: 389, type: !140)
!5806 = !DILocalVariable(name: "wp", scope: !5802, file: !2485, line: 398, type: !140)
!5807 = !DILocalVariable(name: "width", scope: !5802, file: !2485, line: 399, type: !272)
!5808 = !DILocation(line: 0, scope: !5802)
!5809 = !DILocation(line: 391, column: 8, scope: !5802)
!5810 = !DILocation(line: 391, column: 22, scope: !5802)
!5811 = !DILocation(line: 393, column: 6, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !2485, line: 393, column: 6)
!5813 = !DILocation(line: 393, column: 10, scope: !5812)
!5814 = !DILocation(line: 393, column: 6, scope: !5802)
!5815 = !DILocation(line: 394, column: 20, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !2485, line: 393, column: 18)
!5817 = !DILocation(line: 395, column: 10, scope: !5816)
!5818 = !DILocation(line: 395, column: 3, scope: !5816)
!5819 = !DILocation(line: 399, column: 17, scope: !5802)
!5820 = !DILocation(line: 401, column: 6, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5802, file: !2485, line: 401, column: 6)
!5822 = !DILocation(line: 401, column: 9, scope: !5821)
!5823 = !DILocation(line: 401, column: 6, scope: !5802)
!5824 = !DILocation(line: 402, column: 23, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !2485, line: 401, column: 16)
!5826 = !DILocation(line: 403, column: 9, scope: !5825)
!5827 = !DILocation(line: 403, column: 21, scope: !5825)
!5828 = !DILocation(line: 405, column: 11, scope: !5825)
!5829 = !DILocation(line: 404, column: 21, scope: !5825)
!5830 = !DILocation(line: 406, column: 2, scope: !5825)
!5831 = !DILocation(line: 409, column: 1, scope: !5802)
!5832 = distinct !DISubprogram(name: "extract_prec", scope: !2485, file: !2485, line: 420, type: !5621, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5833)
!5833 = !{!5834, !5835, !5836}
!5834 = !DILocalVariable(name: "conv", arg: 1, scope: !5832, file: !2485, line: 420, type: !5277)
!5835 = !DILocalVariable(name: "sp", arg: 2, scope: !5832, file: !2485, line: 421, type: !140)
!5836 = !DILocalVariable(name: "prec", scope: !5832, file: !2485, line: 435, type: !272)
!5837 = !DILocation(line: 0, scope: !5832)
!5838 = !DILocation(line: 423, column: 24, scope: !5832)
!5839 = !DILocation(line: 423, column: 28, scope: !5832)
!5840 = !DILocation(line: 423, column: 8, scope: !5832)
!5841 = !DILocation(line: 423, column: 21, scope: !5832)
!5842 = !DILocation(line: 425, column: 6, scope: !5832)
!5843 = !DILocation(line: 428, column: 2, scope: !5832)
!5844 = !DILocation(line: 430, column: 6, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5832, file: !2485, line: 430, column: 6)
!5846 = !DILocation(line: 430, column: 10, scope: !5845)
!5847 = !DILocation(line: 430, column: 6, scope: !5832)
!5848 = !DILocation(line: 431, column: 19, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5845, file: !2485, line: 430, column: 18)
!5850 = !DILocation(line: 432, column: 10, scope: !5849)
!5851 = !DILocation(line: 432, column: 3, scope: !5849)
!5852 = !DILocation(line: 435, column: 16, scope: !5832)
!5853 = !DILocation(line: 437, column: 8, scope: !5832)
!5854 = !DILocation(line: 437, column: 19, scope: !5832)
!5855 = !DILocation(line: 439, column: 10, scope: !5832)
!5856 = !DILocation(line: 438, column: 20, scope: !5832)
!5857 = !DILocation(line: 441, column: 9, scope: !5832)
!5858 = !DILocation(line: 442, column: 1, scope: !5832)
!5859 = distinct !DISubprogram(name: "extract_length", scope: !2485, file: !2485, line: 453, type: !5621, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5860)
!5860 = !{!5861, !5862}
!5861 = !DILocalVariable(name: "conv", arg: 1, scope: !5859, file: !2485, line: 453, type: !5277)
!5862 = !DILocalVariable(name: "sp", arg: 2, scope: !5859, file: !2485, line: 454, type: !140)
!5863 = !DILocation(line: 0, scope: !5859)
!5864 = !DILocation(line: 456, column: 10, scope: !5859)
!5865 = !DILocation(line: 456, column: 2, scope: !5859)
!5866 = !DILocation(line: 458, column: 8, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !2485, line: 458, column: 7)
!5868 = distinct !DILexicalBlock(scope: !5859, file: !2485, line: 456, column: 15)
!5869 = !DILocation(line: 458, column: 7, scope: !5867)
!5870 = !DILocation(line: 458, column: 13, scope: !5867)
!5871 = !DILocation(line: 0, scope: !5867)
!5872 = !DILocation(line: 458, column: 7, scope: !5868)
!5873 = !DILocation(line: 459, column: 21, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5867, file: !2485, line: 458, column: 21)
!5875 = !DILocation(line: 460, column: 4, scope: !5874)
!5876 = !DILocation(line: 461, column: 3, scope: !5874)
!5877 = !DILocation(line: 462, column: 21, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5867, file: !2485, line: 461, column: 10)
!5879 = !DILocation(line: 466, column: 8, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5868, file: !2485, line: 466, column: 7)
!5881 = !DILocation(line: 466, column: 7, scope: !5880)
!5882 = !DILocation(line: 466, column: 13, scope: !5880)
!5883 = !DILocation(line: 0, scope: !5880)
!5884 = !DILocation(line: 466, column: 7, scope: !5868)
!5885 = !DILocation(line: 467, column: 21, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5880, file: !2485, line: 466, column: 21)
!5887 = !DILocation(line: 468, column: 4, scope: !5886)
!5888 = !DILocation(line: 469, column: 3, scope: !5886)
!5889 = !DILocation(line: 470, column: 21, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5880, file: !2485, line: 469, column: 10)
!5891 = !DILocation(line: 474, column: 9, scope: !5868)
!5892 = !DILocation(line: 474, column: 20, scope: !5868)
!5893 = !DILocation(line: 475, column: 3, scope: !5868)
!5894 = !DILocation(line: 476, column: 3, scope: !5868)
!5895 = !DILocation(line: 478, column: 9, scope: !5868)
!5896 = !DILocation(line: 478, column: 20, scope: !5868)
!5897 = !DILocation(line: 479, column: 3, scope: !5868)
!5898 = !DILocation(line: 480, column: 3, scope: !5868)
!5899 = !DILocation(line: 482, column: 9, scope: !5868)
!5900 = !DILocation(line: 482, column: 20, scope: !5868)
!5901 = !DILocation(line: 483, column: 3, scope: !5868)
!5902 = !DILocation(line: 484, column: 3, scope: !5868)
!5903 = !DILocation(line: 486, column: 9, scope: !5868)
!5904 = !DILocation(line: 486, column: 20, scope: !5868)
!5905 = !DILocation(line: 487, column: 3, scope: !5868)
!5906 = !DILocation(line: 492, column: 21, scope: !5868)
!5907 = !DILocation(line: 493, column: 3, scope: !5868)
!5908 = !DILocation(line: 495, column: 9, scope: !5868)
!5909 = !DILocation(line: 495, column: 20, scope: !5868)
!5910 = !DILocation(line: 496, column: 3, scope: !5868)
!5911 = !DILocation(line: 498, column: 2, scope: !5859)
!5912 = distinct !DISubprogram(name: "extract_specifier", scope: !2485, file: !2485, line: 513, type: !5621, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5913)
!5913 = !{!5914, !5915, !5916, !5917}
!5914 = !DILocalVariable(name: "conv", arg: 1, scope: !5912, file: !2485, line: 513, type: !5277)
!5915 = !DILocalVariable(name: "sp", arg: 2, scope: !5912, file: !2485, line: 514, type: !140)
!5916 = !DILocalVariable(name: "unsupported", scope: !5912, file: !2485, line: 516, type: !153)
!5917 = !DILabel(scope: !5918, name: "int_conv", file: !2485, line: 526)
!5918 = distinct !DILexicalBlock(scope: !5912, file: !2485, line: 520, column: 27)
!5919 = !DILocation(line: 0, scope: !5912)
!5920 = !DILocation(line: 518, column: 20, scope: !5912)
!5921 = !DILocation(line: 518, column: 8, scope: !5912)
!5922 = !DILocation(line: 518, column: 18, scope: !5912)
!5923 = !DILocation(line: 520, column: 2, scope: !5912)
!5924 = !DILocation(line: 525, column: 3, scope: !5918)
!5925 = !DILocation(line: 0, scope: !5918)
!5926 = !DILocation(line: 526, column: 1, scope: !5918)
!5927 = !DILocation(line: 528, column: 24, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5918, file: !2485, line: 528, column: 7)
!5929 = !DILocation(line: 528, column: 7, scope: !5918)
!5930 = !DILocation(line: 535, column: 23, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5918, file: !2485, line: 535, column: 7)
!5932 = !DILocation(line: 535, column: 7, scope: !5918)
!5933 = !DILocation(line: 536, column: 36, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5931, file: !2485, line: 535, column: 31)
!5935 = !DILocation(line: 537, column: 3, scope: !5934)
!5936 = !DILocation(line: 570, column: 9, scope: !5918)
!5937 = !DILocation(line: 570, column: 23, scope: !5918)
!5938 = !DILocation(line: 575, column: 4, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !2485, line: 573, column: 48)
!5940 = distinct !DILexicalBlock(scope: !5918, file: !2485, line: 573, column: 7)
!5941 = !DILocation(line: 603, column: 9, scope: !5918)
!5942 = !DILocation(line: 603, column: 23, scope: !5918)
!5943 = !DILocation(line: 605, column: 24, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5918, file: !2485, line: 605, column: 7)
!5945 = !DILocation(line: 605, column: 7, scope: !5918)
!5946 = !DILocation(line: 612, column: 9, scope: !5918)
!5947 = !DILocation(line: 612, column: 23, scope: !5918)
!5948 = !DILocation(line: 619, column: 24, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5918, file: !2485, line: 619, column: 7)
!5950 = !DILocation(line: 619, column: 7, scope: !5918)
!5951 = !DILocation(line: 625, column: 9, scope: !5918)
!5952 = !DILocation(line: 625, column: 17, scope: !5918)
!5953 = !DILocation(line: 626, column: 3, scope: !5918)
!5954 = !DILocation(line: 629, column: 20, scope: !5912)
!5955 = !DILocation(line: 629, column: 8, scope: !5912)
!5956 = !DILocation(line: 518, column: 23, scope: !5912)
!5957 = !DILocation(line: 631, column: 2, scope: !5912)
!5958 = distinct !DISubprogram(name: "extract_decimal", scope: !2485, file: !2485, line: 318, type: !5959, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5961)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{!272, !386}
!5961 = !{!5962, !5963, !5964}
!5962 = !DILocalVariable(name: "str", arg: 1, scope: !5958, file: !2485, line: 318, type: !386)
!5963 = !DILocalVariable(name: "sp", scope: !5958, file: !2485, line: 320, type: !140)
!5964 = !DILocalVariable(name: "val", scope: !5958, file: !2485, line: 321, type: !272)
!5965 = !DILocation(line: 0, scope: !5958)
!5966 = !DILocation(line: 320, column: 19, scope: !5958)
!5967 = !DILocation(line: 323, column: 37, scope: !5958)
!5968 = !DILocation(line: 323, column: 17, scope: !5958)
!5969 = !DILocation(line: 323, column: 9, scope: !5958)
!5970 = !DILocation(line: 323, column: 2, scope: !5958)
!5971 = !DILocation(line: 324, column: 13, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5958, file: !2485, line: 323, column: 43)
!5973 = !DILocation(line: 324, column: 24, scope: !5972)
!5974 = !DILocation(line: 324, column: 19, scope: !5972)
!5975 = !DILocation(line: 324, column: 27, scope: !5972)
!5976 = distinct !{!5976, !5970, !5977}
!5977 = !DILocation(line: 325, column: 2, scope: !5958)
!5978 = !DILocation(line: 326, column: 7, scope: !5958)
!5979 = !DILocation(line: 327, column: 2, scope: !5958)
!5980 = distinct !DISubprogram(name: "isdigit", scope: !5760, file: !5760, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2481, retainedNodes: !5981)
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "a", arg: 1, scope: !5980, file: !5760, line: 43, type: !125)
!5983 = !DILocation(line: 0, scope: !5980)
!5984 = !DILocation(line: 45, column: 29, scope: !5980)
!5985 = !DILocation(line: 45, column: 45, scope: !5980)
!5986 = !DILocation(line: 45, column: 2, scope: !5980)
!5987 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5988, file: !5988, line: 9, type: !3135, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !1896)
!5988 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!5989 = !DILocation(line: 11, column: 1, scope: !5987)
!5990 = !{i64 2147560133, i64 2147560176, i64 2147560216}
!5991 = !DILocation(line: 12, column: 1, scope: !5987)
!5992 = !{i64 2147564360, i64 2147564403, i64 2147564443}
!5993 = !DILocation(line: 13, column: 1, scope: !5987)
!5994 = !{i64 2147564569, i64 2147564612, i64 2147564652}
!5995 = !DILocation(line: 14, column: 1, scope: !5987)
!5996 = !{i64 2147564786, i64 2147564829, i64 2147564869}
!5997 = !DILocation(line: 15, column: 1, scope: !5987)
!5998 = !{i64 2147564955, i64 2147564998, i64 2147565038}
!5999 = !DILocation(line: 16, column: 1, scope: !5987)
!6000 = !{i64 2147565140, i64 2147565183, i64 2147565223}
!6001 = !DILocation(line: 17, column: 1, scope: !5987)
!6002 = !{i64 2147565357, i64 2147565400, i64 2147565440}
!6003 = !DILocation(line: 18, column: 1, scope: !5987)
!6004 = !{i64 2147565520, i64 2147565563, i64 2147565603}
!6005 = !DILocation(line: 19, column: 1, scope: !5987)
!6006 = !{i64 2147565704, i64 2147565747, i64 2147565787}
!6007 = !DILocation(line: 20, column: 1, scope: !5987)
!6008 = !{i64 2147565884, i64 2147565927, i64 2147565967}
!6009 = !DILocation(line: 21, column: 1, scope: !5987)
!6010 = !{i64 2147566127, i64 2147566170, i64 2147566210}
!6011 = !DILocation(line: 22, column: 1, scope: !5987)
!6012 = !{i64 2147566363, i64 2147566406, i64 2147566446}
!6013 = !DILocation(line: 23, column: 1, scope: !5987)
!6014 = !{i64 2147566566, i64 2147566609, i64 2147566649}
!6015 = !DILocation(line: 24, column: 1, scope: !5987)
!6016 = !{i64 2147566769, i64 2147566812, i64 2147566852}
!6017 = !DILocation(line: 25, column: 1, scope: !5987)
!6018 = !{i64 2147566968, i64 2147567011, i64 2147567051}
!6019 = !DILocation(line: 26, column: 1, scope: !5987)
!6020 = !{i64 2147567143, i64 2147567186, i64 2147567226}
!6021 = !DILocation(line: 27, column: 1, scope: !5987)
!6022 = !{i64 2147567351, i64 2147567394, i64 2147567434}
!6023 = !DILocation(line: 28, column: 1, scope: !5987)
!6024 = !{i64 2147567555, i64 2147567598, i64 2147567638}
!6025 = !DILocation(line: 29, column: 1, scope: !5987)
!6026 = !{i64 2147567748, i64 2147567791, i64 2147567831}
!6027 = !DILocation(line: 30, column: 1, scope: !5987)
!6028 = !{i64 2147567950, i64 2147567993, i64 2147568033}
!6029 = !DILocation(line: 31, column: 1, scope: !5987)
!6030 = !{i64 2147568149, i64 2147568192, i64 2147568232}
!6031 = !DILocation(line: 32, column: 1, scope: !5987)
!6032 = !{i64 2147568376, i64 2147568419, i64 2147568459}
!6033 = !DILocation(line: 33, column: 1, scope: !5987)
!6034 = !{i64 2147568591, i64 2147568634, i64 2147568674}
!6035 = !DILocation(line: 34, column: 1, scope: !5987)
!6036 = !{i64 2147568778, i64 2147568821, i64 2147568861}
!6037 = !DILocation(line: 35, column: 1, scope: !5987)
!6038 = !{i64 2147568959, i64 2147569002, i64 2147569042}
!6039 = !DILocation(line: 36, column: 1, scope: !5987)
!6040 = !{i64 2147569131, i64 2147569174, i64 2147569214}
!6041 = !DILocation(line: 37, column: 1, scope: !5987)
!6042 = !{i64 2147569333, i64 2147569376, i64 2147569416}
!6043 = !DILocation(line: 38, column: 1, scope: !5987)
!6044 = !{i64 2147569532, i64 2147569575, i64 2147569615}
!6045 = !DILocation(line: 39, column: 1, scope: !5987)
!6046 = !{i64 2147569707, i64 2147569750, i64 2147569790}
!6047 = !DILocation(line: 40, column: 1, scope: !5987)
!6048 = !{i64 2147569960, i64 2147570003, i64 2147570043}
!6049 = !DILocation(line: 41, column: 1, scope: !5987)
!6050 = !{i64 2147570198, i64 2147570241, i64 2147570281}
!6051 = !DILocation(line: 42, column: 1, scope: !5987)
!6052 = !{i64 2147570433, i64 2147570476, i64 2147570516}
!6053 = !DILocation(line: 43, column: 1, scope: !5987)
!6054 = !{i64 2147570659, i64 2147570702, i64 2147570742}
!6055 = !DILocation(line: 44, column: 1, scope: !5987)
!6056 = !{i64 2147570894, i64 2147570937, i64 2147570977}
!6057 = !DILocation(line: 45, column: 1, scope: !5987)
!6058 = !{i64 2147571129, i64 2147571172, i64 2147571212}
!6059 = !DILocation(line: 46, column: 1, scope: !5987)
!6060 = !{i64 2147571370, i64 2147571413, i64 2147571453}
!6061 = !DILocation(line: 47, column: 1, scope: !5987)
!6062 = !{i64 2147571605, i64 2147571648, i64 2147571688}
!6063 = !DILocation(line: 48, column: 1, scope: !5987)
!6064 = !{i64 2147571834, i64 2147571877, i64 2147571917}
!6065 = !DILocation(line: 49, column: 1, scope: !5987)
!6066 = !{i64 2147572069, i64 2147572112, i64 2147572152}
!6067 = !DILocation(line: 50, column: 1, scope: !5987)
!6068 = !{i64 2147572319, i64 2147572362, i64 2147572402}
!6069 = !DILocation(line: 51, column: 1, scope: !5987)
!6070 = !{i64 2147572548, i64 2147572591, i64 2147572631}
!6071 = !DILocation(line: 52, column: 1, scope: !5987)
!6072 = !{i64 2147572756, i64 2147572799, i64 2147572839}
!6073 = !DILocation(line: 53, column: 1, scope: !5987)
!6074 = !{i64 2147572967, i64 2147573010, i64 2147573050}
!6075 = !DILocation(line: 54, column: 1, scope: !5987)
!6076 = !{i64 2147573202, i64 2147573245, i64 2147573285}
!6077 = !DILocation(line: 55, column: 1, scope: !5987)
!6078 = !{i64 2147577492, i64 2147577535, i64 2147577575}
!6079 = !DILocation(line: 56, column: 1, scope: !5987)
!6080 = !{i64 2147577709, i64 2147577752, i64 2147577792}
!6081 = !DILocation(line: 57, column: 1, scope: !5987)
!6082 = !{i64 2147577938, i64 2147577981, i64 2147578021}
!6083 = !DILocation(line: 58, column: 1, scope: !5987)
!6084 = !{i64 2147578176, i64 2147578219, i64 2147578259}
!6085 = !DILocation(line: 59, column: 1, scope: !5987)
!6086 = !{i64 2147578408, i64 2147578451, i64 2147578491}
!6087 = !DILocation(line: 60, column: 1, scope: !5987)
!6088 = !{i64 2147578634, i64 2147578677, i64 2147578717}
!6089 = !DILocation(line: 61, column: 1, scope: !5987)
!6090 = !{i64 2147578851, i64 2147578894, i64 2147578934}
!6091 = !DILocation(line: 62, column: 1, scope: !5987)
!6092 = !{i64 2147579083, i64 2147579126, i64 2147579166}
!6093 = !DILocation(line: 63, column: 1, scope: !5987)
!6094 = !{i64 2147579309, i64 2147579352, i64 2147579392}
!6095 = !DILocation(line: 64, column: 1, scope: !5987)
!6096 = !{i64 2147579523, i64 2147579566, i64 2147579606}
!6097 = !DILocation(line: 65, column: 1, scope: !5987)
!6098 = !{i64 2147579743, i64 2147579786, i64 2147579826}
!6099 = !DILocation(line: 66, column: 1, scope: !5987)
!6100 = !{i64 2147579975, i64 2147580018, i64 2147580058}
!6101 = !DILocation(line: 67, column: 1, scope: !5987)
!6102 = !{i64 2147580183, i64 2147580226, i64 2147580266}
!6103 = !DILocation(line: 68, column: 1, scope: !5987)
!6104 = !{i64 2147580388, i64 2147580431, i64 2147580471}
!6105 = !DILocation(line: 69, column: 1, scope: !5987)
!6106 = !{i64 2147580605, i64 2147580648, i64 2147580688}
!6107 = !DILocation(line: 70, column: 1, scope: !5987)
!6108 = !{i64 2147580819, i64 2147580862, i64 2147580902}
!6109 = !DILocation(line: 71, column: 1, scope: !5987)
!6110 = !{i64 2147581045, i64 2147581088, i64 2147581128}
!6111 = !DILocation(line: 72, column: 1, scope: !5987)
!6112 = !{i64 2147581265, i64 2147581308, i64 2147581348}
!6113 = !DILocation(line: 73, column: 1, scope: !5987)
!6114 = !{i64 2147581470, i64 2147581513, i64 2147581553}
!6115 = !DILocation(line: 74, column: 1, scope: !5987)
!6116 = !{i64 2147581702, i64 2147581745, i64 2147581785}
!6117 = !DILocation(line: 75, column: 1, scope: !5987)
!6118 = !{i64 2147581937, i64 2147581980, i64 2147582020}
!6119 = !DILocation(line: 76, column: 1, scope: !5987)
!6120 = !{i64 2147582187, i64 2147582230, i64 2147582270}
!6121 = !DILocation(line: 77, column: 1, scope: !5987)
!6122 = !{i64 2147582437, i64 2147582480, i64 2147582520}
!6123 = !DILocation(line: 78, column: 1, scope: !5987)
!6124 = !{i64 2147582675, i64 2147582718, i64 2147582758}
!6125 = !DILocation(line: 79, column: 1, scope: !5987)
!6126 = !{i64 2147582886, i64 2147582929, i64 2147582969}
!6127 = !DILocation(line: 80, column: 1, scope: !5987)
!6128 = !{i64 2147583103, i64 2147583146, i64 2147583186}
!6129 = !DILocation(line: 81, column: 1, scope: !5987)
!6130 = !{i64 2147583299, i64 2147583342, i64 2147583382}
!6131 = !DILocation(line: 82, column: 1, scope: !5987)
!6132 = !{i64 2147583501, i64 2147583544, i64 2147583584}
!6133 = !DILocation(line: 83, column: 1, scope: !5987)
!6134 = !{i64 2147583688, i64 2147583731, i64 2147583771}
!6135 = !DILocation(line: 84, column: 1, scope: !5987)
!6136 = !{i64 2147583878, i64 2147583921, i64 2147583961}
!6137 = !DILocation(line: 85, column: 1, scope: !5987)
!6138 = !{i64 2147584065, i64 2147584108, i64 2147584148}
!6139 = !DILocation(line: 86, column: 1, scope: !5987)
!6140 = !{i64 2147584261, i64 2147584304, i64 2147584344}
!6141 = !DILocation(line: 87, column: 1, scope: !5987)
!6142 = !{i64 2147584454, i64 2147584497, i64 2147584537}
!6143 = !DILocation(line: 88, column: 1, scope: !5987)
!6144 = !{i64 2147584659, i64 2147584702, i64 2147584742}
!6145 = !DILocation(line: 89, column: 1, scope: !5987)
!6146 = !{i64 2147584864, i64 2147584907, i64 2147584947}
!6147 = !DILocation(line: 90, column: 1, scope: !5987)
!6148 = !{i64 2147585069, i64 2147585112, i64 2147585152}
!6149 = !DILocation(line: 91, column: 1, scope: !5987)
!6150 = !{i64 2147585277, i64 2147585320, i64 2147585360}
!6151 = !DILocation(line: 92, column: 1, scope: !5987)
!6152 = !{i64 2147585473, i64 2147585516, i64 2147585556}
!6153 = !DILocation(line: 93, column: 1, scope: !5987)
!6154 = !{i64 2147585684, i64 2147585727, i64 2147585767}
!6155 = !DILocation(line: 94, column: 1, scope: !5987)
!6156 = !{i64 2147585892, i64 2147585935, i64 2147585975}
!6157 = !DILocation(line: 95, column: 1, scope: !5987)
!6158 = !{i64 2147586076, i64 2147586119, i64 2147586159}
!6159 = !DILocation(line: 96, column: 1, scope: !5987)
!6160 = !{i64 2147590333, i64 2147590376, i64 2147590416}
!6161 = !DILocation(line: 97, column: 1, scope: !5987)
!6162 = !{i64 2147590526, i64 2147590569, i64 2147590609}
!6163 = !DILocation(line: 98, column: 1, scope: !5987)
!6164 = !{i64 2147590773, i64 2147590816, i64 2147590856}
!6165 = !DILocation(line: 99, column: 1, scope: !5987)
!6166 = !{i64 2147590996, i64 2147591039, i64 2147591079}
!6167 = !DILocation(line: 100, column: 1, scope: !5987)
!6168 = !{i64 2147591201, i64 2147591244, i64 2147591284}
!6169 = !DILocation(line: 101, column: 1, scope: !5987)
!6170 = !{i64 2147591394, i64 2147591437, i64 2147591477}
!6171 = !DILocation(line: 102, column: 1, scope: !5987)
!6172 = !{i64 2147591560, i64 2147591603, i64 2147591643}
!6173 = !DILocation(line: 103, column: 1, scope: !5987)
!6174 = !{i64 2147591744, i64 2147591787, i64 2147591827}
!6175 = !DILocation(line: 104, column: 1, scope: !5987)
!6176 = !{i64 2147591934, i64 2147591977, i64 2147592017}
!6177 = !DILocation(line: 105, column: 1, scope: !5987)
!6178 = !{i64 2147592118, i64 2147592161, i64 2147592201}
!6179 = !DILocation(line: 106, column: 1, scope: !5987)
!6180 = !{i64 2147592332, i64 2147592375, i64 2147592415}
!6181 = !DILocation(line: 107, column: 1, scope: !5987)
!6182 = !{i64 2147592543, i64 2147592586, i64 2147592626}
!6183 = !DILocation(line: 108, column: 1, scope: !5987)
!6184 = !{i64 2147592766, i64 2147592809, i64 2147592849}
!6185 = !DILocation(line: 109, column: 1, scope: !5987)
!6186 = !{i64 2147592950, i64 2147592993, i64 2147593033}
!6187 = !DILocation(line: 110, column: 1, scope: !5987)
!6188 = !{i64 2147593116, i64 2147593159, i64 2147593199}
!6189 = !DILocation(line: 111, column: 1, scope: !5987)
!6190 = !{i64 2147593297, i64 2147593340, i64 2147593380}
!6191 = !DILocation(line: 112, column: 1, scope: !5987)
!6192 = !{i64 2147593490, i64 2147593533, i64 2147593573}
!6193 = !DILocation(line: 113, column: 1, scope: !5987)
!6194 = !{i64 2147593716, i64 2147593759, i64 2147593799}
!6195 = !DILocation(line: 114, column: 1, scope: !5987)
!6196 = !{i64 2147593930, i64 2147593973, i64 2147594013}
!6197 = !DILocation(line: 115, column: 1, scope: !5987)
!6198 = !{i64 2147594156, i64 2147594199, i64 2147594239}
!6199 = !DILocation(line: 116, column: 1, scope: !5987)
!6200 = !{i64 2147594373, i64 2147594416, i64 2147594456}
!6201 = !DILocation(line: 117, column: 1, scope: !5987)
!6202 = !{i64 2147594650, i64 2147594693, i64 2147594733}
!6203 = !DILocation(line: 118, column: 1, scope: !5987)
!6204 = !{i64 2147594876, i64 2147594919, i64 2147594959}
!6205 = !DILocation(line: 119, column: 1, scope: !5987)
!6206 = !{i64 2147595084, i64 2147595127, i64 2147595167}
!6207 = !DILocation(line: 120, column: 1, scope: !5987)
!6208 = !{i64 2147595280, i64 2147595323, i64 2147595363}
!6209 = !DILocation(line: 121, column: 1, scope: !5987)
!6210 = !{i64 2147595545, i64 2147595588, i64 2147595628}
!6211 = !DILocation(line: 122, column: 1, scope: !5987)
!6212 = !{i64 2147595759, i64 2147595802, i64 2147595842}
!6213 = !DILocation(line: 123, column: 1, scope: !5987)
!6214 = !{i64 2147595922, i64 2147595965, i64 2147596005}
!6215 = !DILocation(line: 124, column: 1, scope: !5987)
!6216 = !{i64 2147596109, i64 2147596152, i64 2147596192}
!6217 = !DILocation(line: 125, column: 1, scope: !5987)
!6218 = !{i64 2147596317, i64 2147596360, i64 2147596400}
!6219 = !DILocation(line: 126, column: 1, scope: !5987)
!6220 = !{i64 2147596513, i64 2147596556, i64 2147596596}
!6221 = !DILocation(line: 127, column: 1, scope: !5987)
!6222 = !{i64 2147596706, i64 2147596749, i64 2147596789}
!6223 = !DILocation(line: 128, column: 1, scope: !5987)
!6224 = !{i64 2147596888, i64 2147596931, i64 2147596971}
!6225 = !DILocation(line: 129, column: 1, scope: !5987)
!6226 = !{i64 2147597102, i64 2147597145, i64 2147597185}
!6227 = !DILocation(line: 130, column: 1, scope: !5987)
!6228 = !{i64 2147597301, i64 2147597344, i64 2147597384}
!6229 = !DILocation(line: 131, column: 1, scope: !5987)
!6230 = !{i64 2147597536, i64 2147597579, i64 2147597619}
!6231 = !DILocation(line: 132, column: 1, scope: !5987)
!6232 = !{i64 2147597786, i64 2147597829, i64 2147597869}
!6233 = !DILocation(line: 133, column: 1, scope: !5987)
!6234 = !{i64 2147597988, i64 2147598031, i64 2147598071}
!6235 = !DILocation(line: 134, column: 1, scope: !5987)
!6236 = !{i64 2147598211, i64 2147598254, i64 2147598294}
!6237 = !DILocation(line: 135, column: 1, scope: !5987)
!6238 = !{i64 2147598425, i64 2147598468, i64 2147598508}
!6239 = !DILocation(line: 136, column: 1, scope: !5987)
!6240 = !{i64 2147598669, i64 2147598712, i64 2147598752}
!6241 = !DILocation(line: 137, column: 1, scope: !5987)
!6242 = !{i64 2147598898, i64 2147598941, i64 2147598981}
!6243 = !DILocation(line: 138, column: 1, scope: !5987)
!6244 = !{i64 2147599124, i64 2147599167, i64 2147599207}
!6245 = !DILocation(line: 139, column: 1, scope: !5987)
!6246 = !{i64 2147603444, i64 2147603487, i64 2147603527}
!6247 = !DILocation(line: 140, column: 1, scope: !5987)
!6248 = !{i64 2147603664, i64 2147603707, i64 2147603747}
!6249 = !DILocation(line: 141, column: 1, scope: !5987)
!6250 = !{i64 2147603896, i64 2147603939, i64 2147603979}
!6251 = !DILocation(line: 142, column: 1, scope: !5987)
!6252 = !{i64 2147604137, i64 2147604180, i64 2147604220}
!6253 = !DILocation(line: 143, column: 1, scope: !5987)
!6254 = !{i64 2147604378, i64 2147604421, i64 2147604461}
!6255 = !DILocation(line: 144, column: 1, scope: !5987)
!6256 = !{i64 2147604601, i64 2147604644, i64 2147604684}
!6257 = !DILocation(line: 145, column: 1, scope: !5987)
!6258 = !{i64 2147604818, i64 2147604861, i64 2147604901}
!6259 = !DILocation(line: 146, column: 1, scope: !5987)
!6260 = !{i64 2147605059, i64 2147605102, i64 2147605142}
!6261 = !DILocation(line: 147, column: 1, scope: !5987)
!6262 = !{i64 2147605246, i64 2147605289, i64 2147605329}
!6263 = !DILocation(line: 148, column: 1, scope: !5987)
!6264 = !{i64 2147605475, i64 2147605518, i64 2147605558}
!6265 = !DILocation(line: 149, column: 1, scope: !5987)
!6266 = !{i64 2147605689, i64 2147605732, i64 2147605772}
!6267 = !DILocation(line: 150, column: 1, scope: !5987)
!6268 = !{i64 2147605891, i64 2147605934, i64 2147605974}
!6269 = !DILocation(line: 151, column: 1, scope: !5987)
!6270 = !{i64 2147606087, i64 2147606130, i64 2147606170}
!6271 = !DILocation(line: 152, column: 1, scope: !5987)
!6272 = !{i64 2147606299, i64 2147606342, i64 2147606382}
!6273 = !DILocation(line: 153, column: 1, scope: !5987)
!6274 = !{i64 2147606520, i64 2147606563, i64 2147606603}
!6275 = !DILocation(line: 154, column: 1, scope: !5987)
!6276 = !{i64 2147606734, i64 2147606777, i64 2147606817}
!6277 = !DILocation(line: 155, column: 1, scope: !5987)
!6278 = !{i64 2147606924, i64 2147606967, i64 2147607007}
!6279 = !DILocation(line: 156, column: 1, scope: !5987)
!6280 = !{i64 2147607123, i64 2147607166, i64 2147607206}
!6281 = !DILocation(line: 157, column: 1, scope: !5987)
!6282 = !{i64 2147607328, i64 2147607371, i64 2147607411}
!6283 = !DILocation(line: 158, column: 1, scope: !5987)
!6284 = !{i64 2147607548, i64 2147607591, i64 2147607631}
!6285 = !DILocation(line: 159, column: 1, scope: !5987)
!6286 = !{i64 2147607749, i64 2147607792, i64 2147607832}
!6287 = !DILocation(line: 160, column: 1, scope: !5987)
!6288 = !{i64 2147607948, i64 2147607991, i64 2147608031}
!6289 = !DILocation(line: 161, column: 1, scope: !5987)
!6290 = !{i64 2147608117, i64 2147608160, i64 2147608200}
!6291 = !DILocation(line: 162, column: 1, scope: !5987)
!6292 = !{i64 2147608301, i64 2147608344, i64 2147608384}
!6293 = !DILocation(line: 163, column: 1, scope: !5987)
!6294 = !{i64 2147608485, i64 2147608528, i64 2147608568}
!6295 = !DILocation(line: 164, column: 1, scope: !5987)
!6296 = !{i64 2147608672, i64 2147608715, i64 2147608755}
!6297 = !DILocation(line: 165, column: 1, scope: !5987)
!6298 = !{i64 2147608856, i64 2147608899, i64 2147608939}
!6299 = !DILocation(line: 166, column: 1, scope: !5987)
!6300 = !{i64 2147609094, i64 2147609137, i64 2147609177}
!6301 = !DILocation(line: 167, column: 1, scope: !5987)
!6302 = !{i64 2147609324, i64 2147609367, i64 2147609407}
!6303 = !DILocation(line: 168, column: 1, scope: !5987)
!6304 = !{i64 2147609553, i64 2147609596, i64 2147609636}
!6305 = !DILocation(line: 169, column: 1, scope: !5987)
!6306 = !{i64 2147609740, i64 2147609783, i64 2147609823}
!6307 = !DILocation(line: 170, column: 1, scope: !5987)
!6308 = !{i64 2147609936, i64 2147609979, i64 2147610019}
!6309 = !DILocation(line: 171, column: 1, scope: !5987)
!6310 = !{i64 2147610144, i64 2147610187, i64 2147610227}
!6311 = !DILocation(line: 172, column: 1, scope: !5987)
!6312 = !{i64 2147610356, i64 2147610399, i64 2147610439}
!6313 = !DILocation(line: 173, column: 1, scope: !5987)
!6314 = !{i64 2147610555, i64 2147610598, i64 2147610638}
!6315 = !DILocation(line: 174, column: 1, scope: !5987)
!6316 = !{i64 2147610793, i64 2147610836, i64 2147610876}
!6317 = !DILocation(line: 175, column: 1, scope: !5987)
!6318 = !{i64 2147610989, i64 2147611032, i64 2147611072}
!6319 = !DILocation(line: 176, column: 1, scope: !5987)
!6320 = !{i64 2147611191, i64 2147611234, i64 2147611274}
!6321 = !DILocation(line: 177, column: 1, scope: !5987)
!6322 = !{i64 2147611384, i64 2147611427, i64 2147611467}
!6323 = !DILocation(line: 178, column: 1, scope: !5987)
!6324 = !{i64 2147611618, i64 2147611661, i64 2147611701}
!6325 = !DILocation(line: 179, column: 1, scope: !5987)
!6326 = !{i64 2147611781, i64 2147611824, i64 2147611864}
!6327 = !DILocation(line: 180, column: 1, scope: !5987)
!6328 = !{i64 2147612020, i64 2147612063, i64 2147612103}
!6329 = !DILocation(line: 181, column: 1, scope: !5987)
!6330 = !{i64 2147612259, i64 2147612302, i64 2147612342}
!6331 = !DILocation(line: 182, column: 1, scope: !5987)
!6332 = !{i64 2147616556, i64 2147616599, i64 2147616639}
!6333 = !DILocation(line: 183, column: 1, scope: !5987)
!6334 = !{i64 2147616786, i64 2147616829, i64 2147616869}
!6335 = !DILocation(line: 184, column: 1, scope: !5987)
!6336 = !{i64 2147616973, i64 2147617016, i64 2147617056}
!6337 = !DILocation(line: 185, column: 1, scope: !5987)
!6338 = !{i64 2147617172, i64 2147617215, i64 2147617255}
!6339 = !DILocation(line: 186, column: 1, scope: !5987)
!6340 = !{i64 2147617443, i64 2147617486, i64 2147617526}
!6341 = !DILocation(line: 187, column: 1, scope: !5987)
!6342 = !{i64 2147617618, i64 2147617661, i64 2147617701}
!6343 = !DILocation(line: 188, column: 1, scope: !5987)
!6344 = !{i64 2147617852, i64 2147617895, i64 2147617935}
!6345 = !DILocation(line: 189, column: 1, scope: !5987)
!6346 = !{i64 2147618060, i64 2147618103, i64 2147618143}
!6347 = !DILocation(line: 190, column: 1, scope: !5987)
!6348 = !{i64 2147618278, i64 2147618321, i64 2147618361}
!6349 = !DILocation(line: 191, column: 1, scope: !5987)
!6350 = !{i64 2147618468, i64 2147618511, i64 2147618551}
!6351 = !DILocation(line: 192, column: 1, scope: !5987)
!6352 = !{i64 2147618700, i64 2147618743, i64 2147618783}
!6353 = !DILocation(line: 193, column: 1, scope: !5987)
!6354 = !{i64 2147618920, i64 2147618963, i64 2147619003}
!6355 = !DILocation(line: 194, column: 1, scope: !5987)
!6356 = !{i64 2147619116, i64 2147619159, i64 2147619199}
!6357 = !DILocation(line: 195, column: 1, scope: !5987)
!6358 = !{i64 2147619322, i64 2147619365, i64 2147619405}
!6359 = !DILocation(line: 196, column: 1, scope: !5987)
!6360 = !{i64 2147619527, i64 2147619570, i64 2147619610}
!6361 = !DILocation(line: 197, column: 1, scope: !5987)
!6362 = !{i64 2147619753, i64 2147619796, i64 2147619836}
!6363 = !DILocation(line: 198, column: 1, scope: !5987)
!6364 = !{i64 2147619961, i64 2147620004, i64 2147620044}
!6365 = !DILocation(line: 199, column: 1, scope: !5987)
!6366 = !{i64 2147620157, i64 2147620200, i64 2147620240}
!6367 = !DILocation(line: 200, column: 1, scope: !5987)
!6368 = !{i64 2147620389, i64 2147620432, i64 2147620472}
!6369 = !DILocation(line: 201, column: 1, scope: !5987)
!6370 = !{i64 2147620567, i64 2147620610, i64 2147620650}
!6371 = !DILocation(line: 202, column: 1, scope: !5987)
!6372 = !{i64 2147620776, i64 2147620819, i64 2147620859}
!6373 = !DILocation(line: 203, column: 1, scope: !5987)
!6374 = !{i64 2147620984, i64 2147621027, i64 2147621067}
!6375 = !DILocation(line: 204, column: 1, scope: !5987)
!6376 = !{i64 2147621180, i64 2147621223, i64 2147621263}
!6377 = !DILocation(line: 205, column: 1, scope: !5987)
!6378 = !{i64 2147621412, i64 2147621455, i64 2147621495}
!6379 = !DILocation(line: 206, column: 1, scope: !5987)
!6380 = !{i64 2147621614, i64 2147621657, i64 2147621697}
!6381 = !DILocation(line: 207, column: 1, scope: !5987)
!6382 = !{i64 2147621864, i64 2147621907, i64 2147621947}
!6383 = !DILocation(line: 208, column: 1, scope: !5987)
!6384 = !{i64 2147622102, i64 2147622145, i64 2147622185}
!6385 = !DILocation(line: 209, column: 1, scope: !5987)
!6386 = !{i64 2147622310, i64 2147622353, i64 2147622393}
!6387 = !DILocation(line: 210, column: 1, scope: !5987)
!6388 = !{i64 2147622506, i64 2147622549, i64 2147622589}
!6389 = !DILocation(line: 211, column: 1, scope: !5987)
!6390 = !{i64 2147622684, i64 2147622727, i64 2147622767}
!6391 = !DILocation(line: 212, column: 1, scope: !5987)
!6392 = !{i64 2147622901, i64 2147622944, i64 2147622984}
!6393 = !DILocation(line: 213, column: 1, scope: !5987)
!6394 = !{i64 2147623106, i64 2147623149, i64 2147623189}
!6395 = !DILocation(line: 214, column: 1, scope: !5987)
!6396 = !{i64 2147623341, i64 2147623384, i64 2147623424}
!6397 = !DILocation(line: 215, column: 1, scope: !5987)
!6398 = !{i64 2147623564, i64 2147623607, i64 2147623647}
!6399 = !DILocation(line: 216, column: 1, scope: !5987)
!6400 = !{i64 2147623736, i64 2147623779, i64 2147623819}
!6401 = !DILocation(line: 217, column: 1, scope: !5987)
!6402 = !{i64 2147623951, i64 2147623994, i64 2147624034}
!6403 = !DILocation(line: 218, column: 1, scope: !5987)
!6404 = !{i64 2147624165, i64 2147624208, i64 2147624248}
!6405 = !DILocation(line: 219, column: 1, scope: !5987)
!6406 = !{i64 2147624367, i64 2147624410, i64 2147624450}
!6407 = !DILocation(line: 220, column: 1, scope: !5987)
!6408 = !{i64 2147624584, i64 2147624627, i64 2147624667}
!6409 = !DILocation(line: 221, column: 1, scope: !5987)
!6410 = !{i64 2147624837, i64 2147624880, i64 2147624920}
!6411 = !DILocation(line: 222, column: 1, scope: !5987)
!6412 = !{i64 2147625081, i64 2147625124, i64 2147625164}
!6413 = !DILocation(line: 223, column: 1, scope: !5987)
!6414 = !{i64 2147629359, i64 2147629402, i64 2147629442}
!6415 = !DILocation(line: 224, column: 1, scope: !5987)
!6416 = !{i64 2147629564, i64 2147629607, i64 2147629647}
!6417 = !DILocation(line: 225, column: 1, scope: !5987)
!6418 = !{i64 2147629772, i64 2147629815, i64 2147629855}
!6419 = !DILocation(line: 226, column: 1, scope: !5987)
!6420 = !{i64 2147629968, i64 2147630011, i64 2147630051}
!6421 = !DILocation(line: 227, column: 1, scope: !5987)
!6422 = !{i64 2147630182, i64 2147630225, i64 2147630265}
!6423 = !DILocation(line: 228, column: 1, scope: !5987)
!6424 = !{i64 2147630390, i64 2147630433, i64 2147630473}
!6425 = !DILocation(line: 229, column: 1, scope: !5987)
!6426 = !{i64 2147630580, i64 2147630623, i64 2147630663}
!6427 = !DILocation(line: 230, column: 1, scope: !5987)
!6428 = !{i64 2147630794, i64 2147630837, i64 2147630877}
!6429 = !DILocation(line: 231, column: 1, scope: !5987)
!6430 = !{i64 2147631056, i64 2147631099, i64 2147631139}
!6431 = !DILocation(line: 232, column: 1, scope: !5987)
!6432 = !{i64 2147631267, i64 2147631310, i64 2147631350}
!6433 = !DILocation(line: 233, column: 1, scope: !5987)
!6434 = !{i64 2147631511, i64 2147631554, i64 2147631594}
!6435 = !DILocation(line: 234, column: 1, scope: !5987)
!6436 = !{i64 2147631722, i64 2147631765, i64 2147631805}
!6437 = !DILocation(line: 235, column: 1, scope: !5987)
!6438 = !{i64 2147631951, i64 2147631994, i64 2147632034}
!6439 = !DILocation(line: 236, column: 1, scope: !5987)
!6440 = !{i64 2147632216, i64 2147632259, i64 2147632299}
!6441 = !DILocation(line: 237, column: 1, scope: !5987)
!6442 = !{i64 2147632421, i64 2147632464, i64 2147632504}
!6443 = !DILocation(line: 238, column: 1, scope: !5987)
!6444 = !{i64 2147632617, i64 2147632660, i64 2147632700}
!6445 = !DILocation(line: 239, column: 1, scope: !5987)
!6446 = !{i64 2147632840, i64 2147632883, i64 2147632923}
!6447 = !DILocation(line: 240, column: 1, scope: !5987)
!6448 = !{i64 2147633003, i64 2147633046, i64 2147633086}
!6449 = !DILocation(line: 241, column: 1, scope: !5987)
!6450 = !{i64 2147633208, i64 2147633251, i64 2147633291}
!6451 = !DILocation(line: 242, column: 1, scope: !5987)
!6452 = !{i64 2147633428, i64 2147633471, i64 2147633511}
!6453 = !DILocation(line: 243, column: 1, scope: !5987)
!6454 = !{i64 2147633642, i64 2147633685, i64 2147633725}
!6455 = !DILocation(line: 244, column: 1, scope: !5987)
!6456 = !{i64 2147633886, i64 2147633929, i64 2147633969}
!6457 = !DILocation(line: 245, column: 1, scope: !5987)
!6458 = !{i64 2147634118, i64 2147634161, i64 2147634201}
!6459 = !DILocation(line: 246, column: 1, scope: !5987)
!6460 = !{i64 2147634332, i64 2147634375, i64 2147634415}
!6461 = !DILocation(line: 247, column: 1, scope: !5987)
!6462 = !{i64 2147634543, i64 2147634586, i64 2147634626}
!6463 = !DILocation(line: 248, column: 1, scope: !5987)
!6464 = !{i64 2147634736, i64 2147634779, i64 2147634819}
!6465 = !DILocation(line: 249, column: 1, scope: !5987)
!6466 = !{i64 2147634935, i64 2147634978, i64 2147635018}
!6467 = !DILocation(line: 250, column: 1, scope: !5987)
!6468 = !{i64 2147635107, i64 2147635150, i64 2147635190}
!6469 = !DILocation(line: 251, column: 1, scope: !5987)
!6470 = !{i64 2147635300, i64 2147635343, i64 2147635383}
!6471 = !DILocation(line: 252, column: 1, scope: !5987)
!6472 = !{i64 2147635496, i64 2147635539, i64 2147635579}
!6473 = !DILocation(line: 253, column: 1, scope: !5987)
!6474 = !{i64 2147635659, i64 2147635702, i64 2147635742}
!6475 = !DILocation(line: 254, column: 1, scope: !5987)
!6476 = !{i64 2147635861, i64 2147635904, i64 2147635944}
!6477 = !DILocation(line: 255, column: 1, scope: !5987)
!6478 = !{i64 2147636066, i64 2147636109, i64 2147636149}
!6479 = !DILocation(line: 256, column: 1, scope: !5987)
!6480 = !{i64 2147636274, i64 2147636317, i64 2147636357}
!6481 = !DILocation(line: 257, column: 1, scope: !5987)
!6482 = !{i64 2147636467, i64 2147636510, i64 2147636550}
!6483 = !DILocation(line: 258, column: 1, scope: !5987)
!6484 = !{i64 2147636654, i64 2147636697, i64 2147636737}
!6485 = !DILocation(line: 259, column: 1, scope: !5987)
!6486 = !{i64 2147636881, i64 2147636924, i64 2147636964}
!6487 = !DILocation(line: 260, column: 1, scope: !5987)
!6488 = !{i64 2147637098, i64 2147637141, i64 2147637181}
!6489 = !DILocation(line: 261, column: 1, scope: !5987)
!6490 = !{i64 2147637390, i64 2147637433, i64 2147637473}
!6491 = !DILocation(line: 262, column: 1, scope: !5987)
!6492 = !{i64 2147637622, i64 2147637665, i64 2147637705}
!6493 = !DILocation(line: 263, column: 1, scope: !5987)
!6494 = !{i64 2147637839, i64 2147637882, i64 2147637922}
!6495 = !DILocation(line: 264, column: 1, scope: !5987)
!6496 = !{i64 2147638046, i64 2147638089, i64 2147638129}
!6497 = !DILocation(line: 265, column: 1, scope: !5987)
!6498 = !{i64 2147642308, i64 2147642351, i64 2147642391}
!6499 = !DILocation(line: 266, column: 1, scope: !5987)
!6500 = !{i64 2147642540, i64 2147642583, i64 2147642623}
!6501 = !DILocation(line: 267, column: 1, scope: !5987)
!6502 = !{i64 2147642748, i64 2147642791, i64 2147642831}
!6503 = !DILocation(line: 268, column: 1, scope: !5987)
!6504 = !{i64 2147642938, i64 2147642981, i64 2147643021}
!6505 = !DILocation(line: 269, column: 1, scope: !5987)
!6506 = !{i64 2147643164, i64 2147643207, i64 2147643247}
!6507 = !DILocation(line: 270, column: 1, scope: !5987)
!6508 = !{i64 2147643353, i64 2147643396, i64 2147643436}
!6509 = !DILocation(line: 271, column: 1, scope: !5987)
!6510 = !{i64 2147643624, i64 2147643667, i64 2147643707}
!6511 = !DILocation(line: 272, column: 1, scope: !5987)
!6512 = !{i64 2147643844, i64 2147643887, i64 2147643927}
!6513 = !DILocation(line: 273, column: 1, scope: !5987)
!6514 = !{i64 2147644097, i64 2147644140, i64 2147644180}
!6515 = !DILocation(line: 274, column: 1, scope: !5987)
!6516 = !{i64 2147644305, i64 2147644348, i64 2147644388}
!6517 = !DILocation(line: 275, column: 1, scope: !5987)
!6518 = !{i64 2147644537, i64 2147644580, i64 2147644620}
!6519 = !DILocation(line: 276, column: 1, scope: !5987)
!6520 = !{i64 2147644748, i64 2147644791, i64 2147644831}
!6521 = !DILocation(line: 277, column: 1, scope: !5987)
!6522 = !{i64 2147644938, i64 2147644981, i64 2147645021}
!6523 = !DILocation(line: 278, column: 1, scope: !5987)
!6524 = !{i64 2147645152, i64 2147645195, i64 2147645235}
!6525 = !DILocation(line: 279, column: 1, scope: !5987)
!6526 = !{i64 2147645351, i64 2147645394, i64 2147645434}
!6527 = !DILocation(line: 280, column: 1, scope: !5987)
!6528 = !{i64 2147645538, i64 2147645581, i64 2147645621}
!6529 = !DILocation(line: 281, column: 1, scope: !5987)
!6530 = !{i64 2147645746, i64 2147645789, i64 2147645829}
!6531 = !DILocation(line: 282, column: 1, scope: !5987)
!6532 = !{i64 2147645975, i64 2147646018, i64 2147646058}
!6533 = !DILocation(line: 283, column: 1, scope: !5987)
!6534 = !{i64 2147646177, i64 2147646220, i64 2147646260}
!6535 = !DILocation(line: 284, column: 1, scope: !5987)
!6536 = !{i64 2147646376, i64 2147646419, i64 2147646459}
!6537 = !DILocation(line: 285, column: 1, scope: !5987)
!6538 = !{i64 2147646566, i64 2147646609, i64 2147646649}
!6539 = !DILocation(line: 286, column: 1, scope: !5987)
!6540 = !{i64 2147646783, i64 2147646826, i64 2147646866}
!6541 = !DILocation(line: 288, column: 1, scope: !5987)
!6542 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !828, file: !828, line: 225, type: !835, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6543)
!6543 = !{!6544}
!6544 = !DILocalVariable(name: "arg", arg: 1, scope: !6542, file: !828, line: 225, type: !837)
!6545 = !DILocation(line: 0, scope: !6542)
!6546 = !DILocation(line: 230, column: 2, scope: !6542)
!6547 = !DILocation(line: 233, column: 2, scope: !6542)
!6548 = !DILocation(line: 236, column: 2, scope: !6542)
!6549 = !DILocation(line: 255, column: 2, scope: !6542)
!6550 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !828, file: !828, line: 50, type: !3135, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !1896)
!6551 = !DILocation(line: 53, column: 2, scope: !6550)
!6552 = !DILocation(line: 54, column: 1, scope: !6550)
!6553 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !828, file: !828, line: 14, type: !3135, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !1896)
!6554 = !DILocation(line: 23, column: 2, scope: !6553)
!6555 = !DILocation(line: 24, column: 2, scope: !6553)
!6556 = !DILocation(line: 25, column: 2, scope: !6553)
!6557 = !DILocation(line: 27, column: 2, scope: !6553)
!6558 = !DILocation(line: 31, column: 2, scope: !6553)
!6559 = !DILocation(line: 33, column: 2, scope: !6553)
!6560 = !DILocation(line: 36, column: 2, scope: !6553)
!6561 = !DILocation(line: 37, column: 2, scope: !6553)
!6562 = !DILocation(line: 40, column: 2, scope: !6553)
!6563 = !DILocation(line: 41, column: 2, scope: !6553)
!6564 = !DILocation(line: 42, column: 2, scope: !6553)
!6565 = !DILocation(line: 43, column: 2, scope: !6553)
!6566 = !DILocation(line: 44, column: 2, scope: !6553)
!6567 = !DILocation(line: 47, column: 2, scope: !6553)
!6568 = !DILocation(line: 48, column: 1, scope: !6553)
!6569 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !828, file: !828, line: 57, type: !3135, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !1896)
!6570 = !DILocation(line: 61, column: 2, scope: !6569)
!6571 = !DILocation(line: 63, column: 2, scope: !6569)
!6572 = !DILocation(line: 80, column: 1, scope: !6569)
!6573 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !6574, file: !6574, line: 164, type: !6575, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6577)
!6574 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6575 = !DISubroutineType(types: !6576)
!6576 = !{null, !772, !208, !150, !153, !153}
!6577 = !{!6578, !6579, !6580, !6581, !6582}
!6578 = !DILocalVariable(name: "base", arg: 1, scope: !6573, file: !6574, line: 164, type: !772)
!6579 = !DILocalVariable(name: "pdap", arg: 2, scope: !6573, file: !6574, line: 164, type: !208)
!6580 = !DILocalVariable(name: "perm", arg: 3, scope: !6573, file: !6574, line: 164, type: !150)
!6581 = !DILocalVariable(name: "sreq", arg: 4, scope: !6573, file: !6574, line: 164, type: !153)
!6582 = !DILocalVariable(name: "lock", arg: 5, scope: !6573, file: !6574, line: 164, type: !153)
!6583 = !DILocation(line: 0, scope: !6573)
!6584 = !DILocation(line: 166, column: 24, scope: !6573)
!6585 = !DILocation(line: 166, column: 5, scope: !6573)
!6586 = !DILocation(line: 166, column: 22, scope: !6573)
!6587 = !DILocation(line: 167, column: 1, scope: !6573)
!6588 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !418, file: !418, line: 454, type: !6589, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6591)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{null, !700, !208, !208}
!6591 = !{!6592, !6593, !6594}
!6592 = !DILocalVariable(name: "base", arg: 1, scope: !6588, file: !418, line: 454, type: !700)
!6593 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !6588, file: !418, line: 454, type: !208)
!6594 = !DILocalVariable(name: "control", arg: 3, scope: !6588, file: !418, line: 454, type: !208)
!6595 = !DILocation(line: 0, scope: !6588)
!6596 = !DILocation(line: 456, column: 5, scope: !6588)
!6597 = !DILocation(line: 456, column: 22, scope: !6588)
!6598 = !DILocation(line: 457, column: 1, scope: !6588)
!6599 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !418, file: !418, line: 379, type: !6600, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6602)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{null, !700, !208}
!6602 = !{!6603, !6604}
!6603 = !DILocalVariable(name: "base", arg: 1, scope: !6599, file: !418, line: 379, type: !700)
!6604 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !6599, file: !418, line: 379, type: !208)
!6605 = !DILocation(line: 0, scope: !6599)
!6606 = !DILocation(line: 381, column: 26, scope: !6599)
!6607 = !DILocation(line: 382, column: 1, scope: !6599)
!6608 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !6609, file: !6609, line: 136, type: !6610, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6612)
!6609 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6610 = !DISubroutineType(types: !6611)
!6611 = !{null, !815}
!6612 = !{!6613}
!6613 = !DILocalVariable(name: "base", arg: 1, scope: !6608, file: !6609, line: 136, type: !815)
!6614 = !DILocation(line: 0, scope: !6608)
!6615 = !DILocation(line: 138, column: 16, scope: !6608)
!6616 = !DILocation(line: 139, column: 1, scope: !6608)
!6617 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !6574, file: !6574, line: 136, type: !6618, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6620)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{null, !772, !208, !208, !153}
!6620 = !{!6621, !6622, !6623, !6624}
!6621 = !DILocalVariable(name: "base", arg: 1, scope: !6617, file: !6574, line: 136, type: !772)
!6622 = !DILocalVariable(name: "mda", arg: 2, scope: !6617, file: !6574, line: 136, type: !208)
!6623 = !DILocalVariable(name: "domainId", arg: 3, scope: !6617, file: !6574, line: 136, type: !208)
!6624 = !DILocalVariable(name: "lock", arg: 4, scope: !6617, file: !6574, line: 136, type: !153)
!6625 = !DILocation(line: 0, scope: !6617)
!6626 = !DILocation(line: 140, column: 20, scope: !6617)
!6627 = !DILocation(line: 141, column: 1, scope: !6617)
!6628 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6629, file: !6629, line: 14, type: !4973, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6630)
!6629 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6630 = !{!6631, !6632}
!6631 = !DILocalVariable(name: "fmt", arg: 1, scope: !6628, file: !6629, line: 14, type: !140)
!6632 = !DILocalVariable(name: "ap", scope: !6628, file: !6629, line: 16, type: !6633)
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4041, line: 99, baseType: !6634)
!6634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4041, line: 40, baseType: !6635)
!6635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6629, baseType: !6636)
!6636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6637)
!6637 = !{!6638}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6636, file: !6629, line: 16, baseType: !124, size: 32)
!6639 = !DILocation(line: 0, scope: !6628)
!6640 = !DILocation(line: 16, column: 2, scope: !6628)
!6641 = !DILocation(line: 16, column: 10, scope: !6628)
!6642 = !DILocation(line: 18, column: 2, scope: !6628)
!6643 = !DILocation(line: 19, column: 2, scope: !6628)
!6644 = !DILocation(line: 20, column: 2, scope: !6628)
!6645 = !DILocation(line: 21, column: 1, scope: !6628)
!6646 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6629, file: !6629, line: 23, type: !6647, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6649)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{null, !140, !6633}
!6649 = !{!6650, !6651}
!6650 = !DILocalVariable(name: "fmt", arg: 1, scope: !6646, file: !6629, line: 23, type: !140)
!6651 = !DILocalVariable(name: "ap", arg: 2, scope: !6646, file: !6629, line: 23, type: !6633)
!6652 = !DILocation(line: 0, scope: !6646)
!6653 = !DILocation(line: 25, column: 2, scope: !6646)
!6654 = !DILocation(line: 26, column: 1, scope: !6646)
!6655 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6629, file: !6629, line: 52, type: !6656, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6658)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !125, !13, !272}
!6658 = !{!6659, !6660, !6661, !6662}
!6659 = !DILocalVariable(name: "level", arg: 1, scope: !6655, file: !6629, line: 52, type: !125)
!6660 = !DILocalVariable(name: "data", arg: 2, scope: !6655, file: !6629, line: 52, type: !13)
!6661 = !DILocalVariable(name: "size", arg: 3, scope: !6655, file: !6629, line: 52, type: !272)
!6662 = !DILocalVariable(name: "data_buffer", scope: !6655, file: !6629, line: 54, type: !140)
!6663 = !DILocation(line: 0, scope: !6655)
!6664 = !DILocation(line: 55, column: 14, scope: !6655)
!6665 = !DILocation(line: 55, column: 2, scope: !6655)
!6666 = !DILocation(line: 56, column: 3, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6655, file: !6629, line: 55, column: 20)
!6668 = !DILocation(line: 57, column: 3, scope: !6667)
!6669 = !DILocation(line: 59, column: 7, scope: !6667)
!6670 = distinct !{!6670, !6665, !6671}
!6671 = !DILocation(line: 65, column: 2, scope: !6655)
!6672 = !DILocation(line: 66, column: 1, scope: !6655)
!6673 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3289, file: !3289, line: 175, type: !3290, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6674)
!6674 = !{!6675}
!6675 = !DILocalVariable(name: "level", arg: 1, scope: !6673, file: !3289, line: 175, type: !125)
!6676 = !DILocation(line: 0, scope: !6673)
!6677 = !DILocation(line: 177, column: 2, scope: !6673)
!6678 = !DILocation(line: 189, column: 1, scope: !6673)
!6679 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6629, file: !6629, line: 28, type: !6680, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6682)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{null, !140, !272}
!6682 = !{!6683, !6684, !6685, !6687, !6689}
!6683 = !DILocalVariable(name: "data", arg: 1, scope: !6679, file: !6629, line: 28, type: !140)
!6684 = !DILocalVariable(name: "length", arg: 2, scope: !6679, file: !6629, line: 28, type: !272)
!6685 = !DILocalVariable(name: "i", scope: !6686, file: !6629, line: 30, type: !272)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !6629, line: 30, column: 2)
!6687 = !DILocalVariable(name: "i", scope: !6688, file: !6629, line: 40, type: !272)
!6688 = distinct !DILexicalBlock(scope: !6679, file: !6629, line: 40, column: 2)
!6689 = !DILocalVariable(name: "c", scope: !6690, file: !6629, line: 42, type: !151)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !6629, line: 41, column: 19)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !6629, line: 41, column: 7)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !6629, line: 40, column: 54)
!6693 = distinct !DILexicalBlock(scope: !6688, file: !6629, line: 40, column: 2)
!6694 = !DILocation(line: 0, scope: !6679)
!6695 = !DILocation(line: 0, scope: !6686)
!6696 = !DILocation(line: 30, column: 2, scope: !6686)
!6697 = !DILocation(line: 38, column: 2, scope: !6679)
!6698 = !DILocation(line: 0, scope: !6688)
!6699 = !DILocation(line: 40, column: 2, scope: !6688)
!6700 = !DILocation(line: 31, column: 9, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !6629, line: 31, column: 7)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6629, line: 30, column: 54)
!6703 = distinct !DILexicalBlock(scope: !6686, file: !6629, line: 30, column: 2)
!6704 = !DILocation(line: 31, column: 7, scope: !6702)
!6705 = !DILocation(line: 32, column: 35, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !6629, line: 31, column: 19)
!6707 = !DILocation(line: 32, column: 20, scope: !6706)
!6708 = !DILocation(line: 32, column: 4, scope: !6706)
!6709 = !DILocation(line: 33, column: 3, scope: !6706)
!6710 = !DILocation(line: 34, column: 4, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6701, file: !6629, line: 33, column: 10)
!6712 = !DILocation(line: 30, column: 50, scope: !6703)
!6713 = !DILocation(line: 30, column: 24, scope: !6703)
!6714 = distinct !{!6714, !6696, !6715}
!6715 = !DILocation(line: 36, column: 2, scope: !6686)
!6716 = !DILocation(line: 49, column: 2, scope: !6679)
!6717 = !DILocation(line: 50, column: 1, scope: !6679)
!6718 = !DILocation(line: 41, column: 9, scope: !6691)
!6719 = !DILocation(line: 41, column: 7, scope: !6692)
!6720 = !DILocation(line: 42, column: 22, scope: !6690)
!6721 = !DILocation(line: 0, scope: !6690)
!6722 = !DILocation(line: 44, column: 25, scope: !6690)
!6723 = !DILocation(line: 44, column: 17, scope: !6690)
!6724 = !DILocation(line: 44, column: 33, scope: !6690)
!6725 = !DILocation(line: 44, column: 4, scope: !6690)
!6726 = !DILocation(line: 45, column: 3, scope: !6690)
!6727 = !DILocation(line: 46, column: 4, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6691, file: !6629, line: 45, column: 10)
!6729 = !DILocation(line: 40, column: 50, scope: !6693)
!6730 = !DILocation(line: 40, column: 24, scope: !6693)
!6731 = distinct !{!6731, !6699, !6732}
!6732 = !DILocation(line: 48, column: 2, scope: !6688)
!6733 = distinct !DISubprogram(name: "isprint", scope: !5760, file: !5760, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !6734)
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "c", arg: 1, scope: !6733, file: !5760, line: 37, type: !125)
!6736 = !DILocation(line: 0, scope: !6733)
!6737 = !DILocation(line: 39, column: 38, scope: !6733)
!6738 = !DILocation(line: 39, column: 2, scope: !6733)
!6739 = distinct !DISubprogram(name: "_copy", scope: !6740, file: !6740, line: 40, type: !6741, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6743)
!6740 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!32, !184, !32, !846, !32}
!6743 = !{!6744, !6745, !6746, !6747}
!6744 = !DILocalVariable(name: "to", arg: 1, scope: !6739, file: !6740, line: 40, type: !184)
!6745 = !DILocalVariable(name: "to_len", arg: 2, scope: !6739, file: !6740, line: 40, type: !32)
!6746 = !DILocalVariable(name: "from", arg: 3, scope: !6739, file: !6740, line: 41, type: !846)
!6747 = !DILocalVariable(name: "from_len", arg: 4, scope: !6739, file: !6740, line: 41, type: !32)
!6748 = !DILocation(line: 0, scope: !6739)
!6749 = !DILocation(line: 43, column: 15, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6739, file: !6740, line: 43, column: 6)
!6751 = !DILocation(line: 43, column: 6, scope: !6739)
!6752 = !DILocation(line: 44, column: 9, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6750, file: !6740, line: 43, column: 26)
!6754 = !DILocation(line: 45, column: 3, scope: !6753)
!6755 = !DILocation(line: 0, scope: !6750)
!6756 = !DILocation(line: 49, column: 1, scope: !6739)
!6757 = distinct !DISubprogram(name: "_set", scope: !6740, file: !6740, line: 51, type: !6758, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6760)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !124, !150, !32}
!6760 = !{!6761, !6762, !6763}
!6761 = !DILocalVariable(name: "to", arg: 1, scope: !6757, file: !6740, line: 51, type: !124)
!6762 = !DILocalVariable(name: "val", arg: 2, scope: !6757, file: !6740, line: 51, type: !150)
!6763 = !DILocalVariable(name: "len", arg: 3, scope: !6757, file: !6740, line: 51, type: !32)
!6764 = !DILocation(line: 0, scope: !6757)
!6765 = !DILocation(line: 53, column: 19, scope: !6757)
!6766 = !DILocation(line: 53, column: 8, scope: !6757)
!6767 = !DILocation(line: 54, column: 1, scope: !6757)
!6768 = distinct !DISubprogram(name: "_double_byte", scope: !6740, file: !6740, line: 59, type: !6769, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6771)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!150, !150}
!6771 = !{!6772}
!6772 = !DILocalVariable(name: "a", arg: 1, scope: !6768, file: !6740, line: 59, type: !150)
!6773 = !DILocation(line: 0, scope: !6768)
!6774 = !DILocation(line: 61, column: 12, scope: !6768)
!6775 = !DILocation(line: 61, column: 27, scope: !6768)
!6776 = !DILocation(line: 61, column: 17, scope: !6768)
!6777 = !DILocation(line: 61, column: 2, scope: !6768)
!6778 = distinct !DISubprogram(name: "_compare", scope: !6740, file: !6740, line: 64, type: !6779, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6781)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{!125, !846, !846, !272}
!6781 = !{!6782, !6783, !6784, !6785, !6786, !6787, !6788}
!6782 = !DILocalVariable(name: "a", arg: 1, scope: !6778, file: !6740, line: 64, type: !846)
!6783 = !DILocalVariable(name: "b", arg: 2, scope: !6778, file: !6740, line: 64, type: !846)
!6784 = !DILocalVariable(name: "size", arg: 3, scope: !6778, file: !6740, line: 64, type: !272)
!6785 = !DILocalVariable(name: "tempa", scope: !6778, file: !6740, line: 66, type: !846)
!6786 = !DILocalVariable(name: "tempb", scope: !6778, file: !6740, line: 67, type: !846)
!6787 = !DILocalVariable(name: "result", scope: !6778, file: !6740, line: 68, type: !150)
!6788 = !DILocalVariable(name: "i", scope: !6789, file: !6740, line: 70, type: !32)
!6789 = distinct !DILexicalBlock(scope: !6778, file: !6740, line: 70, column: 2)
!6790 = !DILocation(line: 0, scope: !6778)
!6791 = !DILocation(line: 0, scope: !6789)
!6792 = !DILocation(line: 70, column: 29, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !6740, line: 70, column: 2)
!6794 = !DILocation(line: 70, column: 2, scope: !6789)
!6795 = !DILocation(line: 73, column: 2, scope: !6778)
!6796 = !DILocation(line: 71, column: 13, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6793, file: !6740, line: 70, column: 42)
!6798 = !DILocation(line: 71, column: 24, scope: !6797)
!6799 = !DILocation(line: 71, column: 22, scope: !6797)
!6800 = !DILocation(line: 71, column: 10, scope: !6797)
!6801 = !DILocation(line: 70, column: 38, scope: !6793)
!6802 = distinct !{!6802, !6794, !6803}
!6803 = !DILocation(line: 72, column: 2, scope: !6789)
!6804 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !857, file: !857, line: 62, type: !6805, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6807)
!6805 = !DISubroutineType(types: !6806)
!6806 = !{!125, !847, !846}
!6807 = !{!6808, !6809}
!6808 = !DILocalVariable(name: "s", arg: 1, scope: !6804, file: !857, line: 62, type: !847)
!6809 = !DILocalVariable(name: "k", arg: 2, scope: !6804, file: !857, line: 62, type: !846)
!6810 = !DILocation(line: 0, scope: !6804)
!6811 = !DILocation(line: 64, column: 9, scope: !6804)
!6812 = !DILocation(line: 64, column: 2, scope: !6804)
!6813 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !857, file: !857, line: 129, type: !6814, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6817)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!125, !184, !846, !6816}
!6816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!6817 = !{!6818, !6819, !6820, !6821, !6822}
!6818 = !DILocalVariable(name: "out", arg: 1, scope: !6813, file: !857, line: 129, type: !184)
!6819 = !DILocalVariable(name: "in", arg: 2, scope: !6813, file: !857, line: 129, type: !846)
!6820 = !DILocalVariable(name: "s", arg: 3, scope: !6813, file: !857, line: 129, type: !6816)
!6821 = !DILocalVariable(name: "state", scope: !6813, file: !857, line: 131, type: !311)
!6822 = !DILocalVariable(name: "i", scope: !6813, file: !857, line: 132, type: !32)
!6823 = !DILocation(line: 0, scope: !6813)
!6824 = !DILocation(line: 131, column: 2, scope: !6813)
!6825 = !DILocation(line: 131, column: 10, scope: !6813)
!6826 = !DILocation(line: 134, column: 10, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6813, file: !857, line: 134, column: 6)
!6828 = !DILocation(line: 134, column: 6, scope: !6813)
!6829 = !DILocation(line: 142, column: 8, scope: !6813)
!6830 = !DILocation(line: 144, column: 32, scope: !6813)
!6831 = !DILocation(line: 144, column: 2, scope: !6813)
!6832 = !DILocation(line: 146, column: 2, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6813, file: !857, line: 146, column: 2)
!6834 = !DILocation(line: 147, column: 3, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !857, line: 146, column: 31)
!6836 = distinct !DILexicalBlock(scope: !6833, file: !857, line: 146, column: 2)
!6837 = !DILocation(line: 148, column: 3, scope: !6835)
!6838 = !DILocation(line: 149, column: 37, scope: !6835)
!6839 = !DILocation(line: 149, column: 33, scope: !6835)
!6840 = !DILocation(line: 149, column: 3, scope: !6835)
!6841 = !DILocation(line: 150, column: 3, scope: !6835)
!6842 = !DILocation(line: 146, column: 26, scope: !6836)
!6843 = !DILocation(line: 146, column: 21, scope: !6836)
!6844 = distinct !{!6844, !6832, !6845}
!6845 = !DILocation(line: 151, column: 2, scope: !6833)
!6846 = !DILocation(line: 144, column: 23, scope: !6813)
!6847 = !DILocation(line: 153, column: 2, scope: !6813)
!6848 = !DILocation(line: 154, column: 2, scope: !6813)
!6849 = !DILocation(line: 155, column: 2, scope: !6813)
!6850 = !DILocation(line: 157, column: 8, scope: !6813)
!6851 = !DILocation(line: 160, column: 2, scope: !6813)
!6852 = !DILocation(line: 163, column: 2, scope: !6813)
!6853 = !DILocation(line: 164, column: 1, scope: !6813)
!6854 = distinct !DISubprogram(name: "add_round_key", scope: !857, file: !857, line: 92, type: !6855, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6858)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{null, !184, !6857}
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 32)
!6858 = !{!6859, !6860}
!6859 = !DILocalVariable(name: "s", arg: 1, scope: !6854, file: !857, line: 92, type: !184)
!6860 = !DILocalVariable(name: "k", arg: 2, scope: !6854, file: !857, line: 92, type: !6857)
!6861 = !DILocation(line: 0, scope: !6854)
!6862 = !DILocation(line: 94, column: 20, scope: !6854)
!6863 = !DILocation(line: 94, column: 25, scope: !6854)
!6864 = !DILocation(line: 94, column: 7, scope: !6854)
!6865 = !DILocation(line: 94, column: 51, scope: !6854)
!6866 = !DILocation(line: 94, column: 56, scope: !6854)
!6867 = !DILocation(line: 94, column: 33, scope: !6854)
!6868 = !DILocation(line: 94, column: 38, scope: !6854)
!6869 = !DILocation(line: 95, column: 20, scope: !6854)
!6870 = !DILocation(line: 95, column: 25, scope: !6854)
!6871 = !DILocation(line: 95, column: 2, scope: !6854)
!6872 = !DILocation(line: 95, column: 7, scope: !6854)
!6873 = !DILocation(line: 95, column: 50, scope: !6854)
!6874 = !DILocation(line: 95, column: 32, scope: !6854)
!6875 = !DILocation(line: 95, column: 37, scope: !6854)
!6876 = !DILocation(line: 96, column: 20, scope: !6854)
!6877 = !DILocation(line: 96, column: 25, scope: !6854)
!6878 = !DILocation(line: 96, column: 2, scope: !6854)
!6879 = !DILocation(line: 96, column: 7, scope: !6854)
!6880 = !DILocation(line: 96, column: 51, scope: !6854)
!6881 = !DILocation(line: 96, column: 56, scope: !6854)
!6882 = !DILocation(line: 96, column: 33, scope: !6854)
!6883 = !DILocation(line: 96, column: 38, scope: !6854)
!6884 = !DILocation(line: 97, column: 20, scope: !6854)
!6885 = !DILocation(line: 97, column: 25, scope: !6854)
!6886 = !DILocation(line: 97, column: 2, scope: !6854)
!6887 = !DILocation(line: 97, column: 7, scope: !6854)
!6888 = !DILocation(line: 97, column: 50, scope: !6854)
!6889 = !DILocation(line: 97, column: 32, scope: !6854)
!6890 = !DILocation(line: 97, column: 37, scope: !6854)
!6891 = !DILocation(line: 98, column: 20, scope: !6854)
!6892 = !DILocation(line: 98, column: 25, scope: !6854)
!6893 = !DILocation(line: 98, column: 2, scope: !6854)
!6894 = !DILocation(line: 98, column: 7, scope: !6854)
!6895 = !DILocation(line: 98, column: 51, scope: !6854)
!6896 = !DILocation(line: 98, column: 56, scope: !6854)
!6897 = !DILocation(line: 98, column: 33, scope: !6854)
!6898 = !DILocation(line: 98, column: 38, scope: !6854)
!6899 = !DILocation(line: 99, column: 21, scope: !6854)
!6900 = !DILocation(line: 99, column: 26, scope: !6854)
!6901 = !DILocation(line: 99, column: 2, scope: !6854)
!6902 = !DILocation(line: 99, column: 8, scope: !6854)
!6903 = !DILocation(line: 99, column: 52, scope: !6854)
!6904 = !DILocation(line: 99, column: 33, scope: !6854)
!6905 = !DILocation(line: 99, column: 39, scope: !6854)
!6906 = !DILocation(line: 100, column: 21, scope: !6854)
!6907 = !DILocation(line: 100, column: 26, scope: !6854)
!6908 = !DILocation(line: 100, column: 2, scope: !6854)
!6909 = !DILocation(line: 100, column: 8, scope: !6854)
!6910 = !DILocation(line: 100, column: 53, scope: !6854)
!6911 = !DILocation(line: 100, column: 58, scope: !6854)
!6912 = !DILocation(line: 100, column: 34, scope: !6854)
!6913 = !DILocation(line: 100, column: 40, scope: !6854)
!6914 = !DILocation(line: 101, column: 21, scope: !6854)
!6915 = !DILocation(line: 101, column: 26, scope: !6854)
!6916 = !DILocation(line: 101, column: 2, scope: !6854)
!6917 = !DILocation(line: 101, column: 8, scope: !6854)
!6918 = !DILocation(line: 101, column: 52, scope: !6854)
!6919 = !DILocation(line: 101, column: 33, scope: !6854)
!6920 = !DILocation(line: 101, column: 39, scope: !6854)
!6921 = !DILocation(line: 102, column: 1, scope: !6854)
!6922 = distinct !DISubprogram(name: "inv_shift_rows", scope: !857, file: !857, line: 118, type: !6923, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6925)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{null, !184}
!6925 = !{!6926, !6927}
!6926 = !DILocalVariable(name: "s", arg: 1, scope: !6922, file: !857, line: 118, type: !184)
!6927 = !DILocalVariable(name: "t", scope: !6922, file: !857, line: 120, type: !311)
!6928 = !DILocation(line: 0, scope: !6922)
!6929 = !DILocation(line: 120, column: 2, scope: !6922)
!6930 = !DILocation(line: 120, column: 10, scope: !6922)
!6931 = !DILocation(line: 122, column: 10, scope: !6922)
!6932 = !DILocation(line: 122, column: 8, scope: !6922)
!6933 = !DILocation(line: 122, column: 23, scope: !6922)
!6934 = !DILocation(line: 122, column: 16, scope: !6922)
!6935 = !DILocation(line: 122, column: 21, scope: !6922)
!6936 = !DILocation(line: 122, column: 37, scope: !6922)
!6937 = !DILocation(line: 122, column: 30, scope: !6922)
!6938 = !DILocation(line: 122, column: 35, scope: !6922)
!6939 = !DILocation(line: 122, column: 51, scope: !6922)
!6940 = !DILocation(line: 122, column: 44, scope: !6922)
!6941 = !DILocation(line: 122, column: 49, scope: !6922)
!6942 = !DILocation(line: 123, column: 10, scope: !6922)
!6943 = !DILocation(line: 123, column: 2, scope: !6922)
!6944 = !DILocation(line: 123, column: 8, scope: !6922)
!6945 = !DILocation(line: 123, column: 23, scope: !6922)
!6946 = !DILocation(line: 123, column: 16, scope: !6922)
!6947 = !DILocation(line: 123, column: 21, scope: !6922)
!6948 = !DILocation(line: 123, column: 36, scope: !6922)
!6949 = !DILocation(line: 123, column: 29, scope: !6922)
!6950 = !DILocation(line: 123, column: 34, scope: !6922)
!6951 = !DILocation(line: 123, column: 50, scope: !6922)
!6952 = !DILocation(line: 123, column: 43, scope: !6922)
!6953 = !DILocation(line: 123, column: 48, scope: !6922)
!6954 = !DILocation(line: 124, column: 10, scope: !6922)
!6955 = !DILocation(line: 124, column: 2, scope: !6922)
!6956 = !DILocation(line: 124, column: 8, scope: !6922)
!6957 = !DILocation(line: 124, column: 23, scope: !6922)
!6958 = !DILocation(line: 124, column: 16, scope: !6922)
!6959 = !DILocation(line: 124, column: 21, scope: !6922)
!6960 = !DILocation(line: 124, column: 37, scope: !6922)
!6961 = !DILocation(line: 124, column: 29, scope: !6922)
!6962 = !DILocation(line: 124, column: 35, scope: !6922)
!6963 = !DILocation(line: 124, column: 51, scope: !6922)
!6964 = !DILocation(line: 124, column: 43, scope: !6922)
!6965 = !DILocation(line: 124, column: 49, scope: !6922)
!6966 = !DILocation(line: 125, column: 10, scope: !6922)
!6967 = !DILocation(line: 125, column: 2, scope: !6922)
!6968 = !DILocation(line: 125, column: 8, scope: !6922)
!6969 = !DILocation(line: 125, column: 25, scope: !6922)
!6970 = !DILocation(line: 125, column: 17, scope: !6922)
!6971 = !DILocation(line: 125, column: 23, scope: !6922)
!6972 = !DILocation(line: 125, column: 39, scope: !6922)
!6973 = !DILocation(line: 125, column: 31, scope: !6922)
!6974 = !DILocation(line: 125, column: 37, scope: !6922)
!6975 = !DILocation(line: 125, column: 53, scope: !6922)
!6976 = !DILocation(line: 125, column: 45, scope: !6922)
!6977 = !DILocation(line: 125, column: 51, scope: !6922)
!6978 = !DILocation(line: 126, column: 8, scope: !6922)
!6979 = !DILocation(line: 127, column: 1, scope: !6922)
!6980 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !857, file: !857, line: 104, type: !6923, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6981)
!6981 = !{!6982, !6983}
!6982 = !DILocalVariable(name: "s", arg: 1, scope: !6980, file: !857, line: 104, type: !184)
!6983 = !DILocalVariable(name: "i", scope: !6980, file: !857, line: 106, type: !32)
!6984 = !DILocation(line: 0, scope: !6980)
!6985 = !DILocation(line: 108, column: 2, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6980, file: !857, line: 108, column: 2)
!6987 = !DILocation(line: 109, column: 19, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !857, line: 108, column: 32)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !857, line: 108, column: 2)
!6990 = !DILocation(line: 109, column: 10, scope: !6988)
!6991 = !DILocation(line: 109, column: 8, scope: !6988)
!6992 = !DILocation(line: 108, column: 27, scope: !6989)
!6993 = !DILocation(line: 108, column: 16, scope: !6989)
!6994 = distinct !{!6994, !6985, !6995}
!6995 = !DILocation(line: 110, column: 2, scope: !6986)
!6996 = !DILocation(line: 111, column: 1, scope: !6980)
!6997 = distinct !DISubprogram(name: "inv_mix_columns", scope: !857, file: !857, line: 81, type: !6923, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !6998)
!6998 = !{!6999, !7000}
!6999 = !DILocalVariable(name: "s", arg: 1, scope: !6997, file: !857, line: 81, type: !184)
!7000 = !DILocalVariable(name: "t", scope: !6997, file: !857, line: 83, type: !311)
!7001 = !DILocation(line: 0, scope: !6997)
!7002 = !DILocation(line: 83, column: 2, scope: !6997)
!7003 = !DILocation(line: 83, column: 10, scope: !6997)
!7004 = !DILocation(line: 85, column: 2, scope: !6997)
!7005 = !DILocation(line: 86, column: 19, scope: !6997)
!7006 = !DILocation(line: 86, column: 27, scope: !6997)
!7007 = !DILocation(line: 86, column: 2, scope: !6997)
!7008 = !DILocation(line: 87, column: 19, scope: !6997)
!7009 = !DILocation(line: 87, column: 29, scope: !6997)
!7010 = !DILocation(line: 87, column: 2, scope: !6997)
!7011 = !DILocation(line: 88, column: 19, scope: !6997)
!7012 = !DILocation(line: 88, column: 29, scope: !6997)
!7013 = !DILocation(line: 88, column: 2, scope: !6997)
!7014 = !DILocation(line: 89, column: 8, scope: !6997)
!7015 = !DILocation(line: 90, column: 1, scope: !6997)
!7016 = distinct !DISubprogram(name: "mult_row_column", scope: !857, file: !857, line: 73, type: !7017, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !843, retainedNodes: !7019)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{null, !184, !846}
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "out", arg: 1, scope: !7016, file: !857, line: 73, type: !184)
!7021 = !DILocalVariable(name: "in", arg: 2, scope: !7016, file: !857, line: 73, type: !846)
!7022 = !DILocation(line: 0, scope: !7016)
!7023 = !DILocation(line: 75, column: 11, scope: !7016)
!7024 = !DILocation(line: 75, column: 26, scope: !7016)
!7025 = !DILocation(line: 75, column: 41, scope: !7016)
!7026 = !DILocation(line: 75, column: 56, scope: !7016)
!7027 = !DILocation(line: 75, column: 24, scope: !7016)
!7028 = !DILocation(line: 75, column: 39, scope: !7016)
!7029 = !DILocation(line: 75, column: 54, scope: !7016)
!7030 = !DILocation(line: 75, column: 9, scope: !7016)
!7031 = !DILocation(line: 76, column: 11, scope: !7016)
!7032 = !DILocation(line: 76, column: 26, scope: !7016)
!7033 = !DILocation(line: 76, column: 41, scope: !7016)
!7034 = !DILocation(line: 76, column: 56, scope: !7016)
!7035 = !DILocation(line: 76, column: 24, scope: !7016)
!7036 = !DILocation(line: 76, column: 39, scope: !7016)
!7037 = !DILocation(line: 76, column: 54, scope: !7016)
!7038 = !DILocation(line: 76, column: 2, scope: !7016)
!7039 = !DILocation(line: 76, column: 9, scope: !7016)
!7040 = !DILocation(line: 77, column: 11, scope: !7016)
!7041 = !DILocation(line: 77, column: 26, scope: !7016)
!7042 = !DILocation(line: 77, column: 41, scope: !7016)
!7043 = !DILocation(line: 77, column: 56, scope: !7016)
!7044 = !DILocation(line: 77, column: 24, scope: !7016)
!7045 = !DILocation(line: 77, column: 39, scope: !7016)
!7046 = !DILocation(line: 77, column: 54, scope: !7016)
!7047 = !DILocation(line: 77, column: 2, scope: !7016)
!7048 = !DILocation(line: 77, column: 9, scope: !7016)
!7049 = !DILocation(line: 78, column: 11, scope: !7016)
!7050 = !DILocation(line: 78, column: 26, scope: !7016)
!7051 = !DILocation(line: 78, column: 41, scope: !7016)
!7052 = !DILocation(line: 78, column: 56, scope: !7016)
!7053 = !DILocation(line: 78, column: 24, scope: !7016)
!7054 = !DILocation(line: 78, column: 39, scope: !7016)
!7055 = !DILocation(line: 78, column: 54, scope: !7016)
!7056 = !DILocation(line: 78, column: 2, scope: !7016)
!7057 = !DILocation(line: 78, column: 9, scope: !7016)
!7058 = !DILocation(line: 79, column: 1, scope: !7016)
!7059 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !872, file: !872, line: 70, type: !7060, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7062)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!125, !866, !846}
!7062 = !{!7063, !7064, !7065, !7069, !7070}
!7063 = !DILocalVariable(name: "s", arg: 1, scope: !7059, file: !872, line: 70, type: !866)
!7064 = !DILocalVariable(name: "k", arg: 2, scope: !7059, file: !872, line: 70, type: !846)
!7065 = !DILocalVariable(name: "rconst", scope: !7059, file: !872, line: 72, type: !7066)
!7066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5683, size: 352, elements: !7067)
!7067 = !{!7068}
!7068 = !DISubrange(count: 11)
!7069 = !DILocalVariable(name: "i", scope: !7059, file: !872, line: 76, type: !32)
!7070 = !DILocalVariable(name: "t", scope: !7059, file: !872, line: 77, type: !32)
!7071 = !DILocation(line: 0, scope: !7059)
!7072 = !DILocation(line: 72, column: 21, scope: !7059)
!7073 = !DILocation(line: 79, column: 8, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7059, file: !872, line: 79, column: 6)
!7075 = !DILocation(line: 79, column: 6, scope: !7059)
!7076 = !DILocation(line: 91, column: 7, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !872, line: 90, column: 35)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !872, line: 90, column: 2)
!7079 = distinct !DILexicalBlock(scope: !7059, file: !872, line: 90, column: 2)
!7080 = !DILocation(line: 90, column: 2, scope: !7079)
!7081 = !DILocation(line: 86, column: 22, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !872, line: 85, column: 27)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !872, line: 85, column: 2)
!7084 = distinct !DILexicalBlock(scope: !7059, file: !872, line: 85, column: 2)
!7085 = !DILocation(line: 86, column: 18, scope: !7082)
!7086 = !DILocation(line: 86, column: 25, scope: !7082)
!7087 = !DILocation(line: 86, column: 40, scope: !7082)
!7088 = !DILocation(line: 86, column: 34, scope: !7082)
!7089 = !DILocation(line: 86, column: 43, scope: !7082)
!7090 = !DILocation(line: 86, column: 31, scope: !7082)
!7091 = !DILocation(line: 87, column: 17, scope: !7082)
!7092 = !DILocation(line: 87, column: 11, scope: !7082)
!7093 = !DILocation(line: 87, column: 20, scope: !7082)
!7094 = !DILocation(line: 86, column: 49, scope: !7082)
!7095 = !DILocation(line: 87, column: 34, scope: !7082)
!7096 = !DILocation(line: 87, column: 28, scope: !7082)
!7097 = !DILocation(line: 87, column: 27, scope: !7082)
!7098 = !DILocation(line: 87, column: 25, scope: !7082)
!7099 = !DILocation(line: 86, column: 3, scope: !7082)
!7100 = !DILocation(line: 86, column: 15, scope: !7082)
!7101 = !DILocation(line: 85, column: 22, scope: !7083)
!7102 = !DILocation(line: 85, column: 16, scope: !7083)
!7103 = !DILocation(line: 85, column: 2, scope: !7084)
!7104 = distinct !{!7104, !7103, !7105}
!7105 = !DILocation(line: 88, column: 2, scope: !7084)
!7106 = !DILocation(line: 92, column: 10, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7077, file: !872, line: 92, column: 7)
!7108 = !DILocation(line: 92, column: 16, scope: !7107)
!7109 = !DILocation(line: 92, column: 7, scope: !7077)
!7110 = !DILocation(line: 93, column: 8, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !872, line: 92, column: 22)
!7112 = !DILocation(line: 93, column: 38, scope: !7111)
!7113 = !DILocation(line: 93, column: 30, scope: !7111)
!7114 = !DILocation(line: 93, column: 28, scope: !7111)
!7115 = !DILocation(line: 94, column: 3, scope: !7111)
!7116 = !DILocation(line: 0, scope: !7077)
!7117 = !DILocation(line: 95, column: 27, scope: !7077)
!7118 = !DILocation(line: 95, column: 17, scope: !7077)
!7119 = !DILocation(line: 95, column: 32, scope: !7077)
!7120 = !DILocation(line: 95, column: 3, scope: !7077)
!7121 = !DILocation(line: 95, column: 15, scope: !7077)
!7122 = !DILocation(line: 90, column: 30, scope: !7078)
!7123 = !DILocation(line: 90, column: 11, scope: !7078)
!7124 = distinct !{!7124, !7080, !7125}
!7125 = !DILocation(line: 96, column: 2, scope: !7079)
!7126 = !DILocation(line: 99, column: 1, scope: !7059)
!7127 = distinct !DISubprogram(name: "rotword", scope: !872, file: !872, line: 62, type: !7128, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7130)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!32, !32}
!7130 = !{!7131}
!7131 = !DILocalVariable(name: "a", arg: 1, scope: !7127, file: !872, line: 62, type: !32)
!7132 = !DILocation(line: 0, scope: !7127)
!7133 = !DILocation(line: 64, column: 21, scope: !7127)
!7134 = !DILocation(line: 64, column: 2, scope: !7127)
!7135 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !872, file: !872, line: 158, type: !7136, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7139)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{!125, !184, !846, !7138}
!7138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!7139 = !{!7140, !7141, !7142, !7143, !7144}
!7140 = !DILocalVariable(name: "out", arg: 1, scope: !7135, file: !872, line: 158, type: !184)
!7141 = !DILocalVariable(name: "in", arg: 2, scope: !7135, file: !872, line: 158, type: !846)
!7142 = !DILocalVariable(name: "s", arg: 3, scope: !7135, file: !872, line: 158, type: !7138)
!7143 = !DILocalVariable(name: "state", scope: !7135, file: !872, line: 160, type: !311)
!7144 = !DILocalVariable(name: "i", scope: !7135, file: !872, line: 161, type: !32)
!7145 = !DILocation(line: 0, scope: !7135)
!7146 = !DILocation(line: 160, column: 2, scope: !7135)
!7147 = !DILocation(line: 160, column: 10, scope: !7135)
!7148 = !DILocation(line: 163, column: 10, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7135, file: !872, line: 163, column: 6)
!7150 = !DILocation(line: 163, column: 6, scope: !7135)
!7151 = !DILocation(line: 171, column: 8, scope: !7135)
!7152 = !DILocation(line: 172, column: 23, scope: !7135)
!7153 = !DILocation(line: 172, column: 2, scope: !7135)
!7154 = !DILocation(line: 174, column: 2, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7135, file: !872, line: 174, column: 2)
!7156 = !DILocation(line: 175, column: 3, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !872, line: 174, column: 33)
!7158 = distinct !DILexicalBlock(scope: !7155, file: !872, line: 174, column: 2)
!7159 = !DILocation(line: 176, column: 3, scope: !7157)
!7160 = !DILocation(line: 177, column: 3, scope: !7157)
!7161 = !DILocation(line: 178, column: 40, scope: !7157)
!7162 = !DILocation(line: 178, column: 37, scope: !7157)
!7163 = !DILocation(line: 178, column: 33, scope: !7157)
!7164 = !DILocation(line: 178, column: 3, scope: !7157)
!7165 = !DILocation(line: 174, column: 16, scope: !7158)
!7166 = distinct !{!7166, !7154, !7167}
!7167 = !DILocation(line: 179, column: 2, scope: !7155)
!7168 = !DILocation(line: 181, column: 2, scope: !7135)
!7169 = !DILocation(line: 182, column: 2, scope: !7135)
!7170 = !DILocation(line: 183, column: 32, scope: !7135)
!7171 = !DILocation(line: 183, column: 2, scope: !7135)
!7172 = !DILocation(line: 185, column: 8, scope: !7135)
!7173 = !DILocation(line: 188, column: 2, scope: !7135)
!7174 = !DILocation(line: 190, column: 2, scope: !7135)
!7175 = !DILocation(line: 191, column: 1, scope: !7135)
!7176 = distinct !DISubprogram(name: "add_round_key", scope: !872, file: !872, line: 101, type: !6855, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7177)
!7177 = !{!7178, !7179}
!7178 = !DILocalVariable(name: "s", arg: 1, scope: !7176, file: !872, line: 101, type: !184)
!7179 = !DILocalVariable(name: "k", arg: 2, scope: !7176, file: !872, line: 101, type: !6857)
!7180 = !DILocation(line: 0, scope: !7176)
!7181 = !DILocation(line: 103, column: 20, scope: !7176)
!7182 = !DILocation(line: 103, column: 25, scope: !7176)
!7183 = !DILocation(line: 103, column: 7, scope: !7176)
!7184 = !DILocation(line: 103, column: 51, scope: !7176)
!7185 = !DILocation(line: 103, column: 56, scope: !7176)
!7186 = !DILocation(line: 103, column: 33, scope: !7176)
!7187 = !DILocation(line: 103, column: 38, scope: !7176)
!7188 = !DILocation(line: 104, column: 20, scope: !7176)
!7189 = !DILocation(line: 104, column: 25, scope: !7176)
!7190 = !DILocation(line: 104, column: 2, scope: !7176)
!7191 = !DILocation(line: 104, column: 7, scope: !7176)
!7192 = !DILocation(line: 104, column: 50, scope: !7176)
!7193 = !DILocation(line: 104, column: 32, scope: !7176)
!7194 = !DILocation(line: 104, column: 37, scope: !7176)
!7195 = !DILocation(line: 105, column: 20, scope: !7176)
!7196 = !DILocation(line: 105, column: 25, scope: !7176)
!7197 = !DILocation(line: 105, column: 2, scope: !7176)
!7198 = !DILocation(line: 105, column: 7, scope: !7176)
!7199 = !DILocation(line: 105, column: 51, scope: !7176)
!7200 = !DILocation(line: 105, column: 56, scope: !7176)
!7201 = !DILocation(line: 105, column: 33, scope: !7176)
!7202 = !DILocation(line: 105, column: 38, scope: !7176)
!7203 = !DILocation(line: 106, column: 20, scope: !7176)
!7204 = !DILocation(line: 106, column: 25, scope: !7176)
!7205 = !DILocation(line: 106, column: 2, scope: !7176)
!7206 = !DILocation(line: 106, column: 7, scope: !7176)
!7207 = !DILocation(line: 106, column: 50, scope: !7176)
!7208 = !DILocation(line: 106, column: 32, scope: !7176)
!7209 = !DILocation(line: 106, column: 37, scope: !7176)
!7210 = !DILocation(line: 107, column: 20, scope: !7176)
!7211 = !DILocation(line: 107, column: 25, scope: !7176)
!7212 = !DILocation(line: 107, column: 2, scope: !7176)
!7213 = !DILocation(line: 107, column: 7, scope: !7176)
!7214 = !DILocation(line: 107, column: 51, scope: !7176)
!7215 = !DILocation(line: 107, column: 56, scope: !7176)
!7216 = !DILocation(line: 107, column: 33, scope: !7176)
!7217 = !DILocation(line: 107, column: 38, scope: !7176)
!7218 = !DILocation(line: 108, column: 21, scope: !7176)
!7219 = !DILocation(line: 108, column: 26, scope: !7176)
!7220 = !DILocation(line: 108, column: 2, scope: !7176)
!7221 = !DILocation(line: 108, column: 8, scope: !7176)
!7222 = !DILocation(line: 108, column: 52, scope: !7176)
!7223 = !DILocation(line: 108, column: 33, scope: !7176)
!7224 = !DILocation(line: 108, column: 39, scope: !7176)
!7225 = !DILocation(line: 109, column: 21, scope: !7176)
!7226 = !DILocation(line: 109, column: 26, scope: !7176)
!7227 = !DILocation(line: 109, column: 2, scope: !7176)
!7228 = !DILocation(line: 109, column: 8, scope: !7176)
!7229 = !DILocation(line: 109, column: 53, scope: !7176)
!7230 = !DILocation(line: 109, column: 58, scope: !7176)
!7231 = !DILocation(line: 109, column: 34, scope: !7176)
!7232 = !DILocation(line: 109, column: 40, scope: !7176)
!7233 = !DILocation(line: 110, column: 21, scope: !7176)
!7234 = !DILocation(line: 110, column: 26, scope: !7176)
!7235 = !DILocation(line: 110, column: 2, scope: !7176)
!7236 = !DILocation(line: 110, column: 8, scope: !7176)
!7237 = !DILocation(line: 110, column: 52, scope: !7176)
!7238 = !DILocation(line: 110, column: 33, scope: !7176)
!7239 = !DILocation(line: 110, column: 39, scope: !7176)
!7240 = !DILocation(line: 111, column: 1, scope: !7176)
!7241 = distinct !DISubprogram(name: "sub_bytes", scope: !872, file: !872, line: 113, type: !6923, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7242)
!7242 = !{!7243, !7244}
!7243 = !DILocalVariable(name: "s", arg: 1, scope: !7241, file: !872, line: 113, type: !184)
!7244 = !DILocalVariable(name: "i", scope: !7241, file: !872, line: 115, type: !32)
!7245 = !DILocation(line: 0, scope: !7241)
!7246 = !DILocation(line: 117, column: 2, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !872, line: 117, column: 2)
!7248 = !DILocation(line: 118, column: 15, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !872, line: 117, column: 34)
!7250 = distinct !DILexicalBlock(scope: !7247, file: !872, line: 117, column: 2)
!7251 = !DILocation(line: 118, column: 10, scope: !7249)
!7252 = !DILocation(line: 118, column: 8, scope: !7249)
!7253 = !DILocation(line: 117, column: 29, scope: !7250)
!7254 = !DILocation(line: 117, column: 16, scope: !7250)
!7255 = distinct !{!7255, !7246, !7256}
!7256 = !DILocation(line: 119, column: 2, scope: !7247)
!7257 = !DILocation(line: 120, column: 1, scope: !7241)
!7258 = distinct !DISubprogram(name: "shift_rows", scope: !872, file: !872, line: 147, type: !6923, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7259)
!7259 = !{!7260, !7261}
!7260 = !DILocalVariable(name: "s", arg: 1, scope: !7258, file: !872, line: 147, type: !184)
!7261 = !DILocalVariable(name: "t", scope: !7258, file: !872, line: 149, type: !311)
!7262 = !DILocation(line: 0, scope: !7258)
!7263 = !DILocation(line: 149, column: 2, scope: !7258)
!7264 = !DILocation(line: 149, column: 10, scope: !7258)
!7265 = !DILocation(line: 151, column: 10, scope: !7258)
!7266 = !DILocation(line: 151, column: 8, scope: !7258)
!7267 = !DILocation(line: 151, column: 23, scope: !7258)
!7268 = !DILocation(line: 151, column: 16, scope: !7258)
!7269 = !DILocation(line: 151, column: 21, scope: !7258)
!7270 = !DILocation(line: 151, column: 36, scope: !7258)
!7271 = !DILocation(line: 151, column: 29, scope: !7258)
!7272 = !DILocation(line: 151, column: 34, scope: !7258)
!7273 = !DILocation(line: 151, column: 50, scope: !7258)
!7274 = !DILocation(line: 151, column: 43, scope: !7258)
!7275 = !DILocation(line: 151, column: 48, scope: !7258)
!7276 = !DILocation(line: 152, column: 10, scope: !7258)
!7277 = !DILocation(line: 152, column: 2, scope: !7258)
!7278 = !DILocation(line: 152, column: 8, scope: !7258)
!7279 = !DILocation(line: 152, column: 23, scope: !7258)
!7280 = !DILocation(line: 152, column: 16, scope: !7258)
!7281 = !DILocation(line: 152, column: 21, scope: !7258)
!7282 = !DILocation(line: 152, column: 36, scope: !7258)
!7283 = !DILocation(line: 152, column: 29, scope: !7258)
!7284 = !DILocation(line: 152, column: 34, scope: !7258)
!7285 = !DILocation(line: 152, column: 50, scope: !7258)
!7286 = !DILocation(line: 152, column: 43, scope: !7258)
!7287 = !DILocation(line: 152, column: 48, scope: !7258)
!7288 = !DILocation(line: 153, column: 10, scope: !7258)
!7289 = !DILocation(line: 153, column: 2, scope: !7258)
!7290 = !DILocation(line: 153, column: 8, scope: !7258)
!7291 = !DILocation(line: 153, column: 23, scope: !7258)
!7292 = !DILocation(line: 153, column: 16, scope: !7258)
!7293 = !DILocation(line: 153, column: 21, scope: !7258)
!7294 = !DILocation(line: 153, column: 38, scope: !7258)
!7295 = !DILocation(line: 153, column: 30, scope: !7258)
!7296 = !DILocation(line: 153, column: 36, scope: !7258)
!7297 = !DILocation(line: 153, column: 52, scope: !7258)
!7298 = !DILocation(line: 153, column: 44, scope: !7258)
!7299 = !DILocation(line: 153, column: 50, scope: !7258)
!7300 = !DILocation(line: 154, column: 10, scope: !7258)
!7301 = !DILocation(line: 154, column: 2, scope: !7258)
!7302 = !DILocation(line: 154, column: 8, scope: !7258)
!7303 = !DILocation(line: 154, column: 25, scope: !7258)
!7304 = !DILocation(line: 154, column: 17, scope: !7258)
!7305 = !DILocation(line: 154, column: 23, scope: !7258)
!7306 = !DILocation(line: 154, column: 39, scope: !7258)
!7307 = !DILocation(line: 154, column: 31, scope: !7258)
!7308 = !DILocation(line: 154, column: 37, scope: !7258)
!7309 = !DILocation(line: 154, column: 53, scope: !7258)
!7310 = !DILocation(line: 154, column: 45, scope: !7258)
!7311 = !DILocation(line: 154, column: 51, scope: !7258)
!7312 = !DILocation(line: 155, column: 9, scope: !7258)
!7313 = !DILocation(line: 156, column: 1, scope: !7258)
!7314 = distinct !DISubprogram(name: "mix_columns", scope: !872, file: !872, line: 132, type: !6923, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7315)
!7315 = !{!7316, !7317}
!7316 = !DILocalVariable(name: "s", arg: 1, scope: !7314, file: !872, line: 132, type: !184)
!7317 = !DILocalVariable(name: "t", scope: !7314, file: !872, line: 134, type: !311)
!7318 = !DILocation(line: 0, scope: !7314)
!7319 = !DILocation(line: 134, column: 2, scope: !7314)
!7320 = !DILocation(line: 134, column: 10, scope: !7314)
!7321 = !DILocation(line: 136, column: 2, scope: !7314)
!7322 = !DILocation(line: 137, column: 19, scope: !7314)
!7323 = !DILocation(line: 137, column: 27, scope: !7314)
!7324 = !DILocation(line: 137, column: 2, scope: !7314)
!7325 = !DILocation(line: 138, column: 19, scope: !7314)
!7326 = !DILocation(line: 138, column: 32, scope: !7314)
!7327 = !DILocation(line: 138, column: 2, scope: !7314)
!7328 = !DILocation(line: 139, column: 19, scope: !7314)
!7329 = !DILocation(line: 139, column: 32, scope: !7314)
!7330 = !DILocation(line: 139, column: 2, scope: !7314)
!7331 = !DILocation(line: 140, column: 9, scope: !7314)
!7332 = !DILocation(line: 141, column: 1, scope: !7314)
!7333 = distinct !DISubprogram(name: "mult_row_column", scope: !872, file: !872, line: 124, type: !7017, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !863, retainedNodes: !7334)
!7334 = !{!7335, !7336}
!7335 = !DILocalVariable(name: "out", arg: 1, scope: !7333, file: !872, line: 124, type: !184)
!7336 = !DILocalVariable(name: "in", arg: 2, scope: !7333, file: !872, line: 124, type: !846)
!7337 = !DILocation(line: 0, scope: !7333)
!7338 = !DILocation(line: 126, column: 24, scope: !7333)
!7339 = !DILocation(line: 126, column: 11, scope: !7333)
!7340 = !DILocation(line: 126, column: 33, scope: !7333)
!7341 = !DILocation(line: 126, column: 49, scope: !7333)
!7342 = !DILocation(line: 126, column: 57, scope: !7333)
!7343 = !DILocation(line: 126, column: 31, scope: !7333)
!7344 = !DILocation(line: 126, column: 47, scope: !7333)
!7345 = !DILocation(line: 126, column: 55, scope: !7333)
!7346 = !DILocation(line: 126, column: 9, scope: !7333)
!7347 = !DILocation(line: 127, column: 11, scope: !7333)
!7348 = !DILocation(line: 127, column: 32, scope: !7333)
!7349 = !DILocation(line: 127, column: 19, scope: !7333)
!7350 = !DILocation(line: 127, column: 41, scope: !7333)
!7351 = !DILocation(line: 127, column: 57, scope: !7333)
!7352 = !DILocation(line: 127, column: 17, scope: !7333)
!7353 = !DILocation(line: 127, column: 39, scope: !7333)
!7354 = !DILocation(line: 127, column: 55, scope: !7333)
!7355 = !DILocation(line: 127, column: 2, scope: !7333)
!7356 = !DILocation(line: 127, column: 9, scope: !7333)
!7357 = !DILocation(line: 128, column: 11, scope: !7333)
!7358 = !DILocation(line: 128, column: 19, scope: !7333)
!7359 = !DILocation(line: 128, column: 40, scope: !7333)
!7360 = !DILocation(line: 128, column: 27, scope: !7333)
!7361 = !DILocation(line: 128, column: 49, scope: !7333)
!7362 = !DILocation(line: 128, column: 17, scope: !7333)
!7363 = !DILocation(line: 128, column: 25, scope: !7333)
!7364 = !DILocation(line: 128, column: 47, scope: !7333)
!7365 = !DILocation(line: 128, column: 2, scope: !7333)
!7366 = !DILocation(line: 128, column: 9, scope: !7333)
!7367 = !DILocation(line: 129, column: 11, scope: !7333)
!7368 = !DILocation(line: 129, column: 27, scope: !7333)
!7369 = !DILocation(line: 129, column: 25, scope: !7333)
!7370 = !DILocation(line: 129, column: 35, scope: !7333)
!7371 = !DILocation(line: 129, column: 33, scope: !7333)
!7372 = !DILocation(line: 129, column: 56, scope: !7333)
!7373 = !DILocation(line: 129, column: 43, scope: !7333)
!7374 = !DILocation(line: 129, column: 41, scope: !7333)
!7375 = !DILocation(line: 129, column: 2, scope: !7333)
!7376 = !DILocation(line: 129, column: 9, scope: !7333)
!7377 = !DILocation(line: 130, column: 1, scope: !7333)
!7378 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7379, file: !7379, line: 37, type: !7380, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !7383)
!7379 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!125, !184, !32, !846, !32, !846, !7382}
!7382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2525)
!7383 = !{!7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392}
!7384 = !DILocalVariable(name: "out", arg: 1, scope: !7378, file: !7379, line: 37, type: !184)
!7385 = !DILocalVariable(name: "outlen", arg: 2, scope: !7378, file: !7379, line: 37, type: !32)
!7386 = !DILocalVariable(name: "in", arg: 3, scope: !7378, file: !7379, line: 37, type: !846)
!7387 = !DILocalVariable(name: "inlen", arg: 4, scope: !7378, file: !7379, line: 38, type: !32)
!7388 = !DILocalVariable(name: "iv", arg: 5, scope: !7378, file: !7379, line: 38, type: !846)
!7389 = !DILocalVariable(name: "sched", arg: 6, scope: !7378, file: !7379, line: 39, type: !7382)
!7390 = !DILocalVariable(name: "buffer", scope: !7378, file: !7379, line: 42, type: !311)
!7391 = !DILocalVariable(name: "n", scope: !7378, file: !7379, line: 43, type: !32)
!7392 = !DILocalVariable(name: "m", scope: !7378, file: !7379, line: 43, type: !32)
!7393 = !DILocation(line: 0, scope: !7378)
!7394 = !DILocation(line: 42, column: 2, scope: !7378)
!7395 = !DILocation(line: 42, column: 10, scope: !7378)
!7396 = !DILocation(line: 46, column: 10, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7378, file: !7379, line: 46, column: 6)
!7398 = !DILocation(line: 46, column: 27, scope: !7397)
!7399 = !DILocation(line: 58, column: 8, scope: !7378)
!7400 = !DILocation(line: 60, column: 8, scope: !7378)
!7401 = !DILocation(line: 63, column: 2, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7378, file: !7379, line: 63, column: 2)
!7403 = !DILocation(line: 61, column: 6, scope: !7378)
!7404 = !DILocation(line: 64, column: 21, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7406, file: !7379, line: 63, column: 34)
!7406 = distinct !DILexicalBlock(scope: !7402, file: !7379, line: 63, column: 2)
!7407 = !DILocation(line: 64, column: 18, scope: !7405)
!7408 = !DILocation(line: 64, column: 11, scope: !7405)
!7409 = !DILocation(line: 64, column: 3, scope: !7405)
!7410 = !DILocation(line: 64, column: 15, scope: !7405)
!7411 = !DILocation(line: 65, column: 9, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7405, file: !7379, line: 65, column: 7)
!7413 = !DILocation(line: 65, column: 7, scope: !7405)
!7414 = !DILocation(line: 66, column: 10, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7412, file: !7379, line: 65, column: 31)
!7416 = !DILocation(line: 67, column: 10, scope: !7415)
!7417 = !DILocation(line: 69, column: 8, scope: !7415)
!7418 = !DILocation(line: 71, column: 3, scope: !7415)
!7419 = !DILocation(line: 0, scope: !7405)
!7420 = !DILocation(line: 63, column: 29, scope: !7406)
!7421 = !DILocation(line: 63, column: 20, scope: !7406)
!7422 = distinct !{!7422, !7401, !7423}
!7423 = !DILocation(line: 72, column: 2, scope: !7402)
!7424 = !DILocation(line: 75, column: 1, scope: !7378)
!7425 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7379, file: !7379, line: 77, type: !7380, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !7426)
!7426 = !{!7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7436}
!7427 = !DILocalVariable(name: "out", arg: 1, scope: !7425, file: !7379, line: 77, type: !184)
!7428 = !DILocalVariable(name: "outlen", arg: 2, scope: !7425, file: !7379, line: 77, type: !32)
!7429 = !DILocalVariable(name: "in", arg: 3, scope: !7425, file: !7379, line: 77, type: !846)
!7430 = !DILocalVariable(name: "inlen", arg: 4, scope: !7425, file: !7379, line: 78, type: !32)
!7431 = !DILocalVariable(name: "iv", arg: 5, scope: !7425, file: !7379, line: 78, type: !846)
!7432 = !DILocalVariable(name: "sched", arg: 6, scope: !7425, file: !7379, line: 79, type: !7382)
!7433 = !DILocalVariable(name: "buffer", scope: !7425, file: !7379, line: 82, type: !311)
!7434 = !DILocalVariable(name: "p", scope: !7425, file: !7379, line: 83, type: !846)
!7435 = !DILocalVariable(name: "n", scope: !7425, file: !7379, line: 84, type: !32)
!7436 = !DILocalVariable(name: "m", scope: !7425, file: !7379, line: 84, type: !32)
!7437 = !DILocation(line: 0, scope: !7425)
!7438 = !DILocation(line: 82, column: 2, scope: !7425)
!7439 = !DILocation(line: 82, column: 10, scope: !7425)
!7440 = !DILocation(line: 87, column: 10, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7425, file: !7379, line: 87, column: 6)
!7442 = !DILocation(line: 87, column: 27, scope: !7441)
!7443 = !DILocation(line: 105, column: 10, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !7379, line: 105, column: 7)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !7379, line: 104, column: 35)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !7379, line: 104, column: 2)
!7447 = distinct !DILexicalBlock(scope: !7425, file: !7379, line: 104, column: 2)
!7448 = !DILocation(line: 105, column: 31, scope: !7444)
!7449 = !DILocation(line: 105, column: 7, scope: !7445)
!7450 = !DILocation(line: 106, column: 10, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7444, file: !7379, line: 105, column: 37)
!7452 = !DILocation(line: 107, column: 7, scope: !7451)
!7453 = !DILocation(line: 109, column: 3, scope: !7451)
!7454 = !DILocation(line: 0, scope: !7447)
!7455 = !DILocation(line: 110, column: 20, scope: !7445)
!7456 = !DILocation(line: 110, column: 12, scope: !7445)
!7457 = !DILocation(line: 110, column: 28, scope: !7445)
!7458 = !DILocation(line: 110, column: 26, scope: !7445)
!7459 = !DILocation(line: 110, column: 24, scope: !7445)
!7460 = !DILocation(line: 110, column: 7, scope: !7445)
!7461 = !DILocation(line: 110, column: 10, scope: !7445)
!7462 = !DILocation(line: 104, column: 30, scope: !7446)
!7463 = !DILocation(line: 104, column: 20, scope: !7446)
!7464 = !DILocation(line: 104, column: 2, scope: !7447)
!7465 = distinct !{!7465, !7464, !7466}
!7466 = !DILocation(line: 111, column: 2, scope: !7447)
!7467 = !DILocation(line: 114, column: 1, scope: !7425)
!7468 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7469, file: !7469, line: 37, type: !7470, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !7473)
!7469 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!125, !184, !32, !846, !32, !184, !7472}
!7472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2533)
!7473 = !{!7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483}
!7474 = !DILocalVariable(name: "out", arg: 1, scope: !7468, file: !7469, line: 37, type: !184)
!7475 = !DILocalVariable(name: "outlen", arg: 2, scope: !7468, file: !7469, line: 37, type: !32)
!7476 = !DILocalVariable(name: "in", arg: 3, scope: !7468, file: !7469, line: 37, type: !846)
!7477 = !DILocalVariable(name: "inlen", arg: 4, scope: !7468, file: !7469, line: 38, type: !32)
!7478 = !DILocalVariable(name: "ctr", arg: 5, scope: !7468, file: !7469, line: 38, type: !184)
!7479 = !DILocalVariable(name: "sched", arg: 6, scope: !7468, file: !7469, line: 38, type: !7472)
!7480 = !DILocalVariable(name: "buffer", scope: !7468, file: !7469, line: 41, type: !311)
!7481 = !DILocalVariable(name: "nonce", scope: !7468, file: !7469, line: 42, type: !311)
!7482 = !DILocalVariable(name: "block_num", scope: !7468, file: !7469, line: 43, type: !32)
!7483 = !DILocalVariable(name: "i", scope: !7468, file: !7469, line: 44, type: !32)
!7484 = !DILocation(line: 0, scope: !7468)
!7485 = !DILocation(line: 41, column: 2, scope: !7468)
!7486 = !DILocation(line: 41, column: 10, scope: !7468)
!7487 = !DILocation(line: 42, column: 2, scope: !7468)
!7488 = !DILocation(line: 42, column: 10, scope: !7468)
!7489 = !DILocation(line: 47, column: 10, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7468, file: !7469, line: 47, column: 6)
!7491 = !DILocation(line: 47, column: 27, scope: !7490)
!7492 = !DILocation(line: 58, column: 8, scope: !7468)
!7493 = !DILocation(line: 61, column: 15, scope: !7468)
!7494 = !DILocation(line: 61, column: 35, scope: !7468)
!7495 = !DILocation(line: 62, column: 8, scope: !7468)
!7496 = !DILocation(line: 62, column: 27, scope: !7468)
!7497 = !DILocation(line: 61, column: 45, scope: !7468)
!7498 = !DILocation(line: 61, column: 25, scope: !7468)
!7499 = !DILocation(line: 61, column: 32, scope: !7468)
!7500 = !DILocation(line: 62, column: 18, scope: !7468)
!7501 = !DILocation(line: 61, column: 52, scope: !7468)
!7502 = !DILocation(line: 62, column: 26, scope: !7468)
!7503 = !DILocation(line: 62, column: 24, scope: !7468)
!7504 = !DILocation(line: 63, column: 2, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7468, file: !7469, line: 63, column: 2)
!7506 = !DILocation(line: 64, column: 10, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !7469, line: 64, column: 7)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7469, line: 63, column: 30)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !7469, line: 63, column: 2)
!7510 = !DILocation(line: 64, column: 33, scope: !7507)
!7511 = !DILocation(line: 64, column: 7, scope: !7508)
!7512 = !DILocation(line: 66, column: 8, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !7469, line: 66, column: 8)
!7514 = distinct !DILexicalBlock(scope: !7507, file: !7469, line: 64, column: 39)
!7515 = !DILocation(line: 66, column: 8, scope: !7514)
!7516 = !DILocation(line: 67, column: 14, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !7469, line: 66, column: 46)
!7518 = !DILocation(line: 68, column: 37, scope: !7517)
!7519 = !DILocation(line: 68, column: 17, scope: !7517)
!7520 = !DILocation(line: 68, column: 15, scope: !7517)
!7521 = !DILocation(line: 69, column: 37, scope: !7517)
!7522 = !DILocation(line: 69, column: 17, scope: !7517)
!7523 = !DILocation(line: 69, column: 15, scope: !7517)
!7524 = !DILocation(line: 70, column: 37, scope: !7517)
!7525 = !DILocation(line: 70, column: 17, scope: !7517)
!7526 = !DILocation(line: 70, column: 15, scope: !7517)
!7527 = !DILocation(line: 71, column: 17, scope: !7517)
!7528 = !DILocation(line: 71, column: 15, scope: !7517)
!7529 = !DILocation(line: 75, column: 3, scope: !7514)
!7530 = !DILocation(line: 77, column: 12, scope: !7508)
!7531 = !DILocation(line: 77, column: 47, scope: !7508)
!7532 = !DILocation(line: 77, column: 44, scope: !7508)
!7533 = !DILocation(line: 77, column: 42, scope: !7508)
!7534 = !DILocation(line: 77, column: 7, scope: !7508)
!7535 = !DILocation(line: 77, column: 10, scope: !7508)
!7536 = !DILocation(line: 63, column: 25, scope: !7509)
!7537 = !DILocation(line: 63, column: 16, scope: !7509)
!7538 = distinct !{!7538, !7504, !7539}
!7539 = !DILocation(line: 78, column: 2, scope: !7505)
!7540 = !DILocation(line: 81, column: 2, scope: !7468)
!7541 = !DILocation(line: 81, column: 10, scope: !7468)
!7542 = !DILocation(line: 81, column: 23, scope: !7468)
!7543 = !DILocation(line: 81, column: 31, scope: !7468)
!7544 = !DILocation(line: 82, column: 2, scope: !7468)
!7545 = !DILocation(line: 82, column: 10, scope: !7468)
!7546 = !DILocation(line: 82, column: 23, scope: !7468)
!7547 = !DILocation(line: 82, column: 31, scope: !7468)
!7548 = !DILocation(line: 84, column: 2, scope: !7468)
!7549 = !DILocation(line: 85, column: 1, scope: !7468)
!7550 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7551, file: !7551, line: 39, type: !7552, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7554)
!7551 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!125, !2541, !2547, !184, !32, !32}
!7554 = !{!7555, !7556, !7557, !7558, !7559}
!7555 = !DILocalVariable(name: "c", arg: 1, scope: !7550, file: !7551, line: 39, type: !2541)
!7556 = !DILocalVariable(name: "sched", arg: 2, scope: !7550, file: !7551, line: 39, type: !2547)
!7557 = !DILocalVariable(name: "nonce", arg: 3, scope: !7550, file: !7551, line: 39, type: !184)
!7558 = !DILocalVariable(name: "nlen", arg: 4, scope: !7550, file: !7551, line: 40, type: !32)
!7559 = !DILocalVariable(name: "mlen", arg: 5, scope: !7550, file: !7551, line: 40, type: !32)
!7560 = !DILocation(line: 0, scope: !7550)
!7561 = !DILocation(line: 44, column: 8, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7550, file: !7551, line: 44, column: 6)
!7563 = !DILocation(line: 44, column: 27, scope: !7562)
!7564 = !DILocation(line: 50, column: 24, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !7551, line: 50, column: 13)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !7551, line: 48, column: 13)
!7567 = !DILocation(line: 54, column: 5, scope: !7550)
!7568 = !DILocation(line: 54, column: 10, scope: !7550)
!7569 = !DILocation(line: 55, column: 5, scope: !7550)
!7570 = !DILocation(line: 55, column: 11, scope: !7550)
!7571 = !DILocation(line: 56, column: 5, scope: !7550)
!7572 = !DILocation(line: 56, column: 11, scope: !7550)
!7573 = !DILocation(line: 58, column: 2, scope: !7550)
!7574 = !DILocation(line: 59, column: 1, scope: !7550)
!7575 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7551, file: !7551, line: 137, type: !7576, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7578)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!125, !184, !32, !846, !32, !846, !32, !2541}
!7578 = !{!7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588}
!7579 = !DILocalVariable(name: "out", arg: 1, scope: !7575, file: !7551, line: 137, type: !184)
!7580 = !DILocalVariable(name: "olen", arg: 2, scope: !7575, file: !7551, line: 137, type: !32)
!7581 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7575, file: !7551, line: 138, type: !846)
!7582 = !DILocalVariable(name: "alen", arg: 4, scope: !7575, file: !7551, line: 139, type: !32)
!7583 = !DILocalVariable(name: "payload", arg: 5, scope: !7575, file: !7551, line: 139, type: !846)
!7584 = !DILocalVariable(name: "plen", arg: 6, scope: !7575, file: !7551, line: 140, type: !32)
!7585 = !DILocalVariable(name: "c", arg: 7, scope: !7575, file: !7551, line: 140, type: !2541)
!7586 = !DILocalVariable(name: "b", scope: !7575, file: !7551, line: 154, type: !311)
!7587 = !DILocalVariable(name: "tag", scope: !7575, file: !7551, line: 155, type: !311)
!7588 = !DILocalVariable(name: "i", scope: !7575, file: !7551, line: 156, type: !32)
!7589 = !DILocation(line: 0, scope: !7575)
!7590 = !DILocation(line: 144, column: 11, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7575, file: !7551, line: 144, column: 6)
!7592 = !DILocation(line: 144, column: 29, scope: !7591)
!7593 = !DILocation(line: 146, column: 10, scope: !7591)
!7594 = !DILocation(line: 146, column: 15, scope: !7591)
!7595 = !DILocation(line: 147, column: 10, scope: !7591)
!7596 = !DILocation(line: 147, column: 15, scope: !7591)
!7597 = !DILocation(line: 150, column: 22, scope: !7591)
!7598 = !DILocation(line: 150, column: 17, scope: !7591)
!7599 = !DILocation(line: 150, column: 9, scope: !7591)
!7600 = !DILocation(line: 144, column: 6, scope: !7575)
!7601 = !DILocation(line: 154, column: 2, scope: !7575)
!7602 = !DILocation(line: 154, column: 10, scope: !7575)
!7603 = !DILocation(line: 155, column: 2, scope: !7575)
!7604 = !DILocation(line: 155, column: 10, scope: !7575)
!7605 = !DILocation(line: 161, column: 10, scope: !7575)
!7606 = !DILocation(line: 161, column: 53, scope: !7575)
!7607 = !DILocation(line: 161, column: 31, scope: !7575)
!7608 = !DILocation(line: 161, column: 9, scope: !7575)
!7609 = !DILocation(line: 161, column: 7, scope: !7575)
!7610 = !DILocation(line: 162, column: 2, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7575, file: !7551, line: 162, column: 2)
!7612 = !DILocation(line: 163, column: 21, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !7551, line: 162, column: 28)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !7551, line: 162, column: 2)
!7615 = !DILocation(line: 163, column: 10, scope: !7613)
!7616 = !DILocation(line: 163, column: 3, scope: !7613)
!7617 = !DILocation(line: 163, column: 8, scope: !7613)
!7618 = !DILocation(line: 162, column: 23, scope: !7614)
!7619 = !DILocation(line: 162, column: 16, scope: !7614)
!7620 = distinct !{!7620, !7610, !7621}
!7621 = !DILocation(line: 164, column: 2, scope: !7611)
!7622 = !DILocation(line: 165, column: 25, scope: !7575)
!7623 = !DILocation(line: 165, column: 10, scope: !7575)
!7624 = !DILocation(line: 165, column: 2, scope: !7575)
!7625 = !DILocation(line: 165, column: 8, scope: !7575)
!7626 = !DILocation(line: 166, column: 10, scope: !7575)
!7627 = !DILocation(line: 166, column: 2, scope: !7575)
!7628 = !DILocation(line: 166, column: 8, scope: !7575)
!7629 = !DILocation(line: 169, column: 35, scope: !7575)
!7630 = !DILocation(line: 169, column: 9, scope: !7575)
!7631 = !DILocation(line: 170, column: 6, scope: !7575)
!7632 = !DILocation(line: 171, column: 49, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !7551, line: 170, column: 16)
!7634 = distinct !DILexicalBlock(scope: !7575, file: !7551, line: 170, column: 6)
!7635 = !DILocation(line: 171, column: 3, scope: !7633)
!7636 = !DILocation(line: 172, column: 2, scope: !7633)
!7637 = !DILocation(line: 173, column: 6, scope: !7575)
!7638 = !DILocation(line: 174, column: 41, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !7551, line: 173, column: 16)
!7640 = distinct !DILexicalBlock(scope: !7575, file: !7551, line: 173, column: 6)
!7641 = !DILocation(line: 174, column: 3, scope: !7639)
!7642 = !DILocation(line: 175, column: 2, scope: !7639)
!7643 = !DILocation(line: 180, column: 7, scope: !7575)
!7644 = !DILocation(line: 181, column: 16, scope: !7575)
!7645 = !DILocation(line: 181, column: 8, scope: !7575)
!7646 = !DILocation(line: 184, column: 47, scope: !7575)
!7647 = !DILocation(line: 184, column: 2, scope: !7575)
!7648 = !DILocation(line: 186, column: 16, scope: !7575)
!7649 = !DILocation(line: 186, column: 8, scope: !7575)
!7650 = !DILocation(line: 189, column: 33, scope: !7575)
!7651 = !DILocation(line: 189, column: 9, scope: !7575)
!7652 = !DILocation(line: 191, column: 21, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7551, line: 191, column: 2)
!7654 = distinct !DILexicalBlock(scope: !7575, file: !7551, line: 191, column: 2)
!7655 = !DILocation(line: 191, column: 16, scope: !7653)
!7656 = !DILocation(line: 191, column: 2, scope: !7654)
!7657 = !DILocation(line: 190, column: 6, scope: !7575)
!7658 = !DILocation(line: 192, column: 12, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7653, file: !7551, line: 191, column: 32)
!7660 = !DILocation(line: 192, column: 21, scope: !7659)
!7661 = !DILocation(line: 192, column: 19, scope: !7659)
!7662 = !DILocation(line: 192, column: 7, scope: !7659)
!7663 = !DILocation(line: 192, column: 10, scope: !7659)
!7664 = !DILocation(line: 191, column: 27, scope: !7653)
!7665 = distinct !{!7665, !7656, !7666}
!7666 = !DILocation(line: 193, column: 2, scope: !7654)
!7667 = !DILocation(line: 196, column: 1, scope: !7575)
!7668 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7551, file: !7551, line: 64, type: !7669, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{null, !184, !846, !32, !32, !2547}
!7671 = !{!7672, !7673, !7674, !7675, !7676, !7677}
!7672 = !DILocalVariable(name: "T", arg: 1, scope: !7668, file: !7551, line: 64, type: !184)
!7673 = !DILocalVariable(name: "data", arg: 2, scope: !7668, file: !7551, line: 64, type: !846)
!7674 = !DILocalVariable(name: "dlen", arg: 3, scope: !7668, file: !7551, line: 64, type: !32)
!7675 = !DILocalVariable(name: "flag", arg: 4, scope: !7668, file: !7551, line: 65, type: !32)
!7676 = !DILocalVariable(name: "sched", arg: 5, scope: !7668, file: !7551, line: 65, type: !2547)
!7677 = !DILocalVariable(name: "i", scope: !7668, file: !7551, line: 68, type: !32)
!7678 = !DILocation(line: 0, scope: !7668)
!7679 = !DILocation(line: 70, column: 11, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7668, file: !7551, line: 70, column: 6)
!7681 = !DILocation(line: 70, column: 6, scope: !7668)
!7682 = !DILocation(line: 71, column: 26, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !7551, line: 70, column: 16)
!7684 = !DILocation(line: 71, column: 8, scope: !7683)
!7685 = !DILocation(line: 72, column: 3, scope: !7683)
!7686 = !DILocation(line: 72, column: 8, scope: !7683)
!7687 = !DILocation(line: 73, column: 8, scope: !7683)
!7688 = !DILocation(line: 74, column: 2, scope: !7683)
!7689 = !DILocation(line: 0, scope: !7680)
!7690 = !DILocation(line: 78, column: 11, scope: !7668)
!7691 = !DILocation(line: 78, column: 2, scope: !7668)
!7692 = !DILocation(line: 79, column: 30, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7668, file: !7551, line: 78, column: 19)
!7694 = !DILocation(line: 79, column: 25, scope: !7693)
!7695 = !DILocation(line: 79, column: 6, scope: !7693)
!7696 = !DILocation(line: 79, column: 9, scope: !7693)
!7697 = !DILocation(line: 79, column: 3, scope: !7693)
!7698 = !DILocation(line: 79, column: 22, scope: !7693)
!7699 = !DILocation(line: 80, column: 11, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7693, file: !7551, line: 80, column: 7)
!7701 = !DILocation(line: 80, column: 24, scope: !7700)
!7702 = !DILocation(line: 80, column: 30, scope: !7700)
!7703 = !DILocation(line: 81, column: 11, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7700, file: !7551, line: 80, column: 44)
!7705 = !DILocation(line: 82, column: 3, scope: !7704)
!7706 = distinct !{!7706, !7691, !7707}
!7707 = !DILocation(line: 83, column: 2, scope: !7668)
!7708 = !DILocation(line: 84, column: 1, scope: !7668)
!7709 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7551, file: !7551, line: 93, type: !7710, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7713)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{!125, !184, !32, !846, !32, !184, !7712}
!7712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!7713 = !{!7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723}
!7714 = !DILocalVariable(name: "out", arg: 1, scope: !7709, file: !7551, line: 93, type: !184)
!7715 = !DILocalVariable(name: "outlen", arg: 2, scope: !7709, file: !7551, line: 93, type: !32)
!7716 = !DILocalVariable(name: "in", arg: 3, scope: !7709, file: !7551, line: 93, type: !846)
!7717 = !DILocalVariable(name: "inlen", arg: 4, scope: !7709, file: !7551, line: 94, type: !32)
!7718 = !DILocalVariable(name: "ctr", arg: 5, scope: !7709, file: !7551, line: 94, type: !184)
!7719 = !DILocalVariable(name: "sched", arg: 6, scope: !7709, file: !7551, line: 94, type: !7712)
!7720 = !DILocalVariable(name: "buffer", scope: !7709, file: !7551, line: 97, type: !311)
!7721 = !DILocalVariable(name: "nonce", scope: !7709, file: !7551, line: 98, type: !311)
!7722 = !DILocalVariable(name: "block_num", scope: !7709, file: !7551, line: 99, type: !227)
!7723 = !DILocalVariable(name: "i", scope: !7709, file: !7551, line: 100, type: !32)
!7724 = !DILocation(line: 0, scope: !7709)
!7725 = !DILocation(line: 97, column: 2, scope: !7709)
!7726 = !DILocation(line: 97, column: 10, scope: !7709)
!7727 = !DILocation(line: 98, column: 2, scope: !7709)
!7728 = !DILocation(line: 98, column: 10, scope: !7709)
!7729 = !DILocation(line: 103, column: 10, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7709, file: !7551, line: 103, column: 6)
!7731 = !DILocation(line: 103, column: 27, scope: !7730)
!7732 = !DILocation(line: 114, column: 9, scope: !7709)
!7733 = !DILocation(line: 117, column: 27, scope: !7709)
!7734 = !DILocation(line: 117, column: 44, scope: !7709)
!7735 = !DILocation(line: 117, column: 37, scope: !7709)
!7736 = !DILocation(line: 117, column: 43, scope: !7709)
!7737 = !DILocation(line: 117, column: 42, scope: !7709)
!7738 = !DILocation(line: 118, column: 2, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7709, file: !7551, line: 118, column: 2)
!7740 = !DILocation(line: 119, column: 10, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !7551, line: 119, column: 7)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !7551, line: 118, column: 30)
!7743 = distinct !DILexicalBlock(scope: !7739, file: !7551, line: 118, column: 2)
!7744 = !DILocation(line: 119, column: 33, scope: !7741)
!7745 = !DILocation(line: 119, column: 7, scope: !7742)
!7746 = !DILocation(line: 120, column: 13, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7741, file: !7551, line: 119, column: 39)
!7748 = !DILocation(line: 121, column: 36, scope: !7747)
!7749 = !DILocation(line: 121, column: 16, scope: !7747)
!7750 = !DILocation(line: 121, column: 14, scope: !7747)
!7751 = !DILocation(line: 122, column: 16, scope: !7747)
!7752 = !DILocation(line: 122, column: 14, scope: !7747)
!7753 = !DILocation(line: 123, column: 9, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7747, file: !7551, line: 123, column: 8)
!7755 = !DILocation(line: 123, column: 8, scope: !7747)
!7756 = !DILocation(line: 128, column: 12, scope: !7742)
!7757 = !DILocation(line: 128, column: 49, scope: !7742)
!7758 = !DILocation(line: 128, column: 46, scope: !7742)
!7759 = !DILocation(line: 128, column: 44, scope: !7742)
!7760 = !DILocation(line: 128, column: 7, scope: !7742)
!7761 = !DILocation(line: 128, column: 10, scope: !7742)
!7762 = !DILocation(line: 118, column: 25, scope: !7743)
!7763 = !DILocation(line: 118, column: 16, scope: !7743)
!7764 = distinct !{!7764, !7738, !7765}
!7765 = !DILocation(line: 129, column: 2, scope: !7739)
!7766 = !DILocation(line: 132, column: 12, scope: !7709)
!7767 = !DILocation(line: 132, column: 33, scope: !7709)
!7768 = !DILocation(line: 132, column: 2, scope: !7709)
!7769 = !DILocation(line: 132, column: 10, scope: !7709)
!7770 = !DILocation(line: 132, column: 23, scope: !7709)
!7771 = !DILocation(line: 132, column: 31, scope: !7709)
!7772 = !DILocation(line: 134, column: 2, scope: !7709)
!7773 = !DILocation(line: 135, column: 1, scope: !7709)
!7774 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7551, file: !7551, line: 198, type: !7576, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7775)
!7775 = !{!7776, !7777, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7785}
!7776 = !DILocalVariable(name: "out", arg: 1, scope: !7774, file: !7551, line: 198, type: !184)
!7777 = !DILocalVariable(name: "olen", arg: 2, scope: !7774, file: !7551, line: 198, type: !32)
!7778 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7774, file: !7551, line: 199, type: !846)
!7779 = !DILocalVariable(name: "alen", arg: 4, scope: !7774, file: !7551, line: 200, type: !32)
!7780 = !DILocalVariable(name: "payload", arg: 5, scope: !7774, file: !7551, line: 200, type: !846)
!7781 = !DILocalVariable(name: "plen", arg: 6, scope: !7774, file: !7551, line: 201, type: !32)
!7782 = !DILocalVariable(name: "c", arg: 7, scope: !7774, file: !7551, line: 201, type: !2541)
!7783 = !DILocalVariable(name: "b", scope: !7774, file: !7551, line: 215, type: !311)
!7784 = !DILocalVariable(name: "tag", scope: !7774, file: !7551, line: 216, type: !311)
!7785 = !DILocalVariable(name: "i", scope: !7774, file: !7551, line: 217, type: !32)
!7786 = !DILocation(line: 0, scope: !7774)
!7787 = !DILocation(line: 205, column: 11, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 205, column: 6)
!7789 = !DILocation(line: 205, column: 29, scope: !7788)
!7790 = !DILocation(line: 207, column: 13, scope: !7788)
!7791 = !DILocation(line: 207, column: 18, scope: !7788)
!7792 = !DILocation(line: 208, column: 13, scope: !7788)
!7793 = !DILocation(line: 208, column: 18, scope: !7788)
!7794 = !DILocation(line: 211, column: 24, scope: !7788)
!7795 = !DILocation(line: 211, column: 19, scope: !7788)
!7796 = !DILocation(line: 211, column: 12, scope: !7788)
!7797 = !DILocation(line: 205, column: 6, scope: !7774)
!7798 = !DILocation(line: 215, column: 2, scope: !7774)
!7799 = !DILocation(line: 215, column: 10, scope: !7774)
!7800 = !DILocation(line: 216, column: 2, scope: !7774)
!7801 = !DILocation(line: 216, column: 10, scope: !7774)
!7802 = !DILocation(line: 222, column: 7, scope: !7774)
!7803 = !DILocation(line: 223, column: 2, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 223, column: 2)
!7805 = !DILocation(line: 224, column: 21, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !7551, line: 223, column: 27)
!7807 = distinct !DILexicalBlock(scope: !7804, file: !7551, line: 223, column: 2)
!7808 = !DILocation(line: 224, column: 10, scope: !7806)
!7809 = !DILocation(line: 224, column: 3, scope: !7806)
!7810 = !DILocation(line: 224, column: 8, scope: !7806)
!7811 = !DILocation(line: 223, column: 22, scope: !7807)
!7812 = !DILocation(line: 223, column: 16, scope: !7807)
!7813 = distinct !{!7813, !7803, !7814}
!7814 = !DILocation(line: 225, column: 2, scope: !7804)
!7815 = !DILocation(line: 226, column: 10, scope: !7774)
!7816 = !DILocation(line: 226, column: 16, scope: !7774)
!7817 = !DILocation(line: 226, column: 2, scope: !7774)
!7818 = !DILocation(line: 226, column: 8, scope: !7774)
!7819 = !DILocation(line: 229, column: 67, scope: !7774)
!7820 = !DILocation(line: 229, column: 2, scope: !7774)
!7821 = !DILocation(line: 231, column: 16, scope: !7774)
!7822 = !DILocation(line: 231, column: 8, scope: !7774)
!7823 = !DILocation(line: 234, column: 33, scope: !7774)
!7824 = !DILocation(line: 234, column: 9, scope: !7774)
!7825 = !DILocation(line: 235, column: 16, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7551, line: 235, column: 2)
!7827 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 235, column: 2)
!7828 = !DILocation(line: 235, column: 2, scope: !7827)
!7829 = !DILocation(line: 236, column: 39, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7826, file: !7551, line: 235, column: 32)
!7831 = !DILocation(line: 236, column: 12, scope: !7830)
!7832 = !DILocation(line: 236, column: 46, scope: !7830)
!7833 = !DILocation(line: 236, column: 44, scope: !7830)
!7834 = !DILocation(line: 236, column: 3, scope: !7830)
!7835 = !DILocation(line: 236, column: 10, scope: !7830)
!7836 = !DILocation(line: 235, column: 27, scope: !7826)
!7837 = distinct !{!7837, !7828, !7838}
!7838 = !DILocation(line: 237, column: 2, scope: !7827)
!7839 = !DILocation(line: 242, column: 10, scope: !7774)
!7840 = !DILocation(line: 242, column: 51, scope: !7774)
!7841 = !DILocation(line: 242, column: 30, scope: !7774)
!7842 = !DILocation(line: 242, column: 9, scope: !7774)
!7843 = !DILocation(line: 242, column: 7, scope: !7774)
!7844 = !DILocation(line: 243, column: 2, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 243, column: 2)
!7846 = !DILocation(line: 244, column: 21, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7551, line: 243, column: 27)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !7551, line: 243, column: 2)
!7849 = !DILocation(line: 244, column: 10, scope: !7847)
!7850 = !DILocation(line: 244, column: 3, scope: !7847)
!7851 = !DILocation(line: 244, column: 8, scope: !7847)
!7852 = !DILocation(line: 243, column: 22, scope: !7848)
!7853 = !DILocation(line: 243, column: 16, scope: !7848)
!7854 = distinct !{!7854, !7844, !7855}
!7855 = !DILocation(line: 245, column: 2, scope: !7845)
!7856 = !DILocation(line: 246, column: 26, scope: !7774)
!7857 = !DILocation(line: 246, column: 37, scope: !7774)
!7858 = !DILocation(line: 246, column: 10, scope: !7774)
!7859 = !DILocation(line: 246, column: 8, scope: !7774)
!7860 = !DILocation(line: 247, column: 10, scope: !7774)
!7861 = !DILocation(line: 247, column: 8, scope: !7774)
!7862 = !DILocation(line: 250, column: 33, scope: !7774)
!7863 = !DILocation(line: 250, column: 9, scope: !7774)
!7864 = !DILocation(line: 251, column: 6, scope: !7774)
!7865 = !DILocation(line: 252, column: 47, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7551, line: 251, column: 16)
!7867 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 251, column: 6)
!7868 = !DILocation(line: 252, column: 3, scope: !7866)
!7869 = !DILocation(line: 253, column: 2, scope: !7866)
!7870 = !DILocation(line: 254, column: 6, scope: !7774)
!7871 = !DILocation(line: 255, column: 33, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7551, line: 254, column: 16)
!7873 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 254, column: 6)
!7874 = !DILocation(line: 255, column: 28, scope: !7872)
!7875 = !DILocation(line: 255, column: 45, scope: !7872)
!7876 = !DILocation(line: 255, column: 3, scope: !7872)
!7877 = !DILocation(line: 256, column: 2, scope: !7872)
!7878 = !DILocation(line: 259, column: 26, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7774, file: !7551, line: 259, column: 6)
!7880 = !DILocation(line: 259, column: 6, scope: !7879)
!7881 = !DILocation(line: 259, column: 32, scope: !7879)
!7882 = !DILocation(line: 259, column: 6, scope: !7774)
!7883 = !DILocation(line: 263, column: 26, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !7551, line: 261, column: 11)
!7885 = !DILocation(line: 263, column: 21, scope: !7884)
!7886 = !DILocation(line: 263, column: 3, scope: !7884)
!7887 = !DILocation(line: 264, column: 3, scope: !7884)
!7888 = !DILocation(line: 0, scope: !7879)
!7889 = !DILocation(line: 266, column: 1, scope: !7774)
!7890 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7891, file: !7891, line: 57, type: !7892, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !7938)
!7891 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7892 = !DISubroutineType(types: !7893)
!7893 = !{null, !32, !7894}
!7894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7895, size: 32)
!7895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7896)
!7896 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !7897)
!7897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !7898)
!7898 = !{!7899}
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7897, file: !2675, line: 107, baseType: !7900, size: 256)
!7900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !7901)
!7901 = !{!7902, !7907, !7912, !7917, !7922, !7927, !7932, !7937}
!7902 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 99, baseType: !7903, size: 32)
!7903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 99, size: 32, elements: !7904)
!7904 = !{!7905, !7906}
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7903, file: !2675, line: 99, baseType: !208, size: 32)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7903, file: !2675, line: 99, baseType: !208, size: 32)
!7907 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 100, baseType: !7908, size: 32, offset: 32)
!7908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 100, size: 32, elements: !7909)
!7909 = !{!7910, !7911}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7908, file: !2675, line: 100, baseType: !208, size: 32)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7908, file: !2675, line: 100, baseType: !208, size: 32)
!7912 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 101, baseType: !7913, size: 32, offset: 64)
!7913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 101, size: 32, elements: !7914)
!7914 = !{!7915, !7916}
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7913, file: !2675, line: 101, baseType: !208, size: 32)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7913, file: !2675, line: 101, baseType: !208, size: 32)
!7917 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 102, baseType: !7918, size: 32, offset: 96)
!7918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 102, size: 32, elements: !7919)
!7919 = !{!7920, !7921}
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7918, file: !2675, line: 102, baseType: !208, size: 32)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7918, file: !2675, line: 102, baseType: !208, size: 32)
!7922 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 103, baseType: !7923, size: 32, offset: 128)
!7923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 103, size: 32, elements: !7924)
!7924 = !{!7925, !7926}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7923, file: !2675, line: 103, baseType: !208, size: 32)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7923, file: !2675, line: 103, baseType: !208, size: 32)
!7927 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 104, baseType: !7928, size: 32, offset: 160)
!7928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 104, size: 32, elements: !7929)
!7929 = !{!7930, !7931}
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7928, file: !2675, line: 104, baseType: !208, size: 32)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7928, file: !2675, line: 104, baseType: !208, size: 32)
!7932 = !DIDerivedType(tag: DW_TAG_member, scope: !7900, file: !2675, line: 105, baseType: !7933, size: 32, offset: 192)
!7933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7900, file: !2675, line: 105, size: 32, elements: !7934)
!7934 = !{!7935, !7936}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7933, file: !2675, line: 105, baseType: !208, size: 32)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7933, file: !2675, line: 105, baseType: !208, size: 32)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7900, file: !2675, line: 106, baseType: !208, size: 32, offset: 224)
!7938 = !{!7939, !7940}
!7939 = !DILocalVariable(name: "reason", arg: 1, scope: !7890, file: !7891, line: 57, type: !32)
!7940 = !DILocalVariable(name: "esf", arg: 2, scope: !7890, file: !7891, line: 57, type: !7894)
!7941 = !DILocation(line: 0, scope: !7890)
!7942 = !DILocation(line: 60, column: 10, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7890, file: !7891, line: 60, column: 6)
!7944 = !DILocation(line: 60, column: 6, scope: !7890)
!7945 = !DILocation(line: 61, column: 3, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7943, file: !7891, line: 60, column: 19)
!7947 = !DILocation(line: 62, column: 2, scope: !7946)
!7948 = !DILocation(line: 63, column: 2, scope: !7890)
!7949 = !DILocation(line: 64, column: 1, scope: !7890)
!7950 = distinct !DISubprogram(name: "esf_dump", scope: !7891, file: !7891, line: 20, type: !7951, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !7953)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{null, !7894}
!7953 = !{!7954}
!7954 = !DILocalVariable(name: "esf", arg: 1, scope: !7950, file: !7891, line: 20, type: !7894)
!7955 = !DILocation(line: 0, scope: !7950)
!7956 = !DILocation(line: 22, column: 2, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !7891, line: 22, column: 2)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7891, line: 22, column: 2)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7891, line: 22, column: 2)
!7960 = distinct !DILexicalBlock(scope: !7950, file: !7891, line: 22, column: 2)
!7961 = !DILocation(line: 24, column: 2, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7891, line: 24, column: 2)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7891, line: 24, column: 2)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7891, line: 24, column: 2)
!7965 = distinct !DILexicalBlock(scope: !7950, file: !7891, line: 24, column: 2)
!7966 = !DILocation(line: 26, column: 2, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7891, line: 26, column: 2)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !7891, line: 26, column: 2)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !7891, line: 26, column: 2)
!7970 = distinct !DILexicalBlock(scope: !7950, file: !7891, line: 26, column: 2)
!7971 = !DILocation(line: 53, column: 2, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !7891, line: 53, column: 2)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7891, line: 53, column: 2)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7891, line: 53, column: 2)
!7975 = distinct !DILexicalBlock(scope: !7950, file: !7891, line: 53, column: 2)
!7976 = !DILocation(line: 55, column: 1, scope: !7950)
!7977 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7891, file: !7891, line: 82, type: !7978, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !7993)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{null, !7894, !7980}
!7980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7981, size: 32)
!7981 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !2106, line: 37, baseType: !7982)
!7982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !7983)
!7983 = !{!7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992}
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7982, file: !2106, line: 26, baseType: !208, size: 32)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7982, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7982, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7982, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7982, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7982, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7982, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7982, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7982, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!7993 = !{!7994, !7995, !7996}
!7994 = !DILocalVariable(name: "esf", arg: 1, scope: !7977, file: !7891, line: 82, type: !7894)
!7995 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7977, file: !7891, line: 82, type: !7980)
!7996 = !DILocalVariable(name: "reason", scope: !7977, file: !7891, line: 88, type: !32)
!7997 = !DILocation(line: 0, scope: !7977)
!7998 = !DILocation(line: 88, column: 35, scope: !7977)
!7999 = !DILocation(line: 108, column: 2, scope: !7977)
!8000 = !DILocation(line: 131, column: 1, scope: !7977)
!8001 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7891, file: !7891, line: 133, type: !8002, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !8004)
!8002 = !DISubroutineType(types: !8003)
!8003 = !{null, !124}
!8004 = !{!8005, !8006, !8007}
!8005 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8001, file: !7891, line: 133, type: !124)
!8006 = !DILocalVariable(name: "ssf_contents", scope: !8001, file: !7891, line: 135, type: !1595)
!8007 = !DILocalVariable(name: "oops_esf", scope: !8001, file: !7891, line: 136, type: !7896)
!8008 = !DILocation(line: 0, scope: !8001)
!8009 = !DILocation(line: 136, column: 2, scope: !8001)
!8010 = !DILocation(line: 136, column: 15, scope: !8001)
!8011 = !DILocation(line: 139, column: 22, scope: !8001)
!8012 = !DILocation(line: 139, column: 17, scope: !8001)
!8013 = !DILocation(line: 139, column: 20, scope: !8001)
!8014 = !DILocation(line: 141, column: 2, scope: !8001)
!8015 = !DILocation(line: 142, column: 2, scope: !8001)
!8016 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8017, file: !8017, line: 40, type: !8018, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8020)
!8017 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8018 = !DISubroutineType(types: !8019)
!8019 = !{null, !32}
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "irq", arg: 1, scope: !8016, file: !8017, line: 40, type: !32)
!8022 = !DILocation(line: 0, scope: !8016)
!8023 = !DILocation(line: 42, column: 2, scope: !8016)
!8024 = !DILocation(line: 43, column: 1, scope: !8016)
!8025 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1793, file: !1793, line: 1684, type: !8026, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8028)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{null, !2569}
!8028 = !{!8029}
!8029 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8025, file: !1793, line: 1684, type: !2569)
!8030 = !DILocation(line: 0, scope: !8025)
!8031 = !DILocation(line: 1686, column: 23, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8025, file: !1793, line: 1686, column: 7)
!8033 = !DILocation(line: 1686, column: 7, scope: !8025)
!8034 = !DILocation(line: 1688, column: 5, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8032, file: !1793, line: 1687, column: 3)
!8036 = !{i64 2154445453}
!8037 = !DILocation(line: 1689, column: 81, scope: !8035)
!8038 = !DILocation(line: 1689, column: 60, scope: !8035)
!8039 = !DILocation(line: 1689, column: 34, scope: !8035)
!8040 = !DILocation(line: 1689, column: 5, scope: !8035)
!8041 = !DILocation(line: 1689, column: 43, scope: !8035)
!8042 = !DILocation(line: 1690, column: 5, scope: !8035)
!8043 = !{i64 2154445567}
!8044 = !DILocation(line: 1691, column: 3, scope: !8035)
!8045 = !DILocation(line: 1692, column: 1, scope: !8025)
!8046 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8017, file: !8017, line: 45, type: !8018, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8047)
!8047 = !{!8048}
!8048 = !DILocalVariable(name: "irq", arg: 1, scope: !8046, file: !8017, line: 45, type: !32)
!8049 = !DILocation(line: 0, scope: !8046)
!8050 = !DILocation(line: 47, column: 2, scope: !8046)
!8051 = !DILocation(line: 48, column: 1, scope: !8046)
!8052 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1793, file: !1793, line: 1722, type: !8026, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8053)
!8053 = !{!8054}
!8054 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8052, file: !1793, line: 1722, type: !2569)
!8055 = !DILocation(line: 0, scope: !8052)
!8056 = !DILocation(line: 1724, column: 23, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8052, file: !1793, line: 1724, column: 7)
!8058 = !DILocation(line: 1724, column: 7, scope: !8052)
!8059 = !DILocation(line: 1726, column: 81, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8057, file: !1793, line: 1725, column: 3)
!8061 = !DILocation(line: 1726, column: 60, scope: !8060)
!8062 = !DILocation(line: 1726, column: 34, scope: !8060)
!8063 = !DILocation(line: 1726, column: 5, scope: !8060)
!8064 = !DILocation(line: 1726, column: 43, scope: !8060)
!8065 = !DILocation(line: 271, column: 3, scope: !8066, inlinedAt: !8068)
!8066 = distinct !DISubprogram(name: "__DSB", scope: !8067, file: !8067, line: 269, type: !3135, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !1896)
!8067 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8068 = distinct !DILocation(line: 1727, column: 5, scope: !8060)
!8069 = !{i64 6899840}
!8070 = !DILocation(line: 260, column: 3, scope: !8071, inlinedAt: !8072)
!8071 = distinct !DISubprogram(name: "__ISB", scope: !8067, file: !8067, line: 258, type: !3135, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !1896)
!8072 = distinct !DILocation(line: 1728, column: 5, scope: !8060)
!8073 = !{i64 6899557}
!8074 = !DILocation(line: 1729, column: 3, scope: !8060)
!8075 = !DILocation(line: 1730, column: 1, scope: !8052)
!8076 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8017, file: !8017, line: 50, type: !8077, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8079)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!125, !32}
!8079 = !{!8080}
!8080 = !DILocalVariable(name: "irq", arg: 1, scope: !8076, file: !8017, line: 50, type: !32)
!8081 = !DILocation(line: 0, scope: !8076)
!8082 = !DILocation(line: 52, column: 20, scope: !8076)
!8083 = !DILocation(line: 52, column: 9, scope: !8076)
!8084 = !DILocation(line: 52, column: 41, scope: !8076)
!8085 = !DILocation(line: 52, column: 39, scope: !8076)
!8086 = !DILocation(line: 52, column: 2, scope: !8076)
!8087 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8017, file: !8017, line: 64, type: !8088, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8090)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{null, !32, !32, !208}
!8090 = !{!8091, !8092, !8093}
!8091 = !DILocalVariable(name: "irq", arg: 1, scope: !8087, file: !8017, line: 64, type: !32)
!8092 = !DILocalVariable(name: "prio", arg: 2, scope: !8087, file: !8017, line: 64, type: !32)
!8093 = !DILocalVariable(name: "flags", arg: 3, scope: !8087, file: !8017, line: 64, type: !208)
!8094 = !DILocation(line: 0, scope: !8087)
!8095 = !DILocation(line: 83, column: 8, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !8017, line: 82, column: 9)
!8097 = distinct !DILexicalBlock(scope: !8087, file: !8017, line: 76, column: 6)
!8098 = !DILocation(line: 95, column: 2, scope: !8087)
!8099 = !DILocation(line: 96, column: 1, scope: !8087)
!8100 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1793, file: !1793, line: 1814, type: !8101, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !2569, !208}
!8103 = !{!8104, !8105}
!8104 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8100, file: !1793, line: 1814, type: !2569)
!8105 = !DILocalVariable(name: "priority", arg: 2, scope: !8100, file: !1793, line: 1814, type: !208)
!8106 = !DILocation(line: 0, scope: !8100)
!8107 = !DILocation(line: 0, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8100, file: !1793, line: 1816, column: 7)
!8109 = !DILocation(line: 1816, column: 7, scope: !8100)
!8110 = !DILocation(line: 1824, column: 1, scope: !8100)
!8111 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8017, file: !8017, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !8112)
!8112 = !{!8113}
!8113 = !DILocalVariable(name: "unused", arg: 1, scope: !8111, file: !8017, line: 155, type: !13)
!8114 = !DILocation(line: 0, scope: !8111)
!8115 = !DILocation(line: 159, column: 2, scope: !8111)
!8116 = !DILocation(line: 160, column: 1, scope: !8111)
!8117 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8118, file: !8118, line: 87, type: !3135, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !1896)
!8118 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8119 = !DILocation(line: 89, column: 2, scope: !8117)
!8120 = !DILocation(line: 90, column: 2, scope: !8117)
!8121 = !DILocation(line: 91, column: 1, scope: !8117)
!8122 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8118, file: !8118, line: 23, type: !3135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!8123 = !DISubprogram(name: "z_arm_int_exit", scope: !8124, file: !8124, line: 153, type: !3135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!8124 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8125 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8126, file: !8126, line: 256, type: !3135, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !1896)
!8126 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8127 = !DILocation(line: 258, column: 2, scope: !8125)
!8128 = !DILocation(line: 260, column: 2, scope: !8125)
!8129 = !DILocation(line: 262, column: 2, scope: !8125)
!8130 = !DILocation(line: 263, column: 2, scope: !8125)
!8131 = !DILocation(line: 267, column: 2, scope: !8125)
!8132 = !DILocation(line: 268, column: 2, scope: !8125)
!8133 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8126, file: !8126, line: 53, type: !3135, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !1896)
!8134 = !DILocation(line: 55, column: 12, scope: !8133)
!8135 = !DILocation(line: 271, column: 3, scope: !8136, inlinedAt: !8137)
!8136 = distinct !DISubprogram(name: "__DSB", scope: !8067, file: !8067, line: 269, type: !3135, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !1896)
!8137 = distinct !DILocation(line: 56, column: 2, scope: !8133)
!8138 = !{i64 6935614}
!8139 = !DILocation(line: 260, column: 3, scope: !8140, inlinedAt: !8141)
!8140 = distinct !DISubprogram(name: "__ISB", scope: !8067, file: !8067, line: 258, type: !3135, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !1896)
!8141 = distinct !DILocation(line: 57, column: 2, scope: !8133)
!8142 = !{i64 6935331}
!8143 = !DILocation(line: 58, column: 1, scope: !8133)
!8144 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8126, file: !8126, line: 96, type: !3135, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !1896)
!8145 = !DILocation(line: 103, column: 13, scope: !8144)
!8146 = !DILocation(line: 975, column: 3, scope: !8147, inlinedAt: !8152)
!8147 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8067, file: !8067, line: 971, type: !8148, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !8150)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{!208}
!8150 = !{!8151}
!8151 = !DILocalVariable(name: "result", scope: !8147, file: !8067, line: 973, type: !208)
!8152 = distinct !DILocation(line: 189, column: 16, scope: !8144)
!8153 = !{i64 6956444}
!8154 = !DILocation(line: 0, scope: !8147, inlinedAt: !8152)
!8155 = !DILocation(line: 189, column: 32, scope: !8144)
!8156 = !DILocalVariable(name: "control", arg: 1, scope: !8157, file: !8067, line: 1001, type: !208)
!8157 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8067, file: !8067, line: 1001, type: !8158, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{null, !208}
!8160 = !{!8156}
!8161 = !DILocation(line: 0, scope: !8157, inlinedAt: !8162)
!8162 = distinct !DILocation(line: 189, column: 2, scope: !8144)
!8163 = !DILocation(line: 1003, column: 3, scope: !8157, inlinedAt: !8162)
!8164 = !{i64 6957164}
!8165 = !DILocation(line: 260, column: 3, scope: !8140, inlinedAt: !8166)
!8166 = distinct !DILocation(line: 1004, column: 3, scope: !8157, inlinedAt: !8162)
!8167 = !DILocation(line: 191, column: 1, scope: !8144)
!8168 = distinct !DISubprogram(name: "arch_swap", scope: !8169, file: !8169, line: 33, type: !8077, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !8170)
!8169 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8170 = !{!8171}
!8171 = !DILocalVariable(name: "key", arg: 1, scope: !8168, file: !8169, line: 33, type: !32)
!8172 = !DILocation(line: 0, scope: !8168)
!8173 = !DILocation(line: 36, column: 2, scope: !8168)
!8174 = !DILocation(line: 36, column: 17, scope: !8168)
!8175 = !DILocation(line: 36, column: 25, scope: !8168)
!8176 = !DILocation(line: 37, column: 37, scope: !8168)
!8177 = !DILocation(line: 37, column: 17, scope: !8168)
!8178 = !DILocation(line: 37, column: 35, scope: !8168)
!8179 = !DILocation(line: 41, column: 12, scope: !8168)
!8180 = !DILocalVariable(name: "key", arg: 1, scope: !8181, file: !8182, line: 84, type: !32)
!8181 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !8183)
!8182 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8183 = !{!8180}
!8184 = !DILocation(line: 0, scope: !8181, inlinedAt: !8185)
!8185 = distinct !DILocation(line: 44, column: 2, scope: !8168)
!8186 = !DILocation(line: 95, column: 2, scope: !8181, inlinedAt: !8185)
!8187 = !{i64 2842112}
!8188 = !DILocation(line: 53, column: 9, scope: !8168)
!8189 = !DILocation(line: 53, column: 24, scope: !8168)
!8190 = !DILocation(line: 53, column: 2, scope: !8168)
!8191 = distinct !DISubprogram(name: "arch_new_thread", scope: !8192, file: !8192, line: 56, type: !8193, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !8294)
!8192 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !8195, !8289, !393, !5071, !124, !124, !124}
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 32)
!8196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !8197)
!8197 = !{!8198, !8256, !8268, !8269, !8270, !8271, !8284}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8196, file: !2040, line: 247, baseType: !8199, size: 384)
!8199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !8200)
!8200 = !{!8201, !8225, !8232, !8233, !8234, !8243, !8244, !8245}
!8201 = !DIDerivedType(tag: DW_TAG_member, scope: !8199, file: !2040, line: 60, baseType: !8202, size: 64)
!8202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8199, file: !2040, line: 60, size: 64, elements: !8203)
!8203 = !{!8204, !8219}
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8202, file: !2040, line: 61, baseType: !8205, size: 64)
!8205 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !8206)
!8206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !8207)
!8207 = !{!8208, !8214}
!8208 = !DIDerivedType(tag: DW_TAG_member, scope: !8206, file: !2050, line: 38, baseType: !8209, size: 32)
!8209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8206, file: !2050, line: 38, size: 32, elements: !8210)
!8210 = !{!8211, !8213}
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8209, file: !2050, line: 39, baseType: !8212, size: 32)
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8206, size: 32)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8209, file: !2050, line: 40, baseType: !8212, size: 32)
!8214 = !DIDerivedType(tag: DW_TAG_member, scope: !8206, file: !2050, line: 42, baseType: !8215, size: 32, offset: 32)
!8215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8206, file: !2050, line: 42, size: 32, elements: !8216)
!8216 = !{!8217, !8218}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8215, file: !2050, line: 43, baseType: !8212, size: 32)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8215, file: !2050, line: 44, baseType: !8212, size: 32)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8202, file: !2040, line: 62, baseType: !8220, size: 64)
!8220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !8221)
!8221 = !{!8222}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8220, file: !2066, line: 50, baseType: !8223, size: 64)
!8223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8224, size: 64, elements: !1160)
!8224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8220, size: 32)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8199, file: !2040, line: 68, baseType: !8226, size: 32, offset: 64)
!8226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8227, size: 32)
!8227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !8228)
!8228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !8229)
!8229 = !{!8230}
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8228, file: !2029, line: 232, baseType: !8231, size: 64)
!8231 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !8206)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8199, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8199, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!8234 = !DIDerivedType(tag: DW_TAG_member, scope: !8199, file: !2040, line: 90, baseType: !8235, size: 16, offset: 112)
!8235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8199, file: !2040, line: 90, size: 16, elements: !8236)
!8236 = !{!8237, !8242}
!8237 = !DIDerivedType(tag: DW_TAG_member, scope: !8235, file: !2040, line: 91, baseType: !8238, size: 16)
!8238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8235, file: !2040, line: 91, size: 16, elements: !8239)
!8239 = !{!8240, !8241}
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8238, file: !2040, line: 96, baseType: !2087, size: 8)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8238, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8235, file: !2040, line: 100, baseType: !227, size: 16)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8199, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8199, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8199, file: !2040, line: 131, baseType: !8246, size: 192, offset: 192)
!8246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !8247)
!8247 = !{!8248, !8249, !8255}
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8246, file: !2029, line: 245, baseType: !8205, size: 64)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8246, file: !2029, line: 246, baseType: !8250, size: 32, offset: 64)
!8250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !8251)
!8251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8252, size: 32)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{null, !8254}
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 32)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8246, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8196, file: !2040, line: 250, baseType: !8257, size: 288, offset: 384)
!8257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !8258)
!8258 = !{!8259, !8260, !8261, !8262, !8263, !8264, !8265, !8266, !8267}
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8257, file: !2106, line: 26, baseType: !208, size: 32)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8257, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8257, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8257, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8257, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8257, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8257, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8257, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8257, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8196, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8196, file: !2040, line: 256, baseType: !8227, size: 64, offset: 704)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8196, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8196, file: !2040, line: 325, baseType: !8272, size: 32, offset: 800)
!8272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8273, size: 32)
!8273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !8274)
!8274 = !{!8275, !8281, !8282}
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8273, file: !2123, line: 5074, baseType: !8276, size: 96)
!8276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !8277)
!8277 = !{!8278, !8279, !8280}
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8276, file: !2127, line: 57, baseType: !2130, size: 32)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8276, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8276, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8273, file: !2123, line: 5075, baseType: !8227, size: 64, offset: 96)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8273, file: !2123, line: 5076, baseType: !8283, offset: 160)
!8283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8196, file: !2040, line: 343, baseType: !8285, size: 64, offset: 832)
!8285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !8286)
!8286 = !{!8287, !8288}
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8285, file: !2106, line: 63, baseType: !208, size: 32)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8285, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!8289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8290, size: 32)
!8290 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5072, line: 44, baseType: !8291)
!8291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2157, line: 47, size: 8, elements: !8292)
!8292 = !{!8293}
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8291, file: !2157, line: 48, baseType: !142, size: 8)
!8294 = !{!8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302}
!8295 = !DILocalVariable(name: "thread", arg: 1, scope: !8191, file: !8192, line: 56, type: !8195)
!8296 = !DILocalVariable(name: "stack", arg: 2, scope: !8191, file: !8192, line: 56, type: !8289)
!8297 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8191, file: !8192, line: 57, type: !393)
!8298 = !DILocalVariable(name: "entry", arg: 4, scope: !8191, file: !8192, line: 57, type: !5071)
!8299 = !DILocalVariable(name: "p1", arg: 5, scope: !8191, file: !8192, line: 58, type: !124)
!8300 = !DILocalVariable(name: "p2", arg: 6, scope: !8191, file: !8192, line: 58, type: !124)
!8301 = !DILocalVariable(name: "p3", arg: 7, scope: !8191, file: !8192, line: 58, type: !124)
!8302 = !DILocalVariable(name: "iframe", scope: !8191, file: !8192, line: 60, type: !2673)
!8303 = !DILocation(line: 0, scope: !8191)
!8304 = !DILocation(line: 85, column: 11, scope: !8191)
!8305 = !DILocation(line: 93, column: 10, scope: !8191)
!8306 = !DILocation(line: 98, column: 13, scope: !8191)
!8307 = !DILocation(line: 100, column: 15, scope: !8191)
!8308 = !DILocation(line: 100, column: 10, scope: !8191)
!8309 = !DILocation(line: 100, column: 13, scope: !8191)
!8310 = !DILocation(line: 101, column: 15, scope: !8191)
!8311 = !DILocation(line: 101, column: 10, scope: !8191)
!8312 = !DILocation(line: 101, column: 13, scope: !8191)
!8313 = !DILocation(line: 102, column: 15, scope: !8191)
!8314 = !DILocation(line: 102, column: 10, scope: !8191)
!8315 = !DILocation(line: 102, column: 13, scope: !8191)
!8316 = !DILocation(line: 103, column: 15, scope: !8191)
!8317 = !DILocation(line: 103, column: 10, scope: !8191)
!8318 = !DILocation(line: 103, column: 13, scope: !8191)
!8319 = !DILocation(line: 106, column: 10, scope: !8191)
!8320 = !DILocation(line: 106, column: 15, scope: !8191)
!8321 = !DILocation(line: 122, column: 29, scope: !8191)
!8322 = !DILocation(line: 122, column: 23, scope: !8191)
!8323 = !DILocation(line: 122, column: 27, scope: !8191)
!8324 = !DILocation(line: 123, column: 15, scope: !8191)
!8325 = !DILocation(line: 123, column: 23, scope: !8191)
!8326 = !DILocation(line: 143, column: 1, scope: !8191)
!8327 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8192, file: !8192, line: 530, type: !8328, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !8330)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{null, !8195, !393, !5071}
!8330 = !{!8331, !8332, !8333}
!8331 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8327, file: !8192, line: 530, type: !8195)
!8332 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8327, file: !8192, line: 530, type: !393)
!8333 = !DILocalVariable(name: "_main", arg: 3, scope: !8327, file: !8192, line: 531, type: !5071)
!8334 = !DILocation(line: 0, scope: !8327)
!8335 = !DILocation(line: 535, column: 11, scope: !8327)
!8336 = !DILocation(line: 576, column: 2, scope: !8327)
!8337 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8338 = !DILocation(line: 603, column: 2, scope: !8327)
!8339 = distinct !DISubprogram(name: "z_arm_fault", scope: !8340, file: !8340, line: 1036, type: !8341, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8356)
!8340 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8341 = !DISubroutineType(types: !8342)
!8342 = !{null, !208, !208, !208, !8343}
!8343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8344, size: 32)
!8344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !2106, line: 37, baseType: !8345)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !8346)
!8346 = !{!8347, !8348, !8349, !8350, !8351, !8352, !8353, !8354, !8355}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8345, file: !2106, line: 26, baseType: !208, size: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8345, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8345, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8345, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8345, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8345, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8345, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8345, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8345, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!8356 = !{!8357, !8358, !8359, !8360, !8361, !8362, !8363, !8364, !8365, !8366}
!8357 = !DILocalVariable(name: "msp", arg: 1, scope: !8339, file: !8340, line: 1036, type: !208)
!8358 = !DILocalVariable(name: "psp", arg: 2, scope: !8339, file: !8340, line: 1036, type: !208)
!8359 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8339, file: !8340, line: 1036, type: !208)
!8360 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8339, file: !8340, line: 1037, type: !8343)
!8361 = !DILocalVariable(name: "reason", scope: !8339, file: !8340, line: 1039, type: !208)
!8362 = !DILocalVariable(name: "fault", scope: !8339, file: !8340, line: 1040, type: !125)
!8363 = !DILocalVariable(name: "recoverable", scope: !8339, file: !8340, line: 1041, type: !153)
!8364 = !DILocalVariable(name: "nested_exc", scope: !8339, file: !8340, line: 1041, type: !153)
!8365 = !DILocalVariable(name: "esf", scope: !8339, file: !8340, line: 1042, type: !2741)
!8366 = !DILocalVariable(name: "esf_copy", scope: !8339, file: !8340, line: 1047, type: !2742)
!8367 = !DILocation(line: 0, scope: !8339)
!8368 = !DILocation(line: 1040, column: 19, scope: !8339)
!8369 = !DILocation(line: 1040, column: 24, scope: !8339)
!8370 = !DILocation(line: 1041, column: 2, scope: !8339)
!8371 = !DILocation(line: 1047, column: 2, scope: !8339)
!8372 = !DILocation(line: 1047, column: 15, scope: !8339)
!8373 = !DILocalVariable(name: "key", arg: 1, scope: !8374, file: !8182, line: 84, type: !32)
!8374 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8375)
!8375 = !{!8373}
!8376 = !DILocation(line: 0, scope: !8374, inlinedAt: !8377)
!8377 = distinct !DILocation(line: 1050, column: 2, scope: !8339)
!8378 = !DILocation(line: 95, column: 2, scope: !8374, inlinedAt: !8377)
!8379 = !{i64 2875356}
!8380 = !DILocation(line: 1055, column: 9, scope: !8339)
!8381 = !DILocation(line: 1063, column: 11, scope: !8339)
!8382 = !DILocation(line: 1064, column: 6, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8339, file: !8340, line: 1064, column: 6)
!8384 = !{i8 0, i8 2}
!8385 = !DILocation(line: 1064, column: 6, scope: !8339)
!8386 = !DILocation(line: 1070, column: 20, scope: !8339)
!8387 = !DILocation(line: 1070, column: 2, scope: !8339)
!8388 = !DILocation(line: 1089, column: 6, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8339, file: !8340, line: 1089, column: 6)
!8390 = !DILocation(line: 0, scope: !8389)
!8391 = !DILocation(line: 1089, column: 6, scope: !8339)
!8392 = !DILocation(line: 1090, column: 28, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !8340, line: 1090, column: 7)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !8340, line: 1089, column: 18)
!8395 = !DILocation(line: 1090, column: 44, scope: !8393)
!8396 = !DILocation(line: 1090, column: 7, scope: !8394)
!8397 = !DILocation(line: 1091, column: 24, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8393, file: !8340, line: 1090, column: 50)
!8399 = !DILocation(line: 1092, column: 3, scope: !8398)
!8400 = !DILocation(line: 1094, column: 23, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8389, file: !8340, line: 1093, column: 9)
!8402 = !DILocation(line: 1097, column: 2, scope: !8339)
!8403 = !DILocation(line: 1098, column: 1, scope: !8339)
!8404 = distinct !DISubprogram(name: "get_esf", scope: !8340, file: !8340, line: 894, type: !8405, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8408)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!2741, !208, !208, !208, !8407}
!8407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8408 = !{!8409, !8410, !8411, !8412, !8413, !8414}
!8409 = !DILocalVariable(name: "msp", arg: 1, scope: !8404, file: !8340, line: 894, type: !208)
!8410 = !DILocalVariable(name: "psp", arg: 2, scope: !8404, file: !8340, line: 894, type: !208)
!8411 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8404, file: !8340, line: 894, type: !208)
!8412 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8404, file: !8340, line: 895, type: !8407)
!8413 = !DILocalVariable(name: "alternative_state_exc", scope: !8404, file: !8340, line: 897, type: !153)
!8414 = !DILocalVariable(name: "ptr_esf", scope: !8404, file: !8340, line: 898, type: !2741)
!8415 = !DILocation(line: 0, scope: !8404)
!8416 = !DILocation(line: 900, column: 14, scope: !8404)
!8417 = !DILocation(line: 902, column: 49, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8404, file: !8340, line: 902, column: 6)
!8419 = !DILocation(line: 902, column: 6, scope: !8404)
!8420 = !DILocation(line: 983, column: 44, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8404, file: !8340, line: 983, column: 6)
!8422 = !DILocation(line: 985, column: 3, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !8340, line: 985, column: 3)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !8340, line: 985, column: 3)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !8340, line: 985, column: 3)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !8340, line: 985, column: 3)
!8427 = distinct !DILexicalBlock(scope: !8421, file: !8340, line: 984, column: 47)
!8428 = !DILocation(line: 986, column: 3, scope: !8427)
!8429 = !DILocation(line: 983, column: 18, scope: !8421)
!8430 = !DILocation(line: 991, column: 7, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !8340, line: 990, column: 30)
!8432 = distinct !DILexicalBlock(scope: !8404, file: !8340, line: 990, column: 6)
!8433 = !DILocation(line: 998, column: 16, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !8340, line: 995, column: 10)
!8435 = distinct !DILexicalBlock(scope: !8431, file: !8340, line: 991, column: 7)
!8436 = !DILocation(line: 1002, column: 2, scope: !8404)
!8437 = !DILocation(line: 1003, column: 1, scope: !8404)
!8438 = distinct !DISubprogram(name: "fault_handle", scope: !8340, file: !8340, line: 786, type: !8439, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8441)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{!208, !2741, !125, !8407}
!8441 = !{!8442, !8443, !8444, !8445}
!8442 = !DILocalVariable(name: "esf", arg: 1, scope: !8438, file: !8340, line: 786, type: !2741)
!8443 = !DILocalVariable(name: "fault", arg: 2, scope: !8438, file: !8340, line: 786, type: !125)
!8444 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8438, file: !8340, line: 786, type: !8407)
!8445 = !DILocalVariable(name: "reason", scope: !8438, file: !8340, line: 788, type: !208)
!8446 = !DILocation(line: 0, scope: !8438)
!8447 = !DILocation(line: 790, column: 15, scope: !8438)
!8448 = !DILocation(line: 792, column: 2, scope: !8438)
!8449 = !DILocation(line: 794, column: 12, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8438, file: !8340, line: 792, column: 17)
!8451 = !DILocation(line: 795, column: 3, scope: !8450)
!8452 = !DILocation(line: 800, column: 12, scope: !8450)
!8453 = !DILocation(line: 801, column: 3, scope: !8450)
!8454 = !DILocation(line: 803, column: 12, scope: !8450)
!8455 = !DILocation(line: 804, column: 3, scope: !8450)
!8456 = !DILocation(line: 806, column: 12, scope: !8450)
!8457 = !DILocation(line: 807, column: 3, scope: !8450)
!8458 = !DILocation(line: 814, column: 3, scope: !8450)
!8459 = !DILocation(line: 815, column: 3, scope: !8450)
!8460 = !DILocation(line: 820, column: 3, scope: !8450)
!8461 = !DILocation(line: 821, column: 3, scope: !8450)
!8462 = !DILocation(line: 829, column: 2, scope: !8438)
!8463 = distinct !DISubprogram(name: "hard_fault", scope: !8340, file: !8340, line: 709, type: !8464, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8466)
!8464 = !DISubroutineType(types: !8465)
!8465 = !{!208, !2741, !8407}
!8466 = !{!8467, !8468, !8469}
!8467 = !DILocalVariable(name: "esf", arg: 1, scope: !8463, file: !8340, line: 709, type: !2741)
!8468 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8463, file: !8340, line: 709, type: !8407)
!8469 = !DILocalVariable(name: "reason", scope: !8463, file: !8340, line: 711, type: !208)
!8470 = !DILocation(line: 0, scope: !8463)
!8471 = !DILocation(line: 713, column: 2, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !8340, line: 713, column: 2)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8340, line: 713, column: 2)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8340, line: 713, column: 2)
!8475 = distinct !DILexicalBlock(scope: !8463, file: !8340, line: 713, column: 2)
!8476 = !DILocation(line: 732, column: 15, scope: !8463)
!8477 = !DILocation(line: 734, column: 12, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8463, file: !8340, line: 734, column: 6)
!8479 = !DILocation(line: 734, column: 17, scope: !8478)
!8480 = !DILocation(line: 734, column: 41, scope: !8478)
!8481 = !DILocation(line: 734, column: 6, scope: !8463)
!8482 = !DILocation(line: 735, column: 3, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !8340, line: 735, column: 3)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !8340, line: 735, column: 3)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !8340, line: 735, column: 3)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !8340, line: 735, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8478, file: !8340, line: 734, column: 47)
!8488 = !DILocation(line: 736, column: 2, scope: !8487)
!8489 = !DILocation(line: 736, column: 19, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8478, file: !8340, line: 736, column: 13)
!8491 = !DILocation(line: 736, column: 49, scope: !8490)
!8492 = !DILocation(line: 736, column: 13, scope: !8478)
!8493 = !DILocation(line: 737, column: 3, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8340, line: 737, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !8340, line: 737, column: 3)
!8496 = distinct !DILexicalBlock(scope: !8497, file: !8340, line: 737, column: 3)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !8340, line: 737, column: 3)
!8498 = distinct !DILexicalBlock(scope: !8490, file: !8340, line: 736, column: 55)
!8499 = !DILocation(line: 738, column: 2, scope: !8498)
!8500 = !DILocation(line: 738, column: 19, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8490, file: !8340, line: 738, column: 13)
!8502 = !DILocation(line: 738, column: 24, scope: !8501)
!8503 = !DILocation(line: 738, column: 47, scope: !8501)
!8504 = !DILocation(line: 738, column: 13, scope: !8490)
!8505 = !DILocation(line: 739, column: 3, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !8340, line: 739, column: 3)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !8340, line: 739, column: 3)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !8340, line: 739, column: 3)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !8340, line: 739, column: 3)
!8510 = distinct !DILexicalBlock(scope: !8501, file: !8340, line: 738, column: 53)
!8511 = !DILocation(line: 740, column: 7, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8510, file: !8340, line: 740, column: 7)
!8513 = !DILocation(line: 740, column: 7, scope: !8510)
!8514 = !DILocation(line: 741, column: 4, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !8340, line: 741, column: 4)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !8340, line: 741, column: 4)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !8340, line: 741, column: 4)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !8340, line: 741, column: 4)
!8519 = distinct !DILexicalBlock(scope: !8512, file: !8340, line: 740, column: 38)
!8520 = !DILocation(line: 742, column: 24, scope: !8519)
!8521 = !DILocation(line: 743, column: 3, scope: !8519)
!8522 = !DILocation(line: 743, column: 20, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8512, file: !8340, line: 743, column: 14)
!8524 = !DILocation(line: 743, column: 25, scope: !8523)
!8525 = !DILocation(line: 743, column: 52, scope: !8523)
!8526 = !DILocation(line: 743, column: 14, scope: !8512)
!8527 = !DILocation(line: 744, column: 13, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8523, file: !8340, line: 743, column: 58)
!8529 = !DILocation(line: 745, column: 3, scope: !8528)
!8530 = !DILocation(line: 745, column: 20, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8523, file: !8340, line: 745, column: 14)
!8532 = !DILocation(line: 745, column: 25, scope: !8531)
!8533 = !DILocation(line: 745, column: 52, scope: !8531)
!8534 = !DILocation(line: 745, column: 14, scope: !8523)
!8535 = !DILocation(line: 746, column: 13, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8531, file: !8340, line: 745, column: 58)
!8537 = !DILocation(line: 747, column: 3, scope: !8536)
!8538 = !DILocation(line: 747, column: 20, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8531, file: !8340, line: 747, column: 14)
!8540 = !DILocation(line: 747, column: 52, scope: !8539)
!8541 = !DILocation(line: 747, column: 14, scope: !8531)
!8542 = !DILocation(line: 748, column: 13, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8539, file: !8340, line: 747, column: 58)
!8544 = !DILocation(line: 753, column: 3, scope: !8543)
!8545 = !DILocation(line: 766, column: 2, scope: !8463)
!8546 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8340, file: !8340, line: 229, type: !8439, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8547)
!8547 = !{!8548, !8549, !8550, !8551, !8552, !8553}
!8548 = !DILocalVariable(name: "esf", arg: 1, scope: !8546, file: !8340, line: 229, type: !2741)
!8549 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8546, file: !8340, line: 229, type: !125)
!8550 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8546, file: !8340, line: 230, type: !8407)
!8551 = !DILocalVariable(name: "reason", scope: !8546, file: !8340, line: 232, type: !208)
!8552 = !DILocalVariable(name: "mmfar", scope: !8546, file: !8340, line: 233, type: !208)
!8553 = !DILocalVariable(name: "temp", scope: !8554, file: !8340, line: 254, type: !208)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8340, line: 244, column: 48)
!8555 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 244, column: 6)
!8556 = !DILocation(line: 0, scope: !8546)
!8557 = !DILocation(line: 235, column: 2, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !8340, line: 235, column: 2)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !8340, line: 235, column: 2)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !8340, line: 235, column: 2)
!8561 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 235, column: 2)
!8562 = !DILocation(line: 237, column: 12, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 237, column: 6)
!8564 = !DILocation(line: 237, column: 17, scope: !8563)
!8565 = !DILocation(line: 237, column: 41, scope: !8563)
!8566 = !DILocation(line: 237, column: 6, scope: !8546)
!8567 = !DILocation(line: 238, column: 3, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !8340, line: 238, column: 3)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !8340, line: 238, column: 3)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !8340, line: 238, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8340, line: 238, column: 3)
!8572 = distinct !DILexicalBlock(scope: !8563, file: !8340, line: 237, column: 47)
!8573 = !DILocation(line: 240, column: 2, scope: !8572)
!8574 = !DILocation(line: 241, column: 12, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 241, column: 6)
!8576 = !DILocation(line: 241, column: 17, scope: !8575)
!8577 = !DILocation(line: 241, column: 43, scope: !8575)
!8578 = !DILocation(line: 241, column: 6, scope: !8546)
!8579 = !DILocation(line: 242, column: 3, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !8340, line: 242, column: 3)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8340, line: 242, column: 3)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !8340, line: 242, column: 3)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8340, line: 242, column: 3)
!8584 = distinct !DILexicalBlock(scope: !8575, file: !8340, line: 241, column: 49)
!8585 = !DILocation(line: 243, column: 2, scope: !8584)
!8586 = !DILocation(line: 244, column: 12, scope: !8555)
!8587 = !DILocation(line: 244, column: 17, scope: !8555)
!8588 = !DILocation(line: 244, column: 42, scope: !8555)
!8589 = !DILocation(line: 244, column: 6, scope: !8546)
!8590 = !DILocation(line: 245, column: 3, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !8340, line: 245, column: 3)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8340, line: 245, column: 3)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8340, line: 245, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8554, file: !8340, line: 245, column: 3)
!8595 = !DILocation(line: 254, column: 24, scope: !8554)
!8596 = !DILocation(line: 0, scope: !8554)
!8597 = !DILocation(line: 256, column: 13, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8554, file: !8340, line: 256, column: 7)
!8599 = !DILocation(line: 256, column: 18, scope: !8598)
!8600 = !DILocation(line: 256, column: 44, scope: !8598)
!8601 = !DILocation(line: 256, column: 7, scope: !8554)
!8602 = !DILocation(line: 258, column: 4, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !8340, line: 258, column: 4)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !8340, line: 258, column: 4)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8340, line: 258, column: 4)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8340, line: 258, column: 4)
!8607 = distinct !DILexicalBlock(scope: !8598, file: !8340, line: 256, column: 50)
!8608 = !DILocation(line: 259, column: 24, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8607, file: !8340, line: 259, column: 8)
!8610 = !DILocation(line: 259, column: 8, scope: !8607)
!8611 = !DILocation(line: 261, column: 15, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8609, file: !8340, line: 259, column: 30)
!8613 = !DILocation(line: 262, column: 4, scope: !8612)
!8614 = !DILocation(line: 265, column: 12, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 265, column: 6)
!8616 = !DILocation(line: 265, column: 17, scope: !8615)
!8617 = !DILocation(line: 265, column: 42, scope: !8615)
!8618 = !DILocation(line: 265, column: 6, scope: !8546)
!8619 = !DILocation(line: 266, column: 3, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !8340, line: 266, column: 3)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !8340, line: 266, column: 3)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8340, line: 266, column: 3)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !8340, line: 266, column: 3)
!8624 = distinct !DILexicalBlock(scope: !8615, file: !8340, line: 265, column: 48)
!8625 = !DILocation(line: 267, column: 2, scope: !8624)
!8626 = !DILocation(line: 269, column: 12, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 269, column: 6)
!8628 = !DILocation(line: 269, column: 17, scope: !8627)
!8629 = !DILocation(line: 269, column: 41, scope: !8627)
!8630 = !DILocation(line: 269, column: 6, scope: !8546)
!8631 = !DILocation(line: 270, column: 3, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !8340, line: 270, column: 3)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !8340, line: 270, column: 3)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !8340, line: 270, column: 3)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !8340, line: 270, column: 3)
!8636 = distinct !DILexicalBlock(scope: !8627, file: !8340, line: 269, column: 47)
!8637 = !DILocation(line: 272, column: 2, scope: !8636)
!8638 = !DILocation(line: 288, column: 12, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 288, column: 6)
!8640 = !DILocation(line: 288, column: 17, scope: !8639)
!8641 = !DILocation(line: 288, column: 41, scope: !8639)
!8642 = !DILocation(line: 289, column: 9, scope: !8639)
!8643 = !DILocation(line: 288, column: 6, scope: !8546)
!8644 = !DILocation(line: 360, column: 12, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8546, file: !8340, line: 360, column: 6)
!8646 = !DILocation(line: 360, column: 17, scope: !8645)
!8647 = !DILocation(line: 360, column: 41, scope: !8645)
!8648 = !DILocation(line: 360, column: 6, scope: !8546)
!8649 = !DILocation(line: 361, column: 14, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8645, file: !8340, line: 360, column: 47)
!8651 = !DILocation(line: 362, column: 2, scope: !8650)
!8652 = !DILocation(line: 366, column: 12, scope: !8546)
!8653 = !DILocation(line: 369, column: 15, scope: !8546)
!8654 = !DILocation(line: 371, column: 2, scope: !8546)
!8655 = distinct !DISubprogram(name: "bus_fault", scope: !8340, file: !8340, line: 383, type: !8656, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8658)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!125, !2741, !125, !8407}
!8658 = !{!8659, !8660, !8661, !8662, !8663}
!8659 = !DILocalVariable(name: "esf", arg: 1, scope: !8655, file: !8340, line: 383, type: !2741)
!8660 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8655, file: !8340, line: 383, type: !125)
!8661 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8655, file: !8340, line: 383, type: !8407)
!8662 = !DILocalVariable(name: "reason", scope: !8655, file: !8340, line: 385, type: !208)
!8663 = !DILocalVariable(name: "bfar", scope: !8664, file: !8340, line: 405, type: !208)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !8340, line: 395, column: 42)
!8665 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 395, column: 6)
!8666 = !DILocation(line: 0, scope: !8655)
!8667 = !DILocation(line: 387, column: 2, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !8340, line: 387, column: 2)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !8340, line: 387, column: 2)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !8340, line: 387, column: 2)
!8671 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 387, column: 2)
!8672 = !DILocation(line: 389, column: 11, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 389, column: 6)
!8674 = !DILocation(line: 389, column: 16, scope: !8673)
!8675 = !DILocation(line: 389, column: 6, scope: !8655)
!8676 = !DILocation(line: 390, column: 3, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !8340, line: 390, column: 3)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !8340, line: 390, column: 3)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !8340, line: 390, column: 3)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !8340, line: 390, column: 3)
!8681 = distinct !DILexicalBlock(scope: !8673, file: !8340, line: 389, column: 39)
!8682 = !DILocation(line: 391, column: 2, scope: !8681)
!8683 = !DILocation(line: 392, column: 11, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 392, column: 6)
!8685 = !DILocation(line: 392, column: 16, scope: !8684)
!8686 = !DILocation(line: 392, column: 6, scope: !8655)
!8687 = !DILocation(line: 393, column: 3, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !8340, line: 393, column: 3)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !8340, line: 393, column: 3)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !8340, line: 393, column: 3)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !8340, line: 393, column: 3)
!8692 = distinct !DILexicalBlock(scope: !8684, file: !8340, line: 392, column: 41)
!8693 = !DILocation(line: 394, column: 2, scope: !8692)
!8694 = !DILocation(line: 395, column: 11, scope: !8665)
!8695 = !DILocation(line: 395, column: 16, scope: !8665)
!8696 = !DILocation(line: 395, column: 6, scope: !8655)
!8697 = !DILocation(line: 396, column: 3, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !8340, line: 396, column: 3)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8340, line: 396, column: 3)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !8340, line: 396, column: 3)
!8701 = distinct !DILexicalBlock(scope: !8664, file: !8340, line: 396, column: 3)
!8702 = !DILocation(line: 405, column: 3, scope: !8664)
!8703 = !DILocation(line: 0, scope: !8664)
!8704 = !DILocation(line: 407, column: 13, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8664, file: !8340, line: 407, column: 7)
!8706 = !DILocation(line: 407, column: 18, scope: !8705)
!8707 = !DILocation(line: 407, column: 44, scope: !8705)
!8708 = !DILocation(line: 407, column: 7, scope: !8664)
!8709 = !DILocation(line: 408, column: 4, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !8340, line: 408, column: 4)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8340, line: 408, column: 4)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8340, line: 408, column: 4)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !8340, line: 408, column: 4)
!8714 = distinct !DILexicalBlock(scope: !8705, file: !8340, line: 407, column: 50)
!8715 = !DILocation(line: 409, column: 24, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8714, file: !8340, line: 409, column: 8)
!8717 = !DILocation(line: 409, column: 8, scope: !8714)
!8718 = !DILocation(line: 411, column: 15, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8716, file: !8340, line: 409, column: 30)
!8720 = !DILocation(line: 412, column: 4, scope: !8719)
!8721 = !DILocation(line: 415, column: 11, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 415, column: 6)
!8723 = !DILocation(line: 415, column: 16, scope: !8722)
!8724 = !DILocation(line: 415, column: 6, scope: !8655)
!8725 = !DILocation(line: 416, column: 3, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !8340, line: 416, column: 3)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !8340, line: 416, column: 3)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !8340, line: 416, column: 3)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !8340, line: 416, column: 3)
!8730 = distinct !DILexicalBlock(scope: !8722, file: !8340, line: 415, column: 44)
!8731 = !DILocation(line: 417, column: 2, scope: !8730)
!8732 = !DILocation(line: 418, column: 12, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8655, file: !8340, line: 418, column: 6)
!8734 = !DILocation(line: 418, column: 17, scope: !8733)
!8735 = !DILocation(line: 418, column: 41, scope: !8733)
!8736 = !DILocation(line: 418, column: 6, scope: !8655)
!8737 = !DILocation(line: 423, column: 18, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8733, file: !8340, line: 423, column: 13)
!8739 = !DILocation(line: 423, column: 23, scope: !8738)
!8740 = !DILocation(line: 423, column: 13, scope: !8733)
!8741 = !DILocation(line: 0, scope: !8733)
!8742 = !DILocation(line: 524, column: 12, scope: !8655)
!8743 = !DILocation(line: 526, column: 15, scope: !8655)
!8744 = !DILocation(line: 528, column: 2, scope: !8655)
!8745 = distinct !DISubprogram(name: "usage_fault", scope: !8340, file: !8340, line: 539, type: !8746, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8750)
!8746 = !DISubroutineType(types: !8747)
!8747 = !{!208, !8748}
!8748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8749, size: 32)
!8749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2742)
!8750 = !{!8751, !8752}
!8751 = !DILocalVariable(name: "esf", arg: 1, scope: !8745, file: !8340, line: 539, type: !8748)
!8752 = !DILocalVariable(name: "reason", scope: !8745, file: !8340, line: 541, type: !208)
!8753 = !DILocation(line: 0, scope: !8745)
!8754 = !DILocation(line: 543, column: 2, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !8340, line: 543, column: 2)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !8340, line: 543, column: 2)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8340, line: 543, column: 2)
!8758 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 543, column: 2)
!8759 = !DILocation(line: 546, column: 12, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 546, column: 6)
!8761 = !DILocation(line: 546, column: 17, scope: !8760)
!8762 = !DILocation(line: 546, column: 43, scope: !8760)
!8763 = !DILocation(line: 546, column: 6, scope: !8745)
!8764 = !DILocation(line: 547, column: 3, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !8340, line: 547, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !8340, line: 547, column: 3)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8340, line: 547, column: 3)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !8340, line: 547, column: 3)
!8769 = distinct !DILexicalBlock(scope: !8760, file: !8340, line: 546, column: 49)
!8770 = !DILocation(line: 548, column: 2, scope: !8769)
!8771 = !DILocation(line: 549, column: 12, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 549, column: 6)
!8773 = !DILocation(line: 549, column: 17, scope: !8772)
!8774 = !DILocation(line: 549, column: 43, scope: !8772)
!8775 = !DILocation(line: 549, column: 6, scope: !8745)
!8776 = !DILocation(line: 550, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !8340, line: 550, column: 3)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !8340, line: 550, column: 3)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !8340, line: 550, column: 3)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !8340, line: 550, column: 3)
!8781 = distinct !DILexicalBlock(scope: !8772, file: !8340, line: 549, column: 49)
!8782 = !DILocation(line: 551, column: 2, scope: !8781)
!8783 = !DILocation(line: 567, column: 12, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 567, column: 6)
!8785 = !DILocation(line: 567, column: 17, scope: !8784)
!8786 = !DILocation(line: 567, column: 38, scope: !8784)
!8787 = !DILocation(line: 567, column: 6, scope: !8745)
!8788 = !DILocation(line: 568, column: 3, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !8340, line: 568, column: 3)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8340, line: 568, column: 3)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !8340, line: 568, column: 3)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !8340, line: 568, column: 3)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !8340, line: 567, column: 44)
!8794 = !DILocation(line: 569, column: 2, scope: !8793)
!8795 = !DILocation(line: 570, column: 12, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 570, column: 6)
!8797 = !DILocation(line: 570, column: 17, scope: !8796)
!8798 = !DILocation(line: 570, column: 39, scope: !8796)
!8799 = !DILocation(line: 570, column: 6, scope: !8745)
!8800 = !DILocation(line: 571, column: 3, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !8340, line: 571, column: 3)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !8340, line: 571, column: 3)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !8340, line: 571, column: 3)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !8340, line: 571, column: 3)
!8805 = distinct !DILexicalBlock(scope: !8796, file: !8340, line: 570, column: 45)
!8806 = !DILocation(line: 572, column: 2, scope: !8805)
!8807 = !DILocation(line: 573, column: 12, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 573, column: 6)
!8809 = !DILocation(line: 573, column: 17, scope: !8808)
!8810 = !DILocation(line: 573, column: 42, scope: !8808)
!8811 = !DILocation(line: 573, column: 6, scope: !8745)
!8812 = !DILocation(line: 574, column: 3, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8814, file: !8340, line: 574, column: 3)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !8340, line: 574, column: 3)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !8340, line: 574, column: 3)
!8816 = distinct !DILexicalBlock(scope: !8817, file: !8340, line: 574, column: 3)
!8817 = distinct !DILexicalBlock(scope: !8808, file: !8340, line: 573, column: 48)
!8818 = !DILocation(line: 575, column: 2, scope: !8817)
!8819 = !DILocation(line: 576, column: 12, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8745, file: !8340, line: 576, column: 6)
!8821 = !DILocation(line: 576, column: 17, scope: !8820)
!8822 = !DILocation(line: 576, column: 44, scope: !8820)
!8823 = !DILocation(line: 576, column: 6, scope: !8745)
!8824 = !DILocation(line: 577, column: 3, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !8340, line: 577, column: 3)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !8340, line: 577, column: 3)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !8340, line: 577, column: 3)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !8340, line: 577, column: 3)
!8829 = distinct !DILexicalBlock(scope: !8820, file: !8340, line: 576, column: 50)
!8830 = !DILocation(line: 578, column: 2, scope: !8829)
!8831 = !DILocation(line: 581, column: 12, scope: !8745)
!8832 = !DILocation(line: 583, column: 2, scope: !8745)
!8833 = distinct !DISubprogram(name: "debug_monitor", scope: !8340, file: !8340, line: 632, type: !8834, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8836)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{null, !2741, !8407}
!8836 = !{!8837, !8838}
!8837 = !DILocalVariable(name: "esf", arg: 1, scope: !8833, file: !8340, line: 632, type: !2741)
!8838 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8833, file: !8340, line: 632, type: !8407)
!8839 = !DILocation(line: 0, scope: !8833)
!8840 = !DILocation(line: 634, column: 15, scope: !8833)
!8841 = !DILocation(line: 636, column: 2, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8340, line: 636, column: 2)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !8340, line: 636, column: 2)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8340, line: 636, column: 2)
!8845 = distinct !DILexicalBlock(scope: !8833, file: !8340, line: 636, column: 2)
!8846 = !DILocation(line: 652, column: 1, scope: !8833)
!8847 = distinct !DISubprogram(name: "reserved_exception", scope: !8340, file: !8340, line: 776, type: !8848, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8850)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{null, !8748, !125}
!8850 = !{!8851, !8852}
!8851 = !DILocalVariable(name: "esf", arg: 1, scope: !8847, file: !8340, line: 776, type: !8748)
!8852 = !DILocalVariable(name: "fault", arg: 2, scope: !8847, file: !8340, line: 776, type: !125)
!8853 = !DILocation(line: 0, scope: !8847)
!8854 = !DILocation(line: 780, column: 2, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !8340, line: 780, column: 2)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !8340, line: 780, column: 2)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !8340, line: 780, column: 2)
!8858 = distinct !DILexicalBlock(scope: !8847, file: !8340, line: 780, column: 2)
!8859 = !DILocation(line: 783, column: 1, scope: !8847)
!8860 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8340, file: !8340, line: 658, type: !8861, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !8863)
!8861 = !DISubroutineType(types: !8862)
!8862 = !{!153, !2741}
!8863 = !{!8864, !8865, !8866}
!8864 = !DILocalVariable(name: "esf", arg: 1, scope: !8860, file: !8340, line: 658, type: !2741)
!8865 = !DILocalVariable(name: "ret_addr", scope: !8860, file: !8340, line: 660, type: !2784)
!8866 = !DILocalVariable(name: "fault_insn", scope: !8860, file: !8340, line: 686, type: !227)
!8867 = !DILocation(line: 0, scope: !8860)
!8868 = !DILocation(line: 660, column: 46, scope: !8860)
!8869 = !DILocation(line: 660, column: 23, scope: !8860)
!8870 = !DILocation(line: 682, column: 11, scope: !8860)
!8871 = !DILocation(line: 271, column: 3, scope: !8872, inlinedAt: !8873)
!8872 = distinct !DISubprogram(name: "__DSB", scope: !8067, file: !8067, line: 269, type: !3135, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !1896)
!8873 = distinct !DILocation(line: 683, column: 2, scope: !8860)
!8874 = !{i64 6962718}
!8875 = !DILocation(line: 260, column: 3, scope: !8876, inlinedAt: !8877)
!8876 = distinct !DISubprogram(name: "__ISB", scope: !8067, file: !8067, line: 258, type: !3135, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !1896)
!8877 = distinct !DILocation(line: 684, column: 2, scope: !8860)
!8878 = !{i64 6962435}
!8879 = !DILocation(line: 686, column: 35, scope: !8860)
!8880 = !DILocation(line: 686, column: 24, scope: !8860)
!8881 = !DILocation(line: 688, column: 11, scope: !8860)
!8882 = !DILocation(line: 271, column: 3, scope: !8872, inlinedAt: !8883)
!8883 = distinct !DILocation(line: 689, column: 2, scope: !8860)
!8884 = !DILocation(line: 260, column: 3, scope: !8876, inlinedAt: !8885)
!8885 = distinct !DILocation(line: 690, column: 2, scope: !8860)
!8886 = !DILocation(line: 693, column: 45, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8860, file: !8340, line: 693, column: 6)
!8888 = !DILocation(line: 699, column: 1, scope: !8860)
!8889 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8340, file: !8340, line: 1107, type: !3135, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !1896)
!8890 = !DILocation(line: 1111, column: 11, scope: !8889)
!8891 = !DILocation(line: 1136, column: 1, scope: !8889)
!8892 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8893, file: !8893, line: 26, type: !3135, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !8894)
!8893 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8894 = !{!8895}
!8895 = !DILocalVariable(name: "irq", scope: !8892, file: !8893, line: 28, type: !125)
!8896 = !DILocation(line: 0, scope: !8892)
!8897 = !DILocation(line: 30, column: 2, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8892, file: !8893, line: 30, column: 2)
!8899 = !DILocation(line: 31, column: 3, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !8893, line: 30, column: 39)
!8901 = distinct !DILexicalBlock(scope: !8898, file: !8893, line: 30, column: 2)
!8902 = !DILocation(line: 30, column: 35, scope: !8901)
!8903 = !DILocation(line: 30, column: 13, scope: !8901)
!8904 = distinct !{!8904, !8897, !8905}
!8905 = !DILocation(line: 32, column: 2, scope: !8898)
!8906 = !DILocation(line: 33, column: 1, scope: !8892)
!8907 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1793, file: !1793, line: 1814, type: !8101, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !8908)
!8908 = !{!8909, !8910}
!8909 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8907, file: !1793, line: 1814, type: !2569)
!8910 = !DILocalVariable(name: "priority", arg: 2, scope: !8907, file: !1793, line: 1814, type: !208)
!8911 = !DILocation(line: 0, scope: !8907)
!8912 = !DILocation(line: 1816, column: 7, scope: !8907)
!8913 = !DILocation(line: 0, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8907, file: !1793, line: 1816, column: 7)
!8915 = !DILocation(line: 1824, column: 1, scope: !8907)
!8916 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8917, file: !8917, line: 27, type: !8918, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !9015)
!8917 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8918 = !DISubroutineType(types: !8919)
!8919 = !{null, !8920}
!8920 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !2040, line: 347, baseType: !8921)
!8921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8922, size: 32)
!8922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !8923)
!8923 = !{!8924, !8982, !8994, !8995, !8996, !8997, !9010}
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8922, file: !2040, line: 247, baseType: !8925, size: 384)
!8925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !8926)
!8926 = !{!8927, !8951, !8958, !8959, !8960, !8969, !8970, !8971}
!8927 = !DIDerivedType(tag: DW_TAG_member, scope: !8925, file: !2040, line: 60, baseType: !8928, size: 64)
!8928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8925, file: !2040, line: 60, size: 64, elements: !8929)
!8929 = !{!8930, !8945}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8928, file: !2040, line: 61, baseType: !8931, size: 64)
!8931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !8932)
!8932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !8933)
!8933 = !{!8934, !8940}
!8934 = !DIDerivedType(tag: DW_TAG_member, scope: !8932, file: !2050, line: 38, baseType: !8935, size: 32)
!8935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8932, file: !2050, line: 38, size: 32, elements: !8936)
!8936 = !{!8937, !8939}
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8935, file: !2050, line: 39, baseType: !8938, size: 32)
!8938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8932, size: 32)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8935, file: !2050, line: 40, baseType: !8938, size: 32)
!8940 = !DIDerivedType(tag: DW_TAG_member, scope: !8932, file: !2050, line: 42, baseType: !8941, size: 32, offset: 32)
!8941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8932, file: !2050, line: 42, size: 32, elements: !8942)
!8942 = !{!8943, !8944}
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8941, file: !2050, line: 43, baseType: !8938, size: 32)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8941, file: !2050, line: 44, baseType: !8938, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8928, file: !2040, line: 62, baseType: !8946, size: 64)
!8946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !8947)
!8947 = !{!8948}
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8946, file: !2066, line: 50, baseType: !8949, size: 64)
!8949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8950, size: 64, elements: !1160)
!8950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8925, file: !2040, line: 68, baseType: !8952, size: 32, offset: 64)
!8952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8953, size: 32)
!8953 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !8954)
!8954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !8955)
!8955 = !{!8956}
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8954, file: !2029, line: 232, baseType: !8957, size: 64)
!8957 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !8932)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8925, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8925, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!8960 = !DIDerivedType(tag: DW_TAG_member, scope: !8925, file: !2040, line: 90, baseType: !8961, size: 16, offset: 112)
!8961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8925, file: !2040, line: 90, size: 16, elements: !8962)
!8962 = !{!8963, !8968}
!8963 = !DIDerivedType(tag: DW_TAG_member, scope: !8961, file: !2040, line: 91, baseType: !8964, size: 16)
!8964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8961, file: !2040, line: 91, size: 16, elements: !8965)
!8965 = !{!8966, !8967}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8964, file: !2040, line: 96, baseType: !2087, size: 8)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8964, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8961, file: !2040, line: 100, baseType: !227, size: 16)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8925, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8925, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8925, file: !2040, line: 131, baseType: !8972, size: 192, offset: 192)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !8973)
!8973 = !{!8974, !8975, !8981}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8972, file: !2029, line: 245, baseType: !8931, size: 64)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8972, file: !2029, line: 246, baseType: !8976, size: 32, offset: 64)
!8976 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !8977)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 32)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{null, !8980}
!8980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8972, size: 32)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8972, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8922, file: !2040, line: 250, baseType: !8983, size: 288, offset: 384)
!8983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !8984)
!8984 = !{!8985, !8986, !8987, !8988, !8989, !8990, !8991, !8992, !8993}
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8983, file: !2106, line: 26, baseType: !208, size: 32)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8983, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8983, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8983, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8983, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8983, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8983, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8983, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8983, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8922, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8922, file: !2040, line: 256, baseType: !8953, size: 64, offset: 704)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8922, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8922, file: !2040, line: 325, baseType: !8998, size: 32, offset: 800)
!8998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8999, size: 32)
!8999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !9000)
!9000 = !{!9001, !9007, !9008}
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8999, file: !2123, line: 5074, baseType: !9002, size: 96)
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !9003)
!9003 = !{!9004, !9005, !9006}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9002, file: !2127, line: 57, baseType: !2130, size: 32)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9002, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9002, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8999, file: !2123, line: 5075, baseType: !8953, size: 64, offset: 96)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8999, file: !2123, line: 5076, baseType: !9009, offset: 160)
!9009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8922, file: !2040, line: 343, baseType: !9011, size: 64, offset: 832)
!9011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !9012)
!9012 = !{!9013, !9014}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9011, file: !2106, line: 63, baseType: !208, size: 32)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9011, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!9015 = !{!9016}
!9016 = !DILocalVariable(name: "thread", arg: 1, scope: !8916, file: !8917, line: 27, type: !8920)
!9017 = !DILocation(line: 0, scope: !8916)
!9018 = !DILocation(line: 29, column: 6, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8916, file: !8917, line: 29, column: 6)
!9020 = !DILocation(line: 29, column: 15, scope: !9019)
!9021 = !DILocation(line: 29, column: 6, scope: !8916)
!9022 = !DILocation(line: 1031, column: 3, scope: !9023, inlinedAt: !9026)
!9023 = distinct !DISubprogram(name: "__get_IPSR", scope: !8067, file: !8067, line: 1027, type: !8148, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !9024)
!9024 = !{!9025}
!9025 = !DILocalVariable(name: "result", scope: !9023, file: !8067, line: 1029, type: !208)
!9026 = distinct !DILocation(line: 48, column: 10, scope: !9027, inlinedAt: !9031)
!9027 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9028, file: !9028, line: 46, type: !9029, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !1896)
!9028 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9029 = !DISubroutineType(types: !9030)
!9030 = !{!153}
!9031 = distinct !DILocation(line: 30, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !8917, line: 30, column: 7)
!9033 = distinct !DILexicalBlock(scope: !9019, file: !8917, line: 29, column: 26)
!9034 = !{i64 6963942}
!9035 = !DILocation(line: 0, scope: !9023, inlinedAt: !9026)
!9036 = !DILocation(line: 48, column: 9, scope: !9027, inlinedAt: !9031)
!9037 = !DILocation(line: 30, column: 7, scope: !9033)
!9038 = !DILocation(line: 42, column: 14, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9032, file: !8917, line: 30, column: 25)
!9040 = !DILocation(line: 48, column: 15, scope: !9039)
!9041 = !DILocation(line: 49, column: 3, scope: !9039)
!9042 = !DILocation(line: 52, column: 2, scope: !8916)
!9043 = !DILocation(line: 53, column: 1, scope: !8916)
!9044 = distinct !DISubprogram(name: "strcpy", scope: !9045, file: !9045, line: 20, type: !9046, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9050)
!9045 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9046 = !DISubroutineType(types: !9047)
!9047 = !{!393, !9048, !9049}
!9048 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9049 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9050 = !{!9051, !9052, !9053}
!9051 = !DILocalVariable(name: "d", arg: 1, scope: !9044, file: !9045, line: 20, type: !9048)
!9052 = !DILocalVariable(name: "s", arg: 2, scope: !9044, file: !9045, line: 20, type: !9049)
!9053 = !DILocalVariable(name: "dest", scope: !9044, file: !9045, line: 22, type: !393)
!9054 = !DILocation(line: 0, scope: !9044)
!9055 = !DILocation(line: 24, column: 9, scope: !9044)
!9056 = !DILocation(line: 24, column: 12, scope: !9044)
!9057 = !DILocation(line: 24, column: 2, scope: !9044)
!9058 = !DILocation(line: 25, column: 6, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9044, file: !9045, line: 24, column: 21)
!9060 = !DILocation(line: 26, column: 4, scope: !9059)
!9061 = !DILocation(line: 27, column: 4, scope: !9059)
!9062 = distinct !{!9062, !9057, !9063}
!9063 = !DILocation(line: 28, column: 2, scope: !9044)
!9064 = !DILocation(line: 30, column: 5, scope: !9044)
!9065 = !DILocation(line: 32, column: 2, scope: !9044)
!9066 = distinct !DISubprogram(name: "strncpy", scope: !9045, file: !9045, line: 42, type: !9067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!393, !9048, !9049, !272}
!9069 = !{!9070, !9071, !9072, !9073}
!9070 = !DILocalVariable(name: "d", arg: 1, scope: !9066, file: !9045, line: 42, type: !9048)
!9071 = !DILocalVariable(name: "s", arg: 2, scope: !9066, file: !9045, line: 42, type: !9049)
!9072 = !DILocalVariable(name: "n", arg: 3, scope: !9066, file: !9045, line: 42, type: !272)
!9073 = !DILocalVariable(name: "dest", scope: !9066, file: !9045, line: 44, type: !393)
!9074 = !DILocation(line: 0, scope: !9066)
!9075 = !DILocation(line: 46, column: 12, scope: !9066)
!9076 = !DILocation(line: 46, column: 17, scope: !9066)
!9077 = !DILocation(line: 46, column: 20, scope: !9066)
!9078 = !DILocation(line: 46, column: 23, scope: !9066)
!9079 = !DILocation(line: 46, column: 2, scope: !9066)
!9080 = !DILocation(line: 47, column: 6, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9066, file: !9045, line: 46, column: 32)
!9082 = !DILocation(line: 48, column: 4, scope: !9081)
!9083 = !DILocation(line: 49, column: 4, scope: !9081)
!9084 = !DILocation(line: 50, column: 4, scope: !9081)
!9085 = distinct !{!9085, !9079, !9086}
!9086 = !DILocation(line: 51, column: 2, scope: !9066)
!9087 = !DILocation(line: 54, column: 6, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9066, file: !9045, line: 53, column: 16)
!9089 = !DILocation(line: 55, column: 4, scope: !9088)
!9090 = !DILocation(line: 56, column: 4, scope: !9088)
!9091 = !DILocation(line: 53, column: 11, scope: !9066)
!9092 = !DILocation(line: 53, column: 2, scope: !9066)
!9093 = distinct !{!9093, !9092, !9094}
!9094 = !DILocation(line: 57, column: 2, scope: !9066)
!9095 = !DILocation(line: 59, column: 2, scope: !9066)
!9096 = distinct !DISubprogram(name: "strchr", scope: !9045, file: !9045, line: 69, type: !9097, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9099)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!393, !140, !125}
!9099 = !{!9100, !9101, !9102}
!9100 = !DILocalVariable(name: "s", arg: 1, scope: !9096, file: !9045, line: 69, type: !140)
!9101 = !DILocalVariable(name: "c", arg: 2, scope: !9096, file: !9045, line: 69, type: !125)
!9102 = !DILocalVariable(name: "tmp", scope: !9096, file: !9045, line: 71, type: !142)
!9103 = !DILocation(line: 0, scope: !9096)
!9104 = !DILocation(line: 73, column: 2, scope: !9096)
!9105 = !DILocation(line: 73, column: 10, scope: !9096)
!9106 = !DILocation(line: 73, column: 13, scope: !9096)
!9107 = !DILocation(line: 73, column: 21, scope: !9096)
!9108 = !DILocation(line: 74, column: 4, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9096, file: !9045, line: 73, column: 38)
!9110 = distinct !{!9110, !9104, !9111}
!9111 = !DILocation(line: 75, column: 2, scope: !9096)
!9112 = !DILocation(line: 77, column: 9, scope: !9096)
!9113 = !DILocation(line: 77, column: 2, scope: !9096)
!9114 = distinct !DISubprogram(name: "strrchr", scope: !9045, file: !9045, line: 87, type: !9097, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118}
!9116 = !DILocalVariable(name: "s", arg: 1, scope: !9114, file: !9045, line: 87, type: !140)
!9117 = !DILocalVariable(name: "c", arg: 2, scope: !9114, file: !9045, line: 87, type: !125)
!9118 = !DILocalVariable(name: "match", scope: !9114, file: !9045, line: 89, type: !393)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 91, column: 2, scope: !9114)
!9121 = !DILocation(line: 92, column: 7, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !9045, line: 92, column: 7)
!9123 = distinct !DILexicalBlock(scope: !9114, file: !9045, line: 91, column: 5)
!9124 = !DILocation(line: 92, column: 10, scope: !9122)
!9125 = !DILocation(line: 92, column: 7, scope: !9123)
!9126 = !DILocation(line: 95, column: 13, scope: !9114)
!9127 = !DILocation(line: 95, column: 2, scope: !9123)
!9128 = distinct !{!9128, !9120, !9129}
!9129 = !DILocation(line: 95, column: 15, scope: !9114)
!9130 = !DILocation(line: 97, column: 2, scope: !9114)
!9131 = distinct !DISubprogram(name: "strlen", scope: !9045, file: !9045, line: 107, type: !9132, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9134)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!272, !140}
!9134 = !{!9135, !9136}
!9135 = !DILocalVariable(name: "s", arg: 1, scope: !9131, file: !9045, line: 107, type: !140)
!9136 = !DILocalVariable(name: "n", scope: !9131, file: !9045, line: 109, type: !272)
!9137 = !DILocation(line: 0, scope: !9131)
!9138 = !DILocation(line: 111, column: 9, scope: !9131)
!9139 = !DILocation(line: 111, column: 12, scope: !9131)
!9140 = !DILocation(line: 111, column: 2, scope: !9131)
!9141 = !DILocation(line: 112, column: 4, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9131, file: !9045, line: 111, column: 21)
!9143 = !DILocation(line: 113, column: 4, scope: !9142)
!9144 = distinct !{!9144, !9140, !9145}
!9145 = !DILocation(line: 114, column: 2, scope: !9131)
!9146 = !DILocation(line: 116, column: 2, scope: !9131)
!9147 = distinct !DISubprogram(name: "strnlen", scope: !9045, file: !9045, line: 126, type: !9148, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9150)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{!272, !140, !272}
!9150 = !{!9151, !9152, !9153}
!9151 = !DILocalVariable(name: "s", arg: 1, scope: !9147, file: !9045, line: 126, type: !140)
!9152 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9147, file: !9045, line: 126, type: !272)
!9153 = !DILocalVariable(name: "n", scope: !9147, file: !9045, line: 128, type: !272)
!9154 = !DILocation(line: 0, scope: !9147)
!9155 = !DILocation(line: 130, column: 9, scope: !9147)
!9156 = !DILocation(line: 130, column: 12, scope: !9147)
!9157 = !DILocation(line: 130, column: 20, scope: !9147)
!9158 = !DILocation(line: 130, column: 2, scope: !9147)
!9159 = !DILocation(line: 131, column: 4, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9147, file: !9045, line: 130, column: 35)
!9161 = !DILocation(line: 132, column: 4, scope: !9160)
!9162 = distinct !{!9162, !9158, !9163}
!9163 = !DILocation(line: 133, column: 2, scope: !9147)
!9164 = !DILocation(line: 135, column: 2, scope: !9147)
!9165 = distinct !DISubprogram(name: "strcmp", scope: !9045, file: !9045, line: 145, type: !9166, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9168)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!125, !140, !140}
!9168 = !{!9169, !9170}
!9169 = !DILocalVariable(name: "s1", arg: 1, scope: !9165, file: !9045, line: 145, type: !140)
!9170 = !DILocalVariable(name: "s2", arg: 2, scope: !9165, file: !9045, line: 145, type: !140)
!9171 = !DILocation(line: 0, scope: !9165)
!9172 = !DILocation(line: 147, column: 10, scope: !9165)
!9173 = !DILocation(line: 147, column: 17, scope: !9165)
!9174 = !DILocation(line: 147, column: 14, scope: !9165)
!9175 = !DILocation(line: 147, column: 22, scope: !9165)
!9176 = !DILocation(line: 148, column: 5, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9165, file: !9045, line: 147, column: 40)
!9178 = !DILocation(line: 149, column: 5, scope: !9177)
!9179 = distinct !{!9179, !9180, !9181}
!9180 = !DILocation(line: 147, column: 2, scope: !9165)
!9181 = !DILocation(line: 150, column: 2, scope: !9165)
!9182 = !DILocation(line: 152, column: 9, scope: !9165)
!9183 = !DILocation(line: 152, column: 15, scope: !9165)
!9184 = !DILocation(line: 152, column: 13, scope: !9165)
!9185 = !DILocation(line: 152, column: 2, scope: !9165)
!9186 = distinct !DISubprogram(name: "strncmp", scope: !9045, file: !9045, line: 162, type: !9187, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9189)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{!125, !140, !140, !272}
!9189 = !{!9190, !9191, !9192}
!9190 = !DILocalVariable(name: "s1", arg: 1, scope: !9186, file: !9045, line: 162, type: !140)
!9191 = !DILocalVariable(name: "s2", arg: 2, scope: !9186, file: !9045, line: 162, type: !140)
!9192 = !DILocalVariable(name: "n", arg: 3, scope: !9186, file: !9045, line: 162, type: !272)
!9193 = !DILocation(line: 0, scope: !9186)
!9194 = !DILocation(line: 164, column: 17, scope: !9186)
!9195 = !DILocation(line: 164, column: 21, scope: !9186)
!9196 = !DILocation(line: 164, column: 28, scope: !9186)
!9197 = !DILocation(line: 164, column: 25, scope: !9186)
!9198 = !DILocation(line: 164, column: 33, scope: !9186)
!9199 = !DILocation(line: 165, column: 5, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9186, file: !9045, line: 164, column: 51)
!9201 = !DILocation(line: 166, column: 5, scope: !9200)
!9202 = !DILocation(line: 167, column: 4, scope: !9200)
!9203 = distinct !{!9203, !9204, !9205}
!9204 = !DILocation(line: 164, column: 2, scope: !9186)
!9205 = !DILocation(line: 168, column: 2, scope: !9186)
!9206 = !DILocation(line: 170, column: 25, scope: !9186)
!9207 = !DILocation(line: 170, column: 31, scope: !9186)
!9208 = !DILocation(line: 170, column: 29, scope: !9186)
!9209 = !DILocation(line: 170, column: 9, scope: !9186)
!9210 = !DILocation(line: 170, column: 2, scope: !9186)
!9211 = distinct !DISubprogram(name: "strtok_r", scope: !9045, file: !9045, line: 180, type: !9212, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9214)
!9212 = !DISubroutineType(types: !9213)
!9213 = !{!393, !393, !140, !392}
!9214 = !{!9215, !9216, !9217, !9218, !9219}
!9215 = !DILocalVariable(name: "str", arg: 1, scope: !9211, file: !9045, line: 180, type: !393)
!9216 = !DILocalVariable(name: "sep", arg: 2, scope: !9211, file: !9045, line: 180, type: !140)
!9217 = !DILocalVariable(name: "state", arg: 3, scope: !9211, file: !9045, line: 180, type: !392)
!9218 = !DILocalVariable(name: "start", scope: !9211, file: !9045, line: 182, type: !393)
!9219 = !DILocalVariable(name: "end", scope: !9211, file: !9045, line: 182, type: !393)
!9220 = !DILocation(line: 0, scope: !9211)
!9221 = !DILocation(line: 184, column: 10, scope: !9211)
!9222 = !DILocation(line: 184, column: 22, scope: !9211)
!9223 = !DILocation(line: 187, column: 9, scope: !9211)
!9224 = !DILocation(line: 187, column: 16, scope: !9211)
!9225 = !DILocation(line: 187, column: 19, scope: !9211)
!9226 = !DILocation(line: 187, column: 2, scope: !9211)
!9227 = !DILocation(line: 188, column: 8, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9211, file: !9045, line: 187, column: 40)
!9229 = distinct !{!9229, !9226, !9230}
!9230 = !DILocation(line: 189, column: 2, scope: !9211)
!9231 = !DILocation(line: 198, column: 9, scope: !9211)
!9232 = !DILocation(line: 198, column: 18, scope: !9211)
!9233 = !DILocation(line: 198, column: 17, scope: !9211)
!9234 = !DILocation(line: 198, column: 2, scope: !9211)
!9235 = !DILocation(line: 199, column: 6, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9211, file: !9045, line: 198, column: 37)
!9237 = !DILocation(line: 198, column: 14, scope: !9211)
!9238 = distinct !{!9238, !9234, !9239}
!9239 = !DILocation(line: 200, column: 2, scope: !9211)
!9240 = !DILocation(line: 203, column: 8, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !9045, line: 202, column: 20)
!9242 = distinct !DILexicalBlock(scope: !9211, file: !9045, line: 202, column: 6)
!9243 = !DILocation(line: 204, column: 16, scope: !9241)
!9244 = !DILocation(line: 205, column: 2, scope: !9241)
!9245 = !DILocation(line: 210, column: 1, scope: !9211)
!9246 = distinct !DISubprogram(name: "strcat", scope: !9045, file: !9045, line: 212, type: !9046, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9247)
!9247 = !{!9248, !9249}
!9248 = !DILocalVariable(name: "dest", arg: 1, scope: !9246, file: !9045, line: 212, type: !9048)
!9249 = !DILocalVariable(name: "src", arg: 2, scope: !9246, file: !9045, line: 212, type: !9049)
!9250 = !DILocation(line: 0, scope: !9246)
!9251 = !DILocation(line: 214, column: 16, scope: !9246)
!9252 = !DILocation(line: 214, column: 14, scope: !9246)
!9253 = !DILocation(line: 214, column: 2, scope: !9246)
!9254 = !DILocation(line: 215, column: 2, scope: !9246)
!9255 = distinct !DISubprogram(name: "strncat", scope: !9045, file: !9045, line: 218, type: !9067, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9256)
!9256 = !{!9257, !9258, !9259, !9260, !9261}
!9257 = !DILocalVariable(name: "dest", arg: 1, scope: !9255, file: !9045, line: 218, type: !9048)
!9258 = !DILocalVariable(name: "src", arg: 2, scope: !9255, file: !9045, line: 218, type: !9049)
!9259 = !DILocalVariable(name: "n", arg: 3, scope: !9255, file: !9045, line: 219, type: !272)
!9260 = !DILocalVariable(name: "orig_dest", scope: !9255, file: !9045, line: 221, type: !393)
!9261 = !DILocalVariable(name: "len", scope: !9255, file: !9045, line: 222, type: !272)
!9262 = !DILocation(line: 0, scope: !9255)
!9263 = !DILocation(line: 222, column: 15, scope: !9255)
!9264 = !DILocation(line: 224, column: 7, scope: !9255)
!9265 = !DILocation(line: 225, column: 14, scope: !9255)
!9266 = !DILocation(line: 225, column: 19, scope: !9255)
!9267 = !DILocation(line: 225, column: 11, scope: !9255)
!9268 = !DILocation(line: 225, column: 23, scope: !9255)
!9269 = !DILocation(line: 225, column: 28, scope: !9255)
!9270 = !DILocation(line: 225, column: 2, scope: !9255)
!9271 = !DILocation(line: 226, column: 17, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9255, file: !9045, line: 225, column: 38)
!9273 = !DILocation(line: 226, column: 8, scope: !9272)
!9274 = !DILocation(line: 226, column: 11, scope: !9272)
!9275 = distinct !{!9275, !9270, !9276}
!9276 = !DILocation(line: 227, column: 2, scope: !9255)
!9277 = !DILocation(line: 228, column: 8, scope: !9255)
!9278 = !DILocation(line: 230, column: 2, scope: !9255)
!9279 = distinct !DISubprogram(name: "memcmp", scope: !9045, file: !9045, line: 239, type: !9280, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9282)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!125, !13, !13, !272}
!9282 = !{!9283, !9284, !9285, !9286, !9287}
!9283 = !DILocalVariable(name: "m1", arg: 1, scope: !9279, file: !9045, line: 239, type: !13)
!9284 = !DILocalVariable(name: "m2", arg: 2, scope: !9279, file: !9045, line: 239, type: !13)
!9285 = !DILocalVariable(name: "n", arg: 3, scope: !9279, file: !9045, line: 239, type: !272)
!9286 = !DILocalVariable(name: "c1", scope: !9279, file: !9045, line: 241, type: !140)
!9287 = !DILocalVariable(name: "c2", scope: !9279, file: !9045, line: 242, type: !140)
!9288 = !DILocation(line: 0, scope: !9279)
!9289 = !DILocation(line: 244, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9279, file: !9045, line: 244, column: 6)
!9291 = !DILocation(line: 244, column: 6, scope: !9279)
!9292 = !DILocation(line: 248, column: 10, scope: !9279)
!9293 = !DILocation(line: 248, column: 14, scope: !9279)
!9294 = !DILocation(line: 248, column: 19, scope: !9279)
!9295 = !DILocation(line: 248, column: 2, scope: !9279)
!9296 = !DILocation(line: 248, column: 23, scope: !9279)
!9297 = !DILocation(line: 248, column: 30, scope: !9279)
!9298 = !DILocation(line: 248, column: 27, scope: !9279)
!9299 = !DILocation(line: 249, column: 5, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9279, file: !9045, line: 248, column: 36)
!9301 = !DILocation(line: 250, column: 5, scope: !9300)
!9302 = distinct !{!9302, !9295, !9303}
!9303 = !DILocation(line: 251, column: 2, scope: !9279)
!9304 = !DILocation(line: 253, column: 9, scope: !9279)
!9305 = !DILocation(line: 253, column: 15, scope: !9279)
!9306 = !DILocation(line: 253, column: 13, scope: !9279)
!9307 = !DILocation(line: 253, column: 2, scope: !9279)
!9308 = !DILocation(line: 254, column: 1, scope: !9279)
!9309 = distinct !DISubprogram(name: "memmove", scope: !9045, file: !9045, line: 263, type: !9310, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{!124, !124, !13, !272}
!9312 = !{!9313, !9314, !9315, !9316, !9317}
!9313 = !DILocalVariable(name: "d", arg: 1, scope: !9309, file: !9045, line: 263, type: !124)
!9314 = !DILocalVariable(name: "s", arg: 2, scope: !9309, file: !9045, line: 263, type: !13)
!9315 = !DILocalVariable(name: "n", arg: 3, scope: !9309, file: !9045, line: 263, type: !272)
!9316 = !DILocalVariable(name: "dest", scope: !9309, file: !9045, line: 265, type: !393)
!9317 = !DILocalVariable(name: "src", scope: !9309, file: !9045, line: 266, type: !140)
!9318 = !DILocation(line: 0, scope: !9309)
!9319 = !DILocation(line: 268, column: 21, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9309, file: !9045, line: 268, column: 6)
!9321 = !DILocation(line: 268, column: 28, scope: !9320)
!9322 = !DILocation(line: 268, column: 6, scope: !9309)
!9323 = !DILocation(line: 280, column: 12, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9320, file: !9045, line: 278, column: 9)
!9325 = !DILocation(line: 280, column: 3, scope: !9324)
!9326 = !DILocation(line: 275, column: 5, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !9045, line: 274, column: 17)
!9328 = distinct !DILexicalBlock(scope: !9320, file: !9045, line: 268, column: 33)
!9329 = !DILocation(line: 276, column: 14, scope: !9327)
!9330 = !DILocation(line: 276, column: 4, scope: !9327)
!9331 = !DILocation(line: 276, column: 12, scope: !9327)
!9332 = !DILocation(line: 274, column: 12, scope: !9328)
!9333 = !DILocation(line: 274, column: 3, scope: !9328)
!9334 = distinct !{!9334, !9333, !9335}
!9335 = !DILocation(line: 277, column: 3, scope: !9328)
!9336 = !DILocation(line: 281, column: 12, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9324, file: !9045, line: 280, column: 17)
!9338 = !DILocation(line: 281, column: 10, scope: !9337)
!9339 = !DILocation(line: 282, column: 8, scope: !9337)
!9340 = !DILocation(line: 283, column: 7, scope: !9337)
!9341 = !DILocation(line: 284, column: 5, scope: !9337)
!9342 = distinct !{!9342, !9325, !9343}
!9343 = !DILocation(line: 285, column: 3, scope: !9324)
!9344 = !DILocation(line: 288, column: 2, scope: !9309)
!9345 = distinct !DISubprogram(name: "memcpy", scope: !9045, file: !9045, line: 298, type: !9346, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9350)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{!124, !9348, !9349, !272}
!9348 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9349 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9350 = !{!9351, !9352, !9353, !9354, !9355}
!9351 = !DILocalVariable(name: "d", arg: 1, scope: !9345, file: !9045, line: 298, type: !9348)
!9352 = !DILocalVariable(name: "s", arg: 2, scope: !9345, file: !9045, line: 298, type: !9349)
!9353 = !DILocalVariable(name: "n", arg: 3, scope: !9345, file: !9045, line: 298, type: !272)
!9354 = !DILocalVariable(name: "d_byte", scope: !9345, file: !9045, line: 302, type: !912)
!9355 = !DILocalVariable(name: "s_byte", scope: !9345, file: !9045, line: 303, type: !2861)
!9356 = !DILocation(line: 0, scope: !9345)
!9357 = !DILocation(line: 337, column: 11, scope: !9345)
!9358 = !DILocation(line: 337, column: 2, scope: !9345)
!9359 = !DILocation(line: 338, column: 25, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9345, file: !9045, line: 337, column: 16)
!9361 = !DILocation(line: 338, column: 17, scope: !9360)
!9362 = !DILocation(line: 338, column: 11, scope: !9360)
!9363 = !DILocation(line: 338, column: 15, scope: !9360)
!9364 = !DILocation(line: 339, column: 4, scope: !9360)
!9365 = distinct !{!9365, !9358, !9366}
!9366 = !DILocation(line: 340, column: 2, scope: !9345)
!9367 = !DILocation(line: 342, column: 2, scope: !9345)
!9368 = distinct !DISubprogram(name: "memset", scope: !9045, file: !9045, line: 352, type: !9369, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9371)
!9369 = !DISubroutineType(types: !9370)
!9370 = !{!124, !124, !125, !272}
!9371 = !{!9372, !9373, !9374, !9375, !9376}
!9372 = !DILocalVariable(name: "buf", arg: 1, scope: !9368, file: !9045, line: 352, type: !124)
!9373 = !DILocalVariable(name: "c", arg: 2, scope: !9368, file: !9045, line: 352, type: !125)
!9374 = !DILocalVariable(name: "n", arg: 3, scope: !9368, file: !9045, line: 352, type: !272)
!9375 = !DILocalVariable(name: "d_byte", scope: !9368, file: !9045, line: 356, type: !912)
!9376 = !DILocalVariable(name: "c_byte", scope: !9368, file: !9045, line: 357, type: !151)
!9377 = !DILocation(line: 0, scope: !9368)
!9378 = !DILocation(line: 357, column: 25, scope: !9368)
!9379 = !DILocation(line: 389, column: 11, scope: !9368)
!9380 = !DILocation(line: 389, column: 2, scope: !9368)
!9381 = !DILocation(line: 390, column: 11, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9368, file: !9045, line: 389, column: 16)
!9383 = !DILocation(line: 390, column: 15, scope: !9382)
!9384 = !DILocation(line: 391, column: 4, scope: !9382)
!9385 = distinct !{!9385, !9380, !9386}
!9386 = !DILocation(line: 392, column: 2, scope: !9368)
!9387 = !DILocation(line: 394, column: 2, scope: !9368)
!9388 = distinct !DISubprogram(name: "memchr", scope: !9045, file: !9045, line: 404, type: !9389, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !9391)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{!124, !13, !125, !272}
!9391 = !{!9392, !9393, !9394, !9395}
!9392 = !DILocalVariable(name: "s", arg: 1, scope: !9388, file: !9045, line: 404, type: !13)
!9393 = !DILocalVariable(name: "c", arg: 2, scope: !9388, file: !9045, line: 404, type: !125)
!9394 = !DILocalVariable(name: "n", arg: 3, scope: !9388, file: !9045, line: 404, type: !272)
!9395 = !DILocalVariable(name: "p", scope: !9396, file: !9045, line: 407, type: !2861)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !9045, line: 406, column: 14)
!9397 = distinct !DILexicalBlock(scope: !9388, file: !9045, line: 406, column: 6)
!9398 = !DILocation(line: 0, scope: !9388)
!9399 = !DILocation(line: 406, column: 8, scope: !9397)
!9400 = !DILocation(line: 406, column: 6, scope: !9388)
!9401 = !DILocation(line: 409, column: 3, scope: !9396)
!9402 = !DILocation(line: 0, scope: !9396)
!9403 = !DILocation(line: 410, column: 8, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !9045, line: 410, column: 8)
!9405 = distinct !DILexicalBlock(scope: !9396, file: !9045, line: 409, column: 6)
!9406 = !DILocation(line: 410, column: 13, scope: !9404)
!9407 = !DILocation(line: 410, column: 8, scope: !9405)
!9408 = distinct !{!9408, !9401, !9409}
!9409 = !DILocation(line: 414, column: 20, scope: !9396)
!9410 = !DILocation(line: 417, column: 2, scope: !9388)
!9411 = !DILocation(line: 418, column: 1, scope: !9388)
!9412 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !882, file: !882, line: 23, type: !4895, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9413)
!9413 = !{!9414}
!9414 = !DILocalVariable(name: "hook", arg: 1, scope: !9412, file: !882, line: 23, type: !409)
!9415 = !DILocation(line: 0, scope: !9412)
!9416 = !DILocation(line: 25, column: 15, scope: !9412)
!9417 = !DILocation(line: 26, column: 1, scope: !9412)
!9418 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !882, file: !882, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9419)
!9419 = !{!9420}
!9420 = !DILocalVariable(name: "c", arg: 1, scope: !9418, file: !882, line: 14, type: !125)
!9421 = !DILocation(line: 0, scope: !9418)
!9422 = !DILocation(line: 18, column: 2, scope: !9418)
!9423 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !882, file: !882, line: 28, type: !9424, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!125, !125, !878}
!9426 = !{!9427, !9428}
!9427 = !DILocalVariable(name: "c", arg: 1, scope: !9423, file: !882, line: 28, type: !125)
!9428 = !DILocalVariable(name: "stream", arg: 2, scope: !9423, file: !882, line: 28, type: !878)
!9429 = !DILocation(line: 0, scope: !9423)
!9430 = !DILocation(line: 30, column: 27, scope: !9423)
!9431 = !DILocation(line: 30, column: 50, scope: !9423)
!9432 = !DILocation(line: 30, column: 9, scope: !9423)
!9433 = !DILocation(line: 30, column: 2, scope: !9423)
!9434 = distinct !DISubprogram(name: "fputc", scope: !882, file: !882, line: 41, type: !9424, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9435)
!9435 = !{!9436, !9437}
!9436 = !DILocalVariable(name: "c", arg: 1, scope: !9434, file: !882, line: 41, type: !125)
!9437 = !DILocalVariable(name: "stream", arg: 2, scope: !9434, file: !882, line: 41, type: !878)
!9438 = !DILocation(line: 0, scope: !9434)
!9439 = !DILocation(line: 43, column: 9, scope: !9434)
!9440 = !DILocation(line: 43, column: 2, scope: !9434)
!9441 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9442, file: !9442, line: 72, type: !9424, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9443)
!9442 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!9443 = !{!9444, !9445}
!9444 = !DILocalVariable(name: "c", arg: 1, scope: !9441, file: !9442, line: 72, type: !125)
!9445 = !DILocalVariable(name: "stream", arg: 2, scope: !9441, file: !9442, line: 72, type: !878)
!9446 = !DILocation(line: 0, scope: !9441)
!9447 = !DILocation(line: 81, column: 2, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9441, file: !9442, line: 81, column: 2)
!9449 = !{i64 2151100487}
!9450 = !DILocation(line: 82, column: 9, scope: !9441)
!9451 = !DILocation(line: 82, column: 2, scope: !9441)
!9452 = distinct !DISubprogram(name: "fputs", scope: !882, file: !882, line: 46, type: !9453, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9456)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!125, !9049, !9455}
!9455 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !878)
!9456 = !{!9457, !9458, !9459, !9460}
!9457 = !DILocalVariable(name: "s", arg: 1, scope: !9452, file: !882, line: 46, type: !9049)
!9458 = !DILocalVariable(name: "stream", arg: 2, scope: !9452, file: !882, line: 46, type: !9455)
!9459 = !DILocalVariable(name: "len", scope: !9452, file: !882, line: 48, type: !125)
!9460 = !DILocalVariable(name: "ret", scope: !9452, file: !882, line: 49, type: !125)
!9461 = !DILocation(line: 0, scope: !9452)
!9462 = !DILocation(line: 48, column: 12, scope: !9452)
!9463 = !DILocation(line: 51, column: 8, scope: !9452)
!9464 = !DILocation(line: 53, column: 13, scope: !9452)
!9465 = !DILocation(line: 53, column: 9, scope: !9452)
!9466 = !DILocation(line: 53, column: 2, scope: !9452)
!9467 = distinct !DISubprogram(name: "fwrite", scope: !882, file: !882, line: 99, type: !9468, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9470)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{!272, !9349, !272, !272, !9455}
!9470 = !{!9471, !9472, !9473, !9474}
!9471 = !DILocalVariable(name: "ptr", arg: 1, scope: !9467, file: !882, line: 99, type: !9349)
!9472 = !DILocalVariable(name: "size", arg: 2, scope: !9467, file: !882, line: 99, type: !272)
!9473 = !DILocalVariable(name: "nitems", arg: 3, scope: !9467, file: !882, line: 99, type: !272)
!9474 = !DILocalVariable(name: "stream", arg: 4, scope: !9467, file: !882, line: 100, type: !9455)
!9475 = !DILocation(line: 0, scope: !9467)
!9476 = !DILocation(line: 102, column: 9, scope: !9467)
!9477 = !DILocation(line: 102, column: 2, scope: !9467)
!9478 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9442, file: !9442, line: 96, type: !9468, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9479)
!9479 = !{!9480, !9481, !9482, !9483}
!9480 = !DILocalVariable(name: "ptr", arg: 1, scope: !9478, file: !9442, line: 96, type: !9349)
!9481 = !DILocalVariable(name: "size", arg: 2, scope: !9478, file: !9442, line: 96, type: !272)
!9482 = !DILocalVariable(name: "nitems", arg: 3, scope: !9478, file: !9442, line: 96, type: !272)
!9483 = !DILocalVariable(name: "stream", arg: 4, scope: !9478, file: !9442, line: 96, type: !9455)
!9484 = !DILocation(line: 0, scope: !9478)
!9485 = !DILocation(line: 107, column: 2, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9478, file: !9442, line: 107, column: 2)
!9487 = !{i64 2151100591}
!9488 = !DILocation(line: 108, column: 9, scope: !9478)
!9489 = !DILocation(line: 108, column: 2, scope: !9478)
!9490 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !882, file: !882, line: 56, type: !9468, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9491)
!9491 = !{!9492, !9493, !9494, !9495, !9496, !9497, !9498, !9499}
!9492 = !DILocalVariable(name: "ptr", arg: 1, scope: !9490, file: !882, line: 56, type: !9349)
!9493 = !DILocalVariable(name: "size", arg: 2, scope: !9490, file: !882, line: 56, type: !272)
!9494 = !DILocalVariable(name: "nitems", arg: 3, scope: !9490, file: !882, line: 57, type: !272)
!9495 = !DILocalVariable(name: "stream", arg: 4, scope: !9490, file: !882, line: 57, type: !9455)
!9496 = !DILocalVariable(name: "i", scope: !9490, file: !882, line: 59, type: !272)
!9497 = !DILocalVariable(name: "j", scope: !9490, file: !882, line: 60, type: !272)
!9498 = !DILocalVariable(name: "p", scope: !9490, file: !882, line: 61, type: !2861)
!9499 = !DILabel(scope: !9490, name: "done", file: !882, line: 82)
!9500 = !DILocation(line: 0, scope: !9490)
!9501 = !DILocation(line: 63, column: 14, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9490, file: !882, line: 63, column: 6)
!9503 = !DILocation(line: 63, column: 24, scope: !9502)
!9504 = !DILocation(line: 72, column: 3, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9490, file: !882, line: 70, column: 5)
!9506 = !DILocation(line: 0, scope: !9505)
!9507 = !DILocation(line: 73, column: 8, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !882, line: 73, column: 8)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !882, line: 72, column: 6)
!9510 = !DILocation(line: 73, column: 29, scope: !9508)
!9511 = !DILocation(line: 73, column: 27, scope: !9508)
!9512 = !DILocation(line: 73, column: 21, scope: !9508)
!9513 = !DILocation(line: 73, column: 33, scope: !9508)
!9514 = !DILocation(line: 73, column: 8, scope: !9509)
!9515 = !DILocation(line: 76, column: 5, scope: !9509)
!9516 = !DILocation(line: 77, column: 14, scope: !9505)
!9517 = !DILocation(line: 77, column: 3, scope: !9509)
!9518 = distinct !{!9518, !9504, !9519}
!9519 = !DILocation(line: 77, column: 17, scope: !9505)
!9520 = !DILocation(line: 79, column: 4, scope: !9505)
!9521 = !DILocation(line: 80, column: 13, scope: !9490)
!9522 = !DILocation(line: 80, column: 2, scope: !9505)
!9523 = distinct !{!9523, !9524, !9525}
!9524 = !DILocation(line: 70, column: 2, scope: !9490)
!9525 = !DILocation(line: 80, column: 16, scope: !9490)
!9526 = !DILocation(line: 82, column: 1, scope: !9490)
!9527 = !DILocation(line: 83, column: 17, scope: !9490)
!9528 = !DILocation(line: 83, column: 2, scope: !9490)
!9529 = !DILocation(line: 84, column: 1, scope: !9490)
!9530 = distinct !DISubprogram(name: "puts", scope: !882, file: !882, line: 106, type: !9531, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9533)
!9531 = !DISubroutineType(types: !9532)
!9532 = !{!125, !140}
!9533 = !{!9534}
!9534 = !DILocalVariable(name: "s", arg: 1, scope: !9530, file: !882, line: 106, type: !140)
!9535 = !DILocation(line: 0, scope: !9530)
!9536 = !DILocation(line: 108, column: 6, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9530, file: !882, line: 108, column: 6)
!9538 = !DILocation(line: 108, column: 23, scope: !9537)
!9539 = !DILocation(line: 108, column: 6, scope: !9530)
!9540 = !DILocation(line: 112, column: 9, scope: !9530)
!9541 = !DILocation(line: 112, column: 29, scope: !9530)
!9542 = !DILocation(line: 112, column: 2, scope: !9530)
!9543 = !DILocation(line: 113, column: 1, scope: !9530)
!9544 = distinct !DISubprogram(name: "uart_console_init", scope: !973, file: !973, line: 588, type: !919, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9545)
!9545 = !{!9546}
!9546 = !DILocalVariable(name: "arg", arg: 1, scope: !9544, file: !973, line: 588, type: !897)
!9547 = !DILocation(line: 0, scope: !9544)
!9548 = !DILocation(line: 593, column: 7, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !973, line: 593, column: 6)
!9550 = !DILocation(line: 593, column: 6, scope: !9544)
!9551 = !DILocation(line: 597, column: 2, scope: !9544)
!9552 = !DILocation(line: 599, column: 2, scope: !9544)
!9553 = !DILocation(line: 600, column: 1, scope: !9544)
!9554 = distinct !DISubprogram(name: "device_is_ready", scope: !4026, file: !4026, line: 47, type: !9555, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9557)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!153, !897}
!9557 = !{!9558}
!9558 = !DILocalVariable(name: "dev", arg: 1, scope: !9554, file: !4026, line: 47, type: !897)
!9559 = !DILocation(line: 0, scope: !9554)
!9560 = !DILocation(line: 55, column: 2, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9554, file: !4026, line: 55, column: 2)
!9562 = !{i64 2151370161}
!9563 = !DILocation(line: 56, column: 9, scope: !9554)
!9564 = !DILocation(line: 56, column: 2, scope: !9554)
!9565 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !973, file: !973, line: 573, type: !3135, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !1896)
!9566 = !DILocation(line: 576, column: 2, scope: !9565)
!9567 = !DILocation(line: 579, column: 2, scope: !9565)
!9568 = !DILocation(line: 581, column: 1, scope: !9565)
!9569 = distinct !DISubprogram(name: "console_out", scope: !973, file: !973, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9570)
!9570 = !{!9571}
!9571 = !DILocalVariable(name: "c", arg: 1, scope: !9569, file: !973, line: 77, type: !125)
!9572 = !DILocation(line: 0, scope: !9569)
!9573 = !DILocation(line: 89, column: 11, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9569, file: !973, line: 89, column: 6)
!9575 = !DILocation(line: 89, column: 6, scope: !9569)
!9576 = !DILocation(line: 90, column: 3, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9574, file: !973, line: 89, column: 17)
!9578 = !DILocation(line: 91, column: 2, scope: !9577)
!9579 = !DILocation(line: 92, column: 34, scope: !9569)
!9580 = !DILocation(line: 92, column: 2, scope: !9569)
!9581 = !DILocation(line: 94, column: 2, scope: !9569)
!9582 = distinct !DISubprogram(name: "uart_poll_out", scope: !9583, file: !9583, line: 95, type: !915, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9584)
!9583 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/crypto")
!9584 = !{!9585, !9586}
!9585 = !DILocalVariable(name: "dev", arg: 1, scope: !9582, file: !9583, line: 95, type: !897)
!9586 = !DILocalVariable(name: "out_char", arg: 2, scope: !9582, file: !9583, line: 95, type: !151)
!9587 = !DILocation(line: 0, scope: !9582)
!9588 = !DILocation(line: 105, column: 2, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9582, file: !9583, line: 105, column: 2)
!9590 = !{i64 2151453406}
!9591 = !DILocation(line: 106, column: 2, scope: !9582)
!9592 = !DILocation(line: 107, column: 1, scope: !9582)
!9593 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !891, file: !891, line: 574, type: !915, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9594)
!9594 = !{!9595, !9596, !9597}
!9595 = !DILocalVariable(name: "dev", arg: 1, scope: !9593, file: !891, line: 574, type: !897)
!9596 = !DILocalVariable(name: "out_char", arg: 2, scope: !9593, file: !891, line: 575, type: !151)
!9597 = !DILocalVariable(name: "api", scope: !9593, file: !891, line: 577, type: !888)
!9598 = !DILocation(line: 0, scope: !9593)
!9599 = !DILocation(line: 578, column: 40, scope: !9593)
!9600 = !DILocation(line: 580, column: 7, scope: !9593)
!9601 = !DILocation(line: 580, column: 2, scope: !9593)
!9602 = !DILocation(line: 581, column: 1, scope: !9593)
!9603 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !9555, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9604)
!9604 = !{!9605}
!9605 = !DILocalVariable(name: "dev", arg: 1, scope: !9603, file: !137, line: 730, type: !897)
!9606 = !DILocation(line: 0, scope: !9603)
!9607 = !DILocation(line: 732, column: 9, scope: !9603)
!9608 = !DILocation(line: 732, column: 2, scope: !9603)
!9609 = distinct !DISubprogram(name: "uart_register_input", scope: !973, file: !973, line: 560, type: !9610, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9655)
!9610 = !DISubroutineType(types: !9611)
!9611 = !{null, !9612, !9612, !9652}
!9612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9613, size: 32)
!9613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !2123, line: 2208, size: 128, elements: !9614)
!9614 = !{!9615}
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9613, file: !2123, line: 2209, baseType: !9616, size: 128)
!9616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !2123, line: 1709, size: 128, elements: !9617)
!9617 = !{!9618, !9631, !9633}
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9616, file: !2123, line: 1710, baseType: !9619, size: 64)
!9619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9620, line: 46, baseType: !9621)
!9620 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9620, line: 41, size: 64, elements: !9622)
!9622 = !{!9623, !9630}
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9621, file: !9620, line: 42, baseType: !9624, size: 32)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 32)
!9625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9620, line: 39, baseType: !9626)
!9626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9620, line: 35, size: 32, elements: !9627)
!9627 = !{!9628}
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9626, file: !9620, line: 36, baseType: !9629, size: 32)
!9629 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9620, line: 32, baseType: !208)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9621, file: !9620, line: 43, baseType: !9624, size: 32, offset: 32)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9616, file: !2123, line: 1711, baseType: !9632, offset: 64)
!9632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9616, file: !2123, line: 1712, baseType: !9634, size: 64, offset: 64)
!9634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !9635)
!9635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !9636)
!9636 = !{!9637}
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9635, file: !2029, line: 232, baseType: !9638, size: 64)
!9638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !9639)
!9639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !9640)
!9640 = !{!9641, !9647}
!9641 = !DIDerivedType(tag: DW_TAG_member, scope: !9639, file: !2050, line: 38, baseType: !9642, size: 32)
!9642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9639, file: !2050, line: 38, size: 32, elements: !9643)
!9643 = !{!9644, !9646}
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9642, file: !2050, line: 39, baseType: !9645, size: 32)
!9645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9639, size: 32)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9642, file: !2050, line: 40, baseType: !9645, size: 32)
!9647 = !DIDerivedType(tag: DW_TAG_member, scope: !9639, file: !2050, line: 42, baseType: !9648, size: 32, offset: 32)
!9648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9639, file: !2050, line: 42, size: 32, elements: !9649)
!9649 = !{!9650, !9651}
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9648, file: !2050, line: 43, baseType: !9645, size: 32)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9648, file: !2050, line: 44, baseType: !9645, size: 32)
!9652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9653, size: 32)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!150, !393, !150}
!9655 = !{!9656, !9657, !9658}
!9656 = !DILocalVariable(name: "avail", arg: 1, scope: !9609, file: !973, line: 560, type: !9612)
!9657 = !DILocalVariable(name: "lines", arg: 2, scope: !9609, file: !973, line: 560, type: !9612)
!9658 = !DILocalVariable(name: "completion", arg: 3, scope: !9609, file: !973, line: 561, type: !9652)
!9659 = !DILocation(line: 0, scope: !9609)
!9660 = !DILocation(line: 566, column: 1, scope: !9609)
!9661 = distinct !DISubprogram(name: "tc_shim_init", scope: !988, file: !988, line: 305, type: !1015, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9662)
!9662 = !{!9663, !9664}
!9663 = !DILocalVariable(name: "dev", arg: 1, scope: !9661, file: !988, line: 305, type: !1017)
!9664 = !DILocalVariable(name: "i", scope: !9661, file: !988, line: 307, type: !125)
!9665 = !DILocation(line: 0, scope: !9661)
!9666 = !DILocation(line: 311, column: 29, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !988, line: 310, column: 43)
!9668 = distinct !DILexicalBlock(scope: !9669, file: !988, line: 310, column: 2)
!9669 = distinct !DILexicalBlock(scope: !9661, file: !988, line: 310, column: 2)
!9670 = !DILocation(line: 314, column: 2, scope: !9661)
!9671 = distinct !DISubprogram(name: "tc_query_caps", scope: !988, file: !988, line: 289, type: !1015, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9672)
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "dev", arg: 1, scope: !9671, file: !988, line: 289, type: !1017)
!9674 = !DILocation(line: 0, scope: !9671)
!9675 = !DILocation(line: 291, column: 2, scope: !9671)
!9676 = distinct !DISubprogram(name: "tc_session_setup", scope: !988, file: !988, line: 193, type: !1028, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9677)
!9677 = !{!9678, !9679, !9680, !9681, !9682, !9683, !9685}
!9678 = !DILocalVariable(name: "dev", arg: 1, scope: !9676, file: !988, line: 193, type: !1017)
!9679 = !DILocalVariable(name: "ctx", arg: 2, scope: !9676, file: !988, line: 193, type: !1030)
!9680 = !DILocalVariable(name: "algo", arg: 3, scope: !9676, file: !988, line: 194, type: !39)
!9681 = !DILocalVariable(name: "mode", arg: 4, scope: !9676, file: !988, line: 194, type: !30)
!9682 = !DILocalVariable(name: "op_type", arg: 5, scope: !9676, file: !988, line: 195, type: !42)
!9683 = !DILocalVariable(name: "data", scope: !9676, file: !988, line: 197, type: !9684)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!9685 = !DILocalVariable(name: "idx", scope: !9676, file: !988, line: 198, type: !125)
!9686 = !DILocation(line: 0, scope: !9676)
!9687 = !DILocation(line: 203, column: 11, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 203, column: 6)
!9689 = !DILocation(line: 203, column: 6, scope: !9676)
!9690 = !DILocation(line: 204, column: 3, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !988, line: 204, column: 3)
!9692 = distinct !DILexicalBlock(scope: !9693, file: !988, line: 204, column: 3)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !988, line: 204, column: 3)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !988, line: 204, column: 3)
!9695 = distinct !DILexicalBlock(scope: !9688, file: !988, line: 203, column: 38)
!9696 = !DILocation(line: 205, column: 3, scope: !9695)
!9697 = !DILocation(line: 211, column: 13, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 211, column: 6)
!9699 = !DILocation(line: 211, column: 19, scope: !9698)
!9700 = !DILocation(line: 211, column: 6, scope: !9676)
!9701 = !DILocation(line: 212, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !988, line: 212, column: 3)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !988, line: 212, column: 3)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !988, line: 212, column: 3)
!9705 = distinct !DILexicalBlock(scope: !9706, file: !988, line: 212, column: 3)
!9706 = distinct !DILexicalBlock(scope: !9698, file: !988, line: 211, column: 36)
!9707 = !DILocation(line: 213, column: 3, scope: !9706)
!9708 = !DILocation(line: 216, column: 11, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 216, column: 6)
!9710 = !DILocation(line: 216, column: 18, scope: !9709)
!9711 = !DILocation(line: 216, column: 6, scope: !9676)
!9712 = !DILocation(line: 218, column: 3, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !988, line: 218, column: 3)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !988, line: 218, column: 3)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !988, line: 218, column: 3)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !988, line: 218, column: 3)
!9717 = distinct !DILexicalBlock(scope: !9709, file: !988, line: 216, column: 38)
!9718 = !DILocation(line: 219, column: 3, scope: !9717)
!9719 = !DILocation(line: 222, column: 14, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 222, column: 6)
!9721 = !DILocation(line: 222, column: 6, scope: !9676)
!9722 = !DILocation(line: 223, column: 3, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9720, file: !988, line: 222, column: 43)
!9724 = !DILocation(line: 225, column: 13, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9723, file: !988, line: 223, column: 17)
!9726 = !DILocation(line: 225, column: 29, scope: !9725)
!9727 = !DILocation(line: 226, column: 4, scope: !9725)
!9728 = !DILocation(line: 228, column: 34, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !988, line: 228, column: 8)
!9730 = !DILocation(line: 228, column: 42, scope: !9729)
!9731 = !DILocation(line: 228, column: 8, scope: !9725)
!9732 = !DILocation(line: 229, column: 5, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !988, line: 229, column: 5)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !988, line: 229, column: 5)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !988, line: 229, column: 5)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !988, line: 229, column: 5)
!9737 = distinct !DILexicalBlock(scope: !9729, file: !988, line: 228, column: 50)
!9738 = !DILocation(line: 231, column: 5, scope: !9737)
!9739 = !DILocation(line: 233, column: 13, scope: !9725)
!9740 = !DILocation(line: 233, column: 29, scope: !9725)
!9741 = !DILocation(line: 234, column: 4, scope: !9725)
!9742 = !DILocation(line: 236, column: 13, scope: !9725)
!9743 = !DILocation(line: 236, column: 29, scope: !9725)
!9744 = !DILocation(line: 237, column: 4, scope: !9725)
!9745 = !DILocation(line: 239, column: 4, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !988, line: 239, column: 4)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !988, line: 239, column: 4)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !988, line: 239, column: 4)
!9749 = distinct !DILexicalBlock(scope: !9725, file: !988, line: 239, column: 4)
!9750 = !DILocation(line: 240, column: 4, scope: !9725)
!9751 = !DILocation(line: 243, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9720, file: !988, line: 242, column: 9)
!9753 = !DILocation(line: 245, column: 13, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9752, file: !988, line: 243, column: 17)
!9755 = !DILocation(line: 245, column: 29, scope: !9754)
!9756 = !DILocation(line: 246, column: 4, scope: !9754)
!9757 = !DILocation(line: 249, column: 34, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9754, file: !988, line: 249, column: 8)
!9759 = !DILocation(line: 249, column: 42, scope: !9758)
!9760 = !DILocation(line: 249, column: 8, scope: !9754)
!9761 = !DILocation(line: 250, column: 5, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !988, line: 250, column: 5)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !988, line: 250, column: 5)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !988, line: 250, column: 5)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !988, line: 250, column: 5)
!9766 = distinct !DILexicalBlock(scope: !9758, file: !988, line: 249, column: 50)
!9767 = !DILocation(line: 252, column: 5, scope: !9766)
!9768 = !DILocation(line: 254, column: 13, scope: !9754)
!9769 = !DILocation(line: 254, column: 29, scope: !9754)
!9770 = !DILocation(line: 255, column: 4, scope: !9754)
!9771 = !DILocation(line: 257, column: 13, scope: !9754)
!9772 = !DILocation(line: 257, column: 29, scope: !9754)
!9773 = !DILocation(line: 258, column: 4, scope: !9754)
!9774 = !DILocation(line: 260, column: 4, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !988, line: 260, column: 4)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !988, line: 260, column: 4)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !988, line: 260, column: 4)
!9778 = distinct !DILexicalBlock(scope: !9754, file: !988, line: 260, column: 4)
!9779 = !DILocation(line: 261, column: 4, scope: !9754)
!9780 = !DILocation(line: 266, column: 11, scope: !9676)
!9781 = !DILocation(line: 266, column: 23, scope: !9676)
!9782 = !DILocation(line: 268, column: 8, scope: !9676)
!9783 = !DILocation(line: 269, column: 10, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 269, column: 6)
!9785 = !DILocation(line: 269, column: 6, scope: !9676)
!9786 = !DILocation(line: 270, column: 3, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9788, file: !988, line: 270, column: 3)
!9788 = distinct !DILexicalBlock(scope: !9789, file: !988, line: 270, column: 3)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !988, line: 270, column: 3)
!9790 = distinct !DILexicalBlock(scope: !9791, file: !988, line: 270, column: 3)
!9791 = distinct !DILexicalBlock(scope: !9784, file: !988, line: 269, column: 33)
!9792 = !DILocation(line: 271, column: 3, scope: !9791)
!9793 = !DILocation(line: 274, column: 10, scope: !9676)
!9794 = !DILocation(line: 276, column: 39, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9676, file: !988, line: 276, column: 6)
!9796 = !DILocation(line: 276, column: 61, scope: !9795)
!9797 = !DILocation(line: 276, column: 6, scope: !9795)
!9798 = !DILocation(line: 277, column: 5, scope: !9795)
!9799 = !DILocation(line: 276, column: 6, scope: !9676)
!9800 = !DILocation(line: 278, column: 3, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !988, line: 278, column: 3)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !988, line: 278, column: 3)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !988, line: 278, column: 3)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !988, line: 278, column: 3)
!9805 = distinct !DILexicalBlock(scope: !9795, file: !988, line: 277, column: 24)
!9806 = !DILocation(line: 279, column: 24, scope: !9805)
!9807 = !DILocation(line: 279, column: 31, scope: !9805)
!9808 = !DILocation(line: 281, column: 3, scope: !9805)
!9809 = !DILocation(line: 284, column: 7, scope: !9676)
!9810 = !DILocation(line: 284, column: 23, scope: !9676)
!9811 = !DILocation(line: 286, column: 2, scope: !9676)
!9812 = !DILocation(line: 287, column: 1, scope: !9676)
!9813 = distinct !DISubprogram(name: "tc_session_free", scope: !988, file: !988, line: 294, type: !1104, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !988, line: 294, type: !1017)
!9816 = !DILocalVariable(name: "sessn", arg: 2, scope: !9813, file: !988, line: 294, type: !1030)
!9817 = !DILocalVariable(name: "data", scope: !9813, file: !988, line: 296, type: !9684)
!9818 = !DILocation(line: 0, scope: !9813)
!9819 = !DILocation(line: 296, column: 43, scope: !9813)
!9820 = !DILocation(line: 299, column: 8, scope: !9813)
!9821 = !DILocation(line: 300, column: 8, scope: !9813)
!9822 = !DILocation(line: 300, column: 15, scope: !9813)
!9823 = !DILocation(line: 302, column: 2, scope: !9813)
!9824 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !988, file: !988, line: 28, type: !1057, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9825)
!9825 = !{!9826, !9827, !9828, !9829}
!9826 = !DILocalVariable(name: "ctx", arg: 1, scope: !9824, file: !988, line: 28, type: !1030)
!9827 = !DILocalVariable(name: "op", arg: 2, scope: !9824, file: !988, line: 28, type: !1045)
!9828 = !DILocalVariable(name: "iv", arg: 3, scope: !9824, file: !988, line: 29, type: !184)
!9829 = !DILocalVariable(name: "data", scope: !9824, file: !988, line: 31, type: !9684)
!9830 = !DILocation(line: 0, scope: !9824)
!9831 = !DILocation(line: 31, column: 41, scope: !9824)
!9832 = !DILocation(line: 33, column: 30, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9824, file: !988, line: 33, column: 6)
!9834 = !DILocation(line: 34, column: 9, scope: !9833)
!9835 = !DILocation(line: 35, column: 9, scope: !9833)
!9836 = !DILocation(line: 35, column: 21, scope: !9833)
!9837 = !DILocation(line: 37, column: 12, scope: !9833)
!9838 = !DILocation(line: 33, column: 6, scope: !9833)
!9839 = !DILocation(line: 37, column: 25, scope: !9833)
!9840 = !DILocation(line: 33, column: 6, scope: !9824)
!9841 = !DILocation(line: 38, column: 3, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !988, line: 38, column: 3)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !988, line: 38, column: 3)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !988, line: 38, column: 3)
!9845 = distinct !DILexicalBlock(scope: !9846, file: !988, line: 38, column: 3)
!9846 = distinct !DILexicalBlock(scope: !9833, file: !988, line: 37, column: 44)
!9847 = !DILocation(line: 39, column: 3, scope: !9846)
!9848 = !DILocation(line: 43, column: 20, scope: !9824)
!9849 = !DILocation(line: 43, column: 6, scope: !9824)
!9850 = !DILocation(line: 43, column: 14, scope: !9824)
!9851 = !DILocation(line: 45, column: 2, scope: !9824)
!9852 = !DILocation(line: 46, column: 1, scope: !9824)
!9853 = distinct !DISubprogram(name: "do_ctr_op", scope: !988, file: !988, line: 76, type: !1057, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9854)
!9854 = !{!9855, !9856, !9857, !9858, !9859, !9860}
!9855 = !DILocalVariable(name: "ctx", arg: 1, scope: !9853, file: !988, line: 76, type: !1030)
!9856 = !DILocalVariable(name: "op", arg: 2, scope: !9853, file: !988, line: 76, type: !1045)
!9857 = !DILocalVariable(name: "iv", arg: 3, scope: !9853, file: !988, line: 77, type: !184)
!9858 = !DILocalVariable(name: "data", scope: !9853, file: !988, line: 79, type: !9684)
!9859 = !DILocalVariable(name: "ctr", scope: !9853, file: !988, line: 80, type: !311)
!9860 = !DILocalVariable(name: "ivlen", scope: !9853, file: !988, line: 81, type: !125)
!9861 = !DILocation(line: 0, scope: !9853)
!9862 = !DILocation(line: 79, column: 41, scope: !9853)
!9863 = !DILocation(line: 80, column: 2, scope: !9853)
!9864 = !DILocation(line: 80, column: 10, scope: !9853)
!9865 = !DILocation(line: 81, column: 19, scope: !9853)
!9866 = !DILocation(line: 81, column: 14, scope: !9853)
!9867 = !DILocation(line: 81, column: 55, scope: !9853)
!9868 = !DILocation(line: 81, column: 63, scope: !9853)
!9869 = !DILocation(line: 81, column: 26, scope: !9853)
!9870 = !DILocation(line: 86, column: 2, scope: !9853)
!9871 = !DILocation(line: 88, column: 22, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9853, file: !988, line: 88, column: 6)
!9873 = !DILocation(line: 88, column: 35, scope: !9872)
!9874 = !DILocation(line: 88, column: 52, scope: !9872)
!9875 = !DILocation(line: 89, column: 8, scope: !9872)
!9876 = !DILocation(line: 90, column: 11, scope: !9872)
!9877 = !DILocation(line: 88, column: 6, scope: !9872)
!9878 = !DILocation(line: 90, column: 24, scope: !9872)
!9879 = !DILocation(line: 88, column: 6, scope: !9853)
!9880 = !DILocation(line: 91, column: 3, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9882, file: !988, line: 91, column: 3)
!9882 = distinct !DILexicalBlock(scope: !9883, file: !988, line: 91, column: 3)
!9883 = distinct !DILexicalBlock(scope: !9884, file: !988, line: 91, column: 3)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !988, line: 91, column: 3)
!9885 = distinct !DILexicalBlock(scope: !9872, file: !988, line: 90, column: 43)
!9886 = !DILocation(line: 92, column: 3, scope: !9885)
!9887 = !DILocation(line: 96, column: 20, scope: !9853)
!9888 = !DILocation(line: 96, column: 6, scope: !9853)
!9889 = !DILocation(line: 96, column: 14, scope: !9853)
!9890 = !DILocation(line: 98, column: 2, scope: !9853)
!9891 = !DILocation(line: 99, column: 1, scope: !9853)
!9892 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !988, file: !988, line: 101, type: !1064, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9893)
!9893 = !{!9894, !9895, !9896, !9897, !9905, !9906, !9908}
!9894 = !DILocalVariable(name: "ctx", arg: 1, scope: !9892, file: !988, line: 101, type: !1030)
!9895 = !DILocalVariable(name: "aead_op", arg: 2, scope: !9892, file: !988, line: 102, type: !1066)
!9896 = !DILocalVariable(name: "nonce", arg: 3, scope: !9892, file: !988, line: 102, type: !184)
!9897 = !DILocalVariable(name: "ccm", scope: !9892, file: !988, line: 104, type: !9898)
!9898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2542, line: 91, size: 96, elements: !9899)
!9899 = !{!9900, !9903, !9904}
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !9898, file: !2542, line: 92, baseType: !9901, size: 32)
!9901 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !848, line: 66, baseType: !9902)
!9902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !9898, file: !2542, line: 93, baseType: !184, size: 32, offset: 32)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !9898, file: !2542, line: 94, baseType: !32, size: 32, offset: 64)
!9905 = !DILocalVariable(name: "data", scope: !9892, file: !988, line: 105, type: !9684)
!9906 = !DILocalVariable(name: "ccm_param", scope: !9892, file: !988, line: 106, type: !9907)
!9907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!9908 = !DILocalVariable(name: "op", scope: !9892, file: !988, line: 107, type: !1045)
!9909 = !DILocation(line: 0, scope: !9892)
!9910 = !DILocation(line: 104, column: 2, scope: !9892)
!9911 = !DILocation(line: 104, column: 28, scope: !9892)
!9912 = !DILocation(line: 105, column: 41, scope: !9892)
!9913 = !DILocation(line: 106, column: 39, scope: !9892)
!9914 = !DILocation(line: 106, column: 51, scope: !9892)
!9915 = !DILocation(line: 107, column: 35, scope: !9892)
!9916 = !DILocation(line: 109, column: 33, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9892, file: !988, line: 109, column: 6)
!9918 = !DILocation(line: 110, column: 15, scope: !9917)
!9919 = !DILocation(line: 110, column: 4, scope: !9917)
!9920 = !DILocation(line: 111, column: 15, scope: !9917)
!9921 = !DILocation(line: 111, column: 4, scope: !9917)
!9922 = !DILocation(line: 109, column: 6, scope: !9917)
!9923 = !DILocation(line: 111, column: 24, scope: !9917)
!9924 = !DILocation(line: 109, column: 6, scope: !9892)
!9925 = !DILocation(line: 112, column: 3, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !988, line: 112, column: 3)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !988, line: 112, column: 3)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !988, line: 112, column: 3)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !988, line: 112, column: 3)
!9930 = distinct !DILexicalBlock(scope: !9917, file: !988, line: 111, column: 43)
!9931 = !DILocation(line: 113, column: 3, scope: !9930)
!9932 = !DILocation(line: 116, column: 39, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9892, file: !988, line: 116, column: 6)
!9934 = !DILocation(line: 116, column: 52, scope: !9933)
!9935 = !DILocation(line: 117, column: 16, scope: !9933)
!9936 = !DILocation(line: 117, column: 29, scope: !9933)
!9937 = !DILocation(line: 117, column: 41, scope: !9933)
!9938 = !DILocation(line: 118, column: 11, scope: !9933)
!9939 = !DILocation(line: 116, column: 6, scope: !9933)
!9940 = !DILocation(line: 118, column: 25, scope: !9933)
!9941 = !DILocation(line: 116, column: 6, scope: !9892)
!9942 = !DILocation(line: 119, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !988, line: 119, column: 3)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !988, line: 119, column: 3)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !988, line: 119, column: 3)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !988, line: 119, column: 3)
!9947 = distinct !DILexicalBlock(scope: !9933, file: !988, line: 118, column: 44)
!9948 = !DILocation(line: 120, column: 3, scope: !9947)
!9949 = !DILocation(line: 128, column: 15, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9892, file: !988, line: 128, column: 6)
!9951 = !DILocation(line: 128, column: 6, scope: !9950)
!9952 = !DILocation(line: 128, column: 6, scope: !9892)
!9953 = !DILocation(line: 129, column: 28, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !988, line: 128, column: 20)
!9955 = !DILocation(line: 129, column: 42, scope: !9954)
!9956 = !DILocation(line: 129, column: 36, scope: !9954)
!9957 = !DILocation(line: 129, column: 54, scope: !9954)
!9958 = !DILocation(line: 129, column: 3, scope: !9954)
!9959 = !DILocation(line: 130, column: 2, scope: !9954)
!9960 = !DILocation(line: 136, column: 20, scope: !9892)
!9961 = !DILocation(line: 136, column: 33, scope: !9892)
!9962 = !DILocation(line: 136, column: 27, scope: !9892)
!9963 = !DILocation(line: 136, column: 6, scope: !9892)
!9964 = !DILocation(line: 136, column: 14, scope: !9892)
!9965 = !DILocation(line: 138, column: 2, scope: !9892)
!9966 = !DILocation(line: 139, column: 1, scope: !9892)
!9967 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !988, file: !988, line: 48, type: !1057, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !9968)
!9968 = !{!9969, !9970, !9971, !9972}
!9969 = !DILocalVariable(name: "ctx", arg: 1, scope: !9967, file: !988, line: 48, type: !1030)
!9970 = !DILocalVariable(name: "op", arg: 2, scope: !9967, file: !988, line: 48, type: !1045)
!9971 = !DILocalVariable(name: "iv", arg: 3, scope: !9967, file: !988, line: 49, type: !184)
!9972 = !DILocalVariable(name: "data", scope: !9967, file: !988, line: 51, type: !9684)
!9973 = !DILocation(line: 0, scope: !9967)
!9974 = !DILocation(line: 56, column: 16, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9967, file: !988, line: 56, column: 6)
!9976 = !DILocation(line: 56, column: 9, scope: !9975)
!9977 = !DILocation(line: 56, column: 6, scope: !9967)
!9978 = !DILocation(line: 57, column: 3, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !988, line: 57, column: 3)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !988, line: 57, column: 3)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !988, line: 57, column: 3)
!9982 = distinct !DILexicalBlock(scope: !9983, file: !988, line: 57, column: 3)
!9983 = distinct !DILexicalBlock(scope: !9975, file: !988, line: 56, column: 24)
!9984 = !DILocation(line: 58, column: 3, scope: !9983)
!9985 = !DILocation(line: 51, column: 41, scope: !9967)
!9986 = !DILocation(line: 61, column: 30, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9967, file: !988, line: 61, column: 6)
!9988 = !DILocation(line: 62, column: 8, scope: !9987)
!9989 = !DILocation(line: 63, column: 15, scope: !9987)
!9990 = !DILocation(line: 64, column: 8, scope: !9987)
!9991 = !DILocation(line: 64, column: 15, scope: !9987)
!9992 = !DILocation(line: 65, column: 23, scope: !9987)
!9993 = !DILocation(line: 61, column: 6, scope: !9987)
!9994 = !DILocation(line: 65, column: 36, scope: !9987)
!9995 = !DILocation(line: 61, column: 6, scope: !9967)
!9996 = !DILocation(line: 66, column: 3, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !988, line: 66, column: 3)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !988, line: 66, column: 3)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !988, line: 66, column: 3)
!10000 = distinct !DILexicalBlock(scope: !10001, file: !988, line: 66, column: 3)
!10001 = distinct !DILexicalBlock(scope: !9987, file: !988, line: 65, column: 55)
!10002 = !DILocation(line: 67, column: 3, scope: !10001)
!10003 = !DILocation(line: 71, column: 20, scope: !9967)
!10004 = !DILocation(line: 71, column: 6, scope: !9967)
!10005 = !DILocation(line: 71, column: 14, scope: !9967)
!10006 = !DILocation(line: 73, column: 2, scope: !9967)
!10007 = !DILocation(line: 74, column: 1, scope: !9967)
!10008 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !988, file: !988, line: 141, type: !1064, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10009)
!10009 = !{!10010, !10011, !10012, !10013, !10014, !10015, !10016}
!10010 = !DILocalVariable(name: "ctx", arg: 1, scope: !10008, file: !988, line: 141, type: !1030)
!10011 = !DILocalVariable(name: "aead_op", arg: 2, scope: !10008, file: !988, line: 142, type: !1066)
!10012 = !DILocalVariable(name: "nonce", arg: 3, scope: !10008, file: !988, line: 142, type: !184)
!10013 = !DILocalVariable(name: "ccm", scope: !10008, file: !988, line: 144, type: !9898)
!10014 = !DILocalVariable(name: "data", scope: !10008, file: !988, line: 145, type: !9684)
!10015 = !DILocalVariable(name: "ccm_param", scope: !10008, file: !988, line: 146, type: !9907)
!10016 = !DILocalVariable(name: "op", scope: !10008, file: !988, line: 147, type: !1045)
!10017 = !DILocation(line: 0, scope: !10008)
!10018 = !DILocation(line: 144, column: 2, scope: !10008)
!10019 = !DILocation(line: 144, column: 28, scope: !10008)
!10020 = !DILocation(line: 145, column: 41, scope: !10008)
!10021 = !DILocation(line: 146, column: 39, scope: !10008)
!10022 = !DILocation(line: 146, column: 51, scope: !10008)
!10023 = !DILocation(line: 147, column: 35, scope: !10008)
!10024 = !DILocation(line: 149, column: 33, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10008, file: !988, line: 149, column: 6)
!10026 = !DILocation(line: 150, column: 17, scope: !10025)
!10027 = !DILocation(line: 150, column: 6, scope: !10025)
!10028 = !DILocation(line: 151, column: 17, scope: !10025)
!10029 = !DILocation(line: 151, column: 6, scope: !10025)
!10030 = !DILocation(line: 149, column: 6, scope: !10025)
!10031 = !DILocation(line: 151, column: 26, scope: !10025)
!10032 = !DILocation(line: 149, column: 6, scope: !10008)
!10033 = !DILocation(line: 152, column: 3, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !988, line: 152, column: 3)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !988, line: 152, column: 3)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !988, line: 152, column: 3)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !988, line: 152, column: 3)
!10038 = distinct !DILexicalBlock(scope: !10025, file: !988, line: 151, column: 45)
!10039 = !DILocation(line: 153, column: 3, scope: !10038)
!10040 = !DILocation(line: 160, column: 15, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10008, file: !988, line: 160, column: 6)
!10042 = !DILocation(line: 160, column: 26, scope: !10041)
!10043 = !DILocation(line: 160, column: 39, scope: !10041)
!10044 = !DILocation(line: 160, column: 33, scope: !10041)
!10045 = !DILocation(line: 160, column: 19, scope: !10041)
!10046 = !DILocation(line: 160, column: 6, scope: !10008)
!10047 = !DILocation(line: 161, column: 3, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !988, line: 161, column: 3)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !988, line: 161, column: 3)
!10050 = distinct !DILexicalBlock(scope: !10051, file: !988, line: 161, column: 3)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !988, line: 161, column: 3)
!10052 = distinct !DILexicalBlock(scope: !10041, file: !988, line: 160, column: 47)
!10053 = !DILocation(line: 162, column: 3, scope: !10052)
!10054 = !DILocation(line: 165, column: 41, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10008, file: !988, line: 165, column: 6)
!10056 = !DILocation(line: 165, column: 54, scope: !10055)
!10057 = !DILocation(line: 166, column: 18, scope: !10055)
!10058 = !DILocation(line: 166, column: 31, scope: !10055)
!10059 = !DILocation(line: 168, column: 33, scope: !10055)
!10060 = !DILocation(line: 168, column: 22, scope: !10055)
!10061 = !DILocation(line: 168, column: 20, scope: !10055)
!10062 = !DILocation(line: 165, column: 6, scope: !10055)
!10063 = !DILocation(line: 169, column: 15, scope: !10055)
!10064 = !DILocation(line: 165, column: 6, scope: !10008)
!10065 = !DILocation(line: 170, column: 3, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !988, line: 170, column: 3)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !988, line: 170, column: 3)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !988, line: 170, column: 3)
!10069 = distinct !DILexicalBlock(scope: !10070, file: !988, line: 170, column: 3)
!10070 = distinct !DILexicalBlock(scope: !10055, file: !988, line: 169, column: 34)
!10071 = !DILocation(line: 171, column: 3, scope: !10070)
!10072 = !DILocation(line: 174, column: 20, scope: !10008)
!10073 = !DILocation(line: 174, column: 40, scope: !10008)
!10074 = !DILocation(line: 174, column: 29, scope: !10008)
!10075 = !DILocation(line: 174, column: 27, scope: !10008)
!10076 = !DILocation(line: 174, column: 6, scope: !10008)
!10077 = !DILocation(line: 174, column: 14, scope: !10008)
!10078 = !DILocation(line: 176, column: 2, scope: !10008)
!10079 = !DILocation(line: 177, column: 1, scope: !10008)
!10080 = distinct !DISubprogram(name: "get_unused_session", scope: !988, file: !988, line: 179, type: !10081, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !10083)
!10081 = !DISubroutineType(types: !10082)
!10082 = !{!125}
!10083 = !{!10084}
!10084 = !DILocalVariable(name: "i", scope: !10080, file: !988, line: 181, type: !125)
!10085 = !DILocation(line: 0, scope: !10080)
!10086 = !DILocation(line: 183, column: 2, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10080, file: !988, line: 183, column: 2)
!10088 = !DILocation(line: 184, column: 26, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !988, line: 184, column: 7)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !988, line: 183, column: 43)
!10091 = distinct !DILexicalBlock(scope: !10087, file: !988, line: 183, column: 2)
!10092 = !DILocation(line: 184, column: 33, scope: !10089)
!10093 = !DILocation(line: 184, column: 7, scope: !10090)
!10094 = !DILocation(line: 185, column: 30, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10089, file: !988, line: 184, column: 39)
!10096 = !DILocation(line: 186, column: 4, scope: !10095)
!10097 = distinct !{!10097, !10086, !10098}
!10098 = !DILocation(line: 188, column: 2, scope: !10087)
!10099 = !DILocation(line: 190, column: 2, scope: !10080)
!10100 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1283, file: !1283, line: 40, type: !1205, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10101)
!10101 = !{!10102, !10103, !10104, !10105, !10107, !10108, !10113, !10114}
!10102 = !DILocalVariable(name: "port", arg: 1, scope: !10100, file: !1283, line: 40, type: !1207)
!10103 = !DILocalVariable(name: "pin", arg: 2, scope: !10100, file: !1283, line: 40, type: !1222)
!10104 = !DILocalVariable(name: "flags", arg: 3, scope: !10100, file: !1283, line: 41, type: !1223)
!10105 = !DILocalVariable(name: "config", scope: !10100, file: !1283, line: 43, type: !10106)
!10106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!10107 = !DILocalVariable(name: "base", scope: !10100, file: !1283, line: 44, type: !1320)
!10108 = !DILocalVariable(name: "pin_cfg", scope: !10100, file: !1283, line: 52, type: !10109)
!10109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1336, line: 59, size: 160, elements: !10110)
!10110 = !{!10111, !10112}
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10109, file: !1336, line: 60, baseType: !1335, size: 128)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10109, file: !1336, line: 61, baseType: !208, size: 32, offset: 128)
!10113 = !DILocalVariable(name: "gpio_cfg_reg", scope: !10100, file: !1283, line: 54, type: !826)
!10114 = !DILocalVariable(name: "reg", scope: !10100, file: !1283, line: 56, type: !208)
!10115 = !DILocation(line: 0, scope: !10100)
!10116 = !DILocation(line: 43, column: 47, scope: !10100)
!10117 = !DILocation(line: 44, column: 28, scope: !10100)
!10118 = !DILocation(line: 46, column: 35, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10100, file: !1283, line: 46, column: 6)
!10120 = !DILocation(line: 52, column: 2, scope: !10100)
!10121 = !DILocation(line: 52, column: 25, scope: !10100)
!10122 = !DILocation(line: 55, column: 32, scope: !10100)
!10123 = !DILocation(line: 55, column: 24, scope: !10100)
!10124 = !DILocation(line: 55, column: 47, scope: !10100)
!10125 = !DILocation(line: 55, column: 3, scope: !10100)
!10126 = !DILocation(line: 56, column: 17, scope: !10100)
!10127 = !DILocation(line: 66, column: 13, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10100, file: !1283, line: 66, column: 6)
!10129 = !DILocation(line: 66, column: 34, scope: !10128)
!10130 = !DILocation(line: 66, column: 6, scope: !10100)
!10131 = !DILocation(line: 70, column: 36, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10100, file: !1283, line: 70, column: 6)
!10133 = !DILocation(line: 70, column: 14, scope: !10132)
!10134 = !DILocation(line: 70, column: 30, scope: !10132)
!10135 = !DILocation(line: 72, column: 7, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10132, file: !1283, line: 70, column: 72)
!10137 = !DILocation(line: 73, column: 8, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !1283, line: 72, column: 38)
!10139 = distinct !DILexicalBlock(scope: !10136, file: !1283, line: 72, column: 7)
!10140 = !DILocation(line: 74, column: 3, scope: !10138)
!10141 = !DILocation(line: 75, column: 8, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10139, file: !1283, line: 74, column: 10)
!10143 = !DILocation(line: 79, column: 7, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10132, file: !1283, line: 77, column: 9)
!10145 = !DILocation(line: 0, scope: !10132)
!10146 = !DILocation(line: 84, column: 27, scope: !10100)
!10147 = !DILocation(line: 84, column: 26, scope: !10100)
!10148 = !DILocation(line: 84, column: 2, scope: !10100)
!10149 = !DILocation(line: 86, column: 10, scope: !10100)
!10150 = !DILocation(line: 86, column: 25, scope: !10100)
!10151 = !DILocation(line: 87, column: 2, scope: !10100)
!10152 = !DILocation(line: 98, column: 2, scope: !10100)
!10153 = !DILocation(line: 99, column: 2, scope: !10100)
!10154 = !DILocation(line: 101, column: 6, scope: !10100)
!10155 = !DILocation(line: 103, column: 14, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !1283, line: 103, column: 7)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !1283, line: 101, column: 35)
!10158 = distinct !DILexicalBlock(scope: !10100, file: !1283, line: 101, column: 6)
!10159 = !DILocation(line: 103, column: 38, scope: !10156)
!10160 = !DILocation(line: 103, column: 7, scope: !10157)
!10161 = !DILocation(line: 105, column: 21, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10156, file: !1283, line: 105, column: 14)
!10163 = !DILocation(line: 105, column: 46, scope: !10162)
!10164 = !DILocation(line: 105, column: 14, scope: !10156)
!10165 = !DILocation(line: 0, scope: !10156)
!10166 = !DILocation(line: 110, column: 3, scope: !10157)
!10167 = !DILocation(line: 111, column: 2, scope: !10157)
!10168 = !DILocation(line: 113, column: 3, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10158, file: !1283, line: 111, column: 9)
!10170 = !DILocation(line: 117, column: 1, scope: !10100)
!10171 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1283, file: !1283, line: 119, type: !10172, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10174)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!125, !1207, !1595}
!10174 = !{!10175, !10176, !10177, !10178}
!10175 = !DILocalVariable(name: "port", arg: 1, scope: !10171, file: !1283, line: 119, type: !1207)
!10176 = !DILocalVariable(name: "value", arg: 2, scope: !10171, file: !1283, line: 119, type: !1595)
!10177 = !DILocalVariable(name: "config", scope: !10171, file: !1283, line: 121, type: !10106)
!10178 = !DILocalVariable(name: "base", scope: !10171, file: !1283, line: 122, type: !1320)
!10179 = !DILocation(line: 0, scope: !10171)
!10180 = !DILocation(line: 121, column: 47, scope: !10171)
!10181 = !DILocation(line: 122, column: 28, scope: !10171)
!10182 = !DILocation(line: 124, column: 11, scope: !10171)
!10183 = !DILocation(line: 124, column: 9, scope: !10171)
!10184 = !DILocation(line: 126, column: 2, scope: !10171)
!10185 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1283, file: !1283, line: 129, type: !1232, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10186)
!10186 = !{!10187, !10188, !10189, !10190, !10191}
!10187 = !DILocalVariable(name: "port", arg: 1, scope: !10185, file: !1283, line: 129, type: !1207)
!10188 = !DILocalVariable(name: "mask", arg: 2, scope: !10185, file: !1283, line: 130, type: !1234)
!10189 = !DILocalVariable(name: "value", arg: 3, scope: !10185, file: !1283, line: 131, type: !1229)
!10190 = !DILocalVariable(name: "config", scope: !10185, file: !1283, line: 133, type: !10106)
!10191 = !DILocalVariable(name: "base", scope: !10185, file: !1283, line: 134, type: !1320)
!10192 = !DILocation(line: 0, scope: !10185)
!10193 = !DILocation(line: 133, column: 47, scope: !10185)
!10194 = !DILocation(line: 134, column: 28, scope: !10185)
!10195 = !DILocation(line: 137, column: 5, scope: !10185)
!10196 = !DILocation(line: 137, column: 32, scope: !10185)
!10197 = !DILocation(line: 137, column: 30, scope: !10185)
!10198 = !DILocation(line: 137, column: 48, scope: !10185)
!10199 = !DILocation(line: 137, column: 39, scope: !10185)
!10200 = !DILocation(line: 136, column: 2, scope: !10185)
!10201 = !DILocation(line: 139, column: 2, scope: !10185)
!10202 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1283, file: !1283, line: 142, type: !1237, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10203)
!10203 = !{!10204, !10205, !10206, !10207}
!10204 = !DILocalVariable(name: "port", arg: 1, scope: !10202, file: !1283, line: 142, type: !1207)
!10205 = !DILocalVariable(name: "pins", arg: 2, scope: !10202, file: !1283, line: 143, type: !1234)
!10206 = !DILocalVariable(name: "config", scope: !10202, file: !1283, line: 145, type: !10106)
!10207 = !DILocalVariable(name: "base", scope: !10202, file: !1283, line: 146, type: !1320)
!10208 = !DILocation(line: 0, scope: !10202)
!10209 = !DILocation(line: 145, column: 47, scope: !10202)
!10210 = !DILocation(line: 146, column: 28, scope: !10202)
!10211 = !DILocation(line: 148, column: 29, scope: !10202)
!10212 = !DILocation(line: 148, column: 54, scope: !10202)
!10213 = !DILocation(line: 148, column: 2, scope: !10202)
!10214 = !DILocation(line: 150, column: 2, scope: !10202)
!10215 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1283, file: !1283, line: 153, type: !1237, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10216)
!10216 = !{!10217, !10218, !10219, !10220}
!10217 = !DILocalVariable(name: "port", arg: 1, scope: !10215, file: !1283, line: 153, type: !1207)
!10218 = !DILocalVariable(name: "pins", arg: 2, scope: !10215, file: !1283, line: 154, type: !1234)
!10219 = !DILocalVariable(name: "config", scope: !10215, file: !1283, line: 156, type: !10106)
!10220 = !DILocalVariable(name: "base", scope: !10215, file: !1283, line: 157, type: !1320)
!10221 = !DILocation(line: 0, scope: !10215)
!10222 = !DILocation(line: 156, column: 47, scope: !10215)
!10223 = !DILocation(line: 157, column: 28, scope: !10215)
!10224 = !DILocation(line: 159, column: 29, scope: !10215)
!10225 = !DILocation(line: 159, column: 56, scope: !10215)
!10226 = !DILocation(line: 159, column: 54, scope: !10215)
!10227 = !DILocation(line: 159, column: 2, scope: !10215)
!10228 = !DILocation(line: 161, column: 2, scope: !10215)
!10229 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1283, file: !1283, line: 164, type: !1237, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10230)
!10230 = !{!10231, !10232, !10233, !10234}
!10231 = !DILocalVariable(name: "port", arg: 1, scope: !10229, file: !1283, line: 164, type: !1207)
!10232 = !DILocalVariable(name: "pins", arg: 2, scope: !10229, file: !1283, line: 165, type: !1234)
!10233 = !DILocalVariable(name: "config", scope: !10229, file: !1283, line: 167, type: !10106)
!10234 = !DILocalVariable(name: "base", scope: !10229, file: !1283, line: 168, type: !1320)
!10235 = !DILocation(line: 0, scope: !10229)
!10236 = !DILocation(line: 167, column: 47, scope: !10229)
!10237 = !DILocation(line: 168, column: 28, scope: !10229)
!10238 = !DILocation(line: 170, column: 29, scope: !10229)
!10239 = !DILocation(line: 170, column: 54, scope: !10229)
!10240 = !DILocation(line: 170, column: 2, scope: !10229)
!10241 = !DILocation(line: 172, column: 2, scope: !10229)
!10242 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1283, file: !1283, line: 175, type: !1243, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10243)
!10243 = !{!10244, !10245, !10246, !10247, !10248, !10249, !10250, !10251, !10252, !10253}
!10244 = !DILocalVariable(name: "port", arg: 1, scope: !10242, file: !1283, line: 175, type: !1207)
!10245 = !DILocalVariable(name: "pin", arg: 2, scope: !10242, file: !1283, line: 176, type: !1222)
!10246 = !DILocalVariable(name: "mode", arg: 3, scope: !10242, file: !1283, line: 177, type: !1182)
!10247 = !DILocalVariable(name: "trig", arg: 4, scope: !10242, file: !1283, line: 178, type: !1188)
!10248 = !DILocalVariable(name: "config", scope: !10242, file: !1283, line: 180, type: !10106)
!10249 = !DILocalVariable(name: "base", scope: !10242, file: !1283, line: 181, type: !1320)
!10250 = !DILocalVariable(name: "icr_reg", scope: !10242, file: !1283, line: 182, type: !826)
!10251 = !DILocalVariable(name: "key", scope: !10242, file: !1283, line: 183, type: !32)
!10252 = !DILocalVariable(name: "icr_val", scope: !10242, file: !1283, line: 184, type: !208)
!10253 = !DILocalVariable(name: "shift", scope: !10242, file: !1283, line: 185, type: !150)
!10254 = !DILocation(line: 0, scope: !10242)
!10255 = !DILocation(line: 180, column: 47, scope: !10242)
!10256 = !DILocation(line: 181, column: 28, scope: !10242)
!10257 = !DILocation(line: 187, column: 14, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10242, file: !1283, line: 187, column: 6)
!10259 = !DILocation(line: 187, column: 21, scope: !10258)
!10260 = !DILocation(line: 187, column: 19, scope: !10258)
!10261 = !DILocation(line: 187, column: 31, scope: !10258)
!10262 = !DILocation(line: 188, column: 6, scope: !10258)
!10263 = !DILocation(line: 193, column: 12, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10242, file: !1283, line: 193, column: 6)
!10265 = !DILocation(line: 193, column: 35, scope: !10264)
!10266 = !DILocation(line: 195, column: 42, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10264, file: !1283, line: 195, column: 13)
!10268 = !DILocation(line: 198, column: 19, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10267, file: !1283, line: 198, column: 13)
!10270 = !DILocation(line: 198, column: 43, scope: !10269)
!10271 = !DILocation(line: 0, scope: !10264)
!10272 = !DILocation(line: 205, column: 10, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10242, file: !1283, line: 205, column: 6)
!10274 = !DILocation(line: 205, column: 6, scope: !10242)
!10275 = !DILocation(line: 206, column: 14, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10273, file: !1283, line: 205, column: 17)
!10277 = !DILocation(line: 207, column: 21, scope: !10276)
!10278 = !DILocation(line: 208, column: 2, scope: !10276)
!10279 = !DILocation(line: 208, column: 17, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10273, file: !1283, line: 208, column: 13)
!10281 = !DILocation(line: 208, column: 13, scope: !10273)
!10282 = !DILocation(line: 209, column: 14, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10280, file: !1283, line: 208, column: 24)
!10284 = !DILocation(line: 210, column: 21, scope: !10283)
!10285 = !DILocation(line: 0, scope: !10273)
!10286 = !DILocation(line: 55, column: 2, scope: !10287, inlinedAt: !10293)
!10287 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10290)
!10288 = !DISubroutineType(types: !10289)
!10289 = !{!32}
!10290 = !{!10291, !10292}
!10291 = !DILocalVariable(name: "key", scope: !10287, file: !8182, line: 44, type: !32)
!10292 = !DILocalVariable(name: "tmp", scope: !10287, file: !8182, line: 53, type: !32)
!10293 = distinct !DILocation(line: 215, column: 8, scope: !10242)
!10294 = !{i64 3016693}
!10295 = !DILocation(line: 0, scope: !10287, inlinedAt: !10293)
!10296 = !DILocation(line: 217, column: 14, scope: !10242)
!10297 = !DILocation(line: 217, column: 33, scope: !10242)
!10298 = !DILocation(line: 217, column: 30, scope: !10242)
!10299 = !DILocation(line: 217, column: 25, scope: !10242)
!10300 = !DILocation(line: 217, column: 23, scope: !10242)
!10301 = !DILocation(line: 217, column: 52, scope: !10242)
!10302 = !DILocation(line: 217, column: 41, scope: !10242)
!10303 = !DILocation(line: 217, column: 11, scope: !10242)
!10304 = !DILocation(line: 219, column: 2, scope: !10242)
!10305 = !DILocation(line: 220, column: 2, scope: !10242)
!10306 = !DILocation(line: 221, column: 2, scope: !10242)
!10307 = !DILocalVariable(name: "key", arg: 1, scope: !10308, file: !8182, line: 84, type: !32)
!10308 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10309)
!10309 = !{!10307}
!10310 = !DILocation(line: 0, scope: !10308, inlinedAt: !10311)
!10311 = distinct !DILocation(line: 223, column: 2, scope: !10242)
!10312 = !DILocation(line: 95, column: 2, scope: !10308, inlinedAt: !10311)
!10313 = !{i64 3017510}
!10314 = !DILocation(line: 225, column: 2, scope: !10242)
!10315 = !DILocation(line: 226, column: 1, scope: !10242)
!10316 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1283, file: !1283, line: 228, type: !1247, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10317)
!10317 = !{!10318, !10319, !10320, !10321}
!10318 = !DILocalVariable(name: "port", arg: 1, scope: !10316, file: !1283, line: 228, type: !1207)
!10319 = !DILocalVariable(name: "cb", arg: 2, scope: !10316, file: !1283, line: 229, type: !1249)
!10320 = !DILocalVariable(name: "set", arg: 3, scope: !10316, file: !1283, line: 229, type: !153)
!10321 = !DILocalVariable(name: "data", scope: !10316, file: !1283, line: 231, type: !10322)
!10322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!10323 = !DILocation(line: 0, scope: !10316)
!10324 = !DILocation(line: 231, column: 37, scope: !10316)
!10325 = !DILocation(line: 233, column: 37, scope: !10316)
!10326 = !DILocation(line: 233, column: 9, scope: !10316)
!10327 = !DILocation(line: 233, column: 2, scope: !10316)
!10328 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10329, file: !10329, line: 38, type: !10330, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10333)
!10329 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10330 = !DISubroutineType(types: !10331)
!10331 = !{!125, !10332, !1249, !153}
!10332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!10333 = !{!10334, !10335, !10336}
!10334 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10328, file: !10329, line: 38, type: !10332)
!10335 = !DILocalVariable(name: "callback", arg: 2, scope: !10328, file: !10329, line: 39, type: !1249)
!10336 = !DILocalVariable(name: "set", arg: 3, scope: !10328, file: !10329, line: 40, type: !153)
!10337 = !DILocation(line: 0, scope: !10328)
!10338 = !DILocation(line: 45, column: 7, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10328, file: !10329, line: 45, column: 6)
!10340 = !DILocation(line: 45, column: 6, scope: !10328)
!10341 = !DILocation(line: 46, column: 56, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !10329, line: 46, column: 7)
!10343 = distinct !DILexicalBlock(scope: !10339, file: !10329, line: 45, column: 38)
!10344 = !DILocation(line: 46, column: 8, scope: !10342)
!10345 = !DILocation(line: 46, column: 7, scope: !10343)
!10346 = !DILocation(line: 51, column: 13, scope: !10339)
!10347 = !DILocation(line: 56, column: 43, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !10329, line: 55, column: 11)
!10349 = distinct !DILexicalBlock(scope: !10328, file: !10329, line: 55, column: 6)
!10350 = !DILocation(line: 56, column: 3, scope: !10348)
!10351 = !DILocation(line: 57, column: 2, scope: !10348)
!10352 = !DILocation(line: 60, column: 1, scope: !10328)
!10353 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1254, file: !1254, line: 261, type: !10354, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{!153, !10332}
!10356 = !{!10357}
!10357 = !DILocalVariable(name: "list", arg: 1, scope: !10353, file: !1254, line: 261, type: !10332)
!10358 = !DILocation(line: 0, scope: !10353)
!10359 = !DILocation(line: 261, column: 1, scope: !10353)
!10360 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1254, file: !1254, line: 417, type: !10361, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10363)
!10361 = !DISubroutineType(types: !10362)
!10362 = !{!153, !10332, !1309}
!10363 = !{!10364, !10365, !10366, !10367}
!10364 = !DILocalVariable(name: "list", arg: 1, scope: !10360, file: !1254, line: 417, type: !10332)
!10365 = !DILocalVariable(name: "node", arg: 2, scope: !10360, file: !1254, line: 417, type: !1309)
!10366 = !DILocalVariable(name: "prev", scope: !10360, file: !1254, line: 417, type: !1309)
!10367 = !DILocalVariable(name: "test", scope: !10360, file: !1254, line: 417, type: !1309)
!10368 = !DILocation(line: 0, scope: !10360)
!10369 = !DILocation(line: 417, column: 1, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10360, file: !1254, line: 417, column: 1)
!10371 = !DILocation(line: 417, column: 1, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10370, file: !1254, line: 417, column: 1)
!10373 = !DILocation(line: 417, column: 1, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !1254, line: 417, column: 1)
!10375 = distinct !DILexicalBlock(scope: !10372, file: !1254, line: 417, column: 1)
!10376 = !DILocation(line: 417, column: 1, scope: !10375)
!10377 = distinct !{!10377, !10369, !10369}
!10378 = !DILocation(line: 417, column: 1, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10374, file: !1254, line: 417, column: 1)
!10380 = !DILocation(line: 417, column: 1, scope: !10360)
!10381 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1254, file: !1254, line: 298, type: !10382, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10384)
!10382 = !DISubroutineType(types: !10383)
!10383 = !{null, !10332, !1309}
!10384 = !{!10385, !10386}
!10385 = !DILocalVariable(name: "list", arg: 1, scope: !10381, file: !1254, line: 298, type: !10332)
!10386 = !DILocalVariable(name: "node", arg: 2, scope: !10381, file: !1254, line: 298, type: !1309)
!10387 = !DILocation(line: 0, scope: !10381)
!10388 = !DILocation(line: 298, column: 1, scope: !10381)
!10389 = !DILocation(line: 298, column: 1, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10381, file: !1254, line: 298, column: 1)
!10391 = !DILocation(line: 298, column: 1, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10390, file: !1254, line: 298, column: 1)
!10393 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1254, file: !1254, line: 231, type: !10394, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10396)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!1309, !10332}
!10396 = !{!10397}
!10397 = !DILocalVariable(name: "list", arg: 1, scope: !10393, file: !1254, line: 231, type: !10332)
!10398 = !DILocation(line: 0, scope: !10393)
!10399 = !DILocation(line: 233, column: 15, scope: !10393)
!10400 = !DILocation(line: 233, column: 2, scope: !10393)
!10401 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1254, file: !1254, line: 209, type: !10402, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10404)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{null, !1309, !1309}
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "parent", arg: 1, scope: !10401, file: !1254, line: 209, type: !1309)
!10406 = !DILocalVariable(name: "child", arg: 2, scope: !10401, file: !1254, line: 209, type: !1309)
!10407 = !DILocation(line: 0, scope: !10401)
!10408 = !DILocation(line: 211, column: 10, scope: !10401)
!10409 = !DILocation(line: 211, column: 15, scope: !10401)
!10410 = !DILocation(line: 212, column: 1, scope: !10401)
!10411 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1254, file: !1254, line: 214, type: !10382, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10412)
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "list", arg: 1, scope: !10411, file: !1254, line: 214, type: !10332)
!10414 = !DILocalVariable(name: "node", arg: 2, scope: !10411, file: !1254, line: 214, type: !1309)
!10415 = !DILocation(line: 0, scope: !10411)
!10416 = !DILocation(line: 216, column: 8, scope: !10411)
!10417 = !DILocation(line: 216, column: 13, scope: !10411)
!10418 = !DILocation(line: 217, column: 1, scope: !10411)
!10419 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1254, file: !1254, line: 243, type: !10394, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10420)
!10420 = !{!10421}
!10421 = !DILocalVariable(name: "list", arg: 1, scope: !10419, file: !1254, line: 243, type: !10332)
!10422 = !DILocation(line: 0, scope: !10419)
!10423 = !DILocation(line: 245, column: 15, scope: !10419)
!10424 = !DILocation(line: 245, column: 2, scope: !10419)
!10425 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1254, file: !1254, line: 219, type: !10382, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10426)
!10426 = !{!10427, !10428}
!10427 = !DILocalVariable(name: "list", arg: 1, scope: !10425, file: !1254, line: 219, type: !10332)
!10428 = !DILocalVariable(name: "node", arg: 2, scope: !10425, file: !1254, line: 219, type: !1309)
!10429 = !DILocation(line: 0, scope: !10425)
!10430 = !DILocation(line: 221, column: 8, scope: !10425)
!10431 = !DILocation(line: 221, column: 13, scope: !10425)
!10432 = !DILocation(line: 222, column: 1, scope: !10425)
!10433 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1254, file: !1254, line: 401, type: !10434, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{null, !10332, !1309, !1309}
!10436 = !{!10437, !10438, !10439}
!10437 = !DILocalVariable(name: "list", arg: 1, scope: !10433, file: !1254, line: 401, type: !10332)
!10438 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10433, file: !1254, line: 401, type: !1309)
!10439 = !DILocalVariable(name: "node", arg: 3, scope: !10433, file: !1254, line: 401, type: !1309)
!10440 = !DILocation(line: 0, scope: !10433)
!10441 = !DILocation(line: 401, column: 1, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10433, file: !1254, line: 401, column: 1)
!10443 = !DILocation(line: 0, scope: !10442)
!10444 = !DILocation(line: 401, column: 1, scope: !10433)
!10445 = !DILocation(line: 401, column: 1, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !1254, line: 401, column: 1)
!10447 = !DILocation(line: 401, column: 1, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10446, file: !1254, line: 401, column: 1)
!10449 = !DILocation(line: 401, column: 1, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10448, file: !1254, line: 401, column: 1)
!10451 = !DILocation(line: 401, column: 1, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10442, file: !1254, line: 401, column: 1)
!10453 = !DILocation(line: 401, column: 1, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10452, file: !1254, line: 401, column: 1)
!10455 = !DILocation(line: 401, column: 1, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10454, file: !1254, line: 401, column: 1)
!10457 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1254, file: !1254, line: 285, type: !10458, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10460)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!1309, !1309}
!10460 = !{!10461}
!10461 = !DILocalVariable(name: "node", arg: 1, scope: !10457, file: !1254, line: 285, type: !1309)
!10462 = !DILocation(line: 0, scope: !10457)
!10463 = !DILocation(line: 285, column: 1, scope: !10457)
!10464 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1254, file: !1254, line: 274, type: !10458, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10465)
!10465 = !{!10466}
!10466 = !DILocalVariable(name: "node", arg: 1, scope: !10464, file: !1254, line: 274, type: !1309)
!10467 = !DILocation(line: 0, scope: !10464)
!10468 = !DILocation(line: 274, column: 1, scope: !10464)
!10469 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1254, file: !1254, line: 204, type: !10458, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10470)
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "node", arg: 1, scope: !10469, file: !1254, line: 204, type: !1309)
!10472 = !DILocation(line: 0, scope: !10469)
!10473 = !DILocation(line: 206, column: 15, scope: !10469)
!10474 = !DILocation(line: 206, column: 2, scope: !10469)
!10475 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1194, file: !1194, line: 131, type: !10476, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10478)
!10476 = !DISubroutineType(types: !10477)
!10477 = !{!208, !1320}
!10478 = !{!10479}
!10479 = !DILocalVariable(name: "base", arg: 1, scope: !10475, file: !1194, line: 131, type: !1320)
!10480 = !DILocation(line: 0, scope: !10475)
!10481 = !DILocation(line: 133, column: 12, scope: !10475)
!10482 = !DILocation(line: 133, column: 5, scope: !10475)
!10483 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1194, file: !1194, line: 178, type: !10484, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10486)
!10484 = !DISubroutineType(types: !10485)
!10485 = !{null, !1320, !208}
!10486 = !{!10487, !10488}
!10487 = !DILocalVariable(name: "base", arg: 1, scope: !10483, file: !1194, line: 178, type: !1320)
!10488 = !DILocalVariable(name: "portVal", arg: 2, scope: !10483, file: !1194, line: 178, type: !208)
!10489 = !DILocation(line: 0, scope: !10483)
!10490 = !DILocation(line: 180, column: 5, scope: !10483)
!10491 = !DILocation(line: 180, column: 23, scope: !10483)
!10492 = !DILocation(line: 181, column: 1, scope: !10483)
!10493 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1283, file: !1283, line: 236, type: !10494, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10496)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{null, !1207}
!10496 = !{!10497, !10498, !10499, !10500}
!10497 = !DILocalVariable(name: "port", arg: 1, scope: !10493, file: !1283, line: 236, type: !1207)
!10498 = !DILocalVariable(name: "config", scope: !10493, file: !1283, line: 238, type: !10106)
!10499 = !DILocalVariable(name: "data", scope: !10493, file: !1283, line: 239, type: !10322)
!10500 = !DILocalVariable(name: "int_status", scope: !10493, file: !1283, line: 240, type: !208)
!10501 = !DILocation(line: 0, scope: !10493)
!10502 = !DILocation(line: 238, column: 47, scope: !10493)
!10503 = !DILocation(line: 239, column: 37, scope: !10493)
!10504 = !DILocation(line: 242, column: 23, scope: !10493)
!10505 = !DILocation(line: 242, column: 29, scope: !10493)
!10506 = !DILocation(line: 244, column: 20, scope: !10493)
!10507 = !DILocation(line: 246, column: 29, scope: !10493)
!10508 = !DILocation(line: 246, column: 2, scope: !10493)
!10509 = !DILocation(line: 247, column: 1, scope: !10493)
!10510 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10329, file: !10329, line: 69, type: !10511, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10513)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{null, !10332, !1207, !208}
!10513 = !{!10514, !10515, !10516, !10517, !10518}
!10514 = !DILocalVariable(name: "list", arg: 1, scope: !10510, file: !10329, line: 69, type: !10332)
!10515 = !DILocalVariable(name: "port", arg: 2, scope: !10510, file: !10329, line: 70, type: !1207)
!10516 = !DILocalVariable(name: "pins", arg: 3, scope: !10510, file: !10329, line: 71, type: !208)
!10517 = !DILocalVariable(name: "cb", scope: !10510, file: !10329, line: 73, type: !1249)
!10518 = !DILocalVariable(name: "tmp", scope: !10510, file: !10329, line: 73, type: !1249)
!10519 = !DILocation(line: 0, scope: !10510)
!10520 = !DILocation(line: 75, column: 2, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10510, file: !10329, line: 75, column: 2)
!10522 = !DILocation(line: 0, scope: !10521)
!10523 = !DILocation(line: 76, column: 11, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !10329, line: 76, column: 7)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !10329, line: 75, column: 57)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !10329, line: 75, column: 2)
!10527 = !DILocation(line: 76, column: 20, scope: !10524)
!10528 = !DILocation(line: 76, column: 7, scope: !10525)
!10529 = !DILocation(line: 78, column: 8, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10524, file: !10329, line: 76, column: 28)
!10531 = !DILocation(line: 78, column: 4, scope: !10530)
!10532 = !DILocation(line: 79, column: 3, scope: !10530)
!10533 = !DILocation(line: 75, column: 2, scope: !10526)
!10534 = !DILocation(line: 81, column: 1, scope: !10510)
!10535 = !DILocation(line: 0, scope: !1348)
!10536 = !DILocation(line: 318, column: 1, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !1348, file: !1283, line: 318, column: 1)
!10538 = !DILocation(line: 318, column: 1, scope: !1348)
!10539 = !DILocation(line: 318, column: 1, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !1348, file: !1283, line: 318, column: 1)
!10541 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1560, file: !1560, line: 114, type: !1458, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10542)
!10542 = !{!10543, !10544, !10545, !10546}
!10543 = !DILocalVariable(name: "dev", arg: 1, scope: !10541, file: !1560, line: 114, type: !1460)
!10544 = !DILocalVariable(name: "c", arg: 2, scope: !10541, file: !1560, line: 114, type: !912)
!10545 = !DILocalVariable(name: "uart", scope: !10541, file: !1560, line: 116, type: !1531)
!10546 = !DILocalVariable(name: "ret", scope: !10541, file: !1560, line: 117, type: !125)
!10547 = !DILocation(line: 0, scope: !10541)
!10548 = !DILocation(line: 116, column: 20, scope: !10541)
!10549 = !DILocation(line: 119, column: 6, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !1560, line: 119, column: 6)
!10551 = !DILocation(line: 119, column: 6, scope: !10541)
!10552 = !DILocation(line: 120, column: 8, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10550, file: !1560, line: 119, column: 55)
!10554 = !DILocation(line: 120, column: 6, scope: !10553)
!10555 = !DILocation(line: 122, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10553, file: !1560, line: 122, column: 7)
!10557 = !DILocation(line: 122, column: 7, scope: !10553)
!10558 = !DILocation(line: 123, column: 4, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10556, file: !1560, line: 122, column: 54)
!10560 = !DILocation(line: 124, column: 3, scope: !10559)
!10561 = !DILocation(line: 128, column: 2, scope: !10541)
!10562 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1560, file: !1560, line: 105, type: !1477, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10563)
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "dev", arg: 1, scope: !10562, file: !1560, line: 105, type: !1460)
!10565 = !DILocalVariable(name: "c", arg: 2, scope: !10562, file: !1560, line: 105, type: !151)
!10566 = !DILocalVariable(name: "uart", scope: !10562, file: !1560, line: 107, type: !1531)
!10567 = !DILocation(line: 0, scope: !10562)
!10568 = !DILocation(line: 107, column: 20, scope: !10562)
!10569 = !DILocation(line: 109, column: 2, scope: !10562)
!10570 = !DILocation(line: 109, column: 10, scope: !10562)
!10571 = distinct !{!10571, !10569, !10572}
!10572 = !DILocation(line: 110, column: 2, scope: !10562)
!10573 = !DILocation(line: 111, column: 2, scope: !10562)
!10574 = !DILocation(line: 112, column: 1, scope: !10562)
!10575 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1560, file: !1560, line: 133, type: !1503, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579, !10580, !10581}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10575, file: !1560, line: 133, type: !1460)
!10578 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10575, file: !1560, line: 134, type: !846)
!10579 = !DILocalVariable(name: "size", arg: 3, scope: !10575, file: !1560, line: 135, type: !125)
!10580 = !DILocalVariable(name: "uart", scope: !10575, file: !1560, line: 137, type: !1531)
!10581 = !DILocalVariable(name: "num_tx", scope: !10575, file: !1560, line: 138, type: !32)
!10582 = !DILocation(line: 0, scope: !10575)
!10583 = !DILocation(line: 137, column: 20, scope: !10575)
!10584 = !DILocation(line: 140, column: 26, scope: !10575)
!10585 = !DILocation(line: 140, column: 31, scope: !10575)
!10586 = !DILocation(line: 141, column: 6, scope: !10575)
!10587 = !DILocation(line: 140, column: 2, scope: !10575)
!10588 = !DILocation(line: 143, column: 22, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10575, file: !1560, line: 141, column: 51)
!10590 = !DILocation(line: 143, column: 3, scope: !10589)
!10591 = !DILocation(line: 144, column: 9, scope: !10589)
!10592 = distinct !{!10592, !10587, !10593}
!10593 = !DILocation(line: 145, column: 2, scope: !10575)
!10594 = !DILocation(line: 147, column: 2, scope: !10575)
!10595 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1560, file: !1560, line: 150, type: !1507, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10596)
!10596 = !{!10597, !10598, !10599, !10600, !10601}
!10597 = !DILocalVariable(name: "dev", arg: 1, scope: !10595, file: !1560, line: 150, type: !1460)
!10598 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10595, file: !1560, line: 150, type: !184)
!10599 = !DILocalVariable(name: "size", arg: 3, scope: !10595, file: !1560, line: 151, type: !947)
!10600 = !DILocalVariable(name: "uart", scope: !10595, file: !1560, line: 153, type: !1531)
!10601 = !DILocalVariable(name: "num_rx", scope: !10595, file: !1560, line: 154, type: !32)
!10602 = !DILocation(line: 0, scope: !10595)
!10603 = !DILocation(line: 153, column: 20, scope: !10595)
!10604 = !DILocation(line: 156, column: 26, scope: !10595)
!10605 = !DILocation(line: 156, column: 31, scope: !10595)
!10606 = !DILocation(line: 157, column: 6, scope: !10595)
!10607 = !DILocation(line: 156, column: 2, scope: !10595)
!10608 = !DILocation(line: 159, column: 23, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10595, file: !1560, line: 157, column: 51)
!10610 = !DILocation(line: 159, column: 17, scope: !10609)
!10611 = !DILocation(line: 159, column: 3, scope: !10609)
!10612 = !DILocation(line: 159, column: 21, scope: !10609)
!10613 = distinct !{!10613, !10607, !10614}
!10614 = !DILocation(line: 160, column: 2, scope: !10595)
!10615 = !DILocation(line: 162, column: 6, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10595, file: !1560, line: 162, column: 6)
!10617 = !DILocation(line: 162, column: 6, scope: !10595)
!10618 = !DILocation(line: 163, column: 3, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10616, file: !1560, line: 162, column: 53)
!10620 = !DILocation(line: 164, column: 2, scope: !10619)
!10621 = !DILocation(line: 166, column: 2, scope: !10595)
!10622 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1560, file: !1560, line: 169, type: !1511, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10623)
!10623 = !{!10624, !10625}
!10624 = !DILocalVariable(name: "dev", arg: 1, scope: !10622, file: !1560, line: 169, type: !1460)
!10625 = !DILocalVariable(name: "uart", scope: !10622, file: !1560, line: 171, type: !1531)
!10626 = !DILocation(line: 0, scope: !10622)
!10627 = !DILocation(line: 171, column: 20, scope: !10622)
!10628 = !DILocation(line: 173, column: 2, scope: !10622)
!10629 = !DILocation(line: 174, column: 1, scope: !10622)
!10630 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1560, file: !1560, line: 176, type: !1511, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10631)
!10631 = !{!10632, !10633}
!10632 = !DILocalVariable(name: "dev", arg: 1, scope: !10630, file: !1560, line: 176, type: !1460)
!10633 = !DILocalVariable(name: "uart", scope: !10630, file: !1560, line: 178, type: !1531)
!10634 = !DILocation(line: 0, scope: !10630)
!10635 = !DILocation(line: 178, column: 20, scope: !10630)
!10636 = !DILocation(line: 180, column: 2, scope: !10630)
!10637 = !DILocation(line: 181, column: 1, scope: !10630)
!10638 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1560, file: !1560, line: 183, type: !1481, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10639)
!10639 = !{!10640, !10641}
!10640 = !DILocalVariable(name: "dev", arg: 1, scope: !10638, file: !1560, line: 183, type: !1460)
!10641 = !DILocalVariable(name: "uart", scope: !10638, file: !1560, line: 185, type: !1531)
!10642 = !DILocation(line: 0, scope: !10638)
!10643 = !DILocation(line: 185, column: 20, scope: !10638)
!10644 = !DILocation(line: 187, column: 9, scope: !10638)
!10645 = !DILocation(line: 187, column: 2, scope: !10638)
!10646 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1560, file: !1560, line: 190, type: !1511, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10647)
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "dev", arg: 1, scope: !10646, file: !1560, line: 190, type: !1460)
!10649 = !DILocalVariable(name: "uart", scope: !10646, file: !1560, line: 192, type: !1531)
!10650 = !DILocation(line: 0, scope: !10646)
!10651 = !DILocation(line: 192, column: 20, scope: !10646)
!10652 = !DILocation(line: 194, column: 2, scope: !10646)
!10653 = !DILocation(line: 195, column: 1, scope: !10646)
!10654 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1560, file: !1560, line: 197, type: !1511, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10655)
!10655 = !{!10656, !10657}
!10656 = !DILocalVariable(name: "dev", arg: 1, scope: !10654, file: !1560, line: 197, type: !1460)
!10657 = !DILocalVariable(name: "uart", scope: !10654, file: !1560, line: 199, type: !1531)
!10658 = !DILocation(line: 0, scope: !10654)
!10659 = !DILocation(line: 199, column: 20, scope: !10654)
!10660 = !DILocation(line: 201, column: 2, scope: !10654)
!10661 = !DILocation(line: 202, column: 1, scope: !10654)
!10662 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1560, file: !1560, line: 204, type: !1481, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10663)
!10663 = !{!10664, !10665}
!10664 = !DILocalVariable(name: "dev", arg: 1, scope: !10662, file: !1560, line: 204, type: !1460)
!10665 = !DILocalVariable(name: "uart", scope: !10662, file: !1560, line: 206, type: !1531)
!10666 = !DILocation(line: 0, scope: !10662)
!10667 = !DILocation(line: 206, column: 20, scope: !10662)
!10668 = !DILocation(line: 208, column: 9, scope: !10662)
!10669 = !DILocation(line: 208, column: 2, scope: !10662)
!10670 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1560, file: !1560, line: 211, type: !1511, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10671)
!10671 = !{!10672, !10673}
!10672 = !DILocalVariable(name: "dev", arg: 1, scope: !10670, file: !1560, line: 211, type: !1460)
!10673 = !DILocalVariable(name: "uart", scope: !10670, file: !1560, line: 213, type: !1531)
!10674 = !DILocation(line: 0, scope: !10670)
!10675 = !DILocation(line: 213, column: 20, scope: !10670)
!10676 = !DILocation(line: 215, column: 2, scope: !10670)
!10677 = !DILocation(line: 216, column: 2, scope: !10670)
!10678 = !DILocation(line: 217, column: 1, scope: !10670)
!10679 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1560, file: !1560, line: 219, type: !1511, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10680)
!10680 = !{!10681, !10682}
!10681 = !DILocalVariable(name: "dev", arg: 1, scope: !10679, file: !1560, line: 219, type: !1460)
!10682 = !DILocalVariable(name: "uart", scope: !10679, file: !1560, line: 221, type: !1531)
!10683 = !DILocation(line: 0, scope: !10679)
!10684 = !DILocation(line: 221, column: 20, scope: !10679)
!10685 = !DILocation(line: 223, column: 2, scope: !10679)
!10686 = !DILocation(line: 224, column: 2, scope: !10679)
!10687 = !DILocation(line: 225, column: 1, scope: !10679)
!10688 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1560, file: !1560, line: 227, type: !1481, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10689)
!10689 = !{!10690, !10691}
!10690 = !DILocalVariable(name: "dev", arg: 1, scope: !10688, file: !1560, line: 227, type: !1460)
!10691 = !DILocalVariable(name: "uart", scope: !10688, file: !1560, line: 229, type: !1531)
!10692 = !DILocation(line: 0, scope: !10688)
!10693 = !DILocation(line: 229, column: 20, scope: !10688)
!10694 = !DILocation(line: 231, column: 9, scope: !10688)
!10695 = !DILocation(line: 231, column: 53, scope: !10688)
!10696 = !DILocation(line: 232, column: 3, scope: !10688)
!10697 = !DILocation(line: 231, column: 2, scope: !10688)
!10698 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1560, file: !1560, line: 235, type: !1481, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10699)
!10699 = !{!10700}
!10700 = !DILocalVariable(name: "dev", arg: 1, scope: !10698, file: !1560, line: 235, type: !1460)
!10701 = !DILocation(line: 0, scope: !10698)
!10702 = !DILocation(line: 237, column: 2, scope: !10698)
!10703 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1560, file: !1560, line: 240, type: !1525, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10704)
!10704 = !{!10705, !10706, !10707, !10708}
!10705 = !DILocalVariable(name: "dev", arg: 1, scope: !10703, file: !1560, line: 240, type: !1460)
!10706 = !DILocalVariable(name: "cb", arg: 2, scope: !10703, file: !1560, line: 241, type: !1527)
!10707 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10703, file: !1560, line: 242, type: !124)
!10708 = !DILocalVariable(name: "data", scope: !10703, file: !1560, line: 244, type: !10709)
!10709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!10710 = !DILocation(line: 0, scope: !10703)
!10711 = !DILocation(line: 244, column: 36, scope: !10703)
!10712 = !DILocation(line: 246, column: 8, scope: !10703)
!10713 = !DILocation(line: 246, column: 17, scope: !10703)
!10714 = !DILocation(line: 247, column: 8, scope: !10703)
!10715 = !DILocation(line: 247, column: 16, scope: !10703)
!10716 = !DILocation(line: 248, column: 1, scope: !10703)
!10717 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1367, file: !1367, line: 392, type: !10718, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{!153, !1531, !208}
!10720 = !{!10721, !10722, !10723}
!10721 = !DILocalVariable(name: "base", arg: 1, scope: !10717, file: !1367, line: 392, type: !1531)
!10722 = !DILocalVariable(name: "flag", arg: 2, scope: !10717, file: !1367, line: 392, type: !208)
!10723 = !DILocalVariable(name: "uart_reg", scope: !10717, file: !1367, line: 393, type: !826)
!10724 = !DILocation(line: 0, scope: !10717)
!10725 = !DILocation(line: 395, column: 29, scope: !10717)
!10726 = !DILocation(line: 395, column: 52, scope: !10717)
!10727 = !DILocation(line: 395, column: 44, scope: !10717)
!10728 = !DILocation(line: 395, column: 16, scope: !10717)
!10729 = !DILocation(line: 396, column: 20, scope: !10717)
!10730 = !DILocation(line: 396, column: 39, scope: !10717)
!10731 = !DILocation(line: 396, column: 12, scope: !10717)
!10732 = !DILocation(line: 396, column: 5, scope: !10717)
!10733 = distinct !DISubprogram(name: "UART_Getchar", scope: !1367, file: !1367, line: 358, type: !10734, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10736)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!150, !1531}
!10736 = !{!10737}
!10737 = !DILocalVariable(name: "base", arg: 1, scope: !10733, file: !1367, line: 358, type: !1531)
!10738 = !DILocation(line: 0, scope: !10733)
!10739 = !DILocation(line: 360, column: 22, scope: !10733)
!10740 = !DILocation(line: 360, column: 12, scope: !10733)
!10741 = !DILocation(line: 360, column: 5, scope: !10733)
!10742 = distinct !DISubprogram(name: "UART_Putchar", scope: !1367, file: !1367, line: 346, type: !10743, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10745)
!10743 = !DISubroutineType(types: !10744)
!10744 = !{null, !1531, !150}
!10745 = !{!10746, !10747}
!10746 = !DILocalVariable(name: "base", arg: 1, scope: !10742, file: !1367, line: 346, type: !1531)
!10747 = !DILocalVariable(name: "data", arg: 2, scope: !10742, file: !1367, line: 346, type: !150)
!10748 = !DILocation(line: 0, scope: !10742)
!10749 = !DILocation(line: 348, column: 28, scope: !10742)
!10750 = !DILocation(line: 348, column: 5, scope: !10742)
!10751 = !DILocation(line: 348, column: 25, scope: !10742)
!10752 = !DILocation(line: 349, column: 1, scope: !10742)
!10753 = !DILocation(line: 0, scope: !1633)
!10754 = !DILocation(line: 339, column: 1, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !1633, file: !1560, line: 339, column: 1)
!10756 = !DILocation(line: 339, column: 1, scope: !1633)
!10757 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1560, file: !1560, line: 260, type: !1511, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10758)
!10758 = !{!10759, !10760}
!10759 = !DILocalVariable(name: "dev", arg: 1, scope: !10757, file: !1560, line: 260, type: !1460)
!10760 = !DILocalVariable(name: "data", scope: !10757, file: !1560, line: 262, type: !10709)
!10761 = !DILocation(line: 0, scope: !10757)
!10762 = !DILocation(line: 262, column: 36, scope: !10757)
!10763 = !DILocation(line: 264, column: 12, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10757, file: !1560, line: 264, column: 6)
!10765 = !DILocation(line: 264, column: 6, scope: !10764)
!10766 = !DILocation(line: 264, column: 6, scope: !10757)
!10767 = !DILocation(line: 265, column: 29, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10764, file: !1560, line: 264, column: 22)
!10769 = !DILocation(line: 265, column: 3, scope: !10768)
!10770 = !DILocation(line: 266, column: 2, scope: !10768)
!10771 = !DILocation(line: 267, column: 1, scope: !10757)
!10772 = distinct !DISubprogram(name: "uart_imx_init", scope: !1560, file: !1560, line: 56, type: !1481, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10773)
!10773 = !{!10774, !10775, !10776, !10777, !10778, !10779}
!10774 = !DILocalVariable(name: "dev", arg: 1, scope: !10772, file: !1560, line: 56, type: !1460)
!10775 = !DILocalVariable(name: "uart", scope: !10772, file: !1560, line: 58, type: !1531)
!10776 = !DILocalVariable(name: "config", scope: !10772, file: !1560, line: 59, type: !1557)
!10777 = !DILocalVariable(name: "old_level", scope: !10772, file: !1560, line: 60, type: !32)
!10778 = !DILocalVariable(name: "err", scope: !10772, file: !1560, line: 61, type: !125)
!10779 = !DILocalVariable(name: "initConfig", scope: !10772, file: !1560, line: 67, type: !10780)
!10780 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1367, line: 57, baseType: !10781)
!10781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1367, line: 49, size: 192, elements: !10782)
!10782 = !{!10783, !10784, !10785, !10786, !10787, !10788}
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10781, file: !1367, line: 51, baseType: !208, size: 32)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10781, file: !1367, line: 52, baseType: !208, size: 32, offset: 32)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10781, file: !1367, line: 53, baseType: !208, size: 32, offset: 64)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10781, file: !1367, line: 54, baseType: !208, size: 32, offset: 96)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10781, file: !1367, line: 55, baseType: !208, size: 32, offset: 128)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10781, file: !1367, line: 56, baseType: !208, size: 32, offset: 160)
!10789 = !DILocation(line: 0, scope: !10772)
!10790 = !DILocation(line: 58, column: 20, scope: !10772)
!10791 = !DILocation(line: 55, column: 2, scope: !10792, inlinedAt: !10796)
!10792 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10793)
!10793 = !{!10794, !10795}
!10794 = !DILocalVariable(name: "key", scope: !10792, file: !8182, line: 44, type: !32)
!10795 = !DILocalVariable(name: "tmp", scope: !10792, file: !8182, line: 53, type: !32)
!10796 = distinct !DILocation(line: 64, column: 14, scope: !10772)
!10797 = !{i64 2847722}
!10798 = !DILocation(line: 0, scope: !10792, inlinedAt: !10796)
!10799 = !DILocation(line: 67, column: 2, scope: !10772)
!10800 = !DILocation(line: 67, column: 21, scope: !10772)
!10801 = !DILocation(line: 67, column: 34, scope: !10772)
!10802 = !DILocation(line: 68, column: 23, scope: !10772)
!10803 = !DILocation(line: 75, column: 36, scope: !10772)
!10804 = !DILocation(line: 75, column: 8, scope: !10772)
!10805 = !DILocation(line: 76, column: 6, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10772, file: !1560, line: 76, column: 6)
!10807 = !DILocation(line: 76, column: 6, scope: !10772)
!10808 = !DILocation(line: 81, column: 26, scope: !10772)
!10809 = !DILocation(line: 81, column: 24, scope: !10772)
!10810 = !DILocation(line: 83, column: 2, scope: !10772)
!10811 = !DILocation(line: 86, column: 2, scope: !10772)
!10812 = !DILocation(line: 87, column: 2, scope: !10772)
!10813 = !DILocalVariable(name: "key", arg: 1, scope: !10814, file: !8182, line: 84, type: !32)
!10814 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10815)
!10815 = !{!10813}
!10816 = !DILocation(line: 0, scope: !10814, inlinedAt: !10817)
!10817 = distinct !DILocation(line: 90, column: 2, scope: !10772)
!10818 = !DILocation(line: 95, column: 2, scope: !10814, inlinedAt: !10817)
!10819 = !{i64 2848539}
!10820 = !DILocation(line: 93, column: 10, scope: !10772)
!10821 = !DILocation(line: 93, column: 2, scope: !10772)
!10822 = !DILocation(line: 97, column: 34, scope: !10772)
!10823 = !DILocation(line: 97, column: 26, scope: !10772)
!10824 = !DILocation(line: 97, column: 2, scope: !10772)
!10825 = !DILocation(line: 100, column: 2, scope: !10772)
!10826 = !DILocation(line: 102, column: 2, scope: !10772)
!10827 = !DILocation(line: 103, column: 1, scope: !10772)
!10828 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1569, file: !1569, line: 342, type: !10829, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10831)
!10829 = !DISubroutineType(types: !10830)
!10830 = !{!125, !1566, !150}
!10831 = !{!10832, !10833, !10834, !10835}
!10832 = !DILocalVariable(name: "config", arg: 1, scope: !10828, file: !1569, line: 342, type: !1566)
!10833 = !DILocalVariable(name: "id", arg: 2, scope: !10828, file: !1569, line: 343, type: !150)
!10834 = !DILocalVariable(name: "ret", scope: !10828, file: !1569, line: 345, type: !125)
!10835 = !DILocalVariable(name: "state", scope: !10828, file: !1569, line: 346, type: !1572)
!10836 = !DILocation(line: 0, scope: !10828)
!10837 = !DILocation(line: 346, column: 2, scope: !10828)
!10838 = !DILocation(line: 348, column: 8, scope: !10828)
!10839 = !DILocation(line: 349, column: 10, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10828, file: !1569, line: 349, column: 6)
!10841 = !DILocation(line: 349, column: 6, scope: !10828)
!10842 = !DILocation(line: 353, column: 44, scope: !10828)
!10843 = !DILocation(line: 353, column: 9, scope: !10828)
!10844 = !DILocation(line: 353, column: 2, scope: !10828)
!10845 = !DILocation(line: 354, column: 1, scope: !10828)
!10846 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1367, file: !1367, line: 444, type: !10743, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10847)
!10847 = !{!10848, !10849}
!10848 = !DILocalVariable(name: "base", arg: 1, scope: !10846, file: !1367, line: 444, type: !1531)
!10849 = !DILocalVariable(name: "watermark", arg: 2, scope: !10846, file: !1367, line: 444, type: !150)
!10850 = !DILocation(line: 0, scope: !10846)
!10851 = !DILocation(line: 447, column: 28, scope: !10846)
!10852 = !DILocation(line: 447, column: 48, scope: !10846)
!10853 = !DILocation(line: 447, column: 72, scope: !10846)
!10854 = !DILocation(line: 447, column: 25, scope: !10846)
!10855 = !DILocation(line: 448, column: 1, scope: !10846)
!10856 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1367, file: !1367, line: 458, type: !10743, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10857)
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "base", arg: 1, scope: !10856, file: !1367, line: 458, type: !1531)
!10859 = !DILocalVariable(name: "watermark", arg: 2, scope: !10856, file: !1367, line: 458, type: !150)
!10860 = !DILocation(line: 0, scope: !10856)
!10861 = !DILocation(line: 461, column: 28, scope: !10856)
!10862 = !DILocation(line: 461, column: 48, scope: !10856)
!10863 = !DILocation(line: 461, column: 72, scope: !10856)
!10864 = !DILocation(line: 461, column: 25, scope: !10856)
!10865 = !DILocation(line: 462, column: 1, scope: !10856)
!10866 = distinct !DISubprogram(name: "UART_Enable", scope: !1367, file: !1367, line: 242, type: !10867, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10869)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{null, !1531}
!10869 = !{!10870}
!10870 = !DILocalVariable(name: "base", arg: 1, scope: !10866, file: !1367, line: 242, type: !1531)
!10871 = !DILocation(line: 0, scope: !10866)
!10872 = !DILocation(line: 244, column: 5, scope: !10866)
!10873 = !DILocation(line: 244, column: 25, scope: !10866)
!10874 = !DILocation(line: 245, column: 1, scope: !10866)
!10875 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1569, file: !1569, line: 316, type: !10876, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1363, retainedNodes: !10878)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!125, !1566, !1572}
!10878 = !{!10879, !10880, !10881}
!10879 = !DILocalVariable(name: "config", arg: 1, scope: !10875, file: !1569, line: 317, type: !1566)
!10880 = !DILocalVariable(name: "state", arg: 2, scope: !10875, file: !1569, line: 318, type: !1572)
!10881 = !DILocalVariable(name: "reg", scope: !10875, file: !1569, line: 320, type: !22)
!10882 = !DILocation(line: 0, scope: !10875)
!10883 = !DILocation(line: 329, column: 39, scope: !10875)
!10884 = !DILocation(line: 329, column: 52, scope: !10875)
!10885 = !DILocation(line: 329, column: 9, scope: !10875)
!10886 = !DILocation(line: 329, column: 2, scope: !10875)
!10887 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1868, file: !1868, line: 270, type: !1874, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10888)
!10888 = !{!10889}
!10889 = !DILocalVariable(name: "dev", arg: 1, scope: !10887, file: !1868, line: 270, type: !1876)
!10890 = !DILocation(line: 0, scope: !10887)
!10891 = !DILocation(line: 274, column: 2, scope: !10887)
!10892 = !DILocation(line: 275, column: 12, scope: !10887)
!10893 = !DILocation(line: 276, column: 15, scope: !10887)
!10894 = !DILocation(line: 277, column: 16, scope: !10887)
!10895 = !DILocation(line: 278, column: 15, scope: !10887)
!10896 = !DILocation(line: 279, column: 16, scope: !10887)
!10897 = !DILocation(line: 282, column: 2, scope: !10887)
!10898 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1793, file: !1793, line: 1814, type: !8101, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10899)
!10899 = !{!10900, !10901}
!10900 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10898, file: !1793, line: 1814, type: !2569)
!10901 = !DILocalVariable(name: "priority", arg: 2, scope: !10898, file: !1793, line: 1814, type: !208)
!10902 = !DILocation(line: 0, scope: !10898)
!10903 = !DILocation(line: 1822, column: 46, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !1793, line: 1821, column: 3)
!10905 = distinct !DILexicalBlock(scope: !10898, file: !1793, line: 1816, column: 7)
!10906 = !DILocation(line: 1824, column: 1, scope: !10898)
!10907 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1868, file: !1868, line: 118, type: !8002, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10908)
!10908 = !{!10909, !10910}
!10909 = !DILocalVariable(name: "arg", arg: 1, scope: !10907, file: !1868, line: 118, type: !124)
!10910 = !DILocalVariable(name: "dticks", scope: !10907, file: !1868, line: 121, type: !208)
!10911 = !DILocation(line: 0, scope: !10907)
!10912 = !DILocation(line: 124, column: 2, scope: !10907)
!10913 = !DILocation(line: 129, column: 17, scope: !10907)
!10914 = !DILocation(line: 129, column: 14, scope: !10907)
!10915 = !DILocation(line: 130, column: 15, scope: !10907)
!10916 = !DILocation(line: 145, column: 27, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10918, file: !1868, line: 132, column: 16)
!10918 = distinct !DILexicalBlock(scope: !10907, file: !1868, line: 132, column: 6)
!10919 = !DILocation(line: 145, column: 25, scope: !10917)
!10920 = !DILocation(line: 145, column: 45, scope: !10917)
!10921 = !DILocation(line: 146, column: 30, scope: !10917)
!10922 = !DILocation(line: 146, column: 20, scope: !10917)
!10923 = !DILocation(line: 147, column: 3, scope: !10917)
!10924 = !DILocation(line: 151, column: 2, scope: !10907)
!10925 = !DILocation(line: 152, column: 1, scope: !10907)
!10926 = distinct !DISubprogram(name: "elapsed", scope: !1868, file: !1868, line: 85, type: !8148, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10927)
!10927 = !{!10928, !10929, !10930}
!10928 = !DILocalVariable(name: "val1", scope: !10926, file: !1868, line: 87, type: !208)
!10929 = !DILocalVariable(name: "ctrl", scope: !10926, file: !1868, line: 88, type: !208)
!10930 = !DILocalVariable(name: "val2", scope: !10926, file: !1868, line: 89, type: !208)
!10931 = !DILocation(line: 87, column: 27, scope: !10926)
!10932 = !DILocation(line: 0, scope: !10926)
!10933 = !DILocation(line: 88, column: 27, scope: !10926)
!10934 = !DILocation(line: 89, column: 27, scope: !10926)
!10935 = !DILocation(line: 105, column: 12, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10926, file: !1868, line: 105, column: 6)
!10937 = !DILocation(line: 106, column: 6, scope: !10936)
!10938 = !DILocation(line: 107, column: 16, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10936, file: !1868, line: 106, column: 24)
!10940 = !DILocation(line: 111, column: 18, scope: !10939)
!10941 = !DILocation(line: 112, column: 2, scope: !10939)
!10942 = !DILocation(line: 114, column: 20, scope: !10926)
!10943 = !DILocation(line: 114, column: 30, scope: !10926)
!10944 = !DILocation(line: 114, column: 28, scope: !10926)
!10945 = !DILocation(line: 114, column: 2, scope: !10926)
!10946 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1868, file: !1868, line: 154, type: !10947, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10949)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{null, !1354, !153}
!10949 = !{!10950, !10951, !10952, !10953, !10954, !10955, !10956, !10961, !10962}
!10950 = !DILocalVariable(name: "ticks", arg: 1, scope: !10946, file: !1868, line: 154, type: !1354)
!10951 = !DILocalVariable(name: "idle", arg: 2, scope: !10946, file: !1868, line: 154, type: !153)
!10952 = !DILocalVariable(name: "delay", scope: !10946, file: !1868, line: 169, type: !208)
!10953 = !DILocalVariable(name: "val1", scope: !10946, file: !1868, line: 170, type: !208)
!10954 = !DILocalVariable(name: "val2", scope: !10946, file: !1868, line: 170, type: !208)
!10955 = !DILocalVariable(name: "last_load_", scope: !10946, file: !1868, line: 171, type: !208)
!10956 = !DILocalVariable(name: "key", scope: !10946, file: !1868, line: 176, type: !10957)
!10957 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1895, line: 106, baseType: !10958)
!10958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1895, line: 32, size: 32, elements: !10959)
!10959 = !{!10960}
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10958, file: !1895, line: 33, baseType: !125, size: 32)
!10961 = !DILocalVariable(name: "pending", scope: !10946, file: !1868, line: 178, type: !208)
!10962 = !DILocalVariable(name: "unannounced", scope: !10946, file: !1868, line: 185, type: !208)
!10963 = !DILocation(line: 0, scope: !10946)
!10964 = !DILocation(line: 162, column: 49, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10946, file: !1868, line: 162, column: 6)
!10966 = !DILocation(line: 163, column: 17, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10965, file: !1868, line: 162, column: 78)
!10968 = !DILocation(line: 164, column: 13, scope: !10967)
!10969 = !DILocation(line: 165, column: 3, scope: !10967)
!10970 = !DILocation(line: 171, column: 24, scope: !10946)
!10971 = !DILocation(line: 173, column: 10, scope: !10946)
!10972 = !DILocation(line: 174, column: 10, scope: !10946)
!10973 = !DILocalVariable(name: "l", arg: 1, scope: !10974, file: !1895, line: 136, type: !10977)
!10974 = distinct !DISubprogram(name: "k_spin_lock", scope: !1895, file: !1895, line: 136, type: !10975, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10978)
!10975 = !DISubroutineType(types: !10976)
!10976 = !{!10957, !10977}
!10977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!10978 = !{!10973, !10979}
!10979 = !DILocalVariable(name: "k", scope: !10974, file: !1895, line: 139, type: !10957)
!10980 = !DILocation(line: 0, scope: !10974, inlinedAt: !10981)
!10981 = distinct !DILocation(line: 176, column: 25, scope: !10946)
!10982 = !DILocation(line: 55, column: 2, scope: !10983, inlinedAt: !10987)
!10983 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !10984)
!10984 = !{!10985, !10986}
!10985 = !DILocalVariable(name: "key", scope: !10983, file: !8182, line: 44, type: !32)
!10986 = !DILocalVariable(name: "tmp", scope: !10983, file: !8182, line: 53, type: !32)
!10987 = distinct !DILocation(line: 145, column: 10, scope: !10974, inlinedAt: !10981)
!10988 = !{i64 2949726}
!10989 = !DILocation(line: 0, scope: !10983, inlinedAt: !10987)
!10990 = !DILocation(line: 178, column: 21, scope: !10946)
!10991 = !DILocation(line: 180, column: 18, scope: !10946)
!10992 = !DILocation(line: 182, column: 14, scope: !10946)
!10993 = !DILocation(line: 183, column: 15, scope: !10946)
!10994 = !DILocation(line: 185, column: 39, scope: !10946)
!10995 = !DILocation(line: 185, column: 37, scope: !10946)
!10996 = !DILocation(line: 187, column: 27, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10946, file: !1868, line: 187, column: 6)
!10998 = !DILocation(line: 187, column: 6, scope: !10946)
!10999 = !DILocation(line: 202, column: 27, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10997, file: !1868, line: 195, column: 9)
!11001 = !DILocation(line: 202, column: 48, scope: !11000)
!11002 = !DILocation(line: 203, column: 9, scope: !11000)
!11003 = !DILocation(line: 204, column: 11, scope: !11000)
!11004 = !DILocation(line: 205, column: 13, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11000, file: !1868, line: 205, column: 7)
!11006 = !DILocation(line: 205, column: 7, scope: !11000)
!11007 = !DILocation(line: 0, scope: !10997)
!11008 = !DILocation(line: 212, column: 18, scope: !10946)
!11009 = !DILocation(line: 214, column: 28, scope: !10946)
!11010 = !DILocation(line: 214, column: 16, scope: !10946)
!11011 = !DILocation(line: 215, column: 15, scope: !10946)
!11012 = !DILocation(line: 227, column: 11, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10946, file: !1868, line: 227, column: 6)
!11014 = !DILocation(line: 227, column: 6, scope: !10946)
!11015 = !DILocation(line: 228, column: 15, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11013, file: !1868, line: 227, column: 19)
!11017 = !DILocation(line: 228, column: 38, scope: !11016)
!11018 = !DILocation(line: 228, column: 24, scope: !11016)
!11019 = !DILocation(line: 229, column: 2, scope: !11016)
!11020 = !DILocation(line: 230, column: 24, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11013, file: !1868, line: 229, column: 9)
!11022 = !DILocation(line: 230, column: 15, scope: !11021)
!11023 = !DILocation(line: 0, scope: !11013)
!11024 = !DILocalVariable(name: "key", arg: 2, scope: !11025, file: !1895, line: 190, type: !10957)
!11025 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1895, file: !1895, line: 189, type: !11026, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !11028)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{null, !10977, !10957}
!11028 = !{!11029, !11024}
!11029 = !DILocalVariable(name: "l", arg: 1, scope: !11025, file: !1895, line: 189, type: !10977)
!11030 = !DILocation(line: 0, scope: !11025, inlinedAt: !11031)
!11031 = distinct !DILocation(line: 232, column: 2, scope: !10946)
!11032 = !DILocalVariable(name: "key", arg: 1, scope: !11033, file: !8182, line: 84, type: !32)
!11033 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !11034)
!11034 = !{!11032}
!11035 = !DILocation(line: 0, scope: !11033, inlinedAt: !11036)
!11036 = distinct !DILocation(line: 215, column: 2, scope: !11025, inlinedAt: !11031)
!11037 = !DILocation(line: 95, column: 2, scope: !11033, inlinedAt: !11036)
!11038 = !{i64 2950543}
!11039 = !DILocation(line: 234, column: 1, scope: !10946)
!11040 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1868, file: !1868, line: 236, type: !8148, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !11041)
!11041 = !{!11042, !11043}
!11042 = !DILocalVariable(name: "key", scope: !11040, file: !1868, line: 242, type: !10957)
!11043 = !DILocalVariable(name: "cyc", scope: !11040, file: !1868, line: 243, type: !208)
!11044 = !DILocation(line: 0, scope: !10974, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 242, column: 25, scope: !11040)
!11046 = !DILocation(line: 55, column: 2, scope: !10983, inlinedAt: !11047)
!11047 = distinct !DILocation(line: 145, column: 10, scope: !10974, inlinedAt: !11045)
!11048 = !DILocation(line: 0, scope: !10983, inlinedAt: !11047)
!11049 = !DILocation(line: 0, scope: !11040)
!11050 = !DILocation(line: 243, column: 17, scope: !11040)
!11051 = !DILocation(line: 243, column: 29, scope: !11040)
!11052 = !DILocation(line: 243, column: 27, scope: !11040)
!11053 = !DILocation(line: 243, column: 43, scope: !11040)
!11054 = !DILocation(line: 243, column: 41, scope: !11040)
!11055 = !DILocation(line: 0, scope: !11025, inlinedAt: !11056)
!11056 = distinct !DILocation(line: 245, column: 2, scope: !11040)
!11057 = !DILocation(line: 0, scope: !11033, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 215, column: 2, scope: !11025, inlinedAt: !11056)
!11059 = !DILocation(line: 95, column: 2, scope: !11033, inlinedAt: !11058)
!11060 = !DILocation(line: 246, column: 13, scope: !11040)
!11061 = !DILocation(line: 246, column: 2, scope: !11040)
!11062 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1868, file: !1868, line: 249, type: !8148, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !11063)
!11063 = !{!11064, !11065}
!11064 = !DILocalVariable(name: "key", scope: !11062, file: !1868, line: 251, type: !10957)
!11065 = !DILocalVariable(name: "ret", scope: !11062, file: !1868, line: 252, type: !208)
!11066 = !DILocation(line: 0, scope: !10974, inlinedAt: !11067)
!11067 = distinct !DILocation(line: 251, column: 25, scope: !11062)
!11068 = !DILocation(line: 55, column: 2, scope: !10983, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 145, column: 10, scope: !10974, inlinedAt: !11067)
!11070 = !DILocation(line: 0, scope: !10983, inlinedAt: !11069)
!11071 = !DILocation(line: 0, scope: !11062)
!11072 = !DILocation(line: 252, column: 17, scope: !11062)
!11073 = !DILocation(line: 252, column: 29, scope: !11062)
!11074 = !DILocation(line: 252, column: 27, scope: !11062)
!11075 = !DILocation(line: 0, scope: !11025, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 254, column: 2, scope: !11062)
!11077 = !DILocation(line: 0, scope: !11033, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 215, column: 2, scope: !11025, inlinedAt: !11076)
!11079 = !DILocation(line: 95, column: 2, scope: !11033, inlinedAt: !11078)
!11080 = !DILocation(line: 255, column: 2, scope: !11062)
!11081 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1868, file: !1868, line: 258, type: !3135, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !1896)
!11082 = !DILocation(line: 260, column: 6, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11081, file: !1868, line: 260, column: 6)
!11084 = !DILocation(line: 260, column: 16, scope: !11083)
!11085 = !DILocation(line: 260, column: 6, scope: !11081)
!11086 = !DILocation(line: 261, column: 17, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11083, file: !1868, line: 260, column: 34)
!11088 = !DILocation(line: 262, column: 2, scope: !11087)
!11089 = !DILocation(line: 263, column: 1, scope: !11081)
!11090 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1868, file: !1868, line: 265, type: !3135, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1644, retainedNodes: !1896)
!11091 = !DILocation(line: 267, column: 16, scope: !11090)
!11092 = !DILocation(line: 268, column: 1, scope: !11090)
!11093 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11094, file: !11094, line: 9, type: !11095, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !11125)
!11094 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11095 = !DISubroutineType(types: !11096)
!11096 = !{!125, !11097, !150, !11124}
!11097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11098, size: 32)
!11098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11099)
!11099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1569, line: 60, size: 64, elements: !11100)
!11100 = !{!11101, !11123}
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11099, file: !1569, line: 69, baseType: !11102, size: 32)
!11102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11103, size: 32)
!11103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11104)
!11104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1569, line: 50, size: 64, elements: !11105)
!11105 = !{!11106, !11121, !11122}
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11104, file: !1569, line: 52, baseType: !11107, size: 32)
!11107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11108, size: 32)
!11108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11109)
!11109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1336, line: 64, baseType: !11110)
!11110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1336, line: 59, size: 160, elements: !11111)
!11111 = !{!11112, !11120}
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11110, file: !1336, line: 60, baseType: !11113, size: 128)
!11113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1336, line: 51, size: 128, elements: !11114)
!11114 = !{!11115, !11116, !11117, !11118, !11119}
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !11113, file: !1336, line: 52, baseType: !208, size: 32)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !11113, file: !1336, line: 53, baseType: !208, size: 32, offset: 32)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !11113, file: !1336, line: 54, baseType: !208, size: 32, offset: 64)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !11113, file: !1336, line: 55, baseType: !150, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !11113, file: !1336, line: 56, baseType: !208, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !11110, file: !1336, line: 61, baseType: !208, size: 32, offset: 128)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11104, file: !1569, line: 54, baseType: !150, size: 8, offset: 32)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11104, file: !1569, line: 56, baseType: !150, size: 8, offset: 40)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11099, file: !1569, line: 71, baseType: !150, size: 8, offset: 32)
!11124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11102, size: 32)
!11125 = !{!11126, !11127, !11128}
!11126 = !DILocalVariable(name: "config", arg: 1, scope: !11093, file: !11094, line: 9, type: !11097)
!11127 = !DILocalVariable(name: "id", arg: 2, scope: !11093, file: !11094, line: 9, type: !150)
!11128 = !DILocalVariable(name: "state", arg: 3, scope: !11093, file: !11094, line: 10, type: !11124)
!11129 = !DILocation(line: 0, scope: !11093)
!11130 = !DILocation(line: 12, column: 20, scope: !11093)
!11131 = !DILocation(line: 13, column: 27, scope: !11093)
!11132 = !DILocation(line: 13, column: 42, scope: !11093)
!11133 = !DILocation(line: 13, column: 19, scope: !11093)
!11134 = !DILocation(line: 13, column: 16, scope: !11093)
!11135 = !DILocation(line: 13, column: 2, scope: !11093)
!11136 = distinct !{!11136, !11135, !11137}
!11137 = !DILocation(line: 19, column: 2, scope: !11093)
!11138 = !DILocation(line: 14, column: 23, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !11094, line: 14, column: 7)
!11140 = distinct !DILexicalBlock(scope: !11093, file: !11094, line: 13, column: 54)
!11141 = !DILocation(line: 14, column: 10, scope: !11139)
!11142 = !DILocation(line: 18, column: 11, scope: !11140)
!11143 = !DILocation(line: 14, column: 7, scope: !11140)
!11144 = !DILocation(line: 22, column: 1, scope: !11093)
!11145 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1909, file: !1909, line: 51, type: !1915, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1905, retainedNodes: !11146)
!11146 = !{!11147}
!11147 = !DILocalVariable(name: "dev", arg: 1, scope: !11145, file: !1909, line: 51, type: !1917)
!11148 = !DILocation(line: 0, scope: !11145)
!11149 = !DILocation(line: 66, column: 2, scope: !11145)
!11150 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1909, file: !1909, line: 10, type: !11151, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1905, retainedNodes: !11167)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{!125, !11153, !150, !22}
!11153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11154, size: 32)
!11154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11155)
!11155 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1336, line: 64, baseType: !11156)
!11156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1336, line: 59, size: 160, elements: !11157)
!11157 = !{!11158, !11166}
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11156, file: !1336, line: 60, baseType: !11159, size: 128)
!11159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1336, line: 51, size: 128, elements: !11160)
!11160 = !{!11161, !11162, !11163, !11164, !11165}
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !11159, file: !1336, line: 52, baseType: !208, size: 32)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !11159, file: !1336, line: 53, baseType: !208, size: 32, offset: 32)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !11159, file: !1336, line: 54, baseType: !208, size: 32, offset: 64)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !11159, file: !1336, line: 55, baseType: !150, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !11159, file: !1336, line: 56, baseType: !208, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !11156, file: !1336, line: 61, baseType: !208, size: 32, offset: 128)
!11167 = !{!11168, !11169, !11170, !11171, !11173, !11176, !11177, !11178, !11179, !11180}
!11168 = !DILocalVariable(name: "pins", arg: 1, scope: !11150, file: !1909, line: 10, type: !11153)
!11169 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11150, file: !1909, line: 10, type: !150)
!11170 = !DILocalVariable(name: "reg", arg: 3, scope: !11150, file: !1909, line: 11, type: !22)
!11171 = !DILocalVariable(name: "i", scope: !11172, file: !1909, line: 14, type: !150)
!11172 = distinct !DILexicalBlock(scope: !11150, file: !1909, line: 14, column: 2)
!11173 = !DILocalVariable(name: "mux_register", scope: !11174, file: !1909, line: 15, type: !208)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !1909, line: 14, column: 41)
!11175 = distinct !DILexicalBlock(scope: !11172, file: !1909, line: 14, column: 2)
!11176 = !DILocalVariable(name: "mux_mode", scope: !11174, file: !1909, line: 16, type: !208)
!11177 = !DILocalVariable(name: "input_register", scope: !11174, file: !1909, line: 17, type: !208)
!11178 = !DILocalVariable(name: "input_daisy", scope: !11174, file: !1909, line: 18, type: !208)
!11179 = !DILocalVariable(name: "config_register", scope: !11174, file: !1909, line: 19, type: !208)
!11180 = !DILocalVariable(name: "pin_ctrl_flags", scope: !11174, file: !1909, line: 20, type: !208)
!11181 = !DILocation(line: 0, scope: !11150)
!11182 = !DILocation(line: 0, scope: !11172)
!11183 = !DILocation(line: 14, column: 25, scope: !11175)
!11184 = !DILocation(line: 14, column: 2, scope: !11172)
!11185 = !DILocation(line: 48, column: 2, scope: !11150)
!11186 = !DILocation(line: 15, column: 42, scope: !11174)
!11187 = !DILocation(line: 0, scope: !11174)
!11188 = !DILocation(line: 16, column: 38, scope: !11174)
!11189 = !DILocation(line: 17, column: 44, scope: !11174)
!11190 = !DILocation(line: 19, column: 45, scope: !11174)
!11191 = !DILocation(line: 20, column: 37, scope: !11174)
!11192 = !DILocation(line: 35, column: 4, scope: !11174)
!11193 = !DILocation(line: 36, column: 4, scope: !11174)
!11194 = !DILocation(line: 35, column: 45, scope: !11174)
!11195 = !DILocation(line: 34, column: 5, scope: !11174)
!11196 = !DILocation(line: 34, column: 53, scope: !11174)
!11197 = !DILocation(line: 37, column: 7, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11174, file: !1909, line: 37, column: 7)
!11199 = !DILocation(line: 37, column: 7, scope: !11174)
!11200 = !DILocation(line: 18, column: 41, scope: !11174)
!11201 = !DILocation(line: 39, column: 5, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !1909, line: 37, column: 23)
!11203 = !DILocation(line: 38, column: 6, scope: !11202)
!11204 = !DILocation(line: 38, column: 56, scope: !11202)
!11205 = !DILocation(line: 40, column: 3, scope: !11202)
!11206 = !DILocation(line: 41, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11174, file: !1909, line: 41, column: 7)
!11208 = !DILocation(line: 41, column: 7, scope: !11174)
!11209 = !DILocation(line: 43, column: 20, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11207, file: !1909, line: 41, column: 24)
!11211 = !DILocation(line: 42, column: 6, scope: !11210)
!11212 = !DILocation(line: 42, column: 57, scope: !11210)
!11213 = !DILocation(line: 44, column: 3, scope: !11210)
!11214 = !DILocation(line: 14, column: 37, scope: !11175)
!11215 = distinct !{!11215, !11184, !11216}
!11216 = !DILocation(line: 47, column: 2, scope: !11172)
!11217 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !11218, file: !11218, line: 43, type: !11219, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !11273)
!11218 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11219 = !DISubroutineType(types: !11220)
!11220 = !{null, !11221, !208, !208, !208}
!11221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11222, size: 32)
!11222 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !702, line: 4575, baseType: !11223)
!11223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 4532, size: 390144, elements: !11224)
!11224 = !{!11225, !11226, !11227, !11228, !11229, !11230, !11238, !11239, !11247, !11248}
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !11223, file: !702, line: 4533, baseType: !706, size: 32)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !11223, file: !702, line: 4534, baseType: !706, size: 32, offset: 32)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !11223, file: !702, line: 4535, baseType: !706, size: 32, offset: 64)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !11223, file: !702, line: 4536, baseType: !706, size: 32, offset: 96)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11223, file: !702, line: 4537, baseType: !711, size: 16256, offset: 128)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11223, file: !702, line: 4543, baseType: !11231, size: 4224, offset: 16384)
!11231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11232, size: 4224, elements: !722)
!11232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11223, file: !702, line: 4538, size: 128, elements: !11233)
!11233 = !{!11234, !11235, !11236, !11237}
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11232, file: !702, line: 4539, baseType: !706, size: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !11232, file: !702, line: 4540, baseType: !706, size: 32, offset: 32)
!11236 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !11232, file: !702, line: 4541, baseType: !706, size: 32, offset: 64)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !11232, file: !702, line: 4542, baseType: !706, size: 32, offset: 96)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11223, file: !702, line: 4544, baseType: !725, size: 110464, offset: 20608)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11223, file: !702, line: 4550, baseType: !11240, size: 24448, offset: 131072)
!11240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11241, size: 24448, elements: !736)
!11241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11223, file: !702, line: 4545, size: 128, elements: !11242)
!11242 = !{!11243, !11244, !11245, !11246}
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11241, file: !702, line: 4546, baseType: !706, size: 32)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !11241, file: !702, line: 4547, baseType: !706, size: 32, offset: 32)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !11241, file: !702, line: 4548, baseType: !706, size: 32, offset: 64)
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !11241, file: !702, line: 4549, baseType: !706, size: 32, offset: 96)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11223, file: !702, line: 4551, baseType: !739, size: 106624, offset: 155520)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11223, file: !702, line: 4574, baseType: !11249, size: 128000, offset: 262144)
!11249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11250, size: 128000, elements: !770)
!11250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11223, file: !702, line: 4552, size: 1024, elements: !11251)
!11251 = !{!11252, !11253, !11254, !11255, !11256, !11257, !11258, !11259, !11260, !11261, !11262, !11263, !11264, !11265, !11266, !11267, !11268, !11269, !11270, !11271, !11272}
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !11250, file: !702, line: 4553, baseType: !706, size: 32)
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !11250, file: !702, line: 4554, baseType: !706, size: 32, offset: 32)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !11250, file: !702, line: 4555, baseType: !706, size: 32, offset: 64)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !11250, file: !702, line: 4556, baseType: !706, size: 32, offset: 96)
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !11250, file: !702, line: 4557, baseType: !706, size: 32, offset: 128)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !11250, file: !702, line: 4558, baseType: !706, size: 32, offset: 160)
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !11250, file: !702, line: 4559, baseType: !706, size: 32, offset: 192)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !11250, file: !702, line: 4560, baseType: !706, size: 32, offset: 224)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !11250, file: !702, line: 4561, baseType: !706, size: 32, offset: 256)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !11250, file: !702, line: 4562, baseType: !706, size: 32, offset: 288)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !11250, file: !702, line: 4563, baseType: !706, size: 32, offset: 320)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !11250, file: !702, line: 4564, baseType: !706, size: 32, offset: 352)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !11250, file: !702, line: 4565, baseType: !706, size: 32, offset: 384)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !11250, file: !702, line: 4566, baseType: !706, size: 32, offset: 416)
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !11250, file: !702, line: 4567, baseType: !706, size: 32, offset: 448)
!11267 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !11250, file: !702, line: 4568, baseType: !706, size: 32, offset: 480)
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11250, file: !702, line: 4569, baseType: !763, size: 384, offset: 512)
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !11250, file: !702, line: 4570, baseType: !706, size: 32, offset: 896)
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !11250, file: !702, line: 4571, baseType: !706, size: 32, offset: 928)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !11250, file: !702, line: 4572, baseType: !706, size: 32, offset: 960)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11250, file: !702, line: 4573, baseType: !706, size: 32, offset: 992)
!11273 = !{!11274, !11275, !11276, !11277}
!11274 = !DILocalVariable(name: "base", arg: 1, scope: !11217, file: !11218, line: 43, type: !11221)
!11275 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11217, file: !11218, line: 43, type: !208)
!11276 = !DILocalVariable(name: "pre", arg: 3, scope: !11217, file: !11218, line: 43, type: !208)
!11277 = !DILocalVariable(name: "post", arg: 4, scope: !11217, file: !11218, line: 43, type: !208)
!11278 = !DILocation(line: 0, scope: !11217)
!11279 = !DILocation(line: 48, column: 25, scope: !11217)
!11280 = !DILocation(line: 48, column: 42, scope: !11217)
!11281 = !DILocation(line: 50, column: 24, scope: !11217)
!11282 = !DILocation(line: 50, column: 56, scope: !11217)
!11283 = !DILocation(line: 49, column: 94, scope: !11217)
!11284 = !DILocation(line: 50, column: 54, scope: !11217)
!11285 = !DILocation(line: 48, column: 22, scope: !11217)
!11286 = !DILocation(line: 51, column: 1, scope: !11217)
!11287 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !11218, file: !11218, line: 59, type: !11288, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !11290)
!11288 = !DISubroutineType(types: !11289)
!11289 = !{null, !11221, !208, !1595, !1595}
!11290 = !{!11291, !11292, !11293, !11294}
!11291 = !DILocalVariable(name: "base", arg: 1, scope: !11287, file: !11218, line: 59, type: !11221)
!11292 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11287, file: !11218, line: 59, type: !208)
!11293 = !DILocalVariable(name: "pre", arg: 3, scope: !11287, file: !11218, line: 59, type: !1595)
!11294 = !DILocalVariable(name: "post", arg: 4, scope: !11287, file: !11218, line: 59, type: !1595)
!11295 = !DILocation(line: 0, scope: !11287)
!11296 = !DILocation(line: 63, column: 13, scope: !11287)
!11297 = !DILocation(line: 63, column: 63, scope: !11287)
!11298 = !DILocation(line: 63, column: 10, scope: !11287)
!11299 = !DILocation(line: 64, column: 14, scope: !11287)
!11300 = !DILocation(line: 64, column: 31, scope: !11287)
!11301 = !DILocation(line: 64, column: 11, scope: !11287)
!11302 = !DILocation(line: 65, column: 1, scope: !11287)
!11303 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !11218, file: !11218, line: 73, type: !11304, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !11306)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{null, !11221, !208, !208, !208, !208}
!11306 = !{!11307, !11308, !11309, !11310, !11311}
!11307 = !DILocalVariable(name: "base", arg: 1, scope: !11303, file: !11218, line: 73, type: !11221)
!11308 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11303, file: !11218, line: 73, type: !208)
!11309 = !DILocalVariable(name: "mux", arg: 3, scope: !11303, file: !11218, line: 73, type: !208)
!11310 = !DILocalVariable(name: "pre", arg: 4, scope: !11303, file: !11218, line: 73, type: !208)
!11311 = !DILocalVariable(name: "post", arg: 5, scope: !11303, file: !11218, line: 73, type: !208)
!11312 = !DILocation(line: 0, scope: !11303)
!11313 = !DILocation(line: 78, column: 25, scope: !11303)
!11314 = !DILocation(line: 78, column: 42, scope: !11303)
!11315 = !DILocation(line: 80, column: 24, scope: !11303)
!11316 = !DILocation(line: 80, column: 51, scope: !11303)
!11317 = !DILocation(line: 80, column: 83, scope: !11303)
!11318 = !DILocation(line: 79, column: 121, scope: !11303)
!11319 = !DILocation(line: 80, column: 49, scope: !11303)
!11320 = !DILocation(line: 80, column: 81, scope: !11303)
!11321 = !DILocation(line: 78, column: 22, scope: !11303)
!11322 = !DILocation(line: 81, column: 1, scope: !11303)
!11323 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !11324, file: !11324, line: 43, type: !11325, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11327)
!11324 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!208, !2881}
!11327 = !{!11328}
!11328 = !DILocalVariable(name: "base", arg: 1, scope: !11323, file: !11324, line: 43, type: !2881)
!11329 = !DILocation(line: 0, scope: !11323)
!11330 = !DILocation(line: 45, column: 9, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11323, file: !11324, line: 45, column: 9)
!11332 = !DILocation(line: 45, column: 9, scope: !11323)
!11333 = !DILocation(line: 48, column: 26, scope: !11323)
!11334 = !DILocation(line: 48, column: 45, scope: !11323)
!11335 = !DILocation(line: 48, column: 23, scope: !11323)
!11336 = !DILocation(line: 48, column: 5, scope: !11323)
!11337 = !DILocation(line: 49, column: 1, scope: !11323)
!11338 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2872, file: !2872, line: 220, type: !11339, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11341)
!11339 = !DISubroutineType(types: !11340)
!11340 = !{!153, !2881, !208}
!11341 = !{!11342, !11343}
!11342 = !DILocalVariable(name: "base", arg: 1, scope: !11338, file: !2872, line: 220, type: !2881)
!11343 = !DILocalVariable(name: "pllControl", arg: 2, scope: !11338, file: !2872, line: 220, type: !208)
!11344 = !DILocation(line: 0, scope: !11338)
!11345 = !DILocation(line: 222, column: 19, scope: !11338)
!11346 = !DILocation(line: 222, column: 58, scope: !11338)
!11347 = !DILocation(line: 222, column: 12, scope: !11338)
!11348 = !DILocation(line: 222, column: 5, scope: !11338)
!11349 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !11324, file: !11324, line: 57, type: !11325, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11350)
!11350 = !{!11351}
!11351 = !DILocalVariable(name: "base", arg: 1, scope: !11349, file: !11324, line: 57, type: !2881)
!11352 = !DILocation(line: 0, scope: !11349)
!11353 = !DILocation(line: 59, column: 9, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11349, file: !11324, line: 59, column: 9)
!11355 = !DILocation(line: 59, column: 9, scope: !11349)
!11356 = !DILocation(line: 62, column: 9, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11349, file: !11324, line: 62, column: 9)
!11358 = !DILocation(line: 62, column: 28, scope: !11357)
!11359 = !DILocation(line: 0, scope: !11357)
!11360 = !DILocation(line: 66, column: 1, scope: !11349)
!11361 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !11324, file: !11324, line: 74, type: !11325, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11362)
!11362 = !{!11363, !11364, !11365, !11366}
!11363 = !DILocalVariable(name: "base", arg: 1, scope: !11361, file: !11324, line: 74, type: !2881)
!11364 = !DILocalVariable(name: "divSelect", scope: !11361, file: !11324, line: 76, type: !150)
!11365 = !DILocalVariable(name: "divTestSelect", scope: !11361, file: !11324, line: 76, type: !150)
!11366 = !DILocalVariable(name: "factor", scope: !11361, file: !11324, line: 77, type: !2943)
!11367 = !DILocation(line: 0, scope: !11361)
!11368 = !DILocation(line: 79, column: 9, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11361, file: !11324, line: 79, column: 9)
!11370 = !DILocation(line: 79, column: 9, scope: !11361)
!11371 = !DILocation(line: 82, column: 17, scope: !11361)
!11372 = !DILocation(line: 83, column: 22, scope: !11361)
!11373 = !DILocation(line: 83, column: 100, scope: !11361)
!11374 = !DILocation(line: 83, column: 21, scope: !11361)
!11375 = !DILocation(line: 86, column: 5, scope: !11361)
!11376 = !DILocation(line: 100, column: 9, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11361, file: !11324, line: 100, column: 9)
!11378 = !DILocation(line: 100, column: 41, scope: !11377)
!11379 = !DILocation(line: 100, column: 9, scope: !11361)
!11380 = !DILocation(line: 102, column: 27, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11377, file: !11324, line: 101, column: 5)
!11382 = !DILocation(line: 102, column: 59, scope: !11381)
!11383 = !DILocation(line: 102, column: 19, scope: !11381)
!11384 = !DILocation(line: 103, column: 27, scope: !11381)
!11385 = !DILocation(line: 103, column: 62, scope: !11381)
!11386 = !DILocation(line: 103, column: 19, scope: !11381)
!11387 = !DILocation(line: 102, column: 95, scope: !11381)
!11388 = !DILocation(line: 104, column: 27, scope: !11381)
!11389 = !DILocation(line: 104, column: 60, scope: !11381)
!11390 = !DILocation(line: 104, column: 19, scope: !11381)
!11391 = !DILocation(line: 103, column: 98, scope: !11381)
!11392 = !DILocation(line: 105, column: 39, scope: !11381)
!11393 = !DILocation(line: 105, column: 27, scope: !11381)
!11394 = !DILocation(line: 105, column: 60, scope: !11381)
!11395 = !DILocation(line: 105, column: 70, scope: !11381)
!11396 = !DILocation(line: 105, column: 57, scope: !11381)
!11397 = !DILocation(line: 105, column: 16, scope: !11381)
!11398 = !DILocation(line: 105, column: 9, scope: !11381)
!11399 = !DILocation(line: 109, column: 28, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11377, file: !11324, line: 108, column: 5)
!11401 = !DILocation(line: 109, column: 48, scope: !11400)
!11402 = !DILocation(line: 109, column: 46, scope: !11400)
!11403 = !DILocation(line: 109, column: 9, scope: !11400)
!11404 = !DILocation(line: 111, column: 1, scope: !11361)
!11405 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !11324, file: !11324, line: 119, type: !11325, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11406)
!11406 = !{!11407}
!11407 = !DILocalVariable(name: "base", arg: 1, scope: !11405, file: !11324, line: 119, type: !2881)
!11408 = !DILocation(line: 0, scope: !11405)
!11409 = !DILocation(line: 121, column: 9, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11405, file: !11324, line: 121, column: 9)
!11411 = !DILocation(line: 125, column: 1, scope: !11405)
!11412 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !11324, file: !11324, line: 133, type: !11325, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11413)
!11413 = !{!11414, !11415, !11416, !11417, !11418}
!11414 = !DILocalVariable(name: "base", arg: 1, scope: !11412, file: !11324, line: 133, type: !2881)
!11415 = !DILocalVariable(name: "divSelect", scope: !11412, file: !11324, line: 135, type: !150)
!11416 = !DILocalVariable(name: "divPostSelect", scope: !11412, file: !11324, line: 135, type: !150)
!11417 = !DILocalVariable(name: "divTestSelect", scope: !11412, file: !11324, line: 135, type: !150)
!11418 = !DILocalVariable(name: "factor", scope: !11412, file: !11324, line: 136, type: !2943)
!11419 = !DILocation(line: 0, scope: !11412)
!11420 = !DILocation(line: 138, column: 9, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11412, file: !11324, line: 138, column: 9)
!11422 = !DILocation(line: 138, column: 9, scope: !11412)
!11423 = !DILocation(line: 141, column: 17, scope: !11412)
!11424 = !DILocation(line: 142, column: 22, scope: !11412)
!11425 = !DILocation(line: 142, column: 101, scope: !11412)
!11426 = !DILocation(line: 142, column: 21, scope: !11412)
!11427 = !DILocation(line: 144, column: 22, scope: !11412)
!11428 = !DILocation(line: 144, column: 104, scope: !11412)
!11429 = !DILocation(line: 144, column: 21, scope: !11412)
!11430 = !DILocation(line: 147, column: 5, scope: !11412)
!11431 = !DILocation(line: 161, column: 5, scope: !11412)
!11432 = !DILocation(line: 175, column: 9, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11412, file: !11324, line: 175, column: 9)
!11434 = !DILocation(line: 175, column: 43, scope: !11433)
!11435 = !DILocation(line: 175, column: 9, scope: !11412)
!11436 = !DILocation(line: 177, column: 27, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11433, file: !11324, line: 176, column: 5)
!11438 = !DILocation(line: 177, column: 61, scope: !11437)
!11439 = !DILocation(line: 177, column: 19, scope: !11437)
!11440 = !DILocation(line: 178, column: 27, scope: !11437)
!11441 = !DILocation(line: 178, column: 64, scope: !11437)
!11442 = !DILocation(line: 178, column: 19, scope: !11437)
!11443 = !DILocation(line: 177, column: 99, scope: !11437)
!11444 = !DILocation(line: 179, column: 27, scope: !11437)
!11445 = !DILocation(line: 179, column: 62, scope: !11437)
!11446 = !DILocation(line: 179, column: 19, scope: !11437)
!11447 = !DILocation(line: 178, column: 102, scope: !11437)
!11448 = !DILocation(line: 180, column: 40, scope: !11437)
!11449 = !DILocation(line: 180, column: 58, scope: !11437)
!11450 = !DILocation(line: 180, column: 27, scope: !11437)
!11451 = !DILocation(line: 180, column: 79, scope: !11437)
!11452 = !DILocation(line: 180, column: 89, scope: !11437)
!11453 = !DILocation(line: 180, column: 76, scope: !11437)
!11454 = !DILocation(line: 180, column: 16, scope: !11437)
!11455 = !DILocation(line: 180, column: 9, scope: !11437)
!11456 = !DILocation(line: 184, column: 29, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11433, file: !11324, line: 183, column: 5)
!11458 = !DILocation(line: 184, column: 47, scope: !11457)
!11459 = !DILocation(line: 184, column: 67, scope: !11457)
!11460 = !DILocation(line: 184, column: 65, scope: !11457)
!11461 = !DILocation(line: 184, column: 9, scope: !11457)
!11462 = !DILocation(line: 186, column: 1, scope: !11412)
!11463 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !11324, file: !11324, line: 194, type: !11325, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11464)
!11464 = !{!11465, !11466, !11467, !11468, !11469}
!11465 = !DILocalVariable(name: "base", arg: 1, scope: !11463, file: !11324, line: 194, type: !2881)
!11466 = !DILocalVariable(name: "divSelect", scope: !11463, file: !11324, line: 196, type: !150)
!11467 = !DILocalVariable(name: "divPostSelect", scope: !11463, file: !11324, line: 196, type: !150)
!11468 = !DILocalVariable(name: "divTestSelect", scope: !11463, file: !11324, line: 196, type: !150)
!11469 = !DILocalVariable(name: "factor", scope: !11463, file: !11324, line: 197, type: !2943)
!11470 = !DILocation(line: 0, scope: !11463)
!11471 = !DILocation(line: 199, column: 9, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11463, file: !11324, line: 199, column: 9)
!11473 = !DILocation(line: 199, column: 9, scope: !11463)
!11474 = !DILocation(line: 202, column: 17, scope: !11463)
!11475 = !DILocation(line: 203, column: 22, scope: !11463)
!11476 = !DILocation(line: 203, column: 101, scope: !11463)
!11477 = !DILocation(line: 203, column: 21, scope: !11463)
!11478 = !DILocation(line: 205, column: 22, scope: !11463)
!11479 = !DILocation(line: 205, column: 104, scope: !11463)
!11480 = !DILocation(line: 205, column: 21, scope: !11463)
!11481 = !DILocation(line: 208, column: 5, scope: !11463)
!11482 = !DILocation(line: 222, column: 5, scope: !11463)
!11483 = !DILocation(line: 236, column: 9, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11463, file: !11324, line: 236, column: 9)
!11485 = !DILocation(line: 236, column: 43, scope: !11484)
!11486 = !DILocation(line: 236, column: 9, scope: !11463)
!11487 = !DILocation(line: 238, column: 27, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !11324, line: 237, column: 5)
!11489 = !DILocation(line: 238, column: 61, scope: !11488)
!11490 = !DILocation(line: 238, column: 19, scope: !11488)
!11491 = !DILocation(line: 239, column: 27, scope: !11488)
!11492 = !DILocation(line: 239, column: 64, scope: !11488)
!11493 = !DILocation(line: 239, column: 19, scope: !11488)
!11494 = !DILocation(line: 238, column: 99, scope: !11488)
!11495 = !DILocation(line: 240, column: 27, scope: !11488)
!11496 = !DILocation(line: 240, column: 62, scope: !11488)
!11497 = !DILocation(line: 240, column: 19, scope: !11488)
!11498 = !DILocation(line: 239, column: 102, scope: !11488)
!11499 = !DILocation(line: 241, column: 40, scope: !11488)
!11500 = !DILocation(line: 241, column: 58, scope: !11488)
!11501 = !DILocation(line: 241, column: 27, scope: !11488)
!11502 = !DILocation(line: 241, column: 79, scope: !11488)
!11503 = !DILocation(line: 241, column: 89, scope: !11488)
!11504 = !DILocation(line: 241, column: 76, scope: !11488)
!11505 = !DILocation(line: 241, column: 16, scope: !11488)
!11506 = !DILocation(line: 241, column: 9, scope: !11488)
!11507 = !DILocation(line: 245, column: 29, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11484, file: !11324, line: 244, column: 5)
!11509 = !DILocation(line: 245, column: 47, scope: !11508)
!11510 = !DILocation(line: 245, column: 67, scope: !11508)
!11511 = !DILocation(line: 245, column: 65, scope: !11508)
!11512 = !DILocation(line: 245, column: 9, scope: !11508)
!11513 = !DILocation(line: 247, column: 1, scope: !11463)
!11514 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !11324, file: !11324, line: 255, type: !11515, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11517)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{!208, !2881, !208}
!11517 = !{!11518, !11519, !11520, !11521}
!11518 = !DILocalVariable(name: "base", arg: 1, scope: !11514, file: !11324, line: 255, type: !2881)
!11519 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11514, file: !11324, line: 255, type: !208)
!11520 = !DILocalVariable(name: "main", scope: !11514, file: !11324, line: 257, type: !208)
!11521 = !DILocalVariable(name: "frac", scope: !11514, file: !11324, line: 257, type: !208)
!11522 = !DILocation(line: 0, scope: !11514)
!11523 = !DILocation(line: 262, column: 12, scope: !11514)
!11524 = !DILocation(line: 263, column: 12, scope: !11514)
!11525 = !DILocation(line: 265, column: 17, scope: !11514)
!11526 = !DILocation(line: 265, column: 24, scope: !11514)
!11527 = !DILocation(line: 265, column: 5, scope: !11514)
!11528 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2872, file: !2872, line: 373, type: !11515, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !11529)
!11529 = !{!11530, !11531}
!11530 = !DILocalVariable(name: "base", arg: 1, scope: !11528, file: !2872, line: 373, type: !2881)
!11531 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11528, file: !2872, line: 373, type: !208)
!11532 = !DILocation(line: 0, scope: !11528)
!11533 = !DILocation(line: 375, column: 13, scope: !11528)
!11534 = !DILocation(line: 375, column: 52, scope: !11528)
!11535 = !DILocation(line: 375, column: 49, scope: !11528)
!11536 = !DILocation(line: 375, column: 85, scope: !11528)
!11537 = !DILocation(line: 375, column: 5, scope: !11528)
!11538 = distinct !DISubprogram(name: "GPIO_Init", scope: !11539, file: !11539, line: 47, type: !11540, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !11564)
!11539 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11540 = !DISubroutineType(types: !11541)
!11541 = !{null, !11542, !11554}
!11542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11543, size: 32)
!11543 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !702, line: 19729, baseType: !11544)
!11544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 19720, size: 256, elements: !11545)
!11545 = !{!11546, !11547, !11548, !11549, !11550, !11551, !11552, !11553}
!11546 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !11544, file: !702, line: 19721, baseType: !706, size: 32)
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !11544, file: !702, line: 19722, baseType: !706, size: 32, offset: 32)
!11548 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !11544, file: !702, line: 19723, baseType: !777, size: 32, offset: 64)
!11549 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11544, file: !702, line: 19724, baseType: !706, size: 32, offset: 96)
!11550 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11544, file: !702, line: 19725, baseType: !706, size: 32, offset: 128)
!11551 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !11544, file: !702, line: 19726, baseType: !706, size: 32, offset: 160)
!11552 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !11544, file: !702, line: 19727, baseType: !706, size: 32, offset: 192)
!11553 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !11544, file: !702, line: 19728, baseType: !706, size: 32, offset: 224)
!11554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11555, size: 32)
!11555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11556)
!11556 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1194, line: 78, baseType: !11557)
!11557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1194, line: 73, size: 96, elements: !11558)
!11558 = !{!11559, !11560, !11562}
!11559 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11557, file: !1194, line: 75, baseType: !208, size: 32)
!11560 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11557, file: !1194, line: 76, baseType: !11561, size: 32, offset: 32)
!11561 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1194, line: 53, baseType: !2947)
!11562 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !11557, file: !1194, line: 77, baseType: !11563, size: 32, offset: 64)
!11563 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1194, line: 63, baseType: !2951)
!11564 = !{!11565, !11566, !11567, !11568}
!11565 = !DILocalVariable(name: "base", arg: 1, scope: !11538, file: !11539, line: 47, type: !11542)
!11566 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11538, file: !11539, line: 47, type: !11554)
!11567 = !DILocalVariable(name: "pin", scope: !11538, file: !11539, line: 49, type: !208)
!11568 = !DILocalVariable(name: "icr", scope: !11538, file: !11539, line: 50, type: !826)
!11569 = !DILocation(line: 0, scope: !11538)
!11570 = !DILocation(line: 53, column: 5, scope: !11538)
!11571 = !DILocation(line: 53, column: 24, scope: !11538)
!11572 = !DILocation(line: 54, column: 2, scope: !11538)
!11573 = !DILocation(line: 54, column: 26, scope: !11538)
!11574 = !DILocation(line: 57, column: 23, scope: !11538)
!11575 = !DILocation(line: 60, column: 21, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11538, file: !11539, line: 60, column: 9)
!11577 = !DILocation(line: 60, column: 31, scope: !11576)
!11578 = !DILocation(line: 0, scope: !11576)
!11579 = !DILocation(line: 60, column: 9, scope: !11538)
!11580 = !DILocation(line: 61, column: 9, scope: !11576)
!11581 = !DILocation(line: 61, column: 29, scope: !11576)
!11582 = !DILocation(line: 63, column: 32, scope: !11576)
!11583 = !DILocation(line: 63, column: 9, scope: !11576)
!11584 = !DILocation(line: 63, column: 29, scope: !11576)
!11585 = !DILocation(line: 66, column: 12, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11538, file: !11539, line: 66, column: 8)
!11587 = !DILocation(line: 66, column: 8, scope: !11538)
!11588 = !DILocation(line: 73, column: 24, scope: !11538)
!11589 = !DILocation(line: 73, column: 5, scope: !11538)
!11590 = !DILocation(line: 77, column: 30, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11592, file: !11539, line: 76, column: 9)
!11592 = distinct !DILexicalBlock(scope: !11538, file: !11539, line: 74, column: 5)
!11593 = !DILocation(line: 77, column: 26, scope: !11591)
!11594 = !DILocation(line: 77, column: 21, scope: !11591)
!11595 = !DILocation(line: 77, column: 18, scope: !11591)
!11596 = !DILocation(line: 78, column: 13, scope: !11591)
!11597 = !DILocation(line: 82, column: 21, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11592, file: !11539, line: 81, column: 9)
!11599 = !DILocation(line: 82, column: 38, scope: !11598)
!11600 = !DILocation(line: 82, column: 34, scope: !11598)
!11601 = !DILocation(line: 82, column: 29, scope: !11598)
!11602 = !DILocation(line: 82, column: 26, scope: !11598)
!11603 = !DILocation(line: 82, column: 53, scope: !11598)
!11604 = !DILocation(line: 82, column: 47, scope: !11598)
!11605 = !DILocation(line: 83, column: 13, scope: !11598)
!11606 = !DILocation(line: 87, column: 21, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11592, file: !11539, line: 86, column: 9)
!11608 = !DILocation(line: 87, column: 38, scope: !11607)
!11609 = !DILocation(line: 87, column: 34, scope: !11607)
!11610 = !DILocation(line: 87, column: 29, scope: !11607)
!11611 = !DILocation(line: 87, column: 26, scope: !11607)
!11612 = !DILocation(line: 87, column: 53, scope: !11607)
!11613 = !DILocation(line: 87, column: 47, scope: !11607)
!11614 = !DILocation(line: 88, column: 13, scope: !11607)
!11615 = !DILocation(line: 92, column: 29, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11592, file: !11539, line: 91, column: 9)
!11617 = !DILocation(line: 92, column: 25, scope: !11616)
!11618 = !DILocation(line: 92, column: 18, scope: !11616)
!11619 = !DILocation(line: 93, column: 13, scope: !11616)
!11620 = !DILocation(line: 0, scope: !11592)
!11621 = !DILocation(line: 100, column: 1, scope: !11538)
!11622 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !11539, file: !11539, line: 111, type: !11623, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !11626)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{null, !11542, !208, !11625}
!11625 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1194, line: 70, baseType: !1193)
!11626 = !{!11627, !11628, !11629}
!11627 = !DILocalVariable(name: "base", arg: 1, scope: !11622, file: !11539, line: 111, type: !11542)
!11628 = !DILocalVariable(name: "pin", arg: 2, scope: !11622, file: !11539, line: 111, type: !208)
!11629 = !DILocalVariable(name: "pinVal", arg: 3, scope: !11622, file: !11539, line: 111, type: !11625)
!11630 = !DILocation(line: 0, scope: !11622)
!11631 = !DILocation(line: 114, column: 16, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11622, file: !11539, line: 114, column: 9)
!11633 = !DILocation(line: 0, scope: !11632)
!11634 = !DILocation(line: 114, column: 9, scope: !11622)
!11635 = !DILocation(line: 116, column: 9, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !11539, line: 115, column: 5)
!11637 = !DILocation(line: 116, column: 27, scope: !11636)
!11638 = !DILocation(line: 117, column: 5, scope: !11636)
!11639 = !DILocation(line: 120, column: 30, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11632, file: !11539, line: 119, column: 5)
!11641 = !DILocation(line: 120, column: 9, scope: !11640)
!11642 = !DILocation(line: 120, column: 27, scope: !11640)
!11643 = !DILocation(line: 122, column: 1, scope: !11622)
!11644 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !11539, file: !11539, line: 133, type: !11645, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !11647)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{null, !11542, !208, !153}
!11647 = !{!11648, !11649, !11650}
!11648 = !DILocalVariable(name: "base", arg: 1, scope: !11644, file: !11539, line: 133, type: !11542)
!11649 = !DILocalVariable(name: "pin", arg: 2, scope: !11644, file: !11539, line: 133, type: !208)
!11650 = !DILocalVariable(name: "enable", arg: 3, scope: !11644, file: !11539, line: 133, type: !153)
!11651 = !DILocation(line: 0, scope: !11644)
!11652 = !DILocation(line: 0, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11644, file: !11539, line: 137, column: 8)
!11654 = !DILocation(line: 137, column: 8, scope: !11644)
!11655 = !DILocation(line: 138, column: 9, scope: !11653)
!11656 = !DILocation(line: 138, column: 28, scope: !11653)
!11657 = !DILocation(line: 140, column: 31, scope: !11653)
!11658 = !DILocation(line: 140, column: 9, scope: !11653)
!11659 = !DILocation(line: 140, column: 28, scope: !11653)
!11660 = !DILocation(line: 141, column: 1, scope: !11644)
!11661 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !11539, file: !11539, line: 150, type: !11645, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !11662)
!11662 = !{!11663, !11664, !11665}
!11663 = !DILocalVariable(name: "base", arg: 1, scope: !11661, file: !11539, line: 150, type: !11542)
!11664 = !DILocalVariable(name: "pin", arg: 2, scope: !11661, file: !11539, line: 150, type: !208)
!11665 = !DILocalVariable(name: "enable", arg: 3, scope: !11661, file: !11539, line: 150, type: !153)
!11666 = !DILocation(line: 0, scope: !11661)
!11667 = !DILocation(line: 0, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11661, file: !11539, line: 154, column: 8)
!11669 = !DILocation(line: 154, column: 8, scope: !11661)
!11670 = !DILocation(line: 155, column: 9, scope: !11668)
!11671 = !DILocation(line: 155, column: 33, scope: !11668)
!11672 = !DILocation(line: 157, column: 36, scope: !11668)
!11673 = !DILocation(line: 157, column: 9, scope: !11668)
!11674 = !DILocation(line: 157, column: 33, scope: !11668)
!11675 = !DILocation(line: 158, column: 1, scope: !11661)
!11676 = distinct !DISubprogram(name: "UART_Init", scope: !11677, file: !11677, line: 47, type: !11678, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11714)
!11677 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11678 = !DISubroutineType(types: !11679)
!11679 = !{null, !11680, !11703}
!11680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11681, size: 32)
!11681 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !702, line: 41342, baseType: !11682)
!11682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 41322, size: 1504, elements: !11683)
!11683 = !{!11684, !11685, !11686, !11687, !11688, !11689, !11690, !11691, !11692, !11693, !11694, !11695, !11696, !11697, !11698, !11699, !11700, !11701, !11702}
!11684 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11682, file: !702, line: 41323, baseType: !777, size: 32)
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11682, file: !702, line: 41324, baseType: !1537, size: 480, offset: 32)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11682, file: !702, line: 41325, baseType: !706, size: 32, offset: 512)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11682, file: !702, line: 41326, baseType: !1537, size: 480, offset: 544)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11682, file: !702, line: 41327, baseType: !706, size: 32, offset: 1024)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11682, file: !702, line: 41328, baseType: !706, size: 32, offset: 1056)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11682, file: !702, line: 41329, baseType: !706, size: 32, offset: 1088)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11682, file: !702, line: 41330, baseType: !706, size: 32, offset: 1120)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11682, file: !702, line: 41331, baseType: !706, size: 32, offset: 1152)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11682, file: !702, line: 41332, baseType: !706, size: 32, offset: 1184)
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11682, file: !702, line: 41333, baseType: !706, size: 32, offset: 1216)
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11682, file: !702, line: 41334, baseType: !706, size: 32, offset: 1248)
!11696 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11682, file: !702, line: 41335, baseType: !706, size: 32, offset: 1280)
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11682, file: !702, line: 41336, baseType: !706, size: 32, offset: 1312)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11682, file: !702, line: 41337, baseType: !706, size: 32, offset: 1344)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11682, file: !702, line: 41338, baseType: !777, size: 32, offset: 1376)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11682, file: !702, line: 41339, baseType: !706, size: 32, offset: 1408)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11682, file: !702, line: 41340, baseType: !706, size: 32, offset: 1440)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11682, file: !702, line: 41341, baseType: !706, size: 32, offset: 1472)
!11703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11704, size: 32)
!11704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11705)
!11705 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1367, line: 57, baseType: !11706)
!11706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1367, line: 49, size: 192, elements: !11707)
!11707 = !{!11708, !11709, !11710, !11711, !11712, !11713}
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !11706, file: !1367, line: 51, baseType: !208, size: 32)
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !11706, file: !1367, line: 52, baseType: !208, size: 32, offset: 32)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !11706, file: !1367, line: 53, baseType: !208, size: 32, offset: 64)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !11706, file: !1367, line: 54, baseType: !208, size: 32, offset: 96)
!11712 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11706, file: !1367, line: 55, baseType: !208, size: 32, offset: 128)
!11713 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11706, file: !1367, line: 56, baseType: !208, size: 32, offset: 160)
!11714 = !{!11715, !11716}
!11715 = !DILocalVariable(name: "base", arg: 1, scope: !11676, file: !11677, line: 47, type: !11680)
!11716 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11676, file: !11677, line: 47, type: !11703)
!11717 = !DILocation(line: 0, scope: !11676)
!11718 = !DILocation(line: 52, column: 5, scope: !11676)
!11719 = !DILocation(line: 52, column: 25, scope: !11676)
!11720 = !DILocation(line: 55, column: 5, scope: !11676)
!11721 = !DILocation(line: 60, column: 41, scope: !11676)
!11722 = !DILocation(line: 61, column: 41, scope: !11676)
!11723 = !DILocation(line: 62, column: 41, scope: !11676)
!11724 = !DILocation(line: 63, column: 41, scope: !11676)
!11725 = !DILocation(line: 60, column: 5, scope: !11676)
!11726 = !DILocation(line: 60, column: 25, scope: !11676)
!11727 = !DILocation(line: 61, column: 52, scope: !11676)
!11728 = !DILocation(line: 62, column: 52, scope: !11676)
!11729 = !DILocation(line: 63, column: 52, scope: !11676)
!11730 = !DILocation(line: 68, column: 5, scope: !11676)
!11731 = !DILocation(line: 68, column: 25, scope: !11676)
!11732 = !DILocation(line: 72, column: 40, scope: !11676)
!11733 = !DILocation(line: 72, column: 63, scope: !11676)
!11734 = !DILocation(line: 72, column: 5, scope: !11676)
!11735 = !DILocation(line: 73, column: 1, scope: !11676)
!11736 = distinct !DISubprogram(name: "UART_Deinit", scope: !11677, file: !11677, line: 82, type: !11737, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{null, !11680}
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "base", arg: 1, scope: !11736, file: !11677, line: 82, type: !11680)
!11741 = !DILocation(line: 0, scope: !11736)
!11742 = !DILocation(line: 85, column: 5, scope: !11736)
!11743 = !DILocation(line: 85, column: 25, scope: !11736)
!11744 = !DILocation(line: 88, column: 26, scope: !11736)
!11745 = !DILocation(line: 89, column: 5, scope: !11736)
!11746 = !DILocation(line: 89, column: 26, scope: !11736)
!11747 = !DILocation(line: 90, column: 5, scope: !11736)
!11748 = !DILocation(line: 90, column: 26, scope: !11736)
!11749 = !DILocation(line: 93, column: 5, scope: !11736)
!11750 = !DILocation(line: 93, column: 26, scope: !11736)
!11751 = !DILocation(line: 94, column: 5, scope: !11736)
!11752 = !DILocation(line: 94, column: 26, scope: !11736)
!11753 = !DILocation(line: 95, column: 5, scope: !11736)
!11754 = !DILocation(line: 95, column: 26, scope: !11736)
!11755 = !DILocation(line: 96, column: 5, scope: !11736)
!11756 = !DILocation(line: 96, column: 26, scope: !11736)
!11757 = !DILocation(line: 97, column: 5, scope: !11736)
!11758 = !DILocation(line: 97, column: 26, scope: !11736)
!11759 = !DILocation(line: 98, column: 5, scope: !11736)
!11760 = !DILocation(line: 98, column: 26, scope: !11736)
!11761 = !DILocation(line: 99, column: 5, scope: !11736)
!11762 = !DILocation(line: 99, column: 26, scope: !11736)
!11763 = !DILocation(line: 103, column: 25, scope: !11736)
!11764 = !DILocation(line: 104, column: 5, scope: !11736)
!11765 = !DILocation(line: 104, column: 14, scope: !11736)
!11766 = !DILocation(line: 104, column: 34, scope: !11736)
!11767 = !DILocation(line: 104, column: 12, scope: !11736)
!11768 = distinct !{!11768, !11764, !11769}
!11769 = !DILocation(line: 104, column: 57, scope: !11736)
!11770 = !DILocation(line: 105, column: 1, scope: !11736)
!11771 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !11677, file: !11677, line: 113, type: !11772, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11774)
!11772 = !DISubroutineType(types: !11773)
!11773 = !{null, !11680, !208, !208}
!11774 = !{!11775, !11776, !11777, !11778, !11779, !11780, !11781, !11782, !11783, !11786, !11787}
!11775 = !DILocalVariable(name: "base", arg: 1, scope: !11771, file: !11677, line: 113, type: !11680)
!11776 = !DILocalVariable(name: "clockRate", arg: 2, scope: !11771, file: !11677, line: 113, type: !208)
!11777 = !DILocalVariable(name: "baudRate", arg: 3, scope: !11771, file: !11677, line: 113, type: !208)
!11778 = !DILocalVariable(name: "numerator", scope: !11771, file: !11677, line: 115, type: !208)
!11779 = !DILocalVariable(name: "denominator", scope: !11771, file: !11677, line: 116, type: !208)
!11780 = !DILocalVariable(name: "divisor", scope: !11771, file: !11677, line: 117, type: !208)
!11781 = !DILocalVariable(name: "refFreqDiv", scope: !11771, file: !11677, line: 118, type: !208)
!11782 = !DILocalVariable(name: "divider", scope: !11771, file: !11677, line: 119, type: !208)
!11783 = !DILocalVariable(name: "m", scope: !11784, file: !11677, line: 141, type: !208)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !11677, line: 140, column: 5)
!11785 = distinct !DILexicalBlock(scope: !11771, file: !11677, line: 138, column: 9)
!11786 = !DILocalVariable(name: "n", scope: !11784, file: !11677, line: 142, type: !208)
!11787 = !DILocalVariable(name: "max", scope: !11784, file: !11677, line: 143, type: !208)
!11788 = !DILocation(line: 0, scope: !11771)
!11789 = !DILocation(line: 123, column: 28, scope: !11771)
!11790 = !DILocation(line: 126, column: 24, scope: !11771)
!11791 = !DILocation(line: 126, column: 5, scope: !11771)
!11792 = !DILocation(line: 129, column: 33, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11771, file: !11677, line: 127, column: 5)
!11794 = distinct !{!11794, !11791, !11795}
!11795 = !DILocation(line: 131, column: 5, scope: !11771)
!11796 = !DILocation(line: 133, column: 27, scope: !11771)
!11797 = !DILocation(line: 134, column: 35, scope: !11771)
!11798 = !DILocation(line: 138, column: 20, scope: !11785)
!11799 = !DILocation(line: 138, column: 48, scope: !11785)
!11800 = !DILocation(line: 141, column: 33, scope: !11784)
!11801 = !DILocation(line: 141, column: 38, scope: !11784)
!11802 = !DILocation(line: 141, column: 65, scope: !11784)
!11803 = !DILocation(line: 0, scope: !11784)
!11804 = !DILocation(line: 142, column: 35, scope: !11784)
!11805 = !DILocation(line: 142, column: 40, scope: !11784)
!11806 = !DILocation(line: 142, column: 61, scope: !11784)
!11807 = !DILocation(line: 143, column: 26, scope: !11784)
!11808 = !DILocation(line: 143, column: 24, scope: !11784)
!11809 = !DILocation(line: 144, column: 19, scope: !11784)
!11810 = !DILocation(line: 145, column: 21, scope: !11784)
!11811 = !DILocation(line: 146, column: 15, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11784, file: !11677, line: 146, column: 13)
!11813 = !DILocation(line: 146, column: 13, scope: !11784)
!11814 = !DILocation(line: 148, column: 15, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11784, file: !11677, line: 148, column: 13)
!11816 = !DILocation(line: 148, column: 13, scope: !11784)
!11817 = !DILocation(line: 150, column: 5, scope: !11784)
!11818 = !DILocation(line: 151, column: 26, scope: !11771)
!11819 = !DILocation(line: 151, column: 31, scope: !11771)
!11820 = !DILocation(line: 151, column: 52, scope: !11771)
!11821 = !DILocation(line: 153, column: 5, scope: !11771)
!11822 = !DILocation(line: 0, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11771, file: !11677, line: 154, column: 5)
!11824 = !DILocation(line: 180, column: 5, scope: !11771)
!11825 = !DILocation(line: 180, column: 25, scope: !11771)
!11826 = !DILocation(line: 181, column: 25, scope: !11771)
!11827 = !DILocation(line: 182, column: 27, scope: !11771)
!11828 = !DILocation(line: 182, column: 5, scope: !11771)
!11829 = !DILocation(line: 182, column: 25, scope: !11771)
!11830 = !DILocation(line: 183, column: 27, scope: !11771)
!11831 = !DILocation(line: 183, column: 5, scope: !11771)
!11832 = !DILocation(line: 183, column: 25, scope: !11771)
!11833 = !DILocation(line: 184, column: 28, scope: !11771)
!11834 = !DILocation(line: 184, column: 5, scope: !11771)
!11835 = !DILocation(line: 184, column: 26, scope: !11771)
!11836 = !DILocation(line: 185, column: 1, scope: !11771)
!11837 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !11677, file: !11677, line: 194, type: !11838, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11840)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{null, !11680, !208, !153}
!11840 = !{!11841, !11842, !11843}
!11841 = !DILocalVariable(name: "base", arg: 1, scope: !11837, file: !11677, line: 194, type: !11680)
!11842 = !DILocalVariable(name: "direction", arg: 2, scope: !11837, file: !11677, line: 194, type: !208)
!11843 = !DILocalVariable(name: "invert", arg: 3, scope: !11837, file: !11677, line: 194, type: !153)
!11844 = !DILocation(line: 0, scope: !11837)
!11845 = !DILocation(line: 0, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11837, file: !11677, line: 198, column: 9)
!11847 = !DILocation(line: 198, column: 9, scope: !11837)
!11848 = !DILocation(line: 200, column: 13, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11846, file: !11677, line: 199, column: 5)
!11850 = !DILocation(line: 201, column: 13, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11849, file: !11677, line: 200, column: 13)
!11852 = !DILocation(line: 201, column: 33, scope: !11851)
!11853 = !DILocation(line: 202, column: 23, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11849, file: !11677, line: 202, column: 13)
!11855 = !DILocation(line: 202, column: 13, scope: !11849)
!11856 = !DILocation(line: 203, column: 13, scope: !11854)
!11857 = !DILocation(line: 203, column: 33, scope: !11854)
!11858 = !DILocation(line: 207, column: 13, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11846, file: !11677, line: 206, column: 5)
!11860 = !DILocation(line: 208, column: 13, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11859, file: !11677, line: 207, column: 13)
!11862 = !DILocation(line: 208, column: 33, scope: !11861)
!11863 = !DILocation(line: 209, column: 23, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11859, file: !11677, line: 209, column: 13)
!11865 = !DILocation(line: 209, column: 13, scope: !11859)
!11866 = !DILocation(line: 210, column: 13, scope: !11864)
!11867 = !DILocation(line: 210, column: 33, scope: !11864)
!11868 = !DILocation(line: 212, column: 1, scope: !11837)
!11869 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !11677, file: !11677, line: 224, type: !11870, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11872)
!11870 = !DISubroutineType(types: !11871)
!11871 = !{null, !11680, !153}
!11872 = !{!11873, !11874}
!11873 = !DILocalVariable(name: "base", arg: 1, scope: !11869, file: !11677, line: 224, type: !11680)
!11874 = !DILocalVariable(name: "enable", arg: 2, scope: !11869, file: !11677, line: 224, type: !153)
!11875 = !DILocation(line: 0, scope: !11869)
!11876 = !DILocation(line: 0, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11869, file: !11677, line: 226, column: 9)
!11878 = !DILocation(line: 226, column: 9, scope: !11869)
!11879 = !DILocation(line: 230, column: 1, scope: !11869)
!11880 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !11677, file: !11677, line: 239, type: !11870, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11881)
!11881 = !{!11882, !11883}
!11882 = !DILocalVariable(name: "base", arg: 1, scope: !11880, file: !11677, line: 239, type: !11680)
!11883 = !DILocalVariable(name: "enable", arg: 2, scope: !11880, file: !11677, line: 239, type: !153)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocation(line: 0, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11880, file: !11677, line: 241, column: 9)
!11887 = !DILocation(line: 241, column: 9, scope: !11880)
!11888 = !DILocation(line: 245, column: 1, scope: !11880)
!11889 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !11677, file: !11677, line: 258, type: !11838, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11890)
!11890 = !{!11891, !11892, !11893, !11894, !11895}
!11891 = !DILocalVariable(name: "base", arg: 1, scope: !11889, file: !11677, line: 258, type: !11680)
!11892 = !DILocalVariable(name: "intSource", arg: 2, scope: !11889, file: !11677, line: 258, type: !208)
!11893 = !DILocalVariable(name: "enable", arg: 3, scope: !11889, file: !11677, line: 258, type: !153)
!11894 = !DILocalVariable(name: "uart_reg", scope: !11889, file: !11677, line: 260, type: !826)
!11895 = !DILocalVariable(name: "uart_mask", scope: !11889, file: !11677, line: 261, type: !208)
!11896 = !DILocation(line: 0, scope: !11889)
!11897 = !DILocation(line: 263, column: 29, scope: !11889)
!11898 = !DILocation(line: 263, column: 57, scope: !11889)
!11899 = !DILocation(line: 263, column: 44, scope: !11889)
!11900 = !DILocation(line: 263, column: 16, scope: !11889)
!11901 = !DILocation(line: 264, column: 34, scope: !11889)
!11902 = !DILocation(line: 264, column: 20, scope: !11889)
!11903 = !DILocation(line: 266, column: 9, scope: !11889)
!11904 = !DILocation(line: 267, column: 19, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11889, file: !11677, line: 266, column: 9)
!11906 = !DILocation(line: 267, column: 9, scope: !11905)
!11907 = !DILocation(line: 269, column: 22, scope: !11905)
!11908 = !DILocation(line: 269, column: 19, scope: !11905)
!11909 = !DILocation(line: 0, scope: !11905)
!11910 = !DILocation(line: 270, column: 1, scope: !11889)
!11911 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !11677, file: !11677, line: 299, type: !11912, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11914)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{null, !11680, !208}
!11914 = !{!11915, !11916, !11917, !11918}
!11915 = !DILocalVariable(name: "base", arg: 1, scope: !11911, file: !11677, line: 299, type: !11680)
!11916 = !DILocalVariable(name: "flag", arg: 2, scope: !11911, file: !11677, line: 299, type: !208)
!11917 = !DILocalVariable(name: "uart_reg", scope: !11911, file: !11677, line: 301, type: !826)
!11918 = !DILocalVariable(name: "uart_mask", scope: !11911, file: !11677, line: 302, type: !208)
!11919 = !DILocation(line: 0, scope: !11911)
!11920 = !DILocation(line: 304, column: 29, scope: !11911)
!11921 = !DILocation(line: 304, column: 52, scope: !11911)
!11922 = !DILocation(line: 304, column: 44, scope: !11911)
!11923 = !DILocation(line: 304, column: 16, scope: !11911)
!11924 = !DILocation(line: 305, column: 29, scope: !11911)
!11925 = !DILocation(line: 305, column: 20, scope: !11911)
!11926 = !DILocation(line: 308, column: 15, scope: !11911)
!11927 = !DILocation(line: 309, column: 1, scope: !11911)
!11928 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !11677, file: !11677, line: 322, type: !11838, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11929)
!11929 = !{!11930, !11931, !11932, !11933, !11934}
!11930 = !DILocalVariable(name: "base", arg: 1, scope: !11928, file: !11677, line: 322, type: !11680)
!11931 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !11928, file: !11677, line: 322, type: !208)
!11932 = !DILocalVariable(name: "enable", arg: 3, scope: !11928, file: !11677, line: 322, type: !153)
!11933 = !DILocalVariable(name: "uart_reg", scope: !11928, file: !11677, line: 324, type: !826)
!11934 = !DILocalVariable(name: "uart_mask", scope: !11928, file: !11677, line: 325, type: !208)
!11935 = !DILocation(line: 0, scope: !11928)
!11936 = !DILocation(line: 327, column: 29, scope: !11928)
!11937 = !DILocation(line: 327, column: 57, scope: !11928)
!11938 = !DILocation(line: 327, column: 44, scope: !11928)
!11939 = !DILocation(line: 327, column: 16, scope: !11928)
!11940 = !DILocation(line: 328, column: 34, scope: !11928)
!11941 = !DILocation(line: 328, column: 20, scope: !11928)
!11942 = !DILocation(line: 329, column: 9, scope: !11928)
!11943 = !DILocation(line: 330, column: 19, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11928, file: !11677, line: 329, column: 9)
!11945 = !DILocation(line: 330, column: 9, scope: !11944)
!11946 = !DILocation(line: 332, column: 22, scope: !11944)
!11947 = !DILocation(line: 332, column: 19, scope: !11944)
!11948 = !DILocation(line: 0, scope: !11944)
!11949 = !DILocation(line: 333, column: 1, scope: !11928)
!11950 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !11677, file: !11677, line: 345, type: !11870, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11951)
!11951 = !{!11952, !11953}
!11952 = !DILocalVariable(name: "base", arg: 1, scope: !11950, file: !11677, line: 345, type: !11680)
!11953 = !DILocalVariable(name: "enable", arg: 2, scope: !11950, file: !11677, line: 345, type: !153)
!11954 = !DILocation(line: 0, scope: !11950)
!11955 = !DILocation(line: 0, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11950, file: !11677, line: 347, column: 9)
!11957 = !DILocation(line: 347, column: 9, scope: !11950)
!11958 = !DILocation(line: 351, column: 1, scope: !11950)
!11959 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !11677, file: !11677, line: 362, type: !11870, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11960)
!11960 = !{!11961, !11962}
!11961 = !DILocalVariable(name: "base", arg: 1, scope: !11959, file: !11677, line: 362, type: !11680)
!11962 = !DILocalVariable(name: "enable", arg: 2, scope: !11959, file: !11677, line: 362, type: !153)
!11963 = !DILocation(line: 0, scope: !11959)
!11964 = !DILocation(line: 0, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11959, file: !11677, line: 364, column: 9)
!11966 = !DILocation(line: 364, column: 9, scope: !11959)
!11967 = !DILocation(line: 368, column: 1, scope: !11959)
!11968 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !11677, file: !11677, line: 379, type: !11870, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11969)
!11969 = !{!11970, !11971}
!11970 = !DILocalVariable(name: "base", arg: 1, scope: !11968, file: !11677, line: 379, type: !11680)
!11971 = !DILocalVariable(name: "active", arg: 2, scope: !11968, file: !11677, line: 379, type: !153)
!11972 = !DILocation(line: 0, scope: !11968)
!11973 = !DILocation(line: 0, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11968, file: !11677, line: 381, column: 9)
!11975 = !DILocation(line: 381, column: 9, scope: !11968)
!11976 = !DILocation(line: 385, column: 1, scope: !11968)
!11977 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !11677, file: !11677, line: 394, type: !11912, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11978)
!11978 = !{!11979, !11980}
!11979 = !DILocalVariable(name: "base", arg: 1, scope: !11977, file: !11677, line: 394, type: !11680)
!11980 = !DILocalVariable(name: "mode", arg: 2, scope: !11977, file: !11677, line: 394, type: !208)
!11981 = !DILocation(line: 0, scope: !11977)
!11982 = !DILocation(line: 398, column: 26, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11977, file: !11677, line: 398, column: 9)
!11984 = !DILocation(line: 0, scope: !11983)
!11985 = !DILocation(line: 398, column: 9, scope: !11977)
!11986 = !DILocation(line: 402, column: 1, scope: !11977)
!11987 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !11677, file: !11677, line: 412, type: !11870, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11988)
!11988 = !{!11989, !11990}
!11989 = !DILocalVariable(name: "base", arg: 1, scope: !11987, file: !11677, line: 412, type: !11680)
!11990 = !DILocalVariable(name: "active", arg: 2, scope: !11987, file: !11677, line: 412, type: !153)
!11991 = !DILocation(line: 0, scope: !11987)
!11992 = !DILocation(line: 0, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11987, file: !11677, line: 414, column: 9)
!11994 = !DILocation(line: 414, column: 9, scope: !11987)
!11995 = !DILocation(line: 418, column: 1, scope: !11987)
!11996 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !11677, file: !11677, line: 427, type: !11870, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !11997)
!11997 = !{!11998, !11999}
!11998 = !DILocalVariable(name: "base", arg: 1, scope: !11996, file: !11677, line: 427, type: !11680)
!11999 = !DILocalVariable(name: "active", arg: 2, scope: !11996, file: !11677, line: 427, type: !153)
!12000 = !DILocation(line: 0, scope: !11996)
!12001 = !DILocation(line: 0, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11996, file: !11677, line: 429, column: 9)
!12003 = !DILocation(line: 429, column: 9, scope: !11996)
!12004 = !DILocation(line: 433, column: 1, scope: !11996)
!12005 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !11677, file: !11677, line: 442, type: !11870, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12006)
!12006 = !{!12007, !12008}
!12007 = !DILocalVariable(name: "base", arg: 1, scope: !12005, file: !11677, line: 442, type: !11680)
!12008 = !DILocalVariable(name: "active", arg: 2, scope: !12005, file: !11677, line: 442, type: !153)
!12009 = !DILocation(line: 0, scope: !12005)
!12010 = !DILocation(line: 0, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12005, file: !11677, line: 444, column: 9)
!12012 = !DILocation(line: 444, column: 9, scope: !12005)
!12013 = !DILocation(line: 448, column: 1, scope: !12005)
!12014 = distinct !DISubprogram(name: "UART_Putchar9", scope: !11677, file: !11677, line: 460, type: !12015, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12017)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{null, !11680, !227}
!12017 = !{!12018, !12019}
!12018 = !DILocalVariable(name: "base", arg: 1, scope: !12014, file: !11677, line: 460, type: !11680)
!12019 = !DILocalVariable(name: "data", arg: 2, scope: !12014, file: !11677, line: 460, type: !227)
!12020 = !DILocation(line: 0, scope: !12014)
!12021 = !DILocation(line: 464, column: 9, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12014, file: !11677, line: 464, column: 9)
!12023 = !DILocation(line: 0, scope: !12022)
!12024 = !DILocation(line: 464, column: 9, scope: !12014)
!12025 = !DILocation(line: 468, column: 33, scope: !12014)
!12026 = !DILocation(line: 468, column: 5, scope: !12014)
!12027 = !DILocation(line: 468, column: 25, scope: !12014)
!12028 = !DILocation(line: 469, column: 1, scope: !12014)
!12029 = distinct !DISubprogram(name: "UART_Getchar9", scope: !11677, file: !11677, line: 478, type: !12030, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12032)
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!227, !11680}
!12032 = !{!12033, !12034}
!12033 = !DILocalVariable(name: "base", arg: 1, scope: !12029, file: !11677, line: 478, type: !11680)
!12034 = !DILocalVariable(name: "rxData", scope: !12029, file: !11677, line: 480, type: !227)
!12035 = !DILocation(line: 0, scope: !12029)
!12036 = !DILocation(line: 480, column: 23, scope: !12029)
!12037 = !DILocation(line: 482, column: 9, scope: !12029)
!12038 = !DILocation(line: 491, column: 5, scope: !12029)
!12039 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !11677, file: !11677, line: 501, type: !11870, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12040)
!12040 = !{!12041, !12042}
!12041 = !DILocalVariable(name: "base", arg: 1, scope: !12039, file: !11677, line: 501, type: !11680)
!12042 = !DILocalVariable(name: "enable", arg: 2, scope: !12039, file: !11677, line: 501, type: !153)
!12043 = !DILocation(line: 0, scope: !12039)
!12044 = !DILocation(line: 0, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12039, file: !11677, line: 503, column: 9)
!12046 = !DILocation(line: 503, column: 9, scope: !12039)
!12047 = !DILocation(line: 507, column: 1, scope: !12039)
!12048 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !11677, file: !11677, line: 516, type: !11870, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12049)
!12049 = !{!12050, !12051}
!12050 = !DILocalVariable(name: "base", arg: 1, scope: !12048, file: !11677, line: 516, type: !11680)
!12051 = !DILocalVariable(name: "enable", arg: 2, scope: !12048, file: !11677, line: 516, type: !153)
!12052 = !DILocation(line: 0, scope: !12048)
!12053 = !DILocation(line: 0, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12048, file: !11677, line: 518, column: 9)
!12055 = !DILocation(line: 518, column: 9, scope: !12048)
!12056 = !DILocation(line: 522, column: 1, scope: !12048)
!12057 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !11677, file: !11677, line: 534, type: !11870, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12058)
!12058 = !{!12059, !12060}
!12059 = !DILocalVariable(name: "base", arg: 1, scope: !12057, file: !11677, line: 534, type: !11680)
!12060 = !DILocalVariable(name: "enable", arg: 2, scope: !12057, file: !11677, line: 534, type: !153)
!12061 = !DILocation(line: 0, scope: !12057)
!12062 = !DILocation(line: 0, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12057, file: !11677, line: 536, column: 9)
!12064 = !DILocation(line: 536, column: 9, scope: !12057)
!12065 = !DILocation(line: 540, column: 1, scope: !12057)
!12066 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !11677, file: !11677, line: 550, type: !11912, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12067)
!12067 = !{!12068, !12069}
!12068 = !DILocalVariable(name: "base", arg: 1, scope: !12066, file: !11677, line: 550, type: !11680)
!12069 = !DILocalVariable(name: "voteClock", arg: 2, scope: !12066, file: !11677, line: 550, type: !208)
!12070 = !DILocation(line: 0, scope: !12066)
!12071 = !DILocation(line: 555, column: 35, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12066, file: !11677, line: 555, column: 9)
!12073 = !DILocation(line: 0, scope: !12072)
!12074 = !DILocation(line: 555, column: 9, scope: !12066)
!12075 = !DILocation(line: 559, column: 1, scope: !12066)
!12076 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !11677, file: !11677, line: 571, type: !11870, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12077)
!12077 = !{!12078, !12079}
!12078 = !DILocalVariable(name: "base", arg: 1, scope: !12076, file: !11677, line: 571, type: !11680)
!12079 = !DILocalVariable(name: "enable", arg: 2, scope: !12076, file: !11677, line: 571, type: !153)
!12080 = !DILocation(line: 0, scope: !12076)
!12081 = !DILocation(line: 0, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12076, file: !11677, line: 573, column: 9)
!12083 = !DILocation(line: 573, column: 9, scope: !12076)
!12084 = !DILocation(line: 577, column: 1, scope: !12076)
!12085 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !11677, file: !11677, line: 587, type: !11870, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12086)
!12086 = !{!12087, !12088}
!12087 = !DILocalVariable(name: "base", arg: 1, scope: !12085, file: !11677, line: 587, type: !11680)
!12088 = !DILocalVariable(name: "active", arg: 2, scope: !12085, file: !11677, line: 587, type: !153)
!12089 = !DILocation(line: 0, scope: !12085)
!12090 = !DILocation(line: 0, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12085, file: !11677, line: 589, column: 9)
!12092 = !DILocation(line: 589, column: 9, scope: !12085)
!12093 = !DILocation(line: 593, column: 1, scope: !12085)
!12094 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !11677, file: !11677, line: 602, type: !11870, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !12095)
!12095 = !{!12096, !12097}
!12096 = !DILocalVariable(name: "base", arg: 1, scope: !12094, file: !11677, line: 602, type: !11680)
!12097 = !DILocalVariable(name: "enable", arg: 2, scope: !12094, file: !11677, line: 602, type: !153)
!12098 = !DILocation(line: 0, scope: !12094)
!12099 = !DILocation(line: 0, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12094, file: !11677, line: 604, column: 9)
!12101 = !DILocation(line: 604, column: 9, scope: !12094)
!12102 = !DILocation(line: 608, column: 1, scope: !12094)
!12103 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !12104, file: !12104, line: 42, type: !12105, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12121)
!12104 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12105 = !DISubroutineType(types: !12106)
!12106 = !{!208, !12107}
!12107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12108, size: 32)
!12108 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !702, line: 20831, baseType: !12109)
!12109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 20820, size: 320, elements: !12110)
!12110 = !{!12111, !12112, !12113, !12114, !12115, !12116, !12117, !12118, !12119, !12120}
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !12109, file: !702, line: 20821, baseType: !706, size: 32)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !12109, file: !702, line: 20822, baseType: !706, size: 32, offset: 32)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !12109, file: !702, line: 20823, baseType: !706, size: 32, offset: 64)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !12109, file: !702, line: 20824, baseType: !706, size: 32, offset: 96)
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !12109, file: !702, line: 20825, baseType: !706, size: 32, offset: 128)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !12109, file: !702, line: 20826, baseType: !706, size: 32, offset: 160)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !12109, file: !702, line: 20827, baseType: !706, size: 32, offset: 192)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !12109, file: !702, line: 20828, baseType: !777, size: 32, offset: 224)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !12109, file: !702, line: 20829, baseType: !777, size: 32, offset: 256)
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !12109, file: !702, line: 20830, baseType: !777, size: 32, offset: 288)
!12121 = !{!12122, !12123, !12124, !12125, !12126}
!12122 = !DILocalVariable(name: "base", arg: 1, scope: !12103, file: !12104, line: 42, type: !12107)
!12123 = !DILocalVariable(name: "root", scope: !12103, file: !12104, line: 44, type: !208)
!12124 = !DILocalVariable(name: "hz", scope: !12103, file: !12104, line: 45, type: !208)
!12125 = !DILocalVariable(name: "pre", scope: !12103, file: !12104, line: 46, type: !208)
!12126 = !DILocalVariable(name: "post", scope: !12103, file: !12104, line: 46, type: !208)
!12127 = !DILocation(line: 0, scope: !12103)
!12128 = !DILocation(line: 46, column: 2, scope: !12103)
!12129 = !DILocation(line: 48, column: 10, scope: !12103)
!12130 = !DILocation(line: 48, column: 2, scope: !12103)
!12131 = !DILocation(line: 56, column: 3, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12103, file: !12104, line: 48, column: 26)
!12133 = !DILocation(line: 0, scope: !12132)
!12134 = !DILocation(line: 61, column: 2, scope: !12103)
!12135 = !DILocation(line: 66, column: 8, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12103, file: !12104, line: 61, column: 16)
!12137 = !DILocation(line: 67, column: 3, scope: !12136)
!12138 = !DILocation(line: 0, scope: !12136)
!12139 = !DILocation(line: 72, column: 15, scope: !12103)
!12140 = !DILocation(line: 72, column: 19, scope: !12103)
!12141 = !DILocation(line: 72, column: 12, scope: !12103)
!12142 = !DILocation(line: 72, column: 27, scope: !12103)
!12143 = !DILocation(line: 72, column: 32, scope: !12103)
!12144 = !DILocation(line: 72, column: 24, scope: !12103)
!12145 = !DILocation(line: 72, column: 2, scope: !12103)
!12146 = !DILocation(line: 73, column: 1, scope: !12103)
!12147 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !418, file: !418, line: 368, type: !12148, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12150)
!12148 = !DISubroutineType(types: !12149)
!12149 = !{!208, !2984, !208}
!12150 = !{!12151, !12152}
!12151 = !DILocalVariable(name: "base", arg: 1, scope: !12147, file: !418, line: 368, type: !2984)
!12152 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !12147, file: !418, line: 368, type: !208)
!12153 = !DILocation(line: 0, scope: !12147)
!12154 = !DILocation(line: 370, column: 13, scope: !12147)
!12155 = !DILocation(line: 370, column: 58, scope: !12147)
!12156 = !DILocation(line: 370, column: 5, scope: !12147)
!12157 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !12104, file: !12104, line: 81, type: !12158, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12178)
!12158 = !DISubroutineType(types: !12159)
!12159 = !{!208, !12160}
!12160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12161, size: 32)
!12161 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !702, line: 12462, baseType: !12162)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 12450, size: 544, elements: !12163)
!12163 = !{!12164, !12165, !12166, !12167, !12168, !12169, !12170, !12171, !12172, !12173, !12177}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !12162, file: !702, line: 12451, baseType: !777, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !12162, file: !702, line: 12452, baseType: !706, size: 32, offset: 32)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !12162, file: !702, line: 12453, baseType: !706, size: 32, offset: 64)
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !12162, file: !702, line: 12454, baseType: !706, size: 32, offset: 96)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !12162, file: !702, line: 12455, baseType: !706, size: 32, offset: 128)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !12162, file: !702, line: 12456, baseType: !706, size: 32, offset: 160)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !12162, file: !702, line: 12457, baseType: !706, size: 32, offset: 192)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !12162, file: !702, line: 12458, baseType: !706, size: 32, offset: 224)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !12162, file: !702, line: 12459, baseType: !706, size: 32, offset: 256)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12162, file: !702, line: 12460, baseType: !12174, size: 224, offset: 288)
!12174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 224, elements: !12175)
!12175 = !{!12176}
!12176 = !DISubrange(count: 28)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !12162, file: !702, line: 12461, baseType: !706, size: 32, offset: 512)
!12178 = !{!12179, !12180, !12181, !12182, !12183}
!12179 = !DILocalVariable(name: "base", arg: 1, scope: !12157, file: !12104, line: 81, type: !12160)
!12180 = !DILocalVariable(name: "root", scope: !12157, file: !12104, line: 83, type: !208)
!12181 = !DILocalVariable(name: "hz", scope: !12157, file: !12104, line: 84, type: !208)
!12182 = !DILocalVariable(name: "pre", scope: !12157, file: !12104, line: 85, type: !208)
!12183 = !DILocalVariable(name: "post", scope: !12157, file: !12104, line: 85, type: !208)
!12184 = !DILocation(line: 0, scope: !12157)
!12185 = !DILocation(line: 85, column: 2, scope: !12157)
!12186 = !DILocation(line: 87, column: 10, scope: !12157)
!12187 = !DILocation(line: 87, column: 2, scope: !12157)
!12188 = !DILocation(line: 95, column: 3, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12157, file: !12104, line: 87, column: 26)
!12190 = !DILocation(line: 0, scope: !12189)
!12191 = !DILocation(line: 100, column: 2, scope: !12157)
!12192 = !DILocation(line: 105, column: 8, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12157, file: !12104, line: 100, column: 16)
!12194 = !DILocation(line: 106, column: 3, scope: !12193)
!12195 = !DILocation(line: 0, scope: !12193)
!12196 = !DILocation(line: 111, column: 15, scope: !12157)
!12197 = !DILocation(line: 111, column: 19, scope: !12157)
!12198 = !DILocation(line: 111, column: 12, scope: !12157)
!12199 = !DILocation(line: 111, column: 27, scope: !12157)
!12200 = !DILocation(line: 111, column: 32, scope: !12157)
!12201 = !DILocation(line: 111, column: 24, scope: !12157)
!12202 = !DILocation(line: 111, column: 2, scope: !12157)
!12203 = !DILocation(line: 112, column: 1, scope: !12157)
!12204 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !12104, file: !12104, line: 120, type: !12205, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12246)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{!208, !12207}
!12207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12208, size: 32)
!12208 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !702, line: 3477, baseType: !12209)
!12209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 3446, size: 20256, elements: !12210)
!12210 = !{!12211, !12212, !12213, !12214, !12216, !12217, !12218, !12219, !12220, !12221, !12222, !12223, !12224, !12225, !12226, !12227, !12228, !12229, !12230, !12231, !12232, !12240, !12242, !12244, !12245}
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !12209, file: !702, line: 3447, baseType: !706, size: 32)
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !12209, file: !702, line: 3448, baseType: !706, size: 32, offset: 32)
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !12209, file: !702, line: 3449, baseType: !706, size: 32, offset: 64)
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12209, file: !702, line: 3450, baseType: !12215, size: 32, offset: 96)
!12215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 32, elements: !1856)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !12209, file: !702, line: 3451, baseType: !706, size: 32, offset: 128)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !12209, file: !702, line: 3452, baseType: !706, size: 32, offset: 160)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !12209, file: !702, line: 3453, baseType: !706, size: 32, offset: 192)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !12209, file: !702, line: 3454, baseType: !706, size: 32, offset: 224)
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !12209, file: !702, line: 3455, baseType: !706, size: 32, offset: 256)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !12209, file: !702, line: 3456, baseType: !706, size: 32, offset: 288)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !12209, file: !702, line: 3457, baseType: !706, size: 32, offset: 320)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !12209, file: !702, line: 3458, baseType: !706, size: 32, offset: 352)
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !12209, file: !702, line: 3459, baseType: !706, size: 32, offset: 384)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !12209, file: !702, line: 3460, baseType: !706, size: 32, offset: 416)
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !12209, file: !702, line: 3461, baseType: !777, size: 32, offset: 448)
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12209, file: !702, line: 3462, baseType: !336, size: 64, offset: 480)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !12209, file: !702, line: 3463, baseType: !777, size: 32, offset: 544)
!12229 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !12209, file: !702, line: 3464, baseType: !706, size: 32, offset: 576)
!12230 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !12209, file: !702, line: 3465, baseType: !777, size: 32, offset: 608)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12209, file: !702, line: 3466, baseType: !763, size: 384, offset: 640)
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !12209, file: !702, line: 3472, baseType: !12233, size: 8192, offset: 1024)
!12233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12234, size: 8192, elements: !305)
!12234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12209, file: !702, line: 3467, size: 128, elements: !12235)
!12235 = !{!12236, !12237, !12238, !12239}
!12236 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !12234, file: !702, line: 3468, baseType: !706, size: 32)
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !12234, file: !702, line: 3469, baseType: !706, size: 32, offset: 32)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !12234, file: !702, line: 3470, baseType: !706, size: 32, offset: 64)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !12234, file: !702, line: 3471, baseType: !706, size: 32, offset: 96)
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12209, file: !702, line: 3473, baseType: !12241, size: 8192, offset: 9216)
!12241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 8192, elements: !2160)
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !12209, file: !702, line: 3474, baseType: !12243, size: 2048, offset: 17408)
!12243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 2048, elements: !305)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !12209, file: !702, line: 3475, baseType: !2886, size: 768, offset: 19456)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !12209, file: !702, line: 3476, baseType: !706, size: 32, offset: 20224)
!12246 = !{!12247, !12248, !12249, !12250, !12251}
!12247 = !DILocalVariable(name: "base", arg: 1, scope: !12204, file: !12104, line: 120, type: !12207)
!12248 = !DILocalVariable(name: "root", scope: !12204, file: !12104, line: 122, type: !208)
!12249 = !DILocalVariable(name: "hz", scope: !12204, file: !12104, line: 123, type: !208)
!12250 = !DILocalVariable(name: "pre", scope: !12204, file: !12104, line: 124, type: !208)
!12251 = !DILocalVariable(name: "post", scope: !12204, file: !12104, line: 124, type: !208)
!12252 = !DILocation(line: 0, scope: !12204)
!12253 = !DILocation(line: 124, column: 2, scope: !12204)
!12254 = !DILocation(line: 126, column: 10, scope: !12204)
!12255 = !DILocation(line: 126, column: 2, scope: !12204)
!12256 = !DILocation(line: 134, column: 3, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12204, file: !12104, line: 126, column: 26)
!12258 = !DILocation(line: 0, scope: !12257)
!12259 = !DILocation(line: 139, column: 2, scope: !12204)
!12260 = !DILocation(line: 144, column: 8, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12204, file: !12104, line: 139, column: 16)
!12262 = !DILocation(line: 144, column: 45, scope: !12261)
!12263 = !DILocation(line: 145, column: 3, scope: !12261)
!12264 = !DILocation(line: 147, column: 8, scope: !12261)
!12265 = !DILocation(line: 148, column: 3, scope: !12261)
!12266 = !DILocation(line: 0, scope: !12261)
!12267 = !DILocation(line: 153, column: 15, scope: !12204)
!12268 = !DILocation(line: 153, column: 19, scope: !12204)
!12269 = !DILocation(line: 153, column: 12, scope: !12204)
!12270 = !DILocation(line: 153, column: 27, scope: !12204)
!12271 = !DILocation(line: 153, column: 32, scope: !12204)
!12272 = !DILocation(line: 153, column: 24, scope: !12204)
!12273 = !DILocation(line: 153, column: 2, scope: !12204)
!12274 = !DILocation(line: 154, column: 1, scope: !12204)
!12275 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !12104, file: !12104, line: 162, type: !12276, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12292)
!12276 = !DISubroutineType(types: !12277)
!12277 = !{!208, !12278}
!12278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12279, size: 32)
!12279 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !702, line: 21082, baseType: !12280)
!12280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 21072, size: 144, elements: !12281)
!12281 = !{!12282, !12283, !12285, !12286, !12287, !12288, !12289, !12290, !12291}
!12282 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !12280, file: !702, line: 21073, baseType: !820, size: 16)
!12283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12280, file: !702, line: 21074, baseType: !12284, size: 16, offset: 16)
!12284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 16, elements: !1160)
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !12280, file: !702, line: 21075, baseType: !820, size: 16, offset: 32)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12280, file: !702, line: 21076, baseType: !12284, size: 16, offset: 48)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !12280, file: !702, line: 21077, baseType: !820, size: 16, offset: 64)
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12280, file: !702, line: 21078, baseType: !12284, size: 16, offset: 80)
!12289 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !12280, file: !702, line: 21079, baseType: !820, size: 16, offset: 96)
!12290 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12280, file: !702, line: 21080, baseType: !12284, size: 16, offset: 112)
!12291 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !12280, file: !702, line: 21081, baseType: !820, size: 16, offset: 128)
!12292 = !{!12293, !12294, !12295, !12296, !12297}
!12293 = !DILocalVariable(name: "base", arg: 1, scope: !12275, file: !12104, line: 162, type: !12278)
!12294 = !DILocalVariable(name: "root", scope: !12275, file: !12104, line: 164, type: !208)
!12295 = !DILocalVariable(name: "hz", scope: !12275, file: !12104, line: 165, type: !208)
!12296 = !DILocalVariable(name: "pre", scope: !12275, file: !12104, line: 166, type: !208)
!12297 = !DILocalVariable(name: "post", scope: !12275, file: !12104, line: 166, type: !208)
!12298 = !DILocation(line: 0, scope: !12275)
!12299 = !DILocation(line: 166, column: 2, scope: !12275)
!12300 = !DILocation(line: 168, column: 10, scope: !12275)
!12301 = !DILocation(line: 168, column: 2, scope: !12275)
!12302 = !DILocation(line: 0, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12275, file: !12104, line: 168, column: 26)
!12304 = !DILocation(line: 189, column: 2, scope: !12275)
!12305 = !DILocation(line: 194, column: 8, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12275, file: !12104, line: 189, column: 16)
!12307 = !DILocation(line: 194, column: 45, scope: !12306)
!12308 = !DILocation(line: 195, column: 3, scope: !12306)
!12309 = !DILocation(line: 0, scope: !12306)
!12310 = !DILocation(line: 200, column: 15, scope: !12275)
!12311 = !DILocation(line: 200, column: 19, scope: !12275)
!12312 = !DILocation(line: 200, column: 12, scope: !12275)
!12313 = !DILocation(line: 200, column: 27, scope: !12275)
!12314 = !DILocation(line: 200, column: 32, scope: !12275)
!12315 = !DILocation(line: 200, column: 24, scope: !12275)
!12316 = !DILocation(line: 200, column: 2, scope: !12275)
!12317 = !DILocation(line: 201, column: 1, scope: !12275)
!12318 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !12104, file: !12104, line: 209, type: !12319, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12344)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!208, !12321}
!12321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12322, size: 32)
!12322 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !702, line: 41342, baseType: !12323)
!12323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 41322, size: 1504, elements: !12324)
!12324 = !{!12325, !12326, !12327, !12328, !12329, !12330, !12331, !12332, !12333, !12334, !12335, !12336, !12337, !12338, !12339, !12340, !12341, !12342, !12343}
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !12323, file: !702, line: 41323, baseType: !777, size: 32)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12323, file: !702, line: 41324, baseType: !1537, size: 480, offset: 32)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !12323, file: !702, line: 41325, baseType: !706, size: 32, offset: 512)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12323, file: !702, line: 41326, baseType: !1537, size: 480, offset: 544)
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !12323, file: !702, line: 41327, baseType: !706, size: 32, offset: 1024)
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !12323, file: !702, line: 41328, baseType: !706, size: 32, offset: 1056)
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !12323, file: !702, line: 41329, baseType: !706, size: 32, offset: 1088)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !12323, file: !702, line: 41330, baseType: !706, size: 32, offset: 1120)
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !12323, file: !702, line: 41331, baseType: !706, size: 32, offset: 1152)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !12323, file: !702, line: 41332, baseType: !706, size: 32, offset: 1184)
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !12323, file: !702, line: 41333, baseType: !706, size: 32, offset: 1216)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !12323, file: !702, line: 41334, baseType: !706, size: 32, offset: 1248)
!12337 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !12323, file: !702, line: 41335, baseType: !706, size: 32, offset: 1280)
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !12323, file: !702, line: 41336, baseType: !706, size: 32, offset: 1312)
!12339 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !12323, file: !702, line: 41337, baseType: !706, size: 32, offset: 1344)
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !12323, file: !702, line: 41338, baseType: !777, size: 32, offset: 1376)
!12341 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !12323, file: !702, line: 41339, baseType: !706, size: 32, offset: 1408)
!12342 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !12323, file: !702, line: 41340, baseType: !706, size: 32, offset: 1440)
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !12323, file: !702, line: 41341, baseType: !706, size: 32, offset: 1472)
!12344 = !{!12345, !12346, !12347, !12348, !12349}
!12345 = !DILocalVariable(name: "base", arg: 1, scope: !12318, file: !12104, line: 209, type: !12321)
!12346 = !DILocalVariable(name: "root", scope: !12318, file: !12104, line: 211, type: !208)
!12347 = !DILocalVariable(name: "hz", scope: !12318, file: !12104, line: 212, type: !208)
!12348 = !DILocalVariable(name: "pre", scope: !12318, file: !12104, line: 213, type: !208)
!12349 = !DILocalVariable(name: "post", scope: !12318, file: !12104, line: 213, type: !208)
!12350 = !DILocation(line: 0, scope: !12318)
!12351 = !DILocation(line: 213, column: 2, scope: !12318)
!12352 = !DILocation(line: 215, column: 10, scope: !12318)
!12353 = !DILocation(line: 215, column: 2, scope: !12318)
!12354 = !DILocation(line: 223, column: 3, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12318, file: !12104, line: 215, column: 26)
!12356 = !DILocation(line: 227, column: 3, scope: !12355)
!12357 = !DILocation(line: 231, column: 3, scope: !12355)
!12358 = !DILocation(line: 235, column: 3, scope: !12355)
!12359 = !DILocation(line: 239, column: 3, scope: !12355)
!12360 = !DILocation(line: 243, column: 3, scope: !12355)
!12361 = !DILocation(line: 0, scope: !12355)
!12362 = !DILocation(line: 248, column: 2, scope: !12318)
!12363 = !DILocation(line: 253, column: 8, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12318, file: !12104, line: 248, column: 16)
!12365 = !DILocation(line: 253, column: 45, scope: !12364)
!12366 = !DILocation(line: 254, column: 3, scope: !12364)
!12367 = !DILocation(line: 256, column: 8, scope: !12364)
!12368 = !DILocation(line: 257, column: 3, scope: !12364)
!12369 = !DILocation(line: 0, scope: !12364)
!12370 = !DILocation(line: 262, column: 15, scope: !12318)
!12371 = !DILocation(line: 262, column: 19, scope: !12318)
!12372 = !DILocation(line: 262, column: 12, scope: !12318)
!12373 = !DILocation(line: 262, column: 27, scope: !12318)
!12374 = !DILocation(line: 262, column: 32, scope: !12318)
!12375 = !DILocation(line: 262, column: 24, scope: !12318)
!12376 = !DILocation(line: 262, column: 2, scope: !12318)
!12377 = !DILocation(line: 263, column: 1, scope: !12318)
!12378 = distinct !DISubprogram(name: "z_device_state_init", scope: !12379, file: !12379, line: 23, type: !3135, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12380)
!12379 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12380 = !{!12381}
!12381 = !DILocalVariable(name: "dev", scope: !12378, file: !12379, line: 25, type: !12382)
!12382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12383, size: 32)
!12383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12384)
!12384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !12385)
!12385 = !{!12386, !12387, !12388, !12389, !12395, !12396}
!12386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12384, file: !137, line: 380, baseType: !140, size: 32)
!12387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12384, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12384, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!12389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12384, file: !137, line: 386, baseType: !12390, size: 32, offset: 96)
!12390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12391, size: 32)
!12391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !12392)
!12392 = !{!12393, !12394}
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12391, file: !137, line: 359, baseType: !150, size: 8)
!12394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12391, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12384, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12384, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!12397 = !DILocation(line: 0, scope: !12378)
!12398 = !DILocation(line: 31, column: 1, scope: !12378)
!12399 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12379, file: !12379, line: 33, type: !12400, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12402)
!12400 = !DISubroutineType(types: !12401)
!12401 = !{!12382, !140}
!12402 = !{!12403, !12404}
!12403 = !DILocalVariable(name: "name", arg: 1, scope: !12399, file: !12379, line: 33, type: !140)
!12404 = !DILocalVariable(name: "dev", scope: !12399, file: !12379, line: 35, type: !12382)
!12405 = !DILocation(line: 0, scope: !12399)
!12406 = !DILocation(line: 40, column: 12, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12399, file: !12379, line: 40, column: 6)
!12408 = !DILocation(line: 40, column: 21, scope: !12407)
!12409 = !DILocation(line: 40, column: 25, scope: !12407)
!12410 = !DILocation(line: 40, column: 33, scope: !12407)
!12411 = !DILocation(line: 40, column: 6, scope: !12399)
!12412 = !DILocation(line: 55, column: 2, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12399, file: !12379, line: 55, column: 2)
!12414 = !DILocation(line: 50, column: 7, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !12379, line: 50, column: 7)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !12379, line: 49, column: 57)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !12379, line: 49, column: 2)
!12418 = distinct !DILexicalBlock(scope: !12399, file: !12379, line: 49, column: 2)
!12419 = !DILocation(line: 50, column: 30, scope: !12415)
!12420 = !DILocation(line: 50, column: 39, scope: !12415)
!12421 = !DILocation(line: 50, column: 44, scope: !12415)
!12422 = !DILocation(line: 50, column: 7, scope: !12416)
!12423 = !DILocation(line: 49, column: 53, scope: !12417)
!12424 = !DILocation(line: 49, column: 33, scope: !12417)
!12425 = !DILocation(line: 49, column: 2, scope: !12418)
!12426 = distinct !{!12426, !12425, !12427}
!12427 = !DILocation(line: 53, column: 2, scope: !12418)
!12428 = !DILocation(line: 56, column: 7, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !12379, line: 56, column: 7)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !12379, line: 55, column: 57)
!12431 = distinct !DILexicalBlock(scope: !12413, file: !12379, line: 55, column: 2)
!12432 = !DILocation(line: 56, column: 30, scope: !12429)
!12433 = !DILocation(line: 56, column: 52, scope: !12429)
!12434 = !DILocation(line: 56, column: 34, scope: !12429)
!12435 = !DILocation(line: 56, column: 58, scope: !12429)
!12436 = !DILocation(line: 56, column: 7, scope: !12430)
!12437 = !DILocation(line: 55, column: 53, scope: !12431)
!12438 = !DILocation(line: 55, column: 33, scope: !12431)
!12439 = distinct !{!12439, !12412, !12440}
!12440 = !DILocation(line: 59, column: 2, scope: !12413)
!12441 = !DILocation(line: 62, column: 1, scope: !12399)
!12442 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12379, file: !12379, line: 93, type: !12443, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12445)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!153, !12382}
!12445 = !{!12446}
!12446 = !DILocalVariable(name: "dev", arg: 1, scope: !12442, file: !12379, line: 93, type: !12382)
!12447 = !DILocation(line: 0, scope: !12442)
!12448 = !DILocation(line: 99, column: 10, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12442, file: !12379, line: 99, column: 6)
!12450 = !DILocation(line: 99, column: 6, scope: !12442)
!12451 = !DILocation(line: 103, column: 14, scope: !12442)
!12452 = !DILocation(line: 103, column: 21, scope: !12442)
!12453 = !DILocation(line: 103, column: 33, scope: !12442)
!12454 = !DILocation(line: 103, column: 49, scope: !12442)
!12455 = !DILocation(line: 103, column: 58, scope: !12442)
!12456 = !DILocation(line: 104, column: 1, scope: !12442)
!12457 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12379, file: !12379, line: 87, type: !12458, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12461)
!12458 = !DISubroutineType(types: !12459)
!12459 = !{!272, !12460}
!12460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12382, size: 32)
!12461 = !{!12462}
!12462 = !DILocalVariable(name: "devices", arg: 1, scope: !12457, file: !12379, line: 87, type: !12460)
!12463 = !DILocation(line: 0, scope: !12457)
!12464 = !DILocation(line: 89, column: 11, scope: !12457)
!12465 = !DILocation(line: 90, column: 2, scope: !12457)
!12466 = distinct !DISubprogram(name: "device_required_foreach", scope: !12379, file: !12379, line: 125, type: !12467, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12473)
!12467 = !DISubroutineType(types: !12468)
!12468 = !{!125, !12382, !12469, !124}
!12469 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !12470)
!12470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12471, size: 32)
!12471 = !DISubroutineType(types: !12472)
!12472 = !{!125, !12382, !124}
!12473 = !{!12474, !12475, !12476, !12477, !12478}
!12474 = !DILocalVariable(name: "dev", arg: 1, scope: !12466, file: !12379, line: 125, type: !12382)
!12475 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12466, file: !12379, line: 126, type: !12469)
!12476 = !DILocalVariable(name: "context", arg: 3, scope: !12466, file: !12379, line: 127, type: !124)
!12477 = !DILocalVariable(name: "handle_count", scope: !12466, file: !12379, line: 129, type: !272)
!12478 = !DILocalVariable(name: "handles", scope: !12466, file: !12379, line: 130, type: !156)
!12479 = !DILocation(line: 0, scope: !12466)
!12480 = !DILocation(line: 129, column: 2, scope: !12466)
!12481 = !DILocation(line: 129, column: 9, scope: !12466)
!12482 = !DILocation(line: 130, column: 35, scope: !12466)
!12483 = !DILocation(line: 132, column: 33, scope: !12466)
!12484 = !DILocation(line: 132, column: 9, scope: !12466)
!12485 = !DILocation(line: 133, column: 1, scope: !12466)
!12486 = !DILocation(line: 132, column: 2, scope: !12466)
!12487 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !12488, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12490)
!12488 = !DISubroutineType(types: !12489)
!12489 = !{!156, !12382, !2512}
!12490 = !{!12491, !12492, !12493, !12494}
!12491 = !DILocalVariable(name: "dev", arg: 1, scope: !12487, file: !137, line: 493, type: !12382)
!12492 = !DILocalVariable(name: "count", arg: 2, scope: !12487, file: !137, line: 493, type: !2512)
!12493 = !DILocalVariable(name: "rv", scope: !12487, file: !137, line: 495, type: !156)
!12494 = !DILocalVariable(name: "i", scope: !12495, file: !137, line: 498, type: !272)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !137, line: 497, column: 18)
!12496 = distinct !DILexicalBlock(scope: !12487, file: !137, line: 497, column: 6)
!12497 = !DILocation(line: 0, scope: !12487)
!12498 = !DILocation(line: 495, column: 35, scope: !12487)
!12499 = !DILocation(line: 497, column: 9, scope: !12496)
!12500 = !DILocation(line: 497, column: 6, scope: !12487)
!12501 = !DILocation(line: 0, scope: !12495)
!12502 = !DILocation(line: 500, column: 11, scope: !12495)
!12503 = !DILocation(line: 500, column: 40, scope: !12495)
!12504 = !DILocation(line: 502, column: 4, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12495, file: !137, line: 501, column: 40)
!12506 = distinct !{!12506, !12507, !12508}
!12507 = !DILocation(line: 500, column: 3, scope: !12495)
!12508 = !DILocation(line: 503, column: 3, scope: !12495)
!12509 = !DILocation(line: 504, column: 10, scope: !12495)
!12510 = !DILocation(line: 505, column: 2, scope: !12495)
!12511 = !DILocation(line: 507, column: 2, scope: !12487)
!12512 = distinct !DISubprogram(name: "device_visitor", scope: !12379, file: !12379, line: 106, type: !12513, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12515)
!12513 = !DISubroutineType(types: !12514)
!12514 = !{!125, !156, !272, !12469, !124}
!12515 = !{!12516, !12517, !12518, !12519, !12520, !12522, !12525, !12526}
!12516 = !DILocalVariable(name: "handles", arg: 1, scope: !12512, file: !12379, line: 106, type: !156)
!12517 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12512, file: !12379, line: 107, type: !272)
!12518 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12512, file: !12379, line: 108, type: !12469)
!12519 = !DILocalVariable(name: "context", arg: 4, scope: !12512, file: !12379, line: 109, type: !124)
!12520 = !DILocalVariable(name: "i", scope: !12521, file: !12379, line: 112, type: !272)
!12521 = distinct !DILexicalBlock(scope: !12512, file: !12379, line: 112, column: 2)
!12522 = !DILocalVariable(name: "dh", scope: !12523, file: !12379, line: 113, type: !158)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12379, line: 112, column: 44)
!12524 = distinct !DILexicalBlock(scope: !12521, file: !12379, line: 112, column: 2)
!12525 = !DILocalVariable(name: "rdev", scope: !12523, file: !12379, line: 114, type: !12382)
!12526 = !DILocalVariable(name: "rc", scope: !12523, file: !12379, line: 115, type: !125)
!12527 = !DILocation(line: 0, scope: !12512)
!12528 = !DILocation(line: 0, scope: !12521)
!12529 = !DILocation(line: 112, column: 23, scope: !12524)
!12530 = !DILocation(line: 112, column: 2, scope: !12521)
!12531 = distinct !{!12531, !12530, !12532}
!12532 = !DILocation(line: 120, column: 2, scope: !12521)
!12533 = !DILocation(line: 113, column: 24, scope: !12523)
!12534 = !DILocation(line: 0, scope: !12523)
!12535 = !DILocation(line: 114, column: 31, scope: !12523)
!12536 = !DILocation(line: 115, column: 12, scope: !12523)
!12537 = !DILocation(line: 117, column: 10, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12523, file: !12379, line: 117, column: 7)
!12539 = !DILocation(line: 112, column: 39, scope: !12524)
!12540 = !DILocation(line: 123, column: 1, scope: !12512)
!12541 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !12542, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12544)
!12542 = !DISubroutineType(types: !12543)
!12543 = !{!12382, !158}
!12544 = !{!12545, !12546, !12547}
!12545 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12541, file: !137, line: 439, type: !158)
!12546 = !DILocalVariable(name: "dev", scope: !12541, file: !137, line: 443, type: !12382)
!12547 = !DILocalVariable(name: "numdev", scope: !12541, file: !137, line: 444, type: !272)
!12548 = !DILocation(line: 0, scope: !12541)
!12549 = !DILocation(line: 446, column: 7, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12541, file: !137, line: 446, column: 6)
!12551 = !DILocation(line: 446, column: 18, scope: !12550)
!12552 = !DILocation(line: 446, column: 23, scope: !12550)
!12553 = !DILocation(line: 450, column: 2, scope: !12541)
!12554 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12379, file: !12379, line: 135, type: !12467, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12555)
!12555 = !{!12556, !12557, !12558, !12559, !12560}
!12556 = !DILocalVariable(name: "dev", arg: 1, scope: !12554, file: !12379, line: 135, type: !12382)
!12557 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12554, file: !12379, line: 136, type: !12469)
!12558 = !DILocalVariable(name: "context", arg: 3, scope: !12554, file: !12379, line: 137, type: !124)
!12559 = !DILocalVariable(name: "handle_count", scope: !12554, file: !12379, line: 139, type: !272)
!12560 = !DILocalVariable(name: "handles", scope: !12554, file: !12379, line: 140, type: !156)
!12561 = !DILocation(line: 0, scope: !12554)
!12562 = !DILocation(line: 139, column: 2, scope: !12554)
!12563 = !DILocation(line: 139, column: 9, scope: !12554)
!12564 = !DILocation(line: 140, column: 35, scope: !12554)
!12565 = !DILocation(line: 142, column: 33, scope: !12554)
!12566 = !DILocation(line: 142, column: 9, scope: !12554)
!12567 = !DILocation(line: 143, column: 1, scope: !12554)
!12568 = !DILocation(line: 142, column: 2, scope: !12554)
!12569 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !12488, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12570)
!12570 = !{!12571, !12572, !12573, !12574, !12575}
!12571 = !DILocalVariable(name: "dev", arg: 1, scope: !12569, file: !137, line: 573, type: !12382)
!12572 = !DILocalVariable(name: "count", arg: 2, scope: !12569, file: !137, line: 573, type: !2512)
!12573 = !DILocalVariable(name: "rv", scope: !12569, file: !137, line: 575, type: !156)
!12574 = !DILocalVariable(name: "region", scope: !12569, file: !137, line: 576, type: !272)
!12575 = !DILocalVariable(name: "i", scope: !12569, file: !137, line: 577, type: !272)
!12576 = !DILocation(line: 0, scope: !12569)
!12577 = !DILocation(line: 575, column: 35, scope: !12569)
!12578 = !DILocation(line: 579, column: 9, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12569, file: !137, line: 579, column: 6)
!12580 = !DILocation(line: 579, column: 6, scope: !12569)
!12581 = !DILocation(line: 582, column: 8, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12583, file: !137, line: 582, column: 8)
!12583 = distinct !DILexicalBlock(scope: !12584, file: !137, line: 581, column: 23)
!12584 = distinct !DILexicalBlock(scope: !12579, file: !137, line: 579, column: 18)
!12585 = !DILocation(line: 582, column: 12, scope: !12582)
!12586 = !DILocation(line: 585, column: 6, scope: !12583)
!12587 = !DILocation(line: 0, scope: !12584)
!12588 = !DILocation(line: 581, column: 17, scope: !12584)
!12589 = !DILocation(line: 581, column: 3, scope: !12584)
!12590 = !DILocation(line: 588, column: 10, scope: !12584)
!12591 = !DILocation(line: 588, column: 16, scope: !12584)
!12592 = !DILocation(line: 589, column: 4, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12584, file: !137, line: 588, column: 39)
!12594 = !DILocation(line: 588, column: 3, scope: !12584)
!12595 = distinct !{!12595, !12594, !12596}
!12596 = !DILocation(line: 590, column: 3, scope: !12584)
!12597 = !DILocation(line: 591, column: 10, scope: !12584)
!12598 = !DILocation(line: 592, column: 2, scope: !12584)
!12599 = !DILocation(line: 575, column: 25, scope: !12569)
!12600 = !DILocation(line: 594, column: 2, scope: !12569)
!12601 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1938, file: !1938, line: 49, type: !12602, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !1896)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{!387}
!12604 = !DILocation(line: 51, column: 10, scope: !12601)
!12605 = !DILocation(line: 51, column: 20, scope: !12601)
!12606 = !DILocation(line: 51, column: 2, scope: !12601)
!12607 = distinct !DISubprogram(name: "coredump", scope: !3102, file: !3102, line: 209, type: !12608, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12748)
!12608 = !DISubroutineType(types: !12609)
!12609 = !{null, !32, !12610, !12654}
!12610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12611, size: 32)
!12611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12612)
!12612 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !12613)
!12613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !12614)
!12614 = !{!12615}
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12613, file: !2675, line: 107, baseType: !12616, size: 256)
!12616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !12617)
!12617 = !{!12618, !12623, !12628, !12633, !12638, !12643, !12648, !12653}
!12618 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 99, baseType: !12619, size: 32)
!12619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 99, size: 32, elements: !12620)
!12620 = !{!12621, !12622}
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12619, file: !2675, line: 99, baseType: !208, size: 32)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12619, file: !2675, line: 99, baseType: !208, size: 32)
!12623 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 100, baseType: !12624, size: 32, offset: 32)
!12624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 100, size: 32, elements: !12625)
!12625 = !{!12626, !12627}
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12624, file: !2675, line: 100, baseType: !208, size: 32)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12624, file: !2675, line: 100, baseType: !208, size: 32)
!12628 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 101, baseType: !12629, size: 32, offset: 64)
!12629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 101, size: 32, elements: !12630)
!12630 = !{!12631, !12632}
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12629, file: !2675, line: 101, baseType: !208, size: 32)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12629, file: !2675, line: 101, baseType: !208, size: 32)
!12633 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 102, baseType: !12634, size: 32, offset: 96)
!12634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 102, size: 32, elements: !12635)
!12635 = !{!12636, !12637}
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12634, file: !2675, line: 102, baseType: !208, size: 32)
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12634, file: !2675, line: 102, baseType: !208, size: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 103, baseType: !12639, size: 32, offset: 128)
!12639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 103, size: 32, elements: !12640)
!12640 = !{!12641, !12642}
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12639, file: !2675, line: 103, baseType: !208, size: 32)
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12639, file: !2675, line: 103, baseType: !208, size: 32)
!12643 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 104, baseType: !12644, size: 32, offset: 160)
!12644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 104, size: 32, elements: !12645)
!12645 = !{!12646, !12647}
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12644, file: !2675, line: 104, baseType: !208, size: 32)
!12647 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12644, file: !2675, line: 104, baseType: !208, size: 32)
!12648 = !DIDerivedType(tag: DW_TAG_member, scope: !12616, file: !2675, line: 105, baseType: !12649, size: 32, offset: 192)
!12649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12616, file: !2675, line: 105, size: 32, elements: !12650)
!12650 = !{!12651, !12652}
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12649, file: !2675, line: 105, baseType: !208, size: 32)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12649, file: !2675, line: 105, baseType: !208, size: 32)
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12616, file: !2675, line: 106, baseType: !208, size: 32, offset: 224)
!12654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12655, size: 32)
!12655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !2040, line: 245, size: 896, elements: !12656)
!12656 = !{!12657, !12715, !12727, !12728, !12729, !12730, !12743}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12655, file: !2040, line: 247, baseType: !12658, size: 384)
!12658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !2040, line: 57, size: 384, elements: !12659)
!12659 = !{!12660, !12684, !12691, !12692, !12693, !12702, !12703, !12704}
!12660 = !DIDerivedType(tag: DW_TAG_member, scope: !12658, file: !2040, line: 60, baseType: !12661, size: 64)
!12661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12658, file: !2040, line: 60, size: 64, elements: !12662)
!12662 = !{!12663, !12678}
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12661, file: !2040, line: 61, baseType: !12664, size: 64)
!12664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !2050, line: 49, baseType: !12665)
!12665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !2050, line: 37, size: 64, elements: !12666)
!12666 = !{!12667, !12673}
!12667 = !DIDerivedType(tag: DW_TAG_member, scope: !12665, file: !2050, line: 38, baseType: !12668, size: 32)
!12668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12665, file: !2050, line: 38, size: 32, elements: !12669)
!12669 = !{!12670, !12672}
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12668, file: !2050, line: 39, baseType: !12671, size: 32)
!12671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12665, size: 32)
!12672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12668, file: !2050, line: 40, baseType: !12671, size: 32)
!12673 = !DIDerivedType(tag: DW_TAG_member, scope: !12665, file: !2050, line: 42, baseType: !12674, size: 32, offset: 32)
!12674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12665, file: !2050, line: 42, size: 32, elements: !12675)
!12675 = !{!12676, !12677}
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12674, file: !2050, line: 43, baseType: !12671, size: 32)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12674, file: !2050, line: 44, baseType: !12671, size: 32)
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12661, file: !2040, line: 62, baseType: !12679, size: 64)
!12679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !2066, line: 49, size: 64, elements: !12680)
!12680 = !{!12681}
!12681 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12679, file: !2066, line: 50, baseType: !12682, size: 64)
!12682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12683, size: 64, elements: !1160)
!12683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12679, size: 32)
!12684 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12658, file: !2040, line: 68, baseType: !12685, size: 32, offset: 64)
!12685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12686, size: 32)
!12686 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !2029, line: 233, baseType: !12687)
!12687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2029, line: 231, size: 64, elements: !12688)
!12688 = !{!12689}
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12687, file: !2029, line: 232, baseType: !12690, size: 64)
!12690 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !2050, line: 48, baseType: !12665)
!12691 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12658, file: !2040, line: 71, baseType: !150, size: 8, offset: 96)
!12692 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12658, file: !2040, line: 74, baseType: !150, size: 8, offset: 104)
!12693 = !DIDerivedType(tag: DW_TAG_member, scope: !12658, file: !2040, line: 90, baseType: !12694, size: 16, offset: 112)
!12694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12658, file: !2040, line: 90, size: 16, elements: !12695)
!12695 = !{!12696, !12701}
!12696 = !DIDerivedType(tag: DW_TAG_member, scope: !12694, file: !2040, line: 91, baseType: !12697, size: 16)
!12697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12694, file: !2040, line: 91, size: 16, elements: !12698)
!12698 = !{!12699, !12700}
!12699 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12697, file: !2040, line: 96, baseType: !2087, size: 8)
!12700 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12697, file: !2040, line: 97, baseType: !150, size: 8, offset: 8)
!12701 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12694, file: !2040, line: 100, baseType: !227, size: 16)
!12702 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12658, file: !2040, line: 107, baseType: !208, size: 32, offset: 128)
!12703 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12658, file: !2040, line: 127, baseType: !124, size: 32, offset: 160)
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12658, file: !2040, line: 131, baseType: !12705, size: 192, offset: 192)
!12705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !2029, line: 244, size: 192, elements: !12706)
!12706 = !{!12707, !12708, !12714}
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12705, file: !2029, line: 245, baseType: !12664, size: 64)
!12708 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12705, file: !2029, line: 246, baseType: !12709, size: 32, offset: 64)
!12709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !2029, line: 242, baseType: !12710)
!12710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12711, size: 32)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !12713}
!12713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12705, size: 32)
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12705, file: !2029, line: 249, baseType: !1790, size: 64, offset: 128)
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12655, file: !2040, line: 250, baseType: !12716, size: 288, offset: 384)
!12716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !2106, line: 25, size: 288, elements: !12717)
!12717 = !{!12718, !12719, !12720, !12721, !12722, !12723, !12724, !12725, !12726}
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12716, file: !2106, line: 26, baseType: !208, size: 32)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12716, file: !2106, line: 27, baseType: !208, size: 32, offset: 32)
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12716, file: !2106, line: 28, baseType: !208, size: 32, offset: 64)
!12721 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12716, file: !2106, line: 29, baseType: !208, size: 32, offset: 96)
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12716, file: !2106, line: 30, baseType: !208, size: 32, offset: 128)
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12716, file: !2106, line: 31, baseType: !208, size: 32, offset: 160)
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12716, file: !2106, line: 32, baseType: !208, size: 32, offset: 192)
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12716, file: !2106, line: 33, baseType: !208, size: 32, offset: 224)
!12726 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12716, file: !2106, line: 34, baseType: !208, size: 32, offset: 256)
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12655, file: !2040, line: 253, baseType: !124, size: 32, offset: 672)
!12728 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12655, file: !2040, line: 256, baseType: !12686, size: 64, offset: 704)
!12729 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12655, file: !2040, line: 294, baseType: !125, size: 32, offset: 768)
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12655, file: !2040, line: 325, baseType: !12731, size: 32, offset: 800)
!12731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12732, size: 32)
!12732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !2123, line: 5073, size: 160, elements: !12733)
!12733 = !{!12734, !12740, !12741}
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12732, file: !2123, line: 5074, baseType: !12735, size: 96)
!12735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !2127, line: 56, size: 96, elements: !12736)
!12736 = !{!12737, !12738, !12739}
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12735, file: !2127, line: 57, baseType: !2130, size: 32)
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12735, file: !2127, line: 58, baseType: !124, size: 32, offset: 32)
!12739 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12735, file: !2127, line: 59, baseType: !272, size: 32, offset: 64)
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12732, file: !2123, line: 5075, baseType: !12686, size: 64, offset: 96)
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12732, file: !2123, line: 5076, baseType: !12742, offset: 160)
!12742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !1895, line: 43, elements: !1896)
!12743 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12655, file: !2040, line: 343, baseType: !12744, size: 64, offset: 832)
!12744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !2106, line: 60, size: 64, elements: !12745)
!12745 = !{!12746, !12747}
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12744, file: !2106, line: 63, baseType: !208, size: 32)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12744, file: !2106, line: 66, baseType: !208, size: 32, offset: 32)
!12748 = !{!12749, !12750, !12751}
!12749 = !DILocalVariable(name: "reason", arg: 1, scope: !12607, file: !3102, line: 209, type: !32)
!12750 = !DILocalVariable(name: "esf", arg: 2, scope: !12607, file: !3102, line: 209, type: !12610)
!12751 = !DILocalVariable(name: "thread", arg: 3, scope: !12607, file: !3102, line: 210, type: !12654)
!12752 = !DILocation(line: 0, scope: !12607)
!12753 = !DILocation(line: 212, column: 1, scope: !12607)
!12754 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3102, file: !3102, line: 214, type: !12755, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12757)
!12755 = !DISubroutineType(types: !12756)
!12756 = !{null, !22, !22}
!12757 = !{!12758, !12759}
!12758 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12754, file: !3102, line: 214, type: !22)
!12759 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12754, file: !3102, line: 214, type: !22)
!12760 = !DILocation(line: 0, scope: !12754)
!12761 = !DILocation(line: 216, column: 1, scope: !12754)
!12762 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3102, file: !3102, line: 218, type: !12763, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12765)
!12763 = !DISubroutineType(types: !12764)
!12764 = !{null, !184, !272}
!12765 = !{!12766, !12767}
!12766 = !DILocalVariable(name: "buf", arg: 1, scope: !12762, file: !3102, line: 218, type: !184)
!12767 = !DILocalVariable(name: "buflen", arg: 2, scope: !12762, file: !3102, line: 218, type: !272)
!12768 = !DILocation(line: 0, scope: !12762)
!12769 = !DILocation(line: 220, column: 1, scope: !12762)
!12770 = distinct !DISubprogram(name: "coredump_query", scope: !3102, file: !3102, line: 222, type: !12771, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12773)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{!125, !3101, !124}
!12773 = !{!12774, !12775}
!12774 = !DILocalVariable(name: "query_id", arg: 1, scope: !12770, file: !3102, line: 222, type: !3101)
!12775 = !DILocalVariable(name: "arg", arg: 2, scope: !12770, file: !3102, line: 222, type: !124)
!12776 = !DILocation(line: 0, scope: !12770)
!12777 = !DILocation(line: 224, column: 2, scope: !12770)
!12778 = distinct !DISubprogram(name: "coredump_cmd", scope: !3102, file: !3102, line: 227, type: !12779, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!125, !3108, !124}
!12781 = !{!12782, !12783}
!12782 = !DILocalVariable(name: "query_id", arg: 1, scope: !12778, file: !3102, line: 227, type: !3108)
!12783 = !DILocalVariable(name: "arg", arg: 2, scope: !12778, file: !3102, line: 227, type: !124)
!12784 = !DILocation(line: 0, scope: !12778)
!12785 = !DILocation(line: 229, column: 2, scope: !12778)
!12786 = distinct !DISubprogram(name: "arch_system_halt", scope: !12787, file: !12787, line: 23, type: !8018, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12788)
!12787 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12788 = !{!12789}
!12789 = !DILocalVariable(name: "reason", arg: 1, scope: !12786, file: !12787, line: 23, type: !32)
!12790 = !DILocation(line: 0, scope: !12786)
!12791 = !DILocation(line: 55, column: 2, scope: !12792, inlinedAt: !12796)
!12792 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12793)
!12793 = !{!12794, !12795}
!12794 = !DILocalVariable(name: "key", scope: !12792, file: !8182, line: 44, type: !32)
!12795 = !DILocalVariable(name: "tmp", scope: !12792, file: !8182, line: 53, type: !32)
!12796 = distinct !DILocation(line: 31, column: 8, scope: !12786)
!12797 = !{i64 2844273}
!12798 = !DILocation(line: 0, scope: !12792, inlinedAt: !12796)
!12799 = !DILocation(line: 32, column: 2, scope: !12786)
!12800 = !DILocation(line: 32, column: 2, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !12787, line: 32, column: 2)
!12802 = distinct !DILexicalBlock(scope: !12786, file: !12787, line: 32, column: 2)
!12803 = distinct !{!12803, !12804, !12805}
!12804 = !DILocation(line: 32, column: 2, scope: !12802)
!12805 = !DILocation(line: 34, column: 2, scope: !12802)
!12806 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12787, file: !12787, line: 39, type: !12807, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12809)
!12807 = !DISubroutineType(types: !12808)
!12808 = !{null, !32, !12610}
!12809 = !{!12810, !12811}
!12810 = !DILocalVariable(name: "reason", arg: 1, scope: !12806, file: !12787, line: 39, type: !32)
!12811 = !DILocalVariable(name: "esf", arg: 2, scope: !12806, file: !12787, line: 40, type: !12610)
!12812 = !DILocation(line: 0, scope: !12806)
!12813 = !DILocation(line: 45, column: 2, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !12787, line: 45, column: 2)
!12815 = distinct !DILexicalBlock(scope: !12816, file: !12787, line: 45, column: 2)
!12816 = distinct !DILexicalBlock(scope: !12817, file: !12787, line: 45, column: 2)
!12817 = distinct !DILexicalBlock(scope: !12806, file: !12787, line: 45, column: 2)
!12818 = !DILocation(line: 46, column: 2, scope: !12806)
!12819 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12787, file: !12787, line: 81, type: !8018, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12820)
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "reason", arg: 1, scope: !12819, file: !12787, line: 81, type: !32)
!12822 = !DILocation(line: 0, scope: !12819)
!12823 = !DILocation(line: 83, column: 2, scope: !12819)
!12824 = distinct !DISubprogram(name: "z_fatal_error", scope: !12787, file: !12787, line: 96, type: !12807, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12825)
!12825 = !{!12826, !12827, !12828, !12829}
!12826 = !DILocalVariable(name: "reason", arg: 1, scope: !12824, file: !12787, line: 96, type: !32)
!12827 = !DILocalVariable(name: "esf", arg: 2, scope: !12824, file: !12787, line: 96, type: !12610)
!12828 = !DILocalVariable(name: "key", scope: !12824, file: !12787, line: 102, type: !32)
!12829 = !DILocalVariable(name: "thread", scope: !12824, file: !12787, line: 103, type: !12654)
!12830 = !DILocation(line: 0, scope: !12824)
!12831 = !DILocation(line: 55, column: 2, scope: !12792, inlinedAt: !12832)
!12832 = distinct !DILocation(line: 102, column: 21, scope: !12824)
!12833 = !DILocation(line: 0, scope: !12792, inlinedAt: !12832)
!12834 = !DILocation(line: 104, column: 4, scope: !12824)
!12835 = !DILocation(line: 109, column: 2, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !12787, line: 109, column: 2)
!12837 = distinct !DILexicalBlock(scope: !12838, file: !12787, line: 109, column: 2)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !12787, line: 109, column: 2)
!12839 = distinct !DILexicalBlock(scope: !12824, file: !12787, line: 109, column: 2)
!12840 = !DILocation(line: 119, column: 11, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12824, file: !12787, line: 119, column: 6)
!12842 = !DILocation(line: 119, column: 20, scope: !12841)
!12843 = !DILocalVariable(name: "esf", arg: 1, scope: !12844, file: !9028, line: 71, type: !12610)
!12844 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9028, file: !9028, line: 71, type: !12845, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12847)
!12845 = !DISubroutineType(types: !12846)
!12846 = !{!153, !12610}
!12847 = !{!12843}
!12848 = !DILocation(line: 0, scope: !12844, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 119, column: 23, scope: !12841)
!12850 = !DILocation(line: 73, column: 21, scope: !12844, inlinedAt: !12849)
!12851 = !DILocation(line: 73, column: 26, scope: !12844, inlinedAt: !12849)
!12852 = !DILocation(line: 73, column: 9, scope: !12844, inlinedAt: !12849)
!12853 = !DILocation(line: 119, column: 6, scope: !12824)
!12854 = !DILocation(line: 120, column: 3, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12787, line: 120, column: 3)
!12856 = distinct !DILexicalBlock(scope: !12857, file: !12787, line: 120, column: 3)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12787, line: 120, column: 3)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !12787, line: 120, column: 3)
!12859 = distinct !DILexicalBlock(scope: !12841, file: !12787, line: 119, column: 57)
!12860 = !DILocation(line: 121, column: 2, scope: !12859)
!12861 = !DILocation(line: 124, column: 2, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !12787, line: 124, column: 2)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !12787, line: 124, column: 2)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !12787, line: 124, column: 2)
!12865 = distinct !DILexicalBlock(scope: !12824, file: !12787, line: 124, column: 2)
!12866 = !DILocation(line: 131, column: 2, scope: !12824)
!12867 = !DILocation(line: 0, scope: !12844, inlinedAt: !12868)
!12868 = distinct !DILocation(line: 151, column: 24, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !12787, line: 151, column: 7)
!12870 = distinct !DILexicalBlock(scope: !12871, file: !12787, line: 146, column: 32)
!12871 = distinct !DILexicalBlock(scope: !12824, file: !12787, line: 146, column: 6)
!12872 = !DILocation(line: 151, column: 7, scope: !12870)
!12873 = !DILocation(line: 151, column: 21, scope: !12869)
!12874 = !DILocalVariable(name: "key", arg: 1, scope: !12875, file: !8182, line: 84, type: !32)
!12875 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12876)
!12876 = !{!12874}
!12877 = !DILocation(line: 0, scope: !12875, inlinedAt: !12878)
!12878 = distinct !DILocation(line: 186, column: 2, scope: !12824)
!12879 = !DILocation(line: 95, column: 2, scope: !12875, inlinedAt: !12878)
!12880 = !{i64 2845090}
!12881 = !DILocation(line: 189, column: 3, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !12787, line: 188, column: 41)
!12883 = distinct !DILexicalBlock(scope: !12824, file: !12787, line: 188, column: 6)
!12884 = !DILocation(line: 191, column: 1, scope: !12824)
!12885 = distinct !DISubprogram(name: "k_current_get", scope: !2123, file: !2123, line: 530, type: !12886, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !1896)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!12888}
!12888 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !2040, line: 347, baseType: !12654)
!12889 = !DILocation(line: 535, column: 9, scope: !12885)
!12890 = !DILocation(line: 535, column: 2, scope: !12885)
!12891 = distinct !DISubprogram(name: "reason_to_str", scope: !12787, file: !12787, line: 62, type: !12892, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12894)
!12892 = !DISubroutineType(types: !12893)
!12893 = !{!140, !32}
!12894 = !{!12895}
!12895 = !DILocalVariable(name: "reason", arg: 1, scope: !12891, file: !12787, line: 62, type: !32)
!12896 = !DILocation(line: 0, scope: !12891)
!12897 = !DILocation(line: 64, column: 2, scope: !12891)
!12898 = !DILocation(line: 0, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12891, file: !12787, line: 64, column: 18)
!12900 = !DILocation(line: 78, column: 1, scope: !12891)
!12901 = distinct !DISubprogram(name: "thread_name_get", scope: !12787, file: !12787, line: 51, type: !12902, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12904)
!12902 = !DISubroutineType(types: !12903)
!12903 = !{!140, !12654}
!12904 = !{!12905, !12906}
!12905 = !DILocalVariable(name: "thread", arg: 1, scope: !12901, file: !12787, line: 51, type: !12654)
!12906 = !DILocalVariable(name: "thread_name", scope: !12901, file: !12787, line: 53, type: !140)
!12907 = !DILocation(line: 0, scope: !12901)
!12908 = !DILocation(line: 53, column: 36, scope: !12901)
!12909 = !DILocation(line: 53, column: 28, scope: !12901)
!12910 = !DILocation(line: 53, column: 47, scope: !12901)
!12911 = !DILocation(line: 55, column: 19, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12901, file: !12787, line: 55, column: 6)
!12913 = !DILocation(line: 55, column: 28, scope: !12912)
!12914 = !DILocation(line: 55, column: 32, scope: !12912)
!12915 = !DILocation(line: 55, column: 47, scope: !12912)
!12916 = !DILocation(line: 55, column: 6, scope: !12901)
!12917 = !DILocation(line: 57, column: 2, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12912, file: !12787, line: 55, column: 57)
!12919 = !DILocation(line: 59, column: 2, scope: !12901)
!12920 = distinct !DISubprogram(name: "k_thread_abort", scope: !5187, file: !5187, line: 188, type: !12921, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !12923)
!12921 = !DISubroutineType(types: !12922)
!12922 = !{null, !12888}
!12923 = !{!12924}
!12924 = !DILocalVariable(name: "thread", arg: 1, scope: !12920, file: !5187, line: 188, type: !12888)
!12925 = !DILocation(line: 0, scope: !12920)
!12926 = !DILocation(line: 197, column: 2, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12920, file: !5187, line: 197, column: 2)
!12928 = !{i64 2151038823}
!12929 = !DILocation(line: 198, column: 2, scope: !12920)
!12930 = !DILocation(line: 199, column: 1, scope: !12920)
!12931 = distinct !DISubprogram(name: "z_current_get", scope: !5187, file: !5187, line: 173, type: !12886, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3098, retainedNodes: !1896)
!12932 = !DILocation(line: 180, column: 2, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12931, file: !5187, line: 180, column: 2)
!12934 = !{i64 2151038755}
!12935 = !DILocation(line: 181, column: 9, scope: !12931)
!12936 = !DILocation(line: 181, column: 2, scope: !12931)
!12937 = distinct !DISubprogram(name: "z_early_memset", scope: !1945, file: !1945, line: 108, type: !12938, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !12940)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{null, !124, !125, !272}
!12940 = !{!12941, !12942, !12943}
!12941 = !DILocalVariable(name: "dst", arg: 1, scope: !12937, file: !1945, line: 108, type: !124)
!12942 = !DILocalVariable(name: "c", arg: 2, scope: !12937, file: !1945, line: 108, type: !125)
!12943 = !DILocalVariable(name: "n", arg: 3, scope: !12937, file: !1945, line: 108, type: !272)
!12944 = !DILocation(line: 0, scope: !12937)
!12945 = !DILocation(line: 110, column: 9, scope: !12937)
!12946 = !DILocation(line: 111, column: 1, scope: !12937)
!12947 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1945, file: !1945, line: 121, type: !12948, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !12950)
!12948 = !DISubroutineType(types: !12949)
!12949 = !{null, !124, !13, !272}
!12950 = !{!12951, !12952, !12953}
!12951 = !DILocalVariable(name: "dst", arg: 1, scope: !12947, file: !1945, line: 121, type: !124)
!12952 = !DILocalVariable(name: "src", arg: 2, scope: !12947, file: !1945, line: 121, type: !13)
!12953 = !DILocalVariable(name: "n", arg: 3, scope: !12947, file: !1945, line: 121, type: !272)
!12954 = !DILocation(line: 0, scope: !12947)
!12955 = !DILocation(line: 123, column: 9, scope: !12947)
!12956 = !DILocation(line: 124, column: 1, scope: !12947)
!12957 = distinct !DISubprogram(name: "z_bss_zero", scope: !1945, file: !1945, line: 132, type: !3135, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !1896)
!12958 = !DILocation(line: 143, column: 2, scope: !12957)
!12959 = !DILocation(line: 168, column: 1, scope: !12957)
!12960 = distinct !DISubprogram(name: "z_init_cpu", scope: !1945, file: !1945, line: 372, type: !12961, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !12963)
!12961 = !DISubroutineType(types: !12962)
!12962 = !{null, !125}
!12963 = !{!12964}
!12964 = !DILocalVariable(name: "id", arg: 1, scope: !12960, file: !1945, line: 372, type: !125)
!12965 = !DILocation(line: 0, scope: !12960)
!12966 = !DILocation(line: 374, column: 2, scope: !12960)
!12967 = !DILocation(line: 375, column: 34, scope: !12960)
!12968 = !DILocation(line: 375, column: 19, scope: !12960)
!12969 = !DILocation(line: 375, column: 31, scope: !12960)
!12970 = !DILocation(line: 376, column: 24, scope: !12960)
!12971 = !DILocation(line: 376, column: 19, scope: !12960)
!12972 = !DILocation(line: 376, column: 22, scope: !12960)
!12973 = !DILocation(line: 378, column: 26, scope: !12960)
!12974 = !DILocation(line: 378, column: 4, scope: !12960)
!12975 = !DILocation(line: 378, column: 50, scope: !12960)
!12976 = !DILocation(line: 377, column: 19, scope: !12960)
!12977 = !DILocation(line: 377, column: 29, scope: !12960)
!12978 = !DILocation(line: 384, column: 1, scope: !12960)
!12979 = distinct !DISubprogram(name: "init_idle_thread", scope: !1945, file: !1945, line: 343, type: !12961, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !12980)
!12980 = !{!12981, !12982, !12983, !12986}
!12981 = !DILocalVariable(name: "i", arg: 1, scope: !12979, file: !1945, line: 343, type: !125)
!12982 = !DILocalVariable(name: "thread", scope: !12979, file: !1945, line: 345, type: !2038)
!12983 = !DILocalVariable(name: "stack", scope: !12979, file: !1945, line: 346, type: !12984)
!12984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12985, size: 32)
!12985 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5072, line: 44, baseType: !2156)
!12986 = !DILocalVariable(name: "tname", scope: !12979, file: !1945, line: 358, type: !393)
!12987 = !DILocation(line: 0, scope: !12979)
!12988 = !DILocation(line: 345, column: 29, scope: !12979)
!12989 = !DILocation(line: 346, column: 28, scope: !12979)
!12990 = !DILocation(line: 362, column: 37, scope: !12979)
!12991 = !DILocation(line: 362, column: 36, scope: !12979)
!12992 = !DILocation(line: 361, column: 2, scope: !12979)
!12993 = !DILocation(line: 365, column: 2, scope: !12979)
!12994 = !DILocation(line: 370, column: 1, scope: !12979)
!12995 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2157, file: !2157, line: 331, type: !12996, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !12998)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!393, !12984}
!12998 = !{!12999}
!12999 = !DILocalVariable(name: "sym", arg: 1, scope: !12995, file: !2157, line: 331, type: !12984)
!13000 = !DILocation(line: 0, scope: !12995)
!13001 = !DILocation(line: 333, column: 9, scope: !12995)
!13002 = !DILocation(line: 333, column: 2, scope: !12995)
!13003 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13004, file: !13004, line: 155, type: !13005, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13007)
!13004 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13005 = !DISubroutineType(types: !13006)
!13006 = !{null, !2038}
!13007 = !{!13008}
!13008 = !DILocalVariable(name: "thread", arg: 1, scope: !13003, file: !13004, line: 155, type: !2038)
!13009 = !DILocation(line: 0, scope: !13003)
!13010 = !DILocation(line: 157, column: 15, scope: !13003)
!13011 = !DILocation(line: 157, column: 28, scope: !13003)
!13012 = !DILocation(line: 158, column: 1, scope: !13003)
!13013 = distinct !DISubprogram(name: "z_cstart", scope: !1945, file: !1945, line: 501, type: !3135, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13014)
!13014 = !{!13015}
!13015 = !DILocalVariable(name: "dummy_thread", scope: !13013, file: !1945, line: 518, type: !2039)
!13016 = !DILocation(line: 507, column: 2, scope: !13013)
!13017 = !DILocation(line: 43, column: 14, scope: !13018, inlinedAt: !13022)
!13018 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13019, file: !13019, line: 40, type: !3135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13020)
!13019 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "msp", scope: !13018, file: !13019, line: 42, type: !208)
!13022 = distinct !DILocation(line: 44, column: 2, scope: !13023, inlinedAt: !13025)
!13023 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13024, file: !13024, line: 42, type: !3135, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !1896)
!13024 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13025 = distinct !DILocation(line: 510, column: 2, scope: !13013)
!13026 = !DILocation(line: 43, column: 3, scope: !13018, inlinedAt: !13022)
!13027 = !DILocation(line: 43, column: 60, scope: !13018, inlinedAt: !13022)
!13028 = !DILocation(line: 0, scope: !13018, inlinedAt: !13022)
!13029 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13030, file: !8067, line: 1153, type: !208)
!13030 = distinct !DISubprogram(name: "__set_MSP", scope: !8067, file: !8067, line: 1153, type: !8158, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13031)
!13031 = !{!13029}
!13032 = !DILocation(line: 0, scope: !13030, inlinedAt: !13033)
!13033 = distinct !DILocation(line: 46, column: 2, scope: !13018, inlinedAt: !13022)
!13034 = !DILocation(line: 1155, column: 3, scope: !13030, inlinedAt: !13033)
!13035 = !{i64 7499463}
!13036 = !DILocation(line: 62, column: 11, scope: !13018, inlinedAt: !13022)
!13037 = !DILocation(line: 102, column: 2, scope: !13038, inlinedAt: !13039)
!13038 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9028, file: !9028, line: 97, type: !3135, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !1896)
!13039 = distinct !DILocation(line: 45, column: 2, scope: !13023, inlinedAt: !13025)
!13040 = !DILocation(line: 108, column: 2, scope: !13038, inlinedAt: !13039)
!13041 = !DILocation(line: 112, column: 2, scope: !13038, inlinedAt: !13039)
!13042 = !DILocation(line: 113, column: 2, scope: !13038, inlinedAt: !13039)
!13043 = !DILocation(line: 114, column: 2, scope: !13038, inlinedAt: !13039)
!13044 = !DILocation(line: 116, column: 2, scope: !13038, inlinedAt: !13039)
!13045 = !DILocation(line: 123, column: 13, scope: !13038, inlinedAt: !13039)
!13046 = !DILocation(line: 46, column: 2, scope: !13023, inlinedAt: !13025)
!13047 = !DILocation(line: 47, column: 2, scope: !13023, inlinedAt: !13025)
!13048 = !DILocation(line: 174, column: 12, scope: !13049, inlinedAt: !13050)
!13049 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9028, file: !9028, line: 169, type: !3135, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !1896)
!13050 = distinct !DILocation(line: 48, column: 2, scope: !13023, inlinedAt: !13025)
!13051 = !DILocation(line: 179, column: 12, scope: !13049, inlinedAt: !13050)
!13052 = !DILocation(line: 518, column: 2, scope: !13013)
!13053 = !DILocation(line: 518, column: 18, scope: !13013)
!13054 = !DILocation(line: 520, column: 2, scope: !13013)
!13055 = !DILocation(line: 523, column: 2, scope: !13013)
!13056 = !DILocation(line: 526, column: 2, scope: !13013)
!13057 = !DILocation(line: 527, column: 2, scope: !13013)
!13058 = !DILocation(line: 543, column: 24, scope: !13013)
!13059 = !DILocation(line: 543, column: 2, scope: !13013)
!13060 = !DILocation(line: 0, scope: !2181)
!13061 = !DILocation(line: 246, column: 15, scope: !2199)
!13062 = !DILocation(line: 246, column: 36, scope: !2198)
!13063 = !DILocation(line: 246, column: 2, scope: !2199)
!13064 = !DILocation(line: 247, column: 37, scope: !2197)
!13065 = !DILocation(line: 0, scope: !2197)
!13066 = !DILocation(line: 248, column: 19, scope: !2197)
!13067 = !DILocation(line: 248, column: 12, scope: !2197)
!13068 = !DILocation(line: 250, column: 11, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !2197, file: !1945, line: 250, column: 7)
!13070 = !DILocation(line: 250, column: 7, scope: !2197)
!13071 = !DILocation(line: 254, column: 11, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !1945, line: 254, column: 8)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !1945, line: 250, column: 20)
!13074 = !DILocation(line: 254, column: 8, scope: !13073)
!13075 = !DILocation(line: 255, column: 9, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13072, file: !1945, line: 254, column: 17)
!13077 = !DILocation(line: 258, column: 9, scope: !13076)
!13078 = !DILocation(line: 261, column: 28, scope: !13076)
!13079 = !DILocation(line: 261, column: 10, scope: !13076)
!13080 = !DILocation(line: 261, column: 17, scope: !13076)
!13081 = !DILocation(line: 261, column: 26, scope: !13076)
!13082 = !DILocation(line: 262, column: 4, scope: !13076)
!13083 = !DILocation(line: 263, column: 9, scope: !13073)
!13084 = !DILocation(line: 263, column: 16, scope: !13073)
!13085 = !DILocation(line: 263, column: 28, scope: !13073)
!13086 = !DILocation(line: 264, column: 3, scope: !13073)
!13087 = !DILocation(line: 246, column: 60, scope: !2198)
!13088 = distinct !{!13088, !13063, !13089}
!13089 = !DILocation(line: 265, column: 2, scope: !2199)
!13090 = !DILocation(line: 266, column: 1, scope: !2181)
!13091 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1793, file: !1793, line: 1814, type: !8101, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13092)
!13092 = !{!13093, !13094}
!13093 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13091, file: !1793, line: 1814, type: !2569)
!13094 = !DILocalVariable(name: "priority", arg: 2, scope: !13091, file: !1793, line: 1814, type: !208)
!13095 = !DILocation(line: 0, scope: !13091)
!13096 = !DILocation(line: 1822, column: 48, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13098, file: !1793, line: 1821, column: 3)
!13098 = distinct !DILexicalBlock(scope: !13091, file: !1793, line: 1816, column: 7)
!13099 = !DILocation(line: 1822, column: 32, scope: !13097)
!13100 = !DILocation(line: 1822, column: 40, scope: !13097)
!13101 = !DILocation(line: 1822, column: 5, scope: !13097)
!13102 = !DILocation(line: 1822, column: 46, scope: !13097)
!13103 = !DILocation(line: 1824, column: 1, scope: !13091)
!13104 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13024, file: !13024, line: 32, type: !3135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!13105 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13106, file: !13106, line: 215, type: !13005, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13107)
!13106 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13107 = !{!13108}
!13108 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13105, file: !13106, line: 215, type: !2038)
!13109 = !DILocation(line: 0, scope: !13105)
!13110 = !DILocation(line: 217, column: 21, scope: !13105)
!13111 = !DILocation(line: 217, column: 34, scope: !13105)
!13112 = !DILocation(line: 221, column: 21, scope: !13105)
!13113 = !DILocation(line: 221, column: 34, scope: !13105)
!13114 = !DILocation(line: 232, column: 16, scope: !13105)
!13115 = !DILocation(line: 232, column: 30, scope: !13105)
!13116 = !DILocation(line: 239, column: 24, scope: !13105)
!13117 = !DILocation(line: 240, column: 1, scope: !13105)
!13118 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1945, file: !1945, line: 399, type: !13119, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13121)
!13119 = !DISubroutineType(types: !13120)
!13120 = !{!393}
!13121 = !{!13122}
!13122 = !DILocalVariable(name: "stack_ptr", scope: !13118, file: !1945, line: 401, type: !393)
!13123 = !DILocation(line: 404, column: 2, scope: !13118)
!13124 = !DILocation(line: 416, column: 24, scope: !13118)
!13125 = !DILocation(line: 418, column: 14, scope: !13118)
!13126 = !DILocation(line: 0, scope: !13118)
!13127 = !DILocation(line: 423, column: 2, scope: !13118)
!13128 = !DILocation(line: 424, column: 2, scope: !13118)
!13129 = !DILocation(line: 426, column: 2, scope: !13118)
!13130 = !DILocation(line: 428, column: 2, scope: !13118)
!13131 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1945, file: !1945, line: 432, type: !13132, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13134)
!13132 = !DISubroutineType(types: !13133)
!13133 = !{null, !393}
!13134 = !{!13135}
!13135 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13131, file: !1945, line: 432, type: !393)
!13136 = !DILocation(line: 0, scope: !13131)
!13137 = !DILocation(line: 435, column: 2, scope: !13131)
!13138 = !DILocation(line: 445, column: 2, scope: !13131)
!13139 = distinct !DISubprogram(name: "bg_thread_main", scope: !1945, file: !1945, line: 277, type: !5074, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1941, retainedNodes: !13140)
!13140 = !{!13141, !13142, !13143}
!13141 = !DILocalVariable(name: "unused1", arg: 1, scope: !13139, file: !1945, line: 277, type: !124)
!13142 = !DILocalVariable(name: "unused2", arg: 2, scope: !13139, file: !1945, line: 277, type: !124)
!13143 = !DILocalVariable(name: "unused3", arg: 3, scope: !13139, file: !1945, line: 277, type: !124)
!13144 = !DILocation(line: 0, scope: !13139)
!13145 = !DILocation(line: 291, column: 20, scope: !13139)
!13146 = !DILocation(line: 293, column: 2, scope: !13139)
!13147 = !DILocation(line: 297, column: 2, scope: !13139)
!13148 = !DILocation(line: 305, column: 2, scope: !13139)
!13149 = !DILocation(line: 307, column: 2, scope: !13139)
!13150 = !DILocation(line: 330, column: 8, scope: !13139)
!13151 = !DILocation(line: 333, column: 34, scope: !13139)
!13152 = !DILocation(line: 339, column: 1, scope: !13139)
!13153 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2210, file: !2210, line: 45, type: !13154, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13162)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !13156, !124}
!13156 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !2123, line: 103, baseType: !13157)
!13157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13158, size: 32)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{null, !13160, !124}
!13160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13161, size: 32)
!13161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2215)
!13162 = !{!13163, !13164}
!13163 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13153, file: !2210, line: 45, type: !13156)
!13164 = !DILocalVariable(name: "user_data", arg: 2, scope: !13153, file: !2210, line: 45, type: !124)
!13165 = !DILocation(line: 0, scope: !13153)
!13166 = !DILocation(line: 71, column: 1, scope: !13153)
!13167 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2210, file: !2210, line: 73, type: !13154, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13168)
!13168 = !{!13169, !13170}
!13169 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13167, file: !2210, line: 73, type: !13156)
!13170 = !DILocalVariable(name: "user_data", arg: 2, scope: !13167, file: !2210, line: 73, type: !124)
!13171 = !DILocation(line: 0, scope: !13167)
!13172 = !DILocation(line: 95, column: 1, scope: !13167)
!13173 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2210, file: !2210, line: 97, type: !9029, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !1896)
!13174 = !DILocation(line: 1031, column: 3, scope: !13175, inlinedAt: !13178)
!13175 = distinct !DISubprogram(name: "__get_IPSR", scope: !8067, file: !8067, line: 1027, type: !8148, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13176)
!13176 = !{!13177}
!13177 = !DILocalVariable(name: "result", scope: !13175, file: !8067, line: 1029, type: !208)
!13178 = distinct !DILocation(line: 48, column: 10, scope: !13179, inlinedAt: !13180)
!13179 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9028, file: !9028, line: 46, type: !9029, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !1896)
!13180 = distinct !DILocation(line: 99, column: 9, scope: !13173)
!13181 = !{i64 7014283}
!13182 = !DILocation(line: 0, scope: !13175, inlinedAt: !13178)
!13183 = !DILocation(line: 48, column: 9, scope: !13179, inlinedAt: !13180)
!13184 = !DILocation(line: 99, column: 2, scope: !13173)
!13185 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2210, file: !2210, line: 106, type: !3135, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !1896)
!13186 = !DILocation(line: 108, column: 2, scope: !13185)
!13187 = !DILocation(line: 108, column: 17, scope: !13185)
!13188 = !DILocation(line: 108, column: 30, scope: !13185)
!13189 = !DILocation(line: 109, column: 1, scope: !13185)
!13190 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2210, file: !2210, line: 116, type: !3135, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !1896)
!13191 = !DILocation(line: 118, column: 2, scope: !13190)
!13192 = !DILocation(line: 118, column: 17, scope: !13190)
!13193 = !DILocation(line: 118, column: 30, scope: !13190)
!13194 = !DILocation(line: 119, column: 1, scope: !13190)
!13195 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2210, file: !2210, line: 126, type: !9029, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !1896)
!13196 = !DILocation(line: 128, column: 10, scope: !13195)
!13197 = !DILocation(line: 128, column: 25, scope: !13195)
!13198 = !DILocation(line: 128, column: 38, scope: !13195)
!13199 = !DILocation(line: 128, column: 53, scope: !13195)
!13200 = !DILocation(line: 128, column: 2, scope: !13195)
!13201 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2210, file: !2210, line: 187, type: !13202, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13204)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!125, !2214, !140}
!13204 = !{!13205, !13206}
!13205 = !DILocalVariable(name: "thread", arg: 1, scope: !13201, file: !2210, line: 187, type: !2214)
!13206 = !DILocalVariable(name: "value", arg: 2, scope: !13201, file: !2210, line: 187, type: !140)
!13207 = !DILocation(line: 0, scope: !13201)
!13208 = !DILocation(line: 206, column: 2, scope: !13201)
!13209 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2210, file: !2210, line: 238, type: !13210, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13212)
!13210 = !DISubroutineType(types: !13211)
!13211 = !{!140, !2214}
!13212 = !{!13213}
!13213 = !DILocalVariable(name: "thread", arg: 1, scope: !13209, file: !2210, line: 238, type: !2214)
!13214 = !DILocation(line: 0, scope: !13209)
!13215 = !DILocation(line: 244, column: 2, scope: !13209)
!13216 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2210, file: !2210, line: 248, type: !13217, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13219)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{!125, !2213, !393, !272}
!13219 = !{!13220, !13221, !13222}
!13220 = !DILocalVariable(name: "thread", arg: 1, scope: !13216, file: !2210, line: 248, type: !2213)
!13221 = !DILocalVariable(name: "buf", arg: 2, scope: !13216, file: !2210, line: 248, type: !393)
!13222 = !DILocalVariable(name: "size", arg: 3, scope: !13216, file: !2210, line: 248, type: !272)
!13223 = !DILocation(line: 0, scope: !13216)
!13224 = !DILocation(line: 257, column: 2, scope: !13216)
!13225 = !DILocation(line: 0, scope: !2209)
!13226 = !DILocation(line: 281, column: 11, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !2209, file: !2210, line: 281, column: 6)
!13228 = !DILocation(line: 281, column: 20, scope: !13227)
!13229 = !DILocation(line: 275, column: 45, scope: !2209)
!13230 = !DILocation(line: 285, column: 10, scope: !2209)
!13231 = !DILocation(line: 0, scope: !2327)
!13232 = !DILocation(line: 293, column: 39, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !2327, file: !2210, line: 293, column: 2)
!13234 = !DILocation(line: 293, column: 2, scope: !2327)
!13235 = !DILocation(line: 273, column: 14, scope: !2209)
!13236 = !DILocation(line: 309, column: 2, scope: !2209)
!13237 = !DILocation(line: 309, column: 11, scope: !2209)
!13238 = !DILocation(line: 311, column: 2, scope: !2209)
!13239 = !DILocation(line: 293, column: 26, scope: !13233)
!13240 = !DILocation(line: 294, column: 9, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13233, file: !2210, line: 293, column: 54)
!13242 = !DILocation(line: 295, column: 21, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13241, file: !2210, line: 295, column: 7)
!13244 = !DILocation(line: 295, column: 28, scope: !13243)
!13245 = !DILocation(line: 295, column: 7, scope: !13241)
!13246 = !DILocation(line: 299, column: 25, scope: !13241)
!13247 = !DILocation(line: 299, column: 41, scope: !13241)
!13248 = !DILocation(line: 300, column: 7, scope: !13241)
!13249 = !DILocation(line: 300, column: 26, scope: !13241)
!13250 = !DILocation(line: 299, column: 10, scope: !13241)
!13251 = !DILocation(line: 299, column: 7, scope: !13241)
!13252 = !DILocation(line: 302, column: 16, scope: !13241)
!13253 = !DILocation(line: 304, column: 20, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13241, file: !2210, line: 304, column: 7)
!13255 = !DILocation(line: 304, column: 7, scope: !13241)
!13256 = !DILocation(line: 305, column: 26, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13254, file: !2210, line: 304, column: 26)
!13258 = !DILocation(line: 305, column: 42, scope: !13257)
!13259 = !DILocation(line: 305, column: 11, scope: !13257)
!13260 = !DILocation(line: 305, column: 8, scope: !13257)
!13261 = !DILocation(line: 306, column: 3, scope: !13257)
!13262 = !DILocation(line: 293, column: 50, scope: !13233)
!13263 = !DILocation(line: 312, column: 1, scope: !2209)
!13264 = distinct !DISubprogram(name: "copy_bytes", scope: !2210, file: !2210, line: 261, type: !13265, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13267)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!272, !393, !272, !140, !272}
!13267 = !{!13268, !13269, !13270, !13271, !13272}
!13268 = !DILocalVariable(name: "dest", arg: 1, scope: !13264, file: !2210, line: 261, type: !393)
!13269 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13264, file: !2210, line: 261, type: !272)
!13270 = !DILocalVariable(name: "src", arg: 3, scope: !13264, file: !2210, line: 261, type: !140)
!13271 = !DILocalVariable(name: "src_size", arg: 4, scope: !13264, file: !2210, line: 261, type: !272)
!13272 = !DILocalVariable(name: "bytes_to_copy", scope: !13264, file: !2210, line: 263, type: !272)
!13273 = !DILocation(line: 0, scope: !13264)
!13274 = !DILocation(line: 265, column: 18, scope: !13264)
!13275 = !DILocation(line: 266, column: 2, scope: !13264)
!13276 = !DILocation(line: 268, column: 2, scope: !13264)
!13277 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2210, file: !2210, line: 383, type: !13278, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13280)
!13278 = !DISubroutineType(types: !13279)
!13279 = !{null, !2214}
!13280 = !{!13281}
!13281 = !DILocalVariable(name: "thread", arg: 1, scope: !13277, file: !2210, line: 383, type: !2214)
!13282 = !DILocation(line: 0, scope: !13277)
!13283 = !DILocation(line: 387, column: 2, scope: !13277)
!13284 = !DILocation(line: 388, column: 1, scope: !13277)
!13285 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2210, file: !2210, line: 528, type: !13286, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13293)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{!393, !2214, !13288, !272, !5071, !124, !124, !124, !125, !208, !140}
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13289, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5072, line: 44, baseType: !13290)
!13290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2157, line: 47, size: 8, elements: !13291)
!13291 = !{!13292}
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13290, file: !2157, line: 48, baseType: !142, size: 8)
!13293 = !{!13294, !13295, !13296, !13297, !13298, !13299, !13300, !13301, !13302, !13303, !13304}
!13294 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13285, file: !2210, line: 528, type: !2214)
!13295 = !DILocalVariable(name: "stack", arg: 2, scope: !13285, file: !2210, line: 529, type: !13288)
!13296 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13285, file: !2210, line: 529, type: !272)
!13297 = !DILocalVariable(name: "entry", arg: 4, scope: !13285, file: !2210, line: 530, type: !5071)
!13298 = !DILocalVariable(name: "p1", arg: 5, scope: !13285, file: !2210, line: 531, type: !124)
!13299 = !DILocalVariable(name: "p2", arg: 6, scope: !13285, file: !2210, line: 531, type: !124)
!13300 = !DILocalVariable(name: "p3", arg: 7, scope: !13285, file: !2210, line: 531, type: !124)
!13301 = !DILocalVariable(name: "prio", arg: 8, scope: !13285, file: !2210, line: 532, type: !125)
!13302 = !DILocalVariable(name: "options", arg: 9, scope: !13285, file: !2210, line: 532, type: !208)
!13303 = !DILocalVariable(name: "name", arg: 10, scope: !13285, file: !2210, line: 532, type: !140)
!13304 = !DILocalVariable(name: "stack_ptr", scope: !13285, file: !2210, line: 534, type: !393)
!13305 = !DILocation(line: 0, scope: !13285)
!13306 = !DILocation(line: 550, column: 28, scope: !13285)
!13307 = !DILocation(line: 550, column: 2, scope: !13285)
!13308 = !DILocation(line: 553, column: 34, scope: !13285)
!13309 = !DILocation(line: 553, column: 2, scope: !13285)
!13310 = !DILocation(line: 554, column: 14, scope: !13285)
!13311 = !DILocation(line: 564, column: 2, scope: !13285)
!13312 = !DILocation(line: 567, column: 14, scope: !13285)
!13313 = !DILocation(line: 567, column: 24, scope: !13285)
!13314 = !DILocation(line: 612, column: 7, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13285, file: !2210, line: 612, column: 6)
!13316 = !DILocation(line: 612, column: 6, scope: !13285)
!13317 = !DILocation(line: 627, column: 40, scope: !13285)
!13318 = !DILocation(line: 637, column: 2, scope: !13285)
!13319 = !DILocation(line: 613, column: 15, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13315, file: !2210, line: 612, column: 17)
!13321 = !DILocation(line: 613, column: 29, scope: !13320)
!13322 = !DILocation(line: 638, column: 1, scope: !13285)
!13323 = distinct !DISubprogram(name: "z_waitq_init", scope: !13324, file: !13324, line: 47, type: !13325, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13327)
!13324 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13325 = !DISubroutineType(types: !13326)
!13326 = !{null, !2245}
!13327 = !{!13328}
!13328 = !DILocalVariable(name: "w", arg: 1, scope: !13323, file: !13324, line: 47, type: !2245)
!13329 = !DILocation(line: 0, scope: !13323)
!13330 = !DILocation(line: 49, column: 21, scope: !13323)
!13331 = !DILocation(line: 49, column: 2, scope: !13323)
!13332 = !DILocation(line: 50, column: 1, scope: !13323)
!13333 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2210, file: !2210, line: 791, type: !13334, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13337)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{null, !13336, !125, !208, !32}
!13336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!13337 = !{!13338, !13339, !13340, !13341}
!13338 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13333, file: !2210, line: 791, type: !13336)
!13339 = !DILocalVariable(name: "priority", arg: 2, scope: !13333, file: !2210, line: 791, type: !125)
!13340 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13333, file: !2210, line: 792, type: !208)
!13341 = !DILocalVariable(name: "options", arg: 4, scope: !13333, file: !2210, line: 792, type: !32)
!13342 = !DILocation(line: 0, scope: !13333)
!13343 = !DILocation(line: 795, column: 15, scope: !13333)
!13344 = !DILocation(line: 795, column: 25, scope: !13333)
!13345 = !DILocation(line: 796, column: 30, scope: !13333)
!13346 = !DILocation(line: 796, column: 15, scope: !13333)
!13347 = !DILocation(line: 796, column: 28, scope: !13333)
!13348 = !DILocation(line: 797, column: 30, scope: !13333)
!13349 = !DILocation(line: 797, column: 15, scope: !13333)
!13350 = !DILocation(line: 797, column: 28, scope: !13333)
!13351 = !DILocation(line: 799, column: 22, scope: !13333)
!13352 = !DILocation(line: 799, column: 15, scope: !13333)
!13353 = !DILocation(line: 799, column: 20, scope: !13333)
!13354 = !DILocation(line: 801, column: 15, scope: !13333)
!13355 = !DILocation(line: 801, column: 28, scope: !13333)
!13356 = !DILocation(line: 814, column: 2, scope: !13333)
!13357 = !DILocation(line: 815, column: 1, scope: !13333)
!13358 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2210, file: !2210, line: 449, type: !13359, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!393, !2214, !13288, !272}
!13361 = !{!13362, !13363, !13364, !13365, !13366, !13367, !13368, !13369}
!13362 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13358, file: !2210, line: 449, type: !2214)
!13363 = !DILocalVariable(name: "stack", arg: 2, scope: !13358, file: !2210, line: 450, type: !13288)
!13364 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13358, file: !2210, line: 450, type: !272)
!13365 = !DILocalVariable(name: "stack_obj_size", scope: !13358, file: !2210, line: 452, type: !272)
!13366 = !DILocalVariable(name: "stack_buf_size", scope: !13358, file: !2210, line: 452, type: !272)
!13367 = !DILocalVariable(name: "stack_ptr", scope: !13358, file: !2210, line: 453, type: !393)
!13368 = !DILocalVariable(name: "stack_buf_start", scope: !13358, file: !2210, line: 453, type: !393)
!13369 = !DILocalVariable(name: "delta", scope: !13358, file: !2210, line: 454, type: !272)
!13370 = !DILocation(line: 0, scope: !13358)
!13371 = !DILocation(line: 465, column: 20, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13358, file: !2210, line: 463, column: 2)
!13373 = !DILocation(line: 473, column: 28, scope: !13358)
!13374 = !DILocation(line: 520, column: 2, scope: !13358)
!13375 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13376, file: !13376, line: 40, type: !13377, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13379)
!13376 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13377 = !DISubroutineType(types: !13378)
!13378 = !{null, !13336}
!13379 = !{!13380}
!13380 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13375, file: !13376, line: 40, type: !13336)
!13381 = !DILocation(line: 0, scope: !13375)
!13382 = !DILocation(line: 42, column: 31, scope: !13375)
!13383 = !DILocation(line: 42, column: 2, scope: !13375)
!13384 = !DILocation(line: 43, column: 1, scope: !13375)
!13385 = distinct !DISubprogram(name: "z_init_timeout", scope: !13376, file: !13376, line: 25, type: !2271, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13386)
!13386 = !{!13387}
!13387 = !DILocalVariable(name: "to", arg: 1, scope: !13385, file: !13376, line: 25, type: !2273)
!13388 = !DILocation(line: 0, scope: !13385)
!13389 = !DILocation(line: 27, column: 22, scope: !13385)
!13390 = !DILocation(line: 27, column: 2, scope: !13385)
!13391 = !DILocation(line: 28, column: 1, scope: !13385)
!13392 = distinct !DISubprogram(name: "sys_dnode_init", scope: !2050, file: !2050, line: 211, type: !13393, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13395)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{null, !2311}
!13395 = !{!13396}
!13396 = !DILocalVariable(name: "node", arg: 1, scope: !13392, file: !2050, line: 211, type: !2311)
!13397 = !DILocation(line: 0, scope: !13392)
!13398 = !DILocation(line: 213, column: 8, scope: !13392)
!13399 = !DILocation(line: 213, column: 13, scope: !13392)
!13400 = !DILocation(line: 214, column: 8, scope: !13392)
!13401 = !DILocation(line: 214, column: 13, scope: !13392)
!13402 = !DILocation(line: 215, column: 1, scope: !13392)
!13403 = distinct !DISubprogram(name: "sys_dlist_init", scope: !2050, file: !2050, line: 197, type: !13404, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13407)
!13404 = !DISubroutineType(types: !13405)
!13405 = !{null, !13406}
!13406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!13407 = !{!13408}
!13408 = !DILocalVariable(name: "list", arg: 1, scope: !13403, file: !2050, line: 197, type: !13406)
!13409 = !DILocation(line: 0, scope: !13403)
!13410 = !DILocation(line: 199, column: 8, scope: !13403)
!13411 = !DILocation(line: 199, column: 13, scope: !13403)
!13412 = !DILocation(line: 200, column: 8, scope: !13403)
!13413 = !DILocation(line: 200, column: 13, scope: !13403)
!13414 = !DILocation(line: 201, column: 1, scope: !13403)
!13415 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2210, file: !2210, line: 641, type: !13416, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13422)
!13416 = !DISubroutineType(types: !13417)
!13417 = !{!2213, !2214, !13288, !272, !5071, !124, !124, !124, !125, !208, !13418}
!13418 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1789, line: 67, baseType: !13419)
!13419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1789, line: 65, size: 64, elements: !13420)
!13420 = !{!13421}
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13419, file: !1789, line: 66, baseType: !1788, size: 64)
!13422 = !{!13423, !13424, !13425, !13426, !13427, !13428, !13429, !13430, !13431, !13432}
!13423 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13415, file: !2210, line: 641, type: !2214)
!13424 = !DILocalVariable(name: "stack", arg: 2, scope: !13415, file: !2210, line: 642, type: !13288)
!13425 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13415, file: !2210, line: 643, type: !272)
!13426 = !DILocalVariable(name: "entry", arg: 4, scope: !13415, file: !2210, line: 643, type: !5071)
!13427 = !DILocalVariable(name: "p1", arg: 5, scope: !13415, file: !2210, line: 644, type: !124)
!13428 = !DILocalVariable(name: "p2", arg: 6, scope: !13415, file: !2210, line: 644, type: !124)
!13429 = !DILocalVariable(name: "p3", arg: 7, scope: !13415, file: !2210, line: 644, type: !124)
!13430 = !DILocalVariable(name: "prio", arg: 8, scope: !13415, file: !2210, line: 645, type: !125)
!13431 = !DILocalVariable(name: "options", arg: 9, scope: !13415, file: !2210, line: 645, type: !208)
!13432 = !DILocalVariable(name: "delay", arg: 10, scope: !13415, file: !2210, line: 645, type: !13418)
!13433 = !DILocation(line: 0, scope: !13415)
!13434 = !DILocation(line: 649, column: 2, scope: !13415)
!13435 = !DILocation(line: 652, column: 7, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13415, file: !2210, line: 652, column: 6)
!13437 = !DILocation(line: 652, column: 6, scope: !13415)
!13438 = !DILocation(line: 653, column: 3, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13436, file: !2210, line: 652, column: 39)
!13440 = !DILocation(line: 654, column: 2, scope: !13439)
!13441 = !DILocation(line: 656, column: 2, scope: !13415)
!13442 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2210, file: !2210, line: 401, type: !13443, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13445)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{null, !2214, !13418}
!13445 = !{!13446, !13447}
!13446 = !DILocalVariable(name: "thread", arg: 1, scope: !13442, file: !2210, line: 401, type: !2214)
!13447 = !DILocalVariable(name: "delay", arg: 2, scope: !13442, file: !2210, line: 401, type: !13418)
!13448 = !DILocation(line: 0, scope: !13442)
!13449 = !DILocation(line: 404, column: 6, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13442, file: !2210, line: 404, column: 6)
!13451 = !DILocation(line: 404, column: 6, scope: !13442)
!13452 = !DILocation(line: 405, column: 3, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !2210, line: 404, column: 38)
!13454 = !DILocation(line: 406, column: 2, scope: !13453)
!13455 = !DILocation(line: 407, column: 3, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13450, file: !2210, line: 406, column: 9)
!13457 = !DILocation(line: 413, column: 1, scope: !13442)
!13458 = distinct !DISubprogram(name: "k_thread_start", scope: !5187, file: !5187, line: 205, type: !13459, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13461)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{null, !2213}
!13461 = !{!13462}
!13462 = !DILocalVariable(name: "thread", arg: 1, scope: !13458, file: !5187, line: 205, type: !2213)
!13463 = !DILocation(line: 0, scope: !13458)
!13464 = !DILocation(line: 214, column: 2, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13458, file: !5187, line: 214, column: 2)
!13466 = !{i64 2151064047}
!13467 = !DILocation(line: 215, column: 2, scope: !13458)
!13468 = !DILocation(line: 216, column: 1, scope: !13458)
!13469 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13376, file: !13376, line: 47, type: !13443, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13470)
!13470 = !{!13471, !13472}
!13471 = !DILocalVariable(name: "thread", arg: 1, scope: !13469, file: !13376, line: 47, type: !2214)
!13472 = !DILocalVariable(name: "ticks", arg: 2, scope: !13469, file: !13376, line: 47, type: !13418)
!13473 = !DILocation(line: 0, scope: !13469)
!13474 = !DILocation(line: 49, column: 30, scope: !13469)
!13475 = !DILocation(line: 49, column: 2, scope: !13469)
!13476 = !DILocation(line: 50, column: 1, scope: !13469)
!13477 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2210, file: !2210, line: 748, type: !3135, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13478)
!13478 = !{!13479, !13497}
!13479 = !DILocalVariable(name: "thread_data", scope: !13480, file: !2210, line: 750, type: !13481)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !2210, line: 750, column: 2)
!13481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13482, size: 32)
!13482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !2123, line: 620, size: 384, elements: !13483)
!13483 = !{!13484, !13485, !13486, !13487, !13488, !13489, !13490, !13491, !13492, !13493, !13494, !13496}
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13482, file: !2123, line: 621, baseType: !2214, size: 32)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13482, file: !2123, line: 622, baseType: !13288, size: 32, offset: 32)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13482, file: !2123, line: 623, baseType: !32, size: 32, offset: 64)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13482, file: !2123, line: 624, baseType: !5071, size: 32, offset: 96)
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13482, file: !2123, line: 625, baseType: !124, size: 32, offset: 128)
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13482, file: !2123, line: 626, baseType: !124, size: 32, offset: 160)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13482, file: !2123, line: 627, baseType: !124, size: 32, offset: 192)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13482, file: !2123, line: 628, baseType: !125, size: 32, offset: 224)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13482, file: !2123, line: 629, baseType: !208, size: 32, offset: 256)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13482, file: !2123, line: 630, baseType: !1354, size: 32, offset: 288)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13482, file: !2123, line: 631, baseType: !13495, size: 32, offset: 320)
!13495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13482, file: !2123, line: 632, baseType: !140, size: 32, offset: 352)
!13497 = !DILocalVariable(name: "thread_data", scope: !13498, file: !2210, line: 781, type: !13481)
!13498 = distinct !DILexicalBlock(scope: !13477, file: !2210, line: 781, column: 2)
!13499 = !DILocation(line: 0, scope: !13480)
!13500 = !DILocation(line: 750, column: 2, scope: !13480)
!13501 = !DILocation(line: 780, column: 2, scope: !13477)
!13502 = !DILocation(line: 0, scope: !13498)
!13503 = !DILocation(line: 781, column: 2, scope: !13498)
!13504 = !DILocation(line: 752, column: 17, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !2210, line: 750, column: 38)
!13506 = distinct !DILexicalBlock(scope: !13480, file: !2210, line: 750, column: 2)
!13507 = !DILocation(line: 753, column: 17, scope: !13505)
!13508 = !DILocation(line: 754, column: 17, scope: !13505)
!13509 = !DILocation(line: 755, column: 17, scope: !13505)
!13510 = !DILocation(line: 756, column: 17, scope: !13505)
!13511 = !DILocation(line: 757, column: 17, scope: !13505)
!13512 = !DILocation(line: 758, column: 17, scope: !13505)
!13513 = !DILocation(line: 759, column: 17, scope: !13505)
!13514 = !DILocation(line: 760, column: 17, scope: !13505)
!13515 = !DILocation(line: 751, column: 3, scope: !13505)
!13516 = !DILocation(line: 763, column: 16, scope: !13505)
!13517 = !DILocation(line: 763, column: 29, scope: !13505)
!13518 = !DILocation(line: 763, column: 39, scope: !13505)
!13519 = !DILocation(line: 750, column: 2, scope: !13506)
!13520 = !DILocation(line: 750, column: 2, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13506, file: !2210, line: 750, column: 2)
!13522 = distinct !{!13522, !13500, !13523}
!13523 = !DILocation(line: 764, column: 2, scope: !13480)
!13524 = !DILocation(line: 787, column: 2, scope: !13477)
!13525 = !DILocation(line: 788, column: 1, scope: !13477)
!13526 = !DILocation(line: 782, column: 20, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13528, file: !2210, line: 782, column: 7)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !2210, line: 781, column: 38)
!13529 = distinct !DILexicalBlock(scope: !13498, file: !2210, line: 781, column: 2)
!13530 = !DILocation(line: 782, column: 31, scope: !13527)
!13531 = !DILocation(line: 782, column: 7, scope: !13528)
!13532 = !DILocation(line: 783, column: 37, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13527, file: !2210, line: 782, column: 51)
!13534 = !DILocation(line: 784, column: 10, scope: !13533)
!13535 = !DILocation(line: 783, column: 4, scope: !13533)
!13536 = !DILocation(line: 785, column: 3, scope: !13533)
!13537 = !DILocation(line: 781, column: 2, scope: !13529)
!13538 = !DILocation(line: 781, column: 2, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13529, file: !2210, line: 781, column: 2)
!13540 = distinct !{!13540, !13503, !13541}
!13541 = !DILocation(line: 786, column: 2, scope: !13498)
!13542 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13543, file: !13543, line: 403, type: !13544, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13546)
!13543 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13544 = !DISubroutineType(types: !13545)
!13545 = !{!2312, !2312}
!13546 = !{!13547}
!13547 = !DILocalVariable(name: "t", arg: 1, scope: !13542, file: !13543, line: 403, type: !2312)
!13548 = !DILocation(line: 0, scope: !13542)
!13549 = !DILocalVariable(name: "t", arg: 1, scope: !13550, file: !13543, line: 102, type: !2312)
!13550 = distinct !DISubprogram(name: "z_tmcvt", scope: !13543, file: !13543, line: 102, type: !13551, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{!2312, !2312, !208, !208, !153, !153, !153, !153}
!13553 = !{!13549, !13554, !13555, !13556, !13557, !13558, !13559, !13560, !13561, !13562, !13563}
!13554 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13550, file: !13543, line: 102, type: !208)
!13555 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13550, file: !13543, line: 103, type: !208)
!13556 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13550, file: !13543, line: 103, type: !153)
!13557 = !DILocalVariable(name: "result32", arg: 5, scope: !13550, file: !13543, line: 104, type: !153)
!13558 = !DILocalVariable(name: "round_up", arg: 6, scope: !13550, file: !13543, line: 104, type: !153)
!13559 = !DILocalVariable(name: "round_off", arg: 7, scope: !13550, file: !13543, line: 105, type: !153)
!13560 = !DILocalVariable(name: "mul_ratio", scope: !13550, file: !13543, line: 107, type: !153)
!13561 = !DILocalVariable(name: "div_ratio", scope: !13550, file: !13543, line: 109, type: !153)
!13562 = !DILocalVariable(name: "off", scope: !13550, file: !13543, line: 116, type: !2312)
!13563 = !DILocalVariable(name: "rdivisor", scope: !13564, file: !13543, line: 119, type: !208)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !13543, line: 118, column: 18)
!13565 = distinct !DILexicalBlock(scope: !13550, file: !13543, line: 118, column: 6)
!13566 = !DILocation(line: 0, scope: !13550, inlinedAt: !13567)
!13567 = distinct !DILocation(line: 406, column: 9, scope: !13542)
!13568 = !DILocation(line: 145, column: 13, scope: !13569, inlinedAt: !13567)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !13543, line: 144, column: 10)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !13543, line: 142, column: 7)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !13543, line: 141, column: 24)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !13543, line: 141, column: 13)
!13573 = distinct !DILexicalBlock(scope: !13550, file: !13543, line: 134, column: 6)
!13574 = !DILocation(line: 406, column: 2, scope: !13542)
!13575 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2210, file: !2210, line: 817, type: !5069, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13576)
!13576 = !{!13577, !13578, !13579, !13580}
!13577 = !DILocalVariable(name: "entry", arg: 1, scope: !13575, file: !2210, line: 817, type: !5071)
!13578 = !DILocalVariable(name: "p1", arg: 2, scope: !13575, file: !2210, line: 818, type: !124)
!13579 = !DILocalVariable(name: "p2", arg: 3, scope: !13575, file: !2210, line: 818, type: !124)
!13580 = !DILocalVariable(name: "p3", arg: 4, scope: !13575, file: !2210, line: 818, type: !124)
!13581 = !DILocation(line: 0, scope: !13575)
!13582 = !DILocation(line: 822, column: 2, scope: !13575)
!13583 = !DILocation(line: 822, column: 17, scope: !13575)
!13584 = !DILocation(line: 822, column: 30, scope: !13575)
!13585 = !DILocation(line: 823, column: 2, scope: !13575)
!13586 = !DILocation(line: 845, column: 2, scope: !13575)
!13587 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2210, file: !2210, line: 888, type: !13588, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13590)
!13588 = !DISubroutineType(types: !13589)
!13589 = !{!125, !2214}
!13590 = !{!13591}
!13591 = !DILocalVariable(name: "thread", arg: 1, scope: !13587, file: !2210, line: 888, type: !2214)
!13592 = !DILocation(line: 0, scope: !13587)
!13593 = !DILocation(line: 893, column: 2, scope: !13587)
!13594 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2210, file: !2210, line: 897, type: !13595, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13597)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{!125, !2214, !32}
!13597 = !{!13598, !13599}
!13598 = !DILocalVariable(name: "thread", arg: 1, scope: !13594, file: !2210, line: 897, type: !2214)
!13599 = !DILocalVariable(name: "options", arg: 2, scope: !13594, file: !2210, line: 897, type: !32)
!13600 = !DILocation(line: 0, scope: !13594)
!13601 = !DILocation(line: 902, column: 2, scope: !13594)
!13602 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2210, file: !2210, line: 1072, type: !13603, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13608)
!13603 = !DISubroutineType(types: !13604)
!13604 = !{!125, !2213, !13605}
!13605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13606, size: 32)
!13606 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !2040, line: 234, baseType: !13607)
!13607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !2040, line: 192, elements: !1896)
!13608 = !{!13609, !13610}
!13609 = !DILocalVariable(name: "thread", arg: 1, scope: !13602, file: !2210, line: 1072, type: !2213)
!13610 = !DILocalVariable(name: "stats", arg: 2, scope: !13602, file: !2210, line: 1073, type: !13605)
!13611 = !DILocation(line: 0, scope: !13602)
!13612 = !DILocation(line: 1075, column: 14, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13602, file: !2210, line: 1075, column: 6)
!13614 = !DILocation(line: 1075, column: 23, scope: !13613)
!13615 = !DILocation(line: 1086, column: 1, scope: !13602)
!13616 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2210, file: !2210, line: 1088, type: !13617, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13619)
!13617 = !DISubroutineType(types: !13618)
!13618 = !{!125, !13605}
!13619 = !{!13620}
!13620 = !DILocalVariable(name: "stats", arg: 1, scope: !13616, file: !2210, line: 1088, type: !13605)
!13621 = !DILocation(line: 0, scope: !13616)
!13622 = !DILocation(line: 1094, column: 12, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13616, file: !2210, line: 1094, column: 6)
!13624 = !DILocation(line: 1120, column: 1, scope: !13616)
!13625 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13626, file: !13626, line: 20, type: !3135, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !1896)
!13626 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13627 = !DILocation(line: 30, column: 2, scope: !13625)
!13628 = !DILocation(line: 31, column: 1, scope: !13625)
!13629 = distinct !DISubprogram(name: "idle", scope: !13626, file: !13626, line: 33, type: !5074, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13630)
!13630 = !{!13631, !13632, !13633}
!13631 = !DILocalVariable(name: "unused1", arg: 1, scope: !13629, file: !13626, line: 33, type: !124)
!13632 = !DILocalVariable(name: "unused2", arg: 2, scope: !13629, file: !13626, line: 33, type: !124)
!13633 = !DILocalVariable(name: "unused3", arg: 3, scope: !13629, file: !13626, line: 33, type: !124)
!13634 = !DILocation(line: 0, scope: !13629)
!13635 = !DILocation(line: 41, column: 2, scope: !13629)
!13636 = !DILocation(line: 55, column: 2, scope: !13637, inlinedAt: !13641)
!13637 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13638)
!13638 = !{!13639, !13640}
!13639 = !DILocalVariable(name: "key", scope: !13637, file: !8182, line: 44, type: !32)
!13640 = !DILocalVariable(name: "tmp", scope: !13637, file: !8182, line: 53, type: !32)
!13641 = distinct !DILocation(line: 62, column: 10, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13629, file: !13626, line: 41, column: 15)
!13643 = !{i64 2842615}
!13644 = !DILocation(line: 0, scope: !13637, inlinedAt: !13641)
!13645 = !DILocation(line: 86, column: 3, scope: !13642)
!13646 = distinct !{!13646, !13635, !13647}
!13647 = !DILocation(line: 105, column: 2, scope: !13629)
!13648 = distinct !DISubprogram(name: "k_cpu_idle", scope: !2123, file: !2123, line: 5627, type: !3135, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !1896)
!13649 = !DILocation(line: 5629, column: 2, scope: !13648)
!13650 = !DILocation(line: 5630, column: 1, scope: !13648)
!13651 = !DISubprogram(name: "arch_cpu_idle", scope: !5072, file: !5072, line: 167, type: !3135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!13652 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2433, file: !2433, line: 93, type: !13653, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13655)
!13653 = !DISubroutineType(types: !13654)
!13654 = !{!1354, !2334, !2334}
!13655 = !{!13656, !13657, !13658, !13659}
!13656 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13652, file: !2433, line: 93, type: !2334)
!13657 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13652, file: !2433, line: 94, type: !2334)
!13658 = !DILocalVariable(name: "b1", scope: !13652, file: !2433, line: 97, type: !1354)
!13659 = !DILocalVariable(name: "b2", scope: !13652, file: !2433, line: 98, type: !1354)
!13660 = !DILocation(line: 0, scope: !13652)
!13661 = !DILocation(line: 97, column: 30, scope: !13652)
!13662 = !DILocation(line: 98, column: 30, scope: !13652)
!13663 = !DILocation(line: 100, column: 9, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13652, file: !2433, line: 100, column: 6)
!13665 = !DILocation(line: 100, column: 6, scope: !13652)
!13666 = !DILocation(line: 125, column: 1, scope: !13652)
!13667 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2433, file: !2433, line: 428, type: !13668, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13670)
!13668 = !DISubroutineType(types: !13669)
!13669 = !{null, !2334}
!13670 = !{!13671}
!13671 = !DILocalVariable(name: "curr", arg: 1, scope: !13667, file: !2433, line: 428, type: !2334)
!13672 = !DILocation(line: 0, scope: !13667)
!13673 = !DILocation(line: 434, column: 6, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13667, file: !2433, line: 434, column: 6)
!13675 = !DILocation(line: 434, column: 23, scope: !13674)
!13676 = !DILocation(line: 434, column: 6, scope: !13667)
!13677 = !DILocation(line: 435, column: 50, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13674, file: !2433, line: 434, column: 29)
!13679 = !DILocation(line: 435, column: 48, scope: !13678)
!13680 = !DILocation(line: 435, column: 29, scope: !13678)
!13681 = !DILocation(line: 436, column: 24, scope: !13678)
!13682 = !DILocation(line: 436, column: 3, scope: !13678)
!13683 = !DILocation(line: 437, column: 2, scope: !13678)
!13684 = !DILocation(line: 438, column: 1, scope: !13667)
!13685 = distinct !DISubprogram(name: "slice_time", scope: !2433, file: !2433, line: 407, type: !13686, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13688)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{!125, !2334}
!13688 = !{!13689, !13690}
!13689 = !DILocalVariable(name: "curr", arg: 1, scope: !13685, file: !2433, line: 407, type: !2334)
!13690 = !DILocalVariable(name: "ret", scope: !13685, file: !2433, line: 409, type: !125)
!13691 = !DILocation(line: 0, scope: !13685)
!13692 = !DILocation(line: 409, column: 12, scope: !13685)
!13693 = !DILocation(line: 416, column: 2, scope: !13685)
!13694 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2433, file: !2433, line: 440, type: !13695, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13697)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{null, !1354, !125}
!13697 = !{!13698, !13699, !13700, !13706}
!13698 = !DILocalVariable(name: "slice", arg: 1, scope: !13694, file: !2433, line: 440, type: !1354)
!13699 = !DILocalVariable(name: "prio", arg: 2, scope: !13694, file: !2433, line: 440, type: !125)
!13700 = !DILocalVariable(name: "__i", scope: !13701, file: !2433, line: 442, type: !13702)
!13701 = distinct !DILexicalBlock(scope: !13694, file: !2433, line: 442, column: 2)
!13702 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1895, line: 106, baseType: !13703)
!13703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1895, line: 32, size: 32, elements: !13704)
!13704 = !{!13705}
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13703, file: !1895, line: 33, baseType: !125, size: 32)
!13706 = !DILocalVariable(name: "__key", scope: !13701, file: !2433, line: 442, type: !13702)
!13707 = !DILocation(line: 0, scope: !13694)
!13708 = !DILocation(line: 0, scope: !13701)
!13709 = !DILocalVariable(name: "l", arg: 1, scope: !13710, file: !1895, line: 136, type: !13713)
!13710 = distinct !DISubprogram(name: "k_spin_lock", scope: !1895, file: !1895, line: 136, type: !13711, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13714)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{!13702, !13713}
!13713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!13714 = !{!13709, !13715}
!13715 = !DILocalVariable(name: "k", scope: !13710, file: !1895, line: 139, type: !13702)
!13716 = !DILocation(line: 0, scope: !13710, inlinedAt: !13717)
!13717 = distinct !DILocation(line: 442, column: 2, scope: !13701)
!13718 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !13723)
!13719 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13720)
!13720 = !{!13721, !13722}
!13721 = !DILocalVariable(name: "key", scope: !13719, file: !8182, line: 44, type: !32)
!13722 = !DILocalVariable(name: "tmp", scope: !13719, file: !8182, line: 53, type: !32)
!13723 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !13717)
!13724 = !{i64 2886586}
!13725 = !DILocation(line: 0, scope: !13719, inlinedAt: !13723)
!13726 = !DILocation(line: 443, column: 29, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13728, file: !2433, line: 442, column: 26)
!13728 = distinct !DILexicalBlock(scope: !13701, file: !2433, line: 442, column: 2)
!13729 = !DILocation(line: 444, column: 17, scope: !13727)
!13730 = !DILocation(line: 445, column: 51, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13727, file: !2433, line: 445, column: 7)
!13732 = !DILocation(line: 445, column: 7, scope: !13727)
!13733 = !DILocation(line: 0, scope: !13727)
!13734 = !DILocation(line: 451, column: 18, scope: !13727)
!13735 = !DILocation(line: 452, column: 3, scope: !13727)
!13736 = !DILocalVariable(name: "key", arg: 2, scope: !13737, file: !1895, line: 190, type: !13702)
!13737 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1895, file: !1895, line: 189, type: !13738, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{null, !13713, !13702}
!13740 = !{!13741, !13736}
!13741 = !DILocalVariable(name: "l", arg: 1, scope: !13737, file: !1895, line: 189, type: !13713)
!13742 = !DILocation(line: 0, scope: !13737, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 442, column: 2, scope: !13728)
!13744 = !DILocalVariable(name: "key", arg: 1, scope: !13745, file: !8182, line: 84, type: !32)
!13745 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13746)
!13746 = !{!13744}
!13747 = !DILocation(line: 0, scope: !13745, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !13743)
!13749 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13748)
!13750 = !{i64 2887403}
!13751 = !DILocation(line: 454, column: 1, scope: !13694)
!13752 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13543, file: !13543, line: 389, type: !13753, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13755)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{!208, !208}
!13755 = !{!13756}
!13756 = !DILocalVariable(name: "t", arg: 1, scope: !13752, file: !13543, line: 389, type: !208)
!13757 = !DILocation(line: 0, scope: !13752)
!13758 = !DILocalVariable(name: "t", arg: 1, scope: !13759, file: !13543, line: 102, type: !2312)
!13759 = distinct !DISubprogram(name: "z_tmcvt", scope: !13543, file: !13543, line: 102, type: !13551, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13760)
!13760 = !{!13758, !13761, !13762, !13763, !13764, !13765, !13766, !13767, !13768, !13769, !13770}
!13761 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13759, file: !13543, line: 102, type: !208)
!13762 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13759, file: !13543, line: 103, type: !208)
!13763 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13759, file: !13543, line: 103, type: !153)
!13764 = !DILocalVariable(name: "result32", arg: 5, scope: !13759, file: !13543, line: 104, type: !153)
!13765 = !DILocalVariable(name: "round_up", arg: 6, scope: !13759, file: !13543, line: 104, type: !153)
!13766 = !DILocalVariable(name: "round_off", arg: 7, scope: !13759, file: !13543, line: 105, type: !153)
!13767 = !DILocalVariable(name: "mul_ratio", scope: !13759, file: !13543, line: 107, type: !153)
!13768 = !DILocalVariable(name: "div_ratio", scope: !13759, file: !13543, line: 109, type: !153)
!13769 = !DILocalVariable(name: "off", scope: !13759, file: !13543, line: 116, type: !2312)
!13770 = !DILocalVariable(name: "rdivisor", scope: !13771, file: !13543, line: 119, type: !208)
!13771 = distinct !DILexicalBlock(scope: !13772, file: !13543, line: 118, column: 18)
!13772 = distinct !DILexicalBlock(scope: !13759, file: !13543, line: 118, column: 6)
!13773 = !DILocation(line: 0, scope: !13759, inlinedAt: !13774)
!13774 = distinct !DILocation(line: 392, column: 9, scope: !13752)
!13775 = !DILocation(line: 143, column: 25, scope: !13776, inlinedAt: !13774)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !13543, line: 142, column: 17)
!13777 = distinct !DILexicalBlock(scope: !13778, file: !13543, line: 142, column: 7)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !13543, line: 141, column: 24)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !13543, line: 141, column: 13)
!13780 = distinct !DILexicalBlock(scope: !13759, file: !13543, line: 134, column: 6)
!13781 = !DILocation(line: 392, column: 2, scope: !13752)
!13782 = distinct !DISubprogram(name: "z_time_slice", scope: !2433, file: !2433, line: 502, type: !12961, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13783)
!13783 = !{!13784, !13785}
!13784 = !DILocalVariable(name: "ticks", arg: 1, scope: !13782, file: !2433, line: 502, type: !125)
!13785 = !DILocalVariable(name: "key", scope: !13782, file: !2433, line: 511, type: !13702)
!13786 = !DILocation(line: 0, scope: !13782)
!13787 = !DILocation(line: 0, scope: !13710, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 511, column: 25, scope: !13782)
!13789 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !13788)
!13791 = !DILocation(line: 0, scope: !13719, inlinedAt: !13790)
!13792 = !DILocation(line: 514, column: 6, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13782, file: !2433, line: 514, column: 6)
!13794 = !DILocation(line: 514, column: 25, scope: !13793)
!13795 = !DILocation(line: 514, column: 22, scope: !13793)
!13796 = !DILocation(line: 514, column: 6, scope: !13782)
!13797 = !DILocation(line: 515, column: 3, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13793, file: !2433, line: 514, column: 35)
!13799 = !DILocation(line: 0, scope: !13737, inlinedAt: !13800)
!13800 = distinct !DILocation(line: 516, column: 3, scope: !13798)
!13801 = !DILocation(line: 0, scope: !13745, inlinedAt: !13802)
!13802 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !13800)
!13803 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13802)
!13804 = !DILocation(line: 517, column: 3, scope: !13798)
!13805 = !DILocation(line: 519, column: 18, scope: !13782)
!13806 = !DILocation(line: 522, column: 6, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13782, file: !2433, line: 522, column: 6)
!13808 = !DILocation(line: 522, column: 27, scope: !13807)
!13809 = !DILocation(line: 522, column: 30, scope: !13807)
!13810 = !DILocation(line: 522, column: 6, scope: !13782)
!13811 = !DILocation(line: 523, column: 30, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13813, file: !2433, line: 523, column: 7)
!13813 = distinct !DILexicalBlock(scope: !13807, file: !2433, line: 522, column: 51)
!13814 = !DILocation(line: 523, column: 13, scope: !13812)
!13815 = !DILocation(line: 523, column: 7, scope: !13813)
!13816 = !DILocation(line: 530, column: 10, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13812, file: !2433, line: 523, column: 43)
!13818 = !DILocation(line: 531, column: 3, scope: !13817)
!13819 = !DILocation(line: 532, column: 30, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13812, file: !2433, line: 531, column: 10)
!13821 = !DILocation(line: 535, column: 29, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13807, file: !2433, line: 534, column: 9)
!13823 = !DILocation(line: 0, scope: !13737, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 537, column: 2, scope: !13782)
!13825 = !DILocation(line: 0, scope: !13745, inlinedAt: !13826)
!13826 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !13824)
!13827 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !13826)
!13828 = !DILocation(line: 538, column: 1, scope: !13782)
!13829 = distinct !DISubprogram(name: "sliceable", scope: !2433, file: !2433, line: 468, type: !13830, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13832)
!13830 = !DISubroutineType(types: !13831)
!13831 = !{!153, !2334}
!13832 = !{!13833, !13834}
!13833 = !DILocalVariable(name: "thread", arg: 1, scope: !13829, file: !2433, line: 468, type: !2334)
!13834 = !DILocalVariable(name: "ret", scope: !13829, file: !2433, line: 470, type: !153)
!13835 = !DILocation(line: 0, scope: !13829)
!13836 = !DILocation(line: 470, column: 13, scope: !13829)
!13837 = !DILocation(line: 471, column: 3, scope: !13829)
!13838 = !DILocation(line: 471, column: 7, scope: !13829)
!13839 = !DILocation(line: 472, column: 3, scope: !13829)
!13840 = !DILocation(line: 472, column: 37, scope: !13829)
!13841 = !DILocation(line: 472, column: 24, scope: !13829)
!13842 = !DILocation(line: 472, column: 43, scope: !13829)
!13843 = !DILocation(line: 472, column: 7, scope: !13829)
!13844 = !DILocation(line: 473, column: 3, scope: !13829)
!13845 = !DILocation(line: 473, column: 7, scope: !13829)
!13846 = !DILocation(line: 473, column: 6, scope: !13829)
!13847 = !DILocation(line: 479, column: 2, scope: !13829)
!13848 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2433, file: !2433, line: 482, type: !13849, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13851)
!13849 = !DISubroutineType(types: !13850)
!13850 = !{!13702, !13702}
!13851 = !{!13852, !13853}
!13852 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13848, file: !2433, line: 482, type: !13702)
!13853 = !DILocalVariable(name: "curr", scope: !13848, file: !2433, line: 484, type: !2334)
!13854 = !DILocation(line: 0, scope: !13848)
!13855 = !DILocation(line: 484, column: 26, scope: !13848)
!13856 = !DILocation(line: 493, column: 7, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13848, file: !2433, line: 493, column: 6)
!13858 = !DILocation(line: 493, column: 6, scope: !13848)
!13859 = !DILocation(line: 494, column: 3, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13857, file: !2433, line: 493, column: 49)
!13861 = !DILocation(line: 495, column: 2, scope: !13860)
!13862 = !DILocation(line: 496, column: 2, scope: !13848)
!13863 = !DILocation(line: 499, column: 1, scope: !13848)
!13864 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13004, file: !13004, line: 106, type: !13830, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13865)
!13865 = !{!13866, !13867}
!13866 = !DILocalVariable(name: "thread", arg: 1, scope: !13864, file: !13004, line: 106, type: !2334)
!13867 = !DILocalVariable(name: "state", scope: !13864, file: !13004, line: 108, type: !150)
!13868 = !DILocation(line: 0, scope: !13864)
!13869 = !DILocation(line: 108, column: 31, scope: !13864)
!13870 = !DILocation(line: 110, column: 16, scope: !13864)
!13871 = !DILocation(line: 111, column: 41, scope: !13864)
!13872 = !DILocation(line: 110, column: 2, scope: !13864)
!13873 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2433, file: !2433, line: 393, type: !13668, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13874)
!13874 = !{!13875}
!13875 = !DILocalVariable(name: "thread", arg: 1, scope: !13873, file: !2433, line: 393, type: !2334)
!13876 = !DILocation(line: 0, scope: !13873)
!13877 = !DILocation(line: 395, column: 6, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13873, file: !2433, line: 395, column: 6)
!13879 = !DILocation(line: 395, column: 6, scope: !13873)
!13880 = !DILocalVariable(name: "thread", arg: 1, scope: !13881, file: !2433, line: 264, type: !2334)
!13881 = distinct !DISubprogram(name: "dequeue_thread", scope: !2433, file: !2433, line: 264, type: !13668, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13882)
!13882 = !{!13880}
!13883 = !DILocation(line: 0, scope: !13881, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 396, column: 3, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13878, file: !2433, line: 395, column: 34)
!13886 = !DILocation(line: 266, column: 15, scope: !13881, inlinedAt: !13884)
!13887 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !13884)
!13888 = !DILocalVariable(name: "thread", arg: 1, scope: !13889, file: !2433, line: 232, type: !2334)
!13889 = distinct !DISubprogram(name: "runq_remove", scope: !2433, file: !2433, line: 232, type: !13668, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13890)
!13890 = !{!13888}
!13891 = !DILocation(line: 0, scope: !13889, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !13884)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !2433, line: 267, column: 35)
!13894 = distinct !DILexicalBlock(scope: !13881, file: !2433, line: 267, column: 6)
!13895 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !13892)
!13896 = !DILocation(line: 397, column: 2, scope: !13885)
!13897 = !DILocalVariable(name: "thread", arg: 1, scope: !13898, file: !2433, line: 250, type: !2334)
!13898 = distinct !DISubprogram(name: "queue_thread", scope: !2433, file: !2433, line: 250, type: !13668, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13899)
!13899 = !{!13897}
!13900 = !DILocation(line: 0, scope: !13898, inlinedAt: !13901)
!13901 = distinct !DILocation(line: 398, column: 2, scope: !13873)
!13902 = !DILocation(line: 252, column: 15, scope: !13898, inlinedAt: !13901)
!13903 = !DILocation(line: 252, column: 28, scope: !13898, inlinedAt: !13901)
!13904 = !DILocalVariable(name: "thread", arg: 1, scope: !13905, file: !2433, line: 227, type: !2334)
!13905 = distinct !DISubprogram(name: "runq_add", scope: !2433, file: !2433, line: 227, type: !13668, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13906)
!13906 = !{!13904}
!13907 = !DILocation(line: 0, scope: !13905, inlinedAt: !13908)
!13908 = distinct !DILocation(line: 254, column: 3, scope: !13909, inlinedAt: !13901)
!13909 = distinct !DILexicalBlock(scope: !13910, file: !2433, line: 253, column: 35)
!13910 = distinct !DILexicalBlock(scope: !13898, file: !2433, line: 253, column: 6)
!13911 = !DILocalVariable(name: "pq", arg: 1, scope: !13912, file: !2433, line: 181, type: !13915)
!13912 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2433, file: !2433, line: 181, type: !13913, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13916)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{null, !13915, !2334}
!13915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!13916 = !{!13911, !13917, !13918}
!13917 = !DILocalVariable(name: "thread", arg: 2, scope: !13912, file: !2433, line: 182, type: !2334)
!13918 = !DILocalVariable(name: "t", scope: !13912, file: !2433, line: 184, type: !2334)
!13919 = !DILocation(line: 0, scope: !13912, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 229, column: 2, scope: !13905, inlinedAt: !13908)
!13921 = !DILocation(line: 188, column: 2, scope: !13922, inlinedAt: !13920)
!13922 = distinct !DILexicalBlock(scope: !13912, file: !2433, line: 188, column: 2)
!13923 = !DILocation(line: 188, column: 2, scope: !13924, inlinedAt: !13920)
!13924 = distinct !DILexicalBlock(scope: !13922, file: !2433, line: 188, column: 2)
!13925 = !DILocation(line: 0, scope: !13922, inlinedAt: !13920)
!13926 = !DILocation(line: 189, column: 7, scope: !13927, inlinedAt: !13920)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !2433, line: 189, column: 7)
!13928 = distinct !DILexicalBlock(scope: !13924, file: !2433, line: 188, column: 56)
!13929 = !DILocation(line: 189, column: 35, scope: !13927, inlinedAt: !13920)
!13930 = !DILocation(line: 189, column: 7, scope: !13928, inlinedAt: !13920)
!13931 = !DILocation(line: 191, column: 21, scope: !13932, inlinedAt: !13920)
!13932 = distinct !DILexicalBlock(scope: !13927, file: !2433, line: 189, column: 40)
!13933 = !DILocation(line: 190, column: 4, scope: !13932, inlinedAt: !13920)
!13934 = !DILocation(line: 192, column: 4, scope: !13932, inlinedAt: !13920)
!13935 = distinct !{!13935, !13921, !13936}
!13936 = !DILocation(line: 194, column: 2, scope: !13922, inlinedAt: !13920)
!13937 = !DILocation(line: 196, column: 37, scope: !13912, inlinedAt: !13920)
!13938 = !DILocation(line: 196, column: 2, scope: !13912, inlinedAt: !13920)
!13939 = !DILocation(line: 197, column: 1, scope: !13912, inlinedAt: !13920)
!13940 = !DILocation(line: 399, column: 25, scope: !13873)
!13941 = !DILocation(line: 399, column: 22, scope: !13873)
!13942 = !DILocation(line: 399, column: 2, scope: !13873)
!13943 = !DILocation(line: 400, column: 1, scope: !13873)
!13944 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13004, file: !13004, line: 136, type: !13830, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13945)
!13945 = !{!13946}
!13946 = !DILocalVariable(name: "thread", arg: 1, scope: !13944, file: !13004, line: 136, type: !2334)
!13947 = !DILocation(line: 0, scope: !13944)
!13948 = !DILocation(line: 138, column: 9, scope: !13944)
!13949 = !DILocation(line: 138, column: 2, scope: !13944)
!13950 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2433, file: !2433, line: 1137, type: !13913, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13951)
!13951 = !{!13952, !13953}
!13952 = !DILocalVariable(name: "pq", arg: 1, scope: !13950, file: !2433, line: 1137, type: !13915)
!13953 = !DILocalVariable(name: "thread", arg: 2, scope: !13950, file: !2433, line: 1137, type: !2334)
!13954 = !DILocation(line: 0, scope: !13950)
!13955 = !DILocation(line: 1141, column: 33, scope: !13950)
!13956 = !DILocation(line: 1141, column: 2, scope: !13950)
!13957 = !DILocation(line: 1142, column: 1, scope: !13950)
!13958 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !2050, file: !2050, line: 294, type: !13959, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13961)
!13959 = !DISubroutineType(types: !13960)
!13960 = !{!2429, !13915}
!13961 = !{!13962}
!13962 = !DILocalVariable(name: "list", arg: 1, scope: !13958, file: !2050, line: 294, type: !13915)
!13963 = !DILocation(line: 0, scope: !13958)
!13964 = !DILocation(line: 296, column: 9, scope: !13958)
!13965 = !DILocation(line: 296, column: 49, scope: !13958)
!13966 = !DILocation(line: 296, column: 2, scope: !13958)
!13967 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !2050, file: !2050, line: 443, type: !13968, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13970)
!13968 = !DISubroutineType(types: !13969)
!13969 = !{null, !2429, !2429}
!13970 = !{!13971, !13972, !13973}
!13971 = !DILocalVariable(name: "successor", arg: 1, scope: !13967, file: !2050, line: 443, type: !2429)
!13972 = !DILocalVariable(name: "node", arg: 2, scope: !13967, file: !2050, line: 443, type: !2429)
!13973 = !DILocalVariable(name: "prev", scope: !13967, file: !2050, line: 445, type: !13974)
!13974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!13975 = !DILocation(line: 0, scope: !13967)
!13976 = !DILocation(line: 445, column: 39, scope: !13967)
!13977 = !DILocation(line: 447, column: 8, scope: !13967)
!13978 = !DILocation(line: 447, column: 13, scope: !13967)
!13979 = !DILocation(line: 448, column: 8, scope: !13967)
!13980 = !DILocation(line: 448, column: 13, scope: !13967)
!13981 = !DILocation(line: 449, column: 8, scope: !13967)
!13982 = !DILocation(line: 449, column: 13, scope: !13967)
!13983 = !DILocation(line: 450, column: 18, scope: !13967)
!13984 = !DILocation(line: 451, column: 1, scope: !13967)
!13985 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !2050, file: !2050, line: 341, type: !13986, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13988)
!13986 = !DISubroutineType(types: !13987)
!13987 = !{!2429, !13915, !2429}
!13988 = !{!13989, !13990}
!13989 = !DILocalVariable(name: "list", arg: 1, scope: !13985, file: !2050, line: 341, type: !13915)
!13990 = !DILocalVariable(name: "node", arg: 2, scope: !13985, file: !2050, line: 342, type: !2429)
!13991 = !DILocation(line: 0, scope: !13985)
!13992 = !DILocation(line: 344, column: 15, scope: !13985)
!13993 = !DILocation(line: 344, column: 9, scope: !13985)
!13994 = !DILocation(line: 344, column: 26, scope: !13985)
!13995 = !DILocation(line: 344, column: 2, scope: !13985)
!13996 = distinct !DISubprogram(name: "sys_dlist_append", scope: !2050, file: !2050, line: 404, type: !13997, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !13999)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{null, !13915, !2429}
!13999 = !{!14000, !14001, !14002}
!14000 = !DILocalVariable(name: "list", arg: 1, scope: !13996, file: !2050, line: 404, type: !13915)
!14001 = !DILocalVariable(name: "node", arg: 2, scope: !13996, file: !2050, line: 404, type: !2429)
!14002 = !DILocalVariable(name: "tail", scope: !13996, file: !2050, line: 406, type: !13974)
!14003 = !DILocation(line: 0, scope: !13996)
!14004 = !DILocation(line: 406, column: 34, scope: !13996)
!14005 = !DILocation(line: 408, column: 8, scope: !13996)
!14006 = !DILocation(line: 408, column: 13, scope: !13996)
!14007 = !DILocation(line: 409, column: 8, scope: !13996)
!14008 = !DILocation(line: 409, column: 13, scope: !13996)
!14009 = !DILocation(line: 411, column: 8, scope: !13996)
!14010 = !DILocation(line: 411, column: 13, scope: !13996)
!14011 = !DILocation(line: 412, column: 13, scope: !13996)
!14012 = !DILocation(line: 413, column: 1, scope: !13996)
!14013 = distinct !DISubprogram(name: "update_cache", scope: !2433, file: !2433, line: 559, type: !12961, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14014)
!14014 = !{!14015, !14016}
!14015 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14013, file: !2433, line: 559, type: !125)
!14016 = !DILocalVariable(name: "thread", scope: !14013, file: !2433, line: 562, type: !2334)
!14017 = !DILocation(line: 0, scope: !14013)
!14018 = !DILocation(line: 239, column: 9, scope: !14019, inlinedAt: !14022)
!14019 = distinct !DISubprogram(name: "runq_best", scope: !2433, file: !2433, line: 237, type: !14020, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!14020 = !DISubroutineType(types: !14021)
!14021 = !{!2334}
!14022 = distinct !DILocation(line: 314, column: 28, scope: !14023, inlinedAt: !14026)
!14023 = distinct !DISubprogram(name: "next_up", scope: !2433, file: !2433, line: 312, type: !14020, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14024)
!14024 = !{!14025}
!14025 = !DILocalVariable(name: "thread", scope: !14023, file: !2433, line: 314, type: !2334)
!14026 = distinct !DILocation(line: 562, column: 28, scope: !14013)
!14027 = !DILocation(line: 0, scope: !14023, inlinedAt: !14026)
!14028 = !DILocation(line: 340, column: 17, scope: !14023, inlinedAt: !14026)
!14029 = !DILocation(line: 340, column: 9, scope: !14023, inlinedAt: !14026)
!14030 = !DILocalVariable(name: "thread", arg: 1, scope: !14031, file: !2433, line: 127, type: !2334)
!14031 = distinct !DISubprogram(name: "should_preempt", scope: !2433, file: !2433, line: 127, type: !14032, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{!153, !2334, !125}
!14034 = !{!14030, !14035}
!14035 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14031, file: !2433, line: 128, type: !125)
!14036 = !DILocation(line: 0, scope: !14031, inlinedAt: !14037)
!14037 = distinct !DILocation(line: 564, column: 6, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14013, file: !2433, line: 564, column: 6)
!14039 = !DILocation(line: 133, column: 17, scope: !14040, inlinedAt: !14037)
!14040 = distinct !DILexicalBlock(scope: !14031, file: !2433, line: 133, column: 6)
!14041 = !DILocation(line: 0, scope: !14038)
!14042 = !DILocation(line: 133, column: 6, scope: !14031, inlinedAt: !14037)
!14043 = !DILocation(line: 140, column: 6, scope: !14044, inlinedAt: !14037)
!14044 = distinct !DILexicalBlock(scope: !14031, file: !2433, line: 140, column: 6)
!14045 = !DILocation(line: 140, column: 6, scope: !14031, inlinedAt: !14037)
!14046 = !DILocation(line: 150, column: 9, scope: !14047, inlinedAt: !14037)
!14047 = distinct !DILexicalBlock(scope: !14031, file: !2433, line: 149, column: 6)
!14048 = !DILocation(line: 149, column: 6, scope: !14031, inlinedAt: !14037)
!14049 = !DILocation(line: 157, column: 6, scope: !14050, inlinedAt: !14037)
!14050 = distinct !DILexicalBlock(scope: !14031, file: !2433, line: 157, column: 6)
!14051 = !DILocation(line: 564, column: 6, scope: !14013)
!14052 = !DILocation(line: 566, column: 14, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14054, file: !2433, line: 566, column: 7)
!14054 = distinct !DILexicalBlock(scope: !14038, file: !2433, line: 564, column: 42)
!14055 = !DILocation(line: 566, column: 7, scope: !14054)
!14056 = !DILocation(line: 567, column: 4, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14053, file: !2433, line: 566, column: 27)
!14058 = !DILocation(line: 568, column: 3, scope: !14057)
!14059 = !DILocation(line: 585, column: 1, scope: !14013)
!14060 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2433, file: !2433, line: 1144, type: !14061, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14063)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{!2334, !13915}
!14063 = !{!14064, !14065, !14066}
!14064 = !DILocalVariable(name: "pq", arg: 1, scope: !14060, file: !2433, line: 1144, type: !13915)
!14065 = !DILocalVariable(name: "thread", scope: !14060, file: !2433, line: 1146, type: !2334)
!14066 = !DILocalVariable(name: "n", scope: !14060, file: !2433, line: 1147, type: !2429)
!14067 = !DILocation(line: 0, scope: !14060)
!14068 = !DILocation(line: 1147, column: 19, scope: !14060)
!14069 = !DILocation(line: 1152, column: 2, scope: !14060)
!14070 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13004, file: !13004, line: 115, type: !13830, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14071)
!14071 = !{!14072}
!14072 = !DILocalVariable(name: "thread", arg: 1, scope: !14070, file: !13004, line: 115, type: !2334)
!14073 = !DILocation(line: 0, scope: !14070)
!14074 = !DILocation(line: 117, column: 46, scope: !14070)
!14075 = !DILocation(line: 117, column: 10, scope: !14070)
!14076 = !DILocation(line: 117, column: 9, scope: !14070)
!14077 = !DILocation(line: 117, column: 2, scope: !14070)
!14078 = distinct !DISubprogram(name: "is_preempt", scope: !2433, file: !2433, line: 62, type: !13686, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14079)
!14079 = !{!14080}
!14080 = !DILocalVariable(name: "thread", arg: 1, scope: !14078, file: !2433, line: 62, type: !2334)
!14081 = !DILocation(line: 0, scope: !14078)
!14082 = !DILocation(line: 65, column: 22, scope: !14078)
!14083 = !DILocation(line: 65, column: 30, scope: !14078)
!14084 = !DILocation(line: 65, column: 2, scope: !14078)
!14085 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13376, file: !13376, line: 35, type: !14086, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14090)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!153, !14088}
!14088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14089, size: 32)
!14089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2385)
!14090 = !{!14091}
!14091 = !DILocalVariable(name: "to", arg: 1, scope: !14085, file: !13376, line: 35, type: !14088)
!14092 = !DILocation(line: 0, scope: !14085)
!14093 = !DILocation(line: 37, column: 35, scope: !14085)
!14094 = !DILocation(line: 37, column: 10, scope: !14085)
!14095 = !DILocation(line: 37, column: 9, scope: !14085)
!14096 = !DILocation(line: 37, column: 2, scope: !14085)
!14097 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !2050, file: !2050, line: 225, type: !14098, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14102)
!14098 = !DISubroutineType(types: !14099)
!14099 = !{!153, !14100}
!14100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14101, size: 32)
!14101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2344)
!14102 = !{!14103}
!14103 = !DILocalVariable(name: "node", arg: 1, scope: !14097, file: !2050, line: 225, type: !14100)
!14104 = !DILocation(line: 0, scope: !14097)
!14105 = !DILocation(line: 227, column: 15, scope: !14097)
!14106 = !DILocation(line: 227, column: 20, scope: !14097)
!14107 = !DILocation(line: 227, column: 2, scope: !14097)
!14108 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !2050, file: !2050, line: 325, type: !13986, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14109)
!14109 = !{!14110, !14111}
!14110 = !DILocalVariable(name: "list", arg: 1, scope: !14108, file: !2050, line: 325, type: !13915)
!14111 = !DILocalVariable(name: "node", arg: 2, scope: !14108, file: !2050, line: 326, type: !2429)
!14112 = !DILocation(line: 0, scope: !14108)
!14113 = !DILocation(line: 328, column: 24, scope: !14108)
!14114 = !DILocation(line: 328, column: 15, scope: !14108)
!14115 = !DILocation(line: 328, column: 9, scope: !14108)
!14116 = !DILocation(line: 328, column: 45, scope: !14108)
!14117 = !DILocation(line: 328, column: 2, scope: !14108)
!14118 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !2050, file: !2050, line: 266, type: !14119, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14121)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{!153, !13915}
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "list", arg: 1, scope: !14118, file: !2050, line: 266, type: !13915)
!14123 = !DILocation(line: 0, scope: !14118)
!14124 = !DILocation(line: 268, column: 15, scope: !14118)
!14125 = !DILocation(line: 268, column: 20, scope: !14118)
!14126 = !DILocation(line: 268, column: 2, scope: !14118)
!14127 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !2050, file: !2050, line: 496, type: !14128, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14130)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{null, !2429}
!14130 = !{!14131, !14132, !14133}
!14131 = !DILocalVariable(name: "node", arg: 1, scope: !14127, file: !2050, line: 496, type: !2429)
!14132 = !DILocalVariable(name: "prev", scope: !14127, file: !2050, line: 498, type: !13974)
!14133 = !DILocalVariable(name: "next", scope: !14127, file: !2050, line: 499, type: !13974)
!14134 = !DILocation(line: 0, scope: !14127)
!14135 = !DILocation(line: 498, column: 34, scope: !14127)
!14136 = !DILocation(line: 499, column: 34, scope: !14127)
!14137 = !DILocation(line: 501, column: 8, scope: !14127)
!14138 = !DILocation(line: 501, column: 13, scope: !14127)
!14139 = !DILocation(line: 502, column: 8, scope: !14127)
!14140 = !DILocation(line: 502, column: 13, scope: !14127)
!14141 = !DILocation(line: 503, column: 2, scope: !14127)
!14142 = !DILocation(line: 504, column: 1, scope: !14127)
!14143 = distinct !DISubprogram(name: "sys_dnode_init", scope: !2050, file: !2050, line: 211, type: !14128, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14144)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "node", arg: 1, scope: !14143, file: !2050, line: 211, type: !2429)
!14146 = !DILocation(line: 0, scope: !14143)
!14147 = !DILocation(line: 213, column: 8, scope: !14143)
!14148 = !DILocation(line: 213, column: 13, scope: !14143)
!14149 = !DILocation(line: 214, column: 8, scope: !14143)
!14150 = !DILocation(line: 214, column: 13, scope: !14143)
!14151 = !DILocation(line: 215, column: 1, scope: !14143)
!14152 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13004, file: !13004, line: 131, type: !14153, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14155)
!14153 = !DISubroutineType(types: !14154)
!14154 = !{!153, !2334, !208}
!14155 = !{!14156, !14157}
!14156 = !DILocalVariable(name: "thread", arg: 1, scope: !14152, file: !13004, line: 131, type: !2334)
!14157 = !DILocalVariable(name: "state", arg: 2, scope: !14152, file: !13004, line: 131, type: !208)
!14158 = !DILocation(line: 0, scope: !14152)
!14159 = !DILocation(line: 133, column: 23, scope: !14152)
!14160 = !DILocation(line: 133, column: 45, scope: !14152)
!14161 = !DILocation(line: 133, column: 2, scope: !14152)
!14162 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13004, file: !13004, line: 211, type: !14163, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14165)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!153, !125, !125}
!14165 = !{!14166, !14167}
!14166 = !DILocalVariable(name: "prio", arg: 1, scope: !14162, file: !13004, line: 211, type: !125)
!14167 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14162, file: !13004, line: 211, type: !125)
!14168 = !DILocation(line: 0, scope: !14162)
!14169 = !DILocation(line: 213, column: 9, scope: !14162)
!14170 = !DILocation(line: 213, column: 2, scope: !14162)
!14171 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13004, file: !13004, line: 83, type: !13830, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14172)
!14172 = !{!14173}
!14173 = !DILocalVariable(name: "thread", arg: 1, scope: !14171, file: !13004, line: 83, type: !2334)
!14174 = !DILocation(line: 0, scope: !14171)
!14175 = !DILocation(line: 89, column: 16, scope: !14171)
!14176 = !DILocation(line: 89, column: 2, scope: !14171)
!14177 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13004, file: !13004, line: 206, type: !14163, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14178)
!14178 = !{!14179, !14180}
!14179 = !DILocalVariable(name: "prio1", arg: 1, scope: !14177, file: !13004, line: 206, type: !125)
!14180 = !DILocalVariable(name: "prio2", arg: 2, scope: !14177, file: !13004, line: 206, type: !125)
!14181 = !DILocation(line: 0, scope: !14177)
!14182 = !DILocation(line: 208, column: 15, scope: !14177)
!14183 = !DILocation(line: 208, column: 2, scope: !14177)
!14184 = distinct !DISubprogram(name: "z_ready_thread", scope: !2433, file: !2433, line: 635, type: !13668, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14185)
!14185 = !{!14186, !14187, !14189}
!14186 = !DILocalVariable(name: "thread", arg: 1, scope: !14184, file: !2433, line: 635, type: !2334)
!14187 = !DILocalVariable(name: "__i", scope: !14188, file: !2433, line: 637, type: !13702)
!14188 = distinct !DILexicalBlock(scope: !14184, file: !2433, line: 637, column: 2)
!14189 = !DILocalVariable(name: "__key", scope: !14188, file: !2433, line: 637, type: !13702)
!14190 = !DILocation(line: 0, scope: !14184)
!14191 = !DILocation(line: 0, scope: !14188)
!14192 = !DILocation(line: 0, scope: !13710, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 637, column: 2, scope: !14188)
!14194 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14195)
!14195 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14193)
!14196 = !DILocation(line: 0, scope: !13719, inlinedAt: !14195)
!14197 = !DILocation(line: 639, column: 4, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !2433, line: 638, column: 41)
!14199 = distinct !DILexicalBlock(scope: !14200, file: !2433, line: 638, column: 7)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !2433, line: 637, column: 26)
!14201 = distinct !DILexicalBlock(scope: !14188, file: !2433, line: 637, column: 2)
!14202 = !DILocation(line: 0, scope: !13737, inlinedAt: !14203)
!14203 = distinct !DILocation(line: 637, column: 2, scope: !14201)
!14204 = !DILocation(line: 0, scope: !13745, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14203)
!14206 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14205)
!14207 = !DILocation(line: 642, column: 1, scope: !14184)
!14208 = distinct !DISubprogram(name: "ready_thread", scope: !2433, file: !2433, line: 617, type: !13668, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14209)
!14209 = !{!14210}
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !2433, line: 617, type: !2334)
!14211 = !DILocation(line: 0, scope: !14208)
!14212 = !DILocation(line: 626, column: 7, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14208, file: !2433, line: 626, column: 6)
!14214 = !DILocation(line: 626, column: 34, scope: !14213)
!14215 = !DILocation(line: 626, column: 37, scope: !14213)
!14216 = !DILocation(line: 626, column: 6, scope: !14208)
!14217 = !DILocation(line: 0, scope: !13898, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 629, column: 3, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14213, file: !2433, line: 626, column: 64)
!14220 = !DILocation(line: 252, column: 15, scope: !13898, inlinedAt: !14218)
!14221 = !DILocation(line: 252, column: 28, scope: !13898, inlinedAt: !14218)
!14222 = !DILocation(line: 0, scope: !13905, inlinedAt: !14223)
!14223 = distinct !DILocation(line: 254, column: 3, scope: !13909, inlinedAt: !14218)
!14224 = !DILocation(line: 0, scope: !13912, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 229, column: 2, scope: !13905, inlinedAt: !14223)
!14226 = !DILocation(line: 188, column: 2, scope: !13922, inlinedAt: !14225)
!14227 = !DILocation(line: 188, column: 2, scope: !13924, inlinedAt: !14225)
!14228 = !DILocation(line: 0, scope: !13922, inlinedAt: !14225)
!14229 = !DILocation(line: 189, column: 7, scope: !13927, inlinedAt: !14225)
!14230 = !DILocation(line: 189, column: 35, scope: !13927, inlinedAt: !14225)
!14231 = !DILocation(line: 189, column: 7, scope: !13928, inlinedAt: !14225)
!14232 = !DILocation(line: 191, column: 21, scope: !13932, inlinedAt: !14225)
!14233 = !DILocation(line: 190, column: 4, scope: !13932, inlinedAt: !14225)
!14234 = !DILocation(line: 192, column: 4, scope: !13932, inlinedAt: !14225)
!14235 = distinct !{!14235, !14226, !14236}
!14236 = !DILocation(line: 194, column: 2, scope: !13922, inlinedAt: !14225)
!14237 = !DILocation(line: 196, column: 37, scope: !13912, inlinedAt: !14225)
!14238 = !DILocation(line: 196, column: 2, scope: !13912, inlinedAt: !14225)
!14239 = !DILocation(line: 197, column: 1, scope: !13912, inlinedAt: !14225)
!14240 = !DILocation(line: 630, column: 3, scope: !14219)
!14241 = !DILocation(line: 632, column: 2, scope: !14219)
!14242 = !DILocation(line: 633, column: 1, scope: !14208)
!14243 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13004, file: !13004, line: 120, type: !13830, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14244)
!14244 = !{!14245}
!14245 = !DILocalVariable(name: "thread", arg: 1, scope: !14243, file: !13004, line: 120, type: !2334)
!14246 = !DILocation(line: 0, scope: !14243)
!14247 = !DILocation(line: 122, column: 12, scope: !14243)
!14248 = !DILocation(line: 122, column: 62, scope: !14243)
!14249 = !DILocation(line: 123, column: 4, scope: !14243)
!14250 = !DILocation(line: 122, column: 2, scope: !14243)
!14251 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2433, file: !2433, line: 644, type: !13668, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14252)
!14252 = !{!14253, !14254, !14256}
!14253 = !DILocalVariable(name: "thread", arg: 1, scope: !14251, file: !2433, line: 644, type: !2334)
!14254 = !DILocalVariable(name: "__i", scope: !14255, file: !2433, line: 646, type: !13702)
!14255 = distinct !DILexicalBlock(scope: !14251, file: !2433, line: 646, column: 2)
!14256 = !DILocalVariable(name: "__key", scope: !14255, file: !2433, line: 646, type: !13702)
!14257 = !DILocation(line: 0, scope: !14251)
!14258 = !DILocation(line: 0, scope: !14255)
!14259 = !DILocation(line: 0, scope: !13710, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 646, column: 2, scope: !14255)
!14261 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14262)
!14262 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14260)
!14263 = !DILocation(line: 0, scope: !13719, inlinedAt: !14262)
!14264 = !DILocation(line: 647, column: 3, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !2433, line: 646, column: 26)
!14266 = distinct !DILexicalBlock(scope: !14255, file: !2433, line: 646, column: 2)
!14267 = !DILocation(line: 0, scope: !13737, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 646, column: 2, scope: !14266)
!14269 = !DILocation(line: 0, scope: !13745, inlinedAt: !14270)
!14270 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14268)
!14271 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14270)
!14272 = !DILocation(line: 649, column: 1, scope: !14251)
!14273 = distinct !DISubprogram(name: "z_sched_start", scope: !2433, file: !2433, line: 651, type: !13668, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14274)
!14274 = !{!14275, !14276}
!14275 = !DILocalVariable(name: "thread", arg: 1, scope: !14273, file: !2433, line: 651, type: !2334)
!14276 = !DILocalVariable(name: "key", scope: !14273, file: !2433, line: 653, type: !13702)
!14277 = !DILocation(line: 0, scope: !14273)
!14278 = !DILocation(line: 0, scope: !13710, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 653, column: 25, scope: !14273)
!14280 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14281)
!14281 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14279)
!14282 = !DILocation(line: 0, scope: !13719, inlinedAt: !14281)
!14283 = !DILocation(line: 655, column: 6, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14273, file: !2433, line: 655, column: 6)
!14285 = !DILocation(line: 655, column: 6, scope: !14273)
!14286 = !DILocation(line: 0, scope: !13737, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 656, column: 3, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14284, file: !2433, line: 655, column: 36)
!14289 = !DILocation(line: 0, scope: !13745, inlinedAt: !14290)
!14290 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14287)
!14291 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14290)
!14292 = !DILocation(line: 657, column: 3, scope: !14288)
!14293 = !DILocation(line: 660, column: 2, scope: !14273)
!14294 = !DILocation(line: 661, column: 2, scope: !14273)
!14295 = !DILocation(line: 662, column: 2, scope: !14273)
!14296 = !DILocation(line: 663, column: 1, scope: !14273)
!14297 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13004, file: !13004, line: 126, type: !13830, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14298)
!14298 = !{!14299}
!14299 = !DILocalVariable(name: "thread", arg: 1, scope: !14297, file: !13004, line: 126, type: !2334)
!14300 = !DILocation(line: 0, scope: !14297)
!14301 = !DILocation(line: 128, column: 23, scope: !14297)
!14302 = !DILocation(line: 128, column: 36, scope: !14297)
!14303 = !DILocation(line: 128, column: 56, scope: !14297)
!14304 = !DILocation(line: 128, column: 2, scope: !14297)
!14305 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13004, file: !13004, line: 155, type: !13668, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14306)
!14306 = !{!14307}
!14307 = !DILocalVariable(name: "thread", arg: 1, scope: !14305, file: !13004, line: 155, type: !2334)
!14308 = !DILocation(line: 0, scope: !14305)
!14309 = !DILocation(line: 157, column: 15, scope: !14305)
!14310 = !DILocation(line: 157, column: 28, scope: !14305)
!14311 = !DILocation(line: 158, column: 1, scope: !14305)
!14312 = distinct !DISubprogram(name: "z_reschedule", scope: !2433, file: !2433, line: 967, type: !13738, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14313)
!14313 = !{!14314, !14315}
!14314 = !DILocalVariable(name: "lock", arg: 1, scope: !14312, file: !2433, line: 967, type: !13713)
!14315 = !DILocalVariable(name: "key", arg: 2, scope: !14312, file: !2433, line: 967, type: !13702)
!14316 = !DILocation(line: 0, scope: !14312)
!14317 = !DILocation(line: 969, column: 6, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14312, file: !2433, line: 969, column: 6)
!14319 = !DILocation(line: 969, column: 23, scope: !14318)
!14320 = !DILocation(line: 969, column: 26, scope: !14318)
!14321 = !DILocation(line: 969, column: 6, scope: !14312)
!14322 = !DILocalVariable(name: "key", arg: 2, scope: !14323, file: !13106, line: 193, type: !13702)
!14323 = distinct !DISubprogram(name: "z_swap", scope: !13106, file: !13106, line: 193, type: !14324, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14326)
!14324 = !DISubroutineType(types: !14325)
!14325 = !{!125, !13713, !13702}
!14326 = !{!14327, !14322}
!14327 = !DILocalVariable(name: "lock", arg: 1, scope: !14323, file: !13106, line: 193, type: !13713)
!14328 = !DILocation(line: 0, scope: !14323, inlinedAt: !14329)
!14329 = distinct !DILocation(line: 970, column: 3, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14318, file: !2433, line: 969, column: 39)
!14331 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !14329)
!14332 = !DILocation(line: 971, column: 2, scope: !14330)
!14333 = !DILocation(line: 0, scope: !13737, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 972, column: 3, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14318, file: !2433, line: 971, column: 9)
!14336 = !DILocation(line: 0, scope: !13745, inlinedAt: !14337)
!14337 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14334)
!14338 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14337)
!14339 = !DILocation(line: 975, column: 1, scope: !14312)
!14340 = distinct !DISubprogram(name: "resched", scope: !2433, file: !2433, line: 940, type: !14341, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14343)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!153, !208}
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "key", arg: 1, scope: !14340, file: !2433, line: 940, type: !208)
!14345 = !DILocation(line: 0, scope: !14340)
!14346 = !DILocalVariable(name: "key", arg: 1, scope: !14347, file: !8182, line: 112, type: !32)
!14347 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !8182, file: !8182, line: 112, type: !14348, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14350)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!153, !32}
!14350 = !{!14346}
!14351 = !DILocation(line: 0, scope: !14347, inlinedAt: !14352)
!14352 = distinct !DILocation(line: 946, column: 9, scope: !14340)
!14353 = !DILocation(line: 115, column: 13, scope: !14347, inlinedAt: !14352)
!14354 = !DILocation(line: 946, column: 32, scope: !14340)
!14355 = !DILocation(line: 1031, column: 3, scope: !14356, inlinedAt: !14359)
!14356 = distinct !DISubprogram(name: "__get_IPSR", scope: !8067, file: !8067, line: 1027, type: !8148, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14357)
!14357 = !{!14358}
!14358 = !DILocalVariable(name: "result", scope: !14356, file: !8067, line: 1029, type: !208)
!14359 = distinct !DILocation(line: 48, column: 10, scope: !14360, inlinedAt: !14361)
!14360 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9028, file: !9028, line: 46, type: !9029, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!14361 = distinct !DILocation(line: 946, column: 36, scope: !14340)
!14362 = !{i64 7009399}
!14363 = !DILocation(line: 0, scope: !14356, inlinedAt: !14359)
!14364 = !DILocation(line: 48, column: 9, scope: !14360, inlinedAt: !14361)
!14365 = !DILocation(line: 946, column: 2, scope: !14340)
!14366 = distinct !DISubprogram(name: "need_swap", scope: !2433, file: !2433, line: 953, type: !9029, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14367)
!14367 = !{!14368}
!14368 = !DILocalVariable(name: "new_thread", scope: !14366, file: !2433, line: 959, type: !2334)
!14369 = !DILocation(line: 962, column: 31, scope: !14366)
!14370 = !DILocation(line: 0, scope: !14366)
!14371 = !DILocation(line: 963, column: 23, scope: !14366)
!14372 = !DILocation(line: 963, column: 20, scope: !14366)
!14373 = !DILocation(line: 963, column: 2, scope: !14366)
!14374 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13106, file: !13106, line: 181, type: !8077, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14375)
!14375 = !{!14376, !14377}
!14376 = !DILocalVariable(name: "key", arg: 1, scope: !14374, file: !13106, line: 181, type: !32)
!14377 = !DILocalVariable(name: "ret", scope: !14374, file: !13106, line: 183, type: !125)
!14378 = !DILocation(line: 0, scope: !14374)
!14379 = !DILocation(line: 185, column: 8, scope: !14374)
!14380 = !DILocation(line: 186, column: 2, scope: !14374)
!14381 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2433, file: !2433, line: 665, type: !13668, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14382)
!14382 = !{!14383, !14384, !14386}
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14381, file: !2433, line: 665, type: !2334)
!14384 = !DILocalVariable(name: "__i", scope: !14385, file: !2433, line: 671, type: !13702)
!14385 = distinct !DILexicalBlock(scope: !14381, file: !2433, line: 671, column: 2)
!14386 = !DILocalVariable(name: "__key", scope: !14385, file: !2433, line: 671, type: !13702)
!14387 = !DILocation(line: 0, scope: !14381)
!14388 = !DILocation(line: 669, column: 8, scope: !14381)
!14389 = !DILocation(line: 0, scope: !14385)
!14390 = !DILocation(line: 0, scope: !13710, inlinedAt: !14391)
!14391 = distinct !DILocation(line: 671, column: 2, scope: !14385)
!14392 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14391)
!14394 = !DILocation(line: 0, scope: !13719, inlinedAt: !14393)
!14395 = !DILocation(line: 672, column: 7, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14397, file: !2433, line: 672, column: 7)
!14397 = distinct !DILexicalBlock(scope: !14398, file: !2433, line: 671, column: 26)
!14398 = distinct !DILexicalBlock(scope: !14385, file: !2433, line: 671, column: 2)
!14399 = !DILocation(line: 672, column: 7, scope: !14397)
!14400 = !DILocation(line: 0, scope: !13881, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 673, column: 4, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14396, file: !2433, line: 672, column: 35)
!14403 = !DILocation(line: 266, column: 15, scope: !13881, inlinedAt: !14401)
!14404 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !14401)
!14405 = !DILocation(line: 0, scope: !13889, inlinedAt: !14406)
!14406 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !14401)
!14407 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !14406)
!14408 = !DILocation(line: 674, column: 3, scope: !14402)
!14409 = !DILocation(line: 675, column: 3, scope: !14397)
!14410 = !DILocation(line: 676, column: 26, scope: !14397)
!14411 = !DILocation(line: 676, column: 23, scope: !14397)
!14412 = !DILocation(line: 676, column: 3, scope: !14397)
!14413 = !DILocation(line: 0, scope: !13737, inlinedAt: !14414)
!14414 = distinct !DILocation(line: 671, column: 2, scope: !14398)
!14415 = !DILocation(line: 0, scope: !13745, inlinedAt: !14416)
!14416 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14414)
!14417 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14416)
!14418 = !DILocation(line: 679, column: 16, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14381, file: !2433, line: 679, column: 6)
!14420 = !DILocation(line: 679, column: 13, scope: !14419)
!14421 = !DILocation(line: 679, column: 6, scope: !14381)
!14422 = !DILocation(line: 680, column: 3, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14419, file: !2433, line: 679, column: 26)
!14424 = !DILocation(line: 681, column: 2, scope: !14423)
!14425 = !DILocation(line: 684, column: 1, scope: !14381)
!14426 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13376, file: !13376, line: 52, type: !13686, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14427)
!14427 = !{!14428}
!14428 = !DILocalVariable(name: "thread", arg: 1, scope: !14426, file: !13376, line: 52, type: !2334)
!14429 = !DILocation(line: 0, scope: !14426)
!14430 = !DILocation(line: 54, column: 39, scope: !14426)
!14431 = !DILocation(line: 54, column: 9, scope: !14426)
!14432 = !DILocation(line: 54, column: 2, scope: !14426)
!14433 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13004, file: !13004, line: 141, type: !13668, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14434)
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "thread", arg: 1, scope: !14433, file: !13004, line: 141, type: !2334)
!14436 = !DILocation(line: 0, scope: !14433)
!14437 = !DILocation(line: 143, column: 15, scope: !14433)
!14438 = !DILocation(line: 143, column: 28, scope: !14433)
!14439 = !DILocation(line: 146, column: 1, scope: !14433)
!14440 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13004, file: !13004, line: 73, type: !3135, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!14441 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 75, column: 30, scope: !14440)
!14443 = !DILocation(line: 0, scope: !13719, inlinedAt: !14442)
!14444 = !DILocation(line: 75, column: 9, scope: !14440)
!14445 = !DILocation(line: 76, column: 1, scope: !14440)
!14446 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2433, file: !2433, line: 977, type: !8158, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14447)
!14447 = !{!14448}
!14448 = !DILocalVariable(name: "key", arg: 1, scope: !14446, file: !2433, line: 977, type: !208)
!14449 = !DILocation(line: 0, scope: !14446)
!14450 = !DILocation(line: 979, column: 6, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14446, file: !2433, line: 979, column: 6)
!14452 = !DILocation(line: 979, column: 6, scope: !14446)
!14453 = !DILocation(line: 980, column: 3, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14451, file: !2433, line: 979, column: 20)
!14455 = !DILocation(line: 981, column: 2, scope: !14454)
!14456 = !DILocation(line: 0, scope: !13745, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 982, column: 3, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14451, file: !2433, line: 981, column: 9)
!14459 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14457)
!14460 = !DILocation(line: 985, column: 1, scope: !14446)
!14461 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2433, file: !2433, line: 695, type: !13668, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14462)
!14462 = !{!14463, !14464}
!14463 = !DILocalVariable(name: "thread", arg: 1, scope: !14461, file: !2433, line: 695, type: !2334)
!14464 = !DILocalVariable(name: "key", scope: !14461, file: !2433, line: 699, type: !13702)
!14465 = !DILocation(line: 0, scope: !14461)
!14466 = !DILocation(line: 0, scope: !13710, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 699, column: 25, scope: !14461)
!14468 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14469)
!14469 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14467)
!14470 = !DILocation(line: 0, scope: !13719, inlinedAt: !14469)
!14471 = !DILocation(line: 702, column: 7, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14461, file: !2433, line: 702, column: 6)
!14473 = !DILocation(line: 702, column: 6, scope: !14461)
!14474 = !DILocation(line: 0, scope: !13737, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 703, column: 3, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14472, file: !2433, line: 702, column: 38)
!14477 = !DILocation(line: 0, scope: !13745, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14475)
!14479 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14478)
!14480 = !DILocation(line: 704, column: 3, scope: !14476)
!14481 = !DILocation(line: 707, column: 2, scope: !14461)
!14482 = !DILocation(line: 708, column: 2, scope: !14461)
!14483 = !DILocation(line: 710, column: 2, scope: !14461)
!14484 = !DILocation(line: 713, column: 1, scope: !14461)
!14485 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13004, file: !13004, line: 96, type: !13830, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14486)
!14486 = !{!14487}
!14487 = !DILocalVariable(name: "thread", arg: 1, scope: !14485, file: !13004, line: 96, type: !2334)
!14488 = !DILocation(line: 0, scope: !14485)
!14489 = !DILocation(line: 98, column: 23, scope: !14485)
!14490 = !DILocation(line: 98, column: 36, scope: !14485)
!14491 = !DILocation(line: 98, column: 57, scope: !14485)
!14492 = !DILocation(line: 98, column: 2, scope: !14485)
!14493 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13004, file: !13004, line: 148, type: !13668, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14494)
!14494 = !{!14495}
!14495 = !DILocalVariable(name: "thread", arg: 1, scope: !14493, file: !13004, line: 148, type: !2334)
!14496 = !DILocation(line: 0, scope: !14493)
!14497 = !DILocation(line: 150, column: 15, scope: !14493)
!14498 = !DILocation(line: 150, column: 28, scope: !14493)
!14499 = !DILocation(line: 153, column: 1, scope: !14493)
!14500 = distinct !DISubprogram(name: "z_pend_thread", scope: !2433, file: !2433, line: 770, type: !14501, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14507)
!14501 = !DISubroutineType(types: !14502)
!14502 = !{null, !2334, !2365, !14503}
!14503 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1789, line: 67, baseType: !14504)
!14504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1789, line: 65, size: 64, elements: !14505)
!14505 = !{!14506}
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14504, file: !1789, line: 66, baseType: !1788, size: 64)
!14507 = !{!14508, !14509, !14510, !14511, !14513}
!14508 = !DILocalVariable(name: "thread", arg: 1, scope: !14500, file: !2433, line: 770, type: !2334)
!14509 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14500, file: !2433, line: 770, type: !2365)
!14510 = !DILocalVariable(name: "timeout", arg: 3, scope: !14500, file: !2433, line: 771, type: !14503)
!14511 = !DILocalVariable(name: "__i", scope: !14512, file: !2433, line: 774, type: !13702)
!14512 = distinct !DILexicalBlock(scope: !14500, file: !2433, line: 774, column: 2)
!14513 = !DILocalVariable(name: "__key", scope: !14512, file: !2433, line: 774, type: !13702)
!14514 = !DILocation(line: 0, scope: !14500)
!14515 = !DILocation(line: 0, scope: !14512)
!14516 = !DILocation(line: 0, scope: !13710, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 774, column: 2, scope: !14512)
!14518 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14519)
!14519 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14517)
!14520 = !DILocation(line: 0, scope: !13719, inlinedAt: !14519)
!14521 = !DILocation(line: 775, column: 3, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14523, file: !2433, line: 774, column: 26)
!14523 = distinct !DILexicalBlock(scope: !14512, file: !2433, line: 774, column: 2)
!14524 = !DILocation(line: 0, scope: !13737, inlinedAt: !14525)
!14525 = distinct !DILocation(line: 774, column: 2, scope: !14523)
!14526 = !DILocation(line: 0, scope: !13745, inlinedAt: !14527)
!14527 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14525)
!14528 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14527)
!14529 = !DILocation(line: 777, column: 1, scope: !14500)
!14530 = distinct !DISubprogram(name: "pend_locked", scope: !2433, file: !2433, line: 760, type: !14501, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14531)
!14531 = !{!14532, !14533, !14534}
!14532 = !DILocalVariable(name: "thread", arg: 1, scope: !14530, file: !2433, line: 760, type: !2334)
!14533 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14530, file: !2433, line: 760, type: !2365)
!14534 = !DILocalVariable(name: "timeout", arg: 3, scope: !14530, file: !2433, line: 761, type: !14503)
!14535 = !DILocation(line: 0, scope: !14530)
!14536 = !DILocation(line: 766, column: 2, scope: !14530)
!14537 = !DILocation(line: 767, column: 2, scope: !14530)
!14538 = !DILocation(line: 768, column: 1, scope: !14530)
!14539 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2433, file: !2433, line: 740, type: !14540, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14542)
!14540 = !DISubroutineType(types: !14541)
!14541 = !{null, !2334, !2365}
!14542 = !{!14543, !14544}
!14543 = !DILocalVariable(name: "thread", arg: 1, scope: !14539, file: !2433, line: 740, type: !2334)
!14544 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14539, file: !2433, line: 740, type: !2365)
!14545 = !DILocation(line: 0, scope: !14539)
!14546 = !DILocation(line: 742, column: 2, scope: !14539)
!14547 = !DILocation(line: 743, column: 2, scope: !14539)
!14548 = !DILocation(line: 747, column: 13, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14539, file: !2433, line: 747, column: 6)
!14550 = !DILocation(line: 747, column: 6, scope: !14539)
!14551 = !DILocation(line: 748, column: 16, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14549, file: !2433, line: 747, column: 22)
!14553 = !DILocation(line: 748, column: 26, scope: !14552)
!14554 = !DILocation(line: 749, column: 28, scope: !14552)
!14555 = !DILocation(line: 0, scope: !13912, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 749, column: 3, scope: !14552)
!14557 = !DILocation(line: 188, column: 2, scope: !13922, inlinedAt: !14556)
!14558 = !DILocation(line: 188, column: 2, scope: !13924, inlinedAt: !14556)
!14559 = !DILocation(line: 0, scope: !13922, inlinedAt: !14556)
!14560 = !DILocation(line: 189, column: 7, scope: !13927, inlinedAt: !14556)
!14561 = !DILocation(line: 189, column: 35, scope: !13927, inlinedAt: !14556)
!14562 = !DILocation(line: 189, column: 7, scope: !13928, inlinedAt: !14556)
!14563 = !DILocation(line: 191, column: 21, scope: !13932, inlinedAt: !14556)
!14564 = !DILocation(line: 190, column: 4, scope: !13932, inlinedAt: !14556)
!14565 = !DILocation(line: 192, column: 4, scope: !13932, inlinedAt: !14556)
!14566 = distinct !{!14566, !14557, !14567}
!14567 = !DILocation(line: 194, column: 2, scope: !13922, inlinedAt: !14556)
!14568 = !DILocation(line: 196, column: 37, scope: !13912, inlinedAt: !14556)
!14569 = !DILocation(line: 196, column: 2, scope: !13912, inlinedAt: !14556)
!14570 = !DILocation(line: 197, column: 1, scope: !13912, inlinedAt: !14556)
!14571 = !DILocation(line: 751, column: 1, scope: !14539)
!14572 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2433, file: !2433, line: 753, type: !14573, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14575)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{null, !2334, !14503}
!14575 = !{!14576, !14577}
!14576 = !DILocalVariable(name: "thread", arg: 1, scope: !14572, file: !2433, line: 753, type: !2334)
!14577 = !DILocalVariable(name: "timeout", arg: 2, scope: !14572, file: !2433, line: 753, type: !14503)
!14578 = !DILocation(line: 0, scope: !14572)
!14579 = !DILocation(line: 755, column: 7, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14572, file: !2433, line: 755, column: 6)
!14581 = !DILocation(line: 755, column: 6, scope: !14572)
!14582 = !DILocation(line: 756, column: 3, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14580, file: !2433, line: 755, column: 41)
!14584 = !DILocation(line: 757, column: 2, scope: !14583)
!14585 = !DILocation(line: 758, column: 1, scope: !14572)
!14586 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13376, file: !13376, line: 47, type: !14573, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14587)
!14587 = !{!14588, !14589}
!14588 = !DILocalVariable(name: "thread", arg: 1, scope: !14586, file: !13376, line: 47, type: !2334)
!14589 = !DILocalVariable(name: "ticks", arg: 2, scope: !14586, file: !13376, line: 47, type: !14503)
!14590 = !DILocation(line: 0, scope: !14586)
!14591 = !DILocation(line: 49, column: 30, scope: !14586)
!14592 = !DILocation(line: 49, column: 2, scope: !14586)
!14593 = !DILocation(line: 50, column: 1, scope: !14586)
!14594 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2433, file: !2433, line: 795, type: !2391, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14595)
!14595 = !{!14596, !14597, !14598, !14600, !14601}
!14596 = !DILocalVariable(name: "timeout", arg: 1, scope: !14594, file: !2433, line: 795, type: !2393)
!14597 = !DILocalVariable(name: "thread", scope: !14594, file: !2433, line: 797, type: !2334)
!14598 = !DILocalVariable(name: "__i", scope: !14599, file: !2433, line: 800, type: !13702)
!14599 = distinct !DILexicalBlock(scope: !14594, file: !2433, line: 800, column: 2)
!14600 = !DILocalVariable(name: "__key", scope: !14599, file: !2433, line: 800, type: !13702)
!14601 = !DILocalVariable(name: "killed", scope: !14602, file: !2433, line: 801, type: !153)
!14602 = distinct !DILexicalBlock(scope: !14603, file: !2433, line: 800, column: 26)
!14603 = distinct !DILexicalBlock(scope: !14599, file: !2433, line: 800, column: 2)
!14604 = !DILocation(line: 0, scope: !14594)
!14605 = !DILocation(line: 797, column: 28, scope: !14594)
!14606 = !DILocation(line: 0, scope: !14599)
!14607 = !DILocation(line: 0, scope: !13710, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 800, column: 2, scope: !14599)
!14609 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14608)
!14611 = !DILocation(line: 0, scope: !13719, inlinedAt: !14610)
!14612 = !DILocation(line: 801, column: 27, scope: !14602)
!14613 = !DILocation(line: 801, column: 32, scope: !14602)
!14614 = !DILocation(line: 801, column: 61, scope: !14602)
!14615 = !DILocation(line: 0, scope: !14602)
!14616 = !DILocation(line: 804, column: 7, scope: !14602)
!14617 = !DILocation(line: 805, column: 21, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !2433, line: 805, column: 8)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !2433, line: 804, column: 16)
!14620 = distinct !DILexicalBlock(scope: !14602, file: !2433, line: 804, column: 7)
!14621 = !DILocation(line: 805, column: 31, scope: !14618)
!14622 = !DILocation(line: 805, column: 8, scope: !14619)
!14623 = !DILocation(line: 806, column: 5, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14618, file: !2433, line: 805, column: 40)
!14625 = !DILocation(line: 807, column: 4, scope: !14624)
!14626 = !DILocation(line: 808, column: 4, scope: !14619)
!14627 = !DILocation(line: 809, column: 4, scope: !14619)
!14628 = !DILocation(line: 810, column: 4, scope: !14619)
!14629 = !DILocation(line: 811, column: 3, scope: !14619)
!14630 = !DILocation(line: 0, scope: !13737, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 800, column: 2, scope: !14603)
!14632 = !DILocation(line: 0, scope: !13745, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14631)
!14634 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14633)
!14635 = !DILocation(line: 813, column: 1, scope: !14594)
!14636 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2433, file: !2433, line: 779, type: !13668, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14637)
!14637 = !{!14638}
!14638 = !DILocalVariable(name: "thread", arg: 1, scope: !14636, file: !2433, line: 779, type: !2334)
!14639 = !DILocation(line: 0, scope: !14636)
!14640 = !DILocation(line: 781, column: 2, scope: !14636)
!14641 = !DILocation(line: 782, column: 2, scope: !14636)
!14642 = !DILocation(line: 783, column: 15, scope: !14636)
!14643 = !DILocation(line: 783, column: 25, scope: !14636)
!14644 = !DILocation(line: 784, column: 1, scope: !14636)
!14645 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13004, file: !13004, line: 165, type: !13668, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14646)
!14646 = !{!14647}
!14647 = !DILocalVariable(name: "thread", arg: 1, scope: !14645, file: !13004, line: 165, type: !2334)
!14648 = !DILocation(line: 0, scope: !14645)
!14649 = !DILocation(line: 167, column: 15, scope: !14645)
!14650 = !DILocation(line: 167, column: 28, scope: !14645)
!14651 = !DILocation(line: 168, column: 1, scope: !14645)
!14652 = distinct !DISubprogram(name: "unready_thread", scope: !2433, file: !2433, line: 731, type: !13668, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14653)
!14653 = !{!14654}
!14654 = !DILocalVariable(name: "thread", arg: 1, scope: !14652, file: !2433, line: 731, type: !2334)
!14655 = !DILocation(line: 0, scope: !14652)
!14656 = !DILocation(line: 733, column: 6, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14652, file: !2433, line: 733, column: 6)
!14658 = !DILocation(line: 733, column: 6, scope: !14652)
!14659 = !DILocation(line: 0, scope: !13881, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 734, column: 3, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !2433, line: 733, column: 34)
!14662 = !DILocation(line: 266, column: 15, scope: !13881, inlinedAt: !14660)
!14663 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !14660)
!14664 = !DILocation(line: 0, scope: !13889, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !14660)
!14666 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !14665)
!14667 = !DILocation(line: 735, column: 2, scope: !14661)
!14668 = !DILocation(line: 736, column: 25, scope: !14652)
!14669 = !DILocation(line: 736, column: 22, scope: !14652)
!14670 = !DILocation(line: 736, column: 2, scope: !14652)
!14671 = !DILocation(line: 737, column: 1, scope: !14652)
!14672 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13004, file: !13004, line: 160, type: !13668, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14673)
!14673 = !{!14674}
!14674 = !DILocalVariable(name: "thread", arg: 1, scope: !14672, file: !13004, line: 160, type: !2334)
!14675 = !DILocation(line: 0, scope: !14672)
!14676 = !DILocation(line: 162, column: 15, scope: !14672)
!14677 = !DILocation(line: 162, column: 28, scope: !14672)
!14678 = !DILocation(line: 163, column: 1, scope: !14672)
!14679 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2433, file: !2433, line: 786, type: !13668, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14680)
!14680 = !{!14681, !14682, !14684}
!14681 = !DILocalVariable(name: "thread", arg: 1, scope: !14679, file: !2433, line: 786, type: !2334)
!14682 = !DILocalVariable(name: "__i", scope: !14683, file: !2433, line: 788, type: !13702)
!14683 = distinct !DILexicalBlock(scope: !14679, file: !2433, line: 788, column: 2)
!14684 = !DILocalVariable(name: "__key", scope: !14683, file: !2433, line: 788, type: !13702)
!14685 = !DILocation(line: 0, scope: !14679)
!14686 = !DILocation(line: 0, scope: !14683)
!14687 = !DILocation(line: 0, scope: !13710, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 788, column: 2, scope: !14683)
!14689 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14688)
!14691 = !DILocation(line: 0, scope: !13719, inlinedAt: !14690)
!14692 = !DILocation(line: 789, column: 3, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !2433, line: 788, column: 26)
!14694 = distinct !DILexicalBlock(scope: !14683, file: !2433, line: 788, column: 2)
!14695 = !DILocation(line: 0, scope: !13737, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 788, column: 2, scope: !14694)
!14697 = !DILocation(line: 0, scope: !13745, inlinedAt: !14698)
!14698 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14696)
!14699 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14698)
!14700 = !DILocation(line: 791, column: 1, scope: !14679)
!14701 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2433, file: !2433, line: 816, type: !14702, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14704)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{!125, !208, !2365, !14503}
!14704 = !{!14705, !14706, !14707, !14708, !14709, !14711}
!14705 = !DILocalVariable(name: "key", arg: 1, scope: !14701, file: !2433, line: 816, type: !208)
!14706 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14701, file: !2433, line: 816, type: !2365)
!14707 = !DILocalVariable(name: "timeout", arg: 3, scope: !14701, file: !2433, line: 816, type: !14503)
!14708 = !DILocalVariable(name: "ret", scope: !14701, file: !2433, line: 828, type: !125)
!14709 = !DILocalVariable(name: "__i", scope: !14710, file: !2433, line: 829, type: !13702)
!14710 = distinct !DILexicalBlock(scope: !14701, file: !2433, line: 829, column: 2)
!14711 = !DILocalVariable(name: "__key", scope: !14710, file: !2433, line: 829, type: !13702)
!14712 = !DILocation(line: 0, scope: !14701)
!14713 = !DILocation(line: 823, column: 14, scope: !14701)
!14714 = !DILocation(line: 823, column: 2, scope: !14701)
!14715 = !DILocation(line: 826, column: 20, scope: !14701)
!14716 = !DILocation(line: 826, column: 18, scope: !14701)
!14717 = !DILocation(line: 828, column: 12, scope: !14701)
!14718 = !DILocation(line: 0, scope: !14710)
!14719 = !DILocation(line: 0, scope: !13710, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 829, column: 2, scope: !14710)
!14721 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14720)
!14723 = !DILocation(line: 0, scope: !13719, inlinedAt: !14722)
!14724 = !DILocation(line: 830, column: 7, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !2433, line: 830, column: 7)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !2433, line: 829, column: 26)
!14727 = distinct !DILexicalBlock(scope: !14710, file: !2433, line: 829, column: 2)
!14728 = !DILocation(line: 830, column: 26, scope: !14725)
!14729 = !DILocation(line: 830, column: 23, scope: !14725)
!14730 = !DILocation(line: 830, column: 7, scope: !14726)
!14731 = !DILocation(line: 831, column: 20, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14725, file: !2433, line: 830, column: 36)
!14733 = !DILocation(line: 832, column: 3, scope: !14732)
!14734 = !DILocation(line: 0, scope: !13737, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 829, column: 2, scope: !14727)
!14736 = !DILocation(line: 0, scope: !13745, inlinedAt: !14737)
!14737 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14735)
!14738 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14737)
!14739 = !DILocation(line: 834, column: 2, scope: !14701)
!14740 = distinct !DISubprogram(name: "z_pend_curr", scope: !2433, file: !2433, line: 840, type: !14741, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14743)
!14741 = !DISubroutineType(types: !14742)
!14742 = !{!125, !13713, !13702, !2365, !14503}
!14743 = !{!14744, !14745, !14746, !14747}
!14744 = !DILocalVariable(name: "lock", arg: 1, scope: !14740, file: !2433, line: 840, type: !13713)
!14745 = !DILocalVariable(name: "key", arg: 2, scope: !14740, file: !2433, line: 840, type: !13702)
!14746 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14740, file: !2433, line: 841, type: !2365)
!14747 = !DILocalVariable(name: "timeout", arg: 4, scope: !14740, file: !2433, line: 841, type: !14503)
!14748 = !DILocation(line: 0, scope: !14740)
!14749 = !DILocation(line: 844, column: 20, scope: !14740)
!14750 = !DILocation(line: 844, column: 18, scope: !14740)
!14751 = !DILocation(line: 0, scope: !13710, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 856, column: 9, scope: !14740)
!14753 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14752)
!14755 = !DILocation(line: 0, scope: !13719, inlinedAt: !14754)
!14756 = !DILocation(line: 857, column: 14, scope: !14740)
!14757 = !DILocation(line: 857, column: 2, scope: !14740)
!14758 = !DILocation(line: 0, scope: !14323, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 859, column: 9, scope: !14740)
!14760 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !14759)
!14761 = !DILocation(line: 859, column: 2, scope: !14740)
!14762 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2433, file: !2433, line: 862, type: !14763, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14765)
!14763 = !DISubroutineType(types: !14764)
!14764 = !{!2334, !2365}
!14765 = !{!14766, !14767, !14768, !14770}
!14766 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14762, file: !2433, line: 862, type: !2365)
!14767 = !DILocalVariable(name: "thread", scope: !14762, file: !2433, line: 864, type: !2334)
!14768 = !DILocalVariable(name: "__i", scope: !14769, file: !2433, line: 866, type: !13702)
!14769 = distinct !DILexicalBlock(scope: !14762, file: !2433, line: 866, column: 2)
!14770 = !DILocalVariable(name: "__key", scope: !14769, file: !2433, line: 866, type: !13702)
!14771 = !DILocation(line: 0, scope: !14762)
!14772 = !DILocation(line: 0, scope: !14769)
!14773 = !DILocation(line: 0, scope: !13710, inlinedAt: !14774)
!14774 = distinct !DILocation(line: 866, column: 2, scope: !14769)
!14775 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14774)
!14777 = !DILocation(line: 0, scope: !13719, inlinedAt: !14776)
!14778 = !DILocation(line: 867, column: 12, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14780, file: !2433, line: 866, column: 26)
!14780 = distinct !DILexicalBlock(scope: !14769, file: !2433, line: 866, column: 2)
!14781 = !DILocation(line: 869, column: 14, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14779, file: !2433, line: 869, column: 7)
!14783 = !DILocation(line: 869, column: 7, scope: !14779)
!14784 = !DILocation(line: 870, column: 4, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14782, file: !2433, line: 869, column: 23)
!14786 = !DILocation(line: 871, column: 3, scope: !14785)
!14787 = !DILocation(line: 0, scope: !13737, inlinedAt: !14788)
!14788 = distinct !DILocation(line: 866, column: 2, scope: !14780)
!14789 = !DILocation(line: 0, scope: !13745, inlinedAt: !14790)
!14790 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14788)
!14791 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14790)
!14792 = !DILocation(line: 874, column: 2, scope: !14762)
!14793 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2433, file: !2433, line: 877, type: !14763, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14794)
!14794 = !{!14795, !14796, !14797, !14799}
!14795 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14793, file: !2433, line: 877, type: !2365)
!14796 = !DILocalVariable(name: "thread", scope: !14793, file: !2433, line: 879, type: !2334)
!14797 = !DILocalVariable(name: "__i", scope: !14798, file: !2433, line: 881, type: !13702)
!14798 = distinct !DILexicalBlock(scope: !14793, file: !2433, line: 881, column: 2)
!14799 = !DILocalVariable(name: "__key", scope: !14798, file: !2433, line: 881, type: !13702)
!14800 = !DILocation(line: 0, scope: !14793)
!14801 = !DILocation(line: 0, scope: !14798)
!14802 = !DILocation(line: 0, scope: !13710, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 881, column: 2, scope: !14798)
!14804 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14805)
!14805 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14803)
!14806 = !DILocation(line: 0, scope: !13719, inlinedAt: !14805)
!14807 = !DILocation(line: 882, column: 12, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !2433, line: 881, column: 26)
!14809 = distinct !DILexicalBlock(scope: !14798, file: !2433, line: 881, column: 2)
!14810 = !DILocation(line: 884, column: 14, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14808, file: !2433, line: 884, column: 7)
!14812 = !DILocation(line: 884, column: 7, scope: !14808)
!14813 = !DILocation(line: 885, column: 4, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14811, file: !2433, line: 884, column: 23)
!14815 = !DILocation(line: 886, column: 10, scope: !14814)
!14816 = !DILocation(line: 887, column: 3, scope: !14814)
!14817 = !DILocation(line: 0, scope: !13737, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 881, column: 2, scope: !14809)
!14819 = !DILocation(line: 0, scope: !13745, inlinedAt: !14820)
!14820 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14818)
!14821 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14820)
!14822 = !DILocation(line: 890, column: 2, scope: !14793)
!14823 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2433, file: !2433, line: 893, type: !13668, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14824)
!14824 = !{!14825}
!14825 = !DILocalVariable(name: "thread", arg: 1, scope: !14823, file: !2433, line: 893, type: !2334)
!14826 = !DILocation(line: 0, scope: !14823)
!14827 = !DILocation(line: 0, scope: !14679, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 895, column: 2, scope: !14823)
!14829 = !DILocation(line: 0, scope: !14683, inlinedAt: !14828)
!14830 = !DILocation(line: 0, scope: !13710, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 788, column: 2, scope: !14683, inlinedAt: !14828)
!14832 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14831)
!14834 = !DILocation(line: 0, scope: !13719, inlinedAt: !14833)
!14835 = !DILocation(line: 789, column: 3, scope: !14693, inlinedAt: !14828)
!14836 = !DILocation(line: 0, scope: !13737, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 788, column: 2, scope: !14694, inlinedAt: !14828)
!14838 = !DILocation(line: 0, scope: !13745, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14837)
!14840 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14839)
!14841 = !DILocation(line: 896, column: 8, scope: !14823)
!14842 = !DILocation(line: 897, column: 1, scope: !14823)
!14843 = distinct !DISubprogram(name: "z_set_prio", scope: !2433, file: !2433, line: 902, type: !14032, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14844)
!14844 = !{!14845, !14846, !14847, !14848, !14850}
!14845 = !DILocalVariable(name: "thread", arg: 1, scope: !14843, file: !2433, line: 902, type: !2334)
!14846 = !DILocalVariable(name: "prio", arg: 2, scope: !14843, file: !2433, line: 902, type: !125)
!14847 = !DILocalVariable(name: "need_sched", scope: !14843, file: !2433, line: 904, type: !153)
!14848 = !DILocalVariable(name: "__i", scope: !14849, file: !2433, line: 906, type: !13702)
!14849 = distinct !DILexicalBlock(scope: !14843, file: !2433, line: 906, column: 2)
!14850 = !DILocalVariable(name: "__key", scope: !14849, file: !2433, line: 906, type: !13702)
!14851 = !DILocation(line: 0, scope: !14843)
!14852 = !DILocation(line: 0, scope: !14849)
!14853 = !DILocation(line: 0, scope: !13710, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 906, column: 2, scope: !14849)
!14855 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14854)
!14857 = !DILocation(line: 0, scope: !13719, inlinedAt: !14856)
!14858 = !DILocation(line: 907, column: 16, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !2433, line: 906, column: 26)
!14860 = distinct !DILexicalBlock(scope: !14849, file: !2433, line: 906, column: 2)
!14861 = !DILocation(line: 909, column: 7, scope: !14859)
!14862 = !DILocation(line: 0, scope: !13881, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 912, column: 5, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14865, file: !2433, line: 911, column: 63)
!14865 = distinct !DILexicalBlock(scope: !14866, file: !2433, line: 911, column: 8)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2433, line: 909, column: 19)
!14867 = distinct !DILexicalBlock(scope: !14859, file: !2433, line: 909, column: 7)
!14868 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !14863)
!14869 = !DILocation(line: 0, scope: !13889, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !14863)
!14871 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !14870)
!14872 = !DILocation(line: 913, column: 23, scope: !14864)
!14873 = !DILocation(line: 0, scope: !13898, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 914, column: 5, scope: !14864)
!14875 = !DILocation(line: 252, column: 28, scope: !13898, inlinedAt: !14874)
!14876 = !DILocation(line: 0, scope: !13905, inlinedAt: !14877)
!14877 = distinct !DILocation(line: 254, column: 3, scope: !13909, inlinedAt: !14874)
!14878 = !DILocation(line: 0, scope: !13912, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 229, column: 2, scope: !13905, inlinedAt: !14877)
!14880 = !DILocation(line: 188, column: 2, scope: !13922, inlinedAt: !14879)
!14881 = !DILocation(line: 188, column: 2, scope: !13924, inlinedAt: !14879)
!14882 = !DILocation(line: 0, scope: !13922, inlinedAt: !14879)
!14883 = !DILocation(line: 189, column: 7, scope: !13927, inlinedAt: !14879)
!14884 = !DILocation(line: 189, column: 35, scope: !13927, inlinedAt: !14879)
!14885 = !DILocation(line: 189, column: 7, scope: !13928, inlinedAt: !14879)
!14886 = !DILocation(line: 190, column: 4, scope: !13932, inlinedAt: !14879)
!14887 = !DILocation(line: 192, column: 4, scope: !13932, inlinedAt: !14879)
!14888 = distinct !{!14888, !14880, !14889}
!14889 = !DILocation(line: 194, column: 2, scope: !13922, inlinedAt: !14879)
!14890 = !DILocation(line: 196, column: 2, scope: !13912, inlinedAt: !14879)
!14891 = !DILocation(line: 197, column: 1, scope: !13912, inlinedAt: !14879)
!14892 = !DILocation(line: 918, column: 4, scope: !14866)
!14893 = !DILocation(line: 919, column: 3, scope: !14866)
!14894 = !DILocation(line: 920, column: 22, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14867, file: !2433, line: 919, column: 10)
!14896 = !DILocation(line: 0, scope: !13737, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 906, column: 2, scope: !14860)
!14898 = !DILocation(line: 0, scope: !13745, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14897)
!14900 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14899)
!14901 = !DILocation(line: 926, column: 2, scope: !14843)
!14902 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2433, file: !2433, line: 929, type: !14903, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14905)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{null, !2334, !125}
!14905 = !{!14906, !14907, !14908}
!14906 = !DILocalVariable(name: "thread", arg: 1, scope: !14902, file: !2433, line: 929, type: !2334)
!14907 = !DILocalVariable(name: "prio", arg: 2, scope: !14902, file: !2433, line: 929, type: !125)
!14908 = !DILocalVariable(name: "need_sched", scope: !14902, file: !2433, line: 931, type: !153)
!14909 = !DILocation(line: 0, scope: !14902)
!14910 = !DILocation(line: 931, column: 20, scope: !14902)
!14911 = !DILocation(line: 935, column: 17, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14902, file: !2433, line: 935, column: 6)
!14913 = !DILocation(line: 935, column: 20, scope: !14912)
!14914 = !DILocation(line: 935, column: 35, scope: !14912)
!14915 = !DILocation(line: 935, column: 48, scope: !14912)
!14916 = !DILocation(line: 935, column: 6, scope: !14902)
!14917 = !DILocation(line: 936, column: 3, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14912, file: !2433, line: 935, column: 55)
!14919 = !DILocation(line: 937, column: 2, scope: !14918)
!14920 = !DILocation(line: 938, column: 1, scope: !14902)
!14921 = distinct !DISubprogram(name: "k_sched_lock", scope: !2433, file: !2433, line: 987, type: !3135, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14922)
!14922 = !{!14923, !14925}
!14923 = !DILocalVariable(name: "__i", scope: !14924, file: !2433, line: 989, type: !13702)
!14924 = distinct !DILexicalBlock(scope: !14921, file: !2433, line: 989, column: 2)
!14925 = !DILocalVariable(name: "__key", scope: !14924, file: !2433, line: 989, type: !13702)
!14926 = !DILocation(line: 0, scope: !14924)
!14927 = !DILocation(line: 0, scope: !13710, inlinedAt: !14928)
!14928 = distinct !DILocation(line: 989, column: 2, scope: !14924)
!14929 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14930)
!14930 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14928)
!14931 = !DILocation(line: 0, scope: !13719, inlinedAt: !14930)
!14932 = !DILocation(line: 992, column: 3, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !2433, line: 989, column: 26)
!14934 = distinct !DILexicalBlock(scope: !14924, file: !2433, line: 989, column: 2)
!14935 = !DILocation(line: 0, scope: !13737, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 989, column: 2, scope: !14934)
!14937 = !DILocation(line: 0, scope: !13745, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14936)
!14939 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14938)
!14940 = !DILocation(line: 994, column: 1, scope: !14921)
!14941 = distinct !DISubprogram(name: "z_sched_lock", scope: !13004, file: !13004, line: 251, type: !3135, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!14942 = !DILocation(line: 256, column: 4, scope: !14941)
!14943 = !DILocation(line: 256, column: 19, scope: !14941)
!14944 = !DILocation(line: 256, column: 2, scope: !14941)
!14945 = !DILocation(line: 258, column: 2, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14941, file: !13004, line: 258, column: 2)
!14947 = !{i64 2154791998}
!14948 = !DILocation(line: 259, column: 1, scope: !14941)
!14949 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2433, file: !2433, line: 996, type: !3135, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14950)
!14950 = !{!14951, !14953}
!14951 = !DILocalVariable(name: "__i", scope: !14952, file: !2433, line: 998, type: !13702)
!14952 = distinct !DILexicalBlock(scope: !14949, file: !2433, line: 998, column: 2)
!14953 = !DILocalVariable(name: "__key", scope: !14952, file: !2433, line: 998, type: !13702)
!14954 = !DILocation(line: 0, scope: !14952)
!14955 = !DILocation(line: 0, scope: !13710, inlinedAt: !14956)
!14956 = distinct !DILocation(line: 998, column: 2, scope: !14952)
!14957 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !14958)
!14958 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !14956)
!14959 = !DILocation(line: 0, scope: !13719, inlinedAt: !14958)
!14960 = !DILocation(line: 1002, column: 5, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14962, file: !2433, line: 998, column: 26)
!14962 = distinct !DILexicalBlock(scope: !14952, file: !2433, line: 998, column: 2)
!14963 = !DILocation(line: 1002, column: 20, scope: !14961)
!14964 = !DILocation(line: 1002, column: 3, scope: !14961)
!14965 = !DILocation(line: 1003, column: 3, scope: !14961)
!14966 = !DILocation(line: 0, scope: !13737, inlinedAt: !14967)
!14967 = distinct !DILocation(line: 998, column: 2, scope: !14962)
!14968 = !DILocation(line: 0, scope: !13745, inlinedAt: !14969)
!14969 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !14967)
!14970 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !14969)
!14971 = !DILocation(line: 1011, column: 2, scope: !14949)
!14972 = !DILocation(line: 1012, column: 1, scope: !14949)
!14973 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2433, file: !2433, line: 1014, type: !14020, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!14974 = !DILocation(line: 1028, column: 25, scope: !14973)
!14975 = !DILocation(line: 1028, column: 2, scope: !14973)
!14976 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2433, file: !2433, line: 1155, type: !14977, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14979)
!14977 = !DISubroutineType(types: !14978)
!14978 = !{!153, !2363, !2363}
!14979 = !{!14980, !14981, !14982, !14983, !14984}
!14980 = !DILocalVariable(name: "a", arg: 1, scope: !14976, file: !2433, line: 1155, type: !2363)
!14981 = !DILocalVariable(name: "b", arg: 2, scope: !14976, file: !2433, line: 1155, type: !2363)
!14982 = !DILocalVariable(name: "thread_a", scope: !14976, file: !2433, line: 1157, type: !2334)
!14983 = !DILocalVariable(name: "thread_b", scope: !14976, file: !2433, line: 1157, type: !2334)
!14984 = !DILocalVariable(name: "cmp", scope: !14976, file: !2433, line: 1158, type: !1354)
!14985 = !DILocation(line: 0, scope: !14976)
!14986 = !DILocation(line: 1160, column: 13, scope: !14976)
!14987 = !DILocation(line: 1161, column: 13, scope: !14976)
!14988 = !DILocation(line: 1163, column: 8, scope: !14976)
!14989 = !DILocation(line: 1165, column: 10, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14976, file: !2433, line: 1165, column: 6)
!14991 = !DILocation(line: 1165, column: 6, scope: !14976)
!14992 = !DILocation(line: 1167, column: 17, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14990, file: !2433, line: 1167, column: 13)
!14994 = !DILocation(line: 1167, column: 13, scope: !14990)
!14995 = !DILocation(line: 1170, column: 25, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14993, file: !2433, line: 1169, column: 9)
!14997 = !DILocation(line: 1170, column: 52, scope: !14996)
!14998 = !DILocation(line: 1170, column: 35, scope: !14996)
!14999 = !DILocation(line: 1170, column: 3, scope: !14996)
!15000 = !DILocation(line: 0, scope: !14990)
!15001 = !DILocation(line: 1173, column: 1, scope: !14976)
!15002 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2433, file: !2433, line: 1175, type: !15003, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15018)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{null, !15005, !2334}
!15005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15006, size: 32)
!15006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15007, line: 37, size: 128, elements: !15008)
!15007 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15008 = !{!15009, !15017}
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15006, file: !15007, line: 38, baseType: !15010, size: 96)
!15010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !2066, line: 83, size: 96, elements: !15011)
!15011 = !{!15012, !15013, !15016}
!15012 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15010, file: !2066, line: 84, baseType: !2363, size: 32)
!15013 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15010, file: !2066, line: 85, baseType: !15014, size: 32, offset: 32)
!15014 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !2066, line: 81, baseType: !15015)
!15015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14977, size: 32)
!15016 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15010, file: !2066, line: 86, baseType: !125, size: 32, offset: 64)
!15017 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15006, file: !15007, line: 39, baseType: !125, size: 32, offset: 96)
!15018 = !{!15019, !15020, !15021, !15022, !15031}
!15019 = !DILocalVariable(name: "pq", arg: 1, scope: !15002, file: !2433, line: 1175, type: !15005)
!15020 = !DILocalVariable(name: "thread", arg: 2, scope: !15002, file: !2433, line: 1175, type: !2334)
!15021 = !DILocalVariable(name: "t", scope: !15002, file: !2433, line: 1177, type: !2334)
!15022 = !DILocalVariable(name: "__f", scope: !15023, file: !2433, line: 1190, type: !15026)
!15023 = distinct !DILexicalBlock(scope: !15024, file: !2433, line: 1190, column: 3)
!15024 = distinct !DILexicalBlock(scope: !15025, file: !2433, line: 1189, column: 27)
!15025 = distinct !DILexicalBlock(scope: !15002, file: !2433, line: 1189, column: 6)
!15026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !2066, line: 155, size: 96, elements: !15027)
!15027 = !{!15028, !15029, !15030}
!15028 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15026, file: !2066, line: 156, baseType: !2428, size: 32)
!15029 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15026, file: !2066, line: 157, baseType: !184, size: 32, offset: 32)
!15030 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15026, file: !2066, line: 158, baseType: !1354, size: 32, offset: 64)
!15031 = !DILocalVariable(name: "n", scope: !15032, file: !2433, line: 1190, type: !2363)
!15032 = distinct !DILexicalBlock(scope: !15033, file: !2433, line: 1190, column: 3)
!15033 = distinct !DILexicalBlock(scope: !15023, file: !2433, line: 1190, column: 3)
!15034 = !DILocation(line: 0, scope: !15002)
!15035 = !DILocation(line: 1181, column: 31, scope: !15002)
!15036 = !DILocation(line: 1181, column: 45, scope: !15002)
!15037 = !DILocation(line: 1181, column: 15, scope: !15002)
!15038 = !DILocation(line: 1181, column: 25, scope: !15002)
!15039 = !DILocation(line: 1189, column: 11, scope: !15025)
!15040 = !DILocation(line: 1189, column: 7, scope: !15025)
!15041 = !DILocation(line: 1189, column: 6, scope: !15002)
!15042 = !DILocation(line: 1190, column: 3, scope: !15023)
!15043 = !DILocation(line: 1190, column: 3, scope: !15032)
!15044 = !DILocation(line: 0, scope: !15032)
!15045 = !DILocation(line: 1190, column: 3, scope: !15033)
!15046 = !DILocation(line: 1193, column: 2, scope: !15024)
!15047 = !DILocation(line: 1191, column: 42, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15033, file: !2433, line: 1190, column: 54)
!15049 = !DILocation(line: 1191, column: 12, scope: !15048)
!15050 = !DILocation(line: 1191, column: 22, scope: !15048)
!15051 = distinct !{!15051, !15042, !15052}
!15052 = !DILocation(line: 1192, column: 3, scope: !15023)
!15053 = !DILocation(line: 1195, column: 17, scope: !15002)
!15054 = !DILocation(line: 1195, column: 37, scope: !15002)
!15055 = !DILocation(line: 1195, column: 2, scope: !15002)
!15056 = !DILocation(line: 1196, column: 1, scope: !15002)
!15057 = !DISubprogram(name: "z_rb_foreach_next", scope: !2066, file: !2066, line: 176, type: !15058, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!15058 = !DISubroutineType(types: !15059)
!15059 = !{!2363, !15060, !15061}
!15060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15010, size: 32)
!15061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15026, size: 32)
!15062 = !DISubprogram(name: "rb_insert", scope: !2066, file: !2066, line: 105, type: !15063, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{null, !15060, !2363}
!15065 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2433, file: !2433, line: 1198, type: !15003, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15066)
!15066 = !{!15067, !15068}
!15067 = !DILocalVariable(name: "pq", arg: 1, scope: !15065, file: !2433, line: 1198, type: !15005)
!15068 = !DILocalVariable(name: "thread", arg: 2, scope: !15065, file: !2433, line: 1198, type: !2334)
!15069 = !DILocation(line: 0, scope: !15065)
!15070 = !DILocation(line: 1202, column: 17, scope: !15065)
!15071 = !DILocation(line: 1202, column: 37, scope: !15065)
!15072 = !DILocation(line: 1202, column: 2, scope: !15065)
!15073 = !DILocation(line: 1204, column: 16, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15065, file: !2433, line: 1204, column: 6)
!15075 = !DILocation(line: 1204, column: 7, scope: !15074)
!15076 = !DILocation(line: 1204, column: 6, scope: !15065)
!15077 = !DILocation(line: 1205, column: 7, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15074, file: !2433, line: 1204, column: 22)
!15079 = !DILocation(line: 1205, column: 22, scope: !15078)
!15080 = !DILocation(line: 1206, column: 2, scope: !15078)
!15081 = !DILocation(line: 1207, column: 1, scope: !15065)
!15082 = !DISubprogram(name: "rb_remove", scope: !2066, file: !2066, line: 110, type: !15063, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!15083 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2433, file: !2433, line: 1209, type: !15084, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15086)
!15084 = !DISubroutineType(types: !15085)
!15085 = !{!2334, !15005}
!15086 = !{!15087, !15088, !15089}
!15087 = !DILocalVariable(name: "pq", arg: 1, scope: !15083, file: !2433, line: 1209, type: !15005)
!15088 = !DILocalVariable(name: "thread", scope: !15083, file: !2433, line: 1211, type: !2334)
!15089 = !DILocalVariable(name: "n", scope: !15083, file: !2433, line: 1212, type: !2363)
!15090 = !DILocation(line: 0, scope: !15083)
!15091 = !DILocation(line: 1212, column: 37, scope: !15083)
!15092 = !DILocation(line: 1212, column: 21, scope: !15083)
!15093 = !DILocation(line: 1217, column: 2, scope: !15083)
!15094 = distinct !DISubprogram(name: "rb_get_min", scope: !2066, file: !2066, line: 115, type: !15095, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15097)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!2363, !15060}
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "tree", arg: 1, scope: !15094, file: !2066, line: 115, type: !15060)
!15099 = !DILocation(line: 0, scope: !15094)
!15100 = !DILocation(line: 117, column: 9, scope: !15094)
!15101 = !DILocation(line: 117, column: 2, scope: !15094)
!15102 = !DISubprogram(name: "z_rb_get_minmax", scope: !2066, file: !2066, line: 100, type: !15103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1896)
!15103 = !DISubroutineType(types: !15104)
!15104 = !{!2363, !15060, !150}
!15105 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2433, file: !2433, line: 1246, type: !15106, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15114)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!2334, !15108}
!15108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15109, size: 32)
!15109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15007, line: 53, size: 2080, elements: !15110)
!15110 = !{!15111, !15113}
!15111 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15109, file: !15007, line: 54, baseType: !15112, size: 2048)
!15112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2370, size: 2048, elements: !780)
!15113 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15109, file: !15007, line: 55, baseType: !32, size: 32, offset: 2048)
!15114 = !{!15115, !15116, !15117, !15118}
!15115 = !DILocalVariable(name: "pq", arg: 1, scope: !15105, file: !2433, line: 1246, type: !15108)
!15116 = !DILocalVariable(name: "thread", scope: !15105, file: !2433, line: 1252, type: !2334)
!15117 = !DILocalVariable(name: "l", scope: !15105, file: !2433, line: 1253, type: !13915)
!15118 = !DILocalVariable(name: "n", scope: !15105, file: !2433, line: 1254, type: !2429)
!15119 = !DILocation(line: 0, scope: !15105)
!15120 = !DILocation(line: 1248, column: 11, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15105, file: !2433, line: 1248, column: 6)
!15122 = !DILocation(line: 1248, column: 7, scope: !15121)
!15123 = !DILocation(line: 1248, column: 6, scope: !15105)
!15124 = !DILocation(line: 1253, column: 31, scope: !15105)
!15125 = !{i32 0, i32 33}
!15126 = !DILocation(line: 1253, column: 20, scope: !15105)
!15127 = !DILocation(line: 1254, column: 19, scope: !15105)
!15128 = !DILocation(line: 1260, column: 1, scope: !15105)
!15129 = distinct !DISubprogram(name: "z_unpend_all", scope: !2433, file: !2433, line: 1262, type: !15130, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15132)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!125, !2365}
!15132 = !{!15133, !15134, !15135}
!15133 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15129, file: !2433, line: 1262, type: !2365)
!15134 = !DILocalVariable(name: "need_sched", scope: !15129, file: !2433, line: 1264, type: !125)
!15135 = !DILocalVariable(name: "thread", scope: !15129, file: !2433, line: 1265, type: !2334)
!15136 = !DILocation(line: 0, scope: !15129)
!15137 = !DILocation(line: 1267, column: 19, scope: !15129)
!15138 = !DILocation(line: 1267, column: 41, scope: !15129)
!15139 = !DILocation(line: 1267, column: 2, scope: !15129)
!15140 = !DILocation(line: 1268, column: 3, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15129, file: !2433, line: 1267, column: 50)
!15142 = !DILocation(line: 1269, column: 3, scope: !15141)
!15143 = distinct !{!15143, !15139, !15144}
!15144 = !DILocation(line: 1271, column: 2, scope: !15129)
!15145 = !DILocation(line: 1273, column: 2, scope: !15129)
!15146 = distinct !DISubprogram(name: "z_waitq_head", scope: !13324, file: !13324, line: 52, type: !14763, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15147)
!15147 = !{!15148}
!15148 = !DILocalVariable(name: "w", arg: 1, scope: !15146, file: !13324, line: 52, type: !2365)
!15149 = !DILocation(line: 0, scope: !15146)
!15150 = !DILocation(line: 54, column: 52, scope: !15146)
!15151 = !DILocation(line: 54, column: 28, scope: !15146)
!15152 = !DILocation(line: 54, column: 9, scope: !15146)
!15153 = !DILocation(line: 54, column: 2, scope: !15146)
!15154 = distinct !DISubprogram(name: "init_ready_q", scope: !2433, file: !2433, line: 1276, type: !15155, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15162)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{null, !15157}
!15157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15158, size: 32)
!15158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !2029, line: 83, size: 96, elements: !15159)
!15159 = !{!15160, !15161}
!15160 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15158, file: !2029, line: 86, baseType: !2334, size: 32)
!15161 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15158, file: !2029, line: 90, baseType: !2370, size: 64, offset: 32)
!15162 = !{!15163}
!15163 = !DILocalVariable(name: "rq", arg: 1, scope: !15154, file: !2433, line: 1276, type: !15157)
!15164 = !DILocation(line: 0, scope: !15154)
!15165 = !DILocation(line: 1289, column: 22, scope: !15154)
!15166 = !DILocation(line: 1289, column: 2, scope: !15154)
!15167 = !DILocation(line: 1291, column: 1, scope: !15154)
!15168 = distinct !DISubprogram(name: "sys_dlist_init", scope: !2050, file: !2050, line: 197, type: !15169, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{null, !13915}
!15171 = !{!15172}
!15172 = !DILocalVariable(name: "list", arg: 1, scope: !15168, file: !2050, line: 197, type: !13915)
!15173 = !DILocation(line: 0, scope: !15168)
!15174 = !DILocation(line: 199, column: 8, scope: !15168)
!15175 = !DILocation(line: 199, column: 13, scope: !15168)
!15176 = !DILocation(line: 200, column: 8, scope: !15168)
!15177 = !DILocation(line: 200, column: 13, scope: !15168)
!15178 = !DILocation(line: 201, column: 1, scope: !15168)
!15179 = distinct !DISubprogram(name: "z_sched_init", scope: !2433, file: !2433, line: 1293, type: !3135, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!15180 = !DILocation(line: 1302, column: 2, scope: !15179)
!15181 = !DILocation(line: 1306, column: 2, scope: !15179)
!15182 = !DILocation(line: 1309, column: 1, scope: !15179)
!15183 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2433, file: !2433, line: 1311, type: !15184, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15187)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{!125, !15186}
!15186 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !2040, line: 347, baseType: !2334)
!15187 = !{!15188}
!15188 = !DILocalVariable(name: "thread", arg: 1, scope: !15183, file: !2433, line: 1311, type: !15186)
!15189 = !DILocation(line: 0, scope: !15183)
!15190 = !DILocation(line: 1313, column: 22, scope: !15183)
!15191 = !DILocation(line: 1313, column: 9, scope: !15183)
!15192 = !DILocation(line: 1313, column: 2, scope: !15183)
!15193 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2433, file: !2433, line: 1325, type: !15194, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15196)
!15194 = !DISubroutineType(types: !15195)
!15195 = !{null, !15186, !125}
!15196 = !{!15197, !15198, !15199}
!15197 = !DILocalVariable(name: "thread", arg: 1, scope: !15193, file: !2433, line: 1325, type: !15186)
!15198 = !DILocalVariable(name: "prio", arg: 2, scope: !15193, file: !2433, line: 1325, type: !125)
!15199 = !DILocalVariable(name: "th", scope: !15193, file: !2433, line: 1334, type: !2334)
!15200 = !DILocation(line: 0, scope: !15193)
!15201 = !DILocation(line: 1336, column: 2, scope: !15193)
!15202 = !DILocation(line: 1337, column: 1, scope: !15193)
!15203 = distinct !DISubprogram(name: "k_can_yield", scope: !2433, file: !2433, line: 1384, type: !9029, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!15204 = !DILocation(line: 1386, column: 11, scope: !15203)
!15205 = !DILocation(line: 1386, column: 29, scope: !15203)
!15206 = !DILocation(line: 1386, column: 32, scope: !15203)
!15207 = !DILocation(line: 1386, column: 46, scope: !15203)
!15208 = !DILocation(line: 1387, column: 28, scope: !15203)
!15209 = !DILocation(line: 1387, column: 4, scope: !15203)
!15210 = !DILocation(line: 1386, column: 2, scope: !15203)
!15211 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !2123, file: !2123, line: 989, type: !9029, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!15212 = !DILocation(line: 993, column: 10, scope: !15211)
!15213 = !DILocation(line: 993, column: 2, scope: !15211)
!15214 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2433, file: !2433, line: 1390, type: !3135, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15215)
!15215 = !{!15216}
!15216 = !DILocalVariable(name: "key", scope: !15214, file: !2433, line: 1396, type: !13702)
!15217 = !DILocation(line: 0, scope: !13710, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 1396, column: 25, scope: !15214)
!15219 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !15218)
!15221 = !DILocation(line: 0, scope: !13719, inlinedAt: !15220)
!15222 = !DILocation(line: 0, scope: !15214)
!15223 = !DILocation(line: 1400, column: 18, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !2433, line: 1399, column: 36)
!15225 = distinct !DILexicalBlock(scope: !15214, file: !2433, line: 1398, column: 6)
!15226 = !DILocation(line: 0, scope: !13881, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 1400, column: 3, scope: !15224)
!15228 = !DILocation(line: 266, column: 15, scope: !13881, inlinedAt: !15227)
!15229 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !15227)
!15230 = !DILocation(line: 0, scope: !13889, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !15227)
!15232 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !15231)
!15233 = !DILocation(line: 1402, column: 15, scope: !15214)
!15234 = !DILocation(line: 0, scope: !13898, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 1402, column: 2, scope: !15214)
!15236 = !DILocation(line: 252, column: 15, scope: !13898, inlinedAt: !15235)
!15237 = !DILocation(line: 252, column: 28, scope: !13898, inlinedAt: !15235)
!15238 = !DILocation(line: 0, scope: !13905, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 254, column: 3, scope: !13909, inlinedAt: !15235)
!15240 = !DILocation(line: 0, scope: !13912, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 229, column: 2, scope: !13905, inlinedAt: !15239)
!15242 = !DILocation(line: 188, column: 2, scope: !13922, inlinedAt: !15241)
!15243 = !DILocation(line: 188, column: 2, scope: !13924, inlinedAt: !15241)
!15244 = !DILocation(line: 0, scope: !13922, inlinedAt: !15241)
!15245 = !DILocation(line: 189, column: 7, scope: !13927, inlinedAt: !15241)
!15246 = !DILocation(line: 189, column: 35, scope: !13927, inlinedAt: !15241)
!15247 = !DILocation(line: 189, column: 7, scope: !13928, inlinedAt: !15241)
!15248 = !DILocation(line: 191, column: 21, scope: !13932, inlinedAt: !15241)
!15249 = !DILocation(line: 190, column: 4, scope: !13932, inlinedAt: !15241)
!15250 = !DILocation(line: 192, column: 4, scope: !13932, inlinedAt: !15241)
!15251 = distinct !{!15251, !15242, !15252}
!15252 = !DILocation(line: 194, column: 2, scope: !13922, inlinedAt: !15241)
!15253 = !DILocation(line: 196, column: 37, scope: !13912, inlinedAt: !15241)
!15254 = !DILocation(line: 196, column: 2, scope: !13912, inlinedAt: !15241)
!15255 = !DILocation(line: 197, column: 1, scope: !13912, inlinedAt: !15241)
!15256 = !DILocation(line: 1403, column: 2, scope: !15214)
!15257 = !DILocation(line: 0, scope: !14323, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 1404, column: 2, scope: !15214)
!15259 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !15258)
!15260 = !DILocation(line: 1405, column: 1, scope: !15214)
!15261 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2433, file: !2433, line: 1459, type: !15262, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15264)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{!1354, !14503}
!15264 = !{!15265, !15266, !15267}
!15265 = !DILocalVariable(name: "timeout", arg: 1, scope: !15261, file: !2433, line: 1459, type: !14503)
!15266 = !DILocalVariable(name: "ticks", scope: !15261, file: !2433, line: 1461, type: !1788)
!15267 = !DILocalVariable(name: "ret", scope: !15261, file: !2433, line: 1480, type: !1354)
!15268 = !DILocation(line: 0, scope: !15261)
!15269 = !DILocation(line: 1468, column: 6, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15261, file: !2433, line: 1468, column: 6)
!15271 = !DILocation(line: 1468, column: 6, scope: !15261)
!15272 = !DILocation(line: 1469, column: 20, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15270, file: !2433, line: 1468, column: 40)
!15274 = !DILocation(line: 1469, column: 3, scope: !15273)
!15275 = !DILocation(line: 1473, column: 3, scope: !15273)
!15276 = !DILocation(line: 1478, column: 10, scope: !15261)
!15277 = !DILocation(line: 1480, column: 16, scope: !15261)
!15278 = !DILocation(line: 1485, column: 1, scope: !15261)
!15279 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5187, file: !5187, line: 310, type: !15280, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15282)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{null, !15186}
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !5187, line: 310, type: !15186)
!15284 = !DILocation(line: 0, scope: !15279)
!15285 = !DILocation(line: 319, column: 2, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15279, file: !5187, line: 319, column: 2)
!15287 = !{i64 2151081612}
!15288 = !DILocation(line: 320, column: 2, scope: !15279)
!15289 = !DILocation(line: 321, column: 1, scope: !15279)
!15290 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2433, file: !2433, line: 1415, type: !15291, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15293)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!1354, !1788}
!15293 = !{!15294, !15295, !15296, !15297}
!15294 = !DILocalVariable(name: "ticks", arg: 1, scope: !15290, file: !2433, line: 1415, type: !1788)
!15295 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15290, file: !2433, line: 1418, type: !208)
!15296 = !DILocalVariable(name: "timeout", scope: !15290, file: !2433, line: 1430, type: !14503)
!15297 = !DILocalVariable(name: "key", scope: !15290, file: !2433, line: 1437, type: !13702)
!15298 = !DILocation(line: 0, scope: !15290)
!15299 = !DILocation(line: 1425, column: 12, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15290, file: !2433, line: 1425, column: 6)
!15301 = !DILocation(line: 1425, column: 6, scope: !15290)
!15302 = !DILocation(line: 1426, column: 3, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15300, file: !2433, line: 1425, column: 18)
!15304 = !DILocation(line: 1427, column: 3, scope: !15303)
!15305 = !DILocation(line: 1431, column: 24, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15290, file: !2433, line: 1431, column: 6)
!15307 = !DILocation(line: 1431, column: 6, scope: !15290)
!15308 = !DILocation(line: 1432, column: 35, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15306, file: !2433, line: 1431, column: 30)
!15310 = !DILocation(line: 1432, column: 27, scope: !15309)
!15311 = !DILocation(line: 1433, column: 2, scope: !15309)
!15312 = !DILocation(line: 1434, column: 27, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15306, file: !2433, line: 1433, column: 9)
!15314 = !DILocation(line: 0, scope: !15306)
!15315 = !DILocation(line: 0, scope: !13710, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 1437, column: 25, scope: !15290)
!15317 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !15316)
!15319 = !DILocation(line: 0, scope: !13719, inlinedAt: !15318)
!15320 = !DILocation(line: 1440, column: 20, scope: !15290)
!15321 = !DILocation(line: 1440, column: 18, scope: !15290)
!15322 = !DILocation(line: 1442, column: 2, scope: !15290)
!15323 = !DILocation(line: 1443, column: 23, scope: !15290)
!15324 = !DILocation(line: 1443, column: 2, scope: !15290)
!15325 = !DILocation(line: 1444, column: 29, scope: !15290)
!15326 = !DILocation(line: 1444, column: 2, scope: !15290)
!15327 = !DILocation(line: 0, scope: !14323, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 1446, column: 8, scope: !15290)
!15329 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !15328)
!15330 = !DILocation(line: 1450, column: 10, scope: !15290)
!15331 = !DILocation(line: 1450, column: 45, scope: !15290)
!15332 = !DILocation(line: 1450, column: 43, scope: !15290)
!15333 = !DILocation(line: 1451, column: 6, scope: !15290)
!15334 = !DILocation(line: 1457, column: 1, scope: !15290)
!15335 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13543, file: !13543, line: 1103, type: !13544, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15336)
!15336 = !{!15337}
!15337 = !DILocalVariable(name: "t", arg: 1, scope: !15335, file: !13543, line: 1103, type: !2312)
!15338 = !DILocation(line: 0, scope: !15335)
!15339 = !DILocation(line: 0, scope: !13759, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 1106, column: 9, scope: !15335)
!15341 = !DILocation(line: 139, column: 13, scope: !15342, inlinedAt: !15340)
!15342 = distinct !DILexicalBlock(scope: !15343, file: !13543, line: 138, column: 10)
!15343 = distinct !DILexicalBlock(scope: !15344, file: !13543, line: 136, column: 7)
!15344 = distinct !DILexicalBlock(scope: !13780, file: !13543, line: 134, column: 17)
!15345 = !DILocation(line: 1106, column: 2, scope: !15335)
!15346 = distinct !DISubprogram(name: "k_yield", scope: !5187, file: !5187, line: 140, type: !3135, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!15347 = !DILocation(line: 148, column: 2, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15346, file: !5187, line: 148, column: 2)
!15349 = !{i64 2151080932}
!15350 = !DILocation(line: 149, column: 2, scope: !15346)
!15351 = !DILocation(line: 150, column: 1, scope: !15346)
!15352 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2433, file: !2433, line: 1495, type: !15353, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15355)
!15353 = !DISubroutineType(types: !15354)
!15354 = !{!1354, !125}
!15355 = !{!15356, !15357}
!15356 = !DILocalVariable(name: "us", arg: 1, scope: !15352, file: !2433, line: 1495, type: !125)
!15357 = !DILocalVariable(name: "ticks", scope: !15352, file: !2433, line: 1497, type: !1354)
!15358 = !DILocation(line: 0, scope: !15352)
!15359 = !DILocation(line: 1501, column: 31, scope: !15352)
!15360 = !DILocation(line: 1501, column: 10, scope: !15352)
!15361 = !DILocation(line: 1502, column: 23, scope: !15352)
!15362 = !DILocation(line: 1502, column: 10, scope: !15352)
!15363 = !DILocation(line: 1506, column: 31, scope: !15352)
!15364 = !DILocation(line: 1506, column: 9, scope: !15352)
!15365 = !DILocation(line: 1506, column: 2, scope: !15352)
!15366 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13543, file: !13543, line: 571, type: !13544, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15367)
!15367 = !{!15368}
!15368 = !DILocalVariable(name: "t", arg: 1, scope: !15366, file: !13543, line: 571, type: !2312)
!15369 = !DILocation(line: 0, scope: !15366)
!15370 = !DILocation(line: 0, scope: !13759, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 574, column: 9, scope: !15366)
!15372 = !DILocation(line: 135, column: 5, scope: !15344, inlinedAt: !15371)
!15373 = !DILocation(line: 139, column: 13, scope: !15342, inlinedAt: !15371)
!15374 = !DILocation(line: 574, column: 2, scope: !15366)
!15375 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13543, file: !13543, line: 1187, type: !13544, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15376)
!15376 = !{!15377}
!15377 = !DILocalVariable(name: "t", arg: 1, scope: !15375, file: !13543, line: 1187, type: !2312)
!15378 = !DILocation(line: 0, scope: !15375)
!15379 = !DILocation(line: 0, scope: !13759, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 1190, column: 9, scope: !15375)
!15381 = !DILocation(line: 145, column: 13, scope: !15382, inlinedAt: !15380)
!15382 = distinct !DILexicalBlock(scope: !13777, file: !13543, line: 144, column: 10)
!15383 = !DILocation(line: 1190, column: 2, scope: !15375)
!15384 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2433, file: !2433, line: 1517, type: !15280, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15385)
!15385 = !{!15386}
!15386 = !DILocalVariable(name: "thread", arg: 1, scope: !15384, file: !2433, line: 1517, type: !15186)
!15387 = !DILocation(line: 0, scope: !15384)
!15388 = !DILocation(line: 1521, column: 6, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15384, file: !2433, line: 1521, column: 6)
!15390 = !DILocation(line: 1521, column: 6, scope: !15384)
!15391 = !DILocation(line: 1525, column: 6, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15384, file: !2433, line: 1525, column: 6)
!15393 = !DILocation(line: 1525, column: 37, scope: !15392)
!15394 = !DILocation(line: 1525, column: 6, scope: !15384)
!15395 = !DILocation(line: 1527, column: 20, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15397, file: !2433, line: 1527, column: 7)
!15397 = distinct !DILexicalBlock(scope: !15392, file: !2433, line: 1525, column: 42)
!15398 = !DILocation(line: 1527, column: 33, scope: !15396)
!15399 = !DILocation(line: 1527, column: 7, scope: !15397)
!15400 = !DILocation(line: 1532, column: 2, scope: !15384)
!15401 = !DILocation(line: 1533, column: 2, scope: !15384)
!15402 = !DILocation(line: 1031, column: 3, scope: !14356, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 48, column: 10, scope: !14360, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 1537, column: 7, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15384, file: !2433, line: 1537, column: 6)
!15406 = !DILocation(line: 0, scope: !14356, inlinedAt: !15403)
!15407 = !DILocation(line: 48, column: 9, scope: !14360, inlinedAt: !15404)
!15408 = !DILocation(line: 1537, column: 6, scope: !15384)
!15409 = !DILocation(line: 1538, column: 3, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15405, file: !2433, line: 1537, column: 25)
!15411 = !DILocation(line: 1539, column: 2, scope: !15410)
!15412 = !DILocation(line: 1540, column: 1, scope: !15384)
!15413 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13004, file: !13004, line: 101, type: !13830, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15414)
!15414 = !{!15415}
!15415 = !DILocalVariable(name: "thread", arg: 1, scope: !15413, file: !13004, line: 101, type: !2334)
!15416 = !DILocation(line: 0, scope: !15413)
!15417 = !DILocation(line: 103, column: 23, scope: !15413)
!15418 = !DILocation(line: 103, column: 36, scope: !15413)
!15419 = !DILocation(line: 103, column: 55, scope: !15413)
!15420 = !DILocation(line: 103, column: 2, scope: !15413)
!15421 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2433, file: !2433, line: 1567, type: !15422, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15424)
!15422 = !DISubroutineType(types: !15423)
!15423 = !{!15186}
!15424 = !{!15425}
!15425 = !DILocalVariable(name: "ret", scope: !15421, file: !2433, line: 1577, type: !15186)
!15426 = !DILocation(line: 1577, column: 30, scope: !15421)
!15427 = !DILocation(line: 0, scope: !15421)
!15428 = !DILocation(line: 1582, column: 2, scope: !15421)
!15429 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2433, file: !2433, line: 1593, type: !10081, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !1896)
!15430 = !DILocation(line: 1031, column: 3, scope: !14356, inlinedAt: !15431)
!15431 = distinct !DILocation(line: 48, column: 10, scope: !14360, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 1595, column: 10, scope: !15429)
!15433 = !DILocation(line: 0, scope: !14356, inlinedAt: !15431)
!15434 = !DILocation(line: 48, column: 9, scope: !14360, inlinedAt: !15432)
!15435 = !DILocation(line: 1595, column: 27, scope: !15429)
!15436 = !DILocation(line: 1595, column: 41, scope: !15429)
!15437 = !DILocation(line: 1595, column: 30, scope: !15429)
!15438 = !DILocation(line: 1595, column: 2, scope: !15429)
!15439 = distinct !DISubprogram(name: "z_thread_abort", scope: !2433, file: !2433, line: 1725, type: !13668, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15440)
!15440 = !{!15441, !15442}
!15441 = !DILocalVariable(name: "thread", arg: 1, scope: !15439, file: !2433, line: 1725, type: !2334)
!15442 = !DILocalVariable(name: "key", scope: !15439, file: !2433, line: 1727, type: !13702)
!15443 = !DILocation(line: 0, scope: !15439)
!15444 = !DILocation(line: 0, scope: !13710, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 1727, column: 25, scope: !15439)
!15446 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !15445)
!15448 = !DILocation(line: 0, scope: !13719, inlinedAt: !15447)
!15449 = !DILocation(line: 1729, column: 20, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15439, file: !2433, line: 1729, column: 6)
!15451 = !DILocation(line: 1729, column: 33, scope: !15450)
!15452 = !DILocation(line: 1729, column: 48, scope: !15450)
!15453 = !DILocation(line: 1729, column: 6, scope: !15439)
!15454 = !DILocation(line: 0, scope: !13737, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 1730, column: 3, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15450, file: !2433, line: 1729, column: 54)
!15457 = !DILocation(line: 0, scope: !13745, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !15455)
!15459 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !15458)
!15460 = !DILocation(line: 1732, column: 3, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15456, file: !2433, line: 1732, column: 3)
!15462 = !{i64 2155445712, i64 2155445728, i64 2155445754, i64 2155445782, i64 2155445802}
!15463 = !DILocation(line: 1733, column: 3, scope: !15456)
!15464 = !DILocation(line: 1736, column: 20, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15439, file: !2433, line: 1736, column: 6)
!15466 = !DILocation(line: 1736, column: 33, scope: !15465)
!15467 = !DILocation(line: 1736, column: 49, scope: !15465)
!15468 = !DILocation(line: 1736, column: 6, scope: !15439)
!15469 = !DILocation(line: 0, scope: !13737, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 1737, column: 3, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !2433, line: 1736, column: 56)
!15472 = !DILocation(line: 0, scope: !13745, inlinedAt: !15473)
!15473 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !15470)
!15474 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !15473)
!15475 = !DILocation(line: 1738, column: 3, scope: !15471)
!15476 = !DILocation(line: 1775, column: 2, scope: !15439)
!15477 = !DILocation(line: 1776, column: 16, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15439, file: !2433, line: 1776, column: 6)
!15479 = !DILocation(line: 1776, column: 13, scope: !15478)
!15480 = !DILocation(line: 1776, column: 25, scope: !15478)
!15481 = !DILocation(line: 1031, column: 3, scope: !14356, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 48, column: 10, scope: !14360, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 1776, column: 29, scope: !15478)
!15484 = !DILocation(line: 0, scope: !14356, inlinedAt: !15482)
!15485 = !DILocation(line: 48, column: 9, scope: !14360, inlinedAt: !15483)
!15486 = !DILocation(line: 1776, column: 6, scope: !15439)
!15487 = !DILocation(line: 0, scope: !14323, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 1777, column: 3, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15478, file: !2433, line: 1776, column: 47)
!15490 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !15488)
!15491 = !DILocation(line: 1779, column: 2, scope: !15489)
!15492 = !DILocation(line: 0, scope: !13737, inlinedAt: !15493)
!15493 = distinct !DILocation(line: 1780, column: 2, scope: !15439)
!15494 = !DILocation(line: 0, scope: !13745, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !15493)
!15496 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !15495)
!15497 = !DILocation(line: 1781, column: 1, scope: !15439)
!15498 = distinct !DISubprogram(name: "end_thread", scope: !2433, file: !2433, line: 1690, type: !13668, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15499)
!15499 = !{!15500}
!15500 = !DILocalVariable(name: "thread", arg: 1, scope: !15498, file: !2433, line: 1690, type: !2334)
!15501 = !DILocation(line: 0, scope: !15498)
!15502 = !DILocation(line: 1695, column: 20, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15498, file: !2433, line: 1695, column: 6)
!15504 = !DILocation(line: 1695, column: 33, scope: !15503)
!15505 = !DILocation(line: 1695, column: 49, scope: !15503)
!15506 = !DILocation(line: 1695, column: 6, scope: !15498)
!15507 = !DILocation(line: 1697, column: 29, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15503, file: !2433, line: 1695, column: 56)
!15509 = !DILocation(line: 1698, column: 7, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15508, file: !2433, line: 1698, column: 7)
!15511 = !DILocation(line: 1698, column: 7, scope: !15508)
!15512 = !DILocation(line: 0, scope: !13881, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 1699, column: 4, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15510, file: !2433, line: 1698, column: 35)
!15515 = !DILocation(line: 266, column: 28, scope: !13881, inlinedAt: !15513)
!15516 = !DILocation(line: 0, scope: !13889, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 268, column: 3, scope: !13893, inlinedAt: !15513)
!15518 = !DILocation(line: 234, column: 2, scope: !13889, inlinedAt: !15517)
!15519 = !DILocation(line: 1700, column: 3, scope: !15514)
!15520 = !DILocation(line: 1701, column: 20, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15508, file: !2433, line: 1701, column: 7)
!15522 = !DILocation(line: 1701, column: 30, scope: !15521)
!15523 = !DILocation(line: 1701, column: 7, scope: !15508)
!15524 = !DILocation(line: 1702, column: 4, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15521, file: !2433, line: 1701, column: 39)
!15526 = !DILocation(line: 1703, column: 3, scope: !15525)
!15527 = !DILocation(line: 1704, column: 9, scope: !15508)
!15528 = !DILocation(line: 1705, column: 23, scope: !15508)
!15529 = !DILocation(line: 1705, column: 3, scope: !15508)
!15530 = !DILocation(line: 1706, column: 3, scope: !15508)
!15531 = !DILocation(line: 1722, column: 2, scope: !15508)
!15532 = !DILocation(line: 1723, column: 1, scope: !15498)
!15533 = distinct !DISubprogram(name: "unpend_all", scope: !2433, file: !2433, line: 1674, type: !15534, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15536)
!15534 = !DISubroutineType(types: !15535)
!15535 = !{null, !2365}
!15536 = !{!15537, !15538}
!15537 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15533, file: !2433, line: 1674, type: !2365)
!15538 = !DILocalVariable(name: "thread", scope: !15533, file: !2433, line: 1676, type: !2334)
!15539 = !DILocation(line: 0, scope: !15533)
!15540 = !DILocation(line: 1678, column: 19, scope: !15533)
!15541 = !DILocation(line: 1678, column: 41, scope: !15533)
!15542 = !DILocation(line: 1678, column: 2, scope: !15533)
!15543 = !DILocation(line: 1679, column: 3, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15533, file: !2433, line: 1678, column: 50)
!15545 = !DILocation(line: 1680, column: 9, scope: !15544)
!15546 = !DILocalVariable(name: "thread", arg: 1, scope: !15547, file: !13024, line: 65, type: !2334)
!15547 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13024, file: !13024, line: 65, type: !15548, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15550)
!15548 = !DISubroutineType(types: !15549)
!15549 = !{null, !2334, !32}
!15550 = !{!15546, !15551}
!15551 = !DILocalVariable(name: "value", arg: 2, scope: !15547, file: !13024, line: 65, type: !32)
!15552 = !DILocation(line: 0, scope: !15547, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 1681, column: 3, scope: !15544)
!15554 = !DILocation(line: 67, column: 15, scope: !15547, inlinedAt: !15553)
!15555 = !DILocation(line: 67, column: 33, scope: !15547, inlinedAt: !15553)
!15556 = !DILocation(line: 1682, column: 3, scope: !15544)
!15557 = distinct !{!15557, !15542, !15558}
!15558 = !DILocation(line: 1683, column: 2, scope: !15533)
!15559 = !DILocation(line: 1684, column: 1, scope: !15533)
!15560 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2433, file: !2433, line: 1794, type: !15561, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15563)
!15561 = !DISubroutineType(types: !15562)
!15562 = !{!125, !2334, !14503}
!15563 = !{!15564, !15565, !15566, !15567}
!15564 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2433, line: 1794, type: !2334)
!15565 = !DILocalVariable(name: "timeout", arg: 2, scope: !15560, file: !2433, line: 1794, type: !14503)
!15566 = !DILocalVariable(name: "key", scope: !15560, file: !2433, line: 1796, type: !13702)
!15567 = !DILocalVariable(name: "ret", scope: !15560, file: !2433, line: 1797, type: !125)
!15568 = !DILocation(line: 0, scope: !15560)
!15569 = !DILocation(line: 0, scope: !13710, inlinedAt: !15570)
!15570 = distinct !DILocation(line: 1796, column: 25, scope: !15560)
!15571 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !15570)
!15573 = !DILocation(line: 0, scope: !13719, inlinedAt: !15572)
!15574 = !DILocation(line: 1801, column: 20, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15560, file: !2433, line: 1801, column: 6)
!15576 = !DILocation(line: 1801, column: 33, scope: !15575)
!15577 = !DILocation(line: 1801, column: 49, scope: !15575)
!15578 = !DILocation(line: 1801, column: 6, scope: !15560)
!15579 = !DILocation(line: 1803, column: 13, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15575, file: !2433, line: 1803, column: 13)
!15581 = !DILocation(line: 1803, column: 13, scope: !15575)
!15582 = !DILocation(line: 1805, column: 24, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15580, file: !2433, line: 1805, column: 13)
!15584 = !DILocation(line: 1805, column: 21, scope: !15583)
!15585 = !DILocation(line: 1805, column: 34, scope: !15583)
!15586 = !DILocation(line: 1806, column: 20, scope: !15583)
!15587 = !DILocation(line: 1806, column: 44, scope: !15583)
!15588 = !DILocation(line: 1806, column: 30, scope: !15583)
!15589 = !DILocation(line: 1805, column: 13, scope: !15580)
!15590 = !DILocation(line: 1810, column: 42, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15583, file: !2433, line: 1808, column: 9)
!15592 = !DILocation(line: 1810, column: 3, scope: !15591)
!15593 = !DILocation(line: 1811, column: 22, scope: !15591)
!15594 = !DILocation(line: 1811, column: 3, scope: !15591)
!15595 = !DILocation(line: 0, scope: !14323, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 1814, column: 9, scope: !15591)
!15597 = !DILocation(line: 196, column: 9, scope: !14323, inlinedAt: !15596)
!15598 = !DILocation(line: 1817, column: 3, scope: !15591)
!15599 = !DILocation(line: 0, scope: !15575)
!15600 = !DILocation(line: 0, scope: !13737, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 1822, column: 2, scope: !15560)
!15602 = !DILocation(line: 0, scope: !13745, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !15601)
!15604 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !15603)
!15605 = !DILocation(line: 1823, column: 2, scope: !15560)
!15606 = !DILocation(line: 1824, column: 1, scope: !15560)
!15607 = distinct !DISubprogram(name: "z_sched_wake", scope: !2433, file: !2433, line: 1882, type: !15608, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15610)
!15608 = !DISubroutineType(types: !15609)
!15609 = !{!153, !2365, !125, !124}
!15610 = !{!15611, !15612, !15613, !15614, !15615, !15616, !15618}
!15611 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15607, file: !2433, line: 1882, type: !2365)
!15612 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15607, file: !2433, line: 1882, type: !125)
!15613 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15607, file: !2433, line: 1882, type: !124)
!15614 = !DILocalVariable(name: "thread", scope: !15607, file: !2433, line: 1884, type: !2334)
!15615 = !DILocalVariable(name: "ret", scope: !15607, file: !2433, line: 1885, type: !153)
!15616 = !DILocalVariable(name: "__i", scope: !15617, file: !2433, line: 1887, type: !13702)
!15617 = distinct !DILexicalBlock(scope: !15607, file: !2433, line: 1887, column: 2)
!15618 = !DILocalVariable(name: "__key", scope: !15617, file: !2433, line: 1887, type: !13702)
!15619 = !DILocation(line: 0, scope: !15607)
!15620 = !DILocation(line: 0, scope: !15617)
!15621 = !DILocation(line: 0, scope: !13710, inlinedAt: !15622)
!15622 = distinct !DILocation(line: 1887, column: 2, scope: !15617)
!15623 = !DILocation(line: 55, column: 2, scope: !13719, inlinedAt: !15624)
!15624 = distinct !DILocation(line: 145, column: 10, scope: !13710, inlinedAt: !15622)
!15625 = !DILocation(line: 0, scope: !13719, inlinedAt: !15624)
!15626 = !DILocation(line: 1888, column: 12, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15628, file: !2433, line: 1887, column: 26)
!15628 = distinct !DILexicalBlock(scope: !15617, file: !2433, line: 1887, column: 2)
!15629 = !DILocation(line: 1890, column: 14, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15627, file: !2433, line: 1890, column: 7)
!15631 = !DILocation(line: 1890, column: 7, scope: !15627)
!15632 = !DILocalVariable(name: "thread", arg: 1, scope: !15633, file: !15634, line: 134, type: !2334)
!15633 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15634, file: !15634, line: 134, type: !15635, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15637)
!15634 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15635 = !DISubroutineType(types: !15636)
!15636 = !{null, !2334, !32, !124}
!15637 = !{!15632, !15638, !15639}
!15638 = !DILocalVariable(name: "value", arg: 2, scope: !15633, file: !15634, line: 135, type: !32)
!15639 = !DILocalVariable(name: "data", arg: 3, scope: !15633, file: !15634, line: 136, type: !124)
!15640 = !DILocation(line: 0, scope: !15633, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 1891, column: 4, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15630, file: !2433, line: 1890, column: 23)
!15643 = !DILocation(line: 0, scope: !15547, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 138, column: 2, scope: !15633, inlinedAt: !15641)
!15645 = !DILocation(line: 67, column: 15, scope: !15547, inlinedAt: !15644)
!15646 = !DILocation(line: 67, column: 33, scope: !15547, inlinedAt: !15644)
!15647 = !DILocation(line: 139, column: 15, scope: !15633, inlinedAt: !15641)
!15648 = !DILocation(line: 139, column: 25, scope: !15633, inlinedAt: !15641)
!15649 = !DILocation(line: 1894, column: 4, scope: !15642)
!15650 = !DILocation(line: 1895, column: 10, scope: !15642)
!15651 = !DILocation(line: 1896, column: 4, scope: !15642)
!15652 = !DILocation(line: 1898, column: 3, scope: !15642)
!15653 = !DILocation(line: 0, scope: !13737, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 1887, column: 2, scope: !15628)
!15655 = !DILocation(line: 0, scope: !13745, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 215, column: 2, scope: !13737, inlinedAt: !15654)
!15657 = !DILocation(line: 95, column: 2, scope: !13745, inlinedAt: !15656)
!15658 = !DILocation(line: 1901, column: 2, scope: !15607)
!15659 = distinct !DISubprogram(name: "z_sched_wait", scope: !2433, file: !2433, line: 1904, type: !15660, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15663)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!125, !13713, !13702, !2365, !14503, !15662}
!15662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!15663 = !{!15664, !15665, !15666, !15667, !15668, !15669}
!15664 = !DILocalVariable(name: "lock", arg: 1, scope: !15659, file: !2433, line: 1904, type: !13713)
!15665 = !DILocalVariable(name: "key", arg: 2, scope: !15659, file: !2433, line: 1904, type: !13702)
!15666 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15659, file: !2433, line: 1905, type: !2365)
!15667 = !DILocalVariable(name: "timeout", arg: 4, scope: !15659, file: !2433, line: 1905, type: !14503)
!15668 = !DILocalVariable(name: "data", arg: 5, scope: !15659, file: !2433, line: 1905, type: !15662)
!15669 = !DILocalVariable(name: "ret", scope: !15659, file: !2433, line: 1907, type: !125)
!15670 = !DILocation(line: 0, scope: !15659)
!15671 = !DILocation(line: 1907, column: 12, scope: !15659)
!15672 = !DILocation(line: 1909, column: 11, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15659, file: !2433, line: 1909, column: 6)
!15674 = !DILocation(line: 1909, column: 6, scope: !15659)
!15675 = !DILocation(line: 1910, column: 11, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15673, file: !2433, line: 1909, column: 20)
!15677 = !DILocation(line: 1910, column: 26, scope: !15676)
!15678 = !DILocation(line: 1910, column: 9, scope: !15676)
!15679 = !DILocation(line: 1911, column: 2, scope: !15676)
!15680 = !DILocation(line: 1912, column: 2, scope: !15659)
!15681 = distinct !DISubprogram(name: "z_data_copy", scope: !15682, file: !15682, line: 22, type: !3135, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !1896)
!15682 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15683 = !DILocation(line: 24, column: 2, scope: !15681)
!15684 = !DILocation(line: 27, column: 2, scope: !15681)
!15685 = !DILocation(line: 71, column: 1, scope: !15681)
!15686 = distinct !DISubprogram(name: "z_add_timeout", scope: !2470, file: !2470, line: 88, type: !15687, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15693)
!15687 = !DISubroutineType(types: !15688)
!15688 = !{null, !2443, !2462, !15689}
!15689 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1789, line: 67, baseType: !15690)
!15690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1789, line: 65, size: 64, elements: !15691)
!15691 = !{!15692}
!15692 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15690, file: !1789, line: 66, baseType: !1788, size: 64)
!15693 = !{!15694, !15695, !15696, !15697, !15703, !15704, !15707, !15710}
!15694 = !DILocalVariable(name: "to", arg: 1, scope: !15686, file: !2470, line: 88, type: !2443)
!15695 = !DILocalVariable(name: "fn", arg: 2, scope: !15686, file: !2470, line: 88, type: !2462)
!15696 = !DILocalVariable(name: "timeout", arg: 3, scope: !15686, file: !2470, line: 89, type: !15689)
!15697 = !DILocalVariable(name: "__i", scope: !15698, file: !2470, line: 102, type: !15699)
!15698 = distinct !DILexicalBlock(scope: !15686, file: !2470, line: 102, column: 2)
!15699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !1895, line: 106, baseType: !15700)
!15700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !1895, line: 32, size: 32, elements: !15701)
!15701 = !{!15702}
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15700, file: !1895, line: 33, baseType: !125, size: 32)
!15703 = !DILocalVariable(name: "__key", scope: !15698, file: !2470, line: 102, type: !15699)
!15704 = !DILocalVariable(name: "t", scope: !15705, file: !2470, line: 103, type: !2443)
!15705 = distinct !DILexicalBlock(scope: !15706, file: !2470, line: 102, column: 24)
!15706 = distinct !DILexicalBlock(scope: !15698, file: !2470, line: 102, column: 2)
!15707 = !DILocalVariable(name: "ticks", scope: !15708, file: !2470, line: 107, type: !1788)
!15708 = distinct !DILexicalBlock(scope: !15709, file: !2470, line: 106, column: 39)
!15709 = distinct !DILexicalBlock(scope: !15705, file: !2470, line: 105, column: 7)
!15710 = !DILocalVariable(name: "next_time", scope: !15711, file: !2470, line: 137, type: !1354)
!15711 = distinct !DILexicalBlock(scope: !15712, file: !2470, line: 127, column: 22)
!15712 = distinct !DILexicalBlock(scope: !15705, file: !2470, line: 127, column: 7)
!15713 = !DILocation(line: 0, scope: !15686)
!15714 = !DILocation(line: 91, column: 6, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15686, file: !2470, line: 91, column: 6)
!15716 = !DILocation(line: 91, column: 6, scope: !15686)
!15717 = !DILocation(line: 100, column: 6, scope: !15686)
!15718 = !DILocation(line: 100, column: 9, scope: !15686)
!15719 = !DILocation(line: 0, scope: !15698)
!15720 = !DILocalVariable(name: "l", arg: 1, scope: !15721, file: !1895, line: 136, type: !15724)
!15721 = distinct !DISubprogram(name: "k_spin_lock", scope: !1895, file: !1895, line: 136, type: !15722, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15725)
!15722 = !DISubroutineType(types: !15723)
!15723 = !{!15699, !15724}
!15724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!15725 = !{!15720, !15726}
!15726 = !DILocalVariable(name: "k", scope: !15721, file: !1895, line: 139, type: !15699)
!15727 = !DILocation(line: 0, scope: !15721, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 102, column: 2, scope: !15698)
!15729 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !15734)
!15730 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8182, file: !8182, line: 42, type: !10288, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15731)
!15731 = !{!15732, !15733}
!15732 = !DILocalVariable(name: "key", scope: !15730, file: !8182, line: 44, type: !32)
!15733 = !DILocalVariable(name: "tmp", scope: !15730, file: !8182, line: 53, type: !32)
!15734 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !15728)
!15735 = !{i64 2848128}
!15736 = !DILocation(line: 0, scope: !15730, inlinedAt: !15734)
!15737 = !DILocation(line: 106, column: 33, scope: !15709)
!15738 = !DILocation(line: 105, column: 7, scope: !15705)
!15739 = !DILocation(line: 107, column: 50, scope: !15708)
!15740 = !DILocation(line: 107, column: 48, scope: !15708)
!15741 = !DILocation(line: 0, scope: !15708)
!15742 = !DILocation(line: 109, column: 17, scope: !15708)
!15743 = !DILocation(line: 110, column: 3, scope: !15708)
!15744 = !DILocation(line: 111, column: 31, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15709, file: !2470, line: 110, column: 10)
!15746 = !DILocation(line: 111, column: 37, scope: !15745)
!15747 = !DILocation(line: 111, column: 35, scope: !15745)
!15748 = !DILocation(line: 0, scope: !15709)
!15749 = !DILocation(line: 109, column: 8, scope: !15708)
!15750 = !DILocation(line: 109, column: 15, scope: !15708)
!15751 = !DILocation(line: 114, column: 12, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15705, file: !2470, line: 114, column: 3)
!15753 = !DILocation(line: 0, scope: !15705)
!15754 = !DILocation(line: 114, column: 3, scope: !15752)
!15755 = !DILocation(line: 115, column: 24, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15757, file: !2470, line: 115, column: 8)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !2470, line: 114, column: 45)
!15758 = distinct !DILexicalBlock(scope: !15752, file: !2470, line: 114, column: 3)
!15759 = !DILocation(line: 115, column: 11, scope: !15756)
!15760 = !DILocation(line: 115, column: 18, scope: !15756)
!15761 = !DILocation(line: 115, column: 8, scope: !15757)
!15762 = !DILocation(line: 116, column: 15, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15756, file: !2470, line: 115, column: 32)
!15764 = !DILocation(line: 117, column: 26, scope: !15763)
!15765 = !DILocation(line: 117, column: 37, scope: !15763)
!15766 = !DILocation(line: 117, column: 5, scope: !15763)
!15767 = !DILocation(line: 123, column: 7, scope: !15705)
!15768 = !DILocation(line: 120, column: 15, scope: !15757)
!15769 = !DILocation(line: 114, column: 36, scope: !15758)
!15770 = distinct !{!15770, !15754, !15771}
!15771 = !DILocation(line: 121, column: 3, scope: !15752)
!15772 = !DILocation(line: 124, column: 41, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15774, file: !2470, line: 123, column: 18)
!15774 = distinct !DILexicalBlock(scope: !15705, file: !2470, line: 123, column: 7)
!15775 = !DILocation(line: 124, column: 4, scope: !15773)
!15776 = !DILocation(line: 125, column: 3, scope: !15773)
!15777 = !DILocation(line: 127, column: 13, scope: !15712)
!15778 = !DILocation(line: 127, column: 10, scope: !15712)
!15779 = !DILocation(line: 127, column: 7, scope: !15705)
!15780 = !DILocation(line: 137, column: 24, scope: !15711)
!15781 = !DILocation(line: 0, scope: !15711)
!15782 = !DILocation(line: 139, column: 18, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15711, file: !2470, line: 139, column: 8)
!15784 = !DILocation(line: 139, column: 23, scope: !15783)
!15785 = !DILocation(line: 141, column: 5, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15783, file: !2470, line: 140, column: 48)
!15787 = !DILocation(line: 142, column: 4, scope: !15786)
!15788 = !DILocalVariable(name: "key", arg: 2, scope: !15789, file: !1895, line: 190, type: !15699)
!15789 = distinct !DISubprogram(name: "k_spin_unlock", scope: !1895, file: !1895, line: 189, type: !15790, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15792)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{null, !15724, !15699}
!15792 = !{!15793, !15788}
!15793 = !DILocalVariable(name: "l", arg: 1, scope: !15789, file: !1895, line: 189, type: !15724)
!15794 = !DILocation(line: 0, scope: !15789, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 102, column: 2, scope: !15706)
!15796 = !DILocalVariable(name: "key", arg: 1, scope: !15797, file: !8182, line: 84, type: !32)
!15797 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8182, file: !8182, line: 84, type: !8018, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15798)
!15798 = !{!15796}
!15799 = !DILocation(line: 0, scope: !15797, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !15795)
!15801 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !15800)
!15802 = !{i64 2848945}
!15803 = !DILocation(line: 148, column: 1, scope: !15686)
!15804 = distinct !DISubprogram(name: "elapsed", scope: !2470, file: !2470, line: 62, type: !15805, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !1896)
!15805 = !DISubroutineType(types: !15806)
!15806 = !{!1354}
!15807 = !DILocation(line: 64, column: 9, scope: !15804)
!15808 = !DILocation(line: 64, column: 28, scope: !15804)
!15809 = !DILocation(line: 64, column: 35, scope: !15804)
!15810 = !DILocation(line: 64, column: 2, scope: !15804)
!15811 = distinct !DISubprogram(name: "first", scope: !2470, file: !2470, line: 39, type: !15812, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15814)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{!2443}
!15814 = !{!15815}
!15815 = !DILocalVariable(name: "t", scope: !15811, file: !2470, line: 41, type: !15816)
!15816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!15817 = !DILocation(line: 41, column: 19, scope: !15811)
!15818 = !DILocation(line: 0, scope: !15811)
!15819 = !DILocation(line: 43, column: 9, scope: !15811)
!15820 = !DILocation(line: 43, column: 2, scope: !15811)
!15821 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !2050, file: !2050, line: 443, type: !15822, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15824)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{null, !15816, !15816}
!15824 = !{!15825, !15826, !15827}
!15825 = !DILocalVariable(name: "successor", arg: 1, scope: !15821, file: !2050, line: 443, type: !15816)
!15826 = !DILocalVariable(name: "node", arg: 2, scope: !15821, file: !2050, line: 443, type: !15816)
!15827 = !DILocalVariable(name: "prev", scope: !15821, file: !2050, line: 445, type: !15828)
!15828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15816)
!15829 = !DILocation(line: 0, scope: !15821)
!15830 = !DILocation(line: 445, column: 39, scope: !15821)
!15831 = !DILocation(line: 447, column: 8, scope: !15821)
!15832 = !DILocation(line: 447, column: 13, scope: !15821)
!15833 = !DILocation(line: 448, column: 8, scope: !15821)
!15834 = !DILocation(line: 448, column: 13, scope: !15821)
!15835 = !DILocation(line: 449, column: 8, scope: !15821)
!15836 = !DILocation(line: 449, column: 13, scope: !15821)
!15837 = !DILocation(line: 450, column: 18, scope: !15821)
!15838 = !DILocation(line: 451, column: 1, scope: !15821)
!15839 = distinct !DISubprogram(name: "next", scope: !2470, file: !2470, line: 46, type: !15840, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15842)
!15840 = !DISubroutineType(types: !15841)
!15841 = !{!2443, !2443}
!15842 = !{!15843, !15844}
!15843 = !DILocalVariable(name: "t", arg: 1, scope: !15839, file: !2470, line: 46, type: !2443)
!15844 = !DILocalVariable(name: "n", scope: !15839, file: !2470, line: 48, type: !15816)
!15845 = !DILocation(line: 0, scope: !15839)
!15846 = !DILocation(line: 48, column: 58, scope: !15839)
!15847 = !DILocation(line: 48, column: 19, scope: !15839)
!15848 = !DILocation(line: 50, column: 9, scope: !15839)
!15849 = !DILocation(line: 50, column: 2, scope: !15839)
!15850 = distinct !DISubprogram(name: "sys_dlist_append", scope: !2050, file: !2050, line: 404, type: !15851, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15854)
!15851 = !DISubroutineType(types: !15852)
!15852 = !{null, !15853, !15816}
!15853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!15854 = !{!15855, !15856, !15857}
!15855 = !DILocalVariable(name: "list", arg: 1, scope: !15850, file: !2050, line: 404, type: !15853)
!15856 = !DILocalVariable(name: "node", arg: 2, scope: !15850, file: !2050, line: 404, type: !15816)
!15857 = !DILocalVariable(name: "tail", scope: !15850, file: !2050, line: 406, type: !15828)
!15858 = !DILocation(line: 0, scope: !15850)
!15859 = !DILocation(line: 406, column: 34, scope: !15850)
!15860 = !DILocation(line: 408, column: 8, scope: !15850)
!15861 = !DILocation(line: 408, column: 13, scope: !15850)
!15862 = !DILocation(line: 409, column: 8, scope: !15850)
!15863 = !DILocation(line: 409, column: 13, scope: !15850)
!15864 = !DILocation(line: 411, column: 8, scope: !15850)
!15865 = !DILocation(line: 411, column: 13, scope: !15850)
!15866 = !DILocation(line: 412, column: 13, scope: !15850)
!15867 = !DILocation(line: 413, column: 1, scope: !15850)
!15868 = distinct !DISubprogram(name: "next_timeout", scope: !2470, file: !2470, line: 67, type: !15805, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15869)
!15869 = !{!15870, !15871, !15872}
!15870 = !DILocalVariable(name: "to", scope: !15868, file: !2470, line: 69, type: !2443)
!15871 = !DILocalVariable(name: "ticks_elapsed", scope: !15868, file: !2470, line: 70, type: !1354)
!15872 = !DILocalVariable(name: "ret", scope: !15868, file: !2470, line: 71, type: !1354)
!15873 = !DILocation(line: 69, column: 24, scope: !15868)
!15874 = !DILocation(line: 0, scope: !15868)
!15875 = !DILocation(line: 70, column: 26, scope: !15868)
!15876 = !DILocation(line: 73, column: 10, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15868, file: !2470, line: 73, column: 6)
!15878 = !DILocation(line: 73, column: 19, scope: !15877)
!15879 = !DILocation(line: 74, column: 21, scope: !15877)
!15880 = !DILocation(line: 74, column: 30, scope: !15877)
!15881 = !DILocation(line: 74, column: 28, scope: !15877)
!15882 = !DILocation(line: 74, column: 45, scope: !15877)
!15883 = !DILocation(line: 73, column: 6, scope: !15868)
!15884 = !DILocation(line: 77, column: 9, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15877, file: !2470, line: 76, column: 9)
!15886 = !DILocation(line: 0, scope: !15877)
!15887 = !DILocation(line: 81, column: 20, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15868, file: !2470, line: 81, column: 6)
!15889 = !DILocation(line: 81, column: 6, scope: !15888)
!15890 = !DILocation(line: 81, column: 32, scope: !15888)
!15891 = !DILocation(line: 85, column: 2, scope: !15868)
!15892 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !2050, file: !2050, line: 341, type: !15893, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15895)
!15893 = !DISubroutineType(types: !15894)
!15894 = !{!15816, !15853, !15816}
!15895 = !{!15896, !15897}
!15896 = !DILocalVariable(name: "list", arg: 1, scope: !15892, file: !2050, line: 341, type: !15853)
!15897 = !DILocalVariable(name: "node", arg: 2, scope: !15892, file: !2050, line: 342, type: !15816)
!15898 = !DILocation(line: 0, scope: !15892)
!15899 = !DILocation(line: 344, column: 15, scope: !15892)
!15900 = !DILocation(line: 344, column: 9, scope: !15892)
!15901 = !DILocation(line: 344, column: 26, scope: !15892)
!15902 = !DILocation(line: 344, column: 2, scope: !15892)
!15903 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !2050, file: !2050, line: 325, type: !15893, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15904)
!15904 = !{!15905, !15906}
!15905 = !DILocalVariable(name: "list", arg: 1, scope: !15903, file: !2050, line: 325, type: !15853)
!15906 = !DILocalVariable(name: "node", arg: 2, scope: !15903, file: !2050, line: 326, type: !15816)
!15907 = !DILocation(line: 0, scope: !15903)
!15908 = !DILocation(line: 328, column: 24, scope: !15903)
!15909 = !DILocation(line: 328, column: 15, scope: !15903)
!15910 = !DILocation(line: 328, column: 9, scope: !15903)
!15911 = !DILocation(line: 328, column: 45, scope: !15903)
!15912 = !DILocation(line: 328, column: 2, scope: !15903)
!15913 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !2050, file: !2050, line: 294, type: !15914, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15916)
!15914 = !DISubroutineType(types: !15915)
!15915 = !{!15816, !15853}
!15916 = !{!15917}
!15917 = !DILocalVariable(name: "list", arg: 1, scope: !15913, file: !2050, line: 294, type: !15853)
!15918 = !DILocation(line: 0, scope: !15913)
!15919 = !DILocation(line: 296, column: 9, scope: !15913)
!15920 = !DILocation(line: 296, column: 2, scope: !15913)
!15921 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !2050, file: !2050, line: 266, type: !15922, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15924)
!15922 = !DISubroutineType(types: !15923)
!15923 = !{!153, !15853}
!15924 = !{!15925}
!15925 = !DILocalVariable(name: "list", arg: 1, scope: !15921, file: !2050, line: 266, type: !15853)
!15926 = !DILocation(line: 0, scope: !15921)
!15927 = !DILocation(line: 268, column: 15, scope: !15921)
!15928 = !DILocation(line: 268, column: 20, scope: !15921)
!15929 = !DILocation(line: 268, column: 2, scope: !15921)
!15930 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2470, file: !2470, line: 150, type: !15931, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15933)
!15931 = !DISubroutineType(types: !15932)
!15932 = !{!125, !2443}
!15933 = !{!15934, !15935, !15936, !15938}
!15934 = !DILocalVariable(name: "to", arg: 1, scope: !15930, file: !2470, line: 150, type: !2443)
!15935 = !DILocalVariable(name: "ret", scope: !15930, file: !2470, line: 152, type: !125)
!15936 = !DILocalVariable(name: "__i", scope: !15937, file: !2470, line: 154, type: !15699)
!15937 = distinct !DILexicalBlock(scope: !15930, file: !2470, line: 154, column: 2)
!15938 = !DILocalVariable(name: "__key", scope: !15937, file: !2470, line: 154, type: !15699)
!15939 = !DILocation(line: 0, scope: !15930)
!15940 = !DILocation(line: 0, scope: !15937)
!15941 = !DILocation(line: 0, scope: !15721, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 154, column: 2, scope: !15937)
!15943 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !15942)
!15945 = !DILocation(line: 0, scope: !15730, inlinedAt: !15944)
!15946 = !DILocation(line: 155, column: 7, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15948, file: !2470, line: 155, column: 7)
!15948 = distinct !DILexicalBlock(scope: !15949, file: !2470, line: 154, column: 24)
!15949 = distinct !DILexicalBlock(scope: !15937, file: !2470, line: 154, column: 2)
!15950 = !DILocation(line: 155, column: 7, scope: !15948)
!15951 = !DILocation(line: 156, column: 4, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15947, file: !2470, line: 155, column: 39)
!15953 = !DILocation(line: 158, column: 3, scope: !15952)
!15954 = !DILocation(line: 0, scope: !15789, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 154, column: 2, scope: !15949)
!15956 = !DILocation(line: 0, scope: !15797, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !15955)
!15958 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !15957)
!15959 = !DILocation(line: 161, column: 2, scope: !15930)
!15960 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !2050, file: !2050, line: 225, type: !15961, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15965)
!15961 = !DISubroutineType(types: !15962)
!15962 = !{!153, !15963}
!15963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15964, size: 32)
!15964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2447)
!15965 = !{!15966}
!15966 = !DILocalVariable(name: "node", arg: 1, scope: !15960, file: !2050, line: 225, type: !15963)
!15967 = !DILocation(line: 0, scope: !15960)
!15968 = !DILocation(line: 227, column: 15, scope: !15960)
!15969 = !DILocation(line: 227, column: 20, scope: !15960)
!15970 = !DILocation(line: 227, column: 2, scope: !15960)
!15971 = distinct !DISubprogram(name: "remove_timeout", scope: !2470, file: !2470, line: 53, type: !2464, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15972)
!15972 = !{!15973}
!15973 = !DILocalVariable(name: "t", arg: 1, scope: !15971, file: !2470, line: 53, type: !2443)
!15974 = !DILocation(line: 0, scope: !15971)
!15975 = !DILocation(line: 55, column: 6, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !2470, line: 55, column: 6)
!15977 = !DILocation(line: 55, column: 14, scope: !15976)
!15978 = !DILocation(line: 55, column: 6, scope: !15971)
!15979 = !DILocation(line: 56, column: 25, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15976, file: !2470, line: 55, column: 23)
!15981 = !DILocation(line: 56, column: 12, scope: !15980)
!15982 = !DILocation(line: 56, column: 19, scope: !15980)
!15983 = !DILocation(line: 57, column: 2, scope: !15980)
!15984 = !DILocation(line: 59, column: 23, scope: !15971)
!15985 = !DILocation(line: 59, column: 2, scope: !15971)
!15986 = !DILocation(line: 60, column: 1, scope: !15971)
!15987 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !2050, file: !2050, line: 496, type: !15988, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !15990)
!15988 = !DISubroutineType(types: !15989)
!15989 = !{null, !15816}
!15990 = !{!15991, !15992, !15993}
!15991 = !DILocalVariable(name: "node", arg: 1, scope: !15987, file: !2050, line: 496, type: !15816)
!15992 = !DILocalVariable(name: "prev", scope: !15987, file: !2050, line: 498, type: !15828)
!15993 = !DILocalVariable(name: "next", scope: !15987, file: !2050, line: 499, type: !15828)
!15994 = !DILocation(line: 0, scope: !15987)
!15995 = !DILocation(line: 498, column: 34, scope: !15987)
!15996 = !DILocation(line: 499, column: 34, scope: !15987)
!15997 = !DILocation(line: 501, column: 8, scope: !15987)
!15998 = !DILocation(line: 501, column: 13, scope: !15987)
!15999 = !DILocation(line: 502, column: 8, scope: !15987)
!16000 = !DILocation(line: 502, column: 13, scope: !15987)
!16001 = !DILocation(line: 503, column: 2, scope: !15987)
!16002 = !DILocation(line: 504, column: 1, scope: !15987)
!16003 = distinct !DISubprogram(name: "sys_dnode_init", scope: !2050, file: !2050, line: 211, type: !15988, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16004)
!16004 = !{!16005}
!16005 = !DILocalVariable(name: "node", arg: 1, scope: !16003, file: !2050, line: 211, type: !15816)
!16006 = !DILocation(line: 0, scope: !16003)
!16007 = !DILocation(line: 213, column: 8, scope: !16003)
!16008 = !DILocation(line: 213, column: 13, scope: !16003)
!16009 = !DILocation(line: 214, column: 8, scope: !16003)
!16010 = !DILocation(line: 214, column: 13, scope: !16003)
!16011 = !DILocation(line: 215, column: 1, scope: !16003)
!16012 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2470, file: !2470, line: 183, type: !16013, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16017)
!16013 = !DISubroutineType(types: !16014)
!16014 = !{!1788, !16015}
!16015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16016, size: 32)
!16016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!16017 = !{!16018, !16019, !16020, !16022}
!16018 = !DILocalVariable(name: "timeout", arg: 1, scope: !16012, file: !2470, line: 183, type: !16015)
!16019 = !DILocalVariable(name: "ticks", scope: !16012, file: !2470, line: 185, type: !1788)
!16020 = !DILocalVariable(name: "__i", scope: !16021, file: !2470, line: 187, type: !15699)
!16021 = distinct !DILexicalBlock(scope: !16012, file: !2470, line: 187, column: 2)
!16022 = !DILocalVariable(name: "__key", scope: !16021, file: !2470, line: 187, type: !15699)
!16023 = !DILocation(line: 0, scope: !16012)
!16024 = !DILocation(line: 0, scope: !16021)
!16025 = !DILocation(line: 0, scope: !15721, inlinedAt: !16026)
!16026 = distinct !DILocation(line: 187, column: 2, scope: !16021)
!16027 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16026)
!16029 = !DILocation(line: 0, scope: !15730, inlinedAt: !16028)
!16030 = !DILocation(line: 188, column: 11, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !2470, line: 187, column: 24)
!16032 = distinct !DILexicalBlock(scope: !16021, file: !2470, line: 187, column: 2)
!16033 = !DILocation(line: 0, scope: !15789, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 187, column: 2, scope: !16032)
!16035 = !DILocation(line: 0, scope: !15797, inlinedAt: !16036)
!16036 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16034)
!16037 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16036)
!16038 = !DILocation(line: 191, column: 2, scope: !16012)
!16039 = distinct !DISubprogram(name: "timeout_rem", scope: !2470, file: !2470, line: 165, type: !16013, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16040)
!16040 = !{!16041, !16042, !16043}
!16041 = !DILocalVariable(name: "timeout", arg: 1, scope: !16039, file: !2470, line: 165, type: !16015)
!16042 = !DILocalVariable(name: "ticks", scope: !16039, file: !2470, line: 167, type: !1788)
!16043 = !DILocalVariable(name: "t", scope: !16044, file: !2470, line: 173, type: !2443)
!16044 = distinct !DILexicalBlock(scope: !16039, file: !2470, line: 173, column: 2)
!16045 = !DILocation(line: 0, scope: !16039)
!16046 = !DILocation(line: 169, column: 6, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16039, file: !2470, line: 169, column: 6)
!16048 = !DILocation(line: 169, column: 6, scope: !16039)
!16049 = !DILocation(line: 173, column: 28, scope: !16044)
!16050 = !DILocation(line: 0, scope: !16044)
!16051 = !DILocation(line: 173, column: 39, scope: !16052)
!16052 = distinct !DILexicalBlock(scope: !16044, file: !2470, line: 173, column: 2)
!16053 = !DILocation(line: 173, column: 2, scope: !16044)
!16054 = !DILocation(line: 174, column: 15, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16052, file: !2470, line: 173, column: 61)
!16056 = !DILocation(line: 174, column: 9, scope: !16055)
!16057 = !DILocation(line: 175, column: 15, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16055, file: !2470, line: 175, column: 7)
!16059 = !DILocation(line: 175, column: 7, scope: !16055)
!16060 = !DILocation(line: 173, column: 52, scope: !16052)
!16061 = distinct !{!16061, !16053, !16062}
!16062 = !DILocation(line: 178, column: 2, scope: !16044)
!16063 = !DILocation(line: 180, column: 17, scope: !16039)
!16064 = !DILocation(line: 180, column: 15, scope: !16039)
!16065 = !DILocation(line: 180, column: 2, scope: !16039)
!16066 = !DILocation(line: 181, column: 1, scope: !16039)
!16067 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13376, file: !13376, line: 35, type: !16068, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16070)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!153, !16015}
!16070 = !{!16071}
!16071 = !DILocalVariable(name: "to", arg: 1, scope: !16067, file: !13376, line: 35, type: !16015)
!16072 = !DILocation(line: 0, scope: !16067)
!16073 = !DILocation(line: 37, column: 35, scope: !16067)
!16074 = !DILocation(line: 37, column: 10, scope: !16067)
!16075 = !DILocation(line: 37, column: 9, scope: !16067)
!16076 = !DILocation(line: 37, column: 2, scope: !16067)
!16077 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2470, file: !2470, line: 194, type: !16013, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16078)
!16078 = !{!16079, !16080, !16081, !16083}
!16079 = !DILocalVariable(name: "timeout", arg: 1, scope: !16077, file: !2470, line: 194, type: !16015)
!16080 = !DILocalVariable(name: "ticks", scope: !16077, file: !2470, line: 196, type: !1788)
!16081 = !DILocalVariable(name: "__i", scope: !16082, file: !2470, line: 198, type: !15699)
!16082 = distinct !DILexicalBlock(scope: !16077, file: !2470, line: 198, column: 2)
!16083 = !DILocalVariable(name: "__key", scope: !16082, file: !2470, line: 198, type: !15699)
!16084 = !DILocation(line: 0, scope: !16077)
!16085 = !DILocation(line: 0, scope: !16082)
!16086 = !DILocation(line: 0, scope: !15721, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 198, column: 2, scope: !16082)
!16088 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16087)
!16090 = !DILocation(line: 0, scope: !15730, inlinedAt: !16089)
!16091 = !DILocation(line: 199, column: 11, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2470, line: 198, column: 24)
!16093 = distinct !DILexicalBlock(scope: !16082, file: !2470, line: 198, column: 2)
!16094 = !DILocation(line: 199, column: 23, scope: !16092)
!16095 = !DILocation(line: 0, scope: !15789, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 198, column: 2, scope: !16093)
!16097 = !DILocation(line: 0, scope: !15797, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16096)
!16099 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16098)
!16100 = !DILocation(line: 199, column: 21, scope: !16092)
!16101 = !DILocation(line: 202, column: 2, scope: !16077)
!16102 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2470, file: !2470, line: 205, type: !15805, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16103)
!16103 = !{!16104, !16105, !16107}
!16104 = !DILocalVariable(name: "ret", scope: !16102, file: !2470, line: 207, type: !1354)
!16105 = !DILocalVariable(name: "__i", scope: !16106, file: !2470, line: 209, type: !15699)
!16106 = distinct !DILexicalBlock(scope: !16102, file: !2470, line: 209, column: 2)
!16107 = !DILocalVariable(name: "__key", scope: !16106, file: !2470, line: 209, type: !15699)
!16108 = !DILocation(line: 0, scope: !16102)
!16109 = !DILocation(line: 0, scope: !16106)
!16110 = !DILocation(line: 0, scope: !15721, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 209, column: 2, scope: !16106)
!16112 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16111)
!16114 = !DILocation(line: 0, scope: !15730, inlinedAt: !16113)
!16115 = !DILocation(line: 210, column: 9, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !2470, line: 209, column: 24)
!16117 = distinct !DILexicalBlock(scope: !16106, file: !2470, line: 209, column: 2)
!16118 = !DILocation(line: 0, scope: !15789, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 209, column: 2, scope: !16117)
!16120 = !DILocation(line: 0, scope: !15797, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16119)
!16122 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16121)
!16123 = !DILocation(line: 212, column: 2, scope: !16102)
!16124 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2470, file: !2470, line: 215, type: !10947, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16125)
!16125 = !{!16126, !16127, !16128, !16130, !16131, !16134, !16135}
!16126 = !DILocalVariable(name: "ticks", arg: 1, scope: !16124, file: !2470, line: 215, type: !1354)
!16127 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16124, file: !2470, line: 215, type: !153)
!16128 = !DILocalVariable(name: "__i", scope: !16129, file: !2470, line: 217, type: !15699)
!16129 = distinct !DILexicalBlock(scope: !16124, file: !2470, line: 217, column: 2)
!16130 = !DILocalVariable(name: "__key", scope: !16129, file: !2470, line: 217, type: !15699)
!16131 = !DILocalVariable(name: "next_to", scope: !16132, file: !2470, line: 218, type: !125)
!16132 = distinct !DILexicalBlock(scope: !16133, file: !2470, line: 217, column: 24)
!16133 = distinct !DILexicalBlock(scope: !16129, file: !2470, line: 217, column: 2)
!16134 = !DILocalVariable(name: "sooner", scope: !16132, file: !2470, line: 219, type: !153)
!16135 = !DILocalVariable(name: "imminent", scope: !16132, file: !2470, line: 221, type: !153)
!16136 = !DILocation(line: 0, scope: !16124)
!16137 = !DILocation(line: 0, scope: !16129)
!16138 = !DILocation(line: 0, scope: !15721, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 217, column: 2, scope: !16129)
!16140 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16139)
!16142 = !DILocation(line: 0, scope: !15730, inlinedAt: !16141)
!16143 = !DILocation(line: 218, column: 17, scope: !16132)
!16144 = !DILocation(line: 0, scope: !16132)
!16145 = !DILocation(line: 221, column: 27, scope: !16132)
!16146 = !DILocation(line: 233, column: 17, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16132, file: !2470, line: 233, column: 7)
!16148 = !DILocation(line: 234, column: 26, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16147, file: !2470, line: 233, column: 56)
!16150 = !DILocation(line: 234, column: 4, scope: !16149)
!16151 = !DILocation(line: 235, column: 3, scope: !16149)
!16152 = !DILocation(line: 0, scope: !15789, inlinedAt: !16153)
!16153 = distinct !DILocation(line: 217, column: 2, scope: !16133)
!16154 = !DILocation(line: 0, scope: !15797, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16153)
!16156 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16155)
!16157 = !DILocation(line: 237, column: 1, scope: !16124)
!16158 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2470, file: !2470, line: 239, type: !16159, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16161)
!16159 = !DISubroutineType(types: !16160)
!16160 = !{null, !1354}
!16161 = !{!16162, !16163, !16164, !16166}
!16162 = !DILocalVariable(name: "ticks", arg: 1, scope: !16158, file: !2470, line: 239, type: !1354)
!16163 = !DILocalVariable(name: "key", scope: !16158, file: !2470, line: 245, type: !15699)
!16164 = !DILocalVariable(name: "t", scope: !16165, file: !2470, line: 262, type: !2443)
!16165 = distinct !DILexicalBlock(scope: !16158, file: !2470, line: 261, column: 67)
!16166 = !DILocalVariable(name: "dt", scope: !16165, file: !2470, line: 263, type: !125)
!16167 = !DILocation(line: 0, scope: !16158)
!16168 = !DILocation(line: 242, column: 2, scope: !16158)
!16169 = !DILocation(line: 0, scope: !15721, inlinedAt: !16170)
!16170 = distinct !DILocation(line: 245, column: 25, scope: !16158)
!16171 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16172)
!16172 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16170)
!16173 = !DILocation(line: 0, scope: !15730, inlinedAt: !16172)
!16174 = !DILocation(line: 261, column: 9, scope: !16158)
!16175 = !DILocation(line: 261, column: 17, scope: !16158)
!16176 = !DILocation(line: 261, column: 25, scope: !16158)
!16177 = !DILocation(line: 261, column: 37, scope: !16158)
!16178 = !DILocation(line: 261, column: 47, scope: !16158)
!16179 = !DILocation(line: 261, column: 44, scope: !16158)
!16180 = !DILocation(line: 261, column: 2, scope: !16158)
!16181 = !DILocation(line: 0, scope: !16165)
!16182 = !DILocation(line: 263, column: 12, scope: !16165)
!16183 = !DILocation(line: 265, column: 16, scope: !16165)
!16184 = !DILocation(line: 265, column: 13, scope: !16165)
!16185 = !DILocation(line: 266, column: 13, scope: !16165)
!16186 = !DILocation(line: 267, column: 3, scope: !16165)
!16187 = !DILocation(line: 0, scope: !15789, inlinedAt: !16188)
!16188 = distinct !DILocation(line: 269, column: 3, scope: !16165)
!16189 = !DILocation(line: 0, scope: !15797, inlinedAt: !16190)
!16190 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16188)
!16191 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16190)
!16192 = !DILocation(line: 270, column: 6, scope: !16165)
!16193 = !DILocation(line: 270, column: 3, scope: !16165)
!16194 = !DILocation(line: 0, scope: !15721, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 271, column: 9, scope: !16165)
!16196 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16197)
!16197 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16195)
!16198 = !DILocation(line: 0, scope: !15730, inlinedAt: !16197)
!16199 = !DILocation(line: 272, column: 22, scope: !16165)
!16200 = distinct !{!16200, !16180, !16201}
!16201 = !DILocation(line: 273, column: 2, scope: !16158)
!16202 = !DILocation(line: 276, column: 19, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16204, file: !2470, line: 275, column: 23)
!16204 = distinct !DILexicalBlock(scope: !16158, file: !2470, line: 275, column: 6)
!16205 = !DILocation(line: 277, column: 2, scope: !16203)
!16206 = !DILocation(line: 279, column: 15, scope: !16158)
!16207 = !DILocation(line: 279, column: 12, scope: !16158)
!16208 = !DILocation(line: 280, column: 21, scope: !16158)
!16209 = !DILocation(line: 282, column: 24, scope: !16158)
!16210 = !DILocation(line: 282, column: 2, scope: !16158)
!16211 = !DILocation(line: 0, scope: !15789, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 284, column: 2, scope: !16158)
!16213 = !DILocation(line: 0, scope: !15797, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16212)
!16215 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16214)
!16216 = !DILocation(line: 285, column: 1, scope: !16158)
!16217 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2470, file: !2470, line: 287, type: !16218, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!1790}
!16220 = !{!16221, !16222, !16224}
!16221 = !DILocalVariable(name: "t", scope: !16217, file: !2470, line: 289, type: !2312)
!16222 = !DILocalVariable(name: "__i", scope: !16223, file: !2470, line: 291, type: !15699)
!16223 = distinct !DILexicalBlock(scope: !16217, file: !2470, line: 291, column: 2)
!16224 = !DILocalVariable(name: "__key", scope: !16223, file: !2470, line: 291, type: !15699)
!16225 = !DILocation(line: 0, scope: !16217)
!16226 = !DILocation(line: 0, scope: !16223)
!16227 = !DILocation(line: 0, scope: !15721, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 291, column: 2, scope: !16223)
!16229 = !DILocation(line: 55, column: 2, scope: !15730, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 145, column: 10, scope: !15721, inlinedAt: !16228)
!16231 = !DILocation(line: 0, scope: !15730, inlinedAt: !16230)
!16232 = !DILocation(line: 292, column: 7, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2470, line: 291, column: 24)
!16234 = distinct !DILexicalBlock(scope: !16223, file: !2470, line: 291, column: 2)
!16235 = !DILocation(line: 292, column: 19, scope: !16233)
!16236 = !DILocation(line: 0, scope: !15789, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 291, column: 2, scope: !16234)
!16238 = !DILocation(line: 0, scope: !15797, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 215, column: 2, scope: !15789, inlinedAt: !16237)
!16240 = !DILocation(line: 95, column: 2, scope: !15797, inlinedAt: !16239)
!16241 = !DILocation(line: 292, column: 17, scope: !16233)
!16242 = !DILocation(line: 294, column: 2, scope: !16217)
!16243 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2470, file: !2470, line: 297, type: !8148, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !1896)
!16244 = !DILocation(line: 300, column: 19, scope: !16243)
!16245 = !DILocation(line: 300, column: 9, scope: !16243)
!16246 = !DILocation(line: 300, column: 2, scope: !16243)
!16247 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2470, file: !2470, line: 306, type: !16218, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !1896)
!16248 = !DILocation(line: 308, column: 9, scope: !16247)
!16249 = !DILocation(line: 308, column: 2, scope: !16247)
!16250 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2470, file: !2470, line: 319, type: !8158, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16251)
!16251 = !{!16252, !16253, !16254, !16255}
!16252 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16250, file: !2470, line: 319, type: !208)
!16253 = !DILocalVariable(name: "start_cycles", scope: !16250, file: !2470, line: 328, type: !208)
!16254 = !DILocalVariable(name: "cycles_to_wait", scope: !16250, file: !2470, line: 331, type: !208)
!16255 = !DILocalVariable(name: "current_cycles", scope: !16256, file: !2470, line: 338, type: !208)
!16256 = distinct !DILexicalBlock(scope: !16257, file: !2470, line: 337, column: 11)
!16257 = distinct !DILexicalBlock(scope: !16258, file: !2470, line: 337, column: 2)
!16258 = distinct !DILexicalBlock(scope: !16250, file: !2470, line: 337, column: 2)
!16259 = !DILocation(line: 0, scope: !16250)
!16260 = !DILocation(line: 322, column: 19, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16250, file: !2470, line: 322, column: 6)
!16262 = !DILocation(line: 322, column: 6, scope: !16250)
!16263 = !DILocation(line: 328, column: 26, scope: !16250)
!16264 = !DILocation(line: 333, column: 43, scope: !16250)
!16265 = !DILocation(line: 337, column: 2, scope: !16250)
!16266 = !DILocation(line: 338, column: 29, scope: !16256)
!16267 = !DILocation(line: 0, scope: !16256)
!16268 = !DILocation(line: 341, column: 23, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16256, file: !2470, line: 341, column: 7)
!16270 = !DILocation(line: 341, column: 39, scope: !16269)
!16271 = !DILocation(line: 349, column: 1, scope: !16250)
!16272 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !2123, file: !2123, line: 1675, type: !8148, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !1896)
!16273 = !DILocation(line: 1677, column: 9, scope: !16272)
!16274 = !DILocation(line: 1677, column: 2, scope: !16272)
!16275 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16276, file: !16276, line: 24, type: !8148, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !1896)
!16276 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16277 = !DILocation(line: 26, column: 9, scope: !16275)
!16278 = !DILocation(line: 26, column: 2, scope: !16275)
!16279 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2470, file: !2470, line: 364, type: !16280, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16282)
!16280 = !DISubroutineType(types: !16281)
!16281 = !{!2312, !15689}
!16282 = !{!16283, !16284}
!16283 = !DILocalVariable(name: "timeout", arg: 1, scope: !16279, file: !2470, line: 364, type: !15689)
!16284 = !DILocalVariable(name: "dt", scope: !16279, file: !2470, line: 366, type: !1788)
!16285 = !DILocation(line: 0, scope: !16279)
!16286 = !DILocation(line: 368, column: 6, scope: !16279)
!16287 = !DILocation(line: 371, column: 10, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16289, file: !2470, line: 370, column: 47)
!16289 = distinct !DILexicalBlock(scope: !16290, file: !2470, line: 370, column: 13)
!16290 = distinct !DILexicalBlock(scope: !16279, file: !2470, line: 368, column: 6)
!16291 = !DILocation(line: 371, column: 3, scope: !16288)
!16292 = !DILocation(line: 376, column: 58, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16294, file: !2470, line: 376, column: 7)
!16294 = distinct !DILexicalBlock(scope: !16289, file: !2470, line: 372, column: 9)
!16295 = !DILocation(line: 376, column: 7, scope: !16294)
!16296 = !DILocation(line: 376, column: 43, scope: !16293)
!16297 = !DILocation(line: 377, column: 4, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16293, file: !2470, line: 376, column: 64)
!16299 = !DILocation(line: 379, column: 10, scope: !16294)
!16300 = !DILocation(line: 379, column: 33, scope: !16294)
!16301 = !DILocation(line: 379, column: 31, scope: !16294)
!16302 = !DILocation(line: 379, column: 3, scope: !16294)
!16303 = !DILocation(line: 0, scope: !16290)
!16304 = !DILocation(line: 381, column: 1, scope: !16279)
!16305 = distinct !DISubprogram(name: "boot_banner", scope: !16306, file: !16306, line: 26, type: !3135, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3121, retainedNodes: !1896)
!16306 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16307 = !DILocation(line: 34, column: 2, scope: !16305)
!16308 = !DILocation(line: 36, column: 1, scope: !16305)
