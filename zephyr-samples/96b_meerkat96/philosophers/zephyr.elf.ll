; ModuleID = 'build/96b_meerkat96/philosophers/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, %struct.__thread_entry, %struct.k_thread*, [32 x i8], i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__thread_entry = type { void (i8*, i8*, i8*)*, i8*, i8*, i8* }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q, %struct.k_thread* }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._priq_rb }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.16], [13808 x i8], [191 x %struct.anon.16], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.16 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.16] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.16], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536857204 to i8*), void (i8*)* inttoptr (i32 536856489 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536857180 to i8*), void (i8*)* inttoptr (i32 536844801 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536857180 to i8*), void (i8*)* inttoptr (i32 536844801 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@forks = internal unnamed_addr constant [6 x %struct.k_mutex*] [%struct.k_mutex* getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 20) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 40) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 60) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 80) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 100) to %struct.k_mutex*)], align 4, !dbg !25
@.str = private unnamed_addr constant [23 x i8] c"       STARVING       \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"   HOLDING ONE FORK   \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"  EATING  [ %s%d ms ] \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"   DROPPED ONE FORK   \00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c" THINKING [ %s%d ms ] \00", align 1
@fork_objs = dso_local global [6 x %struct.k_mutex] zeroinitializer, align 4, !dbg !114
@.str.5 = private unnamed_addr constant [26 x i8] c"Philosopher %d [%s:%s%d] \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dH\00", align 1
@.str.12 = private unnamed_addr constant [328 x i8] c"\1B[2J\1B[15;1HDemo Description\0A----------------\0AAn implementation of a solution to the Dining Philosophers\0Aproblem (a classic multi-thread synchronization problem).\0AThis particular implementation demonstrates the usage of multiple\0Apreemptible and cooperative threads of differing priorities, as\0Awell as %s %s and thread sleeping.\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"mutexes\00", align 1
@threads = internal global [6 x %struct.k_thread] zeroinitializer, align 8, !dbg !260
@stacks = internal global [6 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/phil_obj_abstract.h\22.0", align 8, !dbg !263
@.str.15 = private unnamed_addr constant [15 x i8] c"Philosopher %d\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !274
@.str.16 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.17 = private unnamed_addr constant [34 x i8] c"is_black(node) || is_black(child)\00", align 1
@.str.2.18 = private unnamed_addr constant [24 x i8] c"ZEPHYR_BASE/lib/os/rb.c\00", align 1
@.str.3.19 = private unnamed_addr constant [19 x i8] c"\09both nodes red?!\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [14 x i8*] [i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (i32* @_kernel_thread_info_num_offsets to i8*), i8* bitcast ([14 x i32]* @_kernel_thread_info_offsets to i8*), i8* @_kernel_thread_info_size_t_size, i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*)], section "llvm.metadata"
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !284
@_kernel_thread_info_offsets = dso_local global [14 x i32] [i32 1, i32 8, i32 44, i32 96, i32 112, i32 13, i32 12, i32 14, i32 80, i32 116, i32 156, i32 -1, i32 -1, i32 -1], section ".dbg_thread_info", align 4, !dbg !711
@_kernel_thread_info_num_offsets = dso_local global i32 14, section ".dbg_thread_info", align 4, !dbg !716
@_kernel_thread_info_size_t_size = dso_local global i8 4, section ".dbg_thread_info", align 1, !dbg !719
@.str.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.31 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.32 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.33 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.38 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.39 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.42 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.43 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.44 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.40 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.41 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !724
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !833
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1020
@.str.57 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !970
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1001
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !968
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !956
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !944
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !946
@.str.1.58 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.60 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.59 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1003
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1015
@.str.31 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1025
@.str.64 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1031
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1287
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1285
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1279
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1270
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1272
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1289
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1291
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1296
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1299
@overflow_cyc = internal global i32 0, align 4, !dbg !1310
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1568
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1570
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1566
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1561
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1535
@.str.68 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.69 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.70 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.71 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.72 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.73 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1572
@.str.79 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.80 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.81 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.82 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.83 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.88 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.91 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.100 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.101 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.102 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.103 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.110 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.111 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.112 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1602
@.str.121 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.123 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.124 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1608
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1838
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1846
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1853
@.str.4.132 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1858
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.136 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [23 x i8] c"user_cb != ((void *)0)\00", align 1
@.str.2.139 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.3.140 = private unnamed_addr constant [26 x i8] c"\09user_cb can not be NULL\0A\00", align 1
@z_thread_monitor_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1883
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.151, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.152, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.153, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.154, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.155, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.156, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.150, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.157, i32 0, i32 0)], align 4, !dbg !1904
@.str.4.151 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.5.152 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.6.153 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.7.154 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.8.155 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.9.156 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.10.150 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11.157 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2012
@.str.12.149 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.13.162 = private unnamed_addr constant [128 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((entry))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.14.163 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.15.166 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.16.167 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.17 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.174 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.175 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.176 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.183 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.184 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.185 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.186 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.187 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2016
@.str.4.195 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.188 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.189 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.190 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.191 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.192 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2129
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2241
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2244
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2246
@.str.198 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.217 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.205 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.227 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.239 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.206 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.234 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.207 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.245 = private unnamed_addr constant [134 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((((void *)0)))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.9.246 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.255 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.256 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.257 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.258 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.199 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.200 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.201 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.202 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.203 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.204 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.222 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.235 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.236 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1848
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1851
@.str.23.250 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.264 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.265 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.266 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.267 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2248
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2278
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2283
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1695
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2281
@.str.4.268 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.269 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.270 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.274 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.275 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.295 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_kernel_openocd_offsets = dso_local alias i32, getelementptr inbounds ([14 x i32], [14 x i32]* @_kernel_thread_info_offsets, i32 0, i32 0)
@_kernel_openocd_num_offsets = dso_local alias i32, i32* @_kernel_thread_info_num_offsets
@_kernel_openocd_size_t_size = dso_local alias i8, i8* @_kernel_thread_info_size_t_size

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2928 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #20, !dbg !2932, !srcloc !2933
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #20, !dbg !2934, !srcloc !2935
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #20, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #20, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #20, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___kernel_t_threads_OFFSET\0A\09.equ\09___kernel_t_threads_OFFSET,${0:B}\0A\09.type\09___kernel_t_threads_OFFSET,%object", "n"(i32 -45) #20, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #20, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #20, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -49) #20, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #20, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #20, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #20, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #20, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #20, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #20, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #20, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #20, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -157) #20, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___thread_t_next_thread_OFFSET\0A\09.equ\09___thread_t_next_thread_OFFSET,${0:B}\0A\09.type\09___thread_t_next_thread_OFFSET,%object", "n"(i32 -113) #20, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -169) #20, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #20, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #20, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #20, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #20, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #20, !dbg !2984, !srcloc !2987
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #20, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #20, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #20, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #20, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #20, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #20, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #20, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #20, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #20, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #20, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #20, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #20, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #20, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #20, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #20, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #20, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #20, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #20, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #20, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -169) #20, !dbg !3030, !srcloc !3031
  ret void, !dbg !3032
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @philosopher(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3038, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8* undef, metadata !3039, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i8* undef, metadata !3040, metadata !DIExpression()), !dbg !3046
  %4 = ptrtoint i8* %0 to i32, !dbg !3047
  call void @llvm.dbg.value(metadata i32 %4, metadata !3043, metadata !DIExpression()), !dbg !3046
  %5 = tail call fastcc i32 @is_last_philosopher(i32 noundef %4) #21, !dbg !3048
  %6 = icmp eq i32 %5, 0, !dbg !3048
  br i1 %6, label %7, label %11, !dbg !3050

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %4, !dbg !3051
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !3051
  call void @llvm.dbg.value(metadata %struct.k_mutex* %9, metadata !3041, metadata !DIExpression()), !dbg !3046
  %10 = add nsw i32 %4, 1, !dbg !3053
  call void @llvm.dbg.value(metadata %struct.k_mutex* undef, metadata !3042, metadata !DIExpression()), !dbg !3046
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %13 = phi %struct.k_mutex* [ %9, %7 ], [ getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %3 ], !dbg !3054
  %14 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %12, !dbg !3054
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !3054
  call void @llvm.dbg.value(metadata %struct.k_mutex* %13, metadata !3041, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata %struct.k_mutex* %15, metadata !3042, metadata !DIExpression()), !dbg !3046
  br label %16, !dbg !3055

16:                                               ; preds = %16, %11
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 noundef 0) #21, !dbg !3056
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %13) #21, !dbg !3057
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 noundef 0) #21, !dbg !3058
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %15) #21, !dbg !3059
  %17 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #21, !dbg !3060
  call void @llvm.dbg.value(metadata i32 %17, metadata !3044, metadata !DIExpression()), !dbg !3061
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 noundef %17) #21, !dbg !3062
  tail call fastcc void @k_msleep(i32 noundef %17) #21, !dbg !3063
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %15) #21, !dbg !3064
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 noundef 0) #21, !dbg !3065
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %13) #21, !dbg !3066
  %18 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #21, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %18, metadata !3044, metadata !DIExpression()), !dbg !3061
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 noundef %18) #21, !dbg !3068
  tail call fastcc void @k_msleep(i32 noundef %18) #21, !dbg !3069
  br label %16, !dbg !3055, !llvm.loop !3070
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @is_last_philosopher(i32 noundef %0) unnamed_addr #4 !dbg !3072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3074, metadata !DIExpression()), !dbg !3075
  %2 = icmp eq i32 %0, 5, !dbg !3076
  %3 = zext i1 %2 to i32, !dbg !3076
  ret i32 %3, !dbg !3077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_phil_state(i32 noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3082, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i8* %1, metadata !3083, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i32 %2, metadata !3084, metadata !DIExpression()), !dbg !3086
  %4 = tail call fastcc %struct.k_thread* @k_current_get() #22, !dbg !3087
  %5 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %4) #21, !dbg !3088
  call void @llvm.dbg.value(metadata i32 %5, metadata !3085, metadata !DIExpression()), !dbg !3086
  tail call fastcc void @set_phil_state_pos(i32 noundef %0) #21, !dbg !3089
  %6 = icmp slt i32 %5, 0, !dbg !3090
  %7 = select i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), !dbg !3091
  %8 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), !dbg !3092
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0, i8* noundef %7, i8* noundef %8, i32 noundef %5) #23, !dbg !3093
  %9 = icmp eq i32 %2, 0, !dbg !3094
  br i1 %9, label %11, label %10, !dbg !3096

10:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 noundef %2) #23, !dbg !3097
  br label %12, !dbg !3099

11:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0)) #23, !dbg !3100
  br label %12

12:                                               ; preds = %11, %10
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #23, !dbg !3102
  ret void, !dbg !3103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3104 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3114, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3113, metadata !DIExpression()), !dbg !3115
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3116, !srcloc !3118
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #23, !dbg !3119
  ret void, !dbg !3120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_random_delay(i32 noundef %0) unnamed_addr #1 !dbg !3121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3125, metadata !DIExpression()), !dbg !3129
  call void @llvm.dbg.value(metadata i32 25, metadata !3126, metadata !DIExpression()), !dbg !3129
  %2 = tail call fastcc i32 @k_uptime_get_32() #21, !dbg !3130
  %3 = udiv i32 %2, 100, !dbg !3131
  %4 = add nsw i32 %0, 1, !dbg !3132
  %5 = mul i32 %3, %4, !dbg !3133
  %6 = and i32 %5, 31, !dbg !3134
  call void @llvm.dbg.value(metadata i32 %6, metadata !3127, metadata !DIExpression()), !dbg !3129
  %7 = mul nuw nsw i32 %6, 25, !dbg !3135
  %8 = add nuw nsw i32 %7, 25, !dbg !3135
  call void @llvm.dbg.value(metadata i32 %8, metadata !3128, metadata !DIExpression()), !dbg !3129
  ret i32 %8, !dbg !3136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3141, metadata !DIExpression()), !dbg !3142
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #21, !dbg !3143
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3144
  tail call fastcc void @k_sleep([1 x i64] %4) #21, !dbg !3144
  ret void, !dbg !3145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3146 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3150, metadata !DIExpression()), !dbg !3151
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3152, !srcloc !3154
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #23, !dbg !3155
  ret void, !dbg !3156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3157 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata i64 %0, metadata !3164, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 1000, metadata !3169, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i32 10000, metadata !3170, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i8 1, metadata !3171, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i8 0, metadata !3172, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i1 true, metadata !3173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3181
  call void @llvm.dbg.value(metadata i8 0, metadata !3174, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i1 true, metadata !3175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3181
  call void @llvm.dbg.value(metadata i1 false, metadata !3176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3181
  call void @llvm.dbg.value(metadata i64 0, metadata !3177, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata i64 0, metadata !3177, metadata !DIExpression()), !dbg !3181
  %2 = mul i64 %0, 10, !dbg !3183
  ret i64 %2, !dbg !3189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3190 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3194, metadata !DIExpression()), !dbg !3195
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3196, !srcloc !3198
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #23, !dbg !3199
  ret void, !dbg !3200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3201 {
  %1 = tail call fastcc i64 @k_uptime_get() #21, !dbg !3204
  %2 = trunc i64 %1 to i32, !dbg !3205
  ret i32 %2, !dbg !3206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3207 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #21, !dbg !3210
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #21, !dbg !3211
  ret i64 %2, !dbg !3212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3213 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3214, !srcloc !3216
  %1 = tail call i64 @z_impl_k_uptime_ticks() #23, !dbg !3217
  ret i64 %1, !dbg !3218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !3219 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3221, metadata !DIExpression()), !dbg !3222
  call void @llvm.dbg.value(metadata i64 %0, metadata !3164, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i32 10000, metadata !3169, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i32 1000, metadata !3170, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8 1, metadata !3171, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8 0, metadata !3172, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i1 false, metadata !3173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3223
  call void @llvm.dbg.value(metadata i8 0, metadata !3174, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i1 false, metadata !3175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3223
  call void @llvm.dbg.value(metadata i1 true, metadata !3176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3223
  call void @llvm.dbg.value(metadata i64 0, metadata !3177, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i64 0, metadata !3177, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3164, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3223
  call void @llvm.dbg.value(metadata i64 %0, metadata !3164, metadata !DIExpression()), !dbg !3223
  %2 = udiv i64 %0, 10, !dbg !3225
  ret i64 %2, !dbg !3229
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #5 !dbg !3230 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #22, !dbg !3234
  ret %struct.k_thread* %1, !dbg !3235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3240, metadata !DIExpression()), !dbg !3241
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3242, !srcloc !3244
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #23, !dbg !3245
  ret i32 %2, !dbg !3246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_phil_state_pos(i32 noundef %0) unnamed_addr #1 !dbg !3247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3251, metadata !DIExpression()), !dbg !3252
  %2 = add nsw i32 %0, 1, !dbg !3253
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 noundef %2, i32 noundef 1) #23, !dbg !3254
  ret void, !dbg !3255
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #5 !dbg !3256 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3257, !srcloc !3259
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !3260
  ret %struct.k_thread* %1, !dbg !3261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3262 {
  tail call fastcc void @display_demo_description() #21, !dbg !3263
  tail call void @k_sched_time_slice_set(i32 noundef 5000, i32 noundef 0) #23, !dbg !3264
  tail call fastcc void @init_objects() #21, !dbg !3265
  tail call fastcc void @start_threads() #21, !dbg !3266
  ret void, !dbg !3267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @display_demo_description() unnamed_addr #1 !dbg !3268 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([328 x i8], [328 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #23, !dbg !3269
  ret void, !dbg !3270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_objects() unnamed_addr #1 !dbg !3271 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3273, metadata !DIExpression()), !dbg !3275
  br label %2, !dbg !3276

1:                                                ; preds = %2
  ret void, !dbg !3277

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3273, metadata !DIExpression()), !dbg !3275
  %4 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %3, !dbg !3278
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3278
  tail call fastcc void @k_mutex_init(%struct.k_mutex* noundef %5) #21, !dbg !3278
  %6 = add nuw nsw i32 %3, 1, !dbg !3281
  call void @llvm.dbg.value(metadata i32 %6, metadata !3273, metadata !DIExpression()), !dbg !3275
  %7 = icmp eq i32 %6, 6, !dbg !3282
  br i1 %7, label %1, label %2, !dbg !3276, !llvm.loop !3283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @start_threads() unnamed_addr #1 !dbg !3285 {
  %1 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3287, metadata !DIExpression()), !dbg !3293
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0
  br label %4, !dbg !3294

3:                                                ; preds = %4
  ret void, !dbg !3295

4:                                                ; preds = %0, %4
  %5 = phi i32 [ 0, %0 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3287, metadata !DIExpression()), !dbg !3293
  %6 = call fastcc i32 @new_prio(i32 noundef %5) #21, !dbg !3296, !range !3297
  call void @llvm.dbg.value(metadata i32 %6, metadata !3289, metadata !DIExpression()), !dbg !3298
  %7 = getelementptr inbounds [6 x %struct.k_thread], [6 x %struct.k_thread]* @threads, i32 0, i32 %5, !dbg !3299
  %8 = getelementptr inbounds [6 x [2048 x %struct.z_thread_stack_element]], [6 x [2048 x %struct.z_thread_stack_element]]* @stacks, i32 0, i32 %5, i32 0, !dbg !3300
  %9 = inttoptr i32 %5 to i8*, !dbg !3301
  call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %7, %struct.z_thread_stack_element* noundef nonnull %8, i8* noundef %9, i32 noundef %6) #21, !dbg !3302
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #20, !dbg !3303
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3292, metadata !DIExpression()), !dbg !3304
  %10 = call i32 (i8*, i32, i8*, ...) @snprintk(i8* noundef nonnull %2, i32 noundef 32, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i32 noundef %5) #23, !dbg !3305
  call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %7, i8* noundef nonnull %2) #21, !dbg !3306
  call fastcc void @k_object_access_grant() #21, !dbg !3307
  %11 = add nuw nsw i32 %5, 1, !dbg !3308
  call fastcc void @k_object_access_grant() #21, !dbg !3309
  call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull %7) #21, !dbg !3310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #20, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %11, metadata !3287, metadata !DIExpression()), !dbg !3293
  %12 = icmp eq i32 %11, 6, !dbg !3312
  br i1 %12, label %3, label %4, !dbg !3294, !llvm.loop !3313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio(i32 noundef %0) unnamed_addr #4 !dbg !3315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3317, metadata !DIExpression()), !dbg !3318
  %2 = sub i32 3, %0, !dbg !3319
  ret i32 %2, !dbg !3320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3321 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3336, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3327, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3328, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 2048, metadata !3329, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @philosopher, metadata !3330, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %2, metadata !3331, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* null, metadata !3332, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* null, metadata !3333, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 %3, metadata !3334, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 4, metadata !3335, metadata !DIExpression()), !dbg !3337
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3338, !srcloc !3340
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @philosopher, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 4, [1 x i64] [i64 -1]) #23, !dbg !3341
  ret void, !dbg !3342
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3343 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3347, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.value(metadata i8* %1, metadata !3348, metadata !DIExpression()), !dbg !3349
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3350, !srcloc !3352
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #23, !dbg !3353
  ret void, !dbg !3354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !3355 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3360, metadata !DIExpression()), !dbg !3362
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3361, metadata !DIExpression()), !dbg !3362
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3363, !srcloc !3365
  ret void, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3371, metadata !DIExpression()), !dbg !3372
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3373, !srcloc !3375
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #23, !dbg !3376
  ret void, !dbg !3377
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3378 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3380, metadata !DIExpression()), !dbg !3381
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !3382, !srcloc !3384
  %2 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) #23, !dbg !3385
  ret void, !dbg !3386
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3389, metadata !DIExpression()), !dbg !3390
  ret i32 0, !dbg !3391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3392 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3396, metadata !DIExpression()), !dbg !3397
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3398
  ret void, !dbg !3399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3400 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3403
  ret i8* %1, !dbg !3404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3405 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3417, metadata !DIExpression()), !dbg !3428
  call void @llvm.dbg.value(metadata i8* %0, metadata !3416, metadata !DIExpression()), !dbg !3428
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #21, !dbg !3429
  ret void, !dbg !3431
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3436, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i8* %1, metadata !3437, metadata !DIExpression()), !dbg !3438
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3439
  %4 = tail call i32 %3(i32 noundef %0) #23, !dbg !3439
  ret i32 %4, !dbg !3440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3441 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3453, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3450, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i8* %1, metadata !3451, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i8* %2, metadata !3452, metadata !DIExpression()), !dbg !3454
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #23, !dbg !3455
  ret void, !dbg !3456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3457 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3461, metadata !DIExpression()), !dbg !3464
  call void @llvm.dbg.value(metadata i32 %1, metadata !3462, metadata !DIExpression()), !dbg !3464
  call void @llvm.dbg.value(metadata i32 0, metadata !3463, metadata !DIExpression()), !dbg !3464
  %3 = icmp eq i32 %1, 0, !dbg !3465
  br i1 %3, label %13, label %4, !dbg !3468

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3463, metadata !DIExpression()), !dbg !3464
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3469
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3471
  %8 = load i8, i8* %7, align 1, !dbg !3471
  %9 = zext i8 %8 to i32, !dbg !3471
  %10 = tail call i32 %6(i32 noundef %9) #23, !dbg !3469
  %11 = add nuw i32 %5, 1, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %11, metadata !3463, metadata !DIExpression()), !dbg !3464
  %12 = icmp eq i32 %11, %1, !dbg !3465
  br i1 %12, label %13, label %4, !dbg !3468, !llvm.loop !3473

13:                                               ; preds = %4, %2
  ret void, !dbg !3475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3476 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3480, metadata !DIExpression()), !dbg !3482
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3483
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !3483
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3481, metadata !DIExpression()), !dbg !3484
  call void @llvm.va_start(i8* nonnull %3), !dbg !3485
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3486
  %5 = load i32, i32* %4, align 4, !dbg !3486
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3486
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #21, !dbg !3486
  call void @llvm.va_end(i8* nonnull %3), !dbg !3487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !3488
  ret void, !dbg !3488
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3489 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3493, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 %1, metadata !3494, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i8* %2, metadata !3495, metadata !DIExpression()), !dbg !3498
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !3499
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3496, metadata !DIExpression()), !dbg !3500
  call void @llvm.va_start(i8* nonnull %5), !dbg !3501
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3502
  %7 = load i32, i32* %6, align 4, !dbg !3502
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3502
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #21, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %9, metadata !3497, metadata !DIExpression()), !dbg !3498
  call void @llvm.va_end(i8* nonnull %5), !dbg !3503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !3504
  ret i32 %9, !dbg !3505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3506 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3513, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i8* %0, metadata !3510, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32 %1, metadata !3511, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i8* %2, metadata !3512, metadata !DIExpression()), !dbg !3520
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3521
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #20, !dbg !3521
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3514, metadata !DIExpression()), !dbg !3522
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3523
  store i8* %0, i8** %7, align 4, !dbg !3523
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3523
  store i32 %1, i32* %8, align 4, !dbg !3523
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3523
  store i32 0, i32* %9, align 4, !dbg !3523
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #21, !dbg !3524
  %10 = load i32, i32* %9, align 4, !dbg !3525
  %11 = load i32, i32* %8, align 4, !dbg !3527
  %12 = icmp slt i32 %10, %11, !dbg !3528
  br i1 %12, label %13, label %15, !dbg !3529

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3530
  store i8 0, i8* %14, align 1, !dbg !3532
  br label %15, !dbg !3533

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #20, !dbg !3534
  ret i32 %10, !dbg !3535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !3536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3541, metadata !DIExpression()), !dbg !3543
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3542, metadata !DIExpression()), !dbg !3543
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3544
  %4 = load i8*, i8** %3, align 4, !dbg !3544
  %5 = icmp eq i8* %4, null, !dbg !3546
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3547
  br i1 %5, label %12, label %8, !dbg !3548

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3549
  %10 = load i32, i32* %9, align 4, !dbg !3549
  %11 = icmp slt i32 %7, %10, !dbg !3550
  br i1 %11, label %15, label %12, !dbg !3551

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3552
  %14 = add nsw i32 %7, 1, !dbg !3554
  store i32 %14, i32* %13, align 4, !dbg !3554
  br label %25, !dbg !3555

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3556
  %17 = icmp eq i32 %7, %16, !dbg !3558
  br i1 %17, label %18, label %21, !dbg !3559

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3560
  store i32 %19, i32* %6, align 4, !dbg !3560
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3562
  store i8 0, i8* %20, align 1, !dbg !3563
  br label %25, !dbg !3564

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3565
  %23 = add nsw i32 %7, 1, !dbg !3567
  store i32 %23, i32* %6, align 4, !dbg !3567
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3568
  store i8 %22, i8* %24, align 1, !dbg !3569
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3570
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #11 !dbg !3571 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3585, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.value(metadata i8 %1, metadata !3586, metadata !DIExpression()), !dbg !3588
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3589
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3589
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !3587, metadata !DIExpression()), !dbg !3588
  br label %5, !dbg !3591

5:                                                ; preds = %8, %2
  %6 = phi %struct.rbnode* [ %4, %2 ], [ %9, %8 ], !dbg !3592
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !3587, metadata !DIExpression()), !dbg !3588
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !3593
  br i1 %7, label %11, label %8, !dbg !3595

8:                                                ; preds = %5
  %9 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext %1) #21, !dbg !3596
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !3597
  br i1 %10, label %11, label %5, !dbg !3598, !llvm.loop !3599

11:                                               ; preds = %5, %8
  ret %struct.rbnode* %6, !dbg !3601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.rbnode* @get_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #8 !dbg !3602 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3606, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.value(metadata i8 %1, metadata !3607, metadata !DIExpression()), !dbg !3609
  %3 = icmp eq i8 %1, 0, !dbg !3610
  br i1 %3, label %7, label %4, !dbg !3612

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3613
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !3613
  br label %13, !dbg !3615

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3616
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !3616
  %10 = ptrtoint %struct.rbnode* %9 to i32, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %10, metadata !3608, metadata !DIExpression()), !dbg !3609
  %11 = and i32 %10, -2, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %11, metadata !3608, metadata !DIExpression()), !dbg !3609
  %12 = inttoptr i32 %11 to %struct.rbnode*, !dbg !3619
  br label %13

13:                                               ; preds = %7, %4
  %14 = phi %struct.rbnode* [ %6, %4 ], [ %12, %7 ], !dbg !3609
  ret %struct.rbnode* %14, !dbg !3620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_insert(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3621 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3625, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3626, metadata !DIExpression()), !dbg !3635
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef null) #21, !dbg !3636
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #21, !dbg !3637
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3638
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3638
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !3640
  br i1 %5, label %6, label %8, !dbg !3641

6:                                                ; preds = %2
  store %struct.rbnode* %1, %struct.rbnode** %3, align 4, !dbg !3642
  %7 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3644
  store i32 1, i32* %7, align 4, !dbg !3645
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 1) #21, !dbg !3646
  br label %31, !dbg !3647

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3648
  %10 = load i32, i32* %9, align 4, !dbg !3648
  %11 = add nsw i32 %10, 1, !dbg !3649
  %12 = tail call i8* @llvm.stacksave(), !dbg !3650
  %13 = alloca %struct.rbnode*, i32 %11, align 4, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %11, metadata !3627, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.declare(metadata %struct.rbnode** %13, metadata !3628, metadata !DIExpression()), !dbg !3651
  %14 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef nonnull %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %13) #21, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %14, metadata !3632, metadata !DIExpression()), !dbg !3635
  %15 = add nsw i32 %14, -1, !dbg !3653
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %15, !dbg !3654
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3654
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3633, metadata !DIExpression()), !dbg !3635
  %18 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3655
  %19 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %18, align 4, !dbg !3655
  %20 = tail call zeroext i1 %19(%struct.rbnode* noundef %1, %struct.rbnode* noundef %17) #23, !dbg !3656
  %21 = xor i1 %20, true, !dbg !3656
  %22 = zext i1 %21 to i8, !dbg !3656
  call void @llvm.dbg.value(metadata i8 %22, metadata !3634, metadata !DIExpression()), !dbg !3635
  %23 = bitcast %struct.rbnode* %1 to i8*, !dbg !3657
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %22, i8* noundef %23) #21, !dbg !3658
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 0) #21, !dbg !3659
  %24 = add nsw i32 %14, 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %24, metadata !3632, metadata !DIExpression()), !dbg !3635
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %14, !dbg !3661
  store %struct.rbnode* %1, %struct.rbnode** %25, align 4, !dbg !3662
  call fastcc void @fix_extra_red(%struct.rbnode** noundef nonnull %13, i32 noundef %24) #21, !dbg !3663
  %26 = load i32, i32* %9, align 4, !dbg !3664
  %27 = icmp slt i32 %14, %26, !dbg !3666
  br i1 %27, label %29, label %28, !dbg !3667

28:                                               ; preds = %8
  store i32 %24, i32* %9, align 4, !dbg !3668
  br label %29, !dbg !3670

29:                                               ; preds = %28, %8
  %30 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !3671
  store %struct.rbnode* %30, %struct.rbnode** %3, align 4, !dbg !3672
  tail call void @llvm.stackrestore(i8* %12), !dbg !3673
  br label %31

31:                                               ; preds = %29, %6
  ret void, !dbg !3673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_child(%struct.rbnode* nocapture noundef %0, i8 noundef zeroext %1, i8* noundef %2) unnamed_addr #10 !dbg !3674 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3678, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8 %1, metadata !3679, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %2, metadata !3680, metadata !DIExpression()), !dbg !3685
  %4 = icmp eq i8 %1, 0, !dbg !3686
  br i1 %4, label %8, label %5, !dbg !3687

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3688
  %7 = bitcast %struct.rbnode** %6 to i8**, !dbg !3690
  store i8* %2, i8** %7, align 4, !dbg !3690
  br label %16, !dbg !3691

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3692
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3692
  %11 = ptrtoint %struct.rbnode* %10 to i32, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %11, metadata !3681, metadata !DIExpression()), !dbg !3694
  %12 = ptrtoint i8* %2 to i32, !dbg !3695
  call void @llvm.dbg.value(metadata i32 %12, metadata !3684, metadata !DIExpression()), !dbg !3694
  %13 = and i32 %11, 1, !dbg !3696
  %14 = or i32 %13, %12, !dbg !3697
  %15 = inttoptr i32 %14 to %struct.rbnode*, !dbg !3698
  store %struct.rbnode* %15, %struct.rbnode** %9, align 4, !dbg !3699
  br label %16

16:                                               ; preds = %8, %5
  ret void, !dbg !3700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_color(%struct.rbnode* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3701 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3705, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.value(metadata i32 %1, metadata !3706, metadata !DIExpression()), !dbg !3709
  %3 = bitcast %struct.rbnode* %0 to i32*, !dbg !3710
  call void @llvm.dbg.value(metadata i32* %3, metadata !3707, metadata !DIExpression()), !dbg !3709
  %4 = load i32, i32* %3, align 4, !dbg !3711
  %5 = and i32 %4, -2, !dbg !3712
  %6 = and i32 %1, 255, !dbg !3713
  %7 = or i32 %5, %6, !dbg !3714
  store i32 %7, i32* %3, align 4, !dbg !3715
  ret void, !dbg !3716
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_and_stack(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1, %struct.rbnode** nocapture noundef %2) unnamed_addr #1 !dbg !3717 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3722, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3723, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata %struct.rbnode** %2, metadata !3724, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 0, metadata !3725, metadata !DIExpression()), !dbg !3729
  %4 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3730
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3730
  call void @llvm.dbg.value(metadata i32 1, metadata !3725, metadata !DIExpression()), !dbg !3729
  store %struct.rbnode* %5, %struct.rbnode** %2, align 4, !dbg !3731
  %6 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3732
  call void @llvm.dbg.value(metadata i32 1, metadata !3725, metadata !DIExpression()), !dbg !3729
  %7 = icmp eq %struct.rbnode* %5, %1, !dbg !3733
  br i1 %7, label %23, label %8, !dbg !3734

8:                                                ; preds = %3, %19
  %9 = phi %struct.rbnode* [ %17, %19 ], [ %5, %3 ]
  %10 = phi %struct.rbnode** [ %21, %19 ], [ %2, %3 ]
  %11 = phi i32 [ %20, %19 ], [ 1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3725, metadata !DIExpression()), !dbg !3729
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %6, align 4, !dbg !3732
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef %1, %struct.rbnode* noundef %9) #23, !dbg !3735
  %14 = xor i1 %13, true, !dbg !3735
  %15 = zext i1 %14 to i8, !dbg !3735
  call void @llvm.dbg.value(metadata i8 %15, metadata !3726, metadata !DIExpression()), !dbg !3736
  %16 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3737
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %15) #21, !dbg !3738
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3728, metadata !DIExpression()), !dbg !3736
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !3739
  br i1 %18, label %23, label %19, !dbg !3741

19:                                               ; preds = %8
  %20 = add nuw nsw i32 %11, 1, !dbg !3742
  call void @llvm.dbg.value(metadata i32 %20, metadata !3725, metadata !DIExpression()), !dbg !3729
  %21 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %2, i32 %11, !dbg !3744
  store %struct.rbnode* %17, %struct.rbnode** %21, align 4, !dbg !3745
  %22 = icmp eq %struct.rbnode* %17, %1, !dbg !3733
  br i1 %22, label %23, label %8, !dbg !3734

23:                                               ; preds = %19, %8, %3
  %24 = phi i32 [ 1, %3 ], [ %11, %8 ], [ %20, %19 ], !dbg !3729
  call void @llvm.dbg.value(metadata i32 %24, metadata !3725, metadata !DIExpression()), !dbg !3729
  ret i32 %24, !dbg !3746
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_extra_red(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3747 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3751, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %1, metadata !3752, metadata !DIExpression()), !dbg !3760
  %3 = icmp sgt i32 %1, 1, !dbg !3761
  br i1 %3, label %4, label %34, !dbg !3762

4:                                                ; preds = %2, %32
  %5 = phi i32 [ %9, %32 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3752, metadata !DIExpression()), !dbg !3760
  %6 = add nsw i32 %5, -1, !dbg !3763
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3764
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3764
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3753, metadata !DIExpression()), !dbg !3765
  %9 = add nsw i32 %5, -2, !dbg !3766
  %10 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3767
  %11 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3767
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !3755, metadata !DIExpression()), !dbg !3765
  %12 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %11) #21, !dbg !3768
  br i1 %12, label %38, label %13, !dbg !3770

13:                                               ; preds = %4
  %14 = add nsw i32 %5, -3, !dbg !3771
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3772
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !3772
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !3756, metadata !DIExpression()), !dbg !3765
  %17 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %16, %struct.rbnode* noundef %11) #21, !dbg !3773
  call void @llvm.dbg.value(metadata i8 %17, metadata !3757, metadata !DIExpression()), !dbg !3765
  %18 = icmp eq i8 %17, 0, !dbg !3774
  %19 = zext i1 %18 to i8, !dbg !3775
  %20 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %19) #21, !dbg !3776
  call void @llvm.dbg.value(metadata %struct.rbnode* %20, metadata !3758, metadata !DIExpression()), !dbg !3765
  %21 = icmp eq %struct.rbnode* %20, null, !dbg !3777
  br i1 %21, label %24, label %22, !dbg !3779

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %20) #21, !dbg !3780
  br i1 %23, label %32, label %24, !dbg !3781

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3767
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3772
  %27 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %11, %struct.rbnode* noundef %8) #21, !dbg !3782
  call void @llvm.dbg.value(metadata i8 %27, metadata !3759, metadata !DIExpression()), !dbg !3765
  %28 = icmp eq i8 %27, %17, !dbg !3783
  br i1 %28, label %30, label %29, !dbg !3785

29:                                               ; preds = %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %5) #21, !dbg !3786
  br label %30, !dbg !3788

30:                                               ; preds = %29, %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #21, !dbg !3789
  %31 = load %struct.rbnode*, %struct.rbnode** %26, align 4, !dbg !3790
  tail call fastcc void @set_color(%struct.rbnode* noundef %31, i32 noundef 1) #21, !dbg !3791
  br label %34

32:                                               ; preds = %22
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 0) #21, !dbg !3792
  tail call fastcc void @set_color(%struct.rbnode* noundef %11, i32 noundef 1) #21, !dbg !3794
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %20, i32 noundef 1) #21, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %9, metadata !3752, metadata !DIExpression()), !dbg !3760
  %33 = icmp ugt i32 %5, 3, !dbg !3761
  br i1 %33, label %4, label %34, !dbg !3762

34:                                               ; preds = %32, %2, %30
  %35 = phi %struct.rbnode** [ %25, %30 ], [ %0, %2 ], [ %0, %32 ]
  %36 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %32 ]
  %37 = load %struct.rbnode*, %struct.rbnode** %35, align 4, !dbg !3760
  tail call fastcc void @set_color(%struct.rbnode* noundef %37, i32 noundef %36) #21, !dbg !3760
  br label %38, !dbg !3796

38:                                               ; preds = %4, %34
  ret void, !dbg !3796
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_black(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3797 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3801, metadata !DIExpression()), !dbg !3802
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #21, !dbg !3803
  %3 = icmp eq i32 %2, 1, !dbg !3804
  ret i1 %3, !dbg !3805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @get_side(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* noundef readnone %1) unnamed_addr #8 !dbg !3806 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3810, metadata !DIExpression()), !dbg !3812
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3811, metadata !DIExpression()), !dbg !3812
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 1) #21, !dbg !3813
  %4 = icmp eq %struct.rbnode* %3, %1, !dbg !3814
  %5 = zext i1 %4 to i8, !dbg !3815
  ret i8 %5, !dbg !3816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_red(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3817 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3819, metadata !DIExpression()), !dbg !3820
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #21, !dbg !3821
  %3 = icmp eq i32 %2, 0, !dbg !3822
  ret i1 %3, !dbg !3823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rotate(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3826, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i32 %1, metadata !3827, metadata !DIExpression()), !dbg !3836
  %3 = add nsw i32 %1, -2, !dbg !3837
  %4 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %3, !dbg !3838
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.rbnode* %5, metadata !3828, metadata !DIExpression()), !dbg !3836
  %6 = add nsw i32 %1, -1, !dbg !3839
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3840
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3829, metadata !DIExpression()), !dbg !3836
  %9 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %5, %struct.rbnode* noundef %8) #21, !dbg !3841, !range !3842
  call void @llvm.dbg.value(metadata i8 %9, metadata !3830, metadata !DIExpression()), !dbg !3836
  %10 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9) #21, !dbg !3843
  call void @llvm.dbg.value(metadata %struct.rbnode* %10, metadata !3831, metadata !DIExpression()), !dbg !3836
  %11 = xor i8 %9, 1, !dbg !3844
  %12 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11) #21, !dbg !3845
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !3832, metadata !DIExpression()), !dbg !3836
  %13 = icmp sgt i32 %1, 2, !dbg !3846
  br i1 %13, label %14, label %20, !dbg !3847

14:                                               ; preds = %2
  %15 = add nsw i32 %1, -3, !dbg !3848
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %15, !dbg !3849
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3849
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3833, metadata !DIExpression()), !dbg !3850
  %18 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %17, %struct.rbnode* noundef %5) #21, !dbg !3851, !range !3842
  %19 = bitcast %struct.rbnode* %8 to i8*, !dbg !3852
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %18, i8* noundef %19) #21, !dbg !3853
  br label %20, !dbg !3854

20:                                               ; preds = %14, %2
  %21 = bitcast %struct.rbnode* %10 to i8*, !dbg !3855
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9, i8* noundef %21) #21, !dbg !3856
  %22 = bitcast %struct.rbnode* %5 to i8*, !dbg !3857
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11, i8* noundef %22) #21, !dbg !3858
  %23 = bitcast %struct.rbnode* %12 to i8*, !dbg !3859
  tail call fastcc void @set_child(%struct.rbnode* noundef %5, i8 noundef zeroext %9, i8* noundef %23) #21, !dbg !3860
  store %struct.rbnode* %8, %struct.rbnode** %4, align 4, !dbg !3861
  store %struct.rbnode* %5, %struct.rbnode** %7, align 4, !dbg !3862
  ret void, !dbg !3863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @get_color(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3864 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3868, metadata !DIExpression()), !dbg !3869
  %2 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3870
  %3 = load %struct.rbnode*, %struct.rbnode** %2, align 4, !dbg !3870
  %4 = ptrtoint %struct.rbnode* %3 to i32, !dbg !3871
  %5 = and i32 %4, 1, !dbg !3872
  ret i32 %5, !dbg !3873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_remove(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3874 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3876, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3877, metadata !DIExpression()), !dbg !3894
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3895
  %4 = load i32, i32* %3, align 4, !dbg !3895
  %5 = add nsw i32 %4, 1, !dbg !3896
  %6 = alloca %struct.rbnode*, i32 %5, align 4, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %5, metadata !3879, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata %struct.rbnode** %6, metadata !3880, metadata !DIExpression()), !dbg !3898
  %7 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %6) #21, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %7, metadata !3884, metadata !DIExpression()), !dbg !3894
  %8 = add nsw i32 %7, -1, !dbg !3900
  %9 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %8, !dbg !3902
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3902
  %11 = icmp eq %struct.rbnode* %10, %1, !dbg !3903
  br i1 %11, label %12, label %108, !dbg !3904

12:                                               ; preds = %2
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #21, !dbg !3905
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !3906
  br i1 %14, label %69, label %15, !dbg !3907

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #21, !dbg !3908
  %17 = icmp eq %struct.rbnode* %16, null, !dbg !3909
  br i1 %17, label %69, label %18, !dbg !3910

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %7, metadata !3885, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !3890, metadata !DIExpression()), !dbg !3911
  %19 = icmp sgt i32 %7, 1, !dbg !3912
  br i1 %19, label %20, label %24, !dbg !3913

20:                                               ; preds = %18
  %21 = add nsw i32 %7, -2, !dbg !3914
  %22 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %21, !dbg !3915
  %23 = load %struct.rbnode*, %struct.rbnode** %22, align 4, !dbg !3915
  br label %24, !dbg !3913

24:                                               ; preds = %18, %20
  %25 = phi %struct.rbnode* [ %23, %20 ], [ null, %18 ], !dbg !3913
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !3888, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %7, metadata !3884, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3894
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %7, !dbg !3916
  store %struct.rbnode* %13, %struct.rbnode** %26, align 4, !dbg !3917
  %27 = add nsw i32 %7, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %27, metadata !3884, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !3890, metadata !DIExpression()), !dbg !3911
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %13, i8 noundef zeroext 1) #21, !dbg !3918
  %29 = icmp eq %struct.rbnode* %28, null, !dbg !3919
  br i1 %29, label %41, label %30, !dbg !3920

30:                                               ; preds = %24, %30
  %31 = phi %struct.rbnode* [ %35, %30 ], [ %28, %24 ]
  %32 = phi i32 [ %34, %30 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %31, metadata !3890, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %32, metadata !3884, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3894
  %33 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %32, !dbg !3921
  store %struct.rbnode* %31, %struct.rbnode** %33, align 4, !dbg !3923
  %34 = add nsw i32 %32, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %34, metadata !3884, metadata !DIExpression()), !dbg !3894
  %35 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %31, i8 noundef zeroext 1) #21, !dbg !3918
  %36 = icmp eq %struct.rbnode* %35, null, !dbg !3919
  br i1 %36, label %37, label %30, !dbg !3920, !llvm.loop !3924

37:                                               ; preds = %30
  %38 = add nsw i32 %32, -1, !dbg !3926
  %39 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %38
  %40 = load %struct.rbnode*, %struct.rbnode** %39, align 4, !dbg !3927
  br label %41, !dbg !3926

41:                                               ; preds = %37, %24
  %42 = phi %struct.rbnode* [ %40, %37 ], [ %1, %24 ], !dbg !3927
  %43 = phi %struct.rbnode* [ %31, %37 ], [ %13, %24 ], !dbg !3911
  %44 = phi i32 [ %32, %37 ], [ %7, %24 ]
  %45 = phi i32 [ %34, %37 ], [ %27, %24 ], !dbg !3911
  call void @llvm.dbg.value(metadata %struct.rbnode* %42, metadata !3889, metadata !DIExpression()), !dbg !3911
  %46 = icmp eq %struct.rbnode* %25, null, !dbg !3928
  br i1 %46, label %50, label %47, !dbg !3930

47:                                               ; preds = %41
  %48 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef nonnull %25, %struct.rbnode* noundef %1) #21, !dbg !3931, !range !3842
  %49 = bitcast %struct.rbnode* %43 to i8*, !dbg !3933
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %25, i8 noundef zeroext %48, i8* noundef nonnull %49) #21, !dbg !3934
  br label %52, !dbg !3935

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3936
  store %struct.rbnode* %43, %struct.rbnode** %51, align 4, !dbg !3938
  br label %52

52:                                               ; preds = %50, %47
  %53 = icmp eq %struct.rbnode* %42, %1, !dbg !3939
  br i1 %53, label %58, label %54, !dbg !3941

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %42, %struct.rbnode* noundef nonnull %43) #21, !dbg !3942, !range !3842
  %56 = bitcast %struct.rbnode* %1 to i8*, !dbg !3944
  tail call fastcc void @set_child(%struct.rbnode* noundef %42, i8 noundef zeroext %55, i8* noundef %56) #21, !dbg !3945
  %57 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #21, !dbg !3946
  call void @llvm.dbg.value(metadata %struct.rbnode* %57, metadata !3878, metadata !DIExpression()), !dbg !3894
  br label %58

58:                                               ; preds = %52, %54
  %59 = phi %struct.rbnode* [ %57, %54 ], [ %1, %52 ]
  %60 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0) #21, !dbg !3947
  %61 = bitcast %struct.rbnode* %60 to i8*, !dbg !3947
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef %61) #21, !dbg !3947
  %62 = bitcast %struct.rbnode* %59 to i8*, !dbg !3947
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0, i8* noundef %62) #21, !dbg !3947
  %63 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #21, !dbg !3948
  %64 = bitcast %struct.rbnode* %63 to i8*, !dbg !3948
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 1, i8* noundef %64) #21, !dbg !3949
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #21, !dbg !3950
  %65 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3951
  call void @llvm.dbg.value(metadata %struct.rbnode* %65, metadata !3878, metadata !DIExpression()), !dbg !3894
  %66 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %44, !dbg !3952
  store %struct.rbnode* %43, %struct.rbnode** %9, align 4, !dbg !3953
  store %struct.rbnode* %65, %struct.rbnode** %66, align 4, !dbg !3954
  %67 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %1) #21, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %67, metadata !3891, metadata !DIExpression()), !dbg !3911
  %68 = tail call fastcc i32 @get_color(%struct.rbnode* noundef nonnull %43) #21, !dbg !3956, !range !3957
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef %68) #21, !dbg !3958
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %43, i32 noundef %67) #21, !dbg !3959
  br label %69, !dbg !3960

69:                                               ; preds = %58, %15, %12
  %70 = phi i32 [ %45, %58 ], [ %7, %15 ], [ %7, %12 ], !dbg !3894
  call void @llvm.dbg.value(metadata i32 %70, metadata !3884, metadata !DIExpression()), !dbg !3894
  %71 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #21, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.rbnode* %71, metadata !3892, metadata !DIExpression()), !dbg !3894
  %72 = icmp eq %struct.rbnode* %71, null, !dbg !3962
  br i1 %72, label %73, label %75, !dbg !3964

73:                                               ; preds = %69
  %74 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #21, !dbg !3965
  call void @llvm.dbg.value(metadata %struct.rbnode* %74, metadata !3892, metadata !DIExpression()), !dbg !3894
  br label %75, !dbg !3967

75:                                               ; preds = %73, %69
  %76 = phi %struct.rbnode* [ %74, %73 ], [ %71, %69 ], !dbg !3894
  call void @llvm.dbg.value(metadata %struct.rbnode* %76, metadata !3892, metadata !DIExpression()), !dbg !3894
  %77 = icmp slt i32 %70, 2, !dbg !3968
  br i1 %77, label %78, label %83, !dbg !3970

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3971
  store %struct.rbnode* %76, %struct.rbnode** %79, align 4, !dbg !3973
  %80 = icmp eq %struct.rbnode* %76, null, !dbg !3974
  br i1 %80, label %82, label %81, !dbg !3976

81:                                               ; preds = %78
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #21, !dbg !3977
  br label %108, !dbg !3979

82:                                               ; preds = %78
  store i32 0, i32* %3, align 4, !dbg !3980
  br label %108

83:                                               ; preds = %75
  %84 = add nsw i32 %70, -2, !dbg !3982
  %85 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %84, !dbg !3983
  %86 = load %struct.rbnode*, %struct.rbnode** %85, align 4, !dbg !3983
  call void @llvm.dbg.value(metadata %struct.rbnode* %86, metadata !3893, metadata !DIExpression()), !dbg !3894
  %87 = icmp eq %struct.rbnode* %76, null, !dbg !3984
  br i1 %87, label %88, label %93, !dbg !3986

88:                                               ; preds = %83
  %89 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #21, !dbg !3987
  br i1 %89, label %90, label %91, !dbg !3990

90:                                               ; preds = %88
  call fastcc void @fix_missing_black(%struct.rbnode** noundef nonnull %6, i32 noundef %70, %struct.rbnode* noundef %1) #21, !dbg !3991
  br label %105, !dbg !3993

91:                                               ; preds = %88
  %92 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #21, !dbg !3994, !range !3842
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %92, i8* noundef null) #21, !dbg !3996
  br label %105

93:                                               ; preds = %83
  %94 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #21, !dbg !3997, !range !3842
  %95 = bitcast %struct.rbnode* %76 to i8*, !dbg !3999
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %94, i8* noundef nonnull %95) #21, !dbg !4000
  %96 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #21, !dbg !4001
  br i1 %96, label %100, label %97, !dbg !4001

97:                                               ; preds = %93
  %98 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %76) #21, !dbg !4001
  br i1 %98, label %100, label %99, !dbg !4004

99:                                               ; preds = %97
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #23, !dbg !4005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.19, i32 0, i32 0)) #23, !dbg !4005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #23, !dbg !4005
  unreachable, !dbg !4005

100:                                              ; preds = %97, %93
  %101 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef %1) #21, !dbg !4007
  br i1 %101, label %104, label %102, !dbg !4009

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %76) #21, !dbg !4010
  br i1 %103, label %104, label %105, !dbg !4011

104:                                              ; preds = %102, %100
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #21, !dbg !4012
  br label %105, !dbg !4014

105:                                              ; preds = %102, %104, %90, %91
  %106 = load %struct.rbnode*, %struct.rbnode** %6, align 4, !dbg !4015
  %107 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4016
  store %struct.rbnode* %106, %struct.rbnode** %107, align 4, !dbg !4017
  br label %108, !dbg !4018

108:                                              ; preds = %105, %82, %81, %2
  ret void, !dbg !4018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_missing_black(%struct.rbnode** nocapture noundef %0, i32 noundef %1, %struct.rbnode* noundef readnone %2) unnamed_addr #12 !dbg !4019 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4023, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata i32 %1, metadata !4024, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %struct.rbnode* %2, metadata !4025, metadata !DIExpression()), !dbg !4035
  %4 = icmp sgt i32 %1, 1, !dbg !4036
  br i1 %4, label %5, label %68, !dbg !4037

5:                                                ; preds = %3, %65
  %6 = phi i32 [ %66, %65 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4024, metadata !DIExpression()), !dbg !4035
  %7 = add nsw i32 %6, -1, !dbg !4038
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %7, !dbg !4039
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4039
  call void @llvm.dbg.value(metadata %struct.rbnode* %9, metadata !4031, metadata !DIExpression()), !dbg !4040
  %10 = add nsw i32 %6, -2, !dbg !4041
  %11 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %10, !dbg !4042
  %12 = load %struct.rbnode*, %struct.rbnode** %11, align 4, !dbg !4042
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4032, metadata !DIExpression()), !dbg !4040
  %13 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %12, %struct.rbnode* noundef %9) #21, !dbg !4043
  call void @llvm.dbg.value(metadata i8 %13, metadata !4033, metadata !DIExpression()), !dbg !4040
  %14 = icmp eq i8 %13, 0, !dbg !4044
  %15 = zext i1 %14 to i8, !dbg !4045
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %12, i8 noundef zeroext %15) #21, !dbg !4046
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4034, metadata !DIExpression()), !dbg !4040
  %17 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %16) #21, !dbg !4047
  br i1 %17, label %23, label %18, !dbg !4049

18:                                               ; preds = %5
  store %struct.rbnode* %16, %struct.rbnode** %8, align 4, !dbg !4050
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #21, !dbg !4052
  tail call fastcc void @set_color(%struct.rbnode* noundef %12, i32 noundef 0) #21, !dbg !4053
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 1) #21, !dbg !4054
  %19 = add nuw nsw i32 %6, 1, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %19, metadata !4024, metadata !DIExpression()), !dbg !4035
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4056
  store %struct.rbnode* %9, %struct.rbnode** %20, align 4, !dbg !4057
  %21 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4058
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !4032, metadata !DIExpression()), !dbg !4040
  %22 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %21, i8 noundef zeroext %15) #21, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.rbnode* %22, metadata !4034, metadata !DIExpression()), !dbg !4040
  br label %23, !dbg !4060

23:                                               ; preds = %18, %5
  %24 = phi %struct.rbnode* [ %12, %5 ], [ %21, %18 ], !dbg !4040
  %25 = phi i32 [ %6, %5 ], [ %19, %18 ]
  %26 = phi %struct.rbnode* [ %16, %5 ], [ %22, %18 ], !dbg !4040
  call void @llvm.dbg.value(metadata %struct.rbnode* %26, metadata !4034, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %25, metadata !4024, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4032, metadata !DIExpression()), !dbg !4040
  %27 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 0) #21, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.rbnode* %27, metadata !4026, metadata !DIExpression()), !dbg !4040
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 1) #21, !dbg !4062
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !4028, metadata !DIExpression()), !dbg !4040
  %29 = icmp eq %struct.rbnode* %27, null, !dbg !4063
  br i1 %29, label %32, label %30, !dbg !4065

30:                                               ; preds = %23
  %31 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %27) #21, !dbg !4066
  br i1 %31, label %32, label %42, !dbg !4067

32:                                               ; preds = %30, %23
  %33 = icmp eq %struct.rbnode* %28, null, !dbg !4068
  br i1 %33, label %36, label %34, !dbg !4069

34:                                               ; preds = %32
  %35 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %28) #21, !dbg !4070
  br i1 %35, label %36, label %42, !dbg !4071

36:                                               ; preds = %34, %32
  %37 = icmp eq %struct.rbnode* %9, %2, !dbg !4072
  br i1 %37, label %38, label %39, !dbg !4075

38:                                               ; preds = %36
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #21, !dbg !4076
  br label %39, !dbg !4078

39:                                               ; preds = %38, %36
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #21, !dbg !4079
  %40 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %24) #21, !dbg !4080
  br i1 %40, label %65, label %41, !dbg !4082

41:                                               ; preds = %39
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #21, !dbg !4083
  br label %68, !dbg !4085

42:                                               ; preds = %34, %30
  %43 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %15) #21, !dbg !4086
  call void @llvm.dbg.value(metadata %struct.rbnode* %43, metadata !4030, metadata !DIExpression()), !dbg !4040
  %44 = icmp eq %struct.rbnode* %43, null, !dbg !4087
  br i1 %44, label %49, label %45, !dbg !4089

45:                                               ; preds = %42
  %46 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %43) #21, !dbg !4090
  br i1 %46, label %47, label %49, !dbg !4091

47:                                               ; preds = %45
  %48 = add nsw i32 %25, -1, !dbg !4092
  br label %57, !dbg !4091

49:                                               ; preds = %45, %42
  %50 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %13) #21, !dbg !4093
  call void @llvm.dbg.value(metadata %struct.rbnode* %50, metadata !4029, metadata !DIExpression()), !dbg !4040
  %51 = add nsw i32 %25, -1, !dbg !4095
  %52 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %51, !dbg !4096
  store %struct.rbnode* %26, %struct.rbnode** %52, align 4, !dbg !4097
  %53 = add nuw nsw i32 %25, 1, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %53, metadata !4024, metadata !DIExpression()), !dbg !4035
  %54 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %25, !dbg !4099
  store %struct.rbnode* %50, %struct.rbnode** %54, align 4, !dbg !4100
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %53) #21, !dbg !4101
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #21, !dbg !4102
  tail call fastcc void @set_color(%struct.rbnode* noundef %50, i32 noundef 1) #21, !dbg !4103
  %55 = load %struct.rbnode*, %struct.rbnode** %52, align 4, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.rbnode* %55, metadata !4034, metadata !DIExpression()), !dbg !4040
  %56 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %55, i8 noundef zeroext %15) #21, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.rbnode* %56, metadata !4030, metadata !DIExpression()), !dbg !4040
  store %struct.rbnode* %9, %struct.rbnode** %52, align 4, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %25, metadata !4024, metadata !DIExpression()), !dbg !4035
  br label %57, !dbg !4107

57:                                               ; preds = %47, %49
  %58 = phi i32 [ %48, %47 ], [ %51, %49 ], !dbg !4092
  %59 = phi %struct.rbnode* [ %43, %47 ], [ %56, %49 ], !dbg !4040
  %60 = phi %struct.rbnode* [ %26, %47 ], [ %55, %49 ], !dbg !4040
  call void @llvm.dbg.value(metadata %struct.rbnode* %60, metadata !4034, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %25, metadata !4024, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata %struct.rbnode* %59, metadata !4030, metadata !DIExpression()), !dbg !4040
  %61 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %24) #21, !dbg !4108, !range !3957
  tail call fastcc void @set_color(%struct.rbnode* noundef %60, i32 noundef %61) #21, !dbg !4109
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #21, !dbg !4110
  tail call fastcc void @set_color(%struct.rbnode* noundef %59, i32 noundef 1) #21, !dbg !4111
  %62 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %58, !dbg !4112
  store %struct.rbnode* %60, %struct.rbnode** %62, align 4, !dbg !4113
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %25) #21, !dbg !4114
  %63 = icmp eq %struct.rbnode* %9, %2, !dbg !4115
  br i1 %63, label %64, label %68, !dbg !4117

64:                                               ; preds = %57
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #21, !dbg !4118
  br label %68, !dbg !4120

65:                                               ; preds = %39
  %66 = add nsw i32 %25, -1, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %66, metadata !4024, metadata !DIExpression()), !dbg !4035
  %67 = icmp sgt i32 %25, 2, !dbg !4036
  br i1 %67, label %5, label %68, !dbg !4037

68:                                               ; preds = %65, %3, %57, %64, %41
  ret void, !dbg !4123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_rb_walk(%struct.rbnode* noundef %0, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !4124 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4132, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4133, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata i8* %2, metadata !4134, metadata !DIExpression()), !dbg !4135
  %4 = icmp eq %struct.rbnode* %0, null, !dbg !4136
  br i1 %4, label %10, label %5, !dbg !4138

5:                                                ; preds = %3, %5
  %6 = phi %struct.rbnode* [ %8, %5 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !4132, metadata !DIExpression()), !dbg !4135
  %7 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 0) #21, !dbg !4139
  tail call void @z_rb_walk(%struct.rbnode* noundef %7, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !4141
  tail call void %1(%struct.rbnode* noundef nonnull %6, i8* noundef %2) #23, !dbg !4142
  %8 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 1) #21, !dbg !4143
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4132, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4133, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata i8* %2, metadata !4134, metadata !DIExpression()), !dbg !4135
  %9 = icmp eq %struct.rbnode* %8, null, !dbg !4136
  br i1 %9, label %10, label %5, !dbg !4138

10:                                               ; preds = %5, %3
  ret void, !dbg !4144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.rbnode* @z_rb_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #8 !dbg !4145 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4147, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.value(metadata i8 %1, metadata !4148, metadata !DIExpression()), !dbg !4149
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext %1) #21, !dbg !4150
  ret %struct.rbnode* %3, !dbg !4151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_rb_is_black(%struct.rbnode* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4152 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4156, metadata !DIExpression()), !dbg !4157
  %2 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %0) #21, !dbg !4158
  %3 = zext i1 %2 to i32, !dbg !4158
  ret i32 %3, !dbg !4159
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @rb_contains(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4160 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4164, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4165, metadata !DIExpression()), !dbg !4167
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4168
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4168
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !4166, metadata !DIExpression()), !dbg !4167
  %5 = icmp ne %struct.rbnode* %4, null, !dbg !4169
  %6 = icmp ne %struct.rbnode* %4, %1, !dbg !4170
  %7 = and i1 %5, %6, !dbg !4170
  br i1 %7, label %8, label %19, !dbg !4171

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1
  br label %10, !dbg !4171

10:                                               ; preds = %8, %10
  %11 = phi %struct.rbnode* [ %4, %8 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4166, metadata !DIExpression()), !dbg !4167
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %9, align 4, !dbg !4172
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef nonnull %11, %struct.rbnode* noundef %1) #23, !dbg !4174
  %14 = zext i1 %13 to i8, !dbg !4174
  %15 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %11, i8 noundef zeroext %14) #21, !dbg !4175
  call void @llvm.dbg.value(metadata %struct.rbnode* %15, metadata !4166, metadata !DIExpression()), !dbg !4167
  %16 = icmp ne %struct.rbnode* %15, null, !dbg !4169
  %17 = icmp ne %struct.rbnode* %15, %1, !dbg !4170
  %18 = and i1 %16, %17, !dbg !4170
  br i1 %18, label %10, label %19, !dbg !4171, !llvm.loop !4176

19:                                               ; preds = %10, %2
  %20 = phi %struct.rbnode* [ %4, %2 ], [ %15, %10 ], !dbg !4167
  %21 = icmp eq %struct.rbnode* %20, %1, !dbg !4178
  ret i1 %21, !dbg !4179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* nocapture noundef readonly %0, %struct._rb_foreach* nocapture noundef %1) local_unnamed_addr #12 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4190, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4191, metadata !DIExpression()), !dbg !4193
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4194
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4194
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !4196
  br i1 %5, label %48, label %6, !dbg !4197

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4198
  %8 = load i32, i32* %7, align 4, !dbg !4198
  %9 = icmp eq i32 %8, -1, !dbg !4200
  br i1 %9, label %10, label %12, !dbg !4201

10:                                               ; preds = %6
  %11 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %4, %struct._rb_foreach* noundef nonnull %1) #21, !dbg !4202
  br label %48, !dbg !4204

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4205
  %14 = load %struct.rbnode**, %struct.rbnode*** %13, align 4, !dbg !4205
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %8, !dbg !4206
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4206
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext 1) #21, !dbg !4207
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4192, metadata !DIExpression()), !dbg !4193
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !4208
  br i1 %18, label %21, label %19, !dbg !4210

19:                                               ; preds = %12
  %20 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %17, %struct._rb_foreach* noundef nonnull %1) #21, !dbg !4211
  br label %48, !dbg !4213

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4214
  %23 = load i8*, i8** %22, align 4, !dbg !4214
  %24 = getelementptr inbounds i8, i8* %23, i32 %8, !dbg !4216
  %25 = load i8, i8* %24, align 1, !dbg !4216
  %26 = icmp eq i8 %25, 0, !dbg !4217
  br i1 %26, label %31, label %27, !dbg !4218

27:                                               ; preds = %21
  %28 = add nsw i32 %8, -1, !dbg !4219
  store i32 %28, i32* %7, align 4, !dbg !4219
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %28, !dbg !4221
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4221
  br label %48, !dbg !4222

31:                                               ; preds = %21
  %32 = icmp sgt i32 %8, 0, !dbg !4223
  br i1 %32, label %33, label %41, !dbg !4224

33:                                               ; preds = %31, %37
  %34 = phi i32 [ %35, %37 ], [ %8, %31 ]
  %35 = add nsw i32 %34, -1, !dbg !4225
  store i32 %35, i32* %7, align 4, !dbg !4225
  %36 = icmp sgt i32 %34, 1, !dbg !4223
  br i1 %36, label %37, label %41, !dbg !4224, !llvm.loop !4227

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %23, i32 %35
  %39 = load i8, i8* %38, align 1, !dbg !4230
  %40 = icmp eq i8 %39, 0, !dbg !4231
  br i1 %40, label %33, label %44, !dbg !4228

41:                                               ; preds = %33, %31
  %42 = phi i32 [ %8, %31 ], [ 0, %33 ], !dbg !4232
  %43 = add nsw i32 %42, -1, !dbg !4233
  store i32 %43, i32* %7, align 4, !dbg !4233
  br label %48, !dbg !4234

44:                                               ; preds = %37
  %45 = add nsw i32 %34, -2, !dbg !4233
  store i32 %45, i32* %7, align 4, !dbg !4233
  %46 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %45, !dbg !4235
  %47 = load %struct.rbnode*, %struct.rbnode** %46, align 4, !dbg !4235
  br label %48, !dbg !4234

48:                                               ; preds = %41, %44, %2, %27, %19, %10
  %49 = phi %struct.rbnode* [ %11, %10 ], [ %20, %19 ], [ %30, %27 ], [ null, %2 ], [ %47, %44 ], [ null, %41 ], !dbg !4193
  ret %struct.rbnode* %49, !dbg !4236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef %0, %struct._rb_foreach* nocapture noundef %1) unnamed_addr #12 !dbg !4237 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4241, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4242, metadata !DIExpression()), !dbg !4243
  %3 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4244
  %4 = load i32, i32* %3, align 4, !dbg !4245
  %5 = add nsw i32 %4, 1, !dbg !4245
  store i32 %5, i32* %3, align 4, !dbg !4245
  %6 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4246
  %7 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4246
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %7, i32 %5, !dbg !4247
  store %struct.rbnode* %0, %struct.rbnode** %8, align 4, !dbg !4248
  %9 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4249
  %10 = load i8*, i8** %9, align 4, !dbg !4249
  %11 = load i32, i32* %3, align 4, !dbg !4250
  %12 = getelementptr inbounds i8, i8* %10, i32 %11, !dbg !4251
  store i8 0, i8* %12, align 1, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4241, metadata !DIExpression()), !dbg !4243
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 0) #21, !dbg !4253
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4241, metadata !DIExpression()), !dbg !4243
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4254
  br i1 %14, label %26, label %15, !dbg !4255

15:                                               ; preds = %2, %15
  %16 = phi %struct.rbnode* [ %24, %15 ], [ %13, %2 ]
  %17 = load i32, i32* %3, align 4, !dbg !4256
  %18 = add nsw i32 %17, 1, !dbg !4256
  store i32 %18, i32* %3, align 4, !dbg !4256
  %19 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4258
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %19, i32 %18, !dbg !4259
  store %struct.rbnode* %16, %struct.rbnode** %20, align 4, !dbg !4260
  %21 = load i8*, i8** %9, align 4, !dbg !4261
  %22 = load i32, i32* %3, align 4, !dbg !4262
  %23 = getelementptr inbounds i8, i8* %21, i32 %22, !dbg !4263
  store i8 1, i8* %23, align 1, !dbg !4264
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4241, metadata !DIExpression()), !dbg !4243
  %24 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %16, i8 noundef zeroext 0) #21, !dbg !4253
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4241, metadata !DIExpression()), !dbg !4243
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !4254
  br i1 %25, label %26, label %15, !dbg !4255, !llvm.loop !4265

26:                                               ; preds = %15, %2
  %27 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4267
  %28 = load i32, i32* %3, align 4, !dbg !4268
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %27, i32 %28, !dbg !4269
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4269
  ret %struct.rbnode* %30, !dbg !4270
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4271 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4276, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i8* %1, metadata !4277, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i8* %2, metadata !4278, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i8* %3, metadata !4279, metadata !DIExpression()), !dbg !4280
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #23, !dbg !4281
  %5 = tail call fastcc %struct.k_thread* @k_current_get.20() #22, !dbg !4282
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #21, !dbg !4283
  unreachable, !dbg !4284
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.20() unnamed_addr #5 !dbg !4285 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.21() #22, !dbg !4394
  ret %struct.k_thread* %1, !dbg !4395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4400, metadata !DIExpression()), !dbg !4401
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4402, !srcloc !4404
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !4405
  ret void, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.21() unnamed_addr #5 !dbg !4407 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4408, !srcloc !4410
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !4411
  ret %struct.k_thread* %1, !dbg !4412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4413 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4423, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %1, metadata !4424, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %2, metadata !4425, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %4, metadata !4427, metadata !DIExpression()), !dbg !4554
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4555
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4555
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4428, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i1 undef, metadata !4434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4554
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4557

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4557

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4558
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %30, metadata !4425, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %29, metadata !4432, metadata !DIExpression()), !dbg !4554
  %31 = load i8, i8* %30, align 1, !dbg !4559
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4557

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4559
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4560
  call void @llvm.dbg.value(metadata i8* %34, metadata !4425, metadata !DIExpression()), !dbg !4554
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #23, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %35, metadata !4436, metadata !DIExpression()), !dbg !4561
  %36 = icmp slt i32 %35, 0, !dbg !4562
  %37 = add i32 %29, 1, !dbg !4560
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %36, label %365, label %28, !llvm.loop !4564

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4566
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4441, metadata !DIExpression()), !dbg !4567
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4567
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4486, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4489, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* %30, metadata !4492, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 -1, metadata !4493, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 -1, metadata !4494, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* null, metadata !4495, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* %14, metadata !4496, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8 0, metadata !4497, metadata !DIExpression()), !dbg !4568
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #21, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %39, metadata !4425, metadata !DIExpression()), !dbg !4554
  %40 = load i24, i24* %15, align 8, !dbg !4570
  %41 = and i24 %40, 256, !dbg !4570
  %42 = icmp eq i24 %41, 0, !dbg !4570
  br i1 %42, label %51, label %43, !dbg !4572

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4573
  call void @llvm.dbg.value(metadata i8* %44, metadata !4426, metadata !DIExpression()), !dbg !4554
  %45 = bitcast i8* %27 to i32*, !dbg !4573
  %46 = load i32, i32* %45, align 4, !dbg !4573
  call void @llvm.dbg.value(metadata i32 %46, metadata !4493, metadata !DIExpression()), !dbg !4568
  %47 = icmp slt i32 %46, 0, !dbg !4575
  br i1 %47, label %48, label %56, !dbg !4577

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4578
  store i24 %49, i24* %15, align 8, !dbg !4578
  %50 = sub nsw i32 0, %46, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %50, metadata !4493, metadata !DIExpression()), !dbg !4568
  br label %56, !dbg !4581

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4582
  %53 = icmp eq i24 %52, 0, !dbg !4582
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4584
  br label %56, !dbg !4584

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4585
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4568
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %58, metadata !4493, metadata !DIExpression()), !dbg !4568
  %60 = and i24 %57, 1024, !dbg !4585
  %61 = icmp eq i24 %60, 0, !dbg !4585
  br i1 %61, label %69, label %62, !dbg !4586

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4587
  call void @llvm.dbg.value(metadata i8* %63, metadata !4426, metadata !DIExpression()), !dbg !4554
  %64 = bitcast i8* %59 to i32*, !dbg !4587
  %65 = load i32, i32* %64, align 4, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %65, metadata !4498, metadata !DIExpression()), !dbg !4588
  %66 = icmp slt i32 %65, 0, !dbg !4589
  br i1 %66, label %67, label %74, !dbg !4591

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4592
  store i24 %68, i24* %15, align 8, !dbg !4592
  br label %74, !dbg !4594

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4595
  %71 = icmp eq i24 %70, 0, !dbg !4595
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4597
  br label %74, !dbg !4597

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4598
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4568
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4568
  call void @llvm.dbg.value(metadata i8* %77, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %76, metadata !4494, metadata !DIExpression()), !dbg !4568
  store i32 0, i32* %16, align 4, !dbg !4599
  store i32 0, i32* %17, align 8, !dbg !4600
  %78 = lshr i24 %75, 16, !dbg !4598
  call void @llvm.dbg.value(metadata i24 %78, metadata !4501, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4568
  %79 = lshr i24 %75, 11, !dbg !4601
  %80 = and i24 %79, 15, !dbg !4601
  %81 = zext i24 %80 to i32, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %81, metadata !4502, metadata !DIExpression()), !dbg !4568
  %82 = trunc i24 %78 to i3, !dbg !4602
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4602

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4603

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %85, metadata !4426, metadata !DIExpression()), !dbg !4554
  %86 = bitcast i8* %77 to i32*, !dbg !4606
  %87 = load i32, i32* %86, align 4, !dbg !4606
  %88 = sext i32 %87 to i64, !dbg !4606
  store i64 %88, i64* %20, align 8, !dbg !4608
  br label %115, !dbg !4609

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %90, metadata !4426, metadata !DIExpression()), !dbg !4554
  %91 = bitcast i8* %77 to i32*, !dbg !4610
  %92 = load i32, i32* %91, align 4, !dbg !4610
  %93 = sext i32 %92 to i64, !dbg !4610
  store i64 %93, i64* %20, align 8, !dbg !4613
  br label %115, !dbg !4614

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4615
  %96 = add i32 %95, 7, !dbg !4615
  %97 = and i32 %96, -8, !dbg !4615
  %98 = inttoptr i32 %97 to i8*, !dbg !4615
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %99, metadata !4426, metadata !DIExpression()), !dbg !4554
  %100 = inttoptr i32 %97 to i64*, !dbg !4615
  %101 = load i64, i64* %100, align 8, !dbg !4615
  store i64 %101, i64* %20, align 8, !dbg !4616
  br label %115, !dbg !4617

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4618
  %104 = add i32 %103, 7, !dbg !4618
  %105 = and i32 %104, -8, !dbg !4618
  %106 = inttoptr i32 %105 to i8*, !dbg !4618
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4618
  call void @llvm.dbg.value(metadata i8* %107, metadata !4426, metadata !DIExpression()), !dbg !4554
  %108 = inttoptr i32 %105 to i64*, !dbg !4618
  %109 = load i64, i64* %108, align 8, !dbg !4618
  store i64 %109, i64* %20, align 8, !dbg !4619
  br label %115, !dbg !4620

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4621
  call void @llvm.dbg.value(metadata i8* %111, metadata !4426, metadata !DIExpression()), !dbg !4554
  %112 = bitcast i8* %77 to i32*, !dbg !4621
  %113 = load i32, i32* %112, align 4, !dbg !4621
  %114 = sext i32 %113 to i64, !dbg !4622
  store i64 %114, i64* %20, align 8, !dbg !4623
  br label %115, !dbg !4624

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4625
  call void @llvm.dbg.value(metadata i8* %117, metadata !4426, metadata !DIExpression()), !dbg !4554
  %118 = trunc i24 %79 to i4, !dbg !4626
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4626

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4627
  %121 = ashr exact i64 %120, 56, !dbg !4627
  store i64 %121, i64* %20, align 8, !dbg !4630
  br label %177, !dbg !4631

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4632
  %124 = ashr exact i64 %123, 48, !dbg !4632
  store i64 %124, i64* %20, align 8, !dbg !4635
  br label %177, !dbg !4636

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4637

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %127, metadata !4426, metadata !DIExpression()), !dbg !4554
  %128 = bitcast i8* %77 to i32*, !dbg !4640
  %129 = load i32, i32* %128, align 4, !dbg !4640
  %130 = zext i32 %129 to i64, !dbg !4640
  store i64 %130, i64* %20, align 8, !dbg !4642
  br label %157, !dbg !4643

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %132, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %132, metadata !4426, metadata !DIExpression()), !dbg !4554
  %133 = bitcast i8* %77 to i32*, !dbg !4644
  %134 = load i32, i32* %133, align 4, !dbg !4644
  %135 = zext i32 %134 to i64, !dbg !4644
  store i64 %135, i64* %20, align 8, !dbg !4644
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4646
  %138 = add i32 %137, 7, !dbg !4646
  %139 = and i32 %138, -8, !dbg !4646
  %140 = inttoptr i32 %139 to i8*, !dbg !4646
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4646
  call void @llvm.dbg.value(metadata i8* %141, metadata !4426, metadata !DIExpression()), !dbg !4554
  %142 = inttoptr i32 %139 to i64*, !dbg !4646
  %143 = load i64, i64* %142, align 8, !dbg !4646
  store i64 %143, i64* %20, align 8, !dbg !4647
  br label %157, !dbg !4648

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4649
  %146 = add i32 %145, 7, !dbg !4649
  %147 = and i32 %146, -8, !dbg !4649
  %148 = inttoptr i32 %147 to i8*, !dbg !4649
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4649
  call void @llvm.dbg.value(metadata i8* %149, metadata !4426, metadata !DIExpression()), !dbg !4554
  %150 = inttoptr i32 %147 to i64*, !dbg !4649
  %151 = load i64, i64* %150, align 8, !dbg !4649
  store i64 %151, i64* %20, align 8, !dbg !4650
  br label %157, !dbg !4651

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4652
  call void @llvm.dbg.value(metadata i8* %153, metadata !4426, metadata !DIExpression()), !dbg !4554
  %154 = bitcast i8* %77 to i32*, !dbg !4652
  %155 = load i32, i32* %154, align 4, !dbg !4652
  %156 = zext i32 %155 to i64, !dbg !4653
  store i64 %156, i64* %20, align 8, !dbg !4654
  br label %157, !dbg !4655

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4656
  call void @llvm.dbg.value(metadata i8* %159, metadata !4426, metadata !DIExpression()), !dbg !4554
  %160 = trunc i24 %79 to i4, !dbg !4657
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4657

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4658
  store i64 %162, i64* %20, align 8, !dbg !4661
  br label %177, !dbg !4662

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4663
  store i64 %164, i64* %20, align 8, !dbg !4666
  br label %177, !dbg !4667

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4668
  %167 = add i32 %166, 7, !dbg !4668
  %168 = and i32 %167, -8, !dbg !4668
  %169 = inttoptr i32 %168 to i8*, !dbg !4668
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %170, metadata !4426, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %170, metadata !4426, metadata !DIExpression()), !dbg !4554
  %171 = inttoptr i32 %168 to double*, !dbg !4668
  %172 = load double, double* %171, align 8, !dbg !4668
  store double %172, double* %19, align 8, !dbg !4668
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %174, metadata !4426, metadata !DIExpression()), !dbg !4554
  %175 = bitcast i8* %77 to i8**, !dbg !4672
  %176 = load i8*, i8** %175, align 4, !dbg !4672
  store i8* %176, i8** %18, align 8, !dbg !4675
  br label %177, !dbg !4676

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4568
  call void @llvm.dbg.value(metadata i8* %178, metadata !4426, metadata !DIExpression()), !dbg !4554
  %179 = and i24 %75, 3, !dbg !4677
  %180 = icmp eq i24 %179, 0, !dbg !4677
  br i1 %180, label %185, label %181, !dbg !4677

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #21, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %182, metadata !4503, metadata !DIExpression()), !dbg !4679
  %183 = icmp slt i32 %182, 0, !dbg !4680
  %184 = add i32 %182, %29, !dbg !4678
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4682
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4683

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #23, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %188, metadata !4507, metadata !DIExpression()), !dbg !4685
  %189 = icmp slt i32 %188, 0, !dbg !4686
  %190 = add i32 %29, 1, !dbg !4684
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %192, metadata !4495, metadata !DIExpression()), !dbg !4568
  %193 = icmp sgt i32 %76, -1, !dbg !4689
  br i1 %193, label %194, label %196, !dbg !4691

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #23, !dbg !4692
  call void @llvm.dbg.value(metadata i32 %195, metadata !4510, metadata !DIExpression()), !dbg !4694
  br label %241, !dbg !4695

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #23, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %197, metadata !4510, metadata !DIExpression()), !dbg !4694
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4495, metadata !DIExpression()), !dbg !4568
  %199 = load i64, i64* %20, align 8, !dbg !4698
  %200 = trunc i64 %199 to i8, !dbg !4699
  store i8 %200, i8* %10, align 1, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %23, metadata !4496, metadata !DIExpression()), !dbg !4568
  br label %245, !dbg !4701

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4702
  %203 = icmp eq i24 %202, 0, !dbg !4702
  %204 = trunc i24 %75 to i8, !dbg !4704
  %205 = shl i8 %204, 1, !dbg !4704
  %206 = and i8 %205, 32, !dbg !4704
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4704
  call void @llvm.dbg.value(metadata i8 %207, metadata !4497, metadata !DIExpression()), !dbg !4568
  %208 = load i64, i64* %20, align 8, !dbg !4705
  call void @llvm.dbg.value(metadata i64 %208, metadata !4433, metadata !DIExpression()), !dbg !4554
  %209 = icmp slt i64 %208, 0, !dbg !4706
  br i1 %209, label %210, label %212, !dbg !4708

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4497, metadata !DIExpression()), !dbg !4568
  %211 = sub nsw i64 0, %208, !dbg !4709
  store i64 %211, i64* %20, align 8, !dbg !4711
  br label %212, !dbg !4712

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4568
  call void @llvm.dbg.value(metadata i8 %213, metadata !4497, metadata !DIExpression()), !dbg !4568
  %214 = load i64, i64* %20, align 8, !dbg !4713
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4714
  call void @llvm.dbg.value(metadata i8* %215, metadata !4495, metadata !DIExpression()), !dbg !4568
  br label %216, !dbg !4715

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4716
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4717
  call void @llvm.dbg.value(metadata i8* %218, metadata !4495, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8 %217, metadata !4497, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.label(metadata !4553), !dbg !4718
  %219 = icmp sgt i32 %76, -1, !dbg !4719
  br i1 %219, label %222, label %220, !dbg !4720

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4721
  br label %245, !dbg !4720

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4723
  %224 = sub i32 %22, %223, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %224, metadata !4512, metadata !DIExpression()), !dbg !4724
  %225 = load i24, i24* %15, align 8, !dbg !4725
  %226 = and i24 %225, -65, !dbg !4725
  store i24 %226, i24* %15, align 8, !dbg !4725
  %227 = icmp ugt i32 %76, %224, !dbg !4726
  br i1 %227, label %228, label %245, !dbg !4728

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4729
  store i32 %229, i32* %16, align 4, !dbg !4731
  br label %245, !dbg !4732

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4733
  %232 = icmp eq i8* %231, null, !dbg !4735
  br i1 %232, label %245, label %233, !dbg !4736

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4737
  %235 = zext i32 %234 to i64, !dbg !4737
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4739
  call void @llvm.dbg.value(metadata i8* %236, metadata !4495, metadata !DIExpression()), !dbg !4568
  %237 = load i24, i24* %15, align 8, !dbg !4740
  %238 = or i24 %237, 1048576, !dbg !4740
  store i24 %238, i24* %15, align 8, !dbg !4740
  store i8 120, i8* %21, align 1, !dbg !4741
  br label %216, !dbg !4742

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4743
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #21, !dbg !4746
  br label %363, !dbg !4747

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4748
  call void @llvm.dbg.value(metadata i32 %242, metadata !4510, metadata !DIExpression()), !dbg !4694
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4749
  call void @llvm.dbg.value(metadata i32 -1, metadata !4494, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %29, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %192, metadata !4495, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8* %243, metadata !4496, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8 0, metadata !4497, metadata !DIExpression()), !dbg !4568
  %244 = icmp eq i8* %192, null, !dbg !4750
  br i1 %244, label %363, label %245, !dbg !4752, !llvm.loop !4564

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4721
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4516, metadata !DIExpression()), !dbg !4568
  %250 = zext i8 %249 to i32, !dbg !4753
  %251 = icmp eq i8 %249, 0, !dbg !4755
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4568
  %252 = icmp sgt i32 %58, 0, !dbg !4756
  br i1 %252, label %253, label %302, !dbg !4757

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4721
  %255 = icmp eq i24 %254, 0, !dbg !4721
  %256 = ptrtoint i8* %248 to i32, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  %257 = ptrtoint i8* %247 to i32, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  %258 = xor i1 %251, true, !dbg !4759
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  %259 = sext i1 %258 to i32, !dbg !4759
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  %260 = lshr i24 %246, 19, !dbg !4760
  %261 = and i24 %260, 1, !dbg !4760
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4760
  %263 = zext i24 %262 to i32, !dbg !4760
  %264 = add i32 %257, %259, !dbg !4760
  %265 = add i32 %256, %263, !dbg !4760
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  %266 = and i24 %246, 4194304, !dbg !4761
  %267 = icmp eq i24 %266, 0, !dbg !4761
  %268 = load i32, i32* %16, align 4, !dbg !4763
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4515, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4568
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4568
  %269 = load i32, i32* %17, align 8, !dbg !4764
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4764
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4568
  %271 = add i32 %264, %58, !dbg !4764
  %272 = add i32 %265, %268, !dbg !4764
  %273 = add i32 %272, %270, !dbg !4765
  %274 = sub i32 %271, %273, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %274, metadata !4493, metadata !DIExpression()), !dbg !4568
  %275 = and i24 %246, 4, !dbg !4766
  %276 = icmp eq i24 %275, 0, !dbg !4766
  br i1 %276, label %277, label %302, !dbg !4767

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4517, metadata !DIExpression()), !dbg !4768
  %278 = and i24 %246, 64, !dbg !4769
  %279 = icmp eq i24 %278, 0, !dbg !4769
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4770
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4770
  %282 = select i1 %279, i32 32, i32 48, !dbg !4770
  br i1 %280, label %287, label %283, !dbg !4770

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #23, !dbg !4771
  call void @llvm.dbg.value(metadata i32 %284, metadata !4522, metadata !DIExpression()), !dbg !4772
  %285 = icmp slt i32 %284, 0, !dbg !4773
  %286 = add i32 %29, 1, !dbg !4771
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4568
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %290, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8 undef, metadata !4517, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.value(metadata i8 %288, metadata !4497, metadata !DIExpression()), !dbg !4568
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4775
  %292 = add i32 %291, -1, !dbg !4775
  br label %293, !dbg !4775

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4776
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %295, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %294, metadata !4493, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %294, metadata !4493, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4568
  %296 = icmp sgt i32 %294, 0, !dbg !4777
  br i1 %296, label %297, label %302, !dbg !4775

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %298, metadata !4493, metadata !DIExpression()), !dbg !4568
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #23, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %299, metadata !4528, metadata !DIExpression()), !dbg !4780
  %300 = icmp slt i32 %299, 0, !dbg !4781
  %301 = add i32 %295, 1, !dbg !4779
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %300, label %361, label %293, !llvm.loop !4783

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4568
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4568
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %305, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %304, metadata !4493, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i8 %303, metadata !4497, metadata !DIExpression()), !dbg !4568
  %306 = icmp eq i8 %303, 0, !dbg !4785
  br i1 %306, label %312, label %307, !dbg !4786

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4787
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #23, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %309, metadata !4531, metadata !DIExpression()), !dbg !4789
  %310 = icmp slt i32 %309, 0, !dbg !4790
  %311 = add i32 %305, 1, !dbg !4788
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %313, metadata !4432, metadata !DIExpression()), !dbg !4554
  %314 = lshr i24 %246, 20, !dbg !4792
  %315 = lshr i24 %246, 19, !dbg !4793
  %316 = or i24 %314, %315, !dbg !4794
  %317 = and i24 %316, 1, !dbg !4794
  %318 = icmp eq i24 %317, 0, !dbg !4794
  br i1 %318, label %323, label %319, !dbg !4795

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %320, metadata !4535, metadata !DIExpression()), !dbg !4797
  %321 = icmp slt i32 %320, 0, !dbg !4798
  %322 = add i32 %313, 1, !dbg !4796
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %324, metadata !4432, metadata !DIExpression()), !dbg !4554
  %325 = and i24 %246, 1048576, !dbg !4800
  %326 = icmp eq i24 %325, 0, !dbg !4800
  br i1 %326, label %333, label %327, !dbg !4801

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4802
  %329 = zext i8 %328 to i32, !dbg !4802
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #23, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %330, metadata !4541, metadata !DIExpression()), !dbg !4803
  %331 = icmp slt i32 %330, 0, !dbg !4804
  %332 = add i32 %324, 1, !dbg !4802
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %334, metadata !4432, metadata !DIExpression()), !dbg !4554
  %335 = load i32, i32* %16, align 4, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %335, metadata !4516, metadata !DIExpression()), !dbg !4568
  br label %336, !dbg !4807

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4808
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %338, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %337, metadata !4516, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4568
  %339 = icmp sgt i32 %337, 0, !dbg !4809
  br i1 %339, label %340, label %345, !dbg !4807

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %341, metadata !4516, metadata !DIExpression()), !dbg !4568
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #23, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %342, metadata !4545, metadata !DIExpression()), !dbg !4812
  %343 = icmp slt i32 %342, 0, !dbg !4813
  %344 = add i32 %338, 1, !dbg !4811
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %343, label %361, label %336, !llvm.loop !4815

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #21, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %346, metadata !4548, metadata !DIExpression()), !dbg !4818
  %347 = icmp slt i32 %346, 0, !dbg !4819
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %349, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %304, metadata !4493, metadata !DIExpression()), !dbg !4568
  %350 = icmp sgt i32 %304, 0, !dbg !4821
  br i1 %350, label %351, label %363, !dbg !4822

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4822
  %353 = add i32 %352, %338, !dbg !4822
  br label %354, !dbg !4822

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %355, metadata !4493, metadata !DIExpression()), !dbg !4568
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #23, !dbg !4823
  call void @llvm.dbg.value(metadata i32 %356, metadata !4550, metadata !DIExpression()), !dbg !4824
  %357 = icmp slt i32 %356, 0, !dbg !4825
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4827
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4554
  call void @llvm.dbg.value(metadata i32 %359, metadata !4493, metadata !DIExpression()), !dbg !4568
  %360 = icmp sgt i32 %355, 1, !dbg !4821
  br i1 %360, label %354, label %363, !dbg !4822, !llvm.loop !4828

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4565
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4558
  call void @llvm.dbg.value(metadata i32 %364, metadata !4432, metadata !DIExpression()), !dbg !4554
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4565
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4554
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4830
  ret i32 %366, !dbg !4830
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !4831 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4835, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i8* %1, metadata !4836, metadata !DIExpression()), !dbg !4837
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4838
  store i24 0, i24* %3, align 4, !dbg !4838
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4838
  store i8 0, i8* %4, align 1, !dbg !4838
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4838
  store i32 0, i32* %5, align 4, !dbg !4838
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4838
  store i32 0, i32* %6, align 4, !dbg !4838
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %7, metadata !4836, metadata !DIExpression()), !dbg !4837
  %8 = load i8, i8* %7, align 1, !dbg !4840
  %9 = icmp eq i8 %8, 37, !dbg !4842
  br i1 %9, label %10, label %12, !dbg !4843

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %11, metadata !4836, metadata !DIExpression()), !dbg !4837
  store i8 37, i8* %4, align 1, !dbg !4846
  br label %18, !dbg !4847

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #21, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %13, metadata !4836, metadata !DIExpression()), !dbg !4837
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #21, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %14, metadata !4836, metadata !DIExpression()), !dbg !4837
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #21, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %15, metadata !4836, metadata !DIExpression()), !dbg !4837
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #21, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %16, metadata !4836, metadata !DIExpression()), !dbg !4837
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #21, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %17, metadata !4836, metadata !DIExpression()), !dbg !4837
  br label %18, !dbg !4853

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4837
  ret i8* %19, !dbg !4854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4855 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4859, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata i8* %1, metadata !4860, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata i8* %2, metadata !4861, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata i8* %3, metadata !4862, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata i32 0, metadata !4863, metadata !DIExpression()), !dbg !4866
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4867

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4868
  call void @llvm.dbg.value(metadata i32 %9, metadata !4863, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata i8* %8, metadata !4861, metadata !DIExpression()), !dbg !4866
  %10 = icmp ult i8* %8, %3, !dbg !4869
  br i1 %10, label %11, label %13, !dbg !4870

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4871
  br label %17, !dbg !4870

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4872

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4873
  %16 = icmp eq i8 %15, 0, !dbg !4872
  br i1 %16, label %24, label %17, !dbg !4867

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4871
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %19, metadata !4861, metadata !DIExpression()), !dbg !4866
  %20 = zext i8 %18 to i32, !dbg !4875
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #23, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %21, metadata !4864, metadata !DIExpression()), !dbg !4877
  %22 = icmp slt i32 %21, 0, !dbg !4878
  %23 = add i32 %9, 1, !dbg !4880
  call void @llvm.dbg.value(metadata i32 undef, metadata !4863, metadata !DIExpression()), !dbg !4866
  br i1 %22, label %24, label %7, !llvm.loop !4881

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4866
  ret i32 %25, !dbg !4883
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !4884 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4888, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4889, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i8* %2, metadata !4890, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i8* %3, metadata !4891, metadata !DIExpression()), !dbg !4898
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4899
  %6 = load i8, i8* %5, align 1, !dbg !4899
  %7 = zext i8 %6 to i32, !dbg !4900
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #21, !dbg !4901
  %9 = icmp eq i32 %8, 0, !dbg !4901
  call void @llvm.dbg.value(metadata i1 %9, metadata !4892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4898
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #21, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %10, metadata !4893, metadata !DIExpression()), !dbg !4898
  %11 = ptrtoint i8* %3 to i32, !dbg !4903
  %12 = ptrtoint i8* %2 to i32, !dbg !4903
  %13 = sub i32 %11, %12, !dbg !4903
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4904
  call void @llvm.dbg.value(metadata i8* %14, metadata !4895, metadata !DIExpression()), !dbg !4898
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4905

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4898
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4888, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i8* %18, metadata !4895, metadata !DIExpression()), !dbg !4898
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4906
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %25, metadata !4896, metadata !DIExpression()), !dbg !4908
  %26 = icmp ult i32 %25, 10, !dbg !4909
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4910
  %28 = add i32 %27, %25, !dbg !4908
  %29 = trunc i32 %28 to i8, !dbg !4910
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4911
  call void @llvm.dbg.value(metadata i8* %30, metadata !4895, metadata !DIExpression()), !dbg !4898
  store i8 %29, i8* %30, align 1, !dbg !4912
  call void @llvm.dbg.value(metadata i64 %22, metadata !4888, metadata !DIExpression()), !dbg !4898
  %31 = icmp uge i64 %19, %15, !dbg !4913
  %32 = icmp ugt i8* %30, %2, !dbg !4914
  %33 = and i1 %31, %32, !dbg !4914
  br i1 %33, label %17, label %34, !dbg !4915, !llvm.loop !4916

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4918
  %36 = load i24, i24* %35, align 4, !dbg !4918
  %37 = and i24 %36, 32, !dbg !4918
  %38 = icmp eq i24 %37, 0, !dbg !4918
  br i1 %38, label %44, label %39, !dbg !4920

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4921

40:                                               ; preds = %39
  br label %41, !dbg !4923

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4927
  store i24 %43, i24* %35, align 4, !dbg !4927
  br label %44, !dbg !4928

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4928
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !4929 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4935, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %1, metadata !4936, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %2, metadata !4937, metadata !DIExpression()), !dbg !4938
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4939
  %5 = load i24, i24* %4, align 4, !dbg !4939
  %6 = lshr i24 %5, 11, !dbg !4939
  %7 = and i24 %6, 15, !dbg !4939
  %8 = zext i24 %7 to i32, !dbg !4939
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4940

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4941
  store i32 %2, i32* %10, align 4, !dbg !4943
  br label %28, !dbg !4944

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4945
  store i8 %12, i8* %1, align 1, !dbg !4946
  br label %28, !dbg !4947

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4948
  %15 = bitcast i8* %1 to i16*, !dbg !4949
  store i16 %14, i16* %15, align 2, !dbg !4950
  br label %28, !dbg !4951

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4952
  store i32 %2, i32* %17, align 4, !dbg !4953
  br label %28, !dbg !4954

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4955
  %20 = bitcast i8* %1 to i64*, !dbg !4956
  store i64 %19, i64* %20, align 8, !dbg !4957
  br label %28, !dbg !4958

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4959
  %23 = bitcast i8* %1 to i64*, !dbg !4960
  store i64 %22, i64* %23, align 8, !dbg !4961
  br label %28, !dbg !4962

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4963
  store i32 %2, i32* %25, align 4, !dbg !4964
  br label %28, !dbg !4965

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4966
  store i32 %2, i32* %27, align 4, !dbg !4967
  br label %28, !dbg !4968

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4969
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4973, metadata !DIExpression()), !dbg !4974
  %2 = add i32 %0, -65, !dbg !4975
  %3 = icmp ult i32 %2, 26, !dbg !4976
  %4 = zext i1 %3 to i32, !dbg !4976
  ret i32 %4, !dbg !4977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4978 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4982, metadata !DIExpression()), !dbg !4983
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4984

2:                                                ; preds = %1
  br label %4, !dbg !4985

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4987

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4988
  ret i32 %5, !dbg !4989
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !4990 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4992, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %1, metadata !4993, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8 1, metadata !4994, metadata !DIExpression()), !dbg !4995
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4996

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %5, metadata !4993, metadata !DIExpression()), !dbg !4995
  %6 = load i8, i8* %5, align 1, !dbg !4997
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4999

7:                                                ; preds = %4
  br label %11, !dbg !5000

8:                                                ; preds = %4
  br label %11, !dbg !5002

9:                                                ; preds = %4
  br label %11, !dbg !5003

10:                                               ; preds = %4
  br label %11, !dbg !5004

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5005
  %14 = or i24 %13, %12, !dbg !5005
  store i24 %14, i24* %3, align 4, !dbg !5005
  call void @llvm.dbg.value(metadata i8 poison, metadata !4994, metadata !DIExpression()), !dbg !4995
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4993, metadata !DIExpression()), !dbg !4995
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.value(metadata i8* %15, metadata !4993, metadata !DIExpression()), !dbg !4995
  %17 = load i24, i24* %3, align 4, !dbg !5006
  %18 = and i24 %17, 68, !dbg !5008
  %19 = icmp eq i24 %18, 68, !dbg !5008
  br i1 %19, label %20, label %22, !dbg !5008

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5009
  store i24 %21, i24* %3, align 4, !dbg !5009
  br label %22, !dbg !5011

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5013 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5015, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5019
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5020
  %5 = load i24, i24* %4, align 4, !dbg !5021
  %6 = or i24 %5, 128, !dbg !5021
  store i24 %6, i24* %4, align 4, !dbg !5021
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5019
  %7 = load i8, i8* %1, align 1, !dbg !5022
  %8 = icmp eq i8 %7, 42, !dbg !5024
  br i1 %8, label %9, label %12, !dbg !5025

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5026
  store i24 %10, i24* %4, align 4, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5019
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %11, metadata !5016, metadata !DIExpression()), !dbg !5019
  store i8* %11, i8** %3, align 4, !dbg !5028
  br label %29, !dbg !5029

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5017, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8** %3, metadata !5016, metadata !DIExpression(DW_OP_deref)), !dbg !5019
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %13, metadata !5018, metadata !DIExpression()), !dbg !5019
  %14 = load i8*, i8** %3, align 4, !dbg !5031
  call void @llvm.dbg.value(metadata i8* %14, metadata !5016, metadata !DIExpression()), !dbg !5019
  %15 = icmp eq i8* %14, %1, !dbg !5033
  br i1 %15, label %29, label %16, !dbg !5034

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5035
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5037
  store i32 %13, i32* %18, align 4, !dbg !5038
  %19 = lshr i32 %13, 31, !dbg !5039
  %20 = lshr i24 %17, 1, !dbg !5040
  %21 = and i24 %20, 1, !dbg !5040
  %22 = zext i24 %21 to i32, !dbg !5040
  %23 = or i32 %19, %22, !dbg !5040
  %24 = trunc i32 %23 to i24, !dbg !5040
  %25 = shl nuw nsw i24 %24, 1, !dbg !5040
  %26 = and i24 %17, -131, !dbg !5040
  %27 = or i24 %26, 128, !dbg !5040
  %28 = or i24 %25, %27, !dbg !5040
  store i24 %28, i24* %4, align 4, !dbg !5040
  br label %29, !dbg !5041

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5019
  ret i8* %30, !dbg !5042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5043 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5045, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i8* %1, metadata !5046, metadata !DIExpression()), !dbg !5048
  %4 = load i8, i8* %1, align 1, !dbg !5049
  %5 = icmp eq i8 %4, 46, !dbg !5050
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5051
  %7 = load i24, i24* %6, align 4, !dbg !5052
  %8 = select i1 %5, i24 512, i24 0, !dbg !5052
  %9 = and i24 %7, -513, !dbg !5052
  %10 = or i24 %9, %8, !dbg !5052
  store i24 %10, i24* %6, align 4, !dbg !5052
  br i1 %5, label %11, label %32, !dbg !5053

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5046, metadata !DIExpression()), !dbg !5048
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %12, metadata !5046, metadata !DIExpression()), !dbg !5048
  store i8* %12, i8** %3, align 4, !dbg !5054
  %13 = load i8, i8* %12, align 1, !dbg !5055
  %14 = icmp eq i8 %13, 42, !dbg !5057
  br i1 %14, label %15, label %18, !dbg !5058

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5059
  store i24 %16, i24* %6, align 4, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %12, metadata !5046, metadata !DIExpression()), !dbg !5048
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %17, metadata !5046, metadata !DIExpression()), !dbg !5048
  store i8* %17, i8** %3, align 4, !dbg !5061
  br label %32, !dbg !5062

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5046, metadata !DIExpression(DW_OP_deref)), !dbg !5048
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !5063
  call void @llvm.dbg.value(metadata i32 %19, metadata !5047, metadata !DIExpression()), !dbg !5048
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5064
  store i32 %19, i32* %20, align 4, !dbg !5065
  %21 = lshr i32 %19, 31, !dbg !5066
  %22 = load i24, i24* %6, align 4, !dbg !5067
  %23 = lshr i24 %22, 1, !dbg !5067
  %24 = and i24 %23, 1, !dbg !5067
  %25 = zext i24 %24 to i32, !dbg !5067
  %26 = or i32 %21, %25, !dbg !5067
  %27 = trunc i32 %26 to i24, !dbg !5067
  %28 = shl nuw nsw i24 %27, 1, !dbg !5067
  %29 = and i24 %22, -3, !dbg !5067
  %30 = or i24 %28, %29, !dbg !5067
  store i24 %30, i24* %6, align 4, !dbg !5067
  %31 = load i8*, i8** %3, align 4, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %31, metadata !5046, metadata !DIExpression()), !dbg !5048
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5048
  ret i8* %33, !dbg !5069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5070 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5072, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.value(metadata i8* %1, metadata !5073, metadata !DIExpression()), !dbg !5074
  %3 = load i8, i8* %1, align 1, !dbg !5075
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5076

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %5, metadata !5073, metadata !DIExpression()), !dbg !5074
  %6 = load i8, i8* %5, align 1, !dbg !5080
  %7 = icmp eq i8 %6, 104, !dbg !5081
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5082
  %9 = load i24, i24* %8, align 4, !dbg !5082
  %10 = and i24 %9, -30721, !dbg !5082
  br i1 %7, label %11, label %14, !dbg !5083

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5084
  store i24 %12, i24* %8, align 4, !dbg !5084
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %13, metadata !5073, metadata !DIExpression()), !dbg !5074
  br label %56, !dbg !5087

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5088
  store i24 %15, i24* %8, align 4, !dbg !5088
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %17, metadata !5073, metadata !DIExpression()), !dbg !5074
  %18 = load i8, i8* %17, align 1, !dbg !5092
  %19 = icmp eq i8 %18, 108, !dbg !5093
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5094
  %21 = load i24, i24* %20, align 4, !dbg !5094
  %22 = and i24 %21, -30721, !dbg !5094
  br i1 %19, label %23, label %26, !dbg !5095

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5096
  store i24 %24, i24* %20, align 4, !dbg !5096
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %25, metadata !5073, metadata !DIExpression()), !dbg !5074
  br label %56, !dbg !5099

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5100
  store i24 %27, i24* %20, align 4, !dbg !5100
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5102
  %30 = load i24, i24* %29, align 4, !dbg !5103
  %31 = and i24 %30, -30721, !dbg !5103
  %32 = or i24 %31, 10240, !dbg !5103
  store i24 %32, i24* %29, align 4, !dbg !5103
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %33, metadata !5073, metadata !DIExpression()), !dbg !5074
  br label %56, !dbg !5105

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5106
  %36 = load i24, i24* %35, align 4, !dbg !5107
  %37 = and i24 %36, -30721, !dbg !5107
  %38 = or i24 %37, 12288, !dbg !5107
  store i24 %38, i24* %35, align 4, !dbg !5107
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5108
  call void @llvm.dbg.value(metadata i8* %39, metadata !5073, metadata !DIExpression()), !dbg !5074
  br label %56, !dbg !5109

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5110
  %42 = load i24, i24* %41, align 4, !dbg !5111
  %43 = and i24 %42, -30721, !dbg !5111
  %44 = or i24 %43, 14336, !dbg !5111
  store i24 %44, i24* %41, align 4, !dbg !5111
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %45, metadata !5073, metadata !DIExpression()), !dbg !5074
  br label %56, !dbg !5113

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5114
  %48 = load i24, i24* %47, align 4, !dbg !5115
  %49 = and i24 %48, -30723, !dbg !5115
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %50, metadata !5073, metadata !DIExpression()), !dbg !5074
  %51 = or i24 %49, 16386, !dbg !5117
  store i24 %51, i24* %47, align 4, !dbg !5117
  br label %56, !dbg !5118

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5119
  %54 = load i24, i24* %53, align 4, !dbg !5120
  %55 = and i24 %54, -30721, !dbg !5120
  store i24 %55, i24* %53, align 4, !dbg !5120
  br label %56, !dbg !5121

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5073, metadata !DIExpression()), !dbg !5074
  ret i8* %57, !dbg !5122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5123 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5125, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8* %1, metadata !5126, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8 0, metadata !5127, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8* %1, metadata !5126, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5130
  %3 = load i8, i8* %1, align 1, !dbg !5131
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5132
  store i8 %3, i8* %4, align 1, !dbg !5133
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5134

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5135

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5136
  %9 = load i24, i24* %8, align 4, !dbg !5136
  %10 = and i24 %9, -458753, !dbg !5136
  %11 = or i24 %10, %7, !dbg !5136
  call void @llvm.dbg.label(metadata !5128), !dbg !5137
  %12 = and i24 %9, 30720, !dbg !5138
  %13 = icmp eq i24 %12, 16384, !dbg !5138
  %14 = zext i1 %13 to i24, !dbg !5140
  %15 = or i24 %11, %14, !dbg !5140
  %16 = icmp eq i8 %3, 99, !dbg !5141
  br i1 %16, label %17, label %43, !dbg !5143

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5144
  %19 = icmp ne i24 %18, 0, !dbg !5144
  call void @llvm.dbg.value(metadata i1 %19, metadata !5127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5130
  br label %43, !dbg !5146

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %22 = load i24, i24* %21, align 4, !dbg !5148
  %23 = and i24 %22, -458753, !dbg !5148
  %24 = or i24 %23, 262144, !dbg !5148
  call void @llvm.dbg.value(metadata i8 1, metadata !5127, metadata !DIExpression()), !dbg !5130
  br label %43, !dbg !5149

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %27 = load i24, i24* %26, align 4, !dbg !5153
  %28 = and i24 %27, -458753, !dbg !5153
  %29 = or i24 %28, 196608, !dbg !5153
  %30 = and i24 %27, 30720, !dbg !5154
  %31 = icmp eq i24 %30, 16384, !dbg !5154
  br label %43, !dbg !5156

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %34 = load i24, i24* %33, align 4, !dbg !5158
  %35 = and i24 %34, -458753, !dbg !5158
  %36 = or i24 %35, 196608, !dbg !5158
  %37 = and i24 %34, 30720, !dbg !5159
  %38 = icmp ne i24 %37, 0, !dbg !5159
  br label %43, !dbg !5161

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5162
  %41 = load i24, i24* %40, align 4, !dbg !5163
  %42 = or i24 %41, 1, !dbg !5163
  br label %43, !dbg !5164

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5165
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5166
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5167
  call void @llvm.dbg.value(metadata i8* %48, metadata !5126, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8 poison, metadata !5127, metadata !DIExpression()), !dbg !5130
  %49 = lshr i24 %44, 1, !dbg !5165
  %50 = and i24 %49, 1, !dbg !5165
  %51 = zext i24 %50 to i32, !dbg !5165
  %52 = or i32 %51, %47, !dbg !5165
  %53 = trunc i32 %52 to i24, !dbg !5165
  %54 = shl nuw nsw i24 %53, 1, !dbg !5165
  %55 = and i24 %44, -3, !dbg !5165
  %56 = or i24 %54, %55, !dbg !5165
  store i24 %56, i24* %46, align 4, !dbg !5165
  ret i8* %48, !dbg !5168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !5169 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5174, metadata !DIExpression()), !dbg !5177
  %2 = load i8*, i8** %0, align 4, !dbg !5178
  call void @llvm.dbg.value(metadata i8* %2, metadata !5175, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i32 0, metadata !5176, metadata !DIExpression()), !dbg !5177
  %3 = load i8, i8* %2, align 1, !dbg !5179
  %4 = zext i8 %3 to i32, !dbg !5180
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #21, !dbg !5181
  %6 = icmp eq i32 %5, 0, !dbg !5182
  br i1 %6, label %19, label %7, !dbg !5182

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5176, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i8* %10, metadata !5175, metadata !DIExpression()), !dbg !5177
  %11 = mul i32 %9, 10, !dbg !5183
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %12, metadata !5175, metadata !DIExpression()), !dbg !5177
  %13 = add i32 %11, -48, !dbg !5186
  %14 = add i32 %13, %8, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %14, metadata !5176, metadata !DIExpression()), !dbg !5177
  %15 = load i8, i8* %12, align 1, !dbg !5179
  %16 = zext i8 %15 to i32, !dbg !5180
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #21, !dbg !5181
  %18 = icmp eq i32 %17, 0, !dbg !5182
  br i1 %18, label %19, label %7, !dbg !5182, !llvm.loop !5188

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5177
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5177
  store i8* %20, i8** %0, align 4, !dbg !5190
  ret i32 %21, !dbg !5191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5194, metadata !DIExpression()), !dbg !5195
  %2 = add i32 %0, -48, !dbg !5196
  %3 = icmp ult i32 %2, 10, !dbg !5197
  %4 = zext i1 %3 to i32, !dbg !5197
  ret i32 %4, !dbg !5198
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5204, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %1, metadata !5205, metadata !DIExpression()), !dbg !5206
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #20, !dbg !5207, !srcloc !5209
  ret void, !dbg !5210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5211 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5213, metadata !DIExpression()), !dbg !5221
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5222
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5222
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5214, metadata !DIExpression()), !dbg !5223
  call void @llvm.va_start(i8* nonnull %3), !dbg !5224
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5225
  %5 = load i32, i32* %4, align 4, !dbg !5225
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5225
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #23, !dbg !5225
  call void @llvm.va_end(i8* nonnull %3), !dbg !5226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5227
  ret void, !dbg !5227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5228 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #20, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #20, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #20, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #20, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #20, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #20, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #20, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #20, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #20, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #20, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #20, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #20, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #20, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #20, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #20, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #20, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #20, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #20, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #20, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #20, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #20, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #20, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #20, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #20, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #20, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #20, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #20, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #20, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #20, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #20, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #20, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #20, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #20, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #20, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #20, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #20, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #20, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #20, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #20, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #20, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #20, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #20, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #20, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #20, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #20, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #20, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #20, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #20, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #20, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #20, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #20, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #20, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #20, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #20, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #20, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #20, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #20, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #20, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #20, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #20, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #20, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #20, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #20, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #20, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #20, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #20, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #20, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #20, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #20, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #20, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #20, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #20, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #20, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #20, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #20, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #20, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #20, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #20, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #20, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #20, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #20, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #20, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #20, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #20, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #20, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #20, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #20, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #20, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #20, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #20, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #20, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #20, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #20, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #20, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #20, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #20, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #20, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #20, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #20, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #20, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #20, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #20, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #20, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #20, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #20, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #20, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #20, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #20, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #20, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #20, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #20, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #20, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #20, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #20, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #20, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #20, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #20, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #20, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #20, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #20, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #20, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #20, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #20, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #20, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,29\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #20, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,40\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #20, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #20, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #20, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #20, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #20, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #20, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #20, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #20, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #20, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_SCALABLE\0A\09.equ\09CONFIG_SCHED_SCALABLE,1\0A\09.type\09CONFIG_SCHED_SCALABLE,%object", ""() #20, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #20, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #20, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #20, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MONITOR\0A\09.equ\09CONFIG_THREAD_MONITOR,1\0A\09.type\09CONFIG_THREAD_MONITOR,%object", ""() #20, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #20, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #20, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #20, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #20, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #20, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #20, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #20, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #20, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #20, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #20, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #20, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #20, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #20, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #20, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #20, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #20, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #20, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #20, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #20, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #20, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #20, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #20, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #20, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #20, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #20, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #20, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #20, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #20, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #20, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #20, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #20, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #20, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #20, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #20, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #20, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #20, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #20, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #20, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #20, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #20, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #20, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #20, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #20, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #20, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #20, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #20, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #20, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #20, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #20, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #20, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #20, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #20, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #20, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #20, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #20, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #20, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #20, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #20, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #20, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #20, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #20, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #20, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #20, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #20, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #20, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_DEBUG_THREAD_INFO\0A\09.equ\09CONFIG_DEBUG_THREAD_INFO,1\0A\09.type\09CONFIG_DEBUG_THREAD_INFO,%object", ""() #20, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #20, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #20, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #20, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #20, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #20, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #20, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #20, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #20, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #20, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #20, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #20, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #20, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #20, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #20, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #20, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #20, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #20, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #20, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #20, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #20, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #20, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #20, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #20, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #20, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #20, !dbg !5698, !srcloc !5699
  ret void, !dbg !5700
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5703, metadata !DIExpression()), !dbg !5704
  tail call void @SOC_RdcInit() #21, !dbg !5705
  tail call void @SOC_ClockInit() #21, !dbg !5706
  tail call fastcc void @nxp_mcimx7_gpio_config() #21, !dbg !5707
  ret i32 0, !dbg !5708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #14 !dbg !5709 {
  tail call fastcc void @RDC_SetDomainID() #21, !dbg !5710
  ret void, !dbg !5711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5712 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #23, !dbg !5713
  tail call fastcc void @CCM_EnableRoot() #21, !dbg !5714
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #21, !dbg !5715
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #21, !dbg !5716
  tail call fastcc void @WDOG_DisablePowerdown() #21, !dbg !5717
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #21, !dbg !5718
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #21, !dbg !5719
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #21, !dbg !5720
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #21, !dbg !5721
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #21, !dbg !5722
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #21, !dbg !5723
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #21, !dbg !5724
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #21, !dbg !5725
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #21, !dbg !5726
  ret void, !dbg !5727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #14 !dbg !5728 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #21, !dbg !5729
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #21, !dbg !5730
  ret void, !dbg !5731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !5732 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5737, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i32 %0, metadata !5738, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i8 %1, metadata !5739, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i8 0, metadata !5740, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.value(metadata i8 0, metadata !5741, metadata !DIExpression()), !dbg !5742
  %3 = zext i8 %1 to i32, !dbg !5743
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5744
  store volatile i32 %3, i32* %4, align 4, !dbg !5745
  ret void, !dbg !5746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5747 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5751, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %0, metadata !5752, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.value(metadata i32 %1, metadata !5753, metadata !DIExpression()), !dbg !5754
  %3 = inttoptr i32 %0 to i32*, !dbg !5755
  store volatile i32 %1, i32* %3, align 4, !dbg !5756
  ret void, !dbg !5757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #14 !dbg !5758 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5762, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5763, metadata !DIExpression()), !dbg !5764
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5765
  ret void, !dbg !5766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #14 !dbg !5767 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5772, metadata !DIExpression()), !dbg !5773
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5774
  %2 = and i16 %1, -2, !dbg !5774
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5774
  ret void, !dbg !5775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #14 !dbg !5776 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5780, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 1, metadata !5781, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 1, metadata !5782, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8 0, metadata !5783, metadata !DIExpression()), !dbg !5784
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5785
  ret void, !dbg !5786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5836, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5837, metadata !DIExpression()), !dbg !5838
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #23, !dbg !5839
  ret void, !dbg !5840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5841 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5858, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5859, metadata !DIExpression()), !dbg !5861
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5862
  %4 = load i32, i32* %3, align 4, !dbg !5862
  call void @llvm.dbg.value(metadata i32 %4, metadata !5860, metadata !DIExpression()), !dbg !5861
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #21, !dbg !5863
  ret void, !dbg !5864
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5865 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5869, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i8* %0, metadata !5870, metadata !DIExpression()), !dbg !5872
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5873
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #20, !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5871, metadata !DIExpression()), !dbg !5874
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5874
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5875
  %5 = bitcast i8* %4 to i32*, !dbg !5875
  %6 = load i32, i32* %5, align 4, !dbg !5875
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5876
  store i32 %6, i32* %7, align 4, !dbg !5877
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #21, !dbg !5878
  unreachable, !dbg !5879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5885, metadata !DIExpression()), !dbg !5886
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !5887
  ret void, !dbg !5888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5893, metadata !DIExpression()), !dbg !5894
  %2 = icmp sgt i32 %0, -1, !dbg !5895
  br i1 %2, label %3, label %8, !dbg !5897

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5898, !srcloc !5900
  %4 = and i32 %0, 31, !dbg !5901
  %5 = shl nuw i32 1, %4, !dbg !5902
  %6 = lshr i32 %0, 5, !dbg !5903
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5904
  store volatile i32 %5, i32* %7, align 4, !dbg !5905
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5906, !srcloc !5907
  br label %8, !dbg !5908

8:                                                ; preds = %3, %1
  ret void, !dbg !5909
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5912, metadata !DIExpression()), !dbg !5913
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !5914
  ret void, !dbg !5915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5918, metadata !DIExpression()), !dbg !5919
  %2 = icmp sgt i32 %0, -1, !dbg !5920
  br i1 %2, label %3, label %8, !dbg !5922

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5923
  %5 = shl nuw i32 1, %4, !dbg !5925
  %6 = lshr i32 %0, 5, !dbg !5926
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5927
  store volatile i32 %5, i32* %7, align 4, !dbg !5928
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !5929, !srcloc !5933
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !5934, !srcloc !5937
  br label %8, !dbg !5938

8:                                                ; preds = %3, %1
  ret void, !dbg !5939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !5940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5944, metadata !DIExpression()), !dbg !5945
  %2 = lshr i32 %0, 5, !dbg !5946
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5947
  %4 = load volatile i32, i32* %3, align 4, !dbg !5947
  %5 = and i32 %0, 31, !dbg !5948
  %6 = shl nuw i32 1, %5, !dbg !5948
  %7 = and i32 %4, %6, !dbg !5949
  ret i32 %7, !dbg !5950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5955, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i32 %1, metadata !5956, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i32 %2, metadata !5957, metadata !DIExpression()), !dbg !5958
  %4 = add i32 %1, 1, !dbg !5959
  call void @llvm.dbg.value(metadata i32 %4, metadata !5956, metadata !DIExpression()), !dbg !5958
  %5 = icmp ult i32 %4, 16, !dbg !5962
  br i1 %5, label %7, label %6, !dbg !5965

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 94) #23, !dbg !5966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.33, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #23, !dbg !5966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.32, i32 0, i32 0), i32 noundef 94) #23, !dbg !5966
  unreachable, !dbg !5966

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #21, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5974, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %1, metadata !5975, metadata !DIExpression()), !dbg !5976
  %3 = trunc i32 %1 to i8, !dbg !5977
  %4 = shl i8 %3, 4, !dbg !5977
  %5 = and i32 %0, 15, !dbg !5979
  %6 = add nsw i32 %5, -4, !dbg !5979
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5979
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5979
  %9 = icmp slt i32 %0, 0, !dbg !5979
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5979
  store volatile i8 %4, i8* %10, align 1, !dbg !5977
  ret void, !dbg !5980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5983, metadata !DIExpression()), !dbg !5984
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #23, !dbg !5985
  ret void, !dbg !5986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5987 {
  tail call void @z_SysNmiOnReset() #23, !dbg !5989
  tail call void @z_arm_int_exit() #23, !dbg !5990
  ret void, !dbg !5991
}

; Function Attrs: optsize
declare !dbg !5992 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5993 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5995 {
  tail call fastcc void @relocate_vector_table() #21, !dbg !5997
  tail call fastcc void @z_arm_floating_point_init() #21, !dbg !5998
  tail call void @z_bss_zero() #23, !dbg !5999
  tail call void @z_data_copy() #23, !dbg !6000
  tail call void @z_arm_interrupt_init() #23, !dbg !6001
  tail call void @z_cstart() #24, !dbg !6002
  unreachable, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6003 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6004
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6005, !srcloc !6008
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6009, !srcloc !6012
  ret void, !dbg !6013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6014 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6015
  %2 = and i32 %1, -15728641, !dbg !6015
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6015
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #20, !dbg !6016, !srcloc !6021
  call void @llvm.dbg.value(metadata i32 %3, metadata !6019, metadata !DIExpression()) #20, !dbg !6022
  %4 = and i32 %3, -5, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %4, metadata !6024, metadata !DIExpression()) #20, !dbg !6029
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #20, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6033, !srcloc !6012
  ret void, !dbg !6035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6039, metadata !DIExpression()), !dbg !6040
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6041
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 9, i32 0, !dbg !6042
  store i32 %0, i32* %3, align 4, !dbg !6043
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6044
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 9, i32 1, !dbg !6045
  store i32 %4, i32* %5, align 4, !dbg !6046
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6047
  %7 = or i32 %6, 268435456, !dbg !6047
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6047
  call void @llvm.dbg.value(metadata i32 0, metadata !6048, metadata !DIExpression()) #20, !dbg !6052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6054, !srcloc !6055
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6056
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 9, i32 1, !dbg !6057
  %10 = load i32, i32* %9, align 4, !dbg !6057
  ret i32 %10, !dbg !6058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6174, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6175, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i8* %2, metadata !6176, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6177, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i8* %4, metadata !6178, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i8* %5, metadata !6179, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata i8* %6, metadata !6180, metadata !DIExpression()), !dbg !6182
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6183
  call void @llvm.dbg.value(metadata i8* %8, metadata !6181, metadata !DIExpression()), !dbg !6182
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6184
  %10 = bitcast i8* %9 to i32*, !dbg !6184
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6185
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6186
  %12 = bitcast i8* %8 to i32*, !dbg !6187
  store i32 %11, i32* %12, align 4, !dbg !6188
  %13 = ptrtoint i8* %4 to i32, !dbg !6189
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6190
  %15 = bitcast i8* %14 to i32*, !dbg !6190
  store i32 %13, i32* %15, align 4, !dbg !6191
  %16 = ptrtoint i8* %5 to i32, !dbg !6192
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6193
  %18 = bitcast i8* %17 to i32*, !dbg !6193
  store i32 %16, i32* %18, align 4, !dbg !6194
  %19 = ptrtoint i8* %6 to i32, !dbg !6195
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6196
  %21 = bitcast i8* %20 to i32*, !dbg !6196
  store i32 %19, i32* %21, align 4, !dbg !6197
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6198
  %23 = bitcast i8* %22 to i32*, !dbg !6198
  store i32 16777216, i32* %23, align 4, !dbg !6199
  %24 = ptrtoint i8* %8 to i32, !dbg !6200
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6201
  store i32 %24, i32* %25, align 8, !dbg !6202
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, i32 0, !dbg !6203
  store i32 0, i32* %26, align 4, !dbg !6204
  ret void, !dbg !6205
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6206 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6210, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i8* %1, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6212, metadata !DIExpression()), !dbg !6213
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6214
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #20, !dbg !6215, !srcloc !6216
  unreachable, !dbg !6217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6218 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6236, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %1, metadata !6237, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %2, metadata !6238, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6239, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 0, metadata !6240, metadata !DIExpression()), !dbg !6246
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6247
  call void @llvm.dbg.value(metadata i32 %8, metadata !6241, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6246
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6248
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6248
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6249
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6249
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6245, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 0, metadata !6251, metadata !DIExpression()) #20, !dbg !6254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6256, !srcloc !6257
  call void @llvm.dbg.value(metadata i8* %6, metadata !6243, metadata !DIExpression(DW_OP_deref)), !dbg !6246
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #21, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6244, metadata !DIExpression()), !dbg !6246
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6259
  br i1 %11, label %12, label %13, !dbg !6262

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 1057) #23, !dbg !6263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.39, i32 0, i32 0)) #23, !dbg !6263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 1057) #23, !dbg !6263
  unreachable, !dbg !6263

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %14, metadata !6241, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i8* %5, metadata !6242, metadata !DIExpression(DW_OP_deref)), !dbg !6246
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #21, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %15, metadata !6240, metadata !DIExpression()), !dbg !6246
  %16 = load i8, i8* %5, align 1, !dbg !6267, !range !3842
  call void @llvm.dbg.value(metadata i8 %16, metadata !6242, metadata !DIExpression()), !dbg !6246
  %17 = icmp eq i8 %16, 0, !dbg !6267
  br i1 %17, label %18, label %35, !dbg !6269

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6270
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #23, !dbg !6271
  %21 = load i8, i8* %6, align 1, !dbg !6272, !range !3842
  call void @llvm.dbg.value(metadata i8 %21, metadata !6243, metadata !DIExpression()), !dbg !6246
  %22 = icmp eq i8 %21, 0, !dbg !6272
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6274
  %24 = load i32, i32* %23, align 4, !dbg !6274
  br i1 %22, label %30, label %25, !dbg !6275

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6276
  %27 = icmp eq i32 %26, 0, !dbg !6279
  br i1 %27, label %28, label %34, !dbg !6280

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6281
  br label %32, !dbg !6283

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6284
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6274
  br label %34, !dbg !6286

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #23, !dbg !6286
  br label %35, !dbg !6287

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6287
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6287
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6287
  ret void, !dbg !6287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #7 !dbg !6288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6293, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %1, metadata !6294, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i32 %2, metadata !6295, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8* %3, metadata !6296, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata i8 0, metadata !6297, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6298, metadata !DIExpression()), !dbg !6299
  store i8 0, i8* %3, align 1, !dbg !6300
  %5 = icmp ult i32 %2, -16777216, !dbg !6301
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6303
  br i1 %8, label %16, label %9, !dbg !6303

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6304
  %11 = icmp eq i32 %10, 0, !dbg !6304
  br i1 %11, label %12, label %13, !dbg !6306

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6298, metadata !DIExpression()), !dbg !6299
  store i8 1, i8* %3, align 1, !dbg !6309
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6299
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6298, metadata !DIExpression()), !dbg !6299
  br label %16, !dbg !6312

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6299
  ret %struct.__esf* %17, !dbg !6313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6314 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6318, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 %1, metadata !6319, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %2, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  store i8 0, i8* %2, align 1, !dbg !6323
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6324

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #21, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %5, metadata !6321, metadata !DIExpression()), !dbg !6322
  br label %10, !dbg !6327

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6328
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  br label %10, !dbg !6329

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6330
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  br label %10, !dbg !6331

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #21, !dbg !6332
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  br label %10, !dbg !6333

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #21, !dbg !6334
  br label %10, !dbg !6335

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6337 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6341, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i8* %1, metadata !6342, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i32 0, metadata !6343, metadata !DIExpression()), !dbg !6344
  store i8 0, i8* %1, align 1, !dbg !6345
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6346
  %4 = and i32 %3, 2, !dbg !6348
  %5 = icmp eq i32 %4, 0, !dbg !6349
  br i1 %5, label %6, label %34, !dbg !6350

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6351
  %8 = icmp sgt i32 %7, -1, !dbg !6353
  br i1 %8, label %9, label %34, !dbg !6354

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6355
  %11 = and i32 %10, 1073741824, !dbg !6357
  %12 = icmp eq i32 %11, 0, !dbg !6358
  br i1 %12, label %33, label %13, !dbg !6359

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #21, !dbg !6360
  br i1 %14, label %15, label %18, !dbg !6363

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6364
  %17 = load i32, i32* %16, align 4, !dbg !6364
  call void @llvm.dbg.value(metadata i32 %17, metadata !6343, metadata !DIExpression()), !dbg !6344
  br label %34, !dbg !6366

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6367
  %20 = and i32 %19, 255, !dbg !6369
  %21 = icmp eq i32 %20, 0, !dbg !6370
  br i1 %21, label %23, label %22, !dbg !6371

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6372
  call void @llvm.dbg.value(metadata i32 0, metadata !6343, metadata !DIExpression()), !dbg !6344
  br label %34, !dbg !6374

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6375
  %25 = and i32 %24, 65280, !dbg !6377
  %26 = icmp eq i32 %25, 0, !dbg !6378
  br i1 %26, label %28, label %27, !dbg !6379

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6380
  call void @llvm.dbg.value(metadata i32 0, metadata !6343, metadata !DIExpression()), !dbg !6344
  br label %34, !dbg !6382

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6383
  %30 = icmp ult i32 %29, 65536, !dbg !6385
  br i1 %30, label %32, label %31, !dbg !6386

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #21, !dbg !6387
  call void @llvm.dbg.value(metadata i32 0, metadata !6343, metadata !DIExpression()), !dbg !6344
  br label %34

32:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 755) #23, !dbg !6389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.43, i32 0, i32 0)) #23, !dbg !6389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 755) #23, !dbg !6389
  unreachable, !dbg !6389

33:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 760) #23, !dbg !6394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.44, i32 0, i32 0)) #23, !dbg !6394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 760) #23, !dbg !6394
  unreachable, !dbg !6394

34:                                               ; preds = %6, %15, %27, %31, %22, %2
  %35 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], !dbg !6344
  call void @llvm.dbg.value(metadata i32 %35, metadata !6343, metadata !DIExpression()), !dbg !6344
  ret i32 %35, !dbg !6399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6400 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6402, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i8* %1, metadata !6404, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 0, metadata !6405, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 -22, metadata !6406, metadata !DIExpression()), !dbg !6410
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6411
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6413
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6415
  %6 = and i32 %5, 2, !dbg !6416
  %7 = icmp eq i32 %6, 0, !dbg !6417
  br i1 %7, label %18, label %8, !dbg !6418

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6419
  call void @llvm.dbg.value(metadata i32 %9, metadata !6407, metadata !DIExpression()), !dbg !6420
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6421
  %11 = and i32 %10, 128, !dbg !6423
  %12 = icmp eq i32 %11, 0, !dbg !6424
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %9, metadata !6406, metadata !DIExpression()), !dbg !6410
  br i1 %14, label %18, label %15, !dbg !6425

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6426
  %17 = and i32 %16, -129, !dbg !6426
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6426
  br label %18, !dbg !6430

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !6406, metadata !DIExpression()), !dbg !6410
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6431
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6433
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6435
  %22 = and i32 %21, 16, !dbg !6437
  %23 = icmp eq i32 %22, 0, !dbg !6437
  br i1 %23, label %24, label %28, !dbg !6438

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6439
  %26 = and i32 %25, 2, !dbg !6440
  %27 = icmp eq i32 %26, 0, !dbg !6440
  br i1 %27, label %33, label %28, !dbg !6441

28:                                               ; preds = %24, %18
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6442
  %30 = and i32 %29, 16, !dbg !6442
  %31 = icmp eq i32 %30, 0, !dbg !6442
  br i1 %31, label %33, label %32, !dbg !6446

32:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 350) #23, !dbg !6447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.8.41, i32 0, i32 0)) #23, !dbg !6447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 350) #23, !dbg !6447
  unreachable, !dbg !6447

33:                                               ; preds = %28, %24
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6449
  %35 = and i32 %34, 32, !dbg !6451
  %36 = icmp eq i32 %35, 0, !dbg !6452
  br i1 %36, label %40, label %37, !dbg !6453

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6454
  %39 = and i32 %38, -8193, !dbg !6454
  store volatile i32 %39, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6454
  br label %40, !dbg !6456

40:                                               ; preds = %37, %33
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6457
  %42 = or i32 %41, 255, !dbg !6457
  store volatile i32 %42, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6457
  store i8 0, i8* %1, align 1, !dbg !6458
  ret void, !dbg !6459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !6460 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6464, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %1, metadata !6466, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 0, metadata !6467, metadata !DIExpression()), !dbg !6471
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6472
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6474
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6476
  %6 = and i32 %5, 512, !dbg !6477
  %7 = icmp eq i32 %6, 0, !dbg !6477
  br i1 %7, label %18, label %8, !dbg !6478

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6479
  call void @llvm.dbg.value(metadata i32 %9, metadata !6468, metadata !DIExpression()), !dbg !6480
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6481
  %11 = and i32 %10, 32768, !dbg !6483
  %12 = icmp ne i32 %11, 0, !dbg !6484
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6485
  br i1 %14, label %15, label %18, !dbg !6485

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  %17 = and i32 %16, -32769, !dbg !6486
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  br label %18, !dbg !6490

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6491
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6493
  %21 = and i32 %20, 256, !dbg !6495
  %22 = icmp eq i32 %21, 0, !dbg !6496
  br i1 %22, label %23, label %25, !dbg !6497

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6498
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6500
  %27 = or i32 %26, 65280, !dbg !6500
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6500
  store i8 0, i8* %1, align 1, !dbg !6501
  ret void, !dbg !6502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !6503 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6509, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i32 0, metadata !6510, metadata !DIExpression()), !dbg !6511
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6512
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6514
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6516
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6518
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6520
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6522
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6524
  %8 = or i32 %7, -65536, !dbg !6524
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !6526 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6530, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i8* %0, metadata !6531, metadata !DIExpression()), !dbg !6532
  store i8 0, i8* %0, align 1, !dbg !6533
  ret void, !dbg !6534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6535 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6539, metadata !DIExpression()), !dbg !6542
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6543
  %3 = load i32, i32* %2, align 4, !dbg !6543
  %4 = inttoptr i32 %3 to i16*, !dbg !6544
  call void @llvm.dbg.value(metadata i16* %4, metadata !6540, metadata !DIExpression()), !dbg !6542
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6545
  %6 = or i32 %5, 256, !dbg !6545
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6545
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6546, !srcloc !6549
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6550, !srcloc !6553
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6554
  %8 = load i16, i16* %7, align 2, !dbg !6555
  call void @llvm.dbg.value(metadata i16 %8, metadata !6541, metadata !DIExpression()), !dbg !6542
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6556
  %10 = and i32 %9, -257, !dbg !6556
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6556
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6557, !srcloc !6549
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6559, !srcloc !6553
  %11 = icmp eq i16 %8, -8446, !dbg !6561
  ret i1 %11, !dbg !6563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6564 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6565
  %2 = or i32 %1, 16, !dbg !6565
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6565
  ret void, !dbg !6566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6567 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6570, metadata !DIExpression()), !dbg !6571
  br label %1, !dbg !6572

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6570, metadata !DIExpression()), !dbg !6571
  tail call fastcc void @__NVIC_SetPriority.47(i32 noundef %2) #21, !dbg !6574
  %3 = add nuw nsw i32 %2, 1, !dbg !6577
  call void @llvm.dbg.value(metadata i32 %3, metadata !6570, metadata !DIExpression()), !dbg !6571
  %4 = icmp eq i32 %3, 127, !dbg !6578
  br i1 %4, label %5, label %1, !dbg !6572, !llvm.loop !6579

5:                                                ; preds = %1
  ret void, !dbg !6581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.47(i32 noundef %0) unnamed_addr #14 !dbg !6582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6584, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 1, metadata !6585, metadata !DIExpression()), !dbg !6586
  %2 = and i32 %0, 15, !dbg !6587
  %3 = add nsw i32 %2, -4, !dbg !6587
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6587
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6587
  %6 = icmp slt i32 %0, 0, !dbg !6587
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6587
  store volatile i8 16, i8* %7, align 1, !dbg !6588
  ret void, !dbg !6590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6702, metadata !DIExpression()), !dbg !6703
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6704
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6706
  br i1 %3, label %4, label %12, !dbg !6707

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !6708, !srcloc !6720
  call void @llvm.dbg.value(metadata i32 %5, metadata !6711, metadata !DIExpression()) #20, !dbg !6721
  %6 = icmp eq i32 %5, 0, !dbg !6722
  br i1 %6, label %12, label %7, !dbg !6723

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6724
  %9 = or i32 %8, 268435456, !dbg !6724
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6724
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6726
  %11 = and i32 %10, -32769, !dbg !6726
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6726
  br label %12, !dbg !6727

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !6728
  ret void, !dbg !6729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !6730 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %1, metadata !6738, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %0, metadata !6739, metadata !DIExpression()), !dbg !6740
  %3 = load i8, i8* %1, align 1, !dbg !6741
  %4 = icmp eq i8 %3, 0, !dbg !6742
  br i1 %4, label %13, label %5, !dbg !6743

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %8, metadata !6738, metadata !DIExpression()), !dbg !6740
  store i8 %6, i8* %7, align 1, !dbg !6744
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6746
  call void @llvm.dbg.value(metadata i8* %9, metadata !6737, metadata !DIExpression()), !dbg !6740
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6747
  call void @llvm.dbg.value(metadata i8* %10, metadata !6738, metadata !DIExpression()), !dbg !6740
  %11 = load i8, i8* %10, align 1, !dbg !6741
  %12 = icmp eq i8 %11, 0, !dbg !6742
  br i1 %12, label %13, label %5, !dbg !6743, !llvm.loop !6748

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6750
  ret i8* %0, !dbg !6751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6756, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i8* %1, metadata !6757, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i32 %2, metadata !6758, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i8* %0, metadata !6759, metadata !DIExpression()), !dbg !6760
  %4 = icmp eq i32 %2, 0, !dbg !6761
  br i1 %4, label %22, label %5, !dbg !6762

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6756, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i32 %7, metadata !6758, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i8* %8, metadata !6757, metadata !DIExpression()), !dbg !6760
  %9 = load i8, i8* %8, align 1, !dbg !6763
  %10 = icmp eq i8 %9, 0, !dbg !6764
  br i1 %10, label %16, label %11, !dbg !6765

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6766
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6768
  call void @llvm.dbg.value(metadata i8* %12, metadata !6757, metadata !DIExpression()), !dbg !6760
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6769
  call void @llvm.dbg.value(metadata i8* %13, metadata !6756, metadata !DIExpression()), !dbg !6760
  %14 = add i32 %7, -1, !dbg !6770
  call void @llvm.dbg.value(metadata i32 %14, metadata !6758, metadata !DIExpression()), !dbg !6760
  %15 = icmp eq i32 %14, 0, !dbg !6761
  br i1 %15, label %22, label %5, !dbg !6762, !llvm.loop !6771

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6756, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i32 %18, metadata !6758, metadata !DIExpression()), !dbg !6760
  store i8 0, i8* %17, align 1, !dbg !6773
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6775
  call void @llvm.dbg.value(metadata i8* %19, metadata !6756, metadata !DIExpression()), !dbg !6760
  %20 = add i32 %18, -1, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %20, metadata !6758, metadata !DIExpression()), !dbg !6760
  %21 = icmp eq i32 %20, 0, !dbg !6777
  br i1 %21, label %22, label %16, !dbg !6778, !llvm.loop !6779

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6781
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !6782 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6786, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i32 %1, metadata !6787, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i32 %1, metadata !6788, metadata !DIExpression()), !dbg !6789
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6790

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6786, metadata !DIExpression()), !dbg !6789
  %6 = load i8, i8* %5, align 1, !dbg !6791
  %7 = icmp eq i8 %6, %3, !dbg !6792
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6793
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6794
  call void @llvm.dbg.value(metadata i8* %10, metadata !6786, metadata !DIExpression()), !dbg !6789
  br i1 %9, label %11, label %4, !dbg !6793, !llvm.loop !6796

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6798
  ret i8* %12, !dbg !6799
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !6800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6802, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 %1, metadata !6803, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* null, metadata !6804, metadata !DIExpression()), !dbg !6805
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6806

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6805
  call void @llvm.dbg.value(metadata i8* %6, metadata !6804, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* %5, metadata !6802, metadata !DIExpression()), !dbg !6805
  %7 = load i8, i8* %5, align 1, !dbg !6807
  %8 = icmp eq i8 %7, %3, !dbg !6810
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6811
  call void @llvm.dbg.value(metadata i8* %9, metadata !6804, metadata !DIExpression()), !dbg !6805
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6812
  call void @llvm.dbg.value(metadata i8* %10, metadata !6802, metadata !DIExpression()), !dbg !6805
  %11 = icmp eq i8 %7, 0, !dbg !6813
  br i1 %11, label %12, label %4, !dbg !6813, !llvm.loop !6814

12:                                               ; preds = %4
  ret i8* %9, !dbg !6816
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !6817 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  %2 = load i8, i8* %0, align 1, !dbg !6824
  %3 = icmp eq i8 %2, 0, !dbg !6825
  br i1 %3, label %11, label %4, !dbg !6826

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6822, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %6, metadata !6821, metadata !DIExpression()), !dbg !6823
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6827
  call void @llvm.dbg.value(metadata i8* %7, metadata !6821, metadata !DIExpression()), !dbg !6823
  %8 = add i32 %5, 1, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %8, metadata !6822, metadata !DIExpression()), !dbg !6823
  %9 = load i8, i8* %7, align 1, !dbg !6824
  %10 = icmp eq i8 %9, 0, !dbg !6825
  br i1 %10, label %11, label %4, !dbg !6826, !llvm.loop !6830

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6823
  ret i32 %12, !dbg !6832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !6833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6837, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i32 %1, metadata !6838, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  %3 = load i8, i8* %0, align 1, !dbg !6841
  %4 = icmp ne i8 %3, 0, !dbg !6842
  %5 = icmp ne i32 %1, 0, !dbg !6843
  %6 = and i1 %4, %5, !dbg !6843
  br i1 %6, label %7, label %16, !dbg !6844

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6839, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i8* %9, metadata !6837, metadata !DIExpression()), !dbg !6840
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6845
  call void @llvm.dbg.value(metadata i8* %10, metadata !6837, metadata !DIExpression()), !dbg !6840
  %11 = add nuw i32 %8, 1, !dbg !6847
  call void @llvm.dbg.value(metadata i32 %11, metadata !6839, metadata !DIExpression()), !dbg !6840
  %12 = load i8, i8* %10, align 1, !dbg !6841
  %13 = icmp ne i8 %12, 0, !dbg !6842
  %14 = icmp ult i32 %11, %1, !dbg !6843
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6843
  br i1 %15, label %7, label %16, !dbg !6844, !llvm.loop !6848

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6840
  ret i32 %17, !dbg !6850
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6851 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6855, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i8* %1, metadata !6856, metadata !DIExpression()), !dbg !6857
  %3 = load i8, i8* %0, align 1, !dbg !6858
  %4 = load i8, i8* %1, align 1, !dbg !6859
  %5 = icmp ne i8 %3, %4, !dbg !6860
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6861
  br i1 %7, label %18, label %8, !dbg !6861

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i8* %10, metadata !6855, metadata !DIExpression()), !dbg !6857
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6862
  call void @llvm.dbg.value(metadata i8* %11, metadata !6855, metadata !DIExpression()), !dbg !6857
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6864
  call void @llvm.dbg.value(metadata i8* %12, metadata !6856, metadata !DIExpression()), !dbg !6857
  %13 = load i8, i8* %11, align 1, !dbg !6858
  %14 = load i8, i8* %12, align 1, !dbg !6859
  %15 = icmp ne i8 %13, %14, !dbg !6860
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6861
  br i1 %17, label %18, label %8, !dbg !6861, !llvm.loop !6865

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6858
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6859
  %21 = zext i8 %19 to i32, !dbg !6868
  %22 = zext i8 %20 to i32, !dbg !6869
  %23 = sub nsw i32 %21, %22, !dbg !6870
  ret i32 %23, !dbg !6871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6872 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6876, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i8* %1, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32 %2, metadata !6878, metadata !DIExpression()), !dbg !6879
  %4 = icmp eq i32 %2, 0, !dbg !6880
  br i1 %4, label %23, label %5, !dbg !6880

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6878, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i8* %7, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i8* %8, metadata !6876, metadata !DIExpression()), !dbg !6879
  %9 = load i8, i8* %8, align 1, !dbg !6881
  %10 = load i8, i8* %7, align 1, !dbg !6882
  %11 = icmp ne i8 %9, %10, !dbg !6883
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6884
  br i1 %13, label %19, label %14, !dbg !6884

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6885
  call void @llvm.dbg.value(metadata i8* %15, metadata !6876, metadata !DIExpression()), !dbg !6879
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6887
  call void @llvm.dbg.value(metadata i8* %16, metadata !6877, metadata !DIExpression()), !dbg !6879
  %17 = add i32 %6, -1, !dbg !6888
  call void @llvm.dbg.value(metadata i32 %17, metadata !6878, metadata !DIExpression()), !dbg !6879
  %18 = icmp eq i32 %17, 0, !dbg !6880
  br i1 %18, label %23, label %5, !dbg !6880, !llvm.loop !6889

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6892
  %21 = zext i8 %10 to i32, !dbg !6893
  %22 = sub nsw i32 %20, %21, !dbg !6894
  br label %23, !dbg !6895

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6895
  ret i32 %24, !dbg !6896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !6897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6902, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.value(metadata i8* %1, metadata !6903, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.value(metadata i8** %2, metadata !6904, metadata !DIExpression()), !dbg !6907
  %4 = icmp eq i8* %0, null, !dbg !6908
  br i1 %4, label %5, label %7, !dbg !6908

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6909
  br label %7, !dbg !6908

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6908
  call void @llvm.dbg.value(metadata i8* %8, metadata !6905, metadata !DIExpression()), !dbg !6907
  %9 = load i8, i8* %8, align 1, !dbg !6910
  %10 = icmp eq i8 %9, 0, !dbg !6910
  br i1 %10, label %33, label %11, !dbg !6911

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6905, metadata !DIExpression()), !dbg !6907
  %14 = zext i8 %12 to i32, !dbg !6910
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #21, !dbg !6912
  %16 = icmp eq i8* %15, null, !dbg !6911
  br i1 %16, label %21, label %17, !dbg !6913

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6914
  call void @llvm.dbg.value(metadata i8* %18, metadata !6905, metadata !DIExpression()), !dbg !6907
  %19 = load i8, i8* %18, align 1, !dbg !6910
  %20 = icmp eq i8 %19, 0, !dbg !6910
  br i1 %20, label %33, label %11, !dbg !6911, !llvm.loop !6916

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6906, metadata !DIExpression()), !dbg !6907
  %24 = zext i8 %22 to i32, !dbg !6918
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #21, !dbg !6919
  %26 = icmp eq i8* %25, null, !dbg !6920
  br i1 %26, label %27, label %31, !dbg !6921

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6922
  call void @llvm.dbg.value(metadata i8* %28, metadata !6906, metadata !DIExpression()), !dbg !6907
  %29 = load i8, i8* %28, align 1, !dbg !6918
  %30 = icmp eq i8 %29, 0, !dbg !6918
  br i1 %30, label %33, label %21, !dbg !6924, !llvm.loop !6925

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6927
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6930
  br label %33, !dbg !6931

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6907
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6907
  store i8* %34, i8** %2, align 4, !dbg !6907
  ret i8* %35, !dbg !6932
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !6933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6935, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i8* %1, metadata !6936, metadata !DIExpression()), !dbg !6937
  %3 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !6938
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6939
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #21, !dbg !6940
  ret i8* %0, !dbg !6941
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6944, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8* %1, metadata !6945, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i32 %2, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8* %0, metadata !6947, metadata !DIExpression()), !dbg !6949
  %4 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %4, metadata !6948, metadata !DIExpression()), !dbg !6949
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6951
  call void @llvm.dbg.value(metadata i8* %5, metadata !6944, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8* %1, metadata !6945, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i32 %2, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i32 %2, metadata !6946, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6949
  %6 = icmp eq i32 %2, 0, !dbg !6952
  br i1 %6, label %18, label %7, !dbg !6953

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6954
  call void @llvm.dbg.value(metadata i8* %9, metadata !6944, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8* %10, metadata !6945, metadata !DIExpression()), !dbg !6949
  %12 = load i8, i8* %10, align 1, !dbg !6955
  %13 = icmp eq i8 %12, 0, !dbg !6956
  br i1 %13, label %18, label %14, !dbg !6957

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6958
  call void @llvm.dbg.value(metadata i8* %15, metadata !6945, metadata !DIExpression()), !dbg !6949
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6960
  call void @llvm.dbg.value(metadata i8* %16, metadata !6944, metadata !DIExpression()), !dbg !6949
  store i8 %12, i8* %9, align 1, !dbg !6961
  call void @llvm.dbg.value(metadata i32 %11, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i32 %11, metadata !6946, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6949
  %17 = icmp eq i32 %11, 0, !dbg !6952
  br i1 %17, label %18, label %7, !dbg !6953, !llvm.loop !6962

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6949
  store i8 0, i8* %19, align 1, !dbg !6964
  ret i8* %0, !dbg !6965
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6966 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6970, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %1, metadata !6971, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 %2, metadata !6972, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %0, metadata !6973, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %1, metadata !6974, metadata !DIExpression()), !dbg !6975
  %4 = icmp eq i32 %2, 0, !dbg !6976
  br i1 %4, label %31, label %5, !dbg !6978

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %0, metadata !6973, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 %2, metadata !6972, metadata !DIExpression()), !dbg !6975
  %6 = add i32 %2, -1, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %6, metadata !6972, metadata !DIExpression()), !dbg !6975
  %7 = icmp eq i32 %6, 0, !dbg !6980
  br i1 %7, label %23, label %8, !dbg !6981

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6982
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6982
  br label %11, !dbg !6982

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i8* %14, metadata !6973, metadata !DIExpression()), !dbg !6975
  %15 = load i8, i8* %14, align 1, !dbg !6983
  %16 = load i8, i8* %13, align 1, !dbg !6984
  %17 = icmp eq i8 %15, %16, !dbg !6985
  br i1 %17, label %18, label %23, !dbg !6982

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6986
  call void @llvm.dbg.value(metadata i8* %19, metadata !6973, metadata !DIExpression()), !dbg !6975
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6988
  call void @llvm.dbg.value(metadata i8* %20, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 %12, metadata !6972, metadata !DIExpression()), !dbg !6975
  %21 = add i32 %12, -1, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %21, metadata !6972, metadata !DIExpression()), !dbg !6975
  %22 = icmp eq i32 %21, 0, !dbg !6980
  br i1 %22, label %23, label %11, !dbg !6981, !llvm.loop !6989

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6975
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6975
  %26 = load i8, i8* %24, align 1, !dbg !6991
  %27 = zext i8 %26 to i32, !dbg !6991
  %28 = load i8, i8* %25, align 1, !dbg !6992
  %29 = zext i8 %28 to i32, !dbg !6992
  %30 = sub nsw i32 %27, %29, !dbg !6993
  br label %31, !dbg !6994

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6975
  ret i32 %32, !dbg !6995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !6996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7000, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i8* %1, metadata !7001, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i32 %2, metadata !7002, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i8* %0, metadata !7003, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i8* %1, metadata !7004, metadata !DIExpression()), !dbg !7005
  %4 = ptrtoint i8* %0 to i32, !dbg !7006
  %5 = ptrtoint i8* %1 to i32, !dbg !7006
  %6 = sub i32 %4, %5, !dbg !7006
  %7 = icmp ult i32 %6, %2, !dbg !7008
  br i1 %7, label %10, label %8, !dbg !7009

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7004, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i8* %0, metadata !7003, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i32 %2, metadata !7002, metadata !DIExpression()), !dbg !7005
  %9 = icmp eq i32 %2, 0, !dbg !7010
  br i1 %9, label %26, label %17, !dbg !7012

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7002, metadata !DIExpression()), !dbg !7005
  %12 = add i32 %11, -1, !dbg !7013
  call void @llvm.dbg.value(metadata i32 %12, metadata !7002, metadata !DIExpression()), !dbg !7005
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7016
  %14 = load i8, i8* %13, align 1, !dbg !7016
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7017
  store i8 %14, i8* %15, align 1, !dbg !7018
  %16 = icmp eq i32 %12, 0, !dbg !7019
  br i1 %16, label %26, label %10, !dbg !7020, !llvm.loop !7021

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7004, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i8* %19, metadata !7003, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.value(metadata i32 %20, metadata !7002, metadata !DIExpression()), !dbg !7005
  %21 = load i8, i8* %18, align 1, !dbg !7023
  store i8 %21, i8* %19, align 1, !dbg !7025
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7026
  call void @llvm.dbg.value(metadata i8* %22, metadata !7003, metadata !DIExpression()), !dbg !7005
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7027
  call void @llvm.dbg.value(metadata i8* %23, metadata !7004, metadata !DIExpression()), !dbg !7005
  %24 = add i32 %20, -1, !dbg !7028
  call void @llvm.dbg.value(metadata i32 %24, metadata !7002, metadata !DIExpression()), !dbg !7005
  %25 = icmp eq i32 %24, 0, !dbg !7010
  br i1 %25, label %26, label %17, !dbg !7012, !llvm.loop !7029

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7031
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7032 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7038, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %1, metadata !7039, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %2, metadata !7040, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %0, metadata !7041, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %1, metadata !7042, metadata !DIExpression()), !dbg !7043
  %4 = icmp eq i32 %2, 0, !dbg !7044
  br i1 %4, label %14, label %5, !dbg !7045

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i8* %7, metadata !7041, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %8, metadata !7040, metadata !DIExpression()), !dbg !7043
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7046
  call void @llvm.dbg.value(metadata i8* %9, metadata !7042, metadata !DIExpression()), !dbg !7043
  %10 = load i8, i8* %6, align 1, !dbg !7048
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7049
  call void @llvm.dbg.value(metadata i8* %11, metadata !7041, metadata !DIExpression()), !dbg !7043
  store i8 %10, i8* %7, align 1, !dbg !7050
  %12 = add i32 %8, -1, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %12, metadata !7040, metadata !DIExpression()), !dbg !7043
  %13 = icmp eq i32 %12, 0, !dbg !7044
  br i1 %13, label %14, label %5, !dbg !7045, !llvm.loop !7052

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %1, metadata !7060, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %2, metadata !7061, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %0, metadata !7062, metadata !DIExpression()), !dbg !7064
  %4 = trunc i32 %1 to i8, !dbg !7065
  call void @llvm.dbg.value(metadata i8 %4, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %2, metadata !7061, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %0, metadata !7062, metadata !DIExpression()), !dbg !7064
  %5 = icmp eq i32 %2, 0, !dbg !7066
  br i1 %5, label %12, label %6, !dbg !7067

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7061, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %8, metadata !7062, metadata !DIExpression()), !dbg !7064
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7068
  call void @llvm.dbg.value(metadata i8* %9, metadata !7062, metadata !DIExpression()), !dbg !7064
  store i8 %4, i8* %8, align 1, !dbg !7070
  %10 = add i32 %7, -1, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %10, metadata !7061, metadata !DIExpression()), !dbg !7064
  %11 = icmp eq i32 %10, 0, !dbg !7066
  br i1 %11, label %12, label %6, !dbg !7067, !llvm.loop !7072

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7074
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7079, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i32 %1, metadata !7080, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i32 %2, metadata !7081, metadata !DIExpression()), !dbg !7085
  %4 = icmp eq i32 %2, 0, !dbg !7086
  br i1 %4, label %17, label %5, !dbg !7087

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7088

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7089
  call void @llvm.dbg.value(metadata i8* %9, metadata !7082, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i32 %8, metadata !7081, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i8* %9, metadata !7082, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7089
  %10 = load i8, i8* %9, align 1, !dbg !7090
  %11 = icmp eq i8 %10, %6, !dbg !7093
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7094
  call void @llvm.dbg.value(metadata i8* %12, metadata !7082, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i32 %13, metadata !7081, metadata !DIExpression()), !dbg !7085
  br i1 %15, label %16, label %7, !dbg !7094, !llvm.loop !7095

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7097

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7085
  ret i8* %19, !dbg !7098
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7101, metadata !DIExpression()), !dbg !7102
  %2 = tail call fastcc zeroext i1 @device_is_ready() #21, !dbg !7103
  br i1 %2, label %3, label %4, !dbg !7105

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #21, !dbg !7106
  br label %4, !dbg !7107

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7102
  ret i32 %5, !dbg !7108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7109 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7114, metadata !DIExpression()), !dbg !7115
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7116, !srcloc !7118
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #21, !dbg !7119
  ret i1 %1, !dbg !7120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7121 {
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #23, !dbg !7122
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7126, metadata !DIExpression()), !dbg !7127
  %2 = icmp eq i32 %0, 10, !dbg !7128
  br i1 %2, label %3, label %4, !dbg !7130

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #21, !dbg !7131
  br label %4, !dbg !7133

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7134
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #21, !dbg !7135
  ret i32 %0, !dbg !7136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7137 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i8 %0, metadata !7141, metadata !DIExpression()), !dbg !7142
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7143, !srcloc !7145
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #21, !dbg !7146
  ret void, !dbg !7147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7148 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7150, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata i8 %0, metadata !7151, metadata !DIExpression()), !dbg !7153
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7154
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7152, metadata !DIExpression()), !dbg !7153
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7155
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7155
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #23, !dbg !7156
  ret void, !dbg !7157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7158 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7160, metadata !DIExpression()), !dbg !7161
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #23, !dbg !7162
  ret i1 %1, !dbg !7163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !7164 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7213, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7214, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7215, metadata !DIExpression()), !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7218 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7220, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8 %1, metadata !7221, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i32 %2, metadata !7222, metadata !DIExpression()), !dbg !7233
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7234
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7234
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7234
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7223, metadata !DIExpression()), !dbg !7233
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7235
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7235
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7225, metadata !DIExpression()), !dbg !7233
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !7236
  %13 = icmp eq i32 %12, 196608, !dbg !7236
  br i1 %13, label %71, label %14, !dbg !7236

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !7238
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !7238
  %17 = load i8, i8* %16, align 4, !dbg !7238
  %18 = icmp ugt i8 %17, %1, !dbg !7238
  br i1 %18, label %20, label %19, !dbg !7241

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.58, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.60, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i32 noundef 50) #23, !dbg !7242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0), i32 noundef 50) #23, !dbg !7242
  unreachable, !dbg !7242

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !7244
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #20, !dbg !7244
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !7226, metadata !DIExpression()), !dbg !7245
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !7246
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !7246
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !7247
  %25 = load i32, i32* %24, align 4, !dbg !7247
  %26 = inttoptr i32 %25 to i32*, !dbg !7248
  call void @llvm.dbg.value(metadata i32* %26, metadata !7231, metadata !DIExpression()), !dbg !7233
  %27 = load volatile i32, i32* %26, align 4, !dbg !7249
  call void @llvm.dbg.value(metadata i32 %27, metadata !7232, metadata !DIExpression()), !dbg !7233
  %28 = and i32 %2, 2, !dbg !7250
  %29 = icmp eq i32 %28, 0, !dbg !7252
  br i1 %29, label %30, label %69, !dbg !7253

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !7254
  %32 = icmp eq i32 %31, 0, !dbg !7254
  br i1 %32, label %41, label %33, !dbg !7254

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !7256
  %35 = icmp eq i32 %34, 0, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %27, metadata !7232, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7233
  br i1 %35, label %38, label %36, !dbg !7258

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %37, metadata !7232, metadata !DIExpression()), !dbg !7233
  br label %43, !dbg !7263

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !7232, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7233
  %39 = and i32 %27, -49, !dbg !7264
  %40 = or i32 %39, 16, !dbg !7264
  call void @llvm.dbg.value(metadata i32 %40, metadata !7232, metadata !DIExpression()), !dbg !7233
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %42, metadata !7232, metadata !DIExpression()), !dbg !7233
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !7268
  call void @llvm.dbg.value(metadata i32 %44, metadata !7232, metadata !DIExpression()), !dbg !7233
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !7269
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !7270
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #23, !dbg !7271
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !7272
  store i32 %44, i32* %48, align 4, !dbg !7273
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #23, !dbg !7274
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #23, !dbg !7275
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #23, !dbg !7276
  br i1 %11, label %63, label %50, !dbg !7277

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !7278
  %52 = icmp eq i32 %51, 0, !dbg !7282
  br i1 %52, label %53, label %56, !dbg !7283

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !7284
  %55 = icmp eq i32 %54, 0, !dbg !7286
  br i1 %55, label %58, label %56, !dbg !7287

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #23, !dbg !7288
  br label %58, !dbg !7289

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7289
  %60 = load volatile i32, i32* %59, align 4, !dbg !7289
  %61 = shl nuw i32 1, %15, !dbg !7289
  %62 = or i32 %60, %61, !dbg !7289
  store volatile i32 %62, i32* %59, align 4, !dbg !7289
  br label %69, !dbg !7290

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7291
  %65 = load volatile i32, i32* %64, align 4, !dbg !7291
  %66 = shl nuw i32 1, %15, !dbg !7291
  %67 = xor i32 %66, -1, !dbg !7291
  %68 = and i32 %65, %67, !dbg !7291
  store volatile i32 %68, i32* %64, align 4, !dbg !7291
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !7233
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #20, !dbg !7293
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !7233
  ret i32 %72, !dbg !7293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !7294 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7298, metadata !DIExpression()), !dbg !7302
  call void @llvm.dbg.value(metadata i32* %1, metadata !7299, metadata !DIExpression()), !dbg !7302
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7303
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7303
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7303
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7300, metadata !DIExpression()), !dbg !7302
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7304
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7304
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7301, metadata !DIExpression()), !dbg !7302
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !7305
  store i32 %8, i32* %1, align 4, !dbg !7306
  ret i32 0, !dbg !7307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !7308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7310, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata i32 %1, metadata !7311, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata i32 %2, metadata !7312, metadata !DIExpression()), !dbg !7315
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7316
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !7316
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7316
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !7313, metadata !DIExpression()), !dbg !7315
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !7317
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !7317
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !7314, metadata !DIExpression()), !dbg !7315
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #21, !dbg !7318
  %10 = xor i32 %1, -1, !dbg !7319
  %11 = and i32 %9, %10, !dbg !7320
  %12 = and i32 %2, %1, !dbg !7321
  %13 = or i32 %11, %12, !dbg !7322
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #21, !dbg !7323
  ret i32 0, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7327, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i32 %1, metadata !7328, metadata !DIExpression()), !dbg !7331
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7332
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7332
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7332
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7329, metadata !DIExpression()), !dbg !7331
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7333
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7333
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7330, metadata !DIExpression()), !dbg !7331
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !7334
  %9 = or i32 %8, %1, !dbg !7335
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !7336
  ret i32 0, !dbg !7337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7340, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i32 %1, metadata !7341, metadata !DIExpression()), !dbg !7344
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7345
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7345
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7345
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7342, metadata !DIExpression()), !dbg !7344
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7346
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7346
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7343, metadata !DIExpression()), !dbg !7344
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !7347
  %9 = xor i32 %1, -1, !dbg !7348
  %10 = and i32 %8, %9, !dbg !7349
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #21, !dbg !7350
  ret i32 0, !dbg !7351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7354, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i32 %1, metadata !7355, metadata !DIExpression()), !dbg !7358
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7359
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7359
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7359
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7356, metadata !DIExpression()), !dbg !7358
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7360
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7360
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7357, metadata !DIExpression()), !dbg !7358
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !7361
  %9 = xor i32 %8, %1, !dbg !7362
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !7363
  ret i32 0, !dbg !7364
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7367, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata i8 %1, metadata !7368, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata i32 %2, metadata !7369, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata i32 %3, metadata !7370, metadata !DIExpression()), !dbg !7377
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7378
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7378
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7378
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7371, metadata !DIExpression()), !dbg !7377
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7379
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7379
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7372, metadata !DIExpression()), !dbg !7377
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7380
  %11 = load volatile i32, i32* %10, align 4, !dbg !7380
  %12 = zext i8 %1 to i32, !dbg !7382
  %13 = shl nuw i32 1, %12, !dbg !7382
  %14 = and i32 %11, %13, !dbg !7383
  %15 = icmp ne i32 %14, 0, !dbg !7384
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !7385
  br i1 %17, label %77, label %18, !dbg !7385

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !7386
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !7388
  br i1 %21, label %29, label %22, !dbg !7388

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !7389
  br i1 %24, label %29, label %25, !dbg !7389

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !7391
  %27 = and i1 %26, %23, !dbg !7393
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !7394
  call void @llvm.dbg.value(metadata i32 %30, metadata !7375, metadata !DIExpression()), !dbg !7377
  %31 = icmp ult i8 %1, 16, !dbg !7395
  br i1 %31, label %32, label %35, !dbg !7397

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !7398
  call void @llvm.dbg.value(metadata i8 %33, metadata !7376, metadata !DIExpression()), !dbg !7377
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !7400
  call void @llvm.dbg.value(metadata i32* %34, metadata !7373, metadata !DIExpression()), !dbg !7377
  br label %41, !dbg !7401

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !7402
  br i1 %36, label %37, label %77, !dbg !7404

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !7405
  %39 = add nsw i8 %38, -32, !dbg !7405
  call void @llvm.dbg.value(metadata i8 %39, metadata !7376, metadata !DIExpression()), !dbg !7377
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !7407
  call void @llvm.dbg.value(metadata i32* %40, metadata !7373, metadata !DIExpression()), !dbg !7377
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !7408
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !7408
  call void @llvm.dbg.value(metadata i8 %43, metadata !7376, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.value(metadata i32* %42, metadata !7373, metadata !DIExpression()), !dbg !7377
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !7409, !srcloc !7417
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !7409
  call void @llvm.dbg.value(metadata i32 %45, metadata !7414, metadata !DIExpression()) #20, !dbg !7418
  call void @llvm.dbg.value(metadata i32 undef, metadata !7415, metadata !DIExpression()) #20, !dbg !7418
  call void @llvm.dbg.value(metadata i32 %45, metadata !7374, metadata !DIExpression()), !dbg !7377
  %46 = load volatile i32, i32* %42, align 4, !dbg !7419
  %47 = zext i8 %43 to i32, !dbg !7420
  %48 = shl nuw i32 3, %47, !dbg !7421
  %49 = xor i32 %48, -1, !dbg !7422
  %50 = and i32 %46, %49, !dbg !7423
  %51 = shl nuw i32 %30, %47, !dbg !7424
  %52 = or i32 %50, %51, !dbg !7425
  store volatile i32 %52, i32* %42, align 4, !dbg !7426
  %53 = icmp eq i32 %3, 100663296, !dbg !7427
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7427
  %55 = load volatile i32, i32* %54, align 4, !dbg !7427
  %56 = or i32 %55, %13, !dbg !7427
  %57 = xor i32 %13, -1, !dbg !7427
  %58 = and i32 %55, %57, !dbg !7427
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !7427
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7427
  store volatile i32 %59, i32* %60, align 4, !dbg !7427
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7428
  %62 = load volatile i32, i32* %61, align 4, !dbg !7428
  br i1 %16, label %63, label %68, !dbg !7428

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !7428
  store volatile i32 %64, i32* %61, align 4, !dbg !7428
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7429
  %66 = load volatile i32, i32* %65, align 4, !dbg !7429
  %67 = or i32 %66, %13, !dbg !7429
  br label %74, !dbg !7429

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !7428
  %70 = and i32 %62, %69, !dbg !7428
  store volatile i32 %70, i32* %61, align 4, !dbg !7428
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7429
  %72 = load volatile i32, i32* %71, align 4, !dbg !7429
  %73 = and i32 %72, %69, !dbg !7429
  br label %74, !dbg !7429

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !7429
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7429
  store volatile i32 %75, i32* %76, align 4, !dbg !7429
  call void @llvm.dbg.value(metadata i32 %45, metadata !7430, metadata !DIExpression()) #20, !dbg !7433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #20, !dbg !7435, !srcloc !7436
  br label %77, !dbg !7437

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !7377
  ret i32 %78, !dbg !7438
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !7439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7441, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7442, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i1 %2, metadata !7443, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7446
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7447
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !7447
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !7447
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !7444, metadata !DIExpression()), !dbg !7446
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !7448
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #21, !dbg !7449
  ret i32 %8, !dbg !7450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !7451 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7457, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i1 %2, metadata !7459, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7460
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !7461
  br i1 %4, label %5, label %6, !dbg !7464

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.58, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 42) #23, !dbg !7465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0)) #23, !dbg !7465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 42) #23, !dbg !7465
  unreachable, !dbg !7465

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !7467
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !7467
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !7467
  br i1 %9, label %10, label %11, !dbg !7470

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.58, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 43) #23, !dbg !7471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.59, i32 0, i32 0)) #23, !dbg !7471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 43) #23, !dbg !7471
  unreachable, !dbg !7471

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #21, !dbg !7473
  br i1 %12, label %18, label %13, !dbg !7475

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7476
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #21, !dbg !7479
  %16 = or i1 %15, %2, !dbg !7480
  %17 = select i1 %16, i32 0, i32 -22, !dbg !7480
  br i1 %2, label %19, label %21, !dbg !7480

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !7481

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7482
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #21, !dbg !7485
  br label %21, !dbg !7486

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !7460
  ret i32 %22, !dbg !7487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !7488 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7492, metadata !DIExpression()), !dbg !7493
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7494
  %3 = icmp eq %struct._snode* %2, null, !dbg !7494
  ret i1 %3, !dbg !7494
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !7495 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7499, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7500, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7501, metadata !DIExpression()), !dbg !7503
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7504
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7501, metadata !DIExpression()), !dbg !7503
  %4 = icmp eq %struct._snode* %3, null, !dbg !7506
  br i1 %4, label %15, label %5, !dbg !7504

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7501, metadata !DIExpression()), !dbg !7503
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7508
  br i1 %6, label %9, label %11, !dbg !7511

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7501, metadata !DIExpression()), !dbg !7503
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7508
  br i1 %8, label %9, label %11, !dbg !7511, !llvm.loop !7512

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #21, !dbg !7513
  br label %15, !dbg !7513

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7501, metadata !DIExpression()), !dbg !7503
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #21, !dbg !7506
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7502, metadata !DIExpression()), !dbg !7503
  %14 = icmp eq %struct._snode* %13, null, !dbg !7506
  br i1 %14, label %15, label %7, !dbg !7504, !llvm.loop !7512

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !7516 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7521, metadata !DIExpression()), !dbg !7522
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7523
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #21, !dbg !7523
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #21, !dbg !7523
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !7524
  %5 = icmp eq %struct._snode* %4, null, !dbg !7524
  br i1 %5, label %6, label %8, !dbg !7523

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7526
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #21, !dbg !7526
  br label %8, !dbg !7526

8:                                                ; preds = %6, %2
  ret void, !dbg !7523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !7528 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7532, metadata !DIExpression()), !dbg !7533
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7534
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7534
  ret %struct._snode* %3, !dbg !7535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7536 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7540, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7541, metadata !DIExpression()), !dbg !7542
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7543
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7544
  ret void, !dbg !7545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7546 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7548, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7549, metadata !DIExpression()), !dbg !7550
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7551
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !7554 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7556, metadata !DIExpression()), !dbg !7557
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7558
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7558
  ret %struct._snode* %3, !dbg !7559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7560 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7562, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7563, metadata !DIExpression()), !dbg !7564
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7565
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7566
  ret void, !dbg !7567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !7568 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7572, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7574, metadata !DIExpression()), !dbg !7575
  %4 = icmp eq %struct._snode* %1, null, !dbg !7576
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #21, !dbg !7578
  br i1 %4, label %6, label %11, !dbg !7579

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #21, !dbg !7580
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !7582
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7582
  br i1 %8, label %9, label %15, !dbg !7580

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7584
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #21, !dbg !7584
  br label %15, !dbg !7584

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #21, !dbg !7586
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !7588
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7588
  br i1 %13, label %14, label %15, !dbg !7586

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #21, !dbg !7590
  br label %15, !dbg !7590

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #21, !dbg !7579
  ret void, !dbg !7579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !7592 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7596, metadata !DIExpression()), !dbg !7597
  %2 = icmp eq %struct._snode* %0, null, !dbg !7598
  br i1 %2, label %5, label %3, !dbg !7598

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #21, !dbg !7598
  br label %5, !dbg !7598

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7598
  ret %struct._snode* %6, !dbg !7598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !7599 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7601, metadata !DIExpression()), !dbg !7602
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #21, !dbg !7603
  ret %struct._snode* %2, !dbg !7603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !7604 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7606, metadata !DIExpression()), !dbg !7607
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7608
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7608
  ret %struct._snode* %3, !dbg !7609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #15 !dbg !7610 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7614, metadata !DIExpression()), !dbg !7615
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7616
  %3 = load volatile i32, i32* %2, align 4, !dbg !7616
  ret i32 %3, !dbg !7617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !7618 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7622, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 %1, metadata !7623, metadata !DIExpression()), !dbg !7624
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7625
  store volatile i32 %1, i32* %3, align 4, !dbg !7626
  ret void, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7632, metadata !DIExpression()), !dbg !7636
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7637
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !7637
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !7637
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !7633, metadata !DIExpression()), !dbg !7636
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7638
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !7638
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !7638
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !7634, metadata !DIExpression()), !dbg !7636
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !7639
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7639
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7640
  %11 = load volatile i32, i32* %10, align 4, !dbg !7640
  call void @llvm.dbg.value(metadata i32 %11, metadata !7635, metadata !DIExpression()), !dbg !7636
  store volatile i32 %11, i32* %10, align 4, !dbg !7641
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !7642
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #21, !dbg !7643
  ret void, !dbg !7644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7645 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7649, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7650, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %2, metadata !7651, metadata !DIExpression()), !dbg !7654
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !7655
  %5 = icmp eq %struct._snode* %4, null, !dbg !7655
  br i1 %5, label %24, label %6, !dbg !7655

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #21, !dbg !7657
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !7652, metadata !DIExpression()), !dbg !7654
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7658
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !7658
  %12 = load i32, i32* %11, align 4, !dbg !7658
  %13 = and i32 %12, %2, !dbg !7662
  %14 = icmp eq i32 %13, 0, !dbg !7662
  br i1 %14, label %22, label %15, !dbg !7663

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7664
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7664
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7664
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !7664
  br i1 %19, label %20, label %21, !dbg !7668

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.58, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 77) #23, !dbg !7669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.59, i32 0, i32 0)) #23, !dbg !7669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27, i32 0, i32 0), i32 noundef 77) #23, !dbg !7669
  unreachable, !dbg !7669

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #23, !dbg !7671
  br label %22, !dbg !7672

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7652, metadata !DIExpression()), !dbg !7654
  %23 = icmp eq %struct._snode* %8, null, !dbg !7673
  br i1 %23, label %24, label %6, !dbg !7673

24:                                               ; preds = %22, %3
  ret void, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1007, metadata !DIExpression()), !dbg !7675
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #23, !dbg !7676
  tail call void @arch_irq_enable(i32 noundef 64) #23, !dbg !7678
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #23, !dbg !7679
  tail call void @arch_irq_enable(i32 noundef 65) #23, !dbg !7678
  ret i32 0, !dbg !7678
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !7681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7683, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8* %1, metadata !7684, metadata !DIExpression()), !dbg !7687
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7688
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7688
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7688
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7688
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7688
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7685, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i32 -1, metadata !7686, metadata !DIExpression()), !dbg !7687
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #21, !dbg !7689
  br i1 %8, label %9, label %13, !dbg !7691

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #21, !dbg !7692
  store i8 %10, i8* %1, align 1, !dbg !7694
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #21, !dbg !7695
  br i1 %11, label %12, label %13, !dbg !7697

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #23, !dbg !7698
  br label %13, !dbg !7700

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !7687
  call void @llvm.dbg.value(metadata i32 %14, metadata !7686, metadata !DIExpression()), !dbg !7687
  ret i32 %14, !dbg !7701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #14 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7704, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.value(metadata i8 %1, metadata !7705, metadata !DIExpression()), !dbg !7707
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7708
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7708
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7708
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7708
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7708
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7706, metadata !DIExpression()), !dbg !7707
  br label %8, !dbg !7709

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #21, !dbg !7710
  br i1 %9, label %10, label %8, !dbg !7709, !llvm.loop !7711

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #21, !dbg !7713
  ret void, !dbg !7714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #14 !dbg !7715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7717, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7718, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %2, metadata !7719, metadata !DIExpression()), !dbg !7722
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7723
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !7723
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !7723
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !7723
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !7723
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 0, metadata !7721, metadata !DIExpression()), !dbg !7722
  %9 = icmp eq i32 %2, 0, !dbg !7724
  br i1 %9, label %18, label %10, !dbg !7725

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7721, metadata !DIExpression()), !dbg !7722
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #21, !dbg !7726
  br i1 %12, label %13, label %18, !dbg !7727

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7728
  %15 = load i8, i8* %14, align 1, !dbg !7728
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #21, !dbg !7730
  %16 = add nuw i32 %11, 1, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %16, metadata !7721, metadata !DIExpression()), !dbg !7722
  %17 = icmp eq i32 %16, %2, !dbg !7724
  br i1 %17, label %18, label %10, !dbg !7725, !llvm.loop !7732

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !7722
  ret i32 %19, !dbg !7734
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !7735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7737, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* %1, metadata !7738, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 %2, metadata !7739, metadata !DIExpression()), !dbg !7742
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7743
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !7743
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !7743
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !7743
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !7743
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !7740, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %9 = icmp eq i32 %2, 0, !dbg !7744
  br i1 %9, label %18, label %10, !dbg !7745

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7741, metadata !DIExpression()), !dbg !7742
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #21, !dbg !7746
  br i1 %12, label %13, label %18, !dbg !7747

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #21, !dbg !7748
  %15 = add nuw i32 %11, 1, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %15, metadata !7741, metadata !DIExpression()), !dbg !7742
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7751
  store i8 %14, i8* %16, align 1, !dbg !7752
  %17 = icmp eq i32 %15, %2, !dbg !7744
  br i1 %17, label %18, label %10, !dbg !7745, !llvm.loop !7753

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !7742
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #21, !dbg !7755
  br i1 %20, label %21, label %22, !dbg !7757

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #23, !dbg !7758
  br label %22, !dbg !7760

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7764, metadata !DIExpression()), !dbg !7766
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7767
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7767
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7767
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7767
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7767
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7765, metadata !DIExpression()), !dbg !7766
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #23, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7770 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7772, metadata !DIExpression()), !dbg !7774
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7775
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7775
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7775
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7775
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7775
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7773, metadata !DIExpression()), !dbg !7774
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #23, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !7778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7780, metadata !DIExpression()), !dbg !7782
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7783
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7783
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7783
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7783
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7783
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7781, metadata !DIExpression()), !dbg !7782
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !7784
  %8 = zext i1 %7 to i32, !dbg !7784
  ret i32 %8, !dbg !7785
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7788, metadata !DIExpression()), !dbg !7790
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7791
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7791
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7791
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7791
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7791
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7789, metadata !DIExpression()), !dbg !7790
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #23, !dbg !7792
  ret void, !dbg !7793
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7796, metadata !DIExpression()), !dbg !7798
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7799
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7799
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7799
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7799
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7799
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7797, metadata !DIExpression()), !dbg !7798
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #23, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !7802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7804, metadata !DIExpression()), !dbg !7806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7807
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7807
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7807
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7807
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7807
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7805, metadata !DIExpression()), !dbg !7806
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !7808
  %8 = zext i1 %7 to i32, !dbg !7808
  ret i32 %8, !dbg !7809
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7812, metadata !DIExpression()), !dbg !7814
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7815
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7815
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7815
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7815
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7815
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7813, metadata !DIExpression()), !dbg !7814
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #23, !dbg !7816
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #23, !dbg !7817
  ret void, !dbg !7818
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !7819 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7821, metadata !DIExpression()), !dbg !7823
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7824
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7824
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7824
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7824
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7824
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7822, metadata !DIExpression()), !dbg !7823
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #23, !dbg !7825
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #23, !dbg !7826
  ret void, !dbg !7827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #15 !dbg !7828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7830, metadata !DIExpression()), !dbg !7832
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7833
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !7833
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !7833
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !7833
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !7833
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !7831, metadata !DIExpression()), !dbg !7832
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !7834
  br i1 %7, label %11, label %8, !dbg !7835

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !7836
  %10 = zext i1 %9 to i32, !dbg !7835
  br label %11, !dbg !7835

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !7837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #4 !dbg !7838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7840, metadata !DIExpression()), !dbg !7841
  ret i32 1, !dbg !7842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #10 !dbg !7843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7845, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !7846, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %2, metadata !7847, metadata !DIExpression()), !dbg !7850
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7851
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !7851
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !7851
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !7848, metadata !DIExpression()), !dbg !7850
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !7852
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !7853
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !7854
  store i8* %2, i8** %8, align 4, !dbg !7855
  ret void, !dbg !7856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7857 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !7861, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32 %1, metadata !7862, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32* null, metadata !7863, metadata !DIExpression()), !dbg !7864
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !7865
  %4 = lshr i32 %1, 16, !dbg !7866
  %5 = add i32 %4, %3, !dbg !7867
  %6 = inttoptr i32 %5 to i32*, !dbg !7868
  call void @llvm.dbg.value(metadata i32* %6, metadata !7863, metadata !DIExpression()), !dbg !7864
  %7 = load volatile i32, i32* %6, align 4, !dbg !7869
  %8 = and i32 %1, 65535, !dbg !7870
  %9 = shl nuw i32 1, %8, !dbg !7871
  %10 = and i32 %7, %9, !dbg !7871
  %11 = icmp ne i32 %10, 0, !dbg !7871
  ret i1 %11, !dbg !7872
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !7873 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !7877, metadata !DIExpression()), !dbg !7878
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !7879
  %3 = load volatile i32, i32* %2, align 4, !dbg !7879
  %4 = trunc i32 %3 to i8, !dbg !7880
  ret i8 %4, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !7882 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8 %1, metadata !7887, metadata !DIExpression()), !dbg !7888
  %3 = zext i8 %1 to i32, !dbg !7889
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !7890
  store volatile i32 %3, i32* %4, align 4, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1303, metadata !DIExpression()), !dbg !7893
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #23, !dbg !7894
  tail call void @arch_irq_enable(i32 noundef 26) #23, !dbg !7896
  ret void, !dbg !7896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !7897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7899, metadata !DIExpression()), !dbg !7901
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7902
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !7902
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !7902
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !7900, metadata !DIExpression()), !dbg !7901
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !7903
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !7903
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !7905
  br i1 %7, label %11, label %8, !dbg !7906

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !7907
  %10 = load i8*, i8** %9, align 4, !dbg !7907
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #23, !dbg !7909
  br label %11, !dbg !7910

11:                                               ; preds = %8, %1
  ret void, !dbg !7911
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !7912 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7914, metadata !DIExpression()), !dbg !7929
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7930
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7930
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7930
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7930
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7915, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !7916, metadata !DIExpression()), !dbg !7929
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !7931, !srcloc !7937
  call void @llvm.dbg.value(metadata i32 undef, metadata !7934, metadata !DIExpression()) #20, !dbg !7938
  call void @llvm.dbg.value(metadata i32 undef, metadata !7935, metadata !DIExpression()) #20, !dbg !7938
  call void @llvm.dbg.value(metadata i32 undef, metadata !7917, metadata !DIExpression()), !dbg !7929
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !7939
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #20, !dbg !7939
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !7919, metadata !DIExpression()), !dbg !7940
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !7941
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !7942
  %12 = load i32, i32* %11, align 4, !dbg !7942
  store i32 %12, i32* %10, align 4, !dbg !7941
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !7941
  store i32 32, i32* %13, align 4, !dbg !7941
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !7941
  store i32 0, i32* %14, align 4, !dbg !7941
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !7941
  store i32 0, i32* %15, align 4, !dbg !7941
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !7941
  store i32 6, i32* %16, align 4, !dbg !7941
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !7943
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !7943
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #21, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %19, metadata !7918, metadata !DIExpression()), !dbg !7929
  %20 = icmp eq i32 %19, 0, !dbg !7945
  br i1 %20, label %21, label %30, !dbg !7947

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !7941
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !7931
  call void @llvm.dbg.value(metadata i32 %23, metadata !7934, metadata !DIExpression()) #20, !dbg !7938
  call void @llvm.dbg.value(metadata i32 %23, metadata !7917, metadata !DIExpression()), !dbg !7929
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #23, !dbg !7948
  store i32 %24, i32* %22, align 4, !dbg !7949
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #23, !dbg !7950
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !7951
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !7952
  call void @llvm.dbg.value(metadata i32 undef, metadata !7953, metadata !DIExpression()) #20, !dbg !7956
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #20, !dbg !7958, !srcloc !7959
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !7960
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !7960
  call void %26(%struct.device* noundef nonnull %0) #23, !dbg !7961
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !7962
  %28 = load i8, i8* %27, align 4, !dbg !7962
  %29 = zext i8 %28 to i32, !dbg !7963
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #23, !dbg !7964
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #21, !dbg !7965
  br label %30, !dbg !7966

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #20, !dbg !7967
  ret i32 %19, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !7968 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !7972, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8 0, metadata !7973, metadata !DIExpression()), !dbg !7976
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !7977
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7977
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !7975, metadata !DIExpression(DW_OP_deref)), !dbg !7976
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #23, !dbg !7978
  call void @llvm.dbg.value(metadata i32 %4, metadata !7974, metadata !DIExpression()), !dbg !7976
  %5 = icmp slt i32 %4, 0, !dbg !7979
  br i1 %5, label %9, label %6, !dbg !7981

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !7982
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !7975, metadata !DIExpression()), !dbg !7976
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #21, !dbg !7983
  br label %9, !dbg !7984

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !7976
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7985
  ret i32 %10, !dbg !7985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !7986 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !7988, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8 2, metadata !7989, metadata !DIExpression()), !dbg !7990
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !7991
  %3 = load volatile i32, i32* %2, align 4, !dbg !7991
  %4 = and i32 %3, -64513, !dbg !7992
  %5 = or i32 %4, 2048, !dbg !7993
  store volatile i32 %5, i32* %2, align 4, !dbg !7994
  ret void, !dbg !7995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !7996 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !7998, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8 1, metadata !7999, metadata !DIExpression()), !dbg !8000
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8001
  %3 = load volatile i32, i32* %2, align 4, !dbg !8001
  %4 = and i32 %3, -64, !dbg !8002
  %5 = or i32 %4, 1, !dbg !8003
  store volatile i32 %5, i32* %2, align 4, !dbg !8004
  ret void, !dbg !8005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !8006 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8010, metadata !DIExpression()), !dbg !8011
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8012
  %3 = load volatile i32, i32* %2, align 4, !dbg !8013
  %4 = or i32 %3, 1, !dbg !8013
  store volatile i32 %4, i32* %2, align 4, !dbg !8013
  ret void, !dbg !8014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8015 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8019, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8020, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 0, metadata !8021, metadata !DIExpression()), !dbg !8022
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8023
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !8023
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8024
  %5 = load i8, i8* %4, align 4, !dbg !8024
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #23, !dbg !8025
  ret i32 %6, !dbg !8026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !8027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8029, metadata !DIExpression()), !dbg !8030
  tail call fastcc void @__NVIC_SetPriority.67() #21, !dbg !8031
  store i32 19999, i32* @last_load, align 4, !dbg !8032
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8033
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8034
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8035
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8036
  %3 = or i32 %2, 7, !dbg !8036
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8036
  ret i32 0, !dbg !8037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67() unnamed_addr #14 !dbg !8038 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8040, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 1, metadata !8041, metadata !DIExpression()), !dbg !8042
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8043
  ret void, !dbg !8046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8049, metadata !DIExpression()), !dbg !8051
  %2 = tail call fastcc i32 @elapsed() #21, !dbg !8052
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8053
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8054
  %5 = add i32 %4, %3, !dbg !8054
  store i32 %5, i32* @cycle_count, align 4, !dbg !8054
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8055
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8056
  %7 = sub i32 %5, %6, !dbg !8059
  %8 = udiv i32 %7, 20000, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %8, metadata !8050, metadata !DIExpression()), !dbg !8051
  %9 = mul nuw i32 %8, 20000, !dbg !8061
  %10 = add i32 %9, %6, !dbg !8062
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8062
  tail call void @sys_clock_announce(i32 noundef %8) #23, !dbg !8063
  tail call void @z_arm_int_exit() #23, !dbg !8064
  ret void, !dbg !8065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !8066 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8068, metadata !DIExpression()), !dbg !8072
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8073
  call void @llvm.dbg.value(metadata i32 %2, metadata !8069, metadata !DIExpression()), !dbg !8072
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %3, metadata !8070, metadata !DIExpression()), !dbg !8072
  %4 = and i32 %2, 65536, !dbg !8075
  %5 = icmp ne i32 %4, 0, !dbg !8075
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8077
  %8 = load i32, i32* @last_load, align 4, !dbg !8072
  br i1 %7, label %9, label %13, !dbg !8077

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8078
  %11 = add i32 %10, %8, !dbg !8078
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8078
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8080
  br label %13, !dbg !8081

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8082
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8083
  %16 = add i32 %14, %15, !dbg !8084
  ret i32 %16, !dbg !8085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8090, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i1 %1, metadata !8091, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8103
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8104
  br i1 %4, label %5, label %8, !dbg !8104

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8106
  %7 = and i32 %6, -2, !dbg !8106
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8106
  store i32 -16777216, i32* @last_load, align 4, !dbg !8108
  br label %60, !dbg !8109

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %9, metadata !8095, metadata !DIExpression()), !dbg !8103
  br i1 %3, label %18, label %10, !dbg !8111

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8111
  call void @llvm.dbg.value(metadata i32 undef, metadata !8090, metadata !DIExpression()), !dbg !8103
  %12 = icmp slt i32 %11, 1, !dbg !8112
  br i1 %12, label %18, label %13, !dbg !8112

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !8112
  %15 = select i1 %14, i32 %11, i32 837, !dbg !8112
  %16 = mul nuw nsw i32 %15, 20000, !dbg !8112
  %17 = add nuw nsw i32 %16, 19999, !dbg !8112
  br label %18, !dbg !8112

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8090, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8113, metadata !DIExpression()) #20, !dbg !8120
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !8122, !srcloc !8128
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()) #20, !dbg !8129
  call void @llvm.dbg.value(metadata i32 undef, metadata !8126, metadata !DIExpression()) #20, !dbg !8129
  call void @llvm.dbg.value(metadata i32 undef, metadata !8119, metadata !DIExpression()) #20, !dbg !8120
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8130
  br i1 %21, label %23, label %22, !dbg !8133

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.71, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8134
  unreachable, !dbg !8134

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %24, metadata !8125, metadata !DIExpression()) #20, !dbg !8129
  call void @llvm.dbg.value(metadata i32 %24, metadata !8119, metadata !DIExpression()) #20, !dbg !8120
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %24, metadata !8096, metadata !DIExpression()), !dbg !8103
  %25 = tail call fastcc i32 @elapsed() #21, !dbg !8137
  call void @llvm.dbg.value(metadata i32 %25, metadata !8101, metadata !DIExpression()), !dbg !8103
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %26, metadata !8093, metadata !DIExpression()), !dbg !8103
  %27 = load i32, i32* @cycle_count, align 4, !dbg !8139
  %28 = add i32 %27, %25, !dbg !8139
  store i32 %28, i32* @cycle_count, align 4, !dbg !8139
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8140
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !8141
  %30 = sub i32 %28, %29, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %30, metadata !8102, metadata !DIExpression()), !dbg !8103
  %31 = icmp slt i32 %30, 0, !dbg !8143
  br i1 %31, label %41, label %32, !dbg !8145

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !8092, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 undef, metadata !8092, metadata !DIExpression()), !dbg !8103
  %33 = add nuw i32 %19, %30, !dbg !8146
  %34 = urem i32 %33, 20000, !dbg !8148
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !8092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8103
  %35 = sub nuw nsw i32 %19, %34, !dbg !8149
  call void @llvm.dbg.value(metadata i32 %35, metadata !8092, metadata !DIExpression()), !dbg !8103
  %36 = icmp ugt i32 %35, 1250, !dbg !8150
  br i1 %36, label %37, label %39, !dbg !8150

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !8092, metadata !DIExpression()), !dbg !8103
  %38 = icmp ugt i32 %35, 16740000, !dbg !8151
  br i1 %38, label %41, label %39, !dbg !8153

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !8154
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %43, metadata !8094, metadata !DIExpression()), !dbg !8103
  %44 = add nsw i32 %42, -1, !dbg !8156
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8157
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8158
  %45 = icmp ult i32 %26, %43, !dbg !8159
  br i1 %45, label %46, label %51, !dbg !8161

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !8162
  %48 = add i32 %26, %9, !dbg !8164
  %49 = sub i32 %48, %43, !dbg !8165
  %50 = add i32 %49, %47, !dbg !8162
  br label %55, !dbg !8166

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !8167
  %53 = load i32, i32* @cycle_count, align 4, !dbg !8169
  %54 = add i32 %52, %53, !dbg !8169
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !8170
  store i32 %56, i32* @cycle_count, align 4, !dbg !8170
  call void @llvm.dbg.value(metadata i32 undef, metadata !8171, metadata !DIExpression()) #20, !dbg !8177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8176, metadata !DIExpression()) #20, !dbg !8177
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8179
  br i1 %57, label %59, label %58, !dbg !8182

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.72, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.73, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8183
  unreachable, !dbg !8183

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !8171, metadata !DIExpression()) #20, !dbg !8177
  call void @llvm.dbg.value(metadata i32 %24, metadata !8185, metadata !DIExpression()) #20, !dbg !8188
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !8190, !srcloc !8191
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8193 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8113, metadata !DIExpression()) #20, !dbg !8197
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !8199, !srcloc !8128
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()) #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 undef, metadata !8126, metadata !DIExpression()) #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 undef, metadata !8119, metadata !DIExpression()) #20, !dbg !8197
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8202
  br i1 %2, label %4, label %3, !dbg !8203

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.71, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8204
  unreachable, !dbg !8204

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()) #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 undef, metadata !8119, metadata !DIExpression()) #20, !dbg !8197
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8205
  call void @llvm.dbg.value(metadata i32 undef, metadata !8195, metadata !DIExpression()), !dbg !8206
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !8207
  %6 = load i32, i32* @cycle_count, align 4, !dbg !8208
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !8209
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !8196, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8206
  call void @llvm.dbg.value(metadata i32 undef, metadata !8171, metadata !DIExpression()) #20, !dbg !8210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8176, metadata !DIExpression()) #20, !dbg !8210
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8212
  br i1 %8, label %10, label %9, !dbg !8213

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.72, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.73, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8214
  unreachable, !dbg !8214

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !8215
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !8196, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8206
  %12 = sub i32 %11, %7, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %12, metadata !8196, metadata !DIExpression()), !dbg !8206
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !8199
  call void @llvm.dbg.value(metadata i32 %13, metadata !8125, metadata !DIExpression()) #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %13, metadata !8119, metadata !DIExpression()) #20, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %13, metadata !8195, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 undef, metadata !8171, metadata !DIExpression()) #20, !dbg !8210
  call void @llvm.dbg.value(metadata i32 undef, metadata !8185, metadata !DIExpression()) #20, !dbg !8217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #20, !dbg !8219, !srcloc !8191
  %14 = udiv i32 %12, 20000, !dbg !8220
  ret i32 %14, !dbg !8221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8222 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8113, metadata !DIExpression()) #20, !dbg !8226
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !8228, !srcloc !8128
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()) #20, !dbg !8230
  call void @llvm.dbg.value(metadata i32 undef, metadata !8126, metadata !DIExpression()) #20, !dbg !8230
  call void @llvm.dbg.value(metadata i32 undef, metadata !8119, metadata !DIExpression()) #20, !dbg !8226
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8231
  br i1 %2, label %4, label %3, !dbg !8232

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.71, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 148) #23, !dbg !8233
  unreachable, !dbg !8233

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !8125, metadata !DIExpression()) #20, !dbg !8230
  call void @llvm.dbg.value(metadata i32 undef, metadata !8119, metadata !DIExpression()) #20, !dbg !8226
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8234
  call void @llvm.dbg.value(metadata i32 undef, metadata !8224, metadata !DIExpression()), !dbg !8235
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !8236
  %6 = load i32, i32* @cycle_count, align 4, !dbg !8237
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !8225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !8235
  call void @llvm.dbg.value(metadata i32 undef, metadata !8171, metadata !DIExpression()) #20, !dbg !8238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !8176, metadata !DIExpression()) #20, !dbg !8238
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8240
  br i1 %7, label %9, label %8, !dbg !8241

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.72, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.73, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #23, !dbg !8242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.70, i32 0, i32 0), i32 noundef 194) #23, !dbg !8242
  unreachable, !dbg !8242

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !8243
  call void @llvm.dbg.value(metadata i32 %10, metadata !8225, metadata !DIExpression()), !dbg !8235
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !8228
  call void @llvm.dbg.value(metadata i32 %11, metadata !8125, metadata !DIExpression()) #20, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %11, metadata !8119, metadata !DIExpression()) #20, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %11, metadata !8224, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 undef, metadata !8171, metadata !DIExpression()) #20, !dbg !8238
  call void @llvm.dbg.value(metadata i32 undef, metadata !8185, metadata !DIExpression()) #20, !dbg !8244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !8246, !srcloc !8191
  ret i32 %10, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !8248 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8249
  %2 = icmp eq i32 %1, -16777216, !dbg !8251
  br i1 %2, label %3, label %6, !dbg !8252

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8253
  %5 = or i32 %4, 1, !dbg !8253
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8253
  br label %6, !dbg !8255

6:                                                ; preds = %3, %0
  ret void, !dbg !8256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !8257 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8258
  %2 = and i32 %1, -2, !dbg !8258
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8293, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i8 %1, metadata !8294, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8295, metadata !DIExpression()), !dbg !8296
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8297
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8297
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8296
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8298
  %8 = load i8, i8* %6, align 4, !dbg !8299
  %9 = zext i8 %8 to i32, !dbg !8300
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8300
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8301
  br i1 %11, label %18, label %24, !dbg !8302

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8296
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8298
  %14 = load i8, i8* %6, align 4, !dbg !8299
  %15 = zext i8 %14 to i32, !dbg !8300
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8300
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8301
  br i1 %17, label %18, label %24, !dbg !8302, !llvm.loop !8303

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8305
  %21 = load i8, i8* %20, align 1, !dbg !8305
  %22 = icmp eq i8 %21, %1, !dbg !8308
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8309
  br i1 %22, label %24, label %12, !dbg !8310

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8296
  ret i32 %25, !dbg !8311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #4 !dbg !8312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8314, metadata !DIExpression()), !dbg !8315
  ret i32 0, !dbg !8316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8317 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !8335, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8 %1, metadata !8336, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 %2, metadata !8337, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8 0, metadata !8338, metadata !DIExpression()), !dbg !8349
  %4 = icmp eq i8 %1, 0, !dbg !8350
  br i1 %4, label %7, label %5, !dbg !8351

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8350
  br label %8, !dbg !8351

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !8352

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8338, metadata !DIExpression()), !dbg !8349
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !8353
  %11 = load i32, i32* %10, align 4, !dbg !8353
  call void @llvm.dbg.value(metadata i32 %11, metadata !8340, metadata !DIExpression()), !dbg !8354
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !8355
  %13 = load i8, i8* %12, align 4, !dbg !8355
  call void @llvm.dbg.value(metadata i8 %13, metadata !8343, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8354
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !8356
  %15 = load i32, i32* %14, align 4, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %15, metadata !8344, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8 %13, metadata !8345, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8354
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !8357
  %17 = load i32, i32* %16, align 4, !dbg !8357
  call void @llvm.dbg.value(metadata i32 %17, metadata !8346, metadata !DIExpression()), !dbg !8354
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !8358
  %19 = load i32, i32* %18, align 4, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %19, metadata !8347, metadata !DIExpression()), !dbg !8354
  %20 = and i8 %13, 15, !dbg !8359
  %21 = zext i8 %20 to i32, !dbg !8359
  %22 = lshr i32 %19, 27, !dbg !8360
  %23 = and i32 %22, 16, !dbg !8360
  %24 = or i32 %23, %21, !dbg !8361
  %25 = inttoptr i32 %11 to i32*, !dbg !8362
  store volatile i32 %24, i32* %25, align 4, !dbg !8363
  %26 = icmp eq i32 %15, 0, !dbg !8364
  br i1 %26, label %32, label %27, !dbg !8366

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !8367
  call void @llvm.dbg.value(metadata i8 %28, metadata !8345, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8354
  %29 = and i8 %28, 7, !dbg !8368
  %30 = zext i8 %29 to i32, !dbg !8368
  %31 = inttoptr i32 %15 to i32*, !dbg !8370
  store volatile i32 %30, i32* %31, align 4, !dbg !8371
  br label %32, !dbg !8372

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !8373
  br i1 %33, label %37, label %34, !dbg !8375

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !8376
  %36 = inttoptr i32 %17 to i32*, !dbg !8378
  store volatile i32 %35, i32* %36, align 4, !dbg !8379
  br label %37, !dbg !8380

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %38, metadata !8338, metadata !DIExpression()), !dbg !8349
  %39 = icmp eq i32 %38, %6, !dbg !8350
  br i1 %39, label %7, label %8, !dbg !8351, !llvm.loop !8382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8384 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8441, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %1, metadata !8442, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %2, metadata !8443, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 %3, metadata !8444, metadata !DIExpression()), !dbg !8445
  %5 = icmp ult i32 %2, 8, !dbg !8446
  br i1 %5, label %7, label %6, !dbg !8449

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 45) #23, !dbg !8450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 45) #23, !dbg !8450
  unreachable, !dbg !8450

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !8452
  br i1 %8, label %10, label %9, !dbg !8455

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 46) #23, !dbg !8456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 46) #23, !dbg !8456
  unreachable, !dbg !8456

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !8458
  %12 = load volatile i32, i32* %11, align 4, !dbg !8458
  %13 = and i32 %12, -458816, !dbg !8459
  %14 = shl nuw nsw i32 %2, 16, !dbg !8460
  %15 = and i32 %14, 458752, !dbg !8460
  %16 = or i32 %15, %3, !dbg !8461
  %17 = or i32 %16, %13, !dbg !8462
  store volatile i32 %17, i32* %11, align 4, !dbg !8463
  ret void, !dbg !8464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !8465 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8469, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %1, metadata !8470, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32* %2, metadata !8471, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32* %3, metadata !8472, metadata !DIExpression()), !dbg !8473
  %5 = icmp ne i32* %2, null, !dbg !8474
  %6 = icmp ne i32* %3, null, !dbg !8474
  %7 = and i1 %5, %6, !dbg !8474
  br i1 %7, label %9, label %8, !dbg !8474

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.83, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 61) #23, !dbg !8477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 61) #23, !dbg !8477
  unreachable, !dbg !8477

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !8479
  %11 = load volatile i32, i32* %10, align 4, !dbg !8479
  %12 = lshr i32 %11, 16, !dbg !8480
  %13 = and i32 %12, 7, !dbg !8480
  store i32 %13, i32* %2, align 4, !dbg !8481
  %14 = load volatile i32, i32* %10, align 4, !dbg !8482
  %15 = and i32 %14, 63, !dbg !8483
  store i32 %15, i32* %3, align 4, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8490, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %1, metadata !8491, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %2, metadata !8492, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %3, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %4, metadata !8494, metadata !DIExpression()), !dbg !8495
  %6 = icmp ult i32 %3, 8, !dbg !8496
  br i1 %6, label %8, label %7, !dbg !8499

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 75) #23, !dbg !8500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 75) #23, !dbg !8500
  unreachable, !dbg !8500

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !8502
  br i1 %9, label %11, label %10, !dbg !8505

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 76) #23, !dbg !8506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 76) #23, !dbg !8506
  unreachable, !dbg !8506

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !8508
  %13 = load volatile i32, i32* %12, align 4, !dbg !8508
  %14 = and i32 %13, -117899328, !dbg !8509
  %15 = shl i32 %2, 24, !dbg !8510
  %16 = and i32 %15, 117440512, !dbg !8510
  %17 = shl nuw nsw i32 %3, 16, !dbg !8511
  %18 = and i32 %17, 458752, !dbg !8511
  %19 = or i32 %16, %4, !dbg !8512
  %20 = or i32 %19, %18, !dbg !8513
  %21 = or i32 %20, %14, !dbg !8514
  store volatile i32 %21, i32* %12, align 4, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8517 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #21, !dbg !8524
  br i1 %2, label %7, label %3, !dbg !8526

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !8527
  %5 = and i32 %4, 127, !dbg !8528
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !8529
  br label %7, !dbg !8530

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !8523
  ret i32 %8, !dbg !8531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8532 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8536, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i32 %1, metadata !8537, metadata !DIExpression()), !dbg !8538
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8539
  %4 = and i32 %1, 65535, !dbg !8539
  %5 = add i32 %4, %3, !dbg !8539
  %6 = inttoptr i32 %5 to i32*, !dbg !8539
  %7 = load volatile i32, i32* %6, align 4, !dbg !8539
  %8 = and i32 %7, 65536, !dbg !8540
  %9 = icmp ne i32 %8, 0, !dbg !8541
  ret i1 %9, !dbg !8542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8543 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8545, metadata !DIExpression()), !dbg !8546
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !8547
  br i1 %2, label %8, label %3, !dbg !8549

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !8550
  %5 = and i32 %4, 1, !dbg !8552
  %6 = icmp eq i32 %5, 0, !dbg !8552
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !8553
  br label %8, !dbg !8553

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !8546
  ret i32 %9, !dbg !8554
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8555 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8557, metadata !DIExpression()), !dbg !8561
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #21, !dbg !8562
  br i1 %2, label %40, label %3, !dbg !8564

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8565
  %5 = trunc i32 %4 to i8, !dbg !8565
  %6 = and i8 %5, 127, !dbg !8565
  call void @llvm.dbg.value(metadata i8 %6, metadata !8558, metadata !DIExpression()), !dbg !8561
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8566
  %8 = lshr i32 %7, 21, !dbg !8567
  %9 = and i32 %8, 3, !dbg !8568
  call void @llvm.dbg.value(metadata i32 %9, metadata !8559, metadata !DIExpression()), !dbg !8561
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !8569
  %11 = load i32, i32* %10, align 4, !dbg !8569
  call void @llvm.dbg.value(metadata i8 undef, metadata !8559, metadata !DIExpression()), !dbg !8561
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !8570
  %13 = load volatile i32, i32* %12, align 4, !dbg !8570
  %14 = and i32 %13, 32768, !dbg !8572
  %15 = icmp eq i32 %14, 0, !dbg !8572
  br i1 %15, label %36, label %16, !dbg !8573

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !8574
  %18 = and i32 %17, 32767, !dbg !8576
  %19 = uitofp i32 %18 to float, !dbg !8577
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !8578
  %21 = load volatile i32, i32* %20, align 4, !dbg !8578
  %22 = and i32 %21, 1073741823, !dbg !8579
  %23 = uitofp i32 %22 to float, !dbg !8580
  %24 = fdiv float %19, %23, !dbg !8581
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !8582
  %26 = load volatile i32, i32* %25, align 4, !dbg !8582
  %27 = and i32 %26, 1073741823, !dbg !8583
  %28 = uitofp i32 %27 to float, !dbg !8584
  %29 = fmul float %24, %28, !dbg !8585
  call void @llvm.dbg.value(metadata float %29, metadata !8560, metadata !DIExpression()), !dbg !8561
  %30 = lshr i32 24000000, %11, !dbg !8586
  %31 = uitofp i32 %30 to float, !dbg !8587
  %32 = uitofp i8 %6 to float, !dbg !8588
  %33 = fadd float %29, %32, !dbg !8589
  %34 = fmul float %33, %31, !dbg !8590
  %35 = fptoui float %34 to i32, !dbg !8591
  br label %40, !dbg !8592

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !8593
  %38 = zext i8 %6 to i32, !dbg !8595
  %39 = mul nuw i32 %37, %38, !dbg !8596
  br label %40, !dbg !8597

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !8561
  ret i32 %41, !dbg !8598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8601, metadata !DIExpression()), !dbg !8602
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #21, !dbg !8603
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !8602
  ret i32 %3, !dbg !8605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8608, metadata !DIExpression()), !dbg !8613
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #21, !dbg !8614
  br i1 %2, label %47, label %3, !dbg !8616

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8617
  %5 = trunc i32 %4 to i8, !dbg !8617
  %6 = and i8 %5, 127, !dbg !8617
  call void @llvm.dbg.value(metadata i8 %6, metadata !8609, metadata !DIExpression()), !dbg !8613
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8618
  %8 = lshr i32 %7, 22, !dbg !8619
  %9 = and i32 %8, 3, !dbg !8620
  call void @llvm.dbg.value(metadata i32 %8, metadata !8610, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8613
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8621
  %11 = lshr i32 %10, 19, !dbg !8622
  %12 = and i32 %11, 3, !dbg !8623
  call void @llvm.dbg.value(metadata i32 %11, metadata !8611, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8613
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8624
  %14 = load i32, i32* %13, align 4, !dbg !8624
  call void @llvm.dbg.value(metadata i8 undef, metadata !8610, metadata !DIExpression()), !dbg !8613
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !8625
  %16 = load i32, i32* %15, align 4, !dbg !8625
  call void @llvm.dbg.value(metadata i8 undef, metadata !8611, metadata !DIExpression()), !dbg !8613
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !8626
  %18 = load volatile i32, i32* %17, align 4, !dbg !8626
  %19 = and i32 %18, 32768, !dbg !8628
  %20 = icmp eq i32 %19, 0, !dbg !8628
  br i1 %20, label %42, label %21, !dbg !8629

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8630
  %23 = and i32 %22, 32767, !dbg !8632
  %24 = uitofp i32 %23 to float, !dbg !8633
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !8634
  %26 = load volatile i32, i32* %25, align 4, !dbg !8634
  %27 = and i32 %26, 1073741823, !dbg !8635
  %28 = uitofp i32 %27 to float, !dbg !8636
  %29 = fdiv float %24, %28, !dbg !8637
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !8638
  %31 = load volatile i32, i32* %30, align 4, !dbg !8638
  %32 = and i32 %31, 1073741823, !dbg !8639
  %33 = uitofp i32 %32 to float, !dbg !8640
  %34 = fmul float %29, %33, !dbg !8641
  call void @llvm.dbg.value(metadata float %34, metadata !8612, metadata !DIExpression()), !dbg !8613
  %35 = lshr i32 24000000, %16, !dbg !8642
  %36 = lshr i32 %35, %14, !dbg !8643
  %37 = uitofp i32 %36 to float, !dbg !8644
  %38 = uitofp i8 %6 to float, !dbg !8645
  %39 = fadd float %34, %38, !dbg !8646
  %40 = fmul float %39, %37, !dbg !8647
  %41 = fptoui float %40 to i32, !dbg !8648
  br label %47, !dbg !8649

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8650
  %44 = lshr i32 %43, %14, !dbg !8652
  %45 = zext i8 %6 to i32, !dbg !8653
  %46 = mul nuw i32 %44, %45, !dbg !8654
  br label %47, !dbg !8655

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8613
  ret i32 %48, !dbg !8656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !8657 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8659, metadata !DIExpression()), !dbg !8664
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #21, !dbg !8665
  br i1 %2, label %47, label %3, !dbg !8667

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8668
  %5 = trunc i32 %4 to i8, !dbg !8668
  %6 = and i8 %5, 127, !dbg !8668
  call void @llvm.dbg.value(metadata i8 %6, metadata !8660, metadata !DIExpression()), !dbg !8664
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8669
  %8 = lshr i32 %7, 22, !dbg !8670
  %9 = and i32 %8, 3, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %8, metadata !8661, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8664
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8672
  %11 = lshr i32 %10, 19, !dbg !8673
  %12 = and i32 %11, 3, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %11, metadata !8662, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8664
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8675
  %14 = load i32, i32* %13, align 4, !dbg !8675
  call void @llvm.dbg.value(metadata i8 undef, metadata !8661, metadata !DIExpression()), !dbg !8664
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !8676
  %16 = load i32, i32* %15, align 4, !dbg !8676
  call void @llvm.dbg.value(metadata i8 undef, metadata !8662, metadata !DIExpression()), !dbg !8664
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !8677
  %18 = load volatile i32, i32* %17, align 4, !dbg !8677
  %19 = and i32 %18, 32768, !dbg !8679
  %20 = icmp eq i32 %19, 0, !dbg !8679
  br i1 %20, label %42, label %21, !dbg !8680

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8681
  %23 = and i32 %22, 32767, !dbg !8683
  %24 = uitofp i32 %23 to float, !dbg !8684
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !8685
  %26 = load volatile i32, i32* %25, align 4, !dbg !8685
  %27 = and i32 %26, 1073741823, !dbg !8686
  %28 = uitofp i32 %27 to float, !dbg !8687
  %29 = fdiv float %24, %28, !dbg !8688
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !8689
  %31 = load volatile i32, i32* %30, align 4, !dbg !8689
  %32 = and i32 %31, 1073741823, !dbg !8690
  %33 = uitofp i32 %32 to float, !dbg !8691
  %34 = fmul float %29, %33, !dbg !8692
  call void @llvm.dbg.value(metadata float %34, metadata !8663, metadata !DIExpression()), !dbg !8664
  %35 = lshr i32 24000000, %16, !dbg !8693
  %36 = lshr i32 %35, %14, !dbg !8694
  %37 = uitofp i32 %36 to float, !dbg !8695
  %38 = uitofp i8 %6 to float, !dbg !8696
  %39 = fadd float %34, %38, !dbg !8697
  %40 = fmul float %39, %37, !dbg !8698
  %41 = fptoui float %40 to i32, !dbg !8699
  br label %47, !dbg !8700

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8701
  %44 = lshr i32 %43, %14, !dbg !8703
  %45 = zext i8 %6 to i32, !dbg !8704
  %46 = mul nuw i32 %44, %45, !dbg !8705
  br label %47, !dbg !8706

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8664
  ret i32 %48, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8712, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %1, metadata !8713, metadata !DIExpression()), !dbg !8716
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !8717
  br i1 %3, label %4, label %5, !dbg !8720

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 260) #23, !dbg !8721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 260) #23, !dbg !8721
  unreachable, !dbg !8721

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #21, !dbg !8723
  call void @llvm.dbg.value(metadata i32 %6, metadata !8714, metadata !DIExpression()), !dbg !8716
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #21, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %7, metadata !8715, metadata !DIExpression()), !dbg !8716
  %8 = udiv i32 %6, %7, !dbg !8725
  %9 = mul i32 %8, 18, !dbg !8726
  ret i32 %9, !dbg !8727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8728 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %1, metadata !8731, metadata !DIExpression()), !dbg !8732
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8733
  %4 = and i32 %1, 65535, !dbg !8733
  %5 = add i32 %4, %3, !dbg !8733
  %6 = inttoptr i32 %5 to i32*, !dbg !8733
  %7 = load volatile i32, i32* %6, align 4, !dbg !8733
  %8 = lshr i32 %1, 16, !dbg !8734
  %9 = and i32 %8, 31, !dbg !8734
  %10 = lshr i32 %7, %9, !dbg !8735
  %11 = and i32 %10, 63, !dbg !8736
  ret i32 %11, !dbg !8737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8738 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8765, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !8766, metadata !DIExpression()), !dbg !8769
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !8770
  store volatile i32 0, i32* %3, align 4, !dbg !8771
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !8772
  store volatile i32 0, i32* %4, align 4, !dbg !8773
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !8774
  %6 = load i32, i32* %5, align 4, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %6, metadata !8767, metadata !DIExpression()), !dbg !8769
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !8775
  %8 = load i32, i32* %7, align 4, !dbg !8775
  %9 = icmp eq i32 %8, 1, !dbg !8777
  %10 = shl nuw i32 1, %6, !dbg !8778
  br i1 %9, label %11, label %15, !dbg !8779

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !8780
  %13 = load volatile i32, i32* %12, align 4, !dbg !8781
  %14 = or i32 %13, %10, !dbg !8781
  store volatile i32 %14, i32* %12, align 4, !dbg !8781
  br label %20, !dbg !8780

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !8782
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !8783
  %18 = load volatile i32, i32* %17, align 4, !dbg !8784
  %19 = and i32 %18, %16, !dbg !8784
  store volatile i32 %19, i32* %17, align 4, !dbg !8784
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !8785
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !8787
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !8787
  %24 = add i32 %6, -16, !dbg !8787
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !8787
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !8787
  call void @llvm.dbg.value(metadata i32* %26, metadata !8768, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %25, metadata !8767, metadata !DIExpression()), !dbg !8769
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !8788
  %28 = load i32, i32* %27, align 4, !dbg !8788
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !8789

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !8790
  %31 = shl i32 3, %30, !dbg !8793
  %32 = xor i32 %31, -1, !dbg !8794
  %33 = load volatile i32, i32* %26, align 4, !dbg !8795
  %34 = and i32 %33, %32, !dbg !8795
  br label %56, !dbg !8796

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !8797
  %37 = shl i32 %25, 1, !dbg !8799
  %38 = shl i32 3, %37, !dbg !8800
  %39 = xor i32 %38, -1, !dbg !8801
  %40 = and i32 %36, %39, !dbg !8802
  %41 = shl nuw i32 1, %37, !dbg !8803
  %42 = or i32 %40, %41, !dbg !8804
  br label %56, !dbg !8805

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !8806
  %45 = shl i32 %25, 1, !dbg !8808
  %46 = shl i32 3, %45, !dbg !8809
  %47 = xor i32 %46, -1, !dbg !8810
  %48 = and i32 %44, %47, !dbg !8811
  %49 = shl i32 2, %45, !dbg !8812
  %50 = or i32 %48, %49, !dbg !8813
  br label %56, !dbg !8814

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !8815
  %53 = shl i32 3, %52, !dbg !8817
  %54 = load volatile i32, i32* %26, align 4, !dbg !8818
  %55 = or i32 %54, %53, !dbg !8818
  br label %56, !dbg !8819

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !8820
  br label %58, !dbg !8821

58:                                               ; preds = %56, %20
  ret void, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8827, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata i32 %1, metadata !8828, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata i32 %2, metadata !8829, metadata !DIExpression()), !dbg !8830
  %4 = icmp ult i32 %1, 32, !dbg !8831
  br i1 %4, label %6, label %5, !dbg !8834

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 113) #23, !dbg !8835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 113) #23, !dbg !8835
  unreachable, !dbg !8835

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !8837
  %8 = shl nuw i32 1, %1, !dbg !8839
  br i1 %7, label %9, label %13, !dbg !8840

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8841
  %11 = load volatile i32, i32* %10, align 4, !dbg !8843
  %12 = or i32 %11, %8, !dbg !8843
  store volatile i32 %12, i32* %10, align 4, !dbg !8843
  br label %18, !dbg !8844

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !8845
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !8847
  %16 = load volatile i32, i32* %15, align 4, !dbg !8848
  %17 = and i32 %16, %14, !dbg !8848
  store volatile i32 %17, i32* %15, align 4, !dbg !8848
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !8849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !8850 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8854, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.value(metadata i32 %1, metadata !8855, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.value(metadata i1 %2, metadata !8856, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8857
  %4 = icmp ult i32 %1, 32, !dbg !8858
  br i1 %4, label %6, label %5, !dbg !8861

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 135) #23, !dbg !8862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 135) #23, !dbg !8862
  unreachable, !dbg !8862

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !8864
  br i1 %2, label %8, label %12, !dbg !8866

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !8867
  %10 = load volatile i32, i32* %9, align 4, !dbg !8868
  %11 = or i32 %10, %7, !dbg !8868
  store volatile i32 %11, i32* %9, align 4, !dbg !8868
  br label %17, !dbg !8867

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !8869
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !8870
  %15 = load volatile i32, i32* %14, align 4, !dbg !8871
  %16 = and i32 %15, %13, !dbg !8871
  store volatile i32 %16, i32* %14, align 4, !dbg !8871
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !8872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !8875, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %1, metadata !8876, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i1 %2, metadata !8877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8878
  %4 = icmp ult i32 %1, 32, !dbg !8879
  br i1 %4, label %6, label %5, !dbg !8882

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 152) #23, !dbg !8883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i32 0, i32 0), i32 noundef 152) #23, !dbg !8883
  unreachable, !dbg !8883

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !8885
  br i1 %2, label %8, label %12, !dbg !8887

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !8888
  %10 = load volatile i32, i32* %9, align 4, !dbg !8889
  %11 = or i32 %10, %7, !dbg !8889
  store volatile i32 %11, i32* %9, align 4, !dbg !8889
  br label %17, !dbg !8888

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !8890
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !8891
  %15 = load volatile i32, i32* %14, align 4, !dbg !8892
  %16 = and i32 %15, %13, !dbg !8892
  store volatile i32 %16, i32* %14, align 4, !dbg !8892
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !8893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !8894 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !8934, metadata !DIExpression()), !dbg !8935
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !8936
  br i1 %3, label %4, label %5, !dbg !8939

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 49) #23, !dbg !8940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 49) #23, !dbg !8940
  unreachable, !dbg !8940

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8942
  %7 = load volatile i32, i32* %6, align 4, !dbg !8943
  %8 = and i32 %7, -2, !dbg !8943
  store volatile i32 %8, i32* %6, align 4, !dbg !8943
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #21, !dbg !8944
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !8945
  %10 = load i32, i32* %9, align 4, !dbg !8945
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !8946
  %12 = load i32, i32* %11, align 4, !dbg !8946
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !8947
  %14 = load i32, i32* %13, align 4, !dbg !8947
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !8948
  %16 = load i32, i32* %15, align 4, !dbg !8948
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !8949
  %18 = load volatile i32, i32* %17, align 4, !dbg !8950
  %19 = or i32 %10, %12, !dbg !8951
  %20 = or i32 %19, %14, !dbg !8952
  %21 = or i32 %20, %16, !dbg !8953
  %22 = or i32 %21, %18, !dbg !8950
  %23 = or i32 %22, 16384, !dbg !8950
  store volatile i32 %23, i32* %17, align 4, !dbg !8950
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !8954
  %25 = load volatile i32, i32* %24, align 4, !dbg !8955
  %26 = or i32 %25, 4, !dbg !8955
  store volatile i32 %26, i32* %24, align 4, !dbg !8955
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !8956
  %28 = load i32, i32* %27, align 4, !dbg !8956
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !8957
  %30 = load i32, i32* %29, align 4, !dbg !8957
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #21, !dbg !8958
  ret void, !dbg !8959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #14 !dbg !8960 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8964, metadata !DIExpression()), !dbg !8965
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8966
  %3 = load volatile i32, i32* %2, align 4, !dbg !8967
  %4 = and i32 %3, -2, !dbg !8967
  store volatile i32 %4, i32* %2, align 4, !dbg !8967
  store volatile i32 0, i32* %2, align 4, !dbg !8968
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !8969
  store volatile i32 1, i32* %5, align 4, !dbg !8970
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !8971
  store volatile i32 1792, i32* %6, align 4, !dbg !8972
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !8973
  store volatile i32 32768, i32* %7, align 4, !dbg !8974
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8975
  store volatile i32 2049, i32* %8, align 4, !dbg !8976
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !8977
  store volatile i32 43, i32* %9, align 4, !dbg !8978
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !8979
  store volatile i32 0, i32* %10, align 4, !dbg !8980
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !8981
  store volatile i32 0, i32* %11, align 4, !dbg !8982
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !8983
  store volatile i32 96, i32* %12, align 4, !dbg !8984
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !8985
  store volatile i32 0, i32* %13, align 4, !dbg !8986
  %14 = load volatile i32, i32* %5, align 4, !dbg !8987
  %15 = and i32 %14, -2, !dbg !8987
  store volatile i32 %15, i32* %5, align 4, !dbg !8987
  br label %16, !dbg !8988

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !8989
  %18 = and i32 %17, 1, !dbg !8990
  %19 = icmp eq i32 %18, 0, !dbg !8991
  br i1 %19, label %16, label %20, !dbg !8988, !llvm.loop !8992

20:                                               ; preds = %16
  ret void, !dbg !8994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8995 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8999, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 1, metadata !9006, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %1, metadata !9002, metadata !DIExpression()), !dbg !9012
  %4 = shl i32 %2, 4, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %4, metadata !9003, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 1, metadata !9004, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %1, metadata !9002, metadata !DIExpression()), !dbg !9012
  %5 = icmp eq i32 %4, 0, !dbg !9014
  br i1 %5, label %11, label %6, !dbg !9015

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9002, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %8, metadata !9003, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %8, metadata !9004, metadata !DIExpression()), !dbg !9012
  %9 = urem i32 %7, %8, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %8, metadata !9002, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %9, metadata !9003, metadata !DIExpression()), !dbg !9012
  %10 = icmp eq i32 %9, 0, !dbg !9014
  br i1 %10, label %11, label %6, !dbg !9015, !llvm.loop !9018

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !9012
  %13 = udiv i32 %1, %12, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %13, metadata !9002, metadata !DIExpression()), !dbg !9012
  %14 = udiv i32 %4, %12, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %14, metadata !9003, metadata !DIExpression()), !dbg !9012
  %15 = icmp ugt i32 %13, 458745, !dbg !9022
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !9023
  br i1 %17, label %18, label %33, !dbg !9023

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !9024
  %20 = udiv i32 %19, 458745, !dbg !9025
  %21 = add nuw nsw i32 %20, 1, !dbg !9026
  call void @llvm.dbg.value(metadata i32 %21, metadata !9007, metadata !DIExpression()), !dbg !9027
  %22 = add i32 %14, -1, !dbg !9028
  %23 = udiv i32 %22, 65535, !dbg !9029
  %24 = add nuw nsw i32 %23, 1, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %24, metadata !9010, metadata !DIExpression()), !dbg !9027
  %25 = icmp ugt i32 %21, %24, !dbg !9031
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !9032
  call void @llvm.dbg.value(metadata i32 %26, metadata !9011, metadata !DIExpression()), !dbg !9027
  %27 = udiv i32 %13, %26, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %27, metadata !9002, metadata !DIExpression()), !dbg !9012
  %28 = udiv i32 %14, %26, !dbg !9034
  call void @llvm.dbg.value(metadata i32 %28, metadata !9003, metadata !DIExpression()), !dbg !9012
  %29 = icmp ugt i32 %26, %13, !dbg !9035
  %30 = select i1 %29, i32 1, i32 %27, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %30, metadata !9002, metadata !DIExpression()), !dbg !9012
  %31 = icmp ugt i32 %26, %14, !dbg !9038
  %32 = select i1 %31, i32 1, i32 %28, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %32, metadata !9003, metadata !DIExpression()), !dbg !9012
  br label %33, !dbg !9041

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !9012
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !9012
  call void @llvm.dbg.value(metadata i32 %35, metadata !9002, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 %34, metadata !9003, metadata !DIExpression()), !dbg !9012
  %36 = add i32 %35, -1, !dbg !9042
  %37 = udiv i32 %36, 65535, !dbg !9043
  %38 = add nuw nsw i32 %37, 1, !dbg !9044
  call void @llvm.dbg.value(metadata i32 %38, metadata !9006, metadata !DIExpression()), !dbg !9012
  %39 = add nsw i32 %37, -1, !dbg !9045
  %40 = icmp ult i32 %39, 6, !dbg !9045
  br i1 %40, label %41, label %44, !dbg !9045

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !9045
  %43 = load i32, i32* %42, align 4, !dbg !9045
  br label %44, !dbg !9045

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !9046
  call void @llvm.dbg.value(metadata i32 %45, metadata !9005, metadata !DIExpression()), !dbg !9012
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9048
  %47 = load volatile i32, i32* %46, align 4, !dbg !9049
  %48 = and i32 %47, -897, !dbg !9049
  store volatile i32 %48, i32* %46, align 4, !dbg !9049
  %49 = load volatile i32, i32* %46, align 4, !dbg !9050
  %50 = or i32 %49, %45, !dbg !9050
  store volatile i32 %50, i32* %46, align 4, !dbg !9050
  %51 = add i32 %34, 65535, !dbg !9051
  %52 = and i32 %51, 65535, !dbg !9051
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !9052
  store volatile i32 %52, i32* %53, align 4, !dbg !9053
  %54 = udiv i32 %35, %38, !dbg !9054
  %55 = add i32 %54, 65535, !dbg !9054
  %56 = and i32 %55, 65535, !dbg !9054
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !9055
  store volatile i32 %56, i32* %57, align 4, !dbg !9056
  %58 = mul nuw nsw i32 %38, 1000, !dbg !9057
  %59 = udiv i32 %1, %58, !dbg !9057
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9058
  store volatile i32 %59, i32* %60, align 4, !dbg !9059
  ret void, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !9061 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9065, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i32 %1, metadata !9066, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i1 %2, metadata !9067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9068
  %4 = and i32 %1, 4, !dbg !9069
  %5 = icmp eq i32 %4, 0, !dbg !9069
  %6 = and i32 %1, 2, !dbg !9069
  %7 = icmp eq i32 %6, 0, !dbg !9069
  %8 = and i32 %1, 6, !dbg !9069
  %9 = icmp eq i32 %8, 0, !dbg !9069
  br i1 %9, label %10, label %11, !dbg !9069

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 196) #23, !dbg !9072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 196) #23, !dbg !9072
  unreachable, !dbg !9072

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !9074

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !9075

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9078
  %15 = load volatile i32, i32* %14, align 4, !dbg !9080
  %16 = or i32 %15, 512, !dbg !9080
  store volatile i32 %16, i32* %14, align 4, !dbg !9080
  br label %17, !dbg !9078

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !9081

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9082
  %20 = load volatile i32, i32* %19, align 4, !dbg !9084
  %21 = or i32 %20, 2, !dbg !9084
  store volatile i32 %21, i32* %19, align 4, !dbg !9084
  br label %32, !dbg !9082

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !9085

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9087
  %25 = load volatile i32, i32* %24, align 4, !dbg !9089
  %26 = and i32 %25, -513, !dbg !9089
  store volatile i32 %26, i32* %24, align 4, !dbg !9089
  br label %27, !dbg !9087

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !9090

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9091
  %30 = load volatile i32, i32* %29, align 4, !dbg !9093
  %31 = and i32 %30, -3, !dbg !9093
  store volatile i32 %31, i32* %29, align 4, !dbg !9093
  br label %32, !dbg !9091

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !9094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i1 %1, metadata !9100, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9101
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9102
  %4 = load volatile i32, i32* %3, align 4, !dbg !9102
  %5 = and i32 %4, 2, !dbg !9104
  %6 = select i1 %1, i32 0, i32 -3, !dbg !9104
  %7 = or i32 %5, %6, !dbg !9104
  store volatile i32 %7, i32* %3, align 4, !dbg !9102
  ret void, !dbg !9105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9106 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i1 %1, metadata !9109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9110
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9111
  %4 = load volatile i32, i32* %3, align 4, !dbg !9111
  %5 = and i32 %4, -17, !dbg !9113
  %6 = select i1 %1, i32 0, i32 16, !dbg !9113
  %7 = or i32 %5, %6, !dbg !9113
  store volatile i32 %7, i32* %3, align 4, !dbg !9111
  ret void, !dbg !9114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9117, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i32 %1, metadata !9118, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i1 %2, metadata !9119, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9122
  call void @llvm.dbg.value(metadata i32* null, metadata !9120, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i32 0, metadata !9121, metadata !DIExpression()), !dbg !9122
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9123
  %5 = lshr i32 %1, 16, !dbg !9124
  %6 = add i32 %5, %4, !dbg !9125
  %7 = inttoptr i32 %6 to i32*, !dbg !9126
  call void @llvm.dbg.value(metadata i32* %7, metadata !9120, metadata !DIExpression()), !dbg !9122
  %8 = and i32 %1, 65535, !dbg !9127
  %9 = shl nuw i32 1, %8, !dbg !9128
  call void @llvm.dbg.value(metadata i32 %9, metadata !9121, metadata !DIExpression()), !dbg !9122
  br i1 %2, label %10, label %13, !dbg !9129

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9130
  %12 = or i32 %11, %9, !dbg !9130
  br label %17, !dbg !9132

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9133
  %15 = load volatile i32, i32* %7, align 4, !dbg !9134
  %16 = and i32 %15, %14, !dbg !9134
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9135
  ret void, !dbg !9136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9141, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %1, metadata !9142, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32* null, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 0, metadata !9144, metadata !DIExpression()), !dbg !9145
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9146
  %4 = lshr i32 %1, 16, !dbg !9147
  %5 = add i32 %4, %3, !dbg !9148
  %6 = inttoptr i32 %5 to i32*, !dbg !9149
  call void @llvm.dbg.value(metadata i32* %6, metadata !9143, metadata !DIExpression()), !dbg !9145
  %7 = and i32 %1, 65535, !dbg !9150
  %8 = shl nuw i32 1, %7, !dbg !9151
  call void @llvm.dbg.value(metadata i32 %8, metadata !9144, metadata !DIExpression()), !dbg !9145
  store volatile i32 %8, i32* %6, align 4, !dbg !9152
  ret void, !dbg !9153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9156, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 %1, metadata !9157, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i1 %2, metadata !9158, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9161
  call void @llvm.dbg.value(metadata i32* null, metadata !9159, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9161
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9162
  %5 = lshr i32 %1, 16, !dbg !9163
  %6 = add i32 %5, %4, !dbg !9164
  %7 = inttoptr i32 %6 to i32*, !dbg !9165
  call void @llvm.dbg.value(metadata i32* %7, metadata !9159, metadata !DIExpression()), !dbg !9161
  %8 = and i32 %1, 65535, !dbg !9166
  %9 = shl nuw i32 1, %8, !dbg !9167
  call void @llvm.dbg.value(metadata i32 %9, metadata !9160, metadata !DIExpression()), !dbg !9161
  br i1 %2, label %10, label %13, !dbg !9168

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9169
  %12 = or i32 %11, %9, !dbg !9169
  br label %17, !dbg !9171

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9172
  %15 = load volatile i32, i32* %7, align 4, !dbg !9173
  %16 = and i32 %15, %14, !dbg !9173
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9174
  ret void, !dbg !9175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9176 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9178, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i1 %1, metadata !9179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9180
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9181
  %4 = load volatile i32, i32* %3, align 4, !dbg !9181
  %5 = and i32 %4, -16385, !dbg !9183
  %6 = select i1 %1, i32 0, i32 16384, !dbg !9183
  %7 = or i32 %5, %6, !dbg !9183
  store volatile i32 %7, i32* %3, align 4, !dbg !9181
  ret void, !dbg !9184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9185 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9187, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i1 %1, metadata !9188, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9189
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9190
  %4 = load volatile i32, i32* %3, align 4, !dbg !9190
  %5 = and i32 %4, -8193, !dbg !9192
  %6 = select i1 %1, i32 8192, i32 0, !dbg !9192
  %7 = or i32 %5, %6, !dbg !9192
  store volatile i32 %7, i32* %3, align 4, !dbg !9190
  ret void, !dbg !9193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9194 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9196, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i1 %1, metadata !9197, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9198
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9199
  %4 = load volatile i32, i32* %3, align 4, !dbg !9199
  %5 = and i32 %4, -4097, !dbg !9201
  %6 = select i1 %1, i32 4096, i32 0, !dbg !9201
  %7 = or i32 %5, %6, !dbg !9201
  store volatile i32 %7, i32* %3, align 4, !dbg !9199
  ret void, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9205, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata i32 %1, metadata !9206, metadata !DIExpression()), !dbg !9207
  %3 = and i32 %1, -65, !dbg !9208
  %4 = icmp eq i32 %3, 0, !dbg !9208
  br i1 %4, label %6, label %5, !dbg !9208

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 396) #23, !dbg !9211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 396) #23, !dbg !9211
  unreachable, !dbg !9211

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !9208
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9213
  %9 = load volatile i32, i32* %8, align 4, !dbg !9213
  %10 = and i32 %9, -65, !dbg !9215
  %11 = select i1 %7, i32 0, i32 64, !dbg !9215
  %12 = or i32 %10, %11, !dbg !9215
  store volatile i32 %12, i32* %8, align 4, !dbg !9213
  ret void, !dbg !9216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9219, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i1 %1, metadata !9220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9221
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9222
  %4 = load volatile i32, i32* %3, align 4, !dbg !9222
  %5 = and i32 %4, -1025, !dbg !9224
  %6 = select i1 %1, i32 1024, i32 0, !dbg !9224
  %7 = or i32 %5, %6, !dbg !9224
  store volatile i32 %7, i32* %3, align 4, !dbg !9222
  ret void, !dbg !9225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9228, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i1 %1, metadata !9229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9230
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9231
  %4 = load volatile i32, i32* %3, align 4, !dbg !9231
  %5 = and i32 %4, -513, !dbg !9233
  %6 = select i1 %1, i32 512, i32 0, !dbg !9233
  %7 = or i32 %5, %6, !dbg !9233
  store volatile i32 %7, i32* %3, align 4, !dbg !9231
  ret void, !dbg !9234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9235 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9237, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata i1 %1, metadata !9238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9239
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9240
  %4 = load volatile i32, i32* %3, align 4, !dbg !9240
  %5 = and i32 %4, -257, !dbg !9242
  %6 = select i1 %1, i32 256, i32 0, !dbg !9242
  %7 = or i32 %5, %6, !dbg !9242
  store volatile i32 %7, i32* %3, align 4, !dbg !9240
  ret void, !dbg !9243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9248, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i16 %1, metadata !9249, metadata !DIExpression()), !dbg !9250
  %3 = zext i16 %1 to i32, !dbg !9251
  %4 = icmp ult i16 %1, 512, !dbg !9251
  br i1 %4, label %6, label %5, !dbg !9254

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 462) #23, !dbg !9255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 462) #23, !dbg !9255
  unreachable, !dbg !9255

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9257
  %8 = load volatile i32, i32* %7, align 4, !dbg !9257
  %9 = and i32 %8, -5, !dbg !9259
  %10 = lshr i32 %3, 6, !dbg !9259
  %11 = and i32 %10, 4, !dbg !9259
  %12 = or i32 %9, %11, !dbg !9259
  store volatile i32 %12, i32* %7, align 4, !dbg !9257
  %13 = and i32 %3, 255, !dbg !9260
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9261
  store volatile i32 %13, i32* %14, align 4, !dbg !9262
  ret void, !dbg !9263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9268, metadata !DIExpression()), !dbg !9270
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9271
  %3 = load volatile i32, i32* %2, align 4, !dbg !9271
  call void @llvm.dbg.value(metadata i32 %3, metadata !9269, metadata !DIExpression()), !dbg !9270
  %4 = trunc i32 %3 to i16, !dbg !9272
  %5 = and i16 %4, 255, !dbg !9272
  %6 = lshr i16 %4, 2, !dbg !9272
  %7 = and i16 %6, 256, !dbg !9272
  %8 = or i16 %7, %5, !dbg !9272
  call void @llvm.dbg.value(metadata i16 %8, metadata !9269, metadata !DIExpression()), !dbg !9270
  ret i16 %8, !dbg !9273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9276, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.value(metadata i1 %1, metadata !9277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9278
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9279
  %4 = load volatile i32, i32* %3, align 4, !dbg !9279
  %5 = and i32 %4, -2, !dbg !9281
  %6 = zext i1 %1 to i32, !dbg !9281
  %7 = or i32 %5, %6, !dbg !9281
  store volatile i32 %7, i32* %3, align 4, !dbg !9279
  ret void, !dbg !9282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9285, metadata !DIExpression()), !dbg !9287
  call void @llvm.dbg.value(metadata i1 %1, metadata !9286, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9287
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9288
  %4 = load volatile i32, i32* %3, align 4, !dbg !9288
  %5 = and i32 %4, -3, !dbg !9290
  %6 = select i1 %1, i32 2, i32 0, !dbg !9290
  %7 = or i32 %5, %6, !dbg !9290
  store volatile i32 %7, i32* %3, align 4, !dbg !9288
  ret void, !dbg !9291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9294, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.value(metadata i1 %1, metadata !9295, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9296
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9297
  %4 = load volatile i32, i32* %3, align 4, !dbg !9297
  %5 = and i32 %4, -129, !dbg !9299
  %6 = select i1 %1, i32 128, i32 0, !dbg !9299
  %7 = or i32 %5, %6, !dbg !9299
  store volatile i32 %7, i32* %3, align 4, !dbg !9297
  ret void, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9303, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %1, metadata !9304, metadata !DIExpression()), !dbg !9305
  %3 = and i32 %1, -33, !dbg !9306
  %4 = icmp eq i32 %3, 0, !dbg !9306
  br i1 %4, label %6, label %5, !dbg !9306

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.112, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 553) #23, !dbg !9309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef 553) #23, !dbg !9309
  unreachable, !dbg !9309

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !9306
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9311
  %9 = load volatile i32, i32* %8, align 4, !dbg !9311
  %10 = and i32 %9, -33, !dbg !9313
  %11 = select i1 %7, i32 32, i32 0, !dbg !9313
  %12 = or i32 %10, %11, !dbg !9313
  store volatile i32 %12, i32* %8, align 4, !dbg !9311
  ret void, !dbg !9314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9315 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i1 %1, metadata !9318, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9319
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9320
  %4 = load volatile i32, i32* %3, align 4, !dbg !9320
  %5 = and i32 %4, -16385, !dbg !9322
  %6 = select i1 %1, i32 16384, i32 0, !dbg !9322
  %7 = or i32 %5, %6, !dbg !9322
  store volatile i32 %7, i32* %3, align 4, !dbg !9320
  ret void, !dbg !9323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9324 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9326, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i1 %1, metadata !9327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9328
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9329
  %4 = load volatile i32, i32* %3, align 4, !dbg !9329
  %5 = and i32 %4, -17, !dbg !9331
  %6 = select i1 %1, i32 16, i32 0, !dbg !9331
  %7 = or i32 %5, %6, !dbg !9331
  store volatile i32 %7, i32* %3, align 4, !dbg !9329
  ret void, !dbg !9332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !9333 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i1 %1, metadata !9336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9337
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9338
  %4 = load volatile i32, i32* %3, align 4, !dbg !9338
  %5 = and i32 %4, -2049, !dbg !9340
  %6 = select i1 %1, i32 2048, i32 0, !dbg !9340
  %7 = or i32 %5, %6, !dbg !9340
  store volatile i32 %7, i32* %3, align 4, !dbg !9338
  ret void, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !9342 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !9361, metadata !DIExpression()), !dbg !9366
  %4 = bitcast i32* %2 to i8*, !dbg !9367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9367
  %5 = bitcast i32* %3 to i8*, !dbg !9367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9367
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !9368
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !9369

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9362, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32* %2, metadata !9364, metadata !DIExpression(DW_OP_deref)), !dbg !9366
  call void @llvm.dbg.value(metadata i32* %3, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9366
  br label %8, !dbg !9370

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !9372
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %10, metadata !9362, metadata !DIExpression()), !dbg !9366
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !9373

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #23, !dbg !9374
  call void @llvm.dbg.value(metadata i32 %12, metadata !9363, metadata !DIExpression()), !dbg !9366
  br label %13, !dbg !9376

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9377
  call void @llvm.dbg.value(metadata i32 %14, metadata !9363, metadata !DIExpression()), !dbg !9366
  %15 = load i32, i32* %2, align 4, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %15, metadata !9364, metadata !DIExpression()), !dbg !9366
  %16 = add i32 %15, 1, !dbg !9379
  %17 = udiv i32 %14, %16, !dbg !9380
  %18 = load i32, i32* %3, align 4, !dbg !9381
  call void @llvm.dbg.value(metadata i32 %18, metadata !9365, metadata !DIExpression()), !dbg !9366
  %19 = add i32 %18, 1, !dbg !9382
  %20 = udiv i32 %17, %19, !dbg !9383
  br label %21, !dbg !9384

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9385
  ret i32 %22, !dbg !9385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #15 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %0, metadata !9391, metadata !DIExpression()), !dbg !9392
  %2 = inttoptr i32 %0 to i32*, !dbg !9393
  %3 = load volatile i32, i32* %2, align 4, !dbg !9393
  %4 = lshr i32 %3, 24, !dbg !9394
  %5 = and i32 %4, 7, !dbg !9394
  ret i32 %5, !dbg !9395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !9396 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !9418, metadata !DIExpression()), !dbg !9423
  %4 = bitcast i32* %2 to i8*, !dbg !9424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9424
  %5 = bitcast i32* %3 to i8*, !dbg !9424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9424
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !9425
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !9426

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9419, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i32* %2, metadata !9421, metadata !DIExpression(DW_OP_deref)), !dbg !9423
  call void @llvm.dbg.value(metadata i32* %3, metadata !9422, metadata !DIExpression(DW_OP_deref)), !dbg !9423
  br label %8, !dbg !9427

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !9429
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %10, metadata !9419, metadata !DIExpression()), !dbg !9423
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !9430

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #23, !dbg !9431
  call void @llvm.dbg.value(metadata i32 %12, metadata !9420, metadata !DIExpression()), !dbg !9423
  br label %13, !dbg !9433

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9434
  call void @llvm.dbg.value(metadata i32 %14, metadata !9420, metadata !DIExpression()), !dbg !9423
  %15 = load i32, i32* %2, align 4, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %15, metadata !9421, metadata !DIExpression()), !dbg !9423
  %16 = add i32 %15, 1, !dbg !9436
  %17 = udiv i32 %14, %16, !dbg !9437
  %18 = load i32, i32* %3, align 4, !dbg !9438
  call void @llvm.dbg.value(metadata i32 %18, metadata !9422, metadata !DIExpression()), !dbg !9423
  %19 = add i32 %18, 1, !dbg !9439
  %20 = udiv i32 %17, %19, !dbg !9440
  br label %21, !dbg !9441

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9442
  ret i32 %22, !dbg !9442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !9443 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !9489, metadata !DIExpression()), !dbg !9494
  %4 = bitcast i32* %2 to i8*, !dbg !9495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9495
  %5 = bitcast i32* %3 to i8*, !dbg !9495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9495
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !9496
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !9497

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9490, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i32* %2, metadata !9492, metadata !DIExpression(DW_OP_deref)), !dbg !9494
  call void @llvm.dbg.value(metadata i32* %3, metadata !9493, metadata !DIExpression(DW_OP_deref)), !dbg !9494
  br label %8, !dbg !9498

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !9500
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %10, metadata !9490, metadata !DIExpression()), !dbg !9494
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !9501

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9502
  %13 = lshr i32 %12, 2, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %13, metadata !9491, metadata !DIExpression()), !dbg !9494
  br label %16, !dbg !9505

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %15, metadata !9491, metadata !DIExpression()), !dbg !9494
  br label %16, !dbg !9507

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !9508
  call void @llvm.dbg.value(metadata i32 %17, metadata !9491, metadata !DIExpression()), !dbg !9494
  %18 = load i32, i32* %2, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %18, metadata !9492, metadata !DIExpression()), !dbg !9494
  %19 = add i32 %18, 1, !dbg !9510
  %20 = udiv i32 %17, %19, !dbg !9511
  %21 = load i32, i32* %3, align 4, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %21, metadata !9493, metadata !DIExpression()), !dbg !9494
  %22 = add i32 %21, 1, !dbg !9513
  %23 = udiv i32 %20, %22, !dbg !9514
  br label %24, !dbg !9515

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !9494
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9516
  ret i32 %25, !dbg !9516
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !9517 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !9535, metadata !DIExpression()), !dbg !9540
  %4 = bitcast i32* %2 to i8*, !dbg !9541
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9541
  %5 = bitcast i32* %3 to i8*, !dbg !9541
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9541
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !9542
  %7 = add i32 %6, -815923200, !dbg !9543
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !9543
  %9 = icmp ult i32 %8, 4, !dbg !9543
  br i1 %9, label %10, label %25, !dbg !9543

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !9543
  %12 = add i32 %11, 809020800, !dbg !9543
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #21, !dbg !9544
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %13, metadata !9536, metadata !DIExpression()), !dbg !9540
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !9546

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9547
  %16 = lshr i32 %15, 2, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %16, metadata !9537, metadata !DIExpression()), !dbg !9540
  br label %17, !dbg !9550

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !9551
  call void @llvm.dbg.value(metadata i32 %18, metadata !9537, metadata !DIExpression()), !dbg !9540
  %19 = load i32, i32* %2, align 4, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %19, metadata !9538, metadata !DIExpression()), !dbg !9540
  %20 = add i32 %19, 1, !dbg !9553
  %21 = udiv i32 %18, %20, !dbg !9554
  %22 = load i32, i32* %3, align 4, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %22, metadata !9539, metadata !DIExpression()), !dbg !9540
  %23 = add i32 %22, 1, !dbg !9556
  %24 = udiv i32 %21, %23, !dbg !9557
  br label %25, !dbg !9558

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !9540
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9559
  ret i32 %26, !dbg !9559
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !9560 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9587, metadata !DIExpression()), !dbg !9592
  %4 = bitcast i32* %2 to i8*, !dbg !9593
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9593
  %5 = bitcast i32* %3 to i8*, !dbg !9593
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9593
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9594
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !9595

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9596

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9598

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9599

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9600

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9601

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %2, metadata !9590, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9591, metadata !DIExpression(DW_OP_deref)), !dbg !9592
  br label %13, !dbg !9602

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #21, !dbg !9603
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #23, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %15, metadata !9588, metadata !DIExpression()), !dbg !9592
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !9604

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9605
  %18 = lshr i32 %17, 1, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %18, metadata !9589, metadata !DIExpression()), !dbg !9592
  br label %21, !dbg !9608

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #23, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %20, metadata !9589, metadata !DIExpression()), !dbg !9592
  br label %21, !dbg !9610

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !9611
  call void @llvm.dbg.value(metadata i32 %22, metadata !9589, metadata !DIExpression()), !dbg !9592
  %23 = load i32, i32* %2, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %23, metadata !9590, metadata !DIExpression()), !dbg !9592
  %24 = add i32 %23, 1, !dbg !9613
  %25 = udiv i32 %22, %24, !dbg !9614
  %26 = load i32, i32* %3, align 4, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %26, metadata !9591, metadata !DIExpression()), !dbg !9592
  %27 = add i32 %26, 1, !dbg !9616
  %28 = udiv i32 %25, %27, !dbg !9617
  br label %29, !dbg !9618

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !9592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !9619
  ret i32 %30, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #17 !dbg !9620 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9623, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 undef, metadata !9623, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 undef, metadata !9623, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !9639
  ret void, !dbg !9640
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !9641 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9645, metadata !DIExpression()), !dbg !9647
  %2 = icmp eq i8* %0, null, !dbg !9648
  br i1 %2, label %29, label %3, !dbg !9650

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !9651
  %5 = icmp eq i8 %4, 0, !dbg !9652
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !9653
  br i1 %6, label %29, label %8, !dbg !9653

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9646, metadata !DIExpression()), !dbg !9647
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !9654

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !9646, metadata !DIExpression()), !dbg !9647
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #21, !dbg !9656
  br i1 %10, label %11, label %15, !dbg !9661

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !9662
  %13 = load i8*, i8** %12, align 4, !dbg !9662
  %14 = icmp eq i8* %13, %0, !dbg !9663
  br i1 %14, label %29, label %15, !dbg !9664

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !9646, metadata !DIExpression()), !dbg !9647
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9666
  br i1 %17, label %7, label %8, !dbg !9667, !llvm.loop !9668

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !9646, metadata !DIExpression()), !dbg !9647
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #21, !dbg !9670
  br i1 %20, label %21, label %26, !dbg !9674

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !9675
  %23 = load i8*, i8** %22, align 4, !dbg !9675
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #23, !dbg !9676
  %25 = icmp eq i32 %24, 0, !dbg !9677
  br i1 %25, label %29, label %26, !dbg !9678

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !9679
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !9646, metadata !DIExpression()), !dbg !9647
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9680
  br i1 %28, label %29, label %18, !dbg !9654, !llvm.loop !9681

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !9647
  ret %struct.device* %30, !dbg !9683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !9684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  %2 = icmp eq %struct.device* %0, null, !dbg !9690
  br i1 %2, label %14, label %3, !dbg !9692

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9693
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !9693
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !9694
  %7 = load i8, i8* %6, align 1, !dbg !9694
  %8 = and i8 %7, 1, !dbg !9694
  %9 = icmp eq i8 %8, 0, !dbg !9694
  br i1 %9, label %14, label %10, !dbg !9695

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !9696
  %12 = load i8, i8* %11, align 1, !dbg !9696
  %13 = icmp eq i8 %12, 0, !dbg !9697
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !9689
  ret i1 %15, !dbg !9698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !9704, metadata !DIExpression()), !dbg !9705
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !9706
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !9708 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9716, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !9717, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8* %2, metadata !9718, metadata !DIExpression()), !dbg !9721
  %5 = bitcast i32* %4 to i8*, !dbg !9722
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9722
  call void @llvm.dbg.value(metadata i32 0, metadata !9719, metadata !DIExpression()), !dbg !9721
  store i32 0, i32* %4, align 4, !dbg !9723
  call void @llvm.dbg.value(metadata i32* %4, metadata !9719, metadata !DIExpression(DW_OP_deref)), !dbg !9721
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !9724
  call void @llvm.dbg.value(metadata i16* %6, metadata !9720, metadata !DIExpression()), !dbg !9721
  %7 = load i32, i32* %4, align 4, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %7, metadata !9719, metadata !DIExpression()), !dbg !9721
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !9726
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9727
  ret i32 %8, !dbg !9728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9733, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32* %1, metadata !9734, metadata !DIExpression()), !dbg !9739
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9740
  %4 = load i16*, i16** %3, align 4, !dbg !9740
  call void @llvm.dbg.value(metadata i16* %4, metadata !9735, metadata !DIExpression()), !dbg !9739
  %5 = icmp eq i16* %4, null, !dbg !9741
  br i1 %5, label %14, label %6, !dbg !9742

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !9743
  call void @llvm.dbg.value(metadata i32 %7, metadata !9736, metadata !DIExpression()), !dbg !9743
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !9744
  %9 = load i16, i16* %8, align 2, !dbg !9744
  %10 = add i16 %9, -32767, !dbg !9745
  %11 = icmp ult i16 %10, 2, !dbg !9745
  %12 = add i32 %7, 1, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %12, metadata !9736, metadata !DIExpression()), !dbg !9743
  br i1 %11, label %13, label %6, !dbg !9745, !llvm.loop !9748

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !9751
  br label %14, !dbg !9752

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !9758, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i32 %1, metadata !9759, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !9760, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i8* %3, metadata !9761, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i32 0, metadata !9762, metadata !DIExpression()), !dbg !9770
  %5 = icmp eq i32 %1, 0, !dbg !9771
  br i1 %5, label %16, label %8, !dbg !9772

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !9762, metadata !DIExpression()), !dbg !9770
  %7 = icmp eq i32 %15, %1, !dbg !9771
  br i1 %7, label %16, label %8, !dbg !9772, !llvm.loop !9773

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9762, metadata !DIExpression()), !dbg !9770
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !9775
  %11 = load i16, i16* %10, align 2, !dbg !9775
  call void @llvm.dbg.value(metadata i16 %11, metadata !9764, metadata !DIExpression()), !dbg !9776
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #21, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !9767, metadata !DIExpression()), !dbg !9776
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #23, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %13, metadata !9768, metadata !DIExpression()), !dbg !9776
  %14 = icmp slt i32 %13, 0, !dbg !9779
  %15 = add nuw i32 %9, 1, !dbg !9781
  call void @llvm.dbg.value(metadata i32 %15, metadata !9762, metadata !DIExpression()), !dbg !9770
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !9782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !9783 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !9789, metadata !DIExpression()), !dbg !9790
  %2 = sext i16 %0 to i32, !dbg !9791
  %3 = icmp slt i16 %0, 1, !dbg !9793
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !9794
  %6 = add nsw i32 %2, -1, !dbg !9794
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !9794
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !9794
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9788, metadata !DIExpression()), !dbg !9790
  ret %struct.device* %8, !dbg !9795
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !9796 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9798, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !9799, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i8* %2, metadata !9800, metadata !DIExpression()), !dbg !9803
  %5 = bitcast i32* %4 to i8*, !dbg !9804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9804
  call void @llvm.dbg.value(metadata i32 0, metadata !9801, metadata !DIExpression()), !dbg !9803
  store i32 0, i32* %4, align 4, !dbg !9805
  call void @llvm.dbg.value(metadata i32* %4, metadata !9801, metadata !DIExpression(DW_OP_deref)), !dbg !9803
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !9806
  call void @llvm.dbg.value(metadata i16* %6, metadata !9802, metadata !DIExpression()), !dbg !9803
  %7 = load i32, i32* %4, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata i32 %7, metadata !9801, metadata !DIExpression()), !dbg !9803
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !9808
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !9809
  ret i32 %8, !dbg !9810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9813, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32* %1, metadata !9814, metadata !DIExpression()), !dbg !9818
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9819
  %4 = load i16*, i16** %3, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata i16* %4, metadata !9815, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 0, metadata !9816, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 0, metadata !9817, metadata !DIExpression()), !dbg !9818
  %5 = icmp eq i16* %4, null, !dbg !9820
  br i1 %5, label %22, label %6, !dbg !9822

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9816, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i16* %8, metadata !9815, metadata !DIExpression()), !dbg !9818
  %9 = load i16, i16* %8, align 2, !dbg !9823
  %10 = icmp eq i16 %9, -32768, !dbg !9827
  call void @llvm.dbg.value(metadata i32 undef, metadata !9816, metadata !DIExpression()), !dbg !9818
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !9828
  call void @llvm.dbg.value(metadata i16* %11, metadata !9815, metadata !DIExpression()), !dbg !9818
  %12 = zext i1 %10 to i32, !dbg !9829
  %13 = add i32 %7, %12, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %13, metadata !9816, metadata !DIExpression()), !dbg !9818
  %14 = icmp eq i32 %13, 2, !dbg !9830
  br i1 %14, label %15, label %6, !dbg !9831

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !9818
  call void @llvm.dbg.value(metadata i32 %16, metadata !9817, metadata !DIExpression()), !dbg !9818
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !9832
  %18 = load i16, i16* %17, align 2, !dbg !9832
  %19 = icmp eq i16 %18, 32767, !dbg !9833
  %20 = add i32 %16, 1, !dbg !9834
  call void @llvm.dbg.value(metadata i32 %20, metadata !9817, metadata !DIExpression()), !dbg !9818
  br i1 %19, label %21, label %15, !dbg !9836, !llvm.loop !9837

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !9839
  br label %22, !dbg !9840

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !9841
  call void @llvm.dbg.value(metadata i16* %23, metadata !9815, metadata !DIExpression()), !dbg !9818
  ret i16* %23, !dbg !9842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !9843 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9846
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 7, !dbg !9847
  ret i32* %2, !dbg !9848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !9849 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10002, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10003, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10004, metadata !DIExpression()), !dbg !10005
  ret void, !dbg !10006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10011, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata i32 %1, metadata !10012, metadata !DIExpression()), !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 %1, metadata !10020, metadata !DIExpression()), !dbg !10021
  ret void, !dbg !10022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !10023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10027, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i8* %1, metadata !10028, metadata !DIExpression()), !dbg !10029
  ret i32 -134, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !10031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10035, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i8* %1, metadata !10036, metadata !DIExpression()), !dbg !10037
  ret i32 -134, !dbg !10038
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10042, metadata !DIExpression()), !dbg !10043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10044, !srcloc !10050
  call void @llvm.dbg.value(metadata i32 undef, metadata !10047, metadata !DIExpression()) #20, !dbg !10051
  call void @llvm.dbg.value(metadata i32 undef, metadata !10048, metadata !DIExpression()) #20, !dbg !10051
  br label %3, !dbg !10052

3:                                                ; preds = %3, %1
  br label %3, !dbg !10053, !llvm.loop !10056
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10063, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10064, metadata !DIExpression()), !dbg !10065
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !10066
  unreachable, !dbg !10066
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10069, metadata !DIExpression()), !dbg !10070
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !10071
  unreachable, !dbg !10071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10075, metadata !DIExpression()), !dbg !10078
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10079, !srcloc !10050
  call void @llvm.dbg.value(metadata i32 undef, metadata !10047, metadata !DIExpression()) #20, !dbg !10081
  call void @llvm.dbg.value(metadata i32 undef, metadata !10048, metadata !DIExpression()) #20, !dbg !10081
  call void @llvm.dbg.value(metadata i32 undef, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10077, metadata !DIExpression()), !dbg !10078
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #21, !dbg !10082
  %4 = icmp eq i32 %0, 4, !dbg !10083
  br i1 %4, label %5, label %6, !dbg !10088

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #23, !dbg !10089
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.124, i32 0, i32 0)) #23, !dbg !10089
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #23, !dbg !10089
  unreachable, !dbg !10089

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !10079
  call void @llvm.dbg.value(metadata i32 %7, metadata !10047, metadata !DIExpression()) #20, !dbg !10081
  call void @llvm.dbg.value(metadata i32 %7, metadata !10076, metadata !DIExpression()), !dbg !10078
  %8 = tail call fastcc %struct.k_thread* @k_current_get.125() #22, !dbg !10091
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 undef, metadata !10092, metadata !DIExpression()) #20, !dbg !10095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !10097, !srcloc !10098
  tail call fastcc void @k_thread_abort.126(%struct.k_thread* noundef %8) #21, !dbg !10099
  ret void, !dbg !10102
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.125() unnamed_addr #5 !dbg !10103 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.127() #22, !dbg !10107
  ret %struct.k_thread* %1, !dbg !10108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.126(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !10115, !srcloc !10117
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #23, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.127() unnamed_addr #5 !dbg !10120 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !10121, !srcloc !10123
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #23, !dbg !10124
  ret %struct.k_thread* %1, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 %2, metadata !10132, metadata !DIExpression()), !dbg !10133
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #23, !dbg !10134
  ret void, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10140, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i8* %1, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 %2, metadata !10142, metadata !DIExpression()), !dbg !10143
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #23, !dbg !10144
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10146 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #21, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10151, metadata !DIExpression()), !dbg !10152
  tail call fastcc void @init_idle_thread(i32 noundef %0) #21, !dbg !10153
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10154
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10155
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10156
  %4 = trunc i32 %0 to i8, !dbg !10157
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10158
  store i8 %4, i8* %5, align 4, !dbg !10159
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10160
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #21, !dbg !10161
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10162
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10163
  store i8* %8, i8** %9, align 4, !dbg !10164
  ret void, !dbg !10165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10168, metadata !DIExpression()), !dbg !10174
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10175
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10169, metadata !DIExpression()), !dbg !10174
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10176
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10170, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.132, i32 0, i32 0), metadata !10173, metadata !DIExpression()), !dbg !10174
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10177
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10178
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 40, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.132, i32 0, i32 0)) #23, !dbg !10179
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #21, !dbg !10180
  ret void, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !10182 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10186, metadata !DIExpression()), !dbg !10187
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !10188
  ret i8* %2, !dbg !10189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10197
  %3 = load i8, i8* %2, align 1, !dbg !10198
  %4 = and i8 %3, -5, !dbg !10198
  store i8 %4, i8* %2, align 1, !dbg !10198
  ret void, !dbg !10199
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !10200 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #21, !dbg !10203
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #23, !dbg !10204
  %3 = ptrtoint i8* %2 to i32, !dbg !10213
  %4 = add i32 %3, 2048, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %4, metadata !10208, metadata !DIExpression()) #20, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %4, metadata !10216, metadata !DIExpression()) #20, !dbg !10219
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #20, !dbg !10221, !srcloc !10222
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10223
  %6 = or i32 %5, 512, !dbg !10223
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10223
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -2, i32 noundef 255) #23, !dbg !10224
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -5, i32 noundef 0) #23, !dbg !10227
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -12, i32 noundef 0) #23, !dbg !10228
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -11, i32 noundef 0) #23, !dbg !10229
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -10, i32 noundef 0) #23, !dbg !10230
  tail call fastcc void @__NVIC_SetPriority.135(i32 noundef -4, i32 noundef 0) #23, !dbg !10231
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10232
  %8 = or i32 %7, 458752, !dbg !10232
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10232
  tail call void @z_arm_fault_init() #23, !dbg !10233
  tail call void @z_arm_cpu_idle_init() #23, !dbg !10234
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10235
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10238
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !10239
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %9) #20, !dbg !10239
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10202, metadata !DIExpression()), !dbg !10240
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #21, !dbg !10241
  call void @z_device_state_init() #23, !dbg !10242
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #21, !dbg !10243
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #21, !dbg !10244
  %10 = call fastcc i8* @prepare_multithreading() #21, !dbg !10245
  call fastcc void @switch_to_main_thread(i8* noundef %10) #25, !dbg !10246
  unreachable, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1864, metadata !DIExpression()), !dbg !10247
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10248
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10248
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1865, metadata !DIExpression()), !dbg !10247
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1865, metadata !DIExpression()), !dbg !10247
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10249
  br i1 %7, label %8, label %35, !dbg !10250

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1865, metadata !DIExpression()), !dbg !10247
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10251
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1875, metadata !DIExpression()), !dbg !10252
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10253
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10253
  %14 = tail call i32 %13(%struct.device* noundef %11) #23, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %14, metadata !1879, metadata !DIExpression()), !dbg !10252
  %15 = icmp eq %struct.device* %11, null, !dbg !10255
  br i1 %15, label %32, label %16, !dbg !10257

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10258
  br i1 %17, label %26, label %18, !dbg !10261

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10262
  call void @llvm.dbg.value(metadata i32 %19, metadata !1879, metadata !DIExpression()), !dbg !10252
  %20 = icmp ult i32 %19, 255, !dbg !10264
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %21, metadata !1879, metadata !DIExpression()), !dbg !10252
  %22 = trunc i32 %21 to i8, !dbg !10265
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10266
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10266
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10267
  store i8 %22, i8* %25, align 1, !dbg !10268
  br label %26, !dbg !10269

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10270
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10270
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10271
  %30 = load i8, i8* %29, align 1, !dbg !10272
  %31 = or i8 %30, 1, !dbg !10272
  store i8 %31, i8* %29, align 1, !dbg !10272
  br label %32, !dbg !10273

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10274
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1865, metadata !DIExpression()), !dbg !10247
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10249
  br i1 %34, label %8, label %35, !dbg !10250, !llvm.loop !10275

35:                                               ; preds = %32, %1
  ret void, !dbg !10277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.135(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10281, metadata !DIExpression()), !dbg !10282
  %3 = trunc i32 %1 to i8, !dbg !10283
  %4 = shl i8 %3, 4, !dbg !10283
  %5 = and i32 %0, 15, !dbg !10286
  %6 = add nsw i32 %5, -4, !dbg !10287
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10288
  store volatile i8 %4, i8* %7, align 1, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: optsize
declare !dbg !10291 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !10292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10295, metadata !DIExpression()), !dbg !10296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10297
  store i8 1, i8* %2, align 1, !dbg !10298
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10299
  store i8 1, i8* %3, align 4, !dbg !10300
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, !dbg !10301
  store %struct.k_heap* null, %struct.k_heap** %4, align 8, !dbg !10302
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10305 {
  tail call void @z_sched_init() #23, !dbg !10310
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10311
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.136, i32 0, i32 0)) #23, !dbg !10312
  call void @llvm.dbg.value(metadata i8* %1, metadata !10309, metadata !DIExpression()), !dbg !10313
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #21, !dbg !10314
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #23, !dbg !10315
  tail call void @z_init_cpu(i32 noundef 0) #21, !dbg !10316
  ret i8* %1, !dbg !10317
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !10318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #23, !dbg !10324
  unreachable, !dbg !10325
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10328, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i8* %1, metadata !10329, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i8* %2, metadata !10330, metadata !DIExpression()), !dbg !10331
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10332
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #21, !dbg !10333
  tail call void @boot_banner() #23, !dbg !10334
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #21, !dbg !10335
  tail call void @z_init_static_threads() #23, !dbg !10336
  tail call void @main() #23, !dbg !10337
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10338
  %5 = and i8 %4, -2, !dbg !10338
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10340 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10350, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata i8* %1, metadata !10351, metadata !DIExpression()), !dbg !10358
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !10359
  br i1 %3, label %4, label %5, !dbg !10362

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 51) #23, !dbg !10363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.140, i32 0, i32 0)) #23, !dbg !10363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 51) #23, !dbg !10363
  unreachable, !dbg !10363

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10365, metadata !DIExpression()) #20, !dbg !10372
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10374, !srcloc !10380
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10381
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()) #20, !dbg !10381
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10372
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10382
  br i1 %7, label %9, label %8, !dbg !10385

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10386
  unreachable, !dbg !10386

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10381
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10372
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10388
  call void @llvm.dbg.value(metadata i32 undef, metadata !10353, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10352, metadata !DIExpression()), !dbg !10358
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10389
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !10352, metadata !DIExpression()), !dbg !10358
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !10391
  br i1 %11, label %17, label %12, !dbg !10391

12:                                               ; preds = %9, %12
  %13 = phi %struct.k_thread* [ %15, %12 ], [ %10, %9 ]
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #23, !dbg !10392
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !10395
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10352, metadata !DIExpression()), !dbg !10358
  %15 = load %struct.k_thread*, %struct.k_thread** %14, align 4, !dbg !10389
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !10352, metadata !DIExpression()), !dbg !10358
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !10391
  br i1 %16, label %17, label %12, !dbg !10391, !llvm.loop !10396

17:                                               ; preds = %12, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10403, metadata !DIExpression()) #20, !dbg !10404
  %18 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10406
  br i1 %18, label %20, label %19, !dbg !10409

19:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10410
  unreachable, !dbg !10410

20:                                               ; preds = %17
  %21 = extractvalue { i32, i32 } %6, 0, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %21, metadata !10377, metadata !DIExpression()) #20, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %21, metadata !10371, metadata !DIExpression()) #20, !dbg !10372
  call void @llvm.dbg.value(metadata i32 %21, metadata !10353, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10404
  call void @llvm.dbg.value(metadata i32 undef, metadata !10412, metadata !DIExpression()) #20, !dbg !10415
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #20, !dbg !10417, !srcloc !10418
  ret void, !dbg !10419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !10420 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !10424, metadata !DIExpression()), !dbg !10426
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !10427
  %3 = load i32, i32* %2, align 4, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %3, metadata !10425, metadata !DIExpression()), !dbg !10426
  %4 = icmp eq i32 %3, 0, !dbg !10428
  br i1 %4, label %10, label %5, !dbg !10430

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !10431
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !10434
  %8 = zext i8 %7 to i32, !dbg !10435
  %9 = icmp eq i32 %6, %8, !dbg !10436
  br i1 %9, label %11, label %10, !dbg !10437

10:                                               ; preds = %5, %1
  br label %11, !dbg !10438

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !10426
  ret i1 %12, !dbg !10439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !10446
  %3 = zext i8 %2 to i32, !dbg !10447
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10448
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !10449
  %6 = or i32 %5, %3, !dbg !10450
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !10451
  store i32 %6, i32* %7, align 4, !dbg !10452
  ret void, !dbg !10453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !10456, metadata !DIExpression()), !dbg !10457
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !10458
  %3 = load i32, i32* %2, align 4, !dbg !10458
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !10460
  %5 = zext i8 %4 to i32, !dbg !10461
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10462
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !10463
  %8 = or i32 %7, %5, !dbg !10464
  %9 = icmp eq i32 %3, %8, !dbg !10465
  br i1 %9, label %10, label %11, !dbg !10466

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10467
  br label %11, !dbg !10468

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !10469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10470 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10472, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i8* %1, metadata !10473, metadata !DIExpression()), !dbg !10476
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !10477
  br i1 %3, label %4, label %5, !dbg !10480

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 79) #23, !dbg !10481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.140, i32 0, i32 0)) #23, !dbg !10481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 79) #23, !dbg !10481
  unreachable, !dbg !10481

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10365, metadata !DIExpression()) #20, !dbg !10483
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10485, !srcloc !10380
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10487
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()) #20, !dbg !10487
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10483
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10488
  br i1 %7, label %9, label %8, !dbg !10489

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10490
  unreachable, !dbg !10490

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10487
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10483
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10474, metadata !DIExpression()), !dbg !10476
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10492
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10476
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !10494
  br i1 %11, label %26, label %12, !dbg !10494

12:                                               ; preds = %9, %22
  %13 = phi %struct.k_thread* [ %24, %22 ], [ %10, %9 ]
  %14 = phi { i32, i32 } [ %19, %22 ], [ %6, %9 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10403, metadata !DIExpression()) #20, !dbg !10495
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10499
  br i1 %15, label %17, label %16, !dbg !10500

16:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10501
  unreachable, !dbg !10501

17:                                               ; preds = %12
  %18 = extractvalue { i32, i32 } %14, 0, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %18, metadata !10398, metadata !DIExpression()) #20, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %18, metadata !10412, metadata !DIExpression()) #20, !dbg !10502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #20, !dbg !10504, !srcloc !10418
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #23, !dbg !10505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10365, metadata !DIExpression()) #20, !dbg !10506
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10508, !srcloc !10380
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10510
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()) #20, !dbg !10510
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10506
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10511
  br i1 %20, label %22, label %21, !dbg !10512

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10513
  unreachable, !dbg !10513

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10510
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10514
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10476
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !10515
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10474, metadata !DIExpression()), !dbg !10476
  %24 = load %struct.k_thread*, %struct.k_thread** %23, align 4, !dbg !10492
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10476
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !10494
  br i1 %25, label %26, label %12, !dbg !10494, !llvm.loop !10516

26:                                               ; preds = %22, %9
  %27 = phi { i32, i32 } [ %6, %9 ], [ %19, %22 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10403, metadata !DIExpression()) #20, !dbg !10518
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10520
  br i1 %28, label %30, label %29, !dbg !10521

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10522
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10522
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10522
  unreachable, !dbg !10522

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 0, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %31, metadata !10398, metadata !DIExpression()) #20, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %31, metadata !10412, metadata !DIExpression()) #20, !dbg !10523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #20, !dbg !10525, !srcloc !10418
  ret void, !dbg !10526
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10527 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !10528, !srcloc !10535
  call void @llvm.dbg.value(metadata i32 %1, metadata !10531, metadata !DIExpression()) #20, !dbg !10536
  %2 = icmp ne i32 %1, 0, !dbg !10537
  ret i1 %2, !dbg !10538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !10539 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10540
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10541
  %3 = load i8, i8* %2, align 4, !dbg !10542
  %4 = or i8 %3, 1, !dbg !10542
  store i8 %4, i8* %2, align 4, !dbg !10542
  ret void, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !10544 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10546
  %3 = load i8, i8* %2, align 4, !dbg !10547
  %4 = and i8 %3, -2, !dbg !10547
  store i8 %4, i8* %2, align 4, !dbg !10547
  ret void, !dbg !10548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !10549 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10550
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10551
  %3 = load i8, i8* %2, align 4, !dbg !10551
  %4 = and i8 %3, 1, !dbg !10552
  %5 = icmp ne i8 %4, 0, !dbg !10553
  ret i1 %5, !dbg !10554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_monitor_exit(%struct.k_thread* noundef readonly %0) local_unnamed_addr #1 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10559, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10365, metadata !DIExpression()) #20, !dbg !10565
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10567, !srcloc !10380
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10569
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()) #20, !dbg !10569
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10565
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10570
  br i1 %3, label %5, label %4, !dbg !10571

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10572
  unreachable, !dbg !10572

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10569
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10565
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10573
  call void @llvm.dbg.value(metadata i32 undef, metadata !10560, metadata !DIExpression()), !dbg !10564
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10574
  %7 = icmp eq %struct.k_thread* %6, %0, !dbg !10575
  br i1 %7, label %8, label %11, !dbg !10576

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10577
  %10 = load %struct.k_thread*, %struct.k_thread** %9, align 8, !dbg !10577
  store %struct.k_thread* %10, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10579
  br label %22, !dbg !10580

11:                                               ; preds = %5, %14
  %12 = phi %struct.k_thread* [ %16, %14 ], [ %6, %5 ], !dbg !10581
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !10561, metadata !DIExpression()), !dbg !10581
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !10582
  br i1 %13, label %22, label %14, !dbg !10583

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !10584
  %16 = load %struct.k_thread*, %struct.k_thread** %15, align 8, !dbg !10584
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !10585
  br i1 %17, label %18, label %11, !dbg !10586, !llvm.loop !10587

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !10584
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10589
  %21 = load %struct.k_thread*, %struct.k_thread** %20, align 8, !dbg !10589
  store %struct.k_thread* %21, %struct.k_thread** %19, align 8, !dbg !10592
  br label %22, !dbg !10593

22:                                               ; preds = %11, %18, %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10403, metadata !DIExpression()) #20, !dbg !10594
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10596
  br i1 %23, label %25, label %24, !dbg !10597

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10598
  unreachable, !dbg !10598

25:                                               ; preds = %22
  %26 = extractvalue { i32, i32 } %2, 0, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %26, metadata !10377, metadata !DIExpression()) #20, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %26, metadata !10371, metadata !DIExpression()) #20, !dbg !10565
  call void @llvm.dbg.value(metadata i32 %26, metadata !10560, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10594
  call void @llvm.dbg.value(metadata i32 undef, metadata !10412, metadata !DIExpression()) #20, !dbg !10599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #20, !dbg !10601, !srcloc !10418
  ret void, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10607, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i8* %1, metadata !10608, metadata !DIExpression()), !dbg !10609
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !10610
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !10612
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !10607, metadata !DIExpression()), !dbg !10609
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 0, !dbg !10613
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #23, !dbg !10614
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 31, !dbg !10615
  store i8 0, i8* %8, align 1, !dbg !10616
  ret i32 0, !dbg !10617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !10618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10622, metadata !DIExpression()), !dbg !10623
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !10624
  ret i8* %2, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10626 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10630, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i8* %1, metadata !10631, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %2, metadata !10632, metadata !DIExpression()), !dbg !10633
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !10634
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #23, !dbg !10635
  ret i32 0, !dbg !10636
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2003, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !2004, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 %2, metadata !2005, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 0, metadata !2006, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8 undef, metadata !2008, metadata !DIExpression()), !dbg !10637
  %4 = icmp eq i8* %1, null, !dbg !10638
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10640
  br i1 %6, label %46, label %7, !dbg !10640

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10641
  %9 = load i8, i8* %8, align 1, !dbg !10641
  call void @llvm.dbg.value(metadata i8 %9, metadata !2008, metadata !DIExpression()), !dbg !10637
  %10 = add i32 %2, -1, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %10, metadata !2005, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8 0, metadata !2009, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i8 %9, metadata !2008, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 0, metadata !2006, metadata !DIExpression()), !dbg !10637
  %11 = icmp eq i8 %9, 0, !dbg !10644
  br i1 %11, label %12, label %15, !dbg !10646

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10647
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10648
  store i8 0, i8* %14, align 1, !dbg !10649
  br label %46, !dbg !10650

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2009, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i8 %17, metadata !2008, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 %18, metadata !2006, metadata !DIExpression()), !dbg !10637
  %19 = zext i8 %17 to i32, !dbg !10651
  %20 = zext i8 %16 to i32, !dbg !10652
  %21 = shl nuw i32 1, %20, !dbg !10652
  call void @llvm.dbg.value(metadata i32 %21, metadata !2007, metadata !DIExpression()), !dbg !10637
  %22 = and i32 %21, %19, !dbg !10654
  %23 = icmp eq i32 %22, 0, !dbg !10656
  br i1 %23, label %42, label %24, !dbg !10657

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10658
  %26 = sub i32 %10, %18, !dbg !10659
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10660
  %28 = load i8*, i8** %27, align 4, !dbg !10660
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10661
  %30 = load i32, i32* %29, align 4, !dbg !10661
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #21, !dbg !10662
  %32 = add i32 %31, %18, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %32, metadata !2006, metadata !DIExpression()), !dbg !10637
  %33 = trunc i32 %21 to i8, !dbg !10664
  %34 = xor i8 %33, -1, !dbg !10664
  %35 = and i8 %17, %34, !dbg !10664
  call void @llvm.dbg.value(metadata i8 %35, metadata !2008, metadata !DIExpression()), !dbg !10637
  %36 = icmp eq i8 %35, 0, !dbg !10665
  br i1 %36, label %12, label %37, !dbg !10667

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10668
  %39 = sub i32 %10, %32, !dbg !10670
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.149, i32 0, i32 0), i32 noundef 1) #21, !dbg !10671
  %41 = add i32 %40, %32, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %41, metadata !2006, metadata !DIExpression()), !dbg !10637
  br label %42, !dbg !10673

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10637
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10637
  call void @llvm.dbg.value(metadata i8 %44, metadata !2008, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 %43, metadata !2006, metadata !DIExpression()), !dbg !10637
  %45 = add i8 %16, 1, !dbg !10674
  call void @llvm.dbg.value(metadata i8 %45, metadata !2009, metadata !DIExpression()), !dbg !10643
  br label %15, !dbg !10646

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.150, i32 0, i32 0), %3 ], !dbg !10637
  ret i8* %47, !dbg !10675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10680, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i32 %1, metadata !10681, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i8* %2, metadata !10682, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i32 %3, metadata !10683, metadata !DIExpression()), !dbg !10685
  %5 = icmp ult i32 %1, %3, !dbg !10686
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10686
  call void @llvm.dbg.value(metadata i32 %6, metadata !10684, metadata !DIExpression()), !dbg !10685
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #23, !dbg !10687
  ret i32 %6, !dbg !10688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10691, metadata !DIExpression()), !dbg !10692
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #23, !dbg !10693
  ret void, !dbg !10694
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !10695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10704, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10705, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %2, metadata !10706, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10707, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i8* %4, metadata !10708, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i8* %5, metadata !10709, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i8* %6, metadata !10710, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %7, metadata !10711, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %8, metadata !10712, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i8* %9, metadata !10713, metadata !DIExpression()), !dbg !10716
  %11 = icmp eq i32 %7, 40, !dbg !10717
  br i1 %11, label %12, label %15, !dbg !10717

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !10717
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #21, !dbg !10717
  br i1 %14, label %19, label %18, !dbg !10717

15:                                               ; preds = %10
  %16 = add i32 %7, 29, !dbg !10717
  %17 = icmp ult i32 %16, 69, !dbg !10717
  br i1 %17, label %19, label %18, !dbg !10717

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.13.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 536) #23, !dbg !10721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14.163, i32 0, i32 0), i32 noundef %7, i32 noundef 39, i32 noundef -29) #23, !dbg !10721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 536) #23, !dbg !10721
  unreachable, !dbg !10721

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10723
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #21, !dbg !10724
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10725
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #21, !dbg !10726
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #21, !dbg !10727
  call void @llvm.dbg.value(metadata i8* %22, metadata !10714, metadata !DIExpression()), !dbg !10716
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #23, !dbg !10728
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10729
  store i8* null, i8** %23, align 4, !dbg !10730
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !10731
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %24, align 8, !dbg !10732
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 1, !dbg !10733
  store i8* %4, i8** %25, align 4, !dbg !10734
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 2, !dbg !10735
  store i8* %5, i8** %26, align 8, !dbg !10736
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 3, !dbg !10737
  store i8* %6, i8** %27, align 4, !dbg !10738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10365, metadata !DIExpression()) #20, !dbg !10739
  %28 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !10741, !srcloc !10380
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10743
  call void @llvm.dbg.value(metadata i32 undef, metadata !10378, metadata !DIExpression()) #20, !dbg !10743
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10739
  %29 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10744
  br i1 %29, label %31, label %30, !dbg !10745

30:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #23, !dbg !10746
  unreachable, !dbg !10746

31:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !10377, metadata !DIExpression()) #20, !dbg !10743
  call void @llvm.dbg.value(metadata i32 undef, metadata !10371, metadata !DIExpression()) #20, !dbg !10739
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10747
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()), !dbg !10716
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10748
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10749
  store %struct.k_thread* %32, %struct.k_thread** %33, align 8, !dbg !10750
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !10403, metadata !DIExpression()) #20, !dbg !10752
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10754
  br i1 %34, label %36, label %35, !dbg !10755

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #23, !dbg !10756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #23, !dbg !10756
  unreachable, !dbg !10756

36:                                               ; preds = %31
  %37 = extractvalue { i32, i32 } %28, 0, !dbg !10741
  call void @llvm.dbg.value(metadata i32 %37, metadata !10377, metadata !DIExpression()) #20, !dbg !10743
  call void @llvm.dbg.value(metadata i32 %37, metadata !10371, metadata !DIExpression()) #20, !dbg !10739
  call void @llvm.dbg.value(metadata i32 %37, metadata !10715, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 undef, metadata !10398, metadata !DIExpression()) #20, !dbg !10752
  call void @llvm.dbg.value(metadata i32 undef, metadata !10412, metadata !DIExpression()) #20, !dbg !10757
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #20, !dbg !10759, !srcloc !10418
  %38 = icmp eq i8* %9, null, !dbg !10760
  %39 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !10762
  br i1 %38, label %43, label %40, !dbg !10763

40:                                               ; preds = %36
  %41 = tail call i8* @strncpy(i8* noundef nonnull %39, i8* noundef nonnull %9, i32 noundef 31) #23, !dbg !10764
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 31, !dbg !10766
  store i8 0, i8* %42, align 1, !dbg !10767
  br label %44, !dbg !10768

43:                                               ; preds = %36
  store i8 0, i8* %39, align 4, !dbg !10769
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10771
  %46 = icmp eq %struct.k_thread* %45, null, !dbg !10771
  br i1 %46, label %50, label %47, !dbg !10773

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %45, i32 0, i32 8, !dbg !10774
  %49 = load %struct.k_heap*, %struct.k_heap** %48, align 8, !dbg !10774
  br label %50, !dbg !10775

50:                                               ; preds = %44, %47
  %51 = phi %struct.k_heap* [ %49, %47 ], [ null, %44 ], !dbg !10716
  %52 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, !dbg !10776
  store %struct.k_heap* %51, %struct.k_heap** %52, align 8, !dbg !10778
  ret i8* %22, !dbg !10779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !10780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !10786
  ret i1 %2, !dbg !10787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !10788 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !10793, metadata !DIExpression()), !dbg !10794
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !10795
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #21, !dbg !10796
  ret void, !dbg !10797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !10798 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10803, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %1, metadata !10804, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %2, metadata !10805, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %3, metadata !10806, metadata !DIExpression()), !dbg !10807
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !10808
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !10809
  %6 = trunc i32 %3 to i8, !dbg !10810
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !10811
  store i8 %6, i8* %7, align 4, !dbg !10812
  %8 = trunc i32 %2 to i8, !dbg !10813
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !10814
  store i8 %8, i8* %9, align 1, !dbg !10815
  %10 = trunc i32 %1 to i8, !dbg !10816
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !10817
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !10817
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !10817
  store i8 %10, i8* %13, align 2, !dbg !10818
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !10819
  store i8 0, i8* %14, align 1, !dbg !10820
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #21, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10827, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10828, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %1, metadata !10829, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10835
  %3 = add i32 %1, 7, !dbg !10836
  %4 = and i32 %3, -8, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %4, metadata !10830, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i8* undef, metadata !10833, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %4, metadata !10831, metadata !DIExpression()), !dbg !10835
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !10838
  call void @llvm.dbg.value(metadata i8* %5, metadata !10832, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i8* %5, metadata !10832, metadata !DIExpression()), !dbg !10835
  ret i8* %5, !dbg !10839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !10840 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10845, metadata !DIExpression()), !dbg !10846
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !10847
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !10848
  ret void, !dbg !10849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !10850 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !10852, metadata !DIExpression()), !dbg !10853
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !10854
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #21, !dbg !10855
  ret void, !dbg !10856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10861, metadata !DIExpression()), !dbg !10862
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10863
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !10864
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10865
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !10866
  ret void, !dbg !10867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10873, metadata !DIExpression()), !dbg !10874
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10875
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !10876
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10877
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !10878
  ret void, !dbg !10879
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !10880 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10897, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10888, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10889, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %2, metadata !10890, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10891, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i8* %4, metadata !10892, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i8* %5, metadata !10893, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i8* %6, metadata !10894, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %7, metadata !10895, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %8, metadata !10896, metadata !DIExpression()), !dbg !10898
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !10899, !srcloc !10535
  call void @llvm.dbg.value(metadata i32 %11, metadata !10531, metadata !DIExpression()) #20, !dbg !10904
  %12 = icmp eq i32 %11, 0, !dbg !10905
  br i1 %12, label %14, label %13, !dbg !10906

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 647) #23, !dbg !10907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.167, i32 0, i32 0)) #23, !dbg !10907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 647) #23, !dbg !10907
  unreachable, !dbg !10907

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !10897, metadata !DIExpression()), !dbg !10898
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #21, !dbg !10909
  %17 = icmp eq i64 %15, -1, !dbg !10910
  br i1 %17, label %19, label %18, !dbg !10912

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #21, !dbg !10913
  br label %19, !dbg !10915

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !10916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10917 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10921, metadata !DIExpression()), !dbg !10923
  %4 = icmp eq i64 %3, 0, !dbg !10924
  br i1 %4, label %5, label %6, !dbg !10926

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.168(%struct.k_thread* noundef %0) #21, !dbg !10927
  br label %7, !dbg !10929

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !10930
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.168(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10933 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10937, metadata !DIExpression()), !dbg !10938
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !10939, !srcloc !10941
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #21, !dbg !10942
  ret void, !dbg !10943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10944 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10947, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10946, metadata !DIExpression()), !dbg !10948
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10949
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !10950
  ret void, !dbg !10951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10954, metadata !DIExpression()), !dbg !10974
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !10975

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 750) #23, !dbg !10979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #23, !dbg !10979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 750) #23, !dbg !10979
  unreachable, !dbg !10979

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !10954, metadata !DIExpression()), !dbg !10974
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !10982
  br i1 %4, label %6, label %5, !dbg !10983

5:                                                ; preds = %2
  tail call void @k_sched_lock() #23, !dbg !10984
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10972, metadata !DIExpression()), !dbg !10985
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !10986

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !10990
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !10990
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !10992
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !10992
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !10993
  %12 = load i32, i32* %11, align 4, !dbg !10993
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !10994
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !10994
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !10995
  %16 = load i8*, i8** %15, align 4, !dbg !10995
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !10996
  %18 = load i8*, i8** %17, align 4, !dbg !10996
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !10997
  %20 = load i8*, i8** %19, align 4, !dbg !10997
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !10998
  %22 = load i32, i32* %21, align 4, !dbg !10998
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !10999
  %24 = load i32, i32* %23, align 4, !dbg !10999
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !11000
  %26 = load i8*, i8** %25, align 4, !dbg !11000
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #21, !dbg !11001
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !11002
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !11003
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !11004
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !11004
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11005
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !10954, metadata !DIExpression()), !dbg !10974
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11006
  br i1 %32, label %1, label %2, !dbg !10975, !llvm.loop !11007

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 781) #23, !dbg !11009
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #23, !dbg !11009
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 781) #23, !dbg !11009
  unreachable, !dbg !11009

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !10972, metadata !DIExpression()), !dbg !10985
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11012
  br i1 %36, label %38, label %37, !dbg !11013

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #23, !dbg !11014
  ret void, !dbg !11015

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !11016
  %40 = load i32, i32* %39, align 4, !dbg !11016
  %41 = icmp eq i32 %40, -1, !dbg !11019
  br i1 %41, label %50, label %42, !dbg !11020

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !11021
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !11021
  %45 = icmp sgt i32 %40, 0, !dbg !11023
  %46 = select i1 %45, i32 %40, i32 0, !dbg !11023
  %47 = zext i32 %46 to i64, !dbg !11023
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.171(i64 noundef %47) #21, !dbg !11023
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !11024
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #21, !dbg !11024
  br label %50, !dbg !11025

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !11026
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !10972, metadata !DIExpression()), !dbg !10985
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11027
  br i1 %52, label %33, label %34, !dbg !10986, !llvm.loop !11028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.171(i64 noundef %0) unnamed_addr #4 !dbg !11030 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11032, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i64 %0, metadata !11034, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i32 1000, metadata !11037, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i32 10000, metadata !11038, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 1, metadata !11039, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 0, metadata !11040, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 1, metadata !11041, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 0, metadata !11042, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 1, metadata !11043, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8 0, metadata !11044, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i64 0, metadata !11045, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i64 0, metadata !11045, metadata !DIExpression()), !dbg !11049
  %2 = mul i64 %0, 10, !dbg !11051
  ret i64 %2, !dbg !11057
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !11058 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11060, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i8* %1, metadata !11061, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i8* %2, metadata !11062, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i8* %3, metadata !11063, metadata !DIExpression()), !dbg !11064
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11065
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11066
  %7 = load i8, i8* %6, align 4, !dbg !11067
  %8 = or i8 %7, 4, !dbg !11067
  store i8 %8, i8* %6, align 4, !dbg !11067
  tail call void @z_thread_essential_clear() #21, !dbg !11068
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11069
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 0, !dbg !11070
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %10, align 8, !dbg !11071
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 1, !dbg !11072
  store i8* %1, i8** %11, align 4, !dbg !11073
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 2, !dbg !11074
  store i8* %2, i8** %12, align 8, !dbg !11075
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 3, !dbg !11076
  store i8* %3, i8** %13, align 4, !dbg !11077
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !11078
  unreachable, !dbg !11078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11083, metadata !DIExpression()), !dbg !11084
  ret i32 -134, !dbg !11085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11090, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 %1, metadata !11091, metadata !DIExpression()), !dbg !11092
  ret i32 -134, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11101, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !11102, metadata !DIExpression()), !dbg !11103
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11104
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !11106
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11103
  ret i32 %6, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !11112, metadata !DIExpression()), !dbg !11113
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !11114
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11113
  ret i32 %3, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11117 {
  tail call void @sys_clock_idle_exit() #23, !dbg !11119
  ret void, !dbg !11120
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11121 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i8* %1, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i8* %2, metadata !11125, metadata !DIExpression()), !dbg !11126
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11127
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !11127
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !11127
  %7 = load i8, i8* %6, align 2, !dbg !11127
  %8 = icmp sgt i8 %7, -1, !dbg !11127
  br i1 %8, label %10, label %9, !dbg !11130

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 39) #23, !dbg !11131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.176, i32 0, i32 0), i32 noundef 39) #23, !dbg !11131
  unreachable, !dbg !11131

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11133, !srcloc !11140
  call void @llvm.dbg.value(metadata i32 undef, metadata !11136, metadata !DIExpression()) #20, !dbg !11141
  call void @llvm.dbg.value(metadata i32 undef, metadata !11137, metadata !DIExpression()) #20, !dbg !11141
  tail call fastcc void @k_cpu_idle() #21, !dbg !11142
  br label %10, !dbg !11143, !llvm.loop !11144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11146 {
  tail call void @arch_cpu_idle() #23, !dbg !11147
  ret void, !dbg !11148
}

; Function Attrs: optsize
declare !dbg !11149 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !11161, metadata !DIExpression()), !dbg !11162
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !11163
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !11164
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !11165
  store i32 0, i32* %3, align 4, !dbg !11166
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !11167
  tail call fastcc void @z_waitq_init.179(%struct._wait_q_t* noundef %4) #21, !dbg !11168
  ret i32 0, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.179(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !11170 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !11174, metadata !DIExpression()), !dbg !11175
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !11176
  tail call fastcc void @sys_dlist_init.180(%struct._dnode* noundef %2) #21, !dbg !11177
  ret void, !dbg !11178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.180(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11186
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11187
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11188
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11189
  ret void, !dbg !11190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !11191 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11200, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !11199, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.value(metadata i8 0, metadata !11207, metadata !DIExpression()), !dbg !11212
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !11213, !srcloc !11222
  call void @llvm.dbg.value(metadata i32 %4, metadata !11216, metadata !DIExpression()) #20, !dbg !11223
  %5 = icmp eq i32 %4, 0, !dbg !11224
  br i1 %5, label %7, label %6, !dbg !11225

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 101) #23, !dbg !11226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.186, i32 0, i32 0)) #23, !dbg !11226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 101) #23, !dbg !11226
  unreachable, !dbg !11226

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11228, metadata !DIExpression()) #20, !dbg !11235
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11237, !srcloc !11243
  call void @llvm.dbg.value(metadata i32 undef, metadata !11240, metadata !DIExpression()) #20, !dbg !11244
  call void @llvm.dbg.value(metadata i32 undef, metadata !11241, metadata !DIExpression()) #20, !dbg !11244
  call void @llvm.dbg.value(metadata i32 undef, metadata !11234, metadata !DIExpression()) #20, !dbg !11235
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11245
  br i1 %9, label %11, label %10, !dbg !11248

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11249
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11249
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11249
  unreachable, !dbg !11249

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !11237
  call void @llvm.dbg.value(metadata i32 %12, metadata !11240, metadata !DIExpression()) #20, !dbg !11244
  call void @llvm.dbg.value(metadata i32 %12, metadata !11234, metadata !DIExpression()) #20, !dbg !11235
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %12, metadata !11202, metadata !DIExpression()), !dbg !11212
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !11252
  %14 = load i32, i32* %13, align 4, !dbg !11252
  %15 = icmp eq i32 %14, 0, !dbg !11252
  br i1 %15, label %21, label %16, !dbg !11252

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !11252
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !11252
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11252
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !11252
  br i1 %20, label %27, label %39, !dbg !11254, !prof !11255

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11256
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !11258
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !11258
  %25 = load i8, i8* %24, align 2, !dbg !11258
  %26 = sext i8 %25 to i32, !dbg !11256
  br label %30, !dbg !11259

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !11260
  %29 = load i32, i32* %28, align 4, !dbg !11260
  br label %30, !dbg !11259

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !11261
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !11259
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !11262
  store i32 %32, i32* %33, align 4, !dbg !11263
  %34 = add i32 %14, 1, !dbg !11264
  store i32 %34, i32* %13, align 4, !dbg !11264
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !11265
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !11266
  call void @llvm.dbg.value(metadata i32 undef, metadata !11267, metadata !DIExpression()) #20, !dbg !11273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11272, metadata !DIExpression()) #20, !dbg !11273
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11275
  br i1 %36, label %38, label %37, !dbg !11278

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11279
  unreachable, !dbg !11279

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !11267, metadata !DIExpression()) #20, !dbg !11273
  call void @llvm.dbg.value(metadata i32 %12, metadata !11281, metadata !DIExpression()) #20, !dbg !11284
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #20, !dbg !11286, !srcloc !11287
  br label %97, !dbg !11288

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !11289
  br i1 %40, label %41, label %45, !dbg !11291, !prof !11292

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !11267, metadata !DIExpression()) #20, !dbg !11293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11272, metadata !DIExpression()) #20, !dbg !11293
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11296
  br i1 %42, label %44, label %43, !dbg !11297

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11298
  unreachable, !dbg !11298

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !11267, metadata !DIExpression()) #20, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %12, metadata !11281, metadata !DIExpression()) #20, !dbg !11299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #20, !dbg !11301, !srcloc !11287
  br label %97, !dbg !11302

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !11303
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !11303
  %48 = load i8, i8* %47, align 2, !dbg !11303
  %49 = sext i8 %48 to i32, !dbg !11304
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !11305
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !11305
  %52 = load i8, i8* %51, align 2, !dbg !11305
  %53 = sext i8 %52 to i32, !dbg !11306
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #21, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %54, metadata !11201, metadata !DIExpression()), !dbg !11212
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #21, !dbg !11308
  br i1 %55, label %56, label %58, !dbg !11310

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #21, !dbg !11311
  call void @llvm.dbg.value(metadata i1 %57, metadata !11207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11212
  br label %58, !dbg !11313

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !11207, metadata !DIExpression()), !dbg !11212
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !11314
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !11315
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.187, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #23, !dbg !11315
  call void @llvm.dbg.value(metadata i32 %62, metadata !11208, metadata !DIExpression()), !dbg !11212
  %63 = icmp eq i32 %62, 0, !dbg !11316
  br i1 %63, label %97, label %64, !dbg !11318

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11228, metadata !DIExpression()) #20, !dbg !11319
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11321, !srcloc !11243
  call void @llvm.dbg.value(metadata i32 undef, metadata !11240, metadata !DIExpression()) #20, !dbg !11323
  call void @llvm.dbg.value(metadata i32 undef, metadata !11241, metadata !DIExpression()) #20, !dbg !11323
  call void @llvm.dbg.value(metadata i32 undef, metadata !11234, metadata !DIExpression()) #20, !dbg !11319
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11324
  br i1 %66, label %68, label %67, !dbg !11325

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11326
  unreachable, !dbg !11326

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !11321
  call void @llvm.dbg.value(metadata i32 %69, metadata !11240, metadata !DIExpression()) #20, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %69, metadata !11234, metadata !DIExpression()) #20, !dbg !11319
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %69, metadata !11202, metadata !DIExpression()), !dbg !11212
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !11328
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !11328
  br i1 %71, label %90, label %72, !dbg !11329, !prof !11292

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #21, !dbg !11330
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !11209, metadata !DIExpression()), !dbg !11331
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !11332
  br i1 %74, label %83, label %75, !dbg !11333

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !11334
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !11334
  %78 = load i8, i8* %77, align 2, !dbg !11334
  %79 = sext i8 %78 to i32, !dbg !11335
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !11336
  %81 = load i32, i32* %80, align 4, !dbg !11336
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #21, !dbg !11337
  br label %86, !dbg !11333

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !11338
  %85 = load i32, i32* %84, align 4, !dbg !11338
  br label %86, !dbg !11333

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !11333
  call void @llvm.dbg.value(metadata i32 %87, metadata !11201, metadata !DIExpression()), !dbg !11212
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #21, !dbg !11339
  %89 = select i1 %88, i1 true, i1 %59, !dbg !11340
  call void @llvm.dbg.value(metadata i1 %89, metadata !11207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11212
  call void @llvm.dbg.value(metadata i8 poison, metadata !11207, metadata !DIExpression()), !dbg !11212
  br i1 %89, label %91, label %93, !dbg !11341

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !11207, metadata !DIExpression()), !dbg !11212
  br i1 %59, label %91, label %93, !dbg !11341

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !11342
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.187, [1 x i32] %92) #23, !dbg !11342
  br label %97, !dbg !11345

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !11267, metadata !DIExpression()) #20, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11272, metadata !DIExpression()) #20, !dbg !11346
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11349
  br i1 %94, label %96, label %95, !dbg !11350

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11351
  unreachable, !dbg !11351

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !11267, metadata !DIExpression()) #20, !dbg !11346
  call void @llvm.dbg.value(metadata i32 %69, metadata !11281, metadata !DIExpression()) #20, !dbg !11352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #20, !dbg !11354, !srcloc !11287
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !11212
  ret i32 %98, !dbg !11355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.value(metadata i32 %1, metadata !11361, metadata !DIExpression()), !dbg !11363
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #21, !dbg !11364
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %4, metadata !11362, metadata !DIExpression()), !dbg !11363
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #21, !dbg !11365
  call void @llvm.dbg.value(metadata i32 %5, metadata !11362, metadata !DIExpression()), !dbg !11363
  ret i32 %5, !dbg !11366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11371, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata i32 %1, metadata !11372, metadata !DIExpression()), !dbg !11373
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #21, !dbg !11374
  ret i1 %3, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11376 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !11380, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %1, metadata !11381, metadata !DIExpression()), !dbg !11382
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !11383
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !11383
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !11385
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !11385
  %7 = load i8, i8* %6, align 2, !dbg !11385
  %8 = sext i8 %7 to i32, !dbg !11386
  %9 = icmp eq i32 %8, %1, !dbg !11387
  br i1 %9, label %12, label %10, !dbg !11388

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #23, !dbg !11389
  br label %12, !dbg !11391

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !11382
  ret i1 %13, !dbg !11392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !11393 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !11399
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #21, !dbg !11400
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !11401
  ret %struct.k_thread* %4, !dbg !11402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !11403 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11407, metadata !DIExpression()), !dbg !11408
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #21, !dbg !11409
  br i1 %2, label %6, label %3, !dbg !11409

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11410
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11410
  br label %6, !dbg !11409

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11409
  ret %struct._dnode* %7, !dbg !11411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11416, metadata !DIExpression()), !dbg !11417
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11418
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11418
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11419
  ret i1 %4, !dbg !11420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11423, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.value(metadata i32 %1, metadata !11424, metadata !DIExpression()), !dbg !11425
  %3 = icmp slt i32 %0, %1, !dbg !11426
  ret i1 %3, !dbg !11427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !11428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11430, metadata !DIExpression()), !dbg !11431
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #21, !dbg !11432
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !11432
  ret i32 %3, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !11434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = icmp sgt i32 %0, -128, !dbg !11440
  ret i1 %2, !dbg !11441
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !11444, metadata !DIExpression()), !dbg !11448
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !11449, !srcloc !11222
  call void @llvm.dbg.value(metadata i32 %2, metadata !11216, metadata !DIExpression()) #20, !dbg !11454
  %3 = icmp eq i32 %2, 0, !dbg !11455
  br i1 %3, label %5, label %4, !dbg !11456

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 205) #23, !dbg !11457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.186, i32 0, i32 0)) #23, !dbg !11457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 205) #23, !dbg !11457
  unreachable, !dbg !11457

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !11459
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !11459
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !11459
  br i1 %8, label %41, label %9, !dbg !11461

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11462
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !11462
  br i1 %11, label %12, label %41, !dbg !11464

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !11465
  %14 = load i32, i32* %13, align 4, !dbg !11465
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !11468

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 229) #23, !dbg !11469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 229) #23, !dbg !11469
  unreachable, !dbg !11469

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !11471
  store i32 %17, i32* %13, align 4, !dbg !11471
  br label %41, !dbg !11474

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11228, metadata !DIExpression()) #20, !dbg !11475
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11477, !srcloc !11243
  call void @llvm.dbg.value(metadata i32 undef, metadata !11240, metadata !DIExpression()) #20, !dbg !11479
  call void @llvm.dbg.value(metadata i32 undef, metadata !11241, metadata !DIExpression()) #20, !dbg !11479
  call void @llvm.dbg.value(metadata i32 undef, metadata !11234, metadata !DIExpression()) #20, !dbg !11475
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11480
  br i1 %20, label %22, label %21, !dbg !11481

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.190, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 148) #23, !dbg !11482
  unreachable, !dbg !11482

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !11477
  call void @llvm.dbg.value(metadata i32 %23, metadata !11240, metadata !DIExpression()) #20, !dbg !11479
  call void @llvm.dbg.value(metadata i32 %23, metadata !11234, metadata !DIExpression()) #20, !dbg !11475
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %23, metadata !11446, metadata !DIExpression()), !dbg !11448
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !11484
  %25 = load i32, i32* %24, align 4, !dbg !11484
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #21, !dbg !11485
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !11486
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #23, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !11445, metadata !DIExpression()), !dbg !11448
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !11488
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !11489
  br i1 %29, label %37, label %30, !dbg !11491

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !11492
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !11492
  %33 = load i8, i8* %32, align 2, !dbg !11492
  %34 = sext i8 %33 to i32, !dbg !11494
  store i32 %34, i32* %24, align 4, !dbg !11495
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !11496, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 0, metadata !11501, metadata !DIExpression()), !dbg !11502
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 9, i32 1, !dbg !11504
  store i32 0, i32* %35, align 4, !dbg !11505
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #23, !dbg !11506
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !11507
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.187, [1 x i32] %36) #23, !dbg !11507
  br label %41, !dbg !11508

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !11509
  call void @llvm.dbg.value(metadata i32 undef, metadata !11267, metadata !DIExpression()) #20, !dbg !11511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.187, metadata !11272, metadata !DIExpression()) #20, !dbg !11511
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11513
  br i1 %38, label %40, label %39, !dbg !11514

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.192, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.187) #23, !dbg !11515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.189, i32 0, i32 0), i32 noundef 194) #23, !dbg !11515
  unreachable, !dbg !11515

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !11267, metadata !DIExpression()) #20, !dbg !11511
  call void @llvm.dbg.value(metadata i32 %23, metadata !11281, metadata !DIExpression()) #20, !dbg !11516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #20, !dbg !11518, !srcloc !11287
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !11448
  ret i32 %42, !dbg !11519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !11520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11524, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11525, metadata !DIExpression()), !dbg !11528
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11529
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11529
  %5 = load i8, i8* %4, align 2, !dbg !11529
  call void @llvm.dbg.value(metadata i8 %5, metadata !11526, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11528
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11530
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11530
  %8 = load i8, i8* %7, align 2, !dbg !11530
  call void @llvm.dbg.value(metadata i8 %8, metadata !11527, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11528
  %9 = icmp eq i8 %8, %5, !dbg !11531
  %10 = sext i8 %5 to i32, !dbg !11533
  %11 = sext i8 %8 to i32, !dbg !11533
  %12 = sub nsw i32 %11, %10, !dbg !11533
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11533
  ret i32 %13, !dbg !11534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11535 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = tail call fastcc i32 @slice_time() #21, !dbg !11541
  %3 = icmp eq i32 %2, 0, !dbg !11543
  br i1 %3, label %8, label %4, !dbg !11544

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #23, !dbg !11545
  %6 = add i32 %5, %2, !dbg !11547
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11548
  %7 = tail call fastcc i32 @slice_time() #21, !dbg !11549
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #23, !dbg !11550
  br label %8, !dbg !11551

8:                                                ; preds = %4, %1
  ret void, !dbg !11552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !11553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11557, metadata !DIExpression()), !dbg !11559
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %1, metadata !11558, metadata !DIExpression()), !dbg !11559
  ret i32 %1, !dbg !11561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11566, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata i32 %1, metadata !11567, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata i32 0, metadata !11568, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !11584
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11586, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !11593
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !11593
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !11584
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11594
  br i1 %4, label %6, label %5, !dbg !11597

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !11598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !11598
  unreachable, !dbg !11598

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !11593
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !11584
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11600
  call void @llvm.dbg.value(metadata i32 undef, metadata !11574, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11568, metadata !DIExpression()), !dbg !11576
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11601
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #21, !dbg !11604
  %8 = icmp sgt i32 %0, 0, !dbg !11605
  %9 = icmp sgt i32 %7, 2, !dbg !11607
  %10 = select i1 %9, i32 %7, i32 2, !dbg !11607
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !11607
  store i32 %11, i32* @slice_ticks, align 4, !dbg !11608
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11609
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !11610
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !11617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !11617
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11619
  br i1 %12, label %14, label %13, !dbg !11622

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11623
  unreachable, !dbg !11623

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %15, metadata !11589, metadata !DIExpression()) #20, !dbg !11593
  call void @llvm.dbg.value(metadata i32 %15, metadata !11583, metadata !DIExpression()) #20, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %15, metadata !11574, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !11628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !11630, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !11568, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11568, metadata !DIExpression()), !dbg !11576
  ret void, !dbg !11632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !11633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i32 %0, metadata !11639, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11654
  call void @llvm.dbg.value(metadata i32 1000, metadata !11642, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i32 10000, metadata !11643, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i8 1, metadata !11644, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i1 true, metadata !11645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11654
  call void @llvm.dbg.value(metadata i1 true, metadata !11646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11654
  call void @llvm.dbg.value(metadata i8 0, metadata !11647, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i1 true, metadata !11648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11654
  call void @llvm.dbg.value(metadata i1 false, metadata !11649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11654
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !11654
  %2 = mul i32 %0, 10, !dbg !11656
  ret i32 %2, !dbg !11662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11665, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !11668
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11670, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !11672
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !11672
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !11668
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11673
  br i1 %3, label %5, label %4, !dbg !11674

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !11675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !11675
  unreachable, !dbg !11675

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %6, metadata !11589, metadata !DIExpression()) #20, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %6, metadata !11583, metadata !DIExpression()) #20, !dbg !11668
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11676
  call void @llvm.dbg.value(metadata i32 %6, metadata !11666, metadata !DIExpression()), !dbg !11667
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11677
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11679
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !11680
  br i1 %9, label %10, label %14, !dbg !11681

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !11682
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !11684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !11684
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11686
  br i1 %11, label %13, label %12, !dbg !11687

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11688
  unreachable, !dbg !11688

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !11689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !11691, !srcloc !11631
  br label %33, !dbg !11692

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11693
  %15 = tail call fastcc i32 @slice_time() #21, !dbg !11694
  %16 = icmp eq i32 %15, 0, !dbg !11694
  br i1 %16, label %27, label %17, !dbg !11696

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #21, !dbg !11697
  br i1 %18, label %19, label %27, !dbg !11698

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11699
  %21 = icmp sgt i32 %20, %0, !dbg !11702
  br i1 %21, label %25, label %22, !dbg !11703

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !11704
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #21, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %24, metadata !11666, metadata !DIExpression()), !dbg !11667
  br label %28, !dbg !11706

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !11707
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11707
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11709
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !11667
  call void @llvm.dbg.value(metadata i32 %29, metadata !11666, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !11711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !11711
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11713
  br i1 %30, label %32, label %31, !dbg !11714

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !11715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !11715
  unreachable, !dbg !11715

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !11611, metadata !DIExpression()) #20, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %29, metadata !11625, metadata !DIExpression()) #20, !dbg !11716
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #20, !dbg !11718, !srcloc !11631
  br label %33, !dbg !11719

33:                                               ; preds = %32, %13
  ret void, !dbg !11719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11724, metadata !DIExpression()), !dbg !11726
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #21, !dbg !11727
  %3 = icmp eq i32 %2, 0, !dbg !11727
  br i1 %3, label %16, label %4, !dbg !11728

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !11729
  br i1 %5, label %16, label %6, !dbg !11730

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11731
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11731
  %9 = load i8, i8* %8, align 2, !dbg !11731
  %10 = sext i8 %9 to i32, !dbg !11732
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11733
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.208(i32 noundef %10, i32 noundef %11) #21, !dbg !11734
  br i1 %12, label %16, label %13, !dbg !11735

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #21, !dbg !11736
  %15 = xor i1 %14, true, !dbg !11737
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11726
  call void @llvm.dbg.value(metadata i1 %17, metadata !11725, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11726
  ret i1 %17, !dbg !11738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11739 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11743, metadata !DIExpression()), !dbg !11745
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11746
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11744, metadata !DIExpression()), !dbg !11745
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #21, !dbg !11747
  br i1 %3, label %5, label %4, !dbg !11749

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #21, !dbg !11750
  br label %5, !dbg !11752

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11743, metadata !DIExpression()), !dbg !11745
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !11753
  ret i32 %6, !dbg !11754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11757, metadata !DIExpression()), !dbg !11759
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11760
  %3 = load i8, i8* %2, align 1, !dbg !11760
  call void @llvm.dbg.value(metadata i8 %3, metadata !11758, metadata !DIExpression()), !dbg !11759
  %4 = and i8 %3, 31, !dbg !11761
  %5 = icmp ne i8 %4, 0, !dbg !11762
  ret i1 %5, !dbg !11763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11764 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11766, metadata !DIExpression()), !dbg !11767
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !11768
  br i1 %2, label %3, label %7, !dbg !11770

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()) #20, !dbg !11774
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11777
  %5 = load i8, i8* %4, align 1, !dbg !11778
  %6 = and i8 %5, 127, !dbg !11778
  store i8 %6, i8* %4, align 1, !dbg !11778
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11779, metadata !DIExpression()) #20, !dbg !11782
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !11786
  br label %7, !dbg !11787

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11788, metadata !DIExpression()) #20, !dbg !11791
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11793
  %9 = load i8, i8* %8, align 1, !dbg !11794
  %10 = or i8 %9, -128, !dbg !11794
  store i8 %10, i8* %8, align 1, !dbg !11794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11795, metadata !DIExpression()) #20, !dbg !11798
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !11802
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11803
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !11804
  %13 = zext i1 %12 to i32, !dbg !11804
  tail call fastcc void @update_cache(i32 noundef %13) #21, !dbg !11805
  ret void, !dbg !11806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()), !dbg !11810
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #21, !dbg !11811
  ret i1 %2, !dbg !11812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !11831, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11832, metadata !DIExpression()), !dbg !11833
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !11834
  br i1 %3, label %4, label %5, !dbg !11837

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1200) #23, !dbg !11838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1200) #23, !dbg !11838
  unreachable, !dbg !11838

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11840
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !11841
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #23, !dbg !11842
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !11843
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !11843
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !11845
  br i1 %10, label %11, label %13, !dbg !11846

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !11847
  store i32 0, i32* %12, align 4, !dbg !11849
  br label %13, !dbg !11850

13:                                               ; preds = %11, %5
  ret void, !dbg !11851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !11852 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !11854, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11855, metadata !DIExpression()), !dbg !11869
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !11870
  br i1 %4, label %5, label %6, !dbg !11873

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1179) #23, !dbg !11874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1179) #23, !dbg !11874
  unreachable, !dbg !11874

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !11876
  %8 = load i32, i32* %7, align 4, !dbg !11877
  %9 = add nsw i32 %8, 1, !dbg !11877
  store i32 %9, i32* %7, align 4, !dbg !11877
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !11878
  store i32 %8, i32* %10, align 8, !dbg !11879
  %11 = load i32, i32* %7, align 4, !dbg !11880
  %12 = icmp eq i32 %11, 0, !dbg !11881
  br i1 %12, label %13, label %35, !dbg !11882

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !11883
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #20, !dbg !11883
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !11857, metadata !DIExpression()), !dbg !11883
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11883
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !11883
  %17 = load i32, i32* %16, align 4, !dbg !11883
  %18 = shl i32 %17, 2, !dbg !11883
  %19 = alloca i8, i32 %18, align 8, !dbg !11883
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !11883
  store i8* %19, i8** %20, align 4, !dbg !11883
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !11883
  %22 = alloca i8, i32 %17, align 8, !dbg !11883
  store i8* %22, i8** %21, align 4, !dbg !11883
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !11883
  store i32 -1, i32* %23, align 4, !dbg !11883
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !11884
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !11866, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !11856, metadata !DIExpression()), !dbg !11869
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !11886
  br i1 %25, label %26, label %27, !dbg !11883

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #20, !dbg !11886
  br label %35, !dbg !11887

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !11856, metadata !DIExpression()), !dbg !11869
  %29 = load i32, i32* %7, align 4, !dbg !11888
  %30 = add nsw i32 %29, 1, !dbg !11888
  store i32 %30, i32* %7, align 4, !dbg !11888
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !11890
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !11890
  store i32 %29, i32* %32, align 8, !dbg !11891
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #23, !dbg !11884
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !11866, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !11856, metadata !DIExpression()), !dbg !11869
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !11886
  br i1 %34, label %26, label %27, !dbg !11883, !llvm.loop !11892

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11894
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !11895
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #23, !dbg !11896
  ret void, !dbg !11897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11900, metadata !DIExpression()), !dbg !11902
  %2 = tail call %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #23, !dbg !11903
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11910, metadata !DIExpression()) #20, !dbg !11912
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11913
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11914
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11914
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11901, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11915, metadata !DIExpression()) #20, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %0, metadata !11920, metadata !DIExpression()) #20, !dbg !11921
  %6 = icmp eq i32 %0, 0, !dbg !11924
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11926
  br i1 %6, label %8, label %18, !dbg !11927

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !11928
  br i1 %9, label %10, label %11, !dbg !11931

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.204, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 137) #23, !dbg !11932
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !11932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 137) #23, !dbg !11932
  unreachable, !dbg !11932

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #23, !dbg !11934
  br i1 %12, label %18, label %13, !dbg !11936

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #23, !dbg !11937
  br i1 %14, label %18, label %15, !dbg !11939

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #23, !dbg !11940
  %17 = icmp eq i32 %16, 0, !dbg !11940
  br i1 %17, label %21, label %18, !dbg !11942

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !11943
  br i1 %19, label %21, label %20, !dbg !11946

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !11947
  br label %21, !dbg !11949

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !11926
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11926
  ret void, !dbg !11950
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !11955, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11956, metadata !DIExpression()), !dbg !11958
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11959
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #21, !dbg !11960
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !11957, metadata !DIExpression()), !dbg !11958
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11956, metadata !DIExpression()), !dbg !11958
  ret %struct.k_thread* %4, !dbg !11961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11964, metadata !DIExpression()), !dbg !11965
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11966
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !11967
  %4 = xor i1 %3, true, !dbg !11968
  ret i1 %4, !dbg !11969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11972, metadata !DIExpression()), !dbg !11973
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11974
  %3 = load i16, i16* %2, align 2, !dbg !11974
  %4 = icmp ult i16 %3, 128, !dbg !11975
  %5 = zext i1 %4 to i32, !dbg !11975
  ret i32 %5, !dbg !11976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11983, metadata !DIExpression()), !dbg !11984
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11985
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #21, !dbg !11986
  %4 = xor i1 %3, true, !dbg !11987
  ret i1 %4, !dbg !11988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11989 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11995, metadata !DIExpression()), !dbg !11996
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11997
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11997
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11998
  ret i1 %4, !dbg !11999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12000 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12005, metadata !DIExpression()), !dbg !12006
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #23, !dbg !12007
  ret %struct.rbnode* %2, !dbg !12008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !12009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12011, metadata !DIExpression()), !dbg !12012
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12013
  ret i1 %2, !dbg !12014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !12015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12019, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata i32 %1, metadata !12020, metadata !DIExpression()), !dbg !12021
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12022
  %4 = load i8, i8* %3, align 1, !dbg !12022
  %5 = zext i8 %4 to i32, !dbg !12023
  %6 = and i32 %5, %1, !dbg !12024
  %7 = icmp ne i32 %6, 0, !dbg !12025
  ret i1 %7, !dbg !12026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.208(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12029, metadata !DIExpression()), !dbg !12031
  call void @llvm.dbg.value(metadata i32 %1, metadata !12030, metadata !DIExpression()), !dbg !12031
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.209(i32 noundef %0, i32 noundef %1) #21, !dbg !12032
  ret i1 %3, !dbg !12033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.209(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12036, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %1, metadata !12037, metadata !DIExpression()), !dbg !12038
  %3 = icmp slt i32 %0, %1, !dbg !12039
  ret i1 %3, !dbg !12040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12043, metadata !DIExpression()), !dbg !12047
  call void @llvm.dbg.value(metadata i32 0, metadata !12044, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12049
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12051, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12053
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12053
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12049
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12054
  br i1 %3, label %5, label %4, !dbg !12055

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12056
  unreachable, !dbg !12056

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12053
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12049
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12057
  call void @llvm.dbg.value(metadata i32 undef, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 undef, metadata !12044, metadata !DIExpression()), !dbg !12048
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !12058
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12063
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12065
  br i1 %6, label %8, label %7, !dbg !12066

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12067
  unreachable, !dbg !12067

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12051
  call void @llvm.dbg.value(metadata i32 %9, metadata !11589, metadata !DIExpression()) #20, !dbg !12053
  call void @llvm.dbg.value(metadata i32 %9, metadata !11583, metadata !DIExpression()) #20, !dbg !12049
  call void @llvm.dbg.value(metadata i32 %9, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12063
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12068
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !12070, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12044, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 undef, metadata !12044, metadata !DIExpression()), !dbg !12048
  ret void, !dbg !12071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12074, metadata !DIExpression()), !dbg !12075
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !12076
  br i1 %2, label %9, label %3, !dbg !12078

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !12079
  br i1 %4, label %5, label %9, !dbg !12080

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11788, metadata !DIExpression()) #20, !dbg !12081
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12084
  %7 = load i8, i8* %6, align 1, !dbg !12085
  %8 = or i8 %7, -128, !dbg !12085
  store i8 %8, i8* %6, align 1, !dbg !12085
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11795, metadata !DIExpression()) #20, !dbg !12086
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !12088
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !12089
  br label %9, !dbg !12090

9:                                                ; preds = %5, %3, %1
  ret void, !dbg !12091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12094, metadata !DIExpression()), !dbg !12095
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !12096
  br i1 %2, label %6, label %3, !dbg !12097

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #21, !dbg !12098
  %5 = xor i1 %4, true, !dbg !12097
  br label %6, !dbg !12097

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12102, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.value(metadata i32 0, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12108
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12110, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12112
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12112
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12108
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12113
  br i1 %3, label %5, label %4, !dbg !12114

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12115
  unreachable, !dbg !12115

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12112
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12108
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12116
  call void @llvm.dbg.value(metadata i32 undef, metadata !12105, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12103, metadata !DIExpression()), !dbg !12107
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #21, !dbg !12117
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12120
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12122
  br i1 %6, label %8, label %7, !dbg !12123

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12124
  unreachable, !dbg !12124

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %9, metadata !11589, metadata !DIExpression()) #20, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %9, metadata !11583, metadata !DIExpression()) #20, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %9, metadata !12105, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12120
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12125
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !12127, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12103, metadata !DIExpression()), !dbg !12107
  ret void, !dbg !12128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12131, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12136, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12138
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12138
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12134
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12139
  br i1 %3, label %5, label %4, !dbg !12140

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12141
  unreachable, !dbg !12141

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %6, metadata !11589, metadata !DIExpression()) #20, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %6, metadata !11583, metadata !DIExpression()) #20, !dbg !12134
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %6, metadata !12132, metadata !DIExpression()), !dbg !12133
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #21, !dbg !12143
  br i1 %7, label %8, label %12, !dbg !12145

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12146
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12149
  br i1 %9, label %11, label %10, !dbg !12150

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12151
  unreachable, !dbg !12151

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !12152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !12154, !srcloc !11631
  br label %14, !dbg !12155

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.214(%struct.k_thread* noundef %0) #21, !dbg !12156
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !12157
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12158
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !12158
  br label %14, !dbg !12159

14:                                               ; preds = %12, %11
  ret void, !dbg !12159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12162, metadata !DIExpression()), !dbg !12163
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12164
  %3 = load i8, i8* %2, align 1, !dbg !12164
  %4 = and i8 %3, 4, !dbg !12165
  %5 = icmp eq i8 %4, 0, !dbg !12166
  ret i1 %5, !dbg !12167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.214(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12170, metadata !DIExpression()), !dbg !12171
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12172
  %3 = load i8, i8* %2, align 1, !dbg !12173
  %4 = and i8 %3, -5, !dbg !12173
  store i8 %4, i8* %2, align 1, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12175 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12178, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12177, metadata !DIExpression()), !dbg !12179
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #21, !dbg !12180
  br i1 %4, label %5, label %12, !dbg !12182

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #21, !dbg !12183
  br i1 %6, label %7, label %12, !dbg !12184

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12190, metadata !DIExpression()) #20, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12194, metadata !DIExpression()) #20, !dbg !12199
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #23, !dbg !12201
  br i1 %8, label %10, label %9, !dbg !12204

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef %0) #23, !dbg !12205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12205
  unreachable, !dbg !12205

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !12185, metadata !DIExpression()) #20, !dbg !12191
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #23, !dbg !12207
  br label %16, !dbg !12208

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11616, metadata !DIExpression()) #20, !dbg !12209
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #23, !dbg !12212
  br i1 %13, label %15, label %14, !dbg !12213

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef %0) #23, !dbg !12214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12214
  unreachable, !dbg !12214

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !11611, metadata !DIExpression()) #20, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %3, metadata !11625, metadata !DIExpression()) #20, !dbg !12215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #20, !dbg !12217, !srcloc !11631
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !12218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12223, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 %0, metadata !12225, metadata !DIExpression()), !dbg !12230
  %2 = icmp eq i32 %0, 0, !dbg !12232
  br i1 %2, label %3, label %6, !dbg !12233

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !12234, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %4, metadata !12237, metadata !DIExpression()) #20, !dbg !12242
  %5 = icmp eq i32 %4, 0, !dbg !12243
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12224
  ret i1 %7, !dbg !12244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !12245 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12248
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12247, metadata !DIExpression()), !dbg !12249
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12250
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12251
  ret i1 %3, !dbg !12252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12257
  %2 = tail call i32 @arch_swap(i32 noundef %0) #23, !dbg !12258
  call void @llvm.dbg.value(metadata i32 %2, metadata !12256, metadata !DIExpression()), !dbg !12257
  ret i32 %2, !dbg !12259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12262, metadata !DIExpression()), !dbg !12266
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !12267
  call void @llvm.dbg.value(metadata i32 0, metadata !12263, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12269
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12271, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12273
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12269
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12274
  br i1 %4, label %6, label %5, !dbg !12275

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12276
  unreachable, !dbg !12276

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %7, metadata !11589, metadata !DIExpression()) #20, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %7, metadata !11583, metadata !DIExpression()) #20, !dbg !12269
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12277
  call void @llvm.dbg.value(metadata i32 %7, metadata !12265, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()), !dbg !12268
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !12278
  br i1 %8, label %9, label %13, !dbg !12282

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()) #20, !dbg !12283
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12286
  %11 = load i8, i8* %10, align 1, !dbg !12287
  %12 = and i8 %11, 127, !dbg !12287
  store i8 %12, i8* %10, align 1, !dbg !12287
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11779, metadata !DIExpression()) #20, !dbg !12288
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !12290
  br label %13, !dbg !12291

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #21, !dbg !12292
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12293
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12294
  %16 = zext i1 %15 to i32, !dbg !12294
  tail call fastcc void @update_cache(i32 noundef %16) #21, !dbg !12295
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12296
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12298
  br i1 %17, label %19, label %18, !dbg !12299

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12300
  unreachable, !dbg !12300

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !11611, metadata !DIExpression()) #20, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %7, metadata !11625, metadata !DIExpression()) #20, !dbg !12301
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !12303, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12263, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()), !dbg !12268
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12304
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !12306
  br i1 %21, label %22, label %23, !dbg !12307

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !12308
  br label %23, !dbg !12310

23:                                               ; preds = %22, %19
  ret void, !dbg !12311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12312 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12314, metadata !DIExpression()), !dbg !12315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12316
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #23, !dbg !12317
  ret i32 %3, !dbg !12318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12321, metadata !DIExpression()), !dbg !12322
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12323
  %3 = load i8, i8* %2, align 1, !dbg !12324
  %4 = or i8 %3, 16, !dbg !12324
  store i8 %4, i8* %2, align 1, !dbg !12324
  ret void, !dbg !12325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12326 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12327, !srcloc !11592
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %2, metadata !11589, metadata !DIExpression()) #20, !dbg !12329
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12329
  tail call void @z_reschedule_irqlock(i32 noundef %2) #21, !dbg !12330
  ret void, !dbg !12331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12334, metadata !DIExpression()), !dbg !12335
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #21, !dbg !12336
  br i1 %2, label %3, label %5, !dbg !12338

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !12339
  br label %6, !dbg !12341

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11625, metadata !DIExpression()) #20, !dbg !12342
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #20, !dbg !12345, !srcloc !11631
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12347 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12349, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12352
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12354, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12356
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12356
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12352
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12357
  br i1 %3, label %5, label %4, !dbg !12358

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12359
  unreachable, !dbg !12359

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12354
  call void @llvm.dbg.value(metadata i32 %6, metadata !11589, metadata !DIExpression()) #20, !dbg !12356
  call void @llvm.dbg.value(metadata i32 %6, metadata !11583, metadata !DIExpression()) #20, !dbg !12352
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %6, metadata !12350, metadata !DIExpression()), !dbg !12351
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #21, !dbg !12361
  br i1 %7, label %12, label %8, !dbg !12363

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12364
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12367
  br i1 %9, label %11, label %10, !dbg !12368

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12369
  unreachable, !dbg !12369

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !12370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !12372, !srcloc !11631
  br label %14, !dbg !12373

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !12374
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !12375
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12376
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !12376
  br label %14, !dbg !12377

14:                                               ; preds = %12, %11
  ret void, !dbg !12377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12378 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12380, metadata !DIExpression()), !dbg !12381
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12382
  %3 = load i8, i8* %2, align 1, !dbg !12382
  %4 = and i8 %3, 16, !dbg !12383
  %5 = icmp ne i8 %4, 0, !dbg !12384
  ret i1 %5, !dbg !12385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12388, metadata !DIExpression()), !dbg !12389
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12390
  %3 = load i8, i8* %2, align 1, !dbg !12391
  %4 = and i8 %3, -17, !dbg !12391
  store i8 %4, i8* %2, align 1, !dbg !12391
  ret void, !dbg !12392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12393 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12403, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12401, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !12402, metadata !DIExpression()), !dbg !12407
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12408
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !12408
  br i1 %5, label %9, label %6, !dbg !12408

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #21, !dbg !12408
  br i1 %7, label %9, label %8, !dbg !12411

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 773) #23, !dbg !12412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 773) #23, !dbg !12412
  unreachable, !dbg !12412

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !12404, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12415
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12417, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12419
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12419
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12415
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12420
  br i1 %11, label %13, label %12, !dbg !12421

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12422
  unreachable, !dbg !12422

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12419
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12415
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12423
  call void @llvm.dbg.value(metadata i32 undef, metadata !12406, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.value(metadata i32 undef, metadata !12404, metadata !DIExpression()), !dbg !12414
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #21, !dbg !12424
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12427
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12429
  br i1 %14, label %16, label %15, !dbg !12430

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12431
  unreachable, !dbg !12431

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %17, metadata !11589, metadata !DIExpression()) #20, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %17, metadata !11583, metadata !DIExpression()) #20, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %17, metadata !12406, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #20, !dbg !12434, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12404, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.value(metadata i32 undef, metadata !12404, metadata !DIExpression()), !dbg !12414
  ret void, !dbg !12435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12438, metadata !DIExpression()), !dbg !12439
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12440
  %3 = load i8, i8* %2, align 1, !dbg !12440
  %4 = and i8 %3, 1, !dbg !12441
  %5 = icmp ne i8 %4, 0, !dbg !12442
  ret i1 %5, !dbg !12443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12444 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12448, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12446, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !12447, metadata !DIExpression()), !dbg !12449
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #21, !dbg !12450
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #21, !dbg !12451
  ret void, !dbg !12452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12457, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !12458, metadata !DIExpression()), !dbg !12459
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #21, !dbg !12460
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #21, !dbg !12461
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !12462
  br i1 %3, label %24, label %4, !dbg !12464

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12465
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !12467
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !12468
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12469, metadata !DIExpression()) #20, !dbg !12477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12475, metadata !DIExpression()) #20, !dbg !12477
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #23, !dbg !12479
  br i1 %7, label %8, label %9, !dbg !12482

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 186) #23, !dbg !12483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 186) #23, !dbg !12483
  unreachable, !dbg !12483

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.223(%struct._dnode* noundef nonnull %6) #23, !dbg !12485
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  %11 = icmp eq %struct._dnode* %10, null, !dbg !12487
  br i1 %11, label %22, label %12, !dbg !12485

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !12489
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #23, !dbg !12490
  %16 = icmp sgt i32 %15, 0, !dbg !12493
  br i1 %16, label %17, label %19, !dbg !12494

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12495
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #23, !dbg !12497
  br label %24, !dbg !12498

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #23, !dbg !12487
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  %21 = icmp eq %struct._dnode* %20, null, !dbg !12487
  br i1 %21, label %22, label %12, !dbg !12485, !llvm.loop !12499

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12501
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #23, !dbg !12502
  br label %24, !dbg !12503

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !12504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12505 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12510, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12509, metadata !DIExpression()), !dbg !12511
  %4 = icmp eq i64 %3, -1, !dbg !12512
  br i1 %4, label %6, label %5, !dbg !12514

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !12515
  br label %6, !dbg !12517

6:                                                ; preds = %5, %2
  ret void, !dbg !12518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12519 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12522, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12521, metadata !DIExpression()), !dbg !12523
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12524
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #23, !dbg !12525
  ret void, !dbg !12526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12527 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12529, metadata !DIExpression()), !dbg !12537
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12538
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12538
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12530, metadata !DIExpression()), !dbg !12537
  call void @llvm.dbg.value(metadata i32 0, metadata !12531, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12540
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12542, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12544
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12544
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12540
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12545
  br i1 %5, label %7, label %6, !dbg !12546

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12547
  unreachable, !dbg !12547

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12544
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12540
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12533, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i32 undef, metadata !12531, metadata !DIExpression()), !dbg !12539
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12549
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !12550
  %10 = load i8, i8* %9, align 1, !dbg !12550
  %11 = and i8 %10, 40, !dbg !12551
  %12 = icmp eq i8 %11, 0, !dbg !12551
  call void @llvm.dbg.value(metadata i1 %12, metadata !12534, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12552
  br i1 %12, label %13, label %20, !dbg !12553

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12554
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !12554
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !12554
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !12558
  br i1 %17, label %19, label %18, !dbg !12559

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #21, !dbg !12560
  br label %19, !dbg !12562

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.214(%struct.k_thread* noundef nonnull %3) #21, !dbg !12563
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #21, !dbg !12564
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #21, !dbg !12565
  br label %20, !dbg !12566

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12567
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12569
  br i1 %21, label %23, label %22, !dbg !12570

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12571
  unreachable, !dbg !12571

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !12542
  call void @llvm.dbg.value(metadata i32 %24, metadata !11589, metadata !DIExpression()) #20, !dbg !12544
  call void @llvm.dbg.value(metadata i32 %24, metadata !11583, metadata !DIExpression()) #20, !dbg !12540
  call void @llvm.dbg.value(metadata i32 %24, metadata !12533, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12567
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !12574, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12531, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i32 undef, metadata !12531, metadata !DIExpression()), !dbg !12539
  ret void, !dbg !12575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12578, metadata !DIExpression()), !dbg !12579
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #21, !dbg !12580
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #21, !dbg !12581
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #21, !dbg !12582
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12583
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !12584
  ret void, !dbg !12585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12590, metadata !DIExpression()), !dbg !12591
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12592
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !12592
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !12592
  br i1 %4, label %5, label %6, !dbg !12595

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 726) #23, !dbg !12596
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 726) #23, !dbg !12596
  unreachable, !dbg !12596

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !12598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12599 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12601, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12602, metadata !DIExpression()), !dbg !12603
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !12604
  br i1 %3, label %4, label %5, !dbg !12607

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1139) #23, !dbg !12608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1139) #23, !dbg !12608
  unreachable, !dbg !12608

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12610
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #21, !dbg !12611
  ret void, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12617
  %3 = load i8, i8* %2, align 1, !dbg !12618
  %4 = and i8 %3, -3, !dbg !12618
  store i8 %4, i8* %2, align 1, !dbg !12618
  ret void, !dbg !12619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !12620 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12625, metadata !DIExpression()), !dbg !12629
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12630
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12630
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12626, metadata !DIExpression()), !dbg !12629
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12631
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12631
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12628, metadata !DIExpression()), !dbg !12629
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12632
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12633
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12634
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12635
  tail call fastcc void @sys_dnode_init.221(%struct._dnode* noundef %0) #21, !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.221(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12638 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12640, metadata !DIExpression()), !dbg !12641
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12642
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12643
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12644
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12645
  ret void, !dbg !12646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12649, metadata !DIExpression()), !dbg !12650
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !12651
  br i1 %2, label %3, label %7, !dbg !12653

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()) #20, !dbg !12654
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12657
  %5 = load i8, i8* %4, align 1, !dbg !12658
  %6 = and i8 %5, 127, !dbg !12658
  store i8 %6, i8* %4, align 1, !dbg !12658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11779, metadata !DIExpression()) #20, !dbg !12659
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !12661
  br label %7, !dbg !12662

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12663
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12664
  %10 = zext i1 %9 to i32, !dbg !12664
  tail call fastcc void @update_cache(i32 noundef %10) #21, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12669, metadata !DIExpression()), !dbg !12670
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12671
  %3 = load i8, i8* %2, align 1, !dbg !12672
  %4 = or i8 %3, 2, !dbg !12672
  store i8 %4, i8* %2, align 1, !dbg !12672
  ret void, !dbg !12673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.223(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12674 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12678, metadata !DIExpression()), !dbg !12679
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.224(%struct._dnode* noundef %0) #21, !dbg !12680
  br i1 %2, label %6, label %3, !dbg !12680

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12681
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12681
  br label %6, !dbg !12680

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12680
  ret %struct._dnode* %7, !dbg !12682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !12683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12687, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12688, metadata !DIExpression()), !dbg !12690
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12691
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12691
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12689, metadata !DIExpression()), !dbg !12690
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12692
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12693
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12694
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12695
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12696
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12697
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12704, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12705, metadata !DIExpression()), !dbg !12706
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12707
  br i1 %3, label %6, label %4, !dbg !12708

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #21, !dbg !12709
  br label %6, !dbg !12708

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12708
  ret %struct._dnode* %7, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !12711 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12715, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12716, metadata !DIExpression()), !dbg !12718
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12719
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12719
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12717, metadata !DIExpression()), !dbg !12718
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12720
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12721
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12722
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12723
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12724
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12725
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12726
  ret void, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12728 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12730, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12731, metadata !DIExpression()), !dbg !12732
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12733
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12733
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12734
  br i1 %5, label %9, label %6, !dbg !12735

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12736
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12736
  br label %9, !dbg !12735

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12735
  ret %struct._dnode* %10, !dbg !12737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.224(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !12738 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12742, metadata !DIExpression()), !dbg !12743
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12744
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12744
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12745
  ret i1 %4, !dbg !12746
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #18 !dbg !12747 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12749, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i32 0, metadata !12750, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12755
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12757, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12755
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12760
  br i1 %3, label %5, label %4, !dbg !12761

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12762
  unreachable, !dbg !12762

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12755
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12763
  call void @llvm.dbg.value(metadata i32 undef, metadata !12752, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()), !dbg !12754
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #21, !dbg !12764
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12767
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12769
  br i1 %6, label %8, label %7, !dbg !12770

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12771
  unreachable, !dbg !12771

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %9, metadata !11589, metadata !DIExpression()) #20, !dbg !12759
  call void @llvm.dbg.value(metadata i32 %9, metadata !11583, metadata !DIExpression()) #20, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %9, metadata !12752, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12767
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !12774, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12750, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()), !dbg !12754
  ret void, !dbg !12775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12776 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12782, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 %0, metadata !12780, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !12781, metadata !DIExpression()), !dbg !12787
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12788
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #21, !dbg !12789
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12790
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12791
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !12792
  call void @llvm.dbg.value(metadata i32 %6, metadata !12783, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata i32 0, metadata !12784, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12794
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12796, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12798
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12798
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12794
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12799
  br i1 %8, label %10, label %9, !dbg !12800

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12801
  unreachable, !dbg !12801

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12798
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12794
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12802
  call void @llvm.dbg.value(metadata i32 undef, metadata !12786, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12784, metadata !DIExpression()), !dbg !12793
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12803
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12807
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !12808
  br i1 %13, label %14, label %15, !dbg !12809

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12810
  br label %15, !dbg !12812

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12813
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12815
  br i1 %16, label %18, label %17, !dbg !12816

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12817
  unreachable, !dbg !12817

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %19, metadata !11589, metadata !DIExpression()) #20, !dbg !12798
  call void @llvm.dbg.value(metadata i32 %19, metadata !11583, metadata !DIExpression()) #20, !dbg !12794
  call void @llvm.dbg.value(metadata i32 %19, metadata !12786, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12813
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #20, !dbg !12820, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12784, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12784, metadata !DIExpression()), !dbg !12793
  ret i32 %6, !dbg !12821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12822 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12827, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i64 undef, metadata !12829, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !12828, metadata !DIExpression()), !dbg !12830
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12831
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12832
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !12833
  br i1 %6, label %7, label %8, !dbg !12836

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 846) #23, !dbg !12837
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 846) #23, !dbg !12837
  unreachable, !dbg !12837

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12839
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12841, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12839
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12844
  br i1 %10, label %12, label %11, !dbg !12845

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12846
  unreachable, !dbg !12846

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12839
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12847
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12848
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #21, !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12194, metadata !DIExpression()) #20, !dbg !12850
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #23, !dbg !12852
  br i1 %14, label %16, label %15, !dbg !12853

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef %0) #23, !dbg !12854
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12854
  unreachable, !dbg !12854

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !12855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12190, metadata !DIExpression()) #20, !dbg !12855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12194, metadata !DIExpression()) #20, !dbg !12857
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12859
  br i1 %17, label %19, label %18, !dbg !12860

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !12861
  unreachable, !dbg !12861

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !12185, metadata !DIExpression()) #20, !dbg !12855
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #23, !dbg !12862
  ret i32 %21, !dbg !12863
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !12864 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12868, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12869, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata i32 0, metadata !12870, metadata !DIExpression()), !dbg !12874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12875
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12877, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12879
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12879
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12875
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12880
  br i1 %3, label %5, label %4, !dbg !12881

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12882
  unreachable, !dbg !12882

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12879
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12875
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12883
  call void @llvm.dbg.value(metadata i32 undef, metadata !12872, metadata !DIExpression()), !dbg !12874
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12869, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata i32 undef, metadata !12870, metadata !DIExpression()), !dbg !12874
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !12884
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12869, metadata !DIExpression()), !dbg !12873
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !12887
  br i1 %8, label %10, label %9, !dbg !12889

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !12890
  br label %10, !dbg !12892

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12893
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12895
  br i1 %11, label %13, label %12, !dbg !12896

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12897
  unreachable, !dbg !12897

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %14, metadata !11589, metadata !DIExpression()) #20, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %14, metadata !11583, metadata !DIExpression()) #20, !dbg !12875
  call void @llvm.dbg.value(metadata i32 %14, metadata !12872, metadata !DIExpression()), !dbg !12874
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12893
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !12900, !srcloc !11631
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12869, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata i32 undef, metadata !12870, metadata !DIExpression()), !dbg !12874
  ret %struct.k_thread* %7, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !12902 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12906, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12907, metadata !DIExpression()), !dbg !12909
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.223(%struct._dnode* noundef %0) #21, !dbg !12910
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12908, metadata !DIExpression()), !dbg !12909
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12907, metadata !DIExpression()), !dbg !12909
  ret %struct.k_thread* %3, !dbg !12911
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !12912 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12914, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12915, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata i32 0, metadata !12916, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12921
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12923, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12925
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12925
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12921
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12926
  br i1 %3, label %5, label %4, !dbg !12927

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12928
  unreachable, !dbg !12928

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12925
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12921
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12929
  call void @llvm.dbg.value(metadata i32 undef, metadata !12918, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12915, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata i32 undef, metadata !12916, metadata !DIExpression()), !dbg !12920
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12915, metadata !DIExpression()), !dbg !12919
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !12933
  br i1 %8, label %11, label %9, !dbg !12935

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !12936
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !12938
  br label %11, !dbg !12939

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12940
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12942
  br i1 %12, label %14, label %13, !dbg !12943

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12944
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12944
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12944
  unreachable, !dbg !12944

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !12923
  call void @llvm.dbg.value(metadata i32 %15, metadata !11589, metadata !DIExpression()) #20, !dbg !12925
  call void @llvm.dbg.value(metadata i32 %15, metadata !11583, metadata !DIExpression()) #20, !dbg !12921
  call void @llvm.dbg.value(metadata i32 %15, metadata !12918, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !12947, !srcloc !11631
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12915, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata i32 undef, metadata !12916, metadata !DIExpression()), !dbg !12920
  ret %struct.k_thread* %7, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12951, metadata !DIExpression()), !dbg !12952
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12749, metadata !DIExpression()) #20, !dbg !12953
  call void @llvm.dbg.value(metadata i32 0, metadata !12750, metadata !DIExpression()) #20, !dbg !12955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12956
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12958, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12956
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12961
  br i1 %3, label %5, label %4, !dbg !12962

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12963
  unreachable, !dbg !12963

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12956
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12752, metadata !DIExpression()) #20, !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #20, !dbg !12955
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #23, !dbg !12965
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !12966
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12968
  br i1 %6, label %8, label %7, !dbg !12969

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !12970
  unreachable, !dbg !12970

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12958
  call void @llvm.dbg.value(metadata i32 %9, metadata !11589, metadata !DIExpression()) #20, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %9, metadata !11583, metadata !DIExpression()) #20, !dbg !12956
  call void @llvm.dbg.value(metadata i32 %9, metadata !12752, metadata !DIExpression()) #20, !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !12966
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !12971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !12973, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !12750, metadata !DIExpression()) #20, !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #20, !dbg !12955
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !12974
  ret void, !dbg !12975
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12978, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 %1, metadata !12979, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 0, metadata !12980, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 0, metadata !12981, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !12986
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12988, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !12990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12986
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12991
  br i1 %4, label %6, label %5, !dbg !12992

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12993
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !12993
  unreachable, !dbg !12993

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !12990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !12986
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !12994
  call void @llvm.dbg.value(metadata i32 undef, metadata !12983, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i8 poison, metadata !12980, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()), !dbg !12985
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !12995
  call void @llvm.dbg.value(metadata i1 %8, metadata !12980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12984
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %10 = bitcast %union.anon.2* %9 to i8*
  %11 = trunc i32 %1 to i8
  br i1 %8, label %12, label %17, !dbg !12998

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()) #20, !dbg !12999
  %13 = load i8, i8* %7, align 1, !dbg !13005
  %14 = and i8 %13, 127, !dbg !13005
  store i8 %14, i8* %7, align 1, !dbg !13005
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11779, metadata !DIExpression()) #20, !dbg !13006
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !13008
  store i8 %11, i8* %10, align 2, !dbg !13009
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11788, metadata !DIExpression()) #20, !dbg !13010
  %15 = load i8, i8* %7, align 1, !dbg !13012
  %16 = or i8 %15, -128, !dbg !13012
  store i8 %16, i8* %7, align 1, !dbg !13012
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11795, metadata !DIExpression()) #20, !dbg !13013
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #23, !dbg !13015
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !13016
  br label %18, !dbg !13017

17:                                               ; preds = %6
  store i8 %11, i8* %10, align 2, !dbg !13018
  br label %18

18:                                               ; preds = %12, %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13020
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13022
  br i1 %19, label %21, label %20, !dbg !13023

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13024
  unreachable, !dbg !13024

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %3, 0, !dbg !12988
  call void @llvm.dbg.value(metadata i32 %22, metadata !11589, metadata !DIExpression()) #20, !dbg !12990
  call void @llvm.dbg.value(metadata i32 %22, metadata !11583, metadata !DIExpression()) #20, !dbg !12986
  call void @llvm.dbg.value(metadata i32 %22, metadata !12983, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13020
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !13025
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #20, !dbg !13027, !srcloc !11631
  call void @llvm.dbg.value(metadata i8 poison, metadata !12980, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12981, metadata !DIExpression()), !dbg !12985
  ret i1 %8, !dbg !13028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13033, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i32 %1, metadata !13034, metadata !DIExpression()), !dbg !13036
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !13037
  call void @llvm.dbg.value(metadata i1 %3, metadata !13035, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13036
  br i1 %3, label %4, label %12, !dbg !13038

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13040
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13041
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13041
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13041
  %9 = load i8, i8* %8, align 1, !dbg !13041
  %10 = icmp eq i8 %9, 0, !dbg !13042
  br i1 %10, label %11, label %12, !dbg !13043

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13044
  br label %12, !dbg !13046

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13048 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13050, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13054
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13056, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13058
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13058
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13054
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13059
  br i1 %2, label %4, label %3, !dbg !13060

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13061
  unreachable, !dbg !13061

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13058
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13054
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13052, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13050, metadata !DIExpression()), !dbg !13053
  tail call fastcc void @z_sched_lock() #21, !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13066
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13068
  br i1 %5, label %7, label %6, !dbg !13069

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13070
  unreachable, !dbg !13070

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !13056
  call void @llvm.dbg.value(metadata i32 %8, metadata !11589, metadata !DIExpression()) #20, !dbg !13058
  call void @llvm.dbg.value(metadata i32 %8, metadata !11583, metadata !DIExpression()) #20, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %8, metadata !13052, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13066
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !13071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #20, !dbg !13073, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !13050, metadata !DIExpression()), !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13050, metadata !DIExpression()), !dbg !13053
  ret void, !dbg !13074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13075 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13076, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %1, metadata !12237, metadata !DIExpression()) #20, !dbg !13081
  %2 = icmp eq i32 %1, 0, !dbg !13082
  br i1 %2, label %4, label %3, !dbg !13083

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.235, i32 0, i32 0), i32 noundef 253) #23, !dbg !13084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.235, i32 0, i32 0), i32 noundef 253) #23, !dbg !13084
  unreachable, !dbg !13084

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13086
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13086
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13086
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13086
  %9 = load i8, i8* %8, align 1, !dbg !13086
  %10 = icmp eq i8 %9, 1, !dbg !13086
  br i1 %10, label %11, label %12, !dbg !13089

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.235, i32 0, i32 0), i32 noundef 254) #23, !dbg !13090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.235, i32 0, i32 0), i32 noundef 254) #23, !dbg !13090
  unreachable, !dbg !13090

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !13092
  store i8 %13, i8* %8, align 1, !dbg !13092
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !13093, !srcloc !13095
  ret void, !dbg !13096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13097 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13099, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13103
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13105, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13103
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13108
  br i1 %2, label %4, label %3, !dbg !13109

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13110
  unreachable, !dbg !13110

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13111
  call void @llvm.dbg.value(metadata i32 undef, metadata !13101, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 undef, metadata !13099, metadata !DIExpression()), !dbg !13102
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13112
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13112
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13112
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13112
  %9 = load i8, i8* %8, align 1, !dbg !13112
  %10 = icmp eq i8 %9, 0, !dbg !13112
  br i1 %10, label %11, label %12, !dbg !13117

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 999) #23, !dbg !13118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 999) #23, !dbg !13118
  unreachable, !dbg !13118

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13120, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %13, metadata !12237, metadata !DIExpression()) #20, !dbg !13125
  %14 = icmp eq i32 %13, 0, !dbg !13126
  br i1 %14, label %16, label %15, !dbg !13127

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1000) #23, !dbg !13128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1000) #23, !dbg !13128
  unreachable, !dbg !13128

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13130
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !13131
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !13131
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !13131
  %21 = load i8, i8* %20, align 1, !dbg !13132
  %22 = add i8 %21, 1, !dbg !13132
  store i8 %22, i8* %20, align 1, !dbg !13132
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !13133
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13134
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13136
  br i1 %23, label %25, label %24, !dbg !13137

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13138
  unreachable, !dbg !13138

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %26, metadata !11589, metadata !DIExpression()) #20, !dbg !13107
  call void @llvm.dbg.value(metadata i32 %26, metadata !11583, metadata !DIExpression()) #20, !dbg !13103
  call void @llvm.dbg.value(metadata i32 %26, metadata !13101, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13134
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !13139
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #20, !dbg !13141, !srcloc !11631
  call void @llvm.dbg.value(metadata i32 1, metadata !13099, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 undef, metadata !13099, metadata !DIExpression()), !dbg !13102
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13142
  ret void, !dbg !13143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !13144 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13145
  ret %struct.k_thread* %1, !dbg !13146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) #8 !dbg !13147 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13149, metadata !DIExpression()), !dbg !13154
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13150, metadata !DIExpression()), !dbg !13154
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13155
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13151, metadata !DIExpression()), !dbg !13154
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13156
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13152, metadata !DIExpression()), !dbg !13154
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #21, !dbg !13157
  call void @llvm.dbg.value(metadata i32 %5, metadata !13153, metadata !DIExpression()), !dbg !13154
  %6 = icmp sgt i32 %5, 0, !dbg !13158
  br i1 %6, label %17, label %7, !dbg !13160

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13161
  br i1 %8, label %17, label %9, !dbg !13163

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13164
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13164
  %12 = load i32, i32* %11, align 8, !dbg !13164
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13166
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13166
  %15 = load i32, i32* %14, align 8, !dbg !13166
  %16 = icmp ult i32 %12, %15, !dbg !13167
  br label %17, !dbg !13168

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13169
  ret i1 %18, !dbg !13170
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !13171 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13181, metadata !DIExpression()), !dbg !13185
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13186
  %3 = load i32, i32* %2, align 4, !dbg !13186
  %4 = icmp eq i32 %3, 0, !dbg !13188
  br i1 %4, label %10, label %5, !dbg !13189

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13182, metadata !DIExpression()), !dbg !13185
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13190, !range !13191
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13192
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13183, metadata !DIExpression()), !dbg !13185
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.223(%struct._dnode* noundef %7) #21, !dbg !13193
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13184, metadata !DIExpression()), !dbg !13185
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13182, metadata !DIExpression()), !dbg !13185
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13185
  ret %struct.k_thread* %11, !dbg !13194
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13195 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13199, metadata !DIExpression()), !dbg !13202
  call void @llvm.dbg.value(metadata i32 0, metadata !13200, metadata !DIExpression()), !dbg !13202
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.240(%struct._wait_q_t* noundef %0) #21, !dbg !13203
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13201, metadata !DIExpression()), !dbg !13202
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13204
  br i1 %3, label %8, label %4, !dbg !13205

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !13206
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !13208
  call void @llvm.dbg.value(metadata i32 1, metadata !13200, metadata !DIExpression()), !dbg !13202
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.240(%struct._wait_q_t* noundef %0) #21, !dbg !13203
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13201, metadata !DIExpression()), !dbg !13202
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13204
  br i1 %7, label %8, label %4, !dbg !13205, !llvm.loop !13209

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13202
  ret i32 %9, !dbg !13211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.240(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13212 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13214, metadata !DIExpression()), !dbg !13215
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13216
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.223(%struct._dnode* noundef %2) #21, !dbg !13217
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13218
  ret %struct.k_thread* %4, !dbg !13219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13220 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13229, metadata !DIExpression()), !dbg !13230
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 0, !dbg !13231
  store %struct.rbnode* null, %struct.rbnode** %2, align 4, !dbg !13231
  %3 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 1, !dbg !13231
  store i1 (%struct.rbnode*, %struct.rbnode*)* @z_priq_rb_lessthan, i1 (%struct.rbnode*, %struct.rbnode*)** %3, align 4, !dbg !13231
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 2, !dbg !13231
  store i32 0, i32* %4, align 4, !dbg !13231
  %5 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 1, !dbg !13231
  store i32 0, i32* %5, align 4, !dbg !13231
  ret void, !dbg !13232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13233 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #21, !dbg !13234
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #21, !dbg !13235
  ret void, !dbg !13236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13242, metadata !DIExpression()), !dbg !13243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13244
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13244
  %4 = load i8, i8* %3, align 2, !dbg !13244
  %5 = sext i8 %4 to i32, !dbg !13245
  ret i32 %5, !dbg !13246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13251, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.value(metadata i32 %1, metadata !13252, metadata !DIExpression()), !dbg !13254
  %3 = add i32 %1, 29, !dbg !13255
  %4 = icmp ult i32 %3, 69, !dbg !13255
  br i1 %4, label %6, label %5, !dbg !13255

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1331) #23, !dbg !13259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.246, i32 0, i32 0), i32 noundef %1, i32 noundef 39, i32 noundef -29) #23, !dbg !13259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1331) #23, !dbg !13259
  unreachable, !dbg !13259

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13261, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %7, metadata !12237, metadata !DIExpression()) #20, !dbg !13266
  %8 = icmp eq i32 %7, 0, !dbg !13267
  br i1 %8, label %10, label %9, !dbg !13268

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1332) #23, !dbg !13269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1332) #23, !dbg !13269
  unreachable, !dbg !13269

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()), !dbg !13254
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !13271
  ret void, !dbg !13272
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13273 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #21, !dbg !13274
  br i1 %1, label %8, label %2, !dbg !13275

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #23, !dbg !13276
  br i1 %3, label %8, label %4, !dbg !13277

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13278
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #21, !dbg !13279
  %7 = xor i1 %6, true, !dbg !13277
  br label %8, !dbg !13277

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !13281 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13282, !range !3842
  %2 = icmp eq i8 %1, 0, !dbg !13282
  ret i1 %2, !dbg !13283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13284 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13287, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %1, metadata !12237, metadata !DIExpression()) #20, !dbg !13292
  %2 = icmp eq i32 %1, 0, !dbg !13293
  br i1 %2, label %4, label %3, !dbg !13294

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1392) #23, !dbg !13295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1392) #23, !dbg !13295
  unreachable, !dbg !13295

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13297
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13299, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13297
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13302
  br i1 %6, label %8, label %7, !dbg !13303

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13304
  unreachable, !dbg !13304

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13301
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13297
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13305
  call void @llvm.dbg.value(metadata i32 undef, metadata !13286, metadata !DIExpression()), !dbg !13306
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13307
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11771, metadata !DIExpression()) #20, !dbg !13310
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !13312
  %11 = load i8, i8* %10, align 1, !dbg !13313
  %12 = and i8 %11, 127, !dbg !13313
  store i8 %12, i8* %10, align 1, !dbg !13313
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11779, metadata !DIExpression()) #20, !dbg !13314
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %9) #23, !dbg !13316
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13317
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11788, metadata !DIExpression()) #20, !dbg !13318
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !13320
  %15 = load i8, i8* %14, align 1, !dbg !13321
  %16 = or i8 %15, -128, !dbg !13321
  store i8 %16, i8* %14, align 1, !dbg !13321
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11795, metadata !DIExpression()) #20, !dbg !13322
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %13) #23, !dbg !13324
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !13325
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12190, metadata !DIExpression()) #20, !dbg !13326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12194, metadata !DIExpression()) #20, !dbg !13328
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13330
  br i1 %17, label %19, label %18, !dbg !13331

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13332
  unreachable, !dbg !13332

19:                                               ; preds = %8
  %20 = extractvalue { i32, i32 } %5, 0, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %20, metadata !11589, metadata !DIExpression()) #20, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %20, metadata !11583, metadata !DIExpression()) #20, !dbg !13297
  call void @llvm.dbg.value(metadata i32 %20, metadata !13286, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13326
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #23, !dbg !13333
  ret void, !dbg !13334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13335 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13339, metadata !DIExpression()), !dbg !13342
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13343, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %3, metadata !12237, metadata !DIExpression()) #20, !dbg !13348
  %4 = icmp eq i32 %3, 0, !dbg !13349
  br i1 %4, label %6, label %5, !dbg !13350

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1463) #23, !dbg !13351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1463) #23, !dbg !13351
  unreachable, !dbg !13351

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !13353
  br i1 %7, label %8, label %10, !dbg !13355

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13356
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #21, !dbg !13358
  br label %15, !dbg !13359

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !13340, metadata !DIExpression()), !dbg !13342
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #21, !dbg !13360
  %12 = sext i32 %11 to i64, !dbg !13360
  call void @llvm.dbg.value(metadata i64 %12, metadata !13340, metadata !DIExpression()), !dbg !13342
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64.249(i64 noundef %12) #21, !dbg !13361
  %14 = trunc i64 %13 to i32, !dbg !13361
  call void @llvm.dbg.value(metadata i32 %14, metadata !13341, metadata !DIExpression()), !dbg !13342
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !13342
  ret i32 %16, !dbg !13362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13367, metadata !DIExpression()), !dbg !13368
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !13369, !srcloc !13371
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #21, !dbg !13372
  ret void, !dbg !13373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13374 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13378, metadata !DIExpression()), !dbg !13382
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13383, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %2, metadata !12237, metadata !DIExpression()) #20, !dbg !13388
  %3 = icmp eq i32 %2, 0, !dbg !13389
  br i1 %3, label %5, label %4, !dbg !13390

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1420) #23, !dbg !13391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1420) #23, !dbg !13391
  unreachable, !dbg !13391

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !13393
  br i1 %6, label %7, label %8, !dbg !13395

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #21, !dbg !13396
  br label %43, !dbg !13398

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !13380, metadata !DIExpression()), !dbg !13382
  %9 = icmp sgt i64 %0, -3, !dbg !13399
  br i1 %9, label %10, label %14, !dbg !13401

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !13402
  %12 = trunc i64 %0 to i32, !dbg !13404
  %13 = add i32 %11, %12, !dbg !13404
  call void @llvm.dbg.value(metadata i32 %13, metadata !13379, metadata !DIExpression()), !dbg !13382
  br label %17, !dbg !13405

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !13406
  %16 = sub i32 -2, %15, !dbg !13406
  call void @llvm.dbg.value(metadata i32 %16, metadata !13379, metadata !DIExpression()), !dbg !13382
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !13408
  call void @llvm.dbg.value(metadata i32 %18, metadata !13379, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13409
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13411, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13409
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13414
  br i1 %20, label %22, label %21, !dbg !13415

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13416
  unreachable, !dbg !13416

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13409
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13417
  call void @llvm.dbg.value(metadata i32 undef, metadata !13381, metadata !DIExpression()), !dbg !13382
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13418
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !13419
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #21, !dbg !13420
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13421
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13422
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %24, [1 x i64] %25) #21, !dbg !13422
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13423
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #21, !dbg !13424
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12190, metadata !DIExpression()) #20, !dbg !13425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12194, metadata !DIExpression()) #20, !dbg !13427
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13429
  br i1 %27, label %29, label %28, !dbg !13430

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13431
  unreachable, !dbg !13431

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %30, metadata !11589, metadata !DIExpression()) #20, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %30, metadata !11583, metadata !DIExpression()) #20, !dbg !13409
  call void @llvm.dbg.value(metadata i32 %30, metadata !13381, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13425
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #23, !dbg !13432
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13433
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #21, !dbg !13433
  br i1 %33, label %34, label %35, !dbg !13436

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1448) #23, !dbg !13437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.206, i32 0, i32 0)) #23, !dbg !13437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1448) #23, !dbg !13437
  unreachable, !dbg !13437

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !13439
  %37 = tail call i32 @sys_clock_tick_get_32() #23, !dbg !13440
  %38 = zext i32 %37 to i64, !dbg !13440
  %39 = sub nsw i64 %36, %38, !dbg !13441
  call void @llvm.dbg.value(metadata i64 %39, metadata !13378, metadata !DIExpression()), !dbg !13382
  %40 = icmp sgt i64 %39, 0, !dbg !13442
  %41 = select i1 %40, i64 %39, i64 0, !dbg !13442
  %42 = trunc i64 %41 to i32, !dbg !13442
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !13382
  ret i32 %44, !dbg !13443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.249(i64 noundef %0) unnamed_addr #4 !dbg !13444 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13446, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i64 %0, metadata !11639, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 10000, metadata !11642, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 1000, metadata !11643, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 1, metadata !11644, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i1 false, metadata !11645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13448
  call void @llvm.dbg.value(metadata i1 false, metadata !11646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13448
  call void @llvm.dbg.value(metadata i8 0, metadata !11647, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i1 false, metadata !11648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13448
  call void @llvm.dbg.value(metadata i1 true, metadata !11649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13448
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i64 %0, metadata !11639, metadata !DIExpression()), !dbg !13448
  %2 = udiv i64 %0, 10, !dbg !13450
  ret i64 %2, !dbg !13454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13455 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !13456, !srcloc !13458
  tail call void @z_impl_k_yield() #21, !dbg !13459
  ret void, !dbg !13460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13465, metadata !DIExpression()), !dbg !13467
  %2 = sext i32 %0 to i64, !dbg !13468
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #21, !dbg !13469
  call void @llvm.dbg.value(metadata i64 %3, metadata !13466, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13467
  %4 = shl i64 %3, 32, !dbg !13470
  %5 = ashr exact i64 %4, 32, !dbg !13470
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #21, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %6, metadata !13466, metadata !DIExpression()), !dbg !13467
  %7 = sext i32 %6 to i64, !dbg !13472
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #21, !dbg !13473
  %9 = trunc i64 %8 to i32, !dbg !13473
  ret i32 %9, !dbg !13474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13475 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13477, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata i64 %0, metadata !11639, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11642, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i32 10000, metadata !11643, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i8 1, metadata !11644, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i1 false, metadata !11645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13479
  call void @llvm.dbg.value(metadata i1 true, metadata !11646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13479
  call void @llvm.dbg.value(metadata i8 0, metadata !11647, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i1 false, metadata !11648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13479
  call void @llvm.dbg.value(metadata i1 true, metadata !11649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13479
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13479
  %2 = add i64 %0, 99, !dbg !13481
  call void @llvm.dbg.value(metadata i64 %2, metadata !11639, metadata !DIExpression()), !dbg !13479
  %3 = udiv i64 %2, 100, !dbg !13482
  ret i64 %3, !dbg !13483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !13484 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i64 %0, metadata !11639, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i32 10000, metadata !11642, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11643, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i8 1, metadata !11644, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i1 false, metadata !11645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13488
  call void @llvm.dbg.value(metadata i1 false, metadata !11646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13488
  call void @llvm.dbg.value(metadata i8 0, metadata !11647, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i1 true, metadata !11648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13488
  call void @llvm.dbg.value(metadata i1 false, metadata !11649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13488
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i64 0, metadata !11650, metadata !DIExpression()), !dbg !13488
  %2 = mul i64 %0, 100, !dbg !13490
  ret i64 %2, !dbg !13492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13495, metadata !DIExpression()), !dbg !13496
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #21, !dbg !13497
  br i1 %2, label %14, label %3, !dbg !13499

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !13500
  %5 = icmp slt i32 %4, 0, !dbg !13502
  br i1 %5, label %6, label %10, !dbg !13503

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13504
  %8 = load i8, i8* %7, align 1, !dbg !13504
  %9 = icmp eq i8 %8, 16, !dbg !13507
  br i1 %9, label %10, label %14, !dbg !13508

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !13509
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13510
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13511, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %11, metadata !12237, metadata !DIExpression()) #20, !dbg !13515
  %12 = icmp eq i32 %11, 0, !dbg !13516
  br i1 %12, label %13, label %14, !dbg !13517

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13518
  br label %14, !dbg !13520

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13524, metadata !DIExpression()), !dbg !13525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13526
  %3 = load i8, i8* %2, align 1, !dbg !13526
  %4 = and i8 %3, 2, !dbg !13527
  %5 = icmp ne i8 %4, 0, !dbg !13528
  ret i1 %5, !dbg !13529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !13530 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13535
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13534, metadata !DIExpression()), !dbg !13536
  ret %struct.k_thread* %1, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13538 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13541, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %1, metadata !12237, metadata !DIExpression()) #20, !dbg !13544
  %2 = icmp eq i32 %1, 0, !dbg !13545
  br i1 %2, label %3, label %8, !dbg !13546

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13547
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #21, !dbg !13548
  %6 = icmp ne i32 %5, 0, !dbg !13546
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13552, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13555
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13557, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13559
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13559
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13555
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13560
  br i1 %3, label %5, label %4, !dbg !13561

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13562
  unreachable, !dbg !13562

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13557
  call void @llvm.dbg.value(metadata i32 %6, metadata !11589, metadata !DIExpression()) #20, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %6, metadata !11583, metadata !DIExpression()) #20, !dbg !13555
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13563
  call void @llvm.dbg.value(metadata i32 %6, metadata !13553, metadata !DIExpression()), !dbg !13554
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13564
  %8 = load i8, i8* %7, align 4, !dbg !13564
  %9 = and i8 %8, 1, !dbg !13566
  %10 = icmp eq i8 %9, 0, !dbg !13567
  br i1 %10, label %15, label %11, !dbg !13568

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13569
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13572
  br i1 %12, label %14, label %13, !dbg !13573

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13574
  unreachable, !dbg !13574

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !13569
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !13575
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13577, !srcloc !11631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1731) #23, !dbg !13578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.256, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #23, !dbg !13578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1731) #23, !dbg !13578
  unreachable, !dbg !13578

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13582
  %17 = load i8, i8* %16, align 1, !dbg !13582
  %18 = and i8 %17, 8, !dbg !13584
  %19 = icmp eq i8 %18, 0, !dbg !13585
  br i1 %19, label %24, label %20, !dbg !13586

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13587
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13590
  br i1 %21, label %23, label %22, !dbg !13591

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13592
  unreachable, !dbg !13592

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !13587
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !13593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13595, !srcloc !11631
  br label %39, !dbg !13596

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #21, !dbg !13597
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13598
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !13600
  br i1 %26, label %27, label %35, !dbg !13601

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13602, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %28, metadata !12237, metadata !DIExpression()) #20, !dbg !13605
  %29 = icmp eq i32 %28, 0, !dbg !13606
  br i1 %29, label %30, label %35, !dbg !13607

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12190, metadata !DIExpression()) #20, !dbg !13608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12194, metadata !DIExpression()) #20, !dbg !13611
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13613
  br i1 %31, label %33, label %32, !dbg !13614

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13615
  unreachable, !dbg !13615

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !12185, metadata !DIExpression()) #20, !dbg !13608
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #23, !dbg !13616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1778) #23, !dbg !13617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.257, i32 0, i32 0)) #23, !dbg !13617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1778) #23, !dbg !13617
  unreachable, !dbg !13617

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13621
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13623
  br i1 %36, label %38, label %37, !dbg !13624

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13625
  unreachable, !dbg !13625

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !11611, metadata !DIExpression()) #20, !dbg !13621
  call void @llvm.dbg.value(metadata i32 %6, metadata !11625, metadata !DIExpression()) #20, !dbg !13626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13628, !srcloc !11631
  br label %39, !dbg !13629

39:                                               ; preds = %38, %23
  ret void, !dbg !13629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13632, metadata !DIExpression()), !dbg !13633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13634
  %3 = load i8, i8* %2, align 1, !dbg !13634
  %4 = and i8 %3, 8, !dbg !13636
  %5 = icmp eq i8 %4, 0, !dbg !13637
  br i1 %5, label %6, label %20, !dbg !13638

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13639
  %8 = or i8 %7, 8, !dbg !13639
  store i8 %8, i8* %2, align 1, !dbg !13639
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #21, !dbg !13641
  br i1 %9, label %10, label %12, !dbg !13643

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()) #20, !dbg !13644
  %11 = and i8 %8, 95, !dbg !13647
  store i8 %11, i8* %2, align 1, !dbg !13647
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11779, metadata !DIExpression()) #20, !dbg !13648
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef nonnull %0) #23, !dbg !13650
  br label %12, !dbg !13651

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13652
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !13652
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !13654
  br i1 %15, label %17, label %16, !dbg !13655

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !13656
  br label %17, !dbg !13658

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !13659
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13660
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #21, !dbg !13661
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !13662
  tail call void @z_thread_monitor_exit(%struct.k_thread* noundef nonnull %0) #23, !dbg !13663
  br label %20, !dbg !13664

20:                                               ; preds = %17, %1
  ret void, !dbg !13665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !13666 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13670, metadata !DIExpression()), !dbg !13672
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.240(%struct._wait_q_t* noundef %0) #21, !dbg !13673
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13671, metadata !DIExpression()), !dbg !13672
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13674
  br i1 %3, label %10, label %4, !dbg !13675

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !13676
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !13678
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13679, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 0, metadata !13684, metadata !DIExpression()), !dbg !13685
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 9, i32 1, !dbg !13687
  store i32 0, i32* %7, align 4, !dbg !13688
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !13689
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.240(%struct._wait_q_t* noundef %0) #21, !dbg !13673
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13671, metadata !DIExpression()), !dbg !13672
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13674
  br i1 %9, label %10, label %4, !dbg !13675, !llvm.loop !13690

10:                                               ; preds = %4, %1
  ret void, !dbg !13692
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13693 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13698, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13697, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13702
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13704, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13702
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13707
  br i1 %4, label %6, label %5, !dbg !13708

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13709
  unreachable, !dbg !13709

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %7, metadata !11589, metadata !DIExpression()) #20, !dbg !13706
  call void @llvm.dbg.value(metadata i32 %7, metadata !11583, metadata !DIExpression()) #20, !dbg !13702
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %7, metadata !13699, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata i32 0, metadata !13700, metadata !DIExpression()), !dbg !13701
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13711
  %9 = load i8, i8* %8, align 1, !dbg !13711
  %10 = and i8 %9, 8, !dbg !13713
  %11 = icmp eq i8 %10, 0, !dbg !13714
  br i1 %11, label %12, label %35, !dbg !13715

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !13698, metadata !DIExpression()), !dbg !13701
  %14 = icmp eq i64 %13, 0, !dbg !13716
  br i1 %14, label %35, label %15, !dbg !13718

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13719
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13721
  br i1 %17, label %35, label %18, !dbg !13722

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13723
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !13723
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !13724
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !13725
  br i1 %22, label %35, label %23, !dbg !13726

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13727, !srcloc !12241
  call void @llvm.dbg.value(metadata i32 %24, metadata !12237, metadata !DIExpression()) #20, !dbg !13733
  %25 = icmp eq i32 %24, 0, !dbg !13734
  br i1 %25, label %27, label %26, !dbg !13735

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1809) #23, !dbg !13736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.258, i32 0, i32 0)) #23, !dbg !13736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.205, i32 0, i32 0), i32 noundef 1809) #23, !dbg !13736
  unreachable, !dbg !13736

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13738
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13739
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #21, !dbg !13740
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13741
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #21, !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !12185, metadata !DIExpression()) #20, !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12190, metadata !DIExpression()) #20, !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12194, metadata !DIExpression()) #20, !dbg !13745
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13747
  br i1 %31, label %33, label %32, !dbg !13748

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 225) #23, !dbg !13749
  unreachable, !dbg !13749

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !12185, metadata !DIExpression()) #20, !dbg !13743
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #23, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %34, metadata !13700, metadata !DIExpression()), !dbg !13701
  br label %40, !dbg !13751

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !13752
  call void @llvm.dbg.value(metadata i32 %36, metadata !13700, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13753
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13755
  br i1 %37, label %39, label %38, !dbg !13756

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13757
  unreachable, !dbg !13757

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !11611, metadata !DIExpression()) #20, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %7, metadata !11625, metadata !DIExpression()) #20, !dbg !13758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !13760, !srcloc !11631
  br label %40, !dbg !13761

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !13701
  ret i32 %41, !dbg !13762
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13763 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13767, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 %1, metadata !13768, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i8* %2, metadata !13769, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i8 0, metadata !13771, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13772, metadata !DIExpression()), !dbg !13776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11577, metadata !DIExpression()) #20, !dbg !13777
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13779, !srcloc !11592
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11590, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13777
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13782
  br i1 %5, label %7, label %6, !dbg !13783

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.201, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 148) #23, !dbg !13784
  unreachable, !dbg !13784

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11589, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11583, metadata !DIExpression()) #20, !dbg !13777
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13785
  call void @llvm.dbg.value(metadata i32 undef, metadata !13774, metadata !DIExpression()), !dbg !13776
  call void @llvm.dbg.value(metadata i8 poison, metadata !13771, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 undef, metadata !13772, metadata !DIExpression()), !dbg !13776
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #21, !dbg !13786
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13770, metadata !DIExpression()), !dbg !13775
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13789
  br i1 %10, label %15, label %11, !dbg !13791

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13792, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %1, metadata !13798, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8* %2, metadata !13799, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13679, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata i32 %1, metadata !13684, metadata !DIExpression()), !dbg !13803
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 9, i32 1, !dbg !13805
  store i32 %1, i32* %12, align 4, !dbg !13806
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13807
  store i8* %2, i8** %13, align 4, !dbg !13808
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !13809
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !13810
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #21, !dbg !13811
  call void @llvm.dbg.value(metadata i8 1, metadata !13771, metadata !DIExpression()), !dbg !13775
  br label %15, !dbg !13812

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !13771, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !11616, metadata !DIExpression()) #20, !dbg !13813
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13815
  br i1 %16, label %18, label %17, !dbg !13816

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.203, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #23, !dbg !13817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.200, i32 0, i32 0), i32 noundef 194) #23, !dbg !13817
  unreachable, !dbg !13817

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !13775
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %20, metadata !11589, metadata !DIExpression()) #20, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %20, metadata !11583, metadata !DIExpression()) #20, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %20, metadata !13774, metadata !DIExpression()), !dbg !13776
  call void @llvm.dbg.value(metadata i32 undef, metadata !11611, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata i32 undef, metadata !11625, metadata !DIExpression()) #20, !dbg !13818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #20, !dbg !13820, !srcloc !11631
  call void @llvm.dbg.value(metadata i8 poison, metadata !13771, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 undef, metadata !13772, metadata !DIExpression()), !dbg !13776
  ret i1 %19, !dbg !13821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13822 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13828, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i64 undef, metadata !13830, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13827, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !13829, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i8** %4, metadata !13831, metadata !DIExpression()), !dbg !13833
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #21, !dbg !13834
  call void @llvm.dbg.value(metadata i32 %6, metadata !13832, metadata !DIExpression()), !dbg !13833
  %7 = icmp eq i8** %4, null, !dbg !13835
  br i1 %7, label %12, label %8, !dbg !13837

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13838
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13840
  %11 = load i8*, i8** %10, align 4, !dbg !13840
  store i8* %11, i8** %4, align 4, !dbg !13841
  br label %12, !dbg !13842

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13844 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #23, !dbg !13846
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #23, !dbg !13847
  ret void, !dbg !13848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13849 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13859, metadata !DIExpression()), !dbg !13876
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13857, metadata !DIExpression()), !dbg !13876
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13858, metadata !DIExpression()), !dbg !13876
  %5 = icmp eq i64 %4, -1, !dbg !13877
  br i1 %5, label %63, label %6, !dbg !13879

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13880
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* noundef %7) #21, !dbg !13880
  br i1 %8, label %9, label %10, !dbg !13883

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 99) #23, !dbg !13884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.267, i32 0, i32 0)) #23, !dbg !13884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 99) #23, !dbg !13884
  unreachable, !dbg !13884

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13886
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !13887
  call void @llvm.dbg.value(metadata i32 0, metadata !13860, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !13896
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13898, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !13896
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !13906
  br i1 %13, label %15, label %14, !dbg !13909

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !13910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !13910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !13910
  unreachable, !dbg !13910

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %16, metadata !13901, metadata !DIExpression()) #20, !dbg !13905
  call void @llvm.dbg.value(metadata i32 %16, metadata !13895, metadata !DIExpression()) #20, !dbg !13896
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %16, metadata !13866, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 undef, metadata !13860, metadata !DIExpression()), !dbg !13888
  %17 = icmp slt i64 %4, -1, !dbg !13913
  br i1 %17, label %18, label %24, !dbg !13914

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !13915
  %20 = add i64 %4, %19, !dbg !13916
  %21 = sub i64 -2, %20, !dbg !13916
  call void @llvm.dbg.value(metadata i64 %21, metadata !13870, metadata !DIExpression()), !dbg !13917
  %22 = icmp sgt i64 %21, 1, !dbg !13918
  %23 = select i1 %22, i64 %21, i64 1, !dbg !13918
  br label %29, !dbg !13919

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !13920
  %26 = tail call fastcc i32 @elapsed.271() #21, !dbg !13922
  %27 = sext i32 %26 to i64, !dbg !13922
  %28 = add nsw i64 %25, %27, !dbg !13923
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !13924
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13925
  store i64 %30, i64* %31, align 8, !dbg !13926
  %32 = tail call fastcc %struct._timeout* @first() #21, !dbg !13927
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !13867, metadata !DIExpression()), !dbg !13929
  %33 = icmp eq %struct._timeout* %32, null, !dbg !13930
  br i1 %33, label %48, label %34, !dbg !13930

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !13931
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !13867, metadata !DIExpression()), !dbg !13929
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !13935
  %38 = load i64, i64* %37, align 8, !dbg !13935
  %39 = icmp slt i64 %35, %38, !dbg !13936
  br i1 %39, label %40, label %44, !dbg !13937

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !13935
  %42 = sub nsw i64 %38, %35, !dbg !13938
  store i64 %42, i64* %41, align 8, !dbg !13938
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !13940
  tail call fastcc void @sys_dlist_insert.272(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #21, !dbg !13941
  br label %49, !dbg !13942

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !13943
  store i64 %45, i64* %31, align 8, !dbg !13943
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #21, !dbg !13944
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !13867, metadata !DIExpression()), !dbg !13929
  %47 = icmp eq %struct._timeout* %46, null, !dbg !13930
  br i1 %47, label %48, label %34, !dbg !13930, !llvm.loop !13945

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.273(%struct._dnode* noundef nonnull %7) #21, !dbg !13947
  br label %49, !dbg !13950

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #21, !dbg !13951
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !13952
  br i1 %51, label %52, label %59, !dbg !13953

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #21, !dbg !13954
  call void @llvm.dbg.value(metadata i32 %53, metadata !13873, metadata !DIExpression()), !dbg !13955
  %54 = icmp ne i32 %53, 0, !dbg !13956
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !13958
  br i1 %57, label %59, label %58, !dbg !13958

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #23, !dbg !13959
  br label %59, !dbg !13961

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !13968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !13968
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !13970
  br i1 %60, label %62, label %61, !dbg !13973

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !13974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !13974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !13974
  unreachable, !dbg !13974

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !13962, metadata !DIExpression()) #20, !dbg !13968
  call void @llvm.dbg.value(metadata i32 %16, metadata !13976, metadata !DIExpression()) #20, !dbg !13979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #20, !dbg !13981, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 undef, metadata !13860, metadata !DIExpression()), !dbg !13888
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !13983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13990, metadata !DIExpression()), !dbg !13991
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13992
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13992
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13993
  ret i1 %4, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.271() unnamed_addr #1 !dbg !13995 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13998
  %2 = icmp eq i32 %1, 0, !dbg !13999
  br i1 %2, label %3, label %5, !dbg !13998

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #23, !dbg !14000
  br label %5, !dbg !13998

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13998
  ret i32 %6, !dbg !14001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !14002 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278() #21, !dbg !14008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14006, metadata !DIExpression()), !dbg !14009
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14010
  ret %struct._timeout* %2, !dbg !14011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.272(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14012 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14016, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14017, metadata !DIExpression()), !dbg !14020
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14021
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14021
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14018, metadata !DIExpression()), !dbg !14020
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14022
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14023
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14024
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14025
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14026
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14027
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14028
  ret void, !dbg !14029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !14030 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14034, metadata !DIExpression()), !dbg !14036
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14037
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.276(%struct._dnode* noundef %2) #21, !dbg !14038
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14035, metadata !DIExpression()), !dbg !14036
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14039
  ret %struct._timeout* %4, !dbg !14040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.273(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14041 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14046, metadata !DIExpression()), !dbg !14049
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14047, metadata !DIExpression()), !dbg !14049
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14050
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14048, metadata !DIExpression()), !dbg !14049
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14051
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14052
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14053
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14054
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14055
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14056
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14057
  ret void, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14059 {
  %1 = tail call fastcc %struct._timeout* @first() #21, !dbg !14064
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14061, metadata !DIExpression()), !dbg !14065
  %2 = tail call fastcc i32 @elapsed.271() #21, !dbg !14066
  call void @llvm.dbg.value(metadata i32 %2, metadata !14062, metadata !DIExpression()), !dbg !14065
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14067
  br i1 %3, label %14, label %4, !dbg !14069

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14070
  %6 = load i64, i64* %5, align 8, !dbg !14070
  %7 = sext i32 %2 to i64, !dbg !14071
  %8 = sub nsw i64 %6, %7, !dbg !14072
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14073
  br i1 %9, label %14, label %10, !dbg !14074

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14075
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14075
  %13 = trunc i64 %12 to i32, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %13, metadata !14063, metadata !DIExpression()), !dbg !14065
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14077
  call void @llvm.dbg.value(metadata i32 %15, metadata !14063, metadata !DIExpression()), !dbg !14065
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14078
  %17 = icmp ne i32 %16, 0, !dbg !14080
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14081
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %20, metadata !14063, metadata !DIExpression()), !dbg !14065
  ret i32 %20, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.276(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14088, metadata !DIExpression()), !dbg !14089
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14090
  br i1 %2, label %5, label %3, !dbg !14091

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.277(%struct._dnode* noundef nonnull %0) #21, !dbg !14092
  br label %5, !dbg !14091

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14091
  ret %struct._dnode* %6, !dbg !14093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.277(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14094 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14096, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14099
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14100
  br i1 %3, label %7, label %4, !dbg !14101

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14102
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14102
  br label %7, !dbg !14101

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14101
  ret %struct._dnode* %8, !dbg !14103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.278() unnamed_addr #8 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14108, metadata !DIExpression()), !dbg !14109
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.279() #21, !dbg !14110
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14110
  ret %struct._dnode* %3, !dbg !14111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.279() unnamed_addr #8 !dbg !14112 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14116, metadata !DIExpression()), !dbg !14117
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14118
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14119
  ret i1 %2, !dbg !14120
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14121 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14125, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 -22, metadata !14126, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 0, metadata !14127, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14132
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14134, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14132
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14137
  br i1 %3, label %5, label %4, !dbg !14138

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14139
  unreachable, !dbg !14139

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14132
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14140
  call void @llvm.dbg.value(metadata i32 undef, metadata !14129, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata i32 -22, metadata !14126, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14127, metadata !DIExpression()), !dbg !14131
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14126, metadata !DIExpression()), !dbg !14130
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* noundef %6) #21, !dbg !14141
  br i1 %7, label %8, label %9, !dbg !14145

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #21, !dbg !14146
  call void @llvm.dbg.value(metadata i32 0, metadata !14126, metadata !DIExpression()), !dbg !14130
  br label %9, !dbg !14148

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !14130
  call void @llvm.dbg.value(metadata i32 %10, metadata !14126, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14149
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14151
  br i1 %11, label %13, label %12, !dbg !14152

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14153
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14153
  unreachable, !dbg !14153

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14134
  call void @llvm.dbg.value(metadata i32 %14, metadata !13901, metadata !DIExpression()) #20, !dbg !14136
  call void @llvm.dbg.value(metadata i32 %14, metadata !13895, metadata !DIExpression()) #20, !dbg !14132
  call void @llvm.dbg.value(metadata i32 %14, metadata !14129, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14149
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14154
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !14156, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 %10, metadata !14126, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14127, metadata !DIExpression()), !dbg !14131
  ret i32 %10, !dbg !14157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !14158 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14160, metadata !DIExpression()), !dbg !14161
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #21, !dbg !14162
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14164
  br i1 %3, label %10, label %4, !dbg !14165

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14166
  %6 = load i64, i64* %5, align 8, !dbg !14166
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14168
  %8 = load i64, i64* %7, align 8, !dbg !14169
  %9 = add nsw i64 %8, %6, !dbg !14169
  store i64 %9, i64* %7, align 8, !dbg !14169
  br label %10, !dbg !14170

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14171
  tail call fastcc void @sys_dlist_remove.282(%struct._dnode* noundef %11) #21, !dbg !14172
  ret void, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.282(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !14174 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14178, metadata !DIExpression()), !dbg !14181
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14182
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14182
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14179, metadata !DIExpression()), !dbg !14181
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14183
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14183
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14180, metadata !DIExpression()), !dbg !14181
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14184
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14185
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14186
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14187
  tail call fastcc void @sys_dnode_init.283(%struct._dnode* noundef %0) #21, !dbg !14188
  ret void, !dbg !14189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.283(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14190 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14192, metadata !DIExpression()), !dbg !14193
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14194
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14195
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14196
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14197
  ret void, !dbg !14198
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14199 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14205, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i64 0, metadata !14206, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32 0, metadata !14207, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14212
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14214, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14212
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14217
  br i1 %3, label %5, label %4, !dbg !14218

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14219
  unreachable, !dbg !14219

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14212
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14209, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i64 0, metadata !14206, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()), !dbg !14211
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !14221
  call void @llvm.dbg.value(metadata i64 %6, metadata !14206, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14224
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14226
  br i1 %7, label %9, label %8, !dbg !14227

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14228
  unreachable, !dbg !14228

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %10, metadata !13901, metadata !DIExpression()) #20, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %10, metadata !13895, metadata !DIExpression()) #20, !dbg !14212
  call void @llvm.dbg.value(metadata i32 %10, metadata !14209, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14224
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14229
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !14231, !srcloc !13982
  call void @llvm.dbg.value(metadata i64 %6, metadata !14206, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14207, metadata !DIExpression()), !dbg !14211
  ret i64 %6, !dbg !14232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14233 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14235, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i64 0, metadata !14236, metadata !DIExpression()), !dbg !14239
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.284(%struct._timeout* noundef %0) #21, !dbg !14240
  br i1 %2, label %21, label %3, !dbg !14242

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #21, !dbg !14243
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14237, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata i64 0, metadata !14236, metadata !DIExpression()), !dbg !14239
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14245
  br i1 %5, label %16, label %6, !dbg !14247

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14237, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata i64 %8, metadata !14236, metadata !DIExpression()), !dbg !14239
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14248
  %10 = load i64, i64* %9, align 8, !dbg !14248
  %11 = add nsw i64 %10, %8, !dbg !14250
  call void @llvm.dbg.value(metadata i64 %11, metadata !14236, metadata !DIExpression()), !dbg !14239
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14251
  br i1 %12, label %16, label %13, !dbg !14253

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #21, !dbg !14254
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14237, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata i64 %11, metadata !14236, metadata !DIExpression()), !dbg !14239
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14245
  br i1 %15, label %16, label %6, !dbg !14247, !llvm.loop !14255

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14239
  call void @llvm.dbg.value(metadata i64 %17, metadata !14236, metadata !DIExpression()), !dbg !14239
  %18 = tail call fastcc i32 @elapsed.271() #21, !dbg !14257
  %19 = sext i32 %18 to i64, !dbg !14257
  %20 = sub nsw i64 %17, %19, !dbg !14258
  br label %21, !dbg !14259

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14239
  ret i64 %22, !dbg !14260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.284(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14261 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14265, metadata !DIExpression()), !dbg !14266
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14267
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.263(%struct._dnode* noundef %2) #21, !dbg !14268
  %4 = xor i1 %3, true, !dbg !14269
  ret i1 %4, !dbg !14270
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14271 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14273, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata i64 0, metadata !14274, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata i32 0, metadata !14275, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14280
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14282, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14280
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14285
  br i1 %3, label %5, label %4, !dbg !14286

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14287
  unreachable, !dbg !14287

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14280
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.value(metadata i64 0, metadata !14274, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()), !dbg !14279
  %6 = load i64, i64* @curr_tick, align 8, !dbg !14289
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !14292
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !14274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14278
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14293
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14295
  br i1 %8, label %10, label %9, !dbg !14296

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14297
  unreachable, !dbg !14297

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !14282
  call void @llvm.dbg.value(metadata i32 %11, metadata !13901, metadata !DIExpression()) #20, !dbg !14284
  call void @llvm.dbg.value(metadata i32 %11, metadata !13895, metadata !DIExpression()) #20, !dbg !14280
  call void @llvm.dbg.value(metadata i32 %11, metadata !14277, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !14274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14278
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14293
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14298
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !14300, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()), !dbg !14279
  %12 = add i64 %7, %6, !dbg !14301
  ret i64 %12, !dbg !14302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14303 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14305, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 0, metadata !14306, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14311
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14313, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14311
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14316
  br i1 %2, label %4, label %3, !dbg !14317

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14318
  unreachable, !dbg !14318

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14311
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14308, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata i32 -1, metadata !14305, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()), !dbg !14310
  %5 = tail call fastcc i32 @next_timeout() #21, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %5, metadata !14305, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14323
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14325
  br i1 %6, label %8, label %7, !dbg !14326

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14327
  unreachable, !dbg !14327

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !14313
  call void @llvm.dbg.value(metadata i32 %9, metadata !13901, metadata !DIExpression()) #20, !dbg !14315
  call void @llvm.dbg.value(metadata i32 %9, metadata !13895, metadata !DIExpression()) #20, !dbg !14311
  call void @llvm.dbg.value(metadata i32 %9, metadata !14308, metadata !DIExpression()), !dbg !14310
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14323
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14328
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !14330, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 %5, metadata !14305, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()), !dbg !14310
  ret i32 %5, !dbg !14331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14334, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i1 %1, metadata !14335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14344
  call void @llvm.dbg.value(metadata i32 0, metadata !14336, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14346
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14348, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14346
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14351
  br i1 %4, label %6, label %5, !dbg !14352

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14353
  unreachable, !dbg !14353

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14346
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14338, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14336, metadata !DIExpression()), !dbg !14345
  %7 = tail call fastcc i32 @next_timeout() #21, !dbg !14355
  call void @llvm.dbg.value(metadata i32 %7, metadata !14339, metadata !DIExpression()), !dbg !14356
  call void @llvm.dbg.value(metadata i1 undef, metadata !14342, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14356
  %8 = icmp slt i32 %7, 2, !dbg !14357
  call void @llvm.dbg.value(metadata i1 %8, metadata !14343, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14356
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !14358
  call void @llvm.dbg.value(metadata i1 %9, metadata !14342, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14356
  br i1 %10, label %14, label %11, !dbg !14358

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !14360
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !14360
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #23, !dbg !14362
  br label %14, !dbg !14363

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14364
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14366
  br i1 %15, label %17, label %16, !dbg !14367

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14368
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14368
  unreachable, !dbg !14368

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14348
  call void @llvm.dbg.value(metadata i32 %18, metadata !13901, metadata !DIExpression()) #20, !dbg !14350
  call void @llvm.dbg.value(metadata i32 %18, metadata !13895, metadata !DIExpression()) #20, !dbg !14346
  call void @llvm.dbg.value(metadata i32 %18, metadata !14338, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #20, !dbg !14371, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 1, metadata !14336, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14336, metadata !DIExpression()), !dbg !14345
  ret void, !dbg !14372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14377, metadata !DIExpression()), !dbg !14382
  tail call void @z_time_slice(i32 noundef %0) #23, !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14384
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14386, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14384
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14389
  br i1 %3, label %5, label %4, !dbg !14390

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14391
  unreachable, !dbg !14391

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()), !dbg !14382
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()), !dbg !14382
  %6 = tail call fastcc %struct._timeout* @first() #21, !dbg !14393
  %7 = icmp eq %struct._timeout* %6, null, !dbg !14394
  br i1 %7, label %37, label %8, !dbg !14395

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !14382
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !14396
  %14 = load i64, i64* %13, align 8, !dbg !14396
  %15 = sext i32 %11 to i64, !dbg !14397
  %16 = icmp sgt i64 %14, %15, !dbg !14398
  br i1 %16, label %35, label %17, !dbg !14399

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !14379, metadata !DIExpression()), !dbg !14400
  %18 = trunc i64 %14 to i32, !dbg !14401
  call void @llvm.dbg.value(metadata i32 %18, metadata !14381, metadata !DIExpression()), !dbg !14400
  %19 = sext i32 %18 to i64, !dbg !14402
  %20 = load i64, i64* @curr_tick, align 8, !dbg !14403
  %21 = add i64 %20, %19, !dbg !14403
  store i64 %21, i64* @curr_tick, align 8, !dbg !14403
  store i64 0, i64* %13, align 8, !dbg !14404
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #21, !dbg !14405
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14406
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14408
  br i1 %22, label %24, label %23, !dbg !14409

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14410
  unreachable, !dbg !14410

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !13962, metadata !DIExpression()) #20, !dbg !14406
  call void @llvm.dbg.value(metadata i32 %12, metadata !13976, metadata !DIExpression()) #20, !dbg !14411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #20, !dbg !14413, !srcloc !13982
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !14414
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !14414
  tail call void %26(%struct._timeout* noundef nonnull %9) #23, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14416
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14418, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14420
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14420
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14416
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14421
  br i1 %28, label %30, label %29, !dbg !14422

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14423
  unreachable, !dbg !14423

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14420
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14416
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()), !dbg !14382
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !14425
  %32 = sub nsw i32 %31, %18, !dbg !14425
  store i32 %32, i32* @announce_remaining, align 4, !dbg !14382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()), !dbg !14382
  %33 = tail call fastcc %struct._timeout* @first() #21, !dbg !14393
  %34 = icmp eq %struct._timeout* %33, null, !dbg !14394
  br i1 %34, label %37, label %8, !dbg !14395, !llvm.loop !14426

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !14428
  store i64 %36, i64* %13, align 8, !dbg !14428
  br label %41, !dbg !14431

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !14382
  %40 = sext i32 %39 to i64, !dbg !14432
  br label %41, !dbg !14432

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !14432
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !14433
  %45 = add i64 %44, %42, !dbg !14433
  store i64 %45, i64* @curr_tick, align 8, !dbg !14433
  store i32 0, i32* @announce_remaining, align 4, !dbg !14434
  %46 = tail call fastcc i32 @next_timeout() #21, !dbg !14435
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #23, !dbg !14436
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14437
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14439
  br i1 %47, label %49, label %48, !dbg !14440

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14441
  unreachable, !dbg !14441

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %50, metadata !13962, metadata !DIExpression()) #20, !dbg !14437
  call void @llvm.dbg.value(metadata i32 %50, metadata !13976, metadata !DIExpression()) #20, !dbg !14442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #20, !dbg !14444, !srcloc !13982
  ret void, !dbg !14445
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14446 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14448, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 0, metadata !14449, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13889, metadata !DIExpression()) #20, !dbg !14454
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14456, !srcloc !13904
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()) #20, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14454
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14459
  br i1 %2, label %4, label %3, !dbg !14460

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 148) #23, !dbg !14461
  unreachable, !dbg !14461

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()) #20, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13895, metadata !DIExpression()) #20, !dbg !14454
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata i64 0, metadata !14448, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()), !dbg !14453
  %5 = load i64, i64* @curr_tick, align 8, !dbg !14463
  %6 = tail call fastcc i32 @elapsed.271() #21, !dbg !14466
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !14448, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !13967, metadata !DIExpression()) #20, !dbg !14467
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14469
  br i1 %7, label %9, label %8, !dbg !14470

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #23, !dbg !14471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.269, i32 0, i32 0), i32 noundef 194) #23, !dbg !14471
  unreachable, !dbg !14471

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %10, metadata !13901, metadata !DIExpression()) #20, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %10, metadata !13895, metadata !DIExpression()) #20, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %10, metadata !14451, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !14448, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !14452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !14448, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()) #20, !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !13976, metadata !DIExpression()) #20, !dbg !14472
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !14474, !srcloc !13982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()), !dbg !14453
  %11 = sext i32 %6 to i64, !dbg !14466
  %12 = add i64 %5, %11, !dbg !14475
  ret i64 %12, !dbg !14476
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14477 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !14478
  %2 = trunc i64 %1 to i32, !dbg !14479
  ret i32 %2, !dbg !14480
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14481 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !14482
  ret i64 %1, !dbg !14483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14486, metadata !DIExpression()), !dbg !14493
  %2 = icmp eq i32 %0, 0, !dbg !14494
  br i1 %2, label %10, label %3, !dbg !14496

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !14497
  call void @llvm.dbg.value(metadata i32 %4, metadata !14487, metadata !DIExpression()), !dbg !14493
  %5 = mul i32 %0, 200, !dbg !14498
  call void @llvm.dbg.value(metadata i32 %5, metadata !14488, metadata !DIExpression()), !dbg !14493
  br label %6, !dbg !14499

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !14500
  call void @llvm.dbg.value(metadata i32 %7, metadata !14489, metadata !DIExpression()), !dbg !14501
  %8 = sub i32 %7, %4, !dbg !14502
  %9 = icmp ult i32 %8, %5, !dbg !14504
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14506 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #21, !dbg !14507
  ret i32 %1, !dbg !14508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14509 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #23, !dbg !14511
  ret i32 %1, !dbg !14512
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14513 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14517, metadata !DIExpression()), !dbg !14519
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14520

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #21, !dbg !14521
  br label %14, !dbg !14525

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14518, metadata !DIExpression()), !dbg !14519
  %6 = icmp slt i64 %2, -1, !dbg !14526
  br i1 %6, label %7, label %9, !dbg !14529

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14530
  br label %14, !dbg !14531

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #21, !dbg !14533
  %11 = icmp ugt i64 %2, 1, !dbg !14534
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14534
  %13 = add nsw i64 %10, %12, !dbg !14535
  br label %14, !dbg !14536

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14537
  ret i64 %15, !dbg !14538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14539 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.295, i32 0, i32 0)) #23, !dbg !14541
  ret void, !dbg !14542
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nounwind }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #23 = { nobuiltin nounwind optsize "no-builtins" }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1022, !2, !2289, !27, !276, !2291, !2305, !2307, !2344, !2346, !286, !713, !2348, !2359, !2406, !2408, !2436, !2464, !2507, !2579, !2624, !2652, !726, !835, !1033, !1312, !2657, !1574, !2659, !2662, !2739, !2753, !2765, !2890, !1604, !2893, !1610, !1885, !2911, !2018, !2131, !2913, !2250, !2916}
!llvm.ident = !{!2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918, !2918}
!llvm.module.flags = !{!2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "forks", scope: !27, file: !116, line: 149, type: !272, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !108, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !103)
!103 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!114, !25, !260, !263}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "fork_objs", scope: !27, file: !116, line: 146, type: !117, isLocal: false, isDefinition: true)
!116 = !DIFile(filename: "zephyr/samples/philosophers/src/phil_obj_abstract.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 960, elements: !258)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !142, !256, !257}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !118, file: !119, line: 2722, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !124)
!123 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !124, file: !123, line: 232, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !130)
!130 = !{!131, !137}
!131 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 38, baseType: !132, size: 32)
!132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 38, size: 32, elements: !133)
!133 = !{!134, !136}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !132, file: !128, line: 39, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !132, file: !128, line: 40, baseType: !135, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 42, baseType: !138, size: 32, offset: 32)
!138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 42, size: 32, elements: !139)
!139 = !{!140, !141}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !138, file: !128, line: 43, baseType: !135, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !128, line: 44, baseType: !135, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !118, file: !119, line: 2724, baseType: !143, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !196, !209, !210, !211, !223, !224, !229, !230, !251}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !144, file: !145, line: 247, baseType: !148, size: 384)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !149)
!149 = !{!150, !164, !166, !169, !170, !183, !184, !185}
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 60, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 60, size: 64, elements: !152)
!152 = !{!153, !155}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !151, file: !145, line: 61, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !151, file: !145, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !148, file: !145, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !148, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !148, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!170 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 90, baseType: !171, size: 16, offset: 112)
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 90, size: 16, elements: !172)
!172 = !{!173, !180}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !145, line: 91, baseType: !174, size: 16)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !171, file: !145, line: 91, size: 16, elements: !175)
!175 = !{!176, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !174, file: !145, line: 96, baseType: !177, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !178)
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !174, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !171, file: !145, line: 100, baseType: !181, size: 16)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !148, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !148, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !148, file: !145, line: 131, baseType: !186, size: 192, offset: 192)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !187)
!187 = !{!188, !189, !195}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !123, line: 245, baseType: !154, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !186, file: !123, line: 246, baseType: !190, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !186, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !144, file: !145, line: 250, baseType: !197, size: 288, offset: 384)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !199)
!198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!199 = !{!200, !201, !202, !203, !204, !205, !206, !207, !208}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !197, file: !198, line: 26, baseType: !110, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !197, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !197, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !197, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !197, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !197, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !197, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !197, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !197, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !144, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !144, file: !145, line: 256, baseType: !122, size: 64, offset: 704)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !144, file: !145, line: 271, baseType: !212, size: 128, offset: 768)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !213)
!213 = !{!214, !220, !221, !222}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !212, file: !145, line: 35, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !216, line: 46, baseType: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !108, !108, !108}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !212, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !212, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !212, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !144, file: !145, line: 274, baseType: !143, size: 32, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !227)
!226 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!227 = !{!228}
!228 = !DISubrange(count: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !144, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !144, file: !145, line: 325, baseType: !231, size: 32, offset: 1216)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !233)
!233 = !{!234, !245, !246}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !232, file: !119, line: 5074, baseType: !235, size: 96)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238, !241, !242}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !235, file: !236, line: 57, baseType: !239, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !236, line: 57, flags: DIFlagFwdDecl)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !235, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !235, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !244, line: 214, baseType: !32)
!244 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !232, file: !119, line: 5075, baseType: !122, size: 64, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !232, file: !119, line: 5076, baseType: !247, size: 32, offset: 160)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !249)
!248 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !247, file: !248, line: 52, baseType: !22, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !144, file: !145, line: 343, baseType: !252, size: 64, offset: 1248)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !253)
!253 = !{!254, !255}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !252, file: !198, line: 63, baseType: !110, size: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !252, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !118, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !118, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!258 = !{!259}
!259 = !DISubrange(count: 6)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !116, line: 160, type: !262, isLocal: true, isDefinition: true)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8064, elements: !258)
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "stacks", scope: !27, file: !116, line: 159, type: !265, isLocal: true, isDefinition: true, align: 64)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 98304, elements: !270)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !267, line: 47, size: 8, elements: !268)
!267 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!268 = !{!269}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !266, file: !267, line: 48, baseType: !226, size: 8)
!270 = !{!259, !271}
!271 = !DISubrange(count: 2048)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 192, elements: !258)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(name: "_char_out", scope: !276, file: !280, line: 54, type: !281, isLocal: false, isDefinition: true)
!276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, globals: !279, splitDebugInlining: false, nameTableKind: None)
!277 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!278 = !{!108, !109}
!279 = !{!274}
!280 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DISubroutineType(types: !283)
!283 = !{!109, !109}
!284 = !DIGlobalVariableExpression(var: !285, expr: !DIExpression())
!285 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !286, file: !698, line: 258, type: !699, isLocal: true, isDefinition: true, align: 32)
!286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !288, retainedTypes: !571, globals: !697, splitDebugInlining: false, nameTableKind: None)
!287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!288 = !{!289, !321, !331, !380, !386, !507, !542}
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !290, line: 54, baseType: !32, size: 32, elements: !291)
!290 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!291 = !{!292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320}
!292 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!293 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!294 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!295 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!296 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!297 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!298 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!299 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!300 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!301 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!302 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!303 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!304 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!305 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!306 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!307 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!308 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!309 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!310 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!311 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!312 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!313 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!314 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!315 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!316 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!317 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!318 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!319 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!320 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!321 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !290, line: 224, baseType: !32, size: 32, elements: !322)
!322 = !{!323, !324, !325, !326, !327, !328, !329, !330}
!323 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!324 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!325 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!326 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!327 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!328 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!329 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!330 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!331 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !290, line: 275, baseType: !32, size: 32, elements: !332)
!332 = !{!333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379}
!333 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!334 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!335 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!336 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!337 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!338 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!339 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!340 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!341 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!342 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!343 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!344 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!345 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!346 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!347 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!348 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!349 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!350 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!351 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!352 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!353 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!354 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!355 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!356 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!357 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!358 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!359 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!360 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!361 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!362 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!363 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!364 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!365 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!366 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!367 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!368 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!369 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!370 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!371 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!372 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!373 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!374 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!375 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!376 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!377 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!378 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!379 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!380 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !290, line: 327, baseType: !32, size: 32, elements: !381)
!381 = !{!382, !383, !384, !385}
!382 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!383 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!384 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!385 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !387, line: 76, baseType: !32, size: 32, elements: !388)
!387 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = !{!389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506}
!389 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!390 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!391 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!392 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!393 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!394 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!395 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!396 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!397 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!398 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!399 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!400 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!401 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!402 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!403 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!404 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!405 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!406 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!407 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!408 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!409 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!410 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!411 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!412 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!413 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!414 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!415 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!416 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!417 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!418 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!419 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!420 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!421 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!422 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!423 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!424 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!425 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!426 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!427 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!428 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!429 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!430 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!431 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!432 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!433 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!434 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!435 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!436 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!437 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!438 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!439 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!440 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!441 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!442 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!443 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!444 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!445 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!446 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!447 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!448 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!449 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!450 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!451 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!452 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!453 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!454 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!455 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!456 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!457 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!458 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!459 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!460 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!461 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!462 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!463 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!464 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!465 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!466 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!467 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!468 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!469 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!470 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!471 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!472 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!473 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!474 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!475 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!476 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!477 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!478 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!479 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!480 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!481 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!482 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!483 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!484 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!485 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!486 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!487 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!488 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!489 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!490 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!491 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!492 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!493 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!494 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!495 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!496 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!497 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!498 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!499 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!500 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!501 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!502 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!503 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!504 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!505 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!506 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !290, line: 237, baseType: !32, size: 32, elements: !508)
!508 = !{!509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541}
!509 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!510 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!511 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!512 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!513 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!514 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!515 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!516 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!517 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!518 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!519 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!520 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!521 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!522 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!523 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!524 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!525 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!526 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!527 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!528 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!529 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!530 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!531 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!532 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!533 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!534 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!535 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!536 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!537 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!538 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!539 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!540 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!541 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!542 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !387, line: 44, baseType: !32, size: 32, elements: !543)
!543 = !{!544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!544 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!545 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!546 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!547 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!548 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!549 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!550 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!551 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!552 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!553 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!554 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!555 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!556 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!557 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!558 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!559 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!560 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!561 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!562 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!563 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!564 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!565 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!566 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!567 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!568 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!569 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!570 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!571 = !{!572, !644, !685, !696, !110}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !574, line: 4575, baseType: !575)
!574 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 4532, size: 390144, elements: !576)
!576 = !{!577, !579, !580, !581, !582, !586, !596, !600, !610, !614}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !575, file: !574, line: 4533, baseType: !578, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !575, file: !574, line: 4534, baseType: !578, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !575, file: !574, line: 4535, baseType: !578, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !575, file: !574, line: 4536, baseType: !578, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !575, file: !574, line: 4537, baseType: !583, size: 16256, offset: 128)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 16256, elements: !584)
!584 = !{!585}
!585 = !DISubrange(count: 2032)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !575, file: !574, line: 4543, baseType: !587, size: 4224, offset: 16384)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 4224, elements: !594)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !574, line: 4538, size: 128, elements: !589)
!589 = !{!590, !591, !592, !593}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !588, file: !574, line: 4539, baseType: !578, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !588, file: !574, line: 4540, baseType: !578, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !588, file: !574, line: 4541, baseType: !578, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !588, file: !574, line: 4542, baseType: !578, size: 32, offset: 96)
!594 = !{!595}
!595 = !DISubrange(count: 33)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !575, file: !574, line: 4544, baseType: !597, size: 110464, offset: 20608)
!597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 110464, elements: !598)
!598 = !{!599}
!599 = !DISubrange(count: 13808)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !575, file: !574, line: 4550, baseType: !601, size: 24448, offset: 131072)
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !602, size: 24448, elements: !608)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !574, line: 4545, size: 128, elements: !603)
!603 = !{!604, !605, !606, !607}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !602, file: !574, line: 4546, baseType: !578, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !602, file: !574, line: 4547, baseType: !578, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !602, file: !574, line: 4548, baseType: !578, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !602, file: !574, line: 4549, baseType: !578, size: 32, offset: 96)
!608 = !{!609}
!609 = !DISubrange(count: 191)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !575, file: !574, line: 4551, baseType: !611, size: 106624, offset: 155520)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 106624, elements: !612)
!612 = !{!613}
!613 = !DISubrange(count: 13328)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !575, file: !574, line: 4574, baseType: !615, size: 128000, offset: 262144)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !616, size: 128000, elements: !642)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !574, line: 4552, size: 1024, elements: !617)
!617 = !{!618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !638, !639, !640, !641}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !616, file: !574, line: 4553, baseType: !578, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !616, file: !574, line: 4554, baseType: !578, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !616, file: !574, line: 4555, baseType: !578, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !616, file: !574, line: 4556, baseType: !578, size: 32, offset: 96)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !616, file: !574, line: 4557, baseType: !578, size: 32, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !616, file: !574, line: 4558, baseType: !578, size: 32, offset: 160)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !616, file: !574, line: 4559, baseType: !578, size: 32, offset: 192)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !616, file: !574, line: 4560, baseType: !578, size: 32, offset: 224)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !616, file: !574, line: 4561, baseType: !578, size: 32, offset: 256)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !616, file: !574, line: 4562, baseType: !578, size: 32, offset: 288)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !616, file: !574, line: 4563, baseType: !578, size: 32, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !616, file: !574, line: 4564, baseType: !578, size: 32, offset: 352)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !616, file: !574, line: 4565, baseType: !578, size: 32, offset: 384)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !616, file: !574, line: 4566, baseType: !578, size: 32, offset: 416)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !616, file: !574, line: 4567, baseType: !578, size: 32, offset: 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !616, file: !574, line: 4568, baseType: !578, size: 32, offset: 480)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !616, file: !574, line: 4569, baseType: !635, size: 384, offset: 512)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 384, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 48)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !616, file: !574, line: 4570, baseType: !578, size: 32, offset: 896)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !616, file: !574, line: 4571, baseType: !578, size: 32, offset: 928)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !616, file: !574, line: 4572, baseType: !578, size: 32, offset: 960)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !616, file: !574, line: 4573, baseType: !578, size: 32, offset: 992)
!642 = !{!643}
!643 = !DISubrange(count: 125)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !574, line: 38320, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 38303, size: 23040, elements: !647)
!647 = !{!648, !650, !652, !653, !654, !655, !659, !663, !667, !671, !675}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !646, file: !574, line: 38304, baseType: !649, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !578)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !646, file: !574, line: 38305, baseType: !651, size: 256, offset: 32)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 256, elements: !227)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !646, file: !574, line: 38306, baseType: !578, size: 32, offset: 288)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !646, file: !574, line: 38307, baseType: !578, size: 32, offset: 320)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !646, file: !574, line: 38308, baseType: !578, size: 32, offset: 352)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !646, file: !574, line: 38309, baseType: !656, size: 3712, offset: 384)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 3712, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 464)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !646, file: !574, line: 38310, baseType: !660, size: 864, offset: 4096)
!660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 864, elements: !661)
!661 = !{!662}
!662 = !DISubrange(count: 27)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !646, file: !574, line: 38311, baseType: !664, size: 3232, offset: 4960)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 3232, elements: !665)
!665 = !{!666}
!666 = !DISubrange(count: 404)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !646, file: !574, line: 38312, baseType: !668, size: 3776, offset: 8192)
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 3776, elements: !669)
!669 = !{!670}
!670 = !DISubrange(count: 118)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !646, file: !574, line: 38313, baseType: !672, size: 4416, offset: 11968)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 4416, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 552)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !646, file: !574, line: 38319, baseType: !676, size: 6656, offset: 16384)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 6656, elements: !683)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !574, line: 38314, size: 128, elements: !678)
!678 = !{!679, !680, !681, !682}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !677, file: !574, line: 38315, baseType: !578, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !677, file: !574, line: 38316, baseType: !578, size: 32, offset: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !677, file: !574, line: 38317, baseType: !578, size: 32, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !677, file: !574, line: 38318, baseType: !578, size: 32, offset: 96)
!683 = !{!684}
!684 = !DISubrange(count: 52)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !574, line: 43319, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 43313, size: 80, elements: !688)
!688 = !{!689, !691, !692, !694, !695}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !687, file: !574, line: 43314, baseType: !690, size: 16)
!690 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !181)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !687, file: !574, line: 43315, baseType: !690, size: 16, offset: 16)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !687, file: !574, line: 43316, baseType: !693, size: 16, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !687, file: !574, line: 43317, baseType: !690, size: 16, offset: 48)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !687, file: !574, line: 43318, baseType: !690, size: 16, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!697 = !{!284}
!698 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !702)
!701 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!702 = !{!703, !710}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !700, file: !701, line: 60, baseType: !704, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DISubroutineType(types: !706)
!706 = !{!109, !707}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !701, line: 48, flags: DIFlagFwdDecl)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !700, file: !701, line: 65, baseType: !707, size: 32, offset: 32)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "_kernel_thread_info_offsets", scope: !713, file: !718, line: 41, type: !721, isLocal: false, isDefinition: true)
!713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, globals: !715, splitDebugInlining: false, nameTableKind: None)
!714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!715 = !{!711, !716, !719}
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "_kernel_thread_info_num_offsets", scope: !713, file: !718, line: 140, type: !243, isLocal: false, isDefinition: true)
!718 = !DIFile(filename: "zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "_kernel_thread_info_size_t_size", scope: !713, file: !718, line: 145, type: !167, isLocal: false, isDefinition: true)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 448, elements: !722)
!722 = !{!723}
!723 = !DISubrange(count: 14)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !726, file: !826, line: 603, type: !828, isLocal: true, isDefinition: true, align: 32)
!726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !728, globals: !823, splitDebugInlining: false, nameTableKind: None)
!727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!728 = !{!108, !109, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !732, line: 336, size: 608, elements: !733)
!732 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !{!734, !763, !767, !771, !784, !789, !795, !801, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !731, file: !732, line: 365, baseType: !735, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = !DISubroutineType(types: !737)
!737 = !{!109, !738, !762}
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !742)
!741 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!742 = !{!743, !746, !747, !748, !755, !756}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !740, file: !741, line: 380, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !740, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !740, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !740, file: !741, line: 386, baseType: !749, size: 32, offset: 96)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !751)
!751 = !{!752, !753}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !750, file: !741, line: 359, baseType: !167, size: 8)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !750, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!754 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !740, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !740, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !741, line: 43, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !761)
!761 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !731, file: !732, line: 366, baseType: !764, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DISubroutineType(types: !766)
!766 = !{null, !738, !168}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !731, file: !732, line: 374, baseType: !768, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = !DISubroutineType(types: !770)
!770 = !{!109, !738}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !731, file: !732, line: 377, baseType: !772, size: 32, offset: 96)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!773 = !DISubroutineType(types: !774)
!774 = !{!109, !738, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !732, line: 122, size: 64, elements: !778)
!778 = !{!779, !780, !781, !782, !783}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !777, file: !732, line: 123, baseType: !110, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !777, file: !732, line: 124, baseType: !167, size: 8, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !777, file: !732, line: 125, baseType: !167, size: 8, offset: 40)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !777, file: !732, line: 126, baseType: !167, size: 8, offset: 48)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !777, file: !732, line: 127, baseType: !167, size: 8, offset: 56)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !731, file: !732, line: 379, baseType: !785, size: 32, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!109, !738, !788}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !731, file: !732, line: 384, baseType: !790, size: 32, offset: 160)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{!109, !738, !793, !109}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !731, file: !732, line: 393, baseType: !796, size: 32, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!109, !738, !799, !800}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !731, file: !732, line: 402, baseType: !802, size: 32, offset: 224)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !738}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !731, file: !732, line: 405, baseType: !802, size: 32, offset: 256)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !731, file: !732, line: 408, baseType: !768, size: 32, offset: 288)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !731, file: !732, line: 411, baseType: !802, size: 32, offset: 320)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !731, file: !732, line: 414, baseType: !802, size: 32, offset: 352)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !731, file: !732, line: 417, baseType: !768, size: 32, offset: 384)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !731, file: !732, line: 420, baseType: !768, size: 32, offset: 416)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !731, file: !732, line: 423, baseType: !802, size: 32, offset: 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !731, file: !732, line: 426, baseType: !802, size: 32, offset: 480)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !731, file: !732, line: 429, baseType: !768, size: 32, offset: 512)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !731, file: !732, line: 432, baseType: !768, size: 32, offset: 544)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !731, file: !732, line: 435, baseType: !816, size: 32, offset: 576)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{null, !738, !819, !108}
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !732, line: 142, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !738, !108}
!823 = !{!724, !824}
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !726, file: !826, line: 38, type: !827, isLocal: true, isDefinition: true)
!826 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !829, file: !701, line: 60, baseType: !768, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !829, file: !701, line: 65, baseType: !738, size: 32, offset: 32)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !835, file: !940, line: 318, type: !1017, isLocal: false, isDefinition: true)
!835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !837, retainedTypes: !854, globals: !937, splitDebugInlining: false, nameTableKind: None)
!836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!837 = !{!838, !844, !849}
!838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !839, line: 506, baseType: !32, size: 32, elements: !840)
!839 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!840 = !{!841, !842, !843}
!841 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!842 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!843 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !839, line: 512, baseType: !32, size: 32, elements: !845)
!845 = !{!846, !847, !848}
!846 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!847 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!848 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !850, line: 66, baseType: !32, size: 32, elements: !851)
!850 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !{!852, !853}
!852 = !DIEnumerator(name: "gpioPinClear", value: 0)
!853 = !DIEnumerator(name: "gpioPinSet", value: 1)
!854 = !{!855, !925, !930, !890, !844, !838, !935, !108, !696, !905, !936}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !839, line: 523, size: 288, elements: !858)
!858 = !{!859, !880, !886, !891, !895, !896, !897, !901, !921}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !857, file: !839, line: 524, baseType: !860, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DISubroutineType(types: !862)
!862 = !{!109, !863, !878, !879}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !866)
!866 = !{!867, !868, !869, !870, !876, !877}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !865, file: !741, line: 380, baseType: !744, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !865, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !865, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !865, file: !741, line: 386, baseType: !871, size: 32, offset: 96)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !873)
!873 = !{!874, !875}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !872, file: !741, line: 359, baseType: !167, size: 8)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !872, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !865, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !865, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !839, line: 237, baseType: !167)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !839, line: 257, baseType: !110)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !857, file: !839, line: 530, baseType: !881, size: 32, offset: 32)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!109, !863, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !839, line: 229, baseType: !110)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !857, file: !839, line: 532, baseType: !887, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!109, !863, !890, !885}
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !839, line: 216, baseType: !110)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !857, file: !839, line: 535, baseType: !892, size: 32, offset: 96)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DISubroutineType(types: !894)
!894 = !{!109, !863, !890}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !857, file: !839, line: 537, baseType: !892, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !857, file: !839, line: 539, baseType: !892, size: 32, offset: 160)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !857, file: !839, line: 541, baseType: !898, size: 32, offset: 192)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!109, !863, !878, !838, !844}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !857, file: !839, line: 544, baseType: !902, size: 32, offset: 224)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!109, !863, !905, !754}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !839, line: 478, size: 96, elements: !907)
!907 = !{!908, !915, !920}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !906, file: !839, line: 482, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !910, line: 33, baseType: !911)
!910 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !910, line: 29, size: 32, elements: !912)
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !911, file: !910, line: 30, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !906, file: !839, line: 485, baseType: !916, size: 32, offset: 32)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !839, line: 464, baseType: !917)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !863, !905, !890}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !906, file: !839, line: 493, baseType: !890, size: 32, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !857, file: !839, line: 547, baseType: !922, size: 32, offset: 256)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!110, !863}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !839, line: 428, size: 32, elements: !928)
!928 = !{!929}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !927, file: !839, line: 434, baseType: !890, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !839, line: 441, size: 32, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !932, file: !839, line: 447, baseType: !890, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!937 = !{!833, !938, !944, !946, !956, !968, !970, !1001, !1003, !1015}
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !835, file: !940, line: 318, type: !941, isLocal: false, isDefinition: true, align: 16)
!940 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 400, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 25)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !835, file: !940, line: 318, type: !864, isLocal: false, isDefinition: true, align: 32)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !835, file: !940, line: 318, type: !948, isLocal: true, isDefinition: true, align: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !950)
!950 = !{!951, !955}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !949, file: !701, line: 60, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!109, !863}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !949, file: !701, line: 65, baseType: !863, size: 32, offset: 32)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !835, file: !940, line: 318, type: !958, isLocal: true, isDefinition: true)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !940, line: 33, size: 96, elements: !959)
!959 = !{!960, !961}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !958, file: !940, line: 35, baseType: !932, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !958, file: !940, line: 37, baseType: !962, size: 64, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !910, line: 40, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !910, line: 35, size: 64, elements: !964)
!964 = !{!965, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !963, file: !910, line: 36, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !963, file: !910, line: 37, baseType: !966, size: 32, offset: 32)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !835, file: !940, line: 318, type: !872, isLocal: true, isDefinition: true, align: 8)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !835, file: !940, line: 318, type: !972, isLocal: true, isDefinition: true)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !940, line: 23, size: 128, elements: !974)
!974 = !{!975, !976, !989, !1000}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !973, file: !940, line: 25, baseType: !927, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !973, file: !940, line: 26, baseType: !977, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !574, line: 19729, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 19720, size: 256, elements: !980)
!980 = !{!981, !982, !983, !984, !985, !986, !987, !988}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !979, file: !574, line: 19721, baseType: !578, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !979, file: !574, line: 19722, baseType: !578, size: 32, offset: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !979, file: !574, line: 19723, baseType: !649, size: 32, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !979, file: !574, line: 19724, baseType: !578, size: 32, offset: 96)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !979, file: !574, line: 19725, baseType: !578, size: 32, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !979, file: !574, line: 19726, baseType: !578, size: 32, offset: 160)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !979, file: !574, line: 19727, baseType: !578, size: 32, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !979, file: !574, line: 19728, baseType: !578, size: 32, offset: 224)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !973, file: !940, line: 28, baseType: !990, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !993, line: 51, size: 128, elements: !994)
!993 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!994 = !{!995, !996, !997, !998, !999}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !992, file: !993, line: 52, baseType: !110, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !992, file: !993, line: 53, baseType: !110, size: 32, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !992, file: !993, line: 54, baseType: !110, size: 32, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !992, file: !993, line: 55, baseType: !167, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !992, file: !993, line: 56, baseType: !110, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !973, file: !940, line: 29, baseType: !167, size: 8, offset: 96)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !835, file: !940, line: 249, type: !856, isLocal: true, isDefinition: true)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1005, file: !940, line: 318, type: !1008, isLocal: true, isDefinition: true, align: 32)
!1005 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !940, file: !940, line: 318, type: !953, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !1006)
!1006 = !{!1007}
!1007 = !DILocalVariable(name: "port", arg: 1, scope: !1005, file: !940, line: 318, type: !863)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1009)
!1009 = !{!1010, !1012, !1013, !1014}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1008, file: !10, line: 55, baseType: !1011, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1008, file: !10, line: 57, baseType: !1011, size: 32, offset: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1008, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1008, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1005, file: !940, line: 318, type: !1008, isLocal: true, isDefinition: true, align: 32)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 2048, elements: !1018)
!1018 = !{!1019}
!1019 = !DISubrange(count: 16)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1022, file: !1027, line: 7, type: !1028, isLocal: false, isDefinition: true, align: 16)
!1022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1024, splitDebugInlining: false, nameTableKind: None)
!1023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1024 = !{!1020, !1025}
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1022, file: !1027, line: 12, type: !1028, isLocal: false, isDefinition: true, align: 16)
!1027 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 48, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 3)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1033, file: !1230, line: 339, type: !1228, isLocal: true, isDefinition: true)
!1033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1035, retainedTypes: !1121, globals: !1266, splitDebugInlining: false, nameTableKind: None)
!1034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1035 = !{!30, !1036, !1074, !1102, !1106, !1110, !1115}
!1036 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1037, line: 122, baseType: !32, size: 32, elements: !1038)
!1037 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1038 = !{!1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073}
!1039 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1040 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1041 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1042 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1043 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1044 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1045 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1046 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1047 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1048 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1049 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1050 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1051 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1052 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1053 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1054 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1055 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1056 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1057 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1058 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1059 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1060 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1061 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1062 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1063 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1064 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1065 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1066 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1067 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1068 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1069 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1070 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1071 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1072 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1073 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1074 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1037, line: 91, baseType: !32, size: 32, elements: !1075)
!1075 = !{!1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101}
!1076 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1077 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1078 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1079 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1080 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1081 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1082 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1083 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1084 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1085 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1086 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1087 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1088 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1089 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1090 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1091 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1092 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1093 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1094 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1095 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1096 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1097 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1098 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1099 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1100 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1101 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1037, line: 60, baseType: !32, size: 32, elements: !1103)
!1103 = !{!1104, !1105}
!1104 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1105 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1037, line: 67, baseType: !32, size: 32, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1109 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1037, line: 74, baseType: !32, size: 32, elements: !1111)
!1111 = !{!1112, !1113, !1114}
!1112 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1113 = !DIEnumerator(name: "uartParityEven", value: 256)
!1114 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1037, line: 82, baseType: !32, size: 32, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120}
!1117 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1118 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1119 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1120 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1121 = !{!108, !109, !1122, !1201, !1227, !1265, !110, !754, !167}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !732, line: 336, size: 608, elements: !1125)
!1125 = !{!1126, !1145, !1149, !1153, !1166, !1171, !1175, !1179, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1124, file: !732, line: 365, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!109, !1130, !762}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1143, !1144}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1132, file: !741, line: 380, baseType: !744, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1132, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1132, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1132, file: !741, line: 386, baseType: !1138, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1139, file: !741, line: 359, baseType: !167, size: 8)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1139, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1132, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1132, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1124, file: !732, line: 366, baseType: !1146, size: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !1130, !168}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1124, file: !732, line: 374, baseType: !1150, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!109, !1130}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1124, file: !732, line: 377, baseType: !1154, size: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!109, !1130, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !732, line: 122, size: 64, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1159, file: !732, line: 123, baseType: !110, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1159, file: !732, line: 124, baseType: !167, size: 8, offset: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1159, file: !732, line: 125, baseType: !167, size: 8, offset: 40)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1159, file: !732, line: 126, baseType: !167, size: 8, offset: 48)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1159, file: !732, line: 127, baseType: !167, size: 8, offset: 56)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1124, file: !732, line: 379, baseType: !1167, size: 32, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!109, !1130, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1124, file: !732, line: 384, baseType: !1172, size: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!109, !1130, !793, !109}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1124, file: !732, line: 393, baseType: !1176, size: 32, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!109, !1130, !799, !800}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1124, file: !732, line: 402, baseType: !1180, size: 32, offset: 224)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1130}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1124, file: !732, line: 405, baseType: !1180, size: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1124, file: !732, line: 408, baseType: !1150, size: 32, offset: 288)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1124, file: !732, line: 411, baseType: !1180, size: 32, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1124, file: !732, line: 414, baseType: !1180, size: 32, offset: 352)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1124, file: !732, line: 417, baseType: !1150, size: 32, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1124, file: !732, line: 420, baseType: !1150, size: 32, offset: 416)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1124, file: !732, line: 423, baseType: !1180, size: 32, offset: 448)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1124, file: !732, line: 426, baseType: !1180, size: 32, offset: 480)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1124, file: !732, line: 429, baseType: !1150, size: 32, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1124, file: !732, line: 432, baseType: !1150, size: 32, offset: 544)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1124, file: !732, line: 435, baseType: !1194, size: 32, offset: 576)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{null, !1130, !1197, !108}
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !732, line: 142, baseType: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{null, !1130, !108}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !574, line: 41342, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 41322, size: 1504, elements: !1204)
!1204 = !{!1205, !1206, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1203, file: !574, line: 41323, baseType: !649, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1203, file: !574, line: 41324, baseType: !1207, size: 480, offset: 32)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 480, elements: !1208)
!1208 = !{!1209}
!1209 = !DISubrange(count: 60)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1203, file: !574, line: 41325, baseType: !578, size: 32, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1203, file: !574, line: 41326, baseType: !1207, size: 480, offset: 544)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1203, file: !574, line: 41327, baseType: !578, size: 32, offset: 1024)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1203, file: !574, line: 41328, baseType: !578, size: 32, offset: 1056)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1203, file: !574, line: 41329, baseType: !578, size: 32, offset: 1088)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1203, file: !574, line: 41330, baseType: !578, size: 32, offset: 1120)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1203, file: !574, line: 41331, baseType: !578, size: 32, offset: 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1203, file: !574, line: 41332, baseType: !578, size: 32, offset: 1184)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1203, file: !574, line: 41333, baseType: !578, size: 32, offset: 1216)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1203, file: !574, line: 41334, baseType: !578, size: 32, offset: 1248)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1203, file: !574, line: 41335, baseType: !578, size: 32, offset: 1280)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1203, file: !574, line: 41336, baseType: !578, size: 32, offset: 1312)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1203, file: !574, line: 41337, baseType: !578, size: 32, offset: 1344)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1203, file: !574, line: 41338, baseType: !649, size: 32, offset: 1376)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1203, file: !574, line: 41339, baseType: !578, size: 32, offset: 1408)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1203, file: !574, line: 41340, baseType: !578, size: 32, offset: 1440)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1203, file: !574, line: 41341, baseType: !578, size: 32, offset: 1472)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1230, line: 29, size: 160, elements: !1231)
!1230 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1231 = !{!1232, !1233, !1234, !1235, !1264}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1229, file: !1230, line: 30, baseType: !1201, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1229, file: !1230, line: 31, baseType: !110, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1229, file: !1230, line: 32, baseType: !167, size: 8, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1229, file: !1230, line: 33, baseType: !1236, size: 32, offset: 96)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1239, line: 60, size: 64, elements: !1240)
!1239 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1240 = !{!1241, !1263}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1238, file: !1239, line: 69, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1239, line: 50, size: 64, elements: !1245)
!1245 = !{!1246, !1261, !1262}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1244, file: !1239, line: 52, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !993, line: 64, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !993, line: 59, size: 160, elements: !1251)
!1251 = !{!1252, !1260}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1250, file: !993, line: 60, baseType: !1253, size: 128)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !993, line: 51, size: 128, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1253, file: !993, line: 52, baseType: !110, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1253, file: !993, line: 53, baseType: !110, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1253, file: !993, line: 54, baseType: !110, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1253, file: !993, line: 55, baseType: !167, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1253, file: !993, line: 56, baseType: !110, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1250, file: !993, line: 61, baseType: !110, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1244, file: !1239, line: 54, baseType: !167, size: 8, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1244, file: !1239, line: 56, baseType: !167, size: 8, offset: 40)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1238, file: !1239, line: 71, baseType: !167, size: 8, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1229, file: !1230, line: 35, baseType: !1180, size: 32, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!1266 = !{!1267, !1270, !1272, !1279, !1285, !1287, !1031, !1289, !1291, !1296, !1299}
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1269, isLocal: false, isDefinition: true, align: 16)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 96, elements: !258)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1131, isLocal: false, isDefinition: true, align: 32)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1274, isLocal: true, isDefinition: true, align: 32)
!1274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !1276)
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1275, file: !701, line: 60, baseType: !1150, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1275, file: !701, line: 65, baseType: !1130, size: 32, offset: 32)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1033, file: !1230, line: 339, type: !1281, isLocal: true, isDefinition: true)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1230, line: 39, size: 64, elements: !1282)
!1282 = !{!1283, !1284}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1281, file: !1230, line: 41, baseType: !1197, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1281, file: !1230, line: 42, baseType: !108, size: 32, offset: 32)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1139, isLocal: true, isDefinition: true, align: 8)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1033, file: !1230, line: 270, type: !1123, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1237, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1293, isLocal: true, isDefinition: true)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1243, size: 64, elements: !1294)
!1294 = !{!1295}
!1295 = !DISubrange(count: 1)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1033, file: !1230, line: 339, type: !1298, isLocal: true, isDefinition: true)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 320, elements: !162)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1301, file: !1230, line: 339, type: !1304, isLocal: true, isDefinition: true, align: 32)
!1301 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1230, file: !1230, line: 339, type: !1181, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !1302)
!1302 = !{!1303}
!1303 = !DILocalVariable(name: "dev", arg: 1, scope: !1301, file: !1230, line: 339, type: !1130)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1305)
!1305 = !{!1306, !1307, !1308, !1309}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1304, file: !10, line: 55, baseType: !1011, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1304, file: !10, line: 57, baseType: !1011, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1304, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1304, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1312, file: !1537, line: 65, type: !578, isLocal: true, isDefinition: true)
!1312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1314, retainedTypes: !1455, globals: !1534, splitDebugInlining: false, nameTableKind: None)
!1313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1314 = !{!1315}
!1315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !574, line: 103, baseType: !109, size: 32, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454}
!1317 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1318 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1319 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1320 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1321 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1322 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1323 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1324 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1325 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1326 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1327 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1328 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1329 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1330 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1331 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1332 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1333 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1334 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1335 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1336 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1337 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1338 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1339 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1340 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1341 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1342 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1343 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1344 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1345 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1346 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1347 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1348 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1349 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1350 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1351 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1352 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1353 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1354 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1355 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1356 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1357 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1358 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1359 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1360 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1361 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1362 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1363 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1364 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1365 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1366 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1367 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1368 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1369 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1370 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1371 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1372 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1373 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1374 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1375 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1376 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1377 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1378 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1379 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1380 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1381 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1382 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1383 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1384 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1385 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1386 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1387 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1388 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1389 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1390 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1391 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1392 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1393 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1394 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1395 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1396 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1397 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1398 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1399 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1400 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1401 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1402 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1403 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1404 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1405 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1406 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1407 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1408 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1409 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1410 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1411 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1412 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1413 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1414 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1415 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1416 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1417 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1418 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1419 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1420 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1421 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1422 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1423 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1424 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1425 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1426 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1427 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1428 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1429 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1430 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1431 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1432 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1433 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1434 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1435 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1436 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1437 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1438 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1439 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1440 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1441 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1442 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1443 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1444 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1445 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1446 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1447 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1448 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1449 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1450 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1451 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1452 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1453 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1454 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1455 = !{!104, !1456, !1011, !167, !110, !1465, !1498}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1458, line: 770, baseType: !1459)
!1458 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 764, size: 128, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1459, file: !1458, line: 766, baseType: !578, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1459, file: !1458, line: 767, baseType: !578, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1459, file: !1458, line: 768, baseType: !578, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1459, file: !1458, line: 769, baseType: !649, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1458, line: 426, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 411, size: 28704, elements: !1468)
!1468 = !{!1469, !1473, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1488, !1493, !1497}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1467, file: !1458, line: 413, baseType: !1470, size: 256)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 256, elements: !1471)
!1471 = !{!1472}
!1472 = !DISubrange(count: 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1467, file: !1458, line: 414, baseType: !1474, size: 768, offset: 256)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1475)
!1475 = !{!1476}
!1476 = !DISubrange(count: 24)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1467, file: !1458, line: 415, baseType: !1470, size: 256, offset: 1024)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1467, file: !1458, line: 416, baseType: !1474, size: 768, offset: 1280)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1467, file: !1458, line: 417, baseType: !1470, size: 256, offset: 2048)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1467, file: !1458, line: 418, baseType: !1474, size: 768, offset: 2304)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1467, file: !1458, line: 419, baseType: !1470, size: 256, offset: 3072)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1467, file: !1458, line: 420, baseType: !1474, size: 768, offset: 3328)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1467, file: !1458, line: 421, baseType: !1470, size: 256, offset: 4096)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1467, file: !1458, line: 422, baseType: !1485, size: 1792, offset: 4352)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1486)
!1486 = !{!1487}
!1487 = !DISubrange(count: 56)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1467, file: !1458, line: 423, baseType: !1489, size: 1920, offset: 6144)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1490, size: 1920, elements: !1491)
!1490 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1491 = !{!1492}
!1492 = !DISubrange(count: 240)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1467, file: !1458, line: 424, baseType: !1494, size: 20608, offset: 8064)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1495)
!1495 = !{!1496}
!1496 = !DISubrange(count: 644)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1467, file: !1458, line: 425, baseType: !578, size: 32, offset: 28672)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1521, !1522, !1523, !1527, !1531, !1533}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1500, file: !1458, line: 447, baseType: !649, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1500, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1500, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1500, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1500, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1500, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1500, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1490, size: 96, elements: !1510)
!1510 = !{!1511}
!1511 = !DISubrange(count: 12)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1500, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1500, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1500, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1500, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1500, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1500, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1500, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1500, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 64, elements: !162)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1500, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1500, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1500, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 128, elements: !1525)
!1525 = !{!1526}
!1526 = !DISubrange(count: 4)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1500, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 160, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 5)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1500, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1529)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1500, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!1534 = !{!1535, !1561, !1566, !1568, !1570, !1310}
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1312, file: !1537, line: 285, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1537 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !1540)
!1540 = !{!1541, !1560}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1539, file: !701, line: 60, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!109, !1545}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552, !1558, !1559}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1547, file: !741, line: 380, baseType: !744, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1547, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1547, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1547, file: !741, line: 386, baseType: !1553, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !1555)
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1554, file: !741, line: 359, baseType: !167, size: 8)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1554, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1547, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1547, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1539, file: !701, line: 65, baseType: !1545, size: 32, offset: 32)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "lock", scope: !1312, file: !1537, line: 34, type: !1563, isLocal: true, isDefinition: true)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !1564)
!1564 = !{!1565}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1563, file: !248, line: 52, baseType: !22, size: 32)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "last_load", scope: !1312, file: !1537, line: 36, type: !110, isLocal: true, isDefinition: true)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1312, file: !1537, line: 48, type: !110, isLocal: true, isDefinition: true)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1312, file: !1537, line: 54, type: !110, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1574, file: !1578, line: 69, type: !1579, isLocal: true, isDefinition: true, align: 32)
!1574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1576, globals: !1577, splitDebugInlining: false, nameTableKind: None)
!1575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1576 = !{!696, !22}
!1577 = !{!1572}
!1578 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !1581)
!1581 = !{!1582, !1601}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1580, file: !701, line: 60, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!109, !1586}
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1599, !1600}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1588, file: !741, line: 380, baseType: !744, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1588, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1588, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1588, file: !741, line: 386, baseType: !1594, size: 32, offset: 96)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1595, file: !741, line: 359, baseType: !167, size: 8)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1595, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1588, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1588, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1580, file: !701, line: 65, baseType: !1586, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1604, file: !1607, line: 23, type: !800, isLocal: false, isDefinition: true)
!1604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, globals: !1606, splitDebugInlining: false, nameTableKind: None)
!1605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1606 = !{!1602}
!1607 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1610, file: !1614, line: 86, type: !1881, isLocal: false, isDefinition: true, align: 64)
!1610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1611, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1612, retainedTypes: !1621, globals: !1694, splitDebugInlining: false, nameTableKind: None)
!1611 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1612 = !{!1613, !30, !1315}
!1613 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1614, line: 63, baseType: !32, size: 32, elements: !1615)
!1614 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !{!1616, !1617, !1618, !1619, !1620}
!1616 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1617 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1618 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1619 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1620 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1621 = !{!243, !108, !109, !1622, !936, !110, !1652, !1011, !167, !1677}
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1625, line: 51, size: 64, elements: !1626)
!1625 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1626 = !{!1627, !1647}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1624, file: !1625, line: 52, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1625, line: 38, baseType: !1629)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!109, !1632, !799, !181}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1645, !1646}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1634, file: !741, line: 380, baseType: !744, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1634, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1634, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1634, file: !741, line: 386, baseType: !1640, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1641, file: !741, line: 359, baseType: !167, size: 8)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1641, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1634, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1634, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1624, file: !1625, line: 53, baseType: !1648, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1625, line: 47, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!109, !1632, !799, !181, !110}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1654, file: !1458, line: 447, baseType: !649, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1654, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1654, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1654, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1654, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1654, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1654, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1654, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1654, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1654, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1654, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1654, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1654, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1654, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1654, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1654, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1654, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1654, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1654, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1654, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1654, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1458, line: 426, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 411, size: 28704, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1679, file: !1458, line: 413, baseType: !1470, size: 256)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1679, file: !1458, line: 414, baseType: !1474, size: 768, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1679, file: !1458, line: 415, baseType: !1470, size: 256, offset: 1024)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1679, file: !1458, line: 416, baseType: !1474, size: 768, offset: 1280)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1679, file: !1458, line: 417, baseType: !1470, size: 256, offset: 2048)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1679, file: !1458, line: 418, baseType: !1474, size: 768, offset: 2304)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1679, file: !1458, line: 419, baseType: !1470, size: 256, offset: 3072)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1679, file: !1458, line: 420, baseType: !1474, size: 768, offset: 3328)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1679, file: !1458, line: 421, baseType: !1470, size: 256, offset: 4096)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1679, file: !1458, line: 422, baseType: !1485, size: 1792, offset: 4352)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1679, file: !1458, line: 423, baseType: !1489, size: 1920, offset: 6144)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1679, file: !1458, line: 424, baseType: !1494, size: 20608, offset: 8064)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1679, file: !1458, line: 425, baseType: !578, size: 32, offset: 28672)
!1694 = !{!1695, !1838, !1846, !1848, !1608, !1851, !1853, !1858}
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "_kernel", scope: !1610, file: !1614, line: 40, type: !1697, isLocal: false, isDefinition: true)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !123, line: 158, size: 384, elements: !1698)
!1698 = !{!1699, !1818, !1837}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1697, file: !123, line: 159, baseType: !1700, size: 192)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 192, elements: !1294)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !123, line: 100, size: 192, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1811, !1812, !1813, !1814}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1701, file: !123, line: 102, baseType: !110, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1701, file: !123, line: 105, baseType: !936, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1701, file: !123, line: 108, baseType: !1706, size: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !1708)
!1708 = !{!1709, !1767, !1779, !1780, !1781, !1788, !1789, !1790, !1791, !1806}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1707, file: !145, line: 247, baseType: !1710, size: 384)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1711)
!1711 = !{!1712, !1736, !1743, !1744, !1745, !1754, !1755, !1756}
!1712 = !DIDerivedType(tag: DW_TAG_member, scope: !1710, file: !145, line: 60, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1710, file: !145, line: 60, size: 64, elements: !1714)
!1714 = !{!1715, !1730}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1713, file: !145, line: 61, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1718)
!1718 = !{!1719, !1725}
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !128, line: 38, baseType: !1720, size: 32)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !128, line: 38, size: 32, elements: !1721)
!1721 = !{!1722, !1724}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1720, file: !128, line: 39, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1720, file: !128, line: 40, baseType: !1723, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !128, line: 42, baseType: !1726, size: 32, offset: 32)
!1726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !128, line: 42, size: 32, elements: !1727)
!1727 = !{!1728, !1729}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1726, file: !128, line: 43, baseType: !1723, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1726, file: !128, line: 44, baseType: !1723, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1713, file: !145, line: 62, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !1732)
!1732 = !{!1733}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1731, file: !157, line: 50, baseType: !1734, size: 64)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 64, elements: !162)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1710, file: !145, line: 68, baseType: !1737, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !1740)
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1739, file: !123, line: 232, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1717)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1710, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1710, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!1745 = !DIDerivedType(tag: DW_TAG_member, scope: !1710, file: !145, line: 90, baseType: !1746, size: 16, offset: 112)
!1746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1710, file: !145, line: 90, size: 16, elements: !1747)
!1747 = !{!1748, !1753}
!1748 = !DIDerivedType(tag: DW_TAG_member, scope: !1746, file: !145, line: 91, baseType: !1749, size: 16)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1746, file: !145, line: 91, size: 16, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1749, file: !145, line: 96, baseType: !177, size: 8)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1749, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1746, file: !145, line: 100, baseType: !181, size: 16)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1710, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1710, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1710, file: !145, line: 131, baseType: !1757, size: 192, offset: 192)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !1758)
!1758 = !{!1759, !1760, !1766}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1757, file: !123, line: 245, baseType: !1716, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1757, file: !123, line: 246, baseType: !1761, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{null, !1765}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1757, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1707, file: !145, line: 250, baseType: !1768, size: 288, offset: 384)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1768, file: !198, line: 26, baseType: !110, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1768, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1768, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1768, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1768, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1768, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1768, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1768, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1768, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1707, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1707, file: !145, line: 256, baseType: !1738, size: 64, offset: 704)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1707, file: !145, line: 271, baseType: !1782, size: 128, offset: 768)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !1782, file: !145, line: 35, baseType: !215, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !1782, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !1782, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !1782, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1707, file: !145, line: 274, baseType: !1706, size: 32, offset: 896)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1707, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1707, file: !145, line: 325, baseType: !1792, size: 32, offset: 1216)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !1794)
!1794 = !{!1795, !1801, !1802}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1793, file: !119, line: 5074, baseType: !1796, size: 96)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !1797)
!1797 = !{!1798, !1799, !1800}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1796, file: !236, line: 57, baseType: !239, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1796, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1796, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1793, file: !119, line: 5075, baseType: !1738, size: 64, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1793, file: !119, line: 5076, baseType: !1803, size: 32, offset: 160)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !1804)
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1803, file: !248, line: 52, baseType: !22, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1707, file: !145, line: 343, baseType: !1807, size: 64, offset: 1248)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1807, file: !198, line: 63, baseType: !110, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1807, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1701, file: !123, line: 111, baseType: !1706, size: 32, offset: 96)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1701, file: !123, line: 124, baseType: !109, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1701, file: !123, line: 127, baseType: !167, size: 8, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1701, file: !123, line: 153, baseType: !1815, offset: 168)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1816, line: 33, elements: !1817)
!1816 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1817 = !{}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1697, file: !123, line: 170, baseType: !1819, size: 160, offset: 192)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !1820)
!1820 = !{!1821, !1822}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1819, file: !123, line: 86, baseType: !1706, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1819, file: !123, line: 92, baseType: !1823, size: 128, offset: 32)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !1824, line: 37, size: 128, elements: !1825)
!1824 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1825 = !{!1826, !1836}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !1823, file: !1824, line: 38, baseType: !1827, size: 96)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !1828)
!1828 = !{!1829, !1830, !1835}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1827, file: !157, line: 84, baseType: !1735, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !1827, file: !157, line: 85, baseType: !1831, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!754, !1735, !1735}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !1827, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !1823, file: !1824, line: 39, baseType: !109, size: 32, offset: 96)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1697, file: !123, line: 188, baseType: !1706, size: 32, offset: 352)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1610, file: !1614, line: 43, type: !1840, isLocal: false, isDefinition: true, align: 64)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 8192, elements: !1844)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !267, line: 47, size: 8, elements: !1842)
!1842 = !{!1843}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !267, line: 48, baseType: !226, size: 8)
!1844 = !{!1845}
!1845 = !DISubrange(count: 1024)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1610, file: !1614, line: 44, type: !1707, isLocal: false, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1610, file: !1614, line: 48, type: !1850, isLocal: false, isDefinition: true)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1707, size: 1344, elements: !1294)
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression())
!1852 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1610, file: !1614, line: 217, type: !754, isLocal: false, isDefinition: true)
!1853 = !DIGlobalVariableExpression(var: !1854, expr: !DIExpression())
!1854 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1610, file: !1614, line: 50, type: !1855, isLocal: true, isDefinition: true, align: 64)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 2560, elements: !1856)
!1856 = !{!1295, !1857}
!1857 = !DISubrange(count: 320)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "levels", scope: !1860, file: !1614, line: 232, type: !1880, isLocal: true, isDefinition: true)
!1860 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1614, file: !1614, line: 230, type: !1861, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !1863)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !1613}
!1863 = !{!1864, !1865, !1875, !1879}
!1864 = !DILocalVariable(name: "level", arg: 1, scope: !1860, file: !1614, line: 230, type: !1613)
!1865 = !DILocalVariable(name: "entry", scope: !1860, file: !1614, line: 244, type: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !701, line: 51, size: 64, elements: !1869)
!1869 = !{!1870, !1874}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1868, file: !701, line: 60, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!109, !1632}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1868, file: !701, line: 65, baseType: !1632, size: 32, offset: 32)
!1875 = !DILocalVariable(name: "dev", scope: !1876, file: !1614, line: 247, type: !1632)
!1876 = distinct !DILexicalBlock(scope: !1877, file: !1614, line: 246, column: 64)
!1877 = distinct !DILexicalBlock(scope: !1878, file: !1614, line: 246, column: 2)
!1878 = distinct !DILexicalBlock(scope: !1860, file: !1614, line: 246, column: 2)
!1879 = !DILocalVariable(name: "rc", scope: !1876, file: !1614, line: 248, type: !109)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1866, size: 192, elements: !258)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 16384, elements: !1882)
!1882 = !{!1295, !271}
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "z_thread_monitor_lock", scope: !1885, file: !1907, line: 39, type: !1994, isLocal: true, isDefinition: true)
!1885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1887, globals: !1903, splitDebugInlining: false, nameTableKind: None)
!1886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!1887 = !{!108, !744, !104, !167, !22, !109, !1888, !24, !243, !936, !110, !111}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1891)
!1891 = !{!1892, !1898}
!1892 = !DIDerivedType(tag: DW_TAG_member, scope: !1890, file: !128, line: 38, baseType: !1893, size: 32)
!1893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1890, file: !128, line: 38, size: 32, elements: !1894)
!1894 = !{!1895, !1897}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1893, file: !128, line: 39, baseType: !1896, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1893, file: !128, line: 40, baseType: !1896, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, scope: !1890, file: !128, line: 42, baseType: !1899, size: 32, offset: 32)
!1899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1890, file: !128, line: 42, size: 32, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1899, file: !128, line: 43, baseType: !1896, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1899, file: !128, line: 44, baseType: !1896, size: 32)
!1903 = !{!1904, !2012, !1883}
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "states_str", scope: !1906, file: !1907, line: 276, type: !2011, isLocal: true, isDefinition: true)
!1906 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1907, file: !1907, line: 271, type: !1908, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !2002)
!1907 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!744, !1910, !936, !243}
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !1911)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !1913)
!1913 = !{!1914, !1958, !1970, !1971, !1972, !1979, !1980, !1981, !1982, !1997}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1912, file: !145, line: 247, baseType: !1915, size: 384)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1916)
!1916 = !{!1917, !1927, !1934, !1935, !1936, !1945, !1946, !1947}
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1915, file: !145, line: 60, baseType: !1918, size: 64)
!1918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1915, file: !145, line: 60, size: 64, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1918, file: !145, line: 61, baseType: !1889, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1918, file: !145, line: 62, baseType: !1922, size: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !1923)
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1922, file: !157, line: 50, baseType: !1925, size: 64)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 64, elements: !162)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1915, file: !145, line: 68, baseType: !1928, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !1930)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !1931)
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1930, file: !123, line: 232, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1890)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1915, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1915, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1915, file: !145, line: 90, baseType: !1937, size: 16, offset: 112)
!1937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1915, file: !145, line: 90, size: 16, elements: !1938)
!1938 = !{!1939, !1944}
!1939 = !DIDerivedType(tag: DW_TAG_member, scope: !1937, file: !145, line: 91, baseType: !1940, size: 16)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1937, file: !145, line: 91, size: 16, elements: !1941)
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1940, file: !145, line: 96, baseType: !177, size: 8)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1940, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1937, file: !145, line: 100, baseType: !181, size: 16)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1915, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1915, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1915, file: !145, line: 131, baseType: !1948, size: 192, offset: 192)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1957}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1948, file: !123, line: 245, baseType: !1889, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1948, file: !123, line: 246, baseType: !1952, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !1953)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1956}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1948, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1912, file: !145, line: 250, baseType: !1959, size: 288, offset: 384)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !1960)
!1960 = !{!1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1959, file: !198, line: 26, baseType: !110, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1959, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1959, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1959, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1959, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1959, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1959, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1959, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1959, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1912, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1912, file: !145, line: 256, baseType: !1929, size: 64, offset: 704)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1912, file: !145, line: 271, baseType: !1973, size: 128, offset: 768)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !1973, file: !145, line: 35, baseType: !215, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !1973, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !1973, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !1973, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1912, file: !145, line: 274, baseType: !1911, size: 32, offset: 896)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1912, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1912, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1912, file: !145, line: 325, baseType: !1983, size: 32, offset: 1216)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !1985)
!1985 = !{!1986, !1992, !1993}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1984, file: !119, line: 5074, baseType: !1987, size: 96)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !1988)
!1988 = !{!1989, !1990, !1991}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1987, file: !236, line: 57, baseType: !239, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1987, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1987, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1984, file: !119, line: 5075, baseType: !1929, size: 64, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1984, file: !119, line: 5076, baseType: !1994, size: 32, offset: 160)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !1995)
!1995 = !{!1996}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1994, file: !248, line: 52, baseType: !22, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1912, file: !145, line: 343, baseType: !1998, size: 64, offset: 1248)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !1999)
!1999 = !{!2000, !2001}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1998, file: !198, line: 63, baseType: !110, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1998, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009}
!2003 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1906, file: !1907, line: 271, type: !1910)
!2004 = !DILocalVariable(name: "buf", arg: 2, scope: !1906, file: !1907, line: 271, type: !936)
!2005 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1906, file: !1907, line: 271, type: !243)
!2006 = !DILocalVariable(name: "off", scope: !1906, file: !1907, line: 273, type: !243)
!2007 = !DILocalVariable(name: "bit", scope: !1906, file: !1907, line: 274, type: !167)
!2008 = !DILocalVariable(name: "thread_state", scope: !1906, file: !1907, line: 275, type: !167)
!2009 = !DILocalVariable(name: "index", scope: !2010, file: !1907, line: 293, type: !167)
!2010 = distinct !DILexicalBlock(scope: !1906, file: !1907, line: 293, column: 2)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 256, elements: !1471)
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "states_sz", scope: !1906, file: !1907, line: 279, type: !2014, isLocal: true, isDefinition: true)
!2014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2015, size: 256, elements: !1471)
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !243)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "lock", scope: !2018, file: !2128, line: 47, type: !2119, isLocal: true, isDefinition: true)
!2018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2020, globals: !2127, splitDebugInlining: false, nameTableKind: None)
!2019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2020 = !{!754, !108, !109, !2021, !2036}
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2024)
!2024 = !{!2025, !2031}
!2025 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !128, line: 38, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !128, line: 38, size: 32, elements: !2027)
!2027 = !{!2028, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2026, file: !128, line: 39, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2026, file: !128, line: 40, baseType: !2029, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !128, line: 42, baseType: !2032, size: 32, offset: 32)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !128, line: 42, size: 32, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2032, file: !128, line: 43, baseType: !2029, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2032, file: !128, line: 44, baseType: !2029, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !2038)
!2038 = !{!2039, !2083, !2095, !2096, !2097, !2104, !2105, !2106, !2107, !2122}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2037, file: !145, line: 247, baseType: !2040, size: 384)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2041)
!2041 = !{!2042, !2052, !2059, !2060, !2061, !2070, !2071, !2072}
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !145, line: 60, baseType: !2043, size: 64)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2040, file: !145, line: 60, size: 64, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2043, file: !145, line: 61, baseType: !2022, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2043, file: !145, line: 62, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2048)
!2048 = !{!2049}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2047, file: !157, line: 50, baseType: !2050, size: 64)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2051, size: 64, elements: !162)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2040, file: !145, line: 68, baseType: !2053, size: 32, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2056)
!2056 = !{!2057}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2055, file: !123, line: 232, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2023)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2040, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2040, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2061 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !145, line: 90, baseType: !2062, size: 16, offset: 112)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2040, file: !145, line: 90, size: 16, elements: !2063)
!2063 = !{!2064, !2069}
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !145, line: 91, baseType: !2065, size: 16)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2062, file: !145, line: 91, size: 16, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2065, file: !145, line: 96, baseType: !177, size: 8)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2065, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2062, file: !145, line: 100, baseType: !181, size: 16)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2040, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2040, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2040, file: !145, line: 131, baseType: !2073, size: 192, offset: 192)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2074)
!2074 = !{!2075, !2076, !2082}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2073, file: !123, line: 245, baseType: !2022, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2073, file: !123, line: 246, baseType: !2077, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2078)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{null, !2081}
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2073, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2037, file: !145, line: 250, baseType: !2084, size: 288, offset: 384)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2084, file: !198, line: 26, baseType: !110, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2084, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2084, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2084, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2084, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2084, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2084, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2084, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2084, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2037, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2037, file: !145, line: 256, baseType: !2054, size: 64, offset: 704)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2037, file: !145, line: 271, baseType: !2098, size: 128, offset: 768)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2098, file: !145, line: 35, baseType: !215, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2098, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2098, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2098, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2037, file: !145, line: 274, baseType: !2036, size: 32, offset: 896)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2037, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2037, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2037, file: !145, line: 325, baseType: !2108, size: 32, offset: 1216)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2110)
!2110 = !{!2111, !2117, !2118}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2109, file: !119, line: 5074, baseType: !2112, size: 96)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !2113)
!2113 = !{!2114, !2115, !2116}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2112, file: !236, line: 57, baseType: !239, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2112, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2112, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2109, file: !119, line: 5075, baseType: !2054, size: 64, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2109, file: !119, line: 5076, baseType: !2119, size: 32, offset: 160)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !2120)
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2119, file: !248, line: 52, baseType: !22, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2037, file: !145, line: 343, baseType: !2123, size: 64, offset: 1248)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2123, file: !198, line: 63, baseType: !110, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2123, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2127 = !{!2016}
!2128 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2131, file: !2243, line: 56, type: !2231, isLocal: false, isDefinition: true)
!2131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2133, globals: !2240, splitDebugInlining: false, nameTableKind: None)
!2132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2133 = !{!2134, !936, !108, !2239, !799, !104, !1011, !109, !110, !111}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !2136)
!2136 = !{!2137, !2195, !2207, !2208, !2209, !2216, !2217, !2218, !2219, !2234}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2135, file: !145, line: 247, baseType: !2138, size: 384)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2139)
!2139 = !{!2140, !2164, !2171, !2172, !2173, !2182, !2183, !2184}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !145, line: 60, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !145, line: 60, size: 64, elements: !2142)
!2142 = !{!2143, !2158}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2141, file: !145, line: 61, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2146)
!2146 = !{!2147, !2153}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !128, line: 38, baseType: !2148, size: 32)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !128, line: 38, size: 32, elements: !2149)
!2149 = !{!2150, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2148, file: !128, line: 39, baseType: !2151, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2148, file: !128, line: 40, baseType: !2151, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !128, line: 42, baseType: !2154, size: 32, offset: 32)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !128, line: 42, size: 32, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2154, file: !128, line: 43, baseType: !2151, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2154, file: !128, line: 44, baseType: !2151, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2141, file: !145, line: 62, baseType: !2159, size: 64)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2159, file: !157, line: 50, baseType: !2162, size: 64)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 64, elements: !162)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2138, file: !145, line: 68, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2168)
!2168 = !{!2169}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2167, file: !123, line: 232, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2145)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2138, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2138, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !145, line: 90, baseType: !2174, size: 16, offset: 112)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !145, line: 90, size: 16, elements: !2175)
!2175 = !{!2176, !2181}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !145, line: 91, baseType: !2177, size: 16)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2174, file: !145, line: 91, size: 16, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2177, file: !145, line: 96, baseType: !177, size: 8)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2177, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2174, file: !145, line: 100, baseType: !181, size: 16)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2138, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2138, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2138, file: !145, line: 131, baseType: !2185, size: 192, offset: 192)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2186)
!2186 = !{!2187, !2188, !2194}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2185, file: !123, line: 245, baseType: !2144, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2185, file: !123, line: 246, baseType: !2189, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{null, !2193}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2185, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2135, file: !145, line: 250, baseType: !2196, size: 288, offset: 384)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2197)
!2197 = !{!2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2196, file: !198, line: 26, baseType: !110, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2196, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2196, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2196, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2196, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2196, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2196, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2196, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2196, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2135, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2135, file: !145, line: 256, baseType: !2166, size: 64, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2135, file: !145, line: 271, baseType: !2210, size: 128, offset: 768)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2210, file: !145, line: 35, baseType: !215, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2210, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2210, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2210, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2135, file: !145, line: 274, baseType: !2134, size: 32, offset: 896)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2135, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2135, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2135, file: !145, line: 325, baseType: !2220, size: 32, offset: 1216)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2222)
!2222 = !{!2223, !2229, !2230}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2221, file: !119, line: 5074, baseType: !2224, size: 96)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !2225)
!2225 = !{!2226, !2227, !2228}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2224, file: !236, line: 57, baseType: !239, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2224, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2224, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2221, file: !119, line: 5075, baseType: !2166, size: 64, offset: 96)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2221, file: !119, line: 5076, baseType: !2231, size: 32, offset: 160)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2231, file: !248, line: 52, baseType: !22, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2135, file: !145, line: 343, baseType: !2235, size: 64, offset: 1248)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2235, file: !198, line: 63, baseType: !110, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2235, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2240 = !{!2129, !2241, !2244, !2246}
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2131, file: !2243, line: 404, type: !109, isLocal: true, isDefinition: true)
!2243 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2131, file: !2243, line: 405, type: !109, isLocal: true, isDefinition: true)
!2246 = !DIGlobalVariableExpression(var: !2247, expr: !DIExpression())
!2247 = distinct !DIGlobalVariable(name: "pending_current", scope: !2131, file: !2243, line: 425, type: !2134, isLocal: true, isDefinition: true)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2250, file: !2280, line: 19, type: !2286, isLocal: true, isDefinition: true)
!2250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2251, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2252, globals: !2277, splitDebugInlining: false, nameTableKind: None)
!2251 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2252 = !{!104, !108, !1011, !110, !111, !109, !2253, !936, !106}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2255)
!2255 = !{!2256, !2271, !2276}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2254, file: !123, line: 245, baseType: !2257, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2258)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2259)
!2259 = !{!2260, !2266}
!2260 = !DIDerivedType(tag: DW_TAG_member, scope: !2258, file: !128, line: 38, baseType: !2261, size: 32)
!2261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2258, file: !128, line: 38, size: 32, elements: !2262)
!2262 = !{!2263, !2265}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2261, file: !128, line: 39, baseType: !2264, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2261, file: !128, line: 40, baseType: !2264, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2258, file: !128, line: 42, baseType: !2267, size: 32, offset: 32)
!2267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2258, file: !128, line: 42, size: 32, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2267, file: !128, line: 43, baseType: !2264, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2267, file: !128, line: 44, baseType: !2264, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2254, file: !123, line: 246, baseType: !2272, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2273)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{null, !2253}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2254, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2277 = !{!2278, !2248, !2281, !2283}
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2250, file: !2280, line: 15, type: !111, isLocal: true, isDefinition: true)
!2280 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2250, file: !2280, line: 25, type: !109, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2250, file: !2280, line: 17, type: !2285, isLocal: true, isDefinition: true)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2258)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !2287)
!2287 = !{!2288}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2286, file: !248, line: 52, baseType: !22, size: 32)
!2289 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2290, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2290 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2292, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2293, retainedTypes: !2299, splitDebugInlining: false, nameTableKind: None)
!2292 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2293 = !{!2294, !30}
!2294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rb_color", file: !2295, line: 19, baseType: !32, size: 32, elements: !2296)
!2295 = !DIFile(filename: "zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2296 = !{!2297, !2298}
!2297 = !DIEnumerator(name: "RED", value: 0)
!2298 = !DIEnumerator(name: "BLACK", value: 1)
!2299 = !{!108, !109, !22, !2300, !167}
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2302)
!2302 = !{!2303}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2301, file: !157, line: 50, baseType: !2304, size: 64)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2300, size: 64, elements: !162)
!2305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2309, retainedTypes: !2329, splitDebugInlining: false, nameTableKind: None)
!2308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2309 = !{!2310, !2318}
!2310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2311, line: 69, baseType: !32, size: 32, elements: !2312)
!2311 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2312 = !{!2313, !2314, !2315, !2316, !2317}
!2313 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2314 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2315 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2316 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2317 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2311, line: 56, baseType: !32, size: 32, elements: !2319)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328}
!2320 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2321 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2322 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2323 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2324 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2325 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2326 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2327 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2328 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2329 = !{!109, !2310, !2318, !2330, !178, !761, !2332, !2333, !168, !182, !744, !243, !108, !22, !32, !2335, !2336, !2337, !103, !2338, !107, !2339, !2331, !2340, !2341, !2342, !2343}
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2311, line: 31, baseType: !2331)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !244, line: 329, baseType: !32)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2311, line: 32, baseType: !2334)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !244, line: 145, baseType: !109)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2350, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2350 = !{!2351, !30}
!2351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2352, line: 27, baseType: !32, size: 32, elements: !2353)
!2352 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = !{!2354, !2355, !2356, !2357, !2358}
!2354 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2355 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2356 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2357 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2358 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2361, retainedTypes: !2362, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2361 = !{!1315, !2351, !30}
!2362 = !{!2363, !2364, !108, !109, !1011, !110, !167, !2381}
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !574, line: 249, baseType: !1315)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1458, line: 426, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 411, size: 28704, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2366, file: !1458, line: 413, baseType: !1470, size: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2366, file: !1458, line: 414, baseType: !1474, size: 768, offset: 256)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2366, file: !1458, line: 415, baseType: !1470, size: 256, offset: 1024)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2366, file: !1458, line: 416, baseType: !1474, size: 768, offset: 1280)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2366, file: !1458, line: 417, baseType: !1470, size: 256, offset: 2048)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2366, file: !1458, line: 418, baseType: !1474, size: 768, offset: 2304)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2366, file: !1458, line: 419, baseType: !1470, size: 256, offset: 3072)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2366, file: !1458, line: 420, baseType: !1474, size: 768, offset: 3328)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2366, file: !1458, line: 421, baseType: !1470, size: 256, offset: 4096)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2366, file: !1458, line: 422, baseType: !1485, size: 1792, offset: 4352)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2366, file: !1458, line: 423, baseType: !1489, size: 1920, offset: 6144)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2366, file: !1458, line: 424, baseType: !1494, size: 20608, offset: 8064)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2366, file: !1458, line: 425, baseType: !578, size: 32, offset: 28672)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2383)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2383, file: !1458, line: 447, baseType: !649, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2383, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2383, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2383, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2383, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2383, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2383, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2383, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2383, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2383, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2383, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2383, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2383, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2383, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2383, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2383, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2383, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2383, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2383, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2383, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2383, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2407, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2407 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2410, splitDebugInlining: false, nameTableKind: None)
!2409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2410 = !{!108, !109, !22, !2411}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2413)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2413, file: !1458, line: 447, baseType: !649, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2413, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2413, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2413, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2413, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2413, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2413, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2413, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2413, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2413, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2413, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2413, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2413, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2413, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2413, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2413, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2413, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2413, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2413, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2413, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2413, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2438, splitDebugInlining: false, nameTableKind: None)
!2437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2438 = !{!2439, !108, !109}
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2441, file: !1458, line: 447, baseType: !649, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2441, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2441, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2441, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2441, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2441, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2441, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2441, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2441, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2441, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2441, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2441, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2441, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2441, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2441, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2441, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2441, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2441, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2441, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2441, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2441, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2465, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2466, splitDebugInlining: false, nameTableKind: None)
!2465 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2466 = !{!2467, !110, !108, !109}
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2469, line: 98, size: 256, elements: !2470)
!2469 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2470 = !{!2471, !2476, !2481, !2486, !2491, !2496, !2501, !2506}
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 99, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 99, size: 32, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2472, file: !2469, line: 99, baseType: !110, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2472, file: !2469, line: 99, baseType: !110, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 100, baseType: !2477, size: 32, offset: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 100, size: 32, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2477, file: !2469, line: 100, baseType: !110, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2477, file: !2469, line: 100, baseType: !110, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 101, baseType: !2482, size: 32, offset: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 101, size: 32, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2482, file: !2469, line: 101, baseType: !110, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2482, file: !2469, line: 101, baseType: !110, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 102, baseType: !2487, size: 32, offset: 96)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 102, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2487, file: !2469, line: 102, baseType: !110, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2487, file: !2469, line: 102, baseType: !110, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 103, baseType: !2492, size: 32, offset: 128)
!2492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 103, size: 32, elements: !2493)
!2493 = !{!2494, !2495}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2492, file: !2469, line: 103, baseType: !110, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2492, file: !2469, line: 103, baseType: !110, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 104, baseType: !2497, size: 32, offset: 160)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 104, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2497, file: !2469, line: 104, baseType: !110, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2497, file: !2469, line: 104, baseType: !110, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !2469, line: 105, baseType: !2502, size: 32, offset: 192)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !2469, line: 105, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2502, file: !2469, line: 105, baseType: !110, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2502, file: !2469, line: 105, baseType: !110, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2468, file: !2469, line: 106, baseType: !110, size: 32, offset: 224)
!2507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2350, retainedTypes: !2509, splitDebugInlining: false, nameTableKind: None)
!2508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2509 = !{!2510, !108, !109, !2535, !2578, !110}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2512, file: !1458, line: 447, baseType: !649, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2512, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2512, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2512, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2512, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2512, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2512, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2512, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2512, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2512, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2512, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2512, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2512, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2512, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2512, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2512, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2512, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2512, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2512, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2512, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2512, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2469, line: 141, baseType: !2537)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2469, line: 97, size: 256, elements: !2538)
!2538 = !{!2539}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2537, file: !2469, line: 107, baseType: !2540, size: 256)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2469, line: 98, size: 256, elements: !2541)
!2541 = !{!2542, !2547, !2552, !2557, !2562, !2567, !2572, !2577}
!2542 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 99, baseType: !2543, size: 32)
!2543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 99, size: 32, elements: !2544)
!2544 = !{!2545, !2546}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2543, file: !2469, line: 99, baseType: !110, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2543, file: !2469, line: 99, baseType: !110, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 100, baseType: !2548, size: 32, offset: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 100, size: 32, elements: !2549)
!2549 = !{!2550, !2551}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2548, file: !2469, line: 100, baseType: !110, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2548, file: !2469, line: 100, baseType: !110, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 101, baseType: !2553, size: 32, offset: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 101, size: 32, elements: !2554)
!2554 = !{!2555, !2556}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2553, file: !2469, line: 101, baseType: !110, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2553, file: !2469, line: 101, baseType: !110, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 102, baseType: !2558, size: 32, offset: 96)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 102, size: 32, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2558, file: !2469, line: 102, baseType: !110, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2558, file: !2469, line: 102, baseType: !110, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 103, baseType: !2563, size: 32, offset: 128)
!2563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 103, size: 32, elements: !2564)
!2564 = !{!2565, !2566}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2563, file: !2469, line: 103, baseType: !110, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2563, file: !2469, line: 103, baseType: !110, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 104, baseType: !2568, size: 32, offset: 160)
!2568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 104, size: 32, elements: !2569)
!2569 = !{!2570, !2571}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2568, file: !2469, line: 104, baseType: !110, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2568, file: !2469, line: 104, baseType: !110, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, scope: !2540, file: !2469, line: 105, baseType: !2573, size: 32, offset: 192)
!2573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2540, file: !2469, line: 105, size: 32, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2573, file: !2469, line: 105, baseType: !110, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2573, file: !2469, line: 105, baseType: !110, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2540, file: !2469, line: 106, baseType: !110, size: 32, offset: 224)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1314, retainedTypes: !2581, splitDebugInlining: false, nameTableKind: None)
!2580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2581 = !{!2363, !1011, !167, !110, !2582, !2599}
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1458, line: 426, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 411, size: 28704, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2584, file: !1458, line: 413, baseType: !1470, size: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2584, file: !1458, line: 414, baseType: !1474, size: 768, offset: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2584, file: !1458, line: 415, baseType: !1470, size: 256, offset: 1024)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2584, file: !1458, line: 416, baseType: !1474, size: 768, offset: 1280)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2584, file: !1458, line: 417, baseType: !1470, size: 256, offset: 2048)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2584, file: !1458, line: 418, baseType: !1474, size: 768, offset: 2304)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2584, file: !1458, line: 419, baseType: !1470, size: 256, offset: 3072)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2584, file: !1458, line: 420, baseType: !1474, size: 768, offset: 3328)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2584, file: !1458, line: 421, baseType: !1470, size: 256, offset: 4096)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2584, file: !1458, line: 422, baseType: !1485, size: 1792, offset: 4352)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2584, file: !1458, line: 423, baseType: !1489, size: 1920, offset: 6144)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2584, file: !1458, line: 424, baseType: !1494, size: 20608, offset: 8064)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2584, file: !1458, line: 425, baseType: !578, size: 32, offset: 28672)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2602)
!2602 = !{!2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2601, file: !1458, line: 447, baseType: !649, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2601, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2601, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2601, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2601, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2601, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2601, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2601, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2601, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2601, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2601, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2601, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2601, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2601, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2601, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2601, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2601, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2601, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2601, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2601, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2601, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2626, splitDebugInlining: false, nameTableKind: None)
!2625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2626 = !{!2627, !108, !109}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1458, line: 468, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1458, line: 445, size: 1120, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2629, file: !1458, line: 447, baseType: !649, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2629, file: !1458, line: 448, baseType: !578, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2629, file: !1458, line: 449, baseType: !578, size: 32, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2629, file: !1458, line: 450, baseType: !578, size: 32, offset: 96)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2629, file: !1458, line: 451, baseType: !578, size: 32, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2629, file: !1458, line: 452, baseType: !578, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2629, file: !1458, line: 453, baseType: !1509, size: 96, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2629, file: !1458, line: 454, baseType: !578, size: 32, offset: 288)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2629, file: !1458, line: 455, baseType: !578, size: 32, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2629, file: !1458, line: 456, baseType: !578, size: 32, offset: 352)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2629, file: !1458, line: 457, baseType: !578, size: 32, offset: 384)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2629, file: !1458, line: 458, baseType: !578, size: 32, offset: 416)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2629, file: !1458, line: 459, baseType: !578, size: 32, offset: 448)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2629, file: !1458, line: 460, baseType: !578, size: 32, offset: 480)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2629, file: !1458, line: 461, baseType: !1520, size: 64, offset: 512)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2629, file: !1458, line: 462, baseType: !649, size: 32, offset: 576)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2629, file: !1458, line: 463, baseType: !649, size: 32, offset: 608)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2629, file: !1458, line: 464, baseType: !1524, size: 128, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2629, file: !1458, line: 465, baseType: !1528, size: 160, offset: 768)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2629, file: !1458, line: 466, baseType: !1532, size: 160, offset: 928)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2629, file: !1458, line: 467, baseType: !578, size: 32, offset: 1088)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2654, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2654 = !{!226, !936, !243, !762, !2655, !168, !108}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2659 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2660, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2661, splitDebugInlining: false, nameTableKind: None)
!2660 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2661 = !{!696, !110}
!2662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2664, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2664 = !{!2665}
!2665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2666, line: 62, baseType: !32, size: 32, elements: !2667)
!2666 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673}
!2668 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2669 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2670 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2671 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2672 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2673 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2674 = !{!2675, !2738, !110, !754, !696}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !574, line: 8619, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 8563, size: 3072, elements: !2678)
!2678 = !{!2679, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2677, file: !574, line: 8564, baseType: !2680, size: 768)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 768, elements: !2681)
!2681 = !{!2682}
!2682 = !DISubrange(count: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2677, file: !574, line: 8565, baseType: !578, size: 32, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2677, file: !574, line: 8566, baseType: !578, size: 32, offset: 800)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2677, file: !574, line: 8567, baseType: !578, size: 32, offset: 832)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2677, file: !574, line: 8568, baseType: !578, size: 32, offset: 864)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2677, file: !574, line: 8569, baseType: !578, size: 32, offset: 896)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2677, file: !574, line: 8570, baseType: !578, size: 32, offset: 928)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2677, file: !574, line: 8571, baseType: !578, size: 32, offset: 960)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2677, file: !574, line: 8572, baseType: !578, size: 32, offset: 992)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2677, file: !574, line: 8573, baseType: !578, size: 32, offset: 1024)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2677, file: !574, line: 8574, baseType: !2693, size: 96, offset: 1056)
!2693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 96, elements: !1510)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2677, file: !574, line: 8575, baseType: !578, size: 32, offset: 1152)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2677, file: !574, line: 8576, baseType: !2693, size: 96, offset: 1184)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2677, file: !574, line: 8577, baseType: !578, size: 32, offset: 1280)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2677, file: !574, line: 8578, baseType: !2693, size: 96, offset: 1312)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2677, file: !574, line: 8579, baseType: !578, size: 32, offset: 1408)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2677, file: !574, line: 8580, baseType: !578, size: 32, offset: 1440)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2677, file: !574, line: 8581, baseType: !578, size: 32, offset: 1472)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2677, file: !574, line: 8582, baseType: !578, size: 32, offset: 1504)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2677, file: !574, line: 8583, baseType: !578, size: 32, offset: 1536)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2677, file: !574, line: 8584, baseType: !578, size: 32, offset: 1568)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2677, file: !574, line: 8585, baseType: !578, size: 32, offset: 1600)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2677, file: !574, line: 8586, baseType: !578, size: 32, offset: 1632)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2677, file: !574, line: 8587, baseType: !578, size: 32, offset: 1664)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2677, file: !574, line: 8588, baseType: !578, size: 32, offset: 1696)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2677, file: !574, line: 8589, baseType: !578, size: 32, offset: 1728)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2677, file: !574, line: 8590, baseType: !578, size: 32, offset: 1760)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2677, file: !574, line: 8591, baseType: !578, size: 32, offset: 1792)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2677, file: !574, line: 8592, baseType: !578, size: 32, offset: 1824)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2677, file: !574, line: 8593, baseType: !578, size: 32, offset: 1856)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2677, file: !574, line: 8594, baseType: !578, size: 32, offset: 1888)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2677, file: !574, line: 8595, baseType: !578, size: 32, offset: 1920)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2677, file: !574, line: 8596, baseType: !578, size: 32, offset: 1952)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2677, file: !574, line: 8597, baseType: !578, size: 32, offset: 1984)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2677, file: !574, line: 8598, baseType: !578, size: 32, offset: 2016)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2677, file: !574, line: 8599, baseType: !578, size: 32, offset: 2048)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2677, file: !574, line: 8600, baseType: !2693, size: 96, offset: 2080)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2677, file: !574, line: 8601, baseType: !578, size: 32, offset: 2176)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2677, file: !574, line: 8602, baseType: !2693, size: 96, offset: 2208)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2677, file: !574, line: 8603, baseType: !578, size: 32, offset: 2304)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2677, file: !574, line: 8604, baseType: !2693, size: 96, offset: 2336)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2677, file: !574, line: 8605, baseType: !578, size: 32, offset: 2432)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2677, file: !574, line: 8606, baseType: !578, size: 32, offset: 2464)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2677, file: !574, line: 8607, baseType: !578, size: 32, offset: 2496)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2677, file: !574, line: 8608, baseType: !578, size: 32, offset: 2528)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2677, file: !574, line: 8609, baseType: !578, size: 32, offset: 2560)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2677, file: !574, line: 8610, baseType: !2693, size: 96, offset: 2592)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2677, file: !574, line: 8611, baseType: !578, size: 32, offset: 2688)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2677, file: !574, line: 8612, baseType: !2693, size: 96, offset: 2720)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2677, file: !574, line: 8613, baseType: !578, size: 32, offset: 2816)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2677, file: !574, line: 8614, baseType: !2693, size: 96, offset: 2848)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2677, file: !574, line: 8615, baseType: !578, size: 32, offset: 2944)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2677, file: !574, line: 8616, baseType: !578, size: 32, offset: 2976)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2677, file: !574, line: 8617, baseType: !578, size: 32, offset: 3008)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2677, file: !574, line: 8618, baseType: !578, size: 32, offset: 3040)
!2738 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2741 = !{!2742, !2746, !849}
!2742 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !850, line: 49, baseType: !32, size: 32, elements: !2743)
!2743 = !{!2744, !2745}
!2744 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2745 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2746 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !850, line: 56, baseType: !32, size: 32, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752}
!2748 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2749 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2750 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2751 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2752 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2755, retainedTypes: !2764, splitDebugInlining: false, nameTableKind: None)
!2754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2755 = !{!1115, !2756, !2760}
!2756 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1037, line: 179, baseType: !32, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2759 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1037, line: 194, baseType: !32, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2763 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2764 = !{!110, !1265}
!2765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2767, retainedTypes: !2778, splitDebugInlining: false, nameTableKind: None)
!2766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2767 = !{!289, !2768}
!2768 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2666, line: 128, baseType: !32, size: 32, elements: !2769)
!2769 = !{!2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777}
!2770 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2771 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2772 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2773 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2774 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2775 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2776 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2777 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2778 = !{!110, !2779, !2831, !696}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !574, line: 4575, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 4532, size: 390144, elements: !2782)
!2782 = !{!2783, !2784, !2785, !2786, !2787, !2788, !2796, !2797, !2805, !2806}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2781, file: !574, line: 4533, baseType: !578, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2781, file: !574, line: 4534, baseType: !578, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2781, file: !574, line: 4535, baseType: !578, size: 32, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2781, file: !574, line: 4536, baseType: !578, size: 32, offset: 96)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2781, file: !574, line: 4537, baseType: !583, size: 16256, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2781, file: !574, line: 4543, baseType: !2789, size: 4224, offset: 16384)
!2789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2790, size: 4224, elements: !594)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2781, file: !574, line: 4538, size: 128, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2790, file: !574, line: 4539, baseType: !578, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2790, file: !574, line: 4540, baseType: !578, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2790, file: !574, line: 4541, baseType: !578, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2790, file: !574, line: 4542, baseType: !578, size: 32, offset: 96)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2781, file: !574, line: 4544, baseType: !597, size: 110464, offset: 20608)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2781, file: !574, line: 4550, baseType: !2798, size: 24448, offset: 131072)
!2798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2799, size: 24448, elements: !608)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2781, file: !574, line: 4545, size: 128, elements: !2800)
!2800 = !{!2801, !2802, !2803, !2804}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2799, file: !574, line: 4546, baseType: !578, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2799, file: !574, line: 4547, baseType: !578, size: 32, offset: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2799, file: !574, line: 4548, baseType: !578, size: 32, offset: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2799, file: !574, line: 4549, baseType: !578, size: 32, offset: 96)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2781, file: !574, line: 4551, baseType: !611, size: 106624, offset: 155520)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2781, file: !574, line: 4574, baseType: !2807, size: 128000, offset: 262144)
!2807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2808, size: 128000, elements: !642)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2781, file: !574, line: 4552, size: 1024, elements: !2809)
!2809 = !{!2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2808, file: !574, line: 4553, baseType: !578, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2808, file: !574, line: 4554, baseType: !578, size: 32, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2808, file: !574, line: 4555, baseType: !578, size: 32, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2808, file: !574, line: 4556, baseType: !578, size: 32, offset: 96)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2808, file: !574, line: 4557, baseType: !578, size: 32, offset: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2808, file: !574, line: 4558, baseType: !578, size: 32, offset: 160)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2808, file: !574, line: 4559, baseType: !578, size: 32, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2808, file: !574, line: 4560, baseType: !578, size: 32, offset: 224)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2808, file: !574, line: 4561, baseType: !578, size: 32, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2808, file: !574, line: 4562, baseType: !578, size: 32, offset: 288)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2808, file: !574, line: 4563, baseType: !578, size: 32, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2808, file: !574, line: 4564, baseType: !578, size: 32, offset: 352)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2808, file: !574, line: 4565, baseType: !578, size: 32, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2808, file: !574, line: 4566, baseType: !578, size: 32, offset: 416)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2808, file: !574, line: 4567, baseType: !578, size: 32, offset: 448)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2808, file: !574, line: 4568, baseType: !578, size: 32, offset: 480)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2808, file: !574, line: 4569, baseType: !635, size: 384, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2808, file: !574, line: 4570, baseType: !578, size: 32, offset: 896)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2808, file: !574, line: 4571, baseType: !578, size: 32, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2808, file: !574, line: 4572, baseType: !578, size: 32, offset: 960)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2808, file: !574, line: 4573, baseType: !578, size: 32, offset: 992)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !574, line: 8619, baseType: !2833)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 8563, size: 3072, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2833, file: !574, line: 8564, baseType: !2680, size: 768)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2833, file: !574, line: 8565, baseType: !578, size: 32, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2833, file: !574, line: 8566, baseType: !578, size: 32, offset: 800)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2833, file: !574, line: 8567, baseType: !578, size: 32, offset: 832)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2833, file: !574, line: 8568, baseType: !578, size: 32, offset: 864)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2833, file: !574, line: 8569, baseType: !578, size: 32, offset: 896)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2833, file: !574, line: 8570, baseType: !578, size: 32, offset: 928)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2833, file: !574, line: 8571, baseType: !578, size: 32, offset: 960)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2833, file: !574, line: 8572, baseType: !578, size: 32, offset: 992)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2833, file: !574, line: 8573, baseType: !578, size: 32, offset: 1024)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2833, file: !574, line: 8574, baseType: !2693, size: 96, offset: 1056)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2833, file: !574, line: 8575, baseType: !578, size: 32, offset: 1152)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2833, file: !574, line: 8576, baseType: !2693, size: 96, offset: 1184)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2833, file: !574, line: 8577, baseType: !578, size: 32, offset: 1280)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2833, file: !574, line: 8578, baseType: !2693, size: 96, offset: 1312)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2833, file: !574, line: 8579, baseType: !578, size: 32, offset: 1408)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2833, file: !574, line: 8580, baseType: !578, size: 32, offset: 1440)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2833, file: !574, line: 8581, baseType: !578, size: 32, offset: 1472)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2833, file: !574, line: 8582, baseType: !578, size: 32, offset: 1504)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2833, file: !574, line: 8583, baseType: !578, size: 32, offset: 1536)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2833, file: !574, line: 8584, baseType: !578, size: 32, offset: 1568)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2833, file: !574, line: 8585, baseType: !578, size: 32, offset: 1600)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2833, file: !574, line: 8586, baseType: !578, size: 32, offset: 1632)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2833, file: !574, line: 8587, baseType: !578, size: 32, offset: 1664)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2833, file: !574, line: 8588, baseType: !578, size: 32, offset: 1696)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2833, file: !574, line: 8589, baseType: !578, size: 32, offset: 1728)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2833, file: !574, line: 8590, baseType: !578, size: 32, offset: 1760)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2833, file: !574, line: 8591, baseType: !578, size: 32, offset: 1792)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2833, file: !574, line: 8592, baseType: !578, size: 32, offset: 1824)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2833, file: !574, line: 8593, baseType: !578, size: 32, offset: 1856)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2833, file: !574, line: 8594, baseType: !578, size: 32, offset: 1888)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2833, file: !574, line: 8595, baseType: !578, size: 32, offset: 1920)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2833, file: !574, line: 8596, baseType: !578, size: 32, offset: 1952)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2833, file: !574, line: 8597, baseType: !578, size: 32, offset: 1984)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2833, file: !574, line: 8598, baseType: !578, size: 32, offset: 2016)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2833, file: !574, line: 8599, baseType: !578, size: 32, offset: 2048)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2833, file: !574, line: 8600, baseType: !2693, size: 96, offset: 2080)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2833, file: !574, line: 8601, baseType: !578, size: 32, offset: 2176)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2833, file: !574, line: 8602, baseType: !2693, size: 96, offset: 2208)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2833, file: !574, line: 8603, baseType: !578, size: 32, offset: 2304)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2833, file: !574, line: 8604, baseType: !2693, size: 96, offset: 2336)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2833, file: !574, line: 8605, baseType: !578, size: 32, offset: 2432)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2833, file: !574, line: 8606, baseType: !578, size: 32, offset: 2464)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2833, file: !574, line: 8607, baseType: !578, size: 32, offset: 2496)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2833, file: !574, line: 8608, baseType: !578, size: 32, offset: 2528)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2833, file: !574, line: 8609, baseType: !578, size: 32, offset: 2560)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2833, file: !574, line: 8610, baseType: !2693, size: 96, offset: 2592)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2833, file: !574, line: 8611, baseType: !578, size: 32, offset: 2688)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2833, file: !574, line: 8612, baseType: !2693, size: 96, offset: 2720)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2833, file: !574, line: 8613, baseType: !578, size: 32, offset: 2816)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2833, file: !574, line: 8614, baseType: !2693, size: 96, offset: 2848)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2833, file: !574, line: 8615, baseType: !578, size: 32, offset: 2944)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2833, file: !574, line: 8616, baseType: !578, size: 32, offset: 2976)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2833, file: !574, line: 8617, baseType: !578, size: 32, offset: 3008)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2833, file: !574, line: 8618, baseType: !578, size: 32, offset: 3040)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2892 = !{!108, !243}
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2895, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2895 = !{!2896, !2903, !2351, !30}
!2896 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2897, line: 14, baseType: !32, size: 32, elements: !2898)
!2897 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2898 = !{!2899, !2900, !2901, !2902}
!2899 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2900 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2901 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2902 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2897, line: 42, baseType: !32, size: 32, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908, !2909, !2910}
!2905 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2906 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2907 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2908 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2909 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2910 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2912, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2912 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2913 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2914, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2914 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2915 = !{!22, !108, !109}
!2916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !278, splitDebugInlining: false, nameTableKind: None)
!2917 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!2918 = !{!"Ubuntu clang version 14.0.6"}
!2919 = !{i32 7, !"Dwarf Version", i32 4}
!2920 = !{i32 2, !"Debug Info Version", i32 3}
!2921 = !{i32 1, !"wchar_size", i32 4}
!2922 = !{i32 1, !"min_enum_size", i32 4}
!2923 = !{i32 1, !"branch-target-enforcement", i32 0}
!2924 = !{i32 1, !"sign-return-address", i32 0}
!2925 = !{i32 1, !"sign-return-address-all", i32 0}
!2926 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2927 = !{i32 7, !"frame-pointer", i32 2}
!2928 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2929, file: !2929, line: 26, type: !2930, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !1817)
!2929 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2930 = !DISubroutineType(types: !2931)
!2931 = !{null}
!2932 = !DILocation(line: 28, column: 1, scope: !2928)
!2933 = !{i64 2155082346, i64 2155082366, i64 2155082429}
!2934 = !DILocation(line: 29, column: 1, scope: !2928)
!2935 = !{i64 2155082761, i64 2155082781, i64 2155082844}
!2936 = !DILocation(line: 30, column: 1, scope: !2928)
!2937 = !{i64 2155083180, i64 2155083200, i64 2155083263}
!2938 = !DILocation(line: 31, column: 1, scope: !2928)
!2939 = !{i64 2155087660, i64 2155087680, i64 2155087743}
!2940 = !DILocation(line: 33, column: 1, scope: !2928)
!2941 = !{i64 2155087952, i64 2155087972, i64 2155088035}
!2942 = !DILocation(line: 35, column: 1, scope: !2928)
!2943 = !{i64 2155088277, i64 2155088297, i64 2155088360}
!2944 = !DILocation(line: 42, column: 1, scope: !2928)
!2945 = !{i64 2155088704, i64 2155088724, i64 2155088787}
!2946 = !DILocation(line: 50, column: 1, scope: !2928)
!2947 = !{i64 2155089146, i64 2155089166, i64 2155089229}
!2948 = !DILocation(line: 54, column: 1, scope: !2928)
!2949 = !{i64 2155089585, i64 2155089605, i64 2155089668}
!2950 = !DILocation(line: 61, column: 1, scope: !2928)
!2951 = !{i64 2155089902, i64 2155089922, i64 2155089985}
!2952 = !DILocation(line: 63, column: 1, scope: !2928)
!2953 = !{i64 2155090282, i64 2155090302, i64 2155090365}
!2954 = !DILocation(line: 64, column: 1, scope: !2928)
!2955 = !{i64 2155090804, i64 2155090824, i64 2155090887}
!2956 = !DILocation(line: 65, column: 1, scope: !2928)
!2957 = !{i64 2155091302, i64 2155091322, i64 2155091385}
!2958 = !DILocation(line: 66, column: 1, scope: !2928)
!2959 = !{i64 2155091784, i64 2155091804, i64 2155091867}
!2960 = !DILocation(line: 67, column: 1, scope: !2928)
!2961 = !{i64 2155092291, i64 2155092311, i64 2155092374}
!2962 = !DILocation(line: 68, column: 1, scope: !2928)
!2963 = !{i64 2155092779, i64 2155092799, i64 2155092862}
!2964 = !DILocation(line: 70, column: 1, scope: !2928)
!2965 = !{i64 2155093247, i64 2155093267, i64 2155093330}
!2966 = !DILocation(line: 71, column: 1, scope: !2928)
!2967 = !{i64 2155093689, i64 2155093709, i64 2155093772}
!2968 = !DILocation(line: 72, column: 1, scope: !2928)
!2969 = !{i64 2155094147, i64 2155094167, i64 2155094230}
!2970 = !DILocation(line: 86, column: 1, scope: !2928)
!2971 = !{i64 2155094586, i64 2155094606, i64 2155094669}
!2972 = !DILocation(line: 97, column: 1, scope: !2928)
!2973 = !{i64 2155094928, i64 2155094948, i64 2155095011}
!2974 = !DILocation(line: 99, column: 1, scope: !2928)
!2975 = !{i64 2155095146, i64 2155095166, i64 2155095229}
!2976 = !DILocation(line: 102, column: 1, scope: !2928)
!2977 = !{i64 2155095403, i64 2155095423, i64 2155095486}
!2978 = !DILocation(line: 105, column: 1, scope: !2928)
!2979 = !{i64 2155095643, i64 2155095663, i64 2155095726}
!2980 = !DILocation(line: 115, column: 1, scope: !2928)
!2981 = !{i64 2155095982, i64 2155096002, i64 2155096065}
!2982 = !DILocation(line: 118, column: 1, scope: !2928)
!2983 = !{i64 2155096326, i64 2155096346, i64 2155096409}
!2984 = !DILocation(line: 32, column: 1, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2928, file: !2986, discriminator: 0)
!2986 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !{i64 2155096682, i64 2155096702, i64 2155096765}
!2988 = !DILocation(line: 33, column: 1, scope: !2985)
!2989 = !{i64 2155101255, i64 2155101275, i64 2155101338}
!2990 = !DILocation(line: 53, column: 1, scope: !2985)
!2991 = !{i64 2155101763, i64 2155101783, i64 2155101846}
!2992 = !DILocation(line: 54, column: 1, scope: !2985)
!2993 = !{i64 2155102181, i64 2155102201, i64 2155102264}
!2994 = !DILocation(line: 55, column: 1, scope: !2985)
!2995 = !{i64 2155102599, i64 2155102619, i64 2155102682}
!2996 = !DILocation(line: 56, column: 1, scope: !2985)
!2997 = !{i64 2155103017, i64 2155103037, i64 2155103100}
!2998 = !DILocation(line: 57, column: 1, scope: !2985)
!2999 = !{i64 2155103435, i64 2155103455, i64 2155103518}
!3000 = !DILocation(line: 58, column: 1, scope: !2985)
!3001 = !{i64 2155103853, i64 2155103873, i64 2155103936}
!3002 = !DILocation(line: 59, column: 1, scope: !2985)
!3003 = !{i64 2155104271, i64 2155104291, i64 2155104354}
!3004 = !DILocation(line: 60, column: 1, scope: !2985)
!3005 = !{i64 2155104695, i64 2155104715, i64 2155104778}
!3006 = !DILocation(line: 61, column: 1, scope: !2985)
!3007 = !{i64 2155105012, i64 2155105032, i64 2155105095}
!3008 = !DILocation(line: 70, column: 1, scope: !2985)
!3009 = !{i64 2155105241, i64 2155105261, i64 2155105324}
!3010 = !DILocation(line: 72, column: 1, scope: !2985)
!3011 = !{i64 2155105573, i64 2155105593, i64 2155105656}
!3012 = !DILocation(line: 73, column: 1, scope: !2985)
!3013 = !{i64 2155106023, i64 2155106043, i64 2155106106}
!3014 = !DILocation(line: 74, column: 1, scope: !2985)
!3015 = !{i64 2155106473, i64 2155106493, i64 2155106556}
!3016 = !DILocation(line: 75, column: 1, scope: !2985)
!3017 = !{i64 2155106923, i64 2155106943, i64 2155107006}
!3018 = !DILocation(line: 76, column: 1, scope: !2985)
!3019 = !{i64 2155107373, i64 2155107393, i64 2155107456}
!3020 = !DILocation(line: 77, column: 1, scope: !2985)
!3021 = !{i64 2155107823, i64 2155107843, i64 2155107906}
!3022 = !DILocation(line: 78, column: 1, scope: !2985)
!3023 = !{i64 2155108273, i64 2155108293, i64 2155108356}
!3024 = !DILocation(line: 79, column: 1, scope: !2985)
!3025 = !{i64 2155108723, i64 2155108743, i64 2155108806}
!3026 = !DILocation(line: 80, column: 1, scope: !2985)
!3027 = !{i64 2155109176, i64 2155109196, i64 2155109259}
!3028 = !DILocation(line: 84, column: 1, scope: !2985)
!3029 = !{i64 2155109508, i64 2155109528, i64 2155109591}
!3030 = !DILocation(line: 106, column: 1, scope: !2985)
!3031 = !{i64 2155109758, i64 2155109778, i64 2155109841}
!3032 = !DILocation(line: 11, column: 1, scope: !3033)
!3033 = !DILexicalBlockFile(scope: !2928, file: !3034, discriminator: 0)
!3034 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3035 = distinct !DISubprogram(name: "philosopher", scope: !3036, file: !3036, line: 140, type: !218, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3037)
!3036 = !DIFile(filename: "zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3037 = !{!3038, !3039, !3040, !3041, !3042, !3043, !3044}
!3038 = !DILocalVariable(name: "id", arg: 1, scope: !3035, file: !3036, line: 140, type: !108)
!3039 = !DILocalVariable(name: "unused1", arg: 2, scope: !3035, file: !3036, line: 140, type: !108)
!3040 = !DILocalVariable(name: "unused2", arg: 3, scope: !3035, file: !3036, line: 140, type: !108)
!3041 = !DILocalVariable(name: "fork1", scope: !3035, file: !3036, line: 145, type: !273)
!3042 = !DILocalVariable(name: "fork2", scope: !3035, file: !3036, line: 146, type: !273)
!3043 = !DILocalVariable(name: "my_id", scope: !3035, file: !3036, line: 148, type: !109)
!3044 = !DILocalVariable(name: "delay", scope: !3045, file: !3036, line: 160, type: !1011)
!3045 = distinct !DILexicalBlock(scope: !3035, file: !3036, line: 159, column: 12)
!3046 = !DILocation(line: 0, scope: !3035)
!3047 = !DILocation(line: 148, column: 14, scope: !3035)
!3048 = !DILocation(line: 151, column: 6, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3035, file: !3036, line: 151, column: 6)
!3050 = !DILocation(line: 151, column: 6, scope: !3035)
!3051 = !DILocation(line: 155, column: 11, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3049, file: !3036, line: 154, column: 9)
!3053 = !DILocation(line: 156, column: 11, scope: !3052)
!3054 = !DILocation(line: 0, scope: !3049)
!3055 = !DILocation(line: 159, column: 2, scope: !3035)
!3056 = !DILocation(line: 162, column: 3, scope: !3045)
!3057 = !DILocation(line: 163, column: 3, scope: !3045)
!3058 = !DILocation(line: 164, column: 3, scope: !3045)
!3059 = !DILocation(line: 165, column: 3, scope: !3045)
!3060 = !DILocation(line: 167, column: 11, scope: !3045)
!3061 = !DILocation(line: 0, scope: !3045)
!3062 = !DILocation(line: 168, column: 3, scope: !3045)
!3063 = !DILocation(line: 169, column: 3, scope: !3045)
!3064 = !DILocation(line: 171, column: 3, scope: !3045)
!3065 = !DILocation(line: 172, column: 3, scope: !3045)
!3066 = !DILocation(line: 173, column: 3, scope: !3045)
!3067 = !DILocation(line: 175, column: 11, scope: !3045)
!3068 = !DILocation(line: 176, column: 3, scope: !3045)
!3069 = !DILocation(line: 177, column: 3, scope: !3045)
!3070 = distinct !{!3070, !3055, !3071}
!3071 = !DILocation(line: 178, column: 2, scope: !3035)
!3072 = distinct !DISubprogram(name: "is_last_philosopher", scope: !3036, file: !3036, line: 135, type: !282, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3073)
!3073 = !{!3074}
!3074 = !DILocalVariable(name: "id", arg: 1, scope: !3072, file: !3036, line: 135, type: !109)
!3075 = !DILocation(line: 0, scope: !3072)
!3076 = !DILocation(line: 137, column: 12, scope: !3072)
!3077 = !DILocation(line: 137, column: 2, scope: !3072)
!3078 = distinct !DISubprogram(name: "print_phil_state", scope: !3036, file: !3036, line: 100, type: !3079, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{null, !109, !744, !1011}
!3081 = !{!3082, !3083, !3084, !3085}
!3082 = !DILocalVariable(name: "id", arg: 1, scope: !3078, file: !3036, line: 100, type: !109)
!3083 = !DILocalVariable(name: "fmt", arg: 2, scope: !3078, file: !3036, line: 100, type: !744)
!3084 = !DILocalVariable(name: "delay", arg: 3, scope: !3078, file: !3036, line: 100, type: !1011)
!3085 = !DILocalVariable(name: "prio", scope: !3078, file: !3036, line: 102, type: !109)
!3086 = !DILocation(line: 0, scope: !3078)
!3087 = !DILocation(line: 102, column: 35, scope: !3078)
!3088 = !DILocation(line: 102, column: 13, scope: !3078)
!3089 = !DILocation(line: 104, column: 2, scope: !3078)
!3090 = !DILocation(line: 107, column: 18, scope: !3078)
!3091 = !DILocation(line: 107, column: 13, scope: !3078)
!3092 = !DILocation(line: 108, column: 9, scope: !3078)
!3093 = !DILocation(line: 106, column: 2, scope: !3078)
!3094 = !DILocation(line: 111, column: 6, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3078, file: !3036, line: 111, column: 6)
!3096 = !DILocation(line: 111, column: 6, scope: !3078)
!3097 = !DILocation(line: 112, column: 3, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3095, file: !3036, line: 111, column: 13)
!3099 = !DILocation(line: 113, column: 2, scope: !3098)
!3100 = !DILocation(line: 114, column: 3, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3095, file: !3036, line: 113, column: 9)
!3102 = !DILocation(line: 117, column: 2, scope: !3078)
!3103 = !DILocation(line: 118, column: 1, scope: !3078)
!3104 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3105, file: !3105, line: 927, type: !3106, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3112)
!3105 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!109, !273, !3108}
!3108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !3109)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !3110)
!3110 = !{!3111}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3109, file: !105, line: 66, baseType: !104, size: 64)
!3112 = !{!3113, !3114}
!3113 = !DILocalVariable(name: "mutex", arg: 1, scope: !3104, file: !3105, line: 927, type: !273)
!3114 = !DILocalVariable(name: "timeout", arg: 2, scope: !3104, file: !3105, line: 927, type: !3108)
!3115 = !DILocation(line: 0, scope: !3104)
!3116 = !DILocation(line: 936, column: 2, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3104, file: !3105, line: 936, column: 2)
!3118 = !{i64 2151048385}
!3119 = !DILocation(line: 937, column: 9, scope: !3104)
!3120 = !DILocation(line: 937, column: 2, scope: !3104)
!3121 = distinct !DISubprogram(name: "get_random_delay", scope: !3036, file: !3036, line: 120, type: !3122, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3124)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!1011, !109, !109}
!3124 = !{!3125, !3126, !3127, !3128}
!3125 = !DILocalVariable(name: "id", arg: 1, scope: !3121, file: !3036, line: 120, type: !109)
!3126 = !DILocalVariable(name: "period_in_ms", arg: 2, scope: !3121, file: !3036, line: 120, type: !109)
!3127 = !DILocalVariable(name: "delay", scope: !3121, file: !3036, line: 127, type: !1011)
!3128 = !DILocalVariable(name: "ms", scope: !3121, file: !3036, line: 130, type: !1011)
!3129 = !DILocation(line: 0, scope: !3121)
!3130 = !DILocation(line: 127, column: 19, scope: !3121)
!3131 = !DILocation(line: 127, column: 36, scope: !3121)
!3132 = !DILocation(line: 127, column: 47, scope: !3121)
!3133 = !DILocation(line: 127, column: 41, scope: !3121)
!3134 = !DILocation(line: 127, column: 53, scope: !3121)
!3135 = !DILocation(line: 130, column: 27, scope: !3121)
!3136 = !DILocation(line: 132, column: 2, scope: !3121)
!3137 = distinct !DISubprogram(name: "k_msleep", scope: !119, file: !119, line: 439, type: !3138, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3140)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!1011, !1011}
!3140 = !{!3141}
!3141 = !DILocalVariable(name: "ms", arg: 1, scope: !3137, file: !119, line: 439, type: !1011)
!3142 = !DILocation(line: 0, scope: !3137)
!3143 = !DILocation(line: 441, column: 17, scope: !3137)
!3144 = !DILocation(line: 441, column: 9, scope: !3137)
!3145 = !DILocation(line: 441, column: 2, scope: !3137)
!3146 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3105, file: !3105, line: 944, type: !3147, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3149)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!109, !273}
!3149 = !{!3150}
!3150 = !DILocalVariable(name: "mutex", arg: 1, scope: !3146, file: !3105, line: 944, type: !273)
!3151 = !DILocation(line: 0, scope: !3146)
!3152 = !DILocation(line: 952, column: 2, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3146, file: !3105, line: 952, column: 2)
!3154 = !{i64 2151048453}
!3155 = !DILocation(line: 953, column: 9, scope: !3146)
!3156 = !DILocation(line: 953, column: 2, scope: !3146)
!3157 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3158, file: !3158, line: 403, type: !3159, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3161)
!3158 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!111, !111}
!3161 = !{!3162}
!3162 = !DILocalVariable(name: "t", arg: 1, scope: !3157, file: !3158, line: 403, type: !111)
!3163 = !DILocation(line: 0, scope: !3157)
!3164 = !DILocalVariable(name: "t", arg: 1, scope: !3165, file: !3158, line: 102, type: !111)
!3165 = distinct !DISubprogram(name: "z_tmcvt", scope: !3158, file: !3158, line: 102, type: !3166, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3168)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!111, !111, !110, !110, !754, !754, !754, !754}
!3168 = !{!3164, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178}
!3169 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3165, file: !3158, line: 102, type: !110)
!3170 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3165, file: !3158, line: 103, type: !110)
!3171 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3165, file: !3158, line: 103, type: !754)
!3172 = !DILocalVariable(name: "result32", arg: 5, scope: !3165, file: !3158, line: 104, type: !754)
!3173 = !DILocalVariable(name: "round_up", arg: 6, scope: !3165, file: !3158, line: 104, type: !754)
!3174 = !DILocalVariable(name: "round_off", arg: 7, scope: !3165, file: !3158, line: 105, type: !754)
!3175 = !DILocalVariable(name: "mul_ratio", scope: !3165, file: !3158, line: 107, type: !754)
!3176 = !DILocalVariable(name: "div_ratio", scope: !3165, file: !3158, line: 109, type: !754)
!3177 = !DILocalVariable(name: "off", scope: !3165, file: !3158, line: 116, type: !111)
!3178 = !DILocalVariable(name: "rdivisor", scope: !3179, file: !3158, line: 119, type: !110)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !3158, line: 118, column: 18)
!3180 = distinct !DILexicalBlock(scope: !3165, file: !3158, line: 118, column: 6)
!3181 = !DILocation(line: 0, scope: !3165, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 406, column: 9, scope: !3157)
!3183 = !DILocation(line: 145, column: 13, scope: !3184, inlinedAt: !3182)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3158, line: 144, column: 10)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !3158, line: 142, column: 7)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !3158, line: 141, column: 24)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !3158, line: 141, column: 13)
!3188 = distinct !DILexicalBlock(scope: !3165, file: !3158, line: 134, column: 6)
!3189 = !DILocation(line: 406, column: 2, scope: !3157)
!3190 = distinct !DISubprogram(name: "k_sleep", scope: !3105, file: !3105, line: 91, type: !3191, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3193)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!1011, !3108}
!3193 = !{!3194}
!3194 = !DILocalVariable(name: "timeout", arg: 1, scope: !3190, file: !3105, line: 91, type: !3108)
!3195 = !DILocation(line: 0, scope: !3190)
!3196 = !DILocation(line: 99, column: 2, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3190, file: !3105, line: 99, column: 2)
!3198 = !{i64 2151045017}
!3199 = !DILocation(line: 100, column: 9, scope: !3190)
!3200 = !DILocation(line: 100, column: 2, scope: !3190)
!3201 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !119, file: !119, line: 1640, type: !3202, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!110}
!3204 = !DILocation(line: 1642, column: 19, scope: !3201)
!3205 = !DILocation(line: 1642, column: 9, scope: !3201)
!3206 = !DILocation(line: 1642, column: 2, scope: !3201)
!3207 = distinct !DISubprogram(name: "k_uptime_get", scope: !119, file: !119, line: 1616, type: !3208, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!106}
!3210 = !DILocation(line: 1618, column: 31, scope: !3207)
!3211 = !DILocation(line: 1618, column: 9, scope: !3207)
!3212 = !DILocation(line: 1618, column: 2, scope: !3207)
!3213 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3105, file: !3105, line: 564, type: !3208, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3214 = !DILocation(line: 573, column: 2, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3213, file: !3105, line: 573, column: 2)
!3216 = !{i64 2151046921}
!3217 = !DILocation(line: 574, column: 9, scope: !3213)
!3218 = !DILocation(line: 574, column: 2, scope: !3213)
!3219 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3158, file: !3158, line: 1103, type: !3159, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3220)
!3220 = !{!3221}
!3221 = !DILocalVariable(name: "t", arg: 1, scope: !3219, file: !3158, line: 1103, type: !111)
!3222 = !DILocation(line: 0, scope: !3219)
!3223 = !DILocation(line: 0, scope: !3165, inlinedAt: !3224)
!3224 = distinct !DILocation(line: 1106, column: 9, scope: !3219)
!3225 = !DILocation(line: 139, column: 13, scope: !3226, inlinedAt: !3224)
!3226 = distinct !DILexicalBlock(scope: !3227, file: !3158, line: 138, column: 10)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !3158, line: 136, column: 7)
!3228 = distinct !DILexicalBlock(scope: !3188, file: !3158, line: 134, column: 17)
!3229 = !DILocation(line: 1106, column: 2, scope: !3219)
!3230 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !3231, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!3233}
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !143)
!3234 = !DILocation(line: 535, column: 9, scope: !3230)
!3235 = !DILocation(line: 535, column: 2, scope: !3230)
!3236 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3105, file: !3105, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3239)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!109, !3233}
!3239 = !{!3240}
!3240 = !DILocalVariable(name: "thread", arg: 1, scope: !3236, file: !3105, line: 258, type: !3233)
!3241 = !DILocation(line: 0, scope: !3236)
!3242 = !DILocation(line: 266, column: 2, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3236, file: !3105, line: 266, column: 2)
!3244 = !{i64 2151045697}
!3245 = !DILocation(line: 267, column: 9, scope: !3236)
!3246 = !DILocation(line: 267, column: 2, scope: !3236)
!3247 = distinct !DISubprogram(name: "set_phil_state_pos", scope: !3036, file: !3036, line: 92, type: !3248, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3250)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{null, !109}
!3250 = !{!3251}
!3251 = !DILocalVariable(name: "id", arg: 1, scope: !3247, file: !3036, line: 92, type: !109)
!3252 = !DILocation(line: 0, scope: !3247)
!3253 = !DILocation(line: 95, column: 27, scope: !3247)
!3254 = !DILocation(line: 95, column: 2, scope: !3247)
!3255 = !DILocation(line: 97, column: 1, scope: !3247)
!3256 = distinct !DISubprogram(name: "z_current_get", scope: !3105, file: !3105, line: 173, type: !3231, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3257 = !DILocation(line: 180, column: 2, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3256, file: !3105, line: 180, column: 2)
!3259 = !{i64 2151045357}
!3260 = !DILocation(line: 181, column: 9, scope: !3256)
!3261 = !DILocation(line: 181, column: 2, scope: !3256)
!3262 = distinct !DISubprogram(name: "main", scope: !3036, file: !3036, line: 252, type: !2930, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3263 = !DILocation(line: 254, column: 2, scope: !3262)
!3264 = !DILocation(line: 256, column: 2, scope: !3262)
!3265 = !DILocation(line: 259, column: 2, scope: !3262)
!3266 = !DILocation(line: 260, column: 2, scope: !3262)
!3267 = !DILocation(line: 268, column: 1, scope: !3262)
!3268 = distinct !DISubprogram(name: "display_demo_description", scope: !3036, file: !3036, line: 245, type: !2930, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1817)
!3269 = !DILocation(line: 248, column: 2, scope: !3268)
!3270 = !DILocation(line: 250, column: 1, scope: !3268)
!3271 = distinct !DISubprogram(name: "init_objects", scope: !3036, file: !3036, line: 201, type: !2930, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3272)
!3272 = !{!3273}
!3273 = !DILocalVariable(name: "i", scope: !3274, file: !3036, line: 204, type: !109)
!3274 = distinct !DILexicalBlock(scope: !3271, file: !3036, line: 204, column: 2)
!3275 = !DILocation(line: 0, scope: !3274)
!3276 = !DILocation(line: 204, column: 2, scope: !3274)
!3277 = !DILocation(line: 208, column: 1, scope: !3271)
!3278 = !DILocation(line: 205, column: 3, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !3036, line: 204, column: 37)
!3280 = distinct !DILexicalBlock(scope: !3274, file: !3036, line: 204, column: 2)
!3281 = !DILocation(line: 204, column: 33, scope: !3280)
!3282 = !DILocation(line: 204, column: 20, scope: !3280)
!3283 = distinct !{!3283, !3276, !3284}
!3284 = !DILocation(line: 206, column: 2, scope: !3274)
!3285 = distinct !DISubprogram(name: "start_threads", scope: !3036, file: !3036, line: 210, type: !2930, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3286)
!3286 = !{!3287, !3289, !3292}
!3287 = !DILocalVariable(name: "i", scope: !3288, file: !3036, line: 216, type: !109)
!3288 = distinct !DILexicalBlock(scope: !3285, file: !3036, line: 216, column: 2)
!3289 = !DILocalVariable(name: "prio", scope: !3290, file: !3036, line: 217, type: !109)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !3036, line: 216, column: 37)
!3291 = distinct !DILexicalBlock(scope: !3288, file: !3036, line: 216, column: 2)
!3292 = !DILocalVariable(name: "tname", scope: !3290, file: !3036, line: 223, type: !225)
!3293 = !DILocation(line: 0, scope: !3288)
!3294 = !DILocation(line: 216, column: 2, scope: !3288)
!3295 = !DILocation(line: 233, column: 1, scope: !3285)
!3296 = !DILocation(line: 217, column: 14, scope: !3290)
!3297 = !{i32 -2, i32 -2147483644}
!3298 = !DILocation(line: 0, scope: !3290)
!3299 = !DILocation(line: 219, column: 20, scope: !3290)
!3300 = !DILocation(line: 219, column: 33, scope: !3290)
!3301 = !DILocation(line: 220, column: 18, scope: !3290)
!3302 = !DILocation(line: 219, column: 3, scope: !3290)
!3303 = !DILocation(line: 223, column: 3, scope: !3290)
!3304 = !DILocation(line: 223, column: 8, scope: !3290)
!3305 = !DILocation(line: 225, column: 3, scope: !3290)
!3306 = !DILocation(line: 226, column: 3, scope: !3290)
!3307 = !DILocation(line: 228, column: 3, scope: !3290)
!3308 = !DILocation(line: 229, column: 25, scope: !3290)
!3309 = !DILocation(line: 229, column: 3, scope: !3290)
!3310 = !DILocation(line: 231, column: 3, scope: !3290)
!3311 = !DILocation(line: 232, column: 2, scope: !3291)
!3312 = !DILocation(line: 216, column: 20, scope: !3291)
!3313 = distinct !{!3313, !3294, !3314}
!3314 = !DILocation(line: 232, column: 2, scope: !3288)
!3315 = distinct !DISubprogram(name: "new_prio", scope: !3036, file: !3036, line: 182, type: !282, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3316)
!3316 = !{!3317}
!3317 = !DILocalVariable(name: "phil", arg: 1, scope: !3315, file: !3036, line: 182, type: !109)
!3318 = !DILocation(line: 0, scope: !3315)
!3319 = !DILocation(line: 188, column: 9, scope: !3315)
!3320 = !DILocation(line: 188, column: 2, scope: !3315)
!3321 = distinct !DISubprogram(name: "k_thread_create", scope: !3105, file: !3105, line: 24, type: !3322, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3326)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!3233, !143, !3324, !243, !215, !108, !108, !108, !109, !110, !3108}
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !266)
!3326 = !{!3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}
!3327 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3321, file: !3105, line: 24, type: !143)
!3328 = !DILocalVariable(name: "stack", arg: 2, scope: !3321, file: !3105, line: 24, type: !3324)
!3329 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3321, file: !3105, line: 24, type: !243)
!3330 = !DILocalVariable(name: "entry", arg: 4, scope: !3321, file: !3105, line: 24, type: !215)
!3331 = !DILocalVariable(name: "p1", arg: 5, scope: !3321, file: !3105, line: 24, type: !108)
!3332 = !DILocalVariable(name: "p2", arg: 6, scope: !3321, file: !3105, line: 24, type: !108)
!3333 = !DILocalVariable(name: "p3", arg: 7, scope: !3321, file: !3105, line: 24, type: !108)
!3334 = !DILocalVariable(name: "prio", arg: 8, scope: !3321, file: !3105, line: 24, type: !109)
!3335 = !DILocalVariable(name: "options", arg: 9, scope: !3321, file: !3105, line: 24, type: !110)
!3336 = !DILocalVariable(name: "delay", arg: 10, scope: !3321, file: !3105, line: 24, type: !3108)
!3337 = !DILocation(line: 0, scope: !3321)
!3338 = !DILocation(line: 49, column: 2, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3321, file: !3105, line: 49, column: 2)
!3340 = !{i64 2151044813}
!3341 = !DILocation(line: 50, column: 9, scope: !3321)
!3342 = !DILocation(line: 50, column: 2, scope: !3321)
!3343 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3105, file: !3105, line: 391, type: !3344, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!109, !3233, !744}
!3346 = !{!3347, !3348}
!3347 = !DILocalVariable(name: "thread", arg: 1, scope: !3343, file: !3105, line: 391, type: !3233)
!3348 = !DILocalVariable(name: "str", arg: 2, scope: !3343, file: !3105, line: 391, type: !744)
!3349 = !DILocation(line: 0, scope: !3343)
!3350 = !DILocation(line: 400, column: 2, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3343, file: !3105, line: 400, column: 2)
!3352 = !{i64 2151046241}
!3353 = !DILocation(line: 401, column: 9, scope: !3343)
!3354 = !DILocation(line: 401, column: 2, scope: !3343)
!3355 = distinct !DISubprogram(name: "k_object_access_grant", scope: !3356, file: !3356, line: 24, type: !3357, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3356 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!3357 = !DISubroutineType(types: !3358)
!3358 = !{null, !13, !143}
!3359 = !{!3360, !3361}
!3360 = !DILocalVariable(name: "object", arg: 1, scope: !3355, file: !3356, line: 24, type: !13)
!3361 = !DILocalVariable(name: "thread", arg: 2, scope: !3355, file: !3356, line: 24, type: !143)
!3362 = !DILocation(line: 0, scope: !3355)
!3363 = !DILocation(line: 34, column: 2, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3355, file: !3356, line: 34, column: 2)
!3365 = !{i64 2150561233}
!3366 = !DILocation(line: 36, column: 1, scope: !3355)
!3367 = distinct !DISubprogram(name: "k_thread_start", scope: !3105, file: !3105, line: 205, type: !3368, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !3233}
!3370 = !{!3371}
!3371 = !DILocalVariable(name: "thread", arg: 1, scope: !3367, file: !3105, line: 205, type: !3233)
!3372 = !DILocation(line: 0, scope: !3367)
!3373 = !DILocation(line: 214, column: 2, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3367, file: !3105, line: 214, column: 2)
!3375 = !{i64 2151045493}
!3376 = !DILocation(line: 215, column: 2, scope: !3367)
!3377 = !DILocation(line: 216, column: 1, scope: !3367)
!3378 = distinct !DISubprogram(name: "k_mutex_init", scope: !3105, file: !3105, line: 911, type: !3147, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3379)
!3379 = !{!3380}
!3380 = !DILocalVariable(name: "mutex", arg: 1, scope: !3378, file: !3105, line: 911, type: !273)
!3381 = !DILocation(line: 0, scope: !3378)
!3382 = !DILocation(line: 919, column: 2, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !3105, line: 919, column: 2)
!3384 = !{i64 2151048317}
!3385 = !DILocation(line: 920, column: 9, scope: !3378)
!3386 = !DILocation(line: 920, column: 2, scope: !3378)
!3387 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !280, file: !280, line: 45, type: !282, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3388)
!3388 = !{!3389}
!3389 = !DILocalVariable(name: "c", arg: 1, scope: !3387, file: !280, line: 45, type: !109)
!3390 = !DILocation(line: 0, scope: !3387)
!3391 = !DILocation(line: 50, column: 2, scope: !3387)
!3392 = distinct !DISubprogram(name: "__printk_hook_install", scope: !280, file: !280, line: 63, type: !3393, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3395)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{null, !281}
!3395 = !{!3396}
!3396 = !DILocalVariable(name: "fn", arg: 1, scope: !3392, file: !280, line: 63, type: !281)
!3397 = !DILocation(line: 0, scope: !3392)
!3398 = !DILocation(line: 65, column: 12, scope: !3392)
!3399 = !DILocation(line: 66, column: 1, scope: !3392)
!3400 = distinct !DISubprogram(name: "__printk_get_hook", scope: !280, file: !280, line: 76, type: !3401, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !1817)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!108}
!3403 = !DILocation(line: 78, column: 9, scope: !3400)
!3404 = !DILocation(line: 78, column: 2, scope: !3400)
!3405 = distinct !DISubprogram(name: "vprintk", scope: !280, file: !280, line: 113, type: !3406, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3415)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null, !744, !3408}
!3408 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3409, line: 99, baseType: !3410)
!3409 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3409, line: 40, baseType: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !280, baseType: !3412)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3413)
!3413 = !{!3414}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3412, file: !280, line: 79, baseType: !108, size: 32)
!3415 = !{!3416, !3417, !3418}
!3416 = !DILocalVariable(name: "fmt", arg: 1, scope: !3405, file: !280, line: 113, type: !744)
!3417 = !DILocalVariable(name: "ap", arg: 2, scope: !3405, file: !280, line: 113, type: !3408)
!3418 = !DILocalVariable(name: "ctx", scope: !3419, file: !280, line: 121, type: !3421)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !280, line: 120, column: 27)
!3420 = distinct !DILexicalBlock(scope: !3405, file: !280, line: 120, column: 6)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !280, line: 81, size: 32, elements: !3422)
!3422 = !{!3423, !3424}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3421, file: !280, line: 85, baseType: !32, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3421, file: !280, line: 86, baseType: !3425, offset: 32)
!3425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !3426)
!3426 = !{!3427}
!3427 = !DISubrange(count: 0)
!3428 = !DILocation(line: 0, scope: !3405)
!3429 = !DILocation(line: 148, column: 3, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3420, file: !280, line: 138, column: 9)
!3431 = !DILocation(line: 155, column: 1, scope: !3405)
!3432 = distinct !DISubprogram(name: "char_out", scope: !280, file: !280, line: 107, type: !3433, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!109, !109, !108}
!3435 = !{!3436, !3437}
!3436 = !DILocalVariable(name: "c", arg: 1, scope: !3432, file: !280, line: 107, type: !109)
!3437 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3432, file: !280, line: 107, type: !108)
!3438 = !DILocation(line: 0, scope: !3432)
!3439 = !DILocation(line: 110, column: 9, scope: !3432)
!3440 = !DILocation(line: 110, column: 2, scope: !3432)
!3441 = distinct !DISubprogram(name: "cbvprintf", scope: !3442, file: !3442, line: 739, type: !3443, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3449)
!3442 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!109, !3445, !108, !744, !3408}
!3445 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3442, line: 297, baseType: !3446)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 32)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!109, null}
!3449 = !{!3450, !3451, !3452, !3453}
!3450 = !DILocalVariable(name: "out", arg: 1, scope: !3441, file: !3442, line: 739, type: !3445)
!3451 = !DILocalVariable(name: "ctx", arg: 2, scope: !3441, file: !3442, line: 739, type: !108)
!3452 = !DILocalVariable(name: "format", arg: 3, scope: !3441, file: !3442, line: 739, type: !744)
!3453 = !DILocalVariable(name: "ap", arg: 4, scope: !3441, file: !3442, line: 739, type: !3408)
!3454 = !DILocation(line: 0, scope: !3441)
!3455 = !DILocation(line: 741, column: 9, scope: !3441)
!3456 = !DILocation(line: 741, column: 2, scope: !3441)
!3457 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !280, file: !280, line: 157, type: !3458, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3460)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{null, !936, !243}
!3460 = !{!3461, !3462, !3463}
!3461 = !DILocalVariable(name: "c", arg: 1, scope: !3457, file: !280, line: 157, type: !936)
!3462 = !DILocalVariable(name: "n", arg: 2, scope: !3457, file: !280, line: 157, type: !243)
!3463 = !DILocalVariable(name: "i", scope: !3457, file: !280, line: 159, type: !243)
!3464 = !DILocation(line: 0, scope: !3457)
!3465 = !DILocation(line: 164, column: 16, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !280, line: 164, column: 2)
!3467 = distinct !DILexicalBlock(scope: !3457, file: !280, line: 164, column: 2)
!3468 = !DILocation(line: 164, column: 2, scope: !3467)
!3469 = !DILocation(line: 165, column: 3, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !280, line: 164, column: 26)
!3471 = !DILocation(line: 165, column: 13, scope: !3470)
!3472 = !DILocation(line: 164, column: 22, scope: !3466)
!3473 = distinct !{!3473, !3468, !3474}
!3474 = !DILocation(line: 166, column: 2, scope: !3467)
!3475 = !DILocation(line: 171, column: 1, scope: !3457)
!3476 = distinct !DISubprogram(name: "printk", scope: !280, file: !280, line: 203, type: !3477, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3479)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{null, !744, null}
!3479 = !{!3480, !3481}
!3480 = !DILocalVariable(name: "fmt", arg: 1, scope: !3476, file: !280, line: 203, type: !744)
!3481 = !DILocalVariable(name: "ap", scope: !3476, file: !280, line: 205, type: !3408)
!3482 = !DILocation(line: 0, scope: !3476)
!3483 = !DILocation(line: 205, column: 2, scope: !3476)
!3484 = !DILocation(line: 205, column: 10, scope: !3476)
!3485 = !DILocation(line: 207, column: 2, scope: !3476)
!3486 = !DILocation(line: 209, column: 2, scope: !3476)
!3487 = !DILocation(line: 211, column: 2, scope: !3476)
!3488 = !DILocation(line: 212, column: 1, scope: !3476)
!3489 = distinct !DISubprogram(name: "snprintk", scope: !280, file: !280, line: 239, type: !3490, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3492)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!109, !936, !243, !744, null}
!3492 = !{!3493, !3494, !3495, !3496, !3497}
!3493 = !DILocalVariable(name: "str", arg: 1, scope: !3489, file: !280, line: 239, type: !936)
!3494 = !DILocalVariable(name: "size", arg: 2, scope: !3489, file: !280, line: 239, type: !243)
!3495 = !DILocalVariable(name: "fmt", arg: 3, scope: !3489, file: !280, line: 239, type: !744)
!3496 = !DILocalVariable(name: "ap", scope: !3489, file: !280, line: 241, type: !3408)
!3497 = !DILocalVariable(name: "ret", scope: !3489, file: !280, line: 242, type: !109)
!3498 = !DILocation(line: 0, scope: !3489)
!3499 = !DILocation(line: 241, column: 2, scope: !3489)
!3500 = !DILocation(line: 241, column: 10, scope: !3489)
!3501 = !DILocation(line: 244, column: 2, scope: !3489)
!3502 = !DILocation(line: 245, column: 8, scope: !3489)
!3503 = !DILocation(line: 246, column: 2, scope: !3489)
!3504 = !DILocation(line: 249, column: 1, scope: !3489)
!3505 = !DILocation(line: 248, column: 2, scope: !3489)
!3506 = distinct !DISubprogram(name: "vsnprintk", scope: !280, file: !280, line: 251, type: !3507, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3509)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!109, !936, !243, !744, !3408}
!3509 = !{!3510, !3511, !3512, !3513, !3514}
!3510 = !DILocalVariable(name: "str", arg: 1, scope: !3506, file: !280, line: 251, type: !936)
!3511 = !DILocalVariable(name: "size", arg: 2, scope: !3506, file: !280, line: 251, type: !243)
!3512 = !DILocalVariable(name: "fmt", arg: 3, scope: !3506, file: !280, line: 251, type: !744)
!3513 = !DILocalVariable(name: "ap", arg: 4, scope: !3506, file: !280, line: 251, type: !3408)
!3514 = !DILocalVariable(name: "ctx", scope: !3506, file: !280, line: 253, type: !3515)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !280, line: 217, size: 96, elements: !3516)
!3516 = !{!3517, !3518, !3519}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3515, file: !280, line: 218, baseType: !936, size: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3515, file: !280, line: 219, baseType: !109, size: 32, offset: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3515, file: !280, line: 220, baseType: !109, size: 32, offset: 64)
!3520 = !DILocation(line: 0, scope: !3506)
!3521 = !DILocation(line: 253, column: 2, scope: !3506)
!3522 = !DILocation(line: 253, column: 21, scope: !3506)
!3523 = !DILocation(line: 253, column: 27, scope: !3506)
!3524 = !DILocation(line: 255, column: 2, scope: !3506)
!3525 = !DILocation(line: 257, column: 10, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3506, file: !280, line: 257, column: 6)
!3527 = !DILocation(line: 257, column: 22, scope: !3526)
!3528 = !DILocation(line: 257, column: 16, scope: !3526)
!3529 = !DILocation(line: 257, column: 6, scope: !3506)
!3530 = !DILocation(line: 258, column: 3, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !280, line: 257, column: 27)
!3532 = !DILocation(line: 258, column: 18, scope: !3531)
!3533 = !DILocation(line: 259, column: 2, scope: !3531)
!3534 = !DILocation(line: 262, column: 1, scope: !3506)
!3535 = !DILocation(line: 261, column: 2, scope: !3506)
!3536 = distinct !DISubprogram(name: "str_out", scope: !280, file: !280, line: 223, type: !3537, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !276, retainedNodes: !3540)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!109, !109, !3539}
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 32)
!3540 = !{!3541, !3542}
!3541 = !DILocalVariable(name: "c", arg: 1, scope: !3536, file: !280, line: 223, type: !109)
!3542 = !DILocalVariable(name: "ctx", arg: 2, scope: !3536, file: !280, line: 223, type: !3539)
!3543 = !DILocation(line: 0, scope: !3536)
!3544 = !DILocation(line: 225, column: 11, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3536, file: !280, line: 225, column: 6)
!3546 = !DILocation(line: 225, column: 15, scope: !3545)
!3547 = !DILocation(line: 0, scope: !3545)
!3548 = !DILocation(line: 225, column: 23, scope: !3545)
!3549 = !DILocation(line: 225, column: 45, scope: !3545)
!3550 = !DILocation(line: 225, column: 37, scope: !3545)
!3551 = !DILocation(line: 225, column: 6, scope: !3536)
!3552 = !DILocation(line: 226, column: 8, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3545, file: !280, line: 225, column: 50)
!3554 = !DILocation(line: 226, column: 13, scope: !3553)
!3555 = !DILocation(line: 227, column: 3, scope: !3553)
!3556 = !DILocation(line: 230, column: 29, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3536, file: !280, line: 230, column: 6)
!3558 = !DILocation(line: 230, column: 17, scope: !3557)
!3559 = !DILocation(line: 230, column: 6, scope: !3536)
!3560 = !DILocation(line: 231, column: 22, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3557, file: !280, line: 230, column: 34)
!3562 = !DILocation(line: 231, column: 3, scope: !3561)
!3563 = !DILocation(line: 231, column: 26, scope: !3561)
!3564 = !DILocation(line: 232, column: 2, scope: !3561)
!3565 = !DILocation(line: 233, column: 28, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3557, file: !280, line: 232, column: 9)
!3567 = !DILocation(line: 233, column: 22, scope: !3566)
!3568 = !DILocation(line: 233, column: 3, scope: !3566)
!3569 = !DILocation(line: 233, column: 26, scope: !3566)
!3570 = !DILocation(line: 237, column: 1, scope: !3536)
!3571 = distinct !DISubprogram(name: "z_rb_get_minmax", scope: !2295, file: !2295, line: 100, type: !3572, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3584)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!2300, !3574, !167}
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 32)
!3575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !3576)
!3576 = !{!3577, !3578, !3583}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3575, file: !157, line: 84, baseType: !2300, size: 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !3575, file: !157, line: 85, baseType: !3579, size: 32, offset: 32)
!3579 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !3580)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 32)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!754, !2300, !2300}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3575, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!3584 = !{!3585, !3586, !3587}
!3585 = !DILocalVariable(name: "tree", arg: 1, scope: !3571, file: !2295, line: 100, type: !3574)
!3586 = !DILocalVariable(name: "side", arg: 2, scope: !3571, file: !2295, line: 100, type: !167)
!3587 = !DILocalVariable(name: "n", scope: !3571, file: !2295, line: 102, type: !2300)
!3588 = !DILocation(line: 0, scope: !3571)
!3589 = !DILocation(line: 104, column: 17, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3571, file: !2295, line: 104, column: 2)
!3591 = !DILocation(line: 104, column: 7, scope: !3590)
!3592 = !DILocation(line: 0, scope: !3590)
!3593 = !DILocation(line: 104, column: 26, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3590, file: !2295, line: 104, column: 2)
!3595 = !DILocation(line: 104, column: 35, scope: !3594)
!3596 = !DILocation(line: 104, column: 39, scope: !3594)
!3597 = !DILocation(line: 104, column: 58, scope: !3594)
!3598 = !DILocation(line: 104, column: 2, scope: !3590)
!3599 = distinct !{!3599, !3598, !3600}
!3600 = !DILocation(line: 107, column: 2, scope: !3590)
!3601 = !DILocation(line: 108, column: 2, scope: !3571)
!3602 = distinct !DISubprogram(name: "get_child", scope: !2295, file: !2295, line: 21, type: !3603, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3605)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!2300, !2300, !167}
!3605 = !{!3606, !3607, !3608}
!3606 = !DILocalVariable(name: "n", arg: 1, scope: !3602, file: !2295, line: 21, type: !2300)
!3607 = !DILocalVariable(name: "side", arg: 2, scope: !3602, file: !2295, line: 21, type: !167)
!3608 = !DILocalVariable(name: "l", scope: !3602, file: !2295, line: 28, type: !22)
!3609 = !DILocation(line: 0, scope: !3602)
!3610 = !DILocation(line: 24, column: 11, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3602, file: !2295, line: 24, column: 6)
!3612 = !DILocation(line: 24, column: 6, scope: !3602)
!3613 = !DILocation(line: 25, column: 10, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3611, file: !2295, line: 24, column: 18)
!3615 = !DILocation(line: 25, column: 3, scope: !3614)
!3616 = !DILocation(line: 28, column: 28, scope: !3602)
!3617 = !DILocation(line: 28, column: 16, scope: !3602)
!3618 = !DILocation(line: 30, column: 4, scope: !3602)
!3619 = !DILocation(line: 31, column: 9, scope: !3602)
!3620 = !DILocation(line: 32, column: 1, scope: !3602)
!3621 = distinct !DISubprogram(name: "rb_insert", scope: !2295, file: !2295, line: 217, type: !3622, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{null, !3574, !2300}
!3624 = !{!3625, !3626, !3627, !3628, !3632, !3633, !3634}
!3625 = !DILocalVariable(name: "tree", arg: 1, scope: !3621, file: !2295, line: 217, type: !3574)
!3626 = !DILocalVariable(name: "node", arg: 2, scope: !3621, file: !2295, line: 217, type: !2300)
!3627 = !DILocalVariable(name: "__vla_expr0", scope: !3621, type: !32, flags: DIFlagArtificial)
!3628 = !DILocalVariable(name: "stack", scope: !3621, file: !2295, line: 232, type: !3629)
!3629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2300, elements: !3630)
!3630 = !{!3631}
!3631 = !DISubrange(count: !3627)
!3632 = !DILocalVariable(name: "stacksz", scope: !3621, file: !2295, line: 235, type: !109)
!3633 = !DILocalVariable(name: "parent", scope: !3621, file: !2295, line: 237, type: !2300)
!3634 = !DILocalVariable(name: "side", scope: !3621, file: !2295, line: 239, type: !167)
!3635 = !DILocation(line: 0, scope: !3621)
!3636 = !DILocation(line: 219, column: 2, scope: !3621)
!3637 = !DILocation(line: 220, column: 2, scope: !3621)
!3638 = !DILocation(line: 222, column: 12, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3621, file: !2295, line: 222, column: 6)
!3640 = !DILocation(line: 222, column: 17, scope: !3639)
!3641 = !DILocation(line: 222, column: 6, scope: !3621)
!3642 = !DILocation(line: 223, column: 14, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3639, file: !2295, line: 222, column: 26)
!3644 = !DILocation(line: 224, column: 9, scope: !3643)
!3645 = !DILocation(line: 224, column: 19, scope: !3643)
!3646 = !DILocation(line: 225, column: 3, scope: !3643)
!3647 = !DILocation(line: 226, column: 3, scope: !3643)
!3648 = !DILocation(line: 232, column: 29, scope: !3621)
!3649 = !DILocation(line: 232, column: 39, scope: !3621)
!3650 = !DILocation(line: 232, column: 2, scope: !3621)
!3651 = !DILocation(line: 232, column: 17, scope: !3621)
!3652 = !DILocation(line: 235, column: 16, scope: !3621)
!3653 = !DILocation(line: 237, column: 40, scope: !3621)
!3654 = !DILocation(line: 237, column: 26, scope: !3621)
!3655 = !DILocation(line: 239, column: 23, scope: !3621)
!3656 = !DILocation(line: 239, column: 17, scope: !3621)
!3657 = !DILocation(line: 241, column: 26, scope: !3621)
!3658 = !DILocation(line: 241, column: 2, scope: !3621)
!3659 = !DILocation(line: 242, column: 2, scope: !3621)
!3660 = !DILocation(line: 244, column: 15, scope: !3621)
!3661 = !DILocation(line: 244, column: 2, scope: !3621)
!3662 = !DILocation(line: 244, column: 19, scope: !3621)
!3663 = !DILocation(line: 245, column: 2, scope: !3621)
!3664 = !DILocation(line: 247, column: 22, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3621, file: !2295, line: 247, column: 6)
!3666 = !DILocation(line: 247, column: 14, scope: !3665)
!3667 = !DILocation(line: 247, column: 6, scope: !3621)
!3668 = !DILocation(line: 248, column: 19, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3665, file: !2295, line: 247, column: 33)
!3670 = !DILocation(line: 249, column: 2, scope: !3669)
!3671 = !DILocation(line: 252, column: 15, scope: !3621)
!3672 = !DILocation(line: 252, column: 13, scope: !3621)
!3673 = !DILocation(line: 254, column: 1, scope: !3621)
!3674 = distinct !DISubprogram(name: "set_child", scope: !2295, file: !2295, line: 34, type: !3675, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3677)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !2300, !167, !108}
!3677 = !{!3678, !3679, !3680, !3681, !3684}
!3678 = !DILocalVariable(name: "n", arg: 1, scope: !3674, file: !2295, line: 34, type: !2300)
!3679 = !DILocalVariable(name: "side", arg: 2, scope: !3674, file: !2295, line: 34, type: !167)
!3680 = !DILocalVariable(name: "val", arg: 3, scope: !3674, file: !2295, line: 34, type: !108)
!3681 = !DILocalVariable(name: "old", scope: !3682, file: !2295, line: 40, type: !22)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !2295, line: 39, column: 9)
!3683 = distinct !DILexicalBlock(scope: !3674, file: !2295, line: 37, column: 6)
!3684 = !DILocalVariable(name: "new", scope: !3682, file: !2295, line: 41, type: !22)
!3685 = !DILocation(line: 0, scope: !3674)
!3686 = !DILocation(line: 37, column: 11, scope: !3683)
!3687 = !DILocation(line: 37, column: 6, scope: !3674)
!3688 = !DILocation(line: 38, column: 3, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3683, file: !2295, line: 37, column: 18)
!3690 = !DILocation(line: 38, column: 18, scope: !3689)
!3691 = !DILocation(line: 39, column: 2, scope: !3689)
!3692 = !DILocation(line: 40, column: 31, scope: !3682)
!3693 = !DILocation(line: 40, column: 19, scope: !3682)
!3694 = !DILocation(line: 0, scope: !3682)
!3695 = !DILocation(line: 41, column: 19, scope: !3682)
!3696 = !DILocation(line: 43, column: 41, scope: !3682)
!3697 = !DILocation(line: 43, column: 34, scope: !3682)
!3698 = !DILocation(line: 43, column: 20, scope: !3682)
!3699 = !DILocation(line: 43, column: 18, scope: !3682)
!3700 = !DILocation(line: 45, column: 1, scope: !3674)
!3701 = distinct !DISubprogram(name: "set_color", scope: !2295, file: !2295, line: 63, type: !3702, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3704)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !2300, !2294}
!3704 = !{!3705, !3706, !3707}
!3705 = !DILocalVariable(name: "n", arg: 1, scope: !3701, file: !2295, line: 63, type: !2300)
!3706 = !DILocalVariable(name: "color", arg: 2, scope: !3701, file: !2295, line: 63, type: !2294)
!3707 = !DILocalVariable(name: "p", scope: !3701, file: !2295, line: 67, type: !3708)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!3709 = !DILocation(line: 0, scope: !3701)
!3710 = !DILocation(line: 67, column: 17, scope: !3701)
!3711 = !DILocation(line: 69, column: 8, scope: !3701)
!3712 = !DILocation(line: 69, column: 11, scope: !3701)
!3713 = !DILocation(line: 69, column: 21, scope: !3701)
!3714 = !DILocation(line: 69, column: 19, scope: !3701)
!3715 = !DILocation(line: 69, column: 5, scope: !3701)
!3716 = !DILocation(line: 70, column: 1, scope: !3701)
!3717 = distinct !DISubprogram(name: "find_and_stack", scope: !2295, file: !2295, line: 79, type: !3718, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3721)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{!109, !3574, !2300, !3720}
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3728}
!3722 = !DILocalVariable(name: "tree", arg: 1, scope: !3717, file: !2295, line: 79, type: !3574)
!3723 = !DILocalVariable(name: "node", arg: 2, scope: !3717, file: !2295, line: 79, type: !2300)
!3724 = !DILocalVariable(name: "stack", arg: 3, scope: !3717, file: !2295, line: 80, type: !3720)
!3725 = !DILocalVariable(name: "sz", scope: !3717, file: !2295, line: 82, type: !109)
!3726 = !DILocalVariable(name: "side", scope: !3727, file: !2295, line: 87, type: !167)
!3727 = distinct !DILexicalBlock(scope: !3717, file: !2295, line: 86, column: 32)
!3728 = !DILocalVariable(name: "ch", scope: !3727, file: !2295, line: 88, type: !2300)
!3729 = !DILocation(line: 0, scope: !3717)
!3730 = !DILocation(line: 84, column: 22, scope: !3717)
!3731 = !DILocation(line: 84, column: 14, scope: !3717)
!3732 = !DILocation(line: 87, column: 24, scope: !3727)
!3733 = !DILocation(line: 86, column: 23, scope: !3717)
!3734 = !DILocation(line: 86, column: 2, scope: !3717)
!3735 = !DILocation(line: 87, column: 18, scope: !3727)
!3736 = !DILocation(line: 0, scope: !3727)
!3737 = !DILocation(line: 88, column: 33, scope: !3727)
!3738 = !DILocation(line: 88, column: 23, scope: !3727)
!3739 = !DILocation(line: 90, column: 10, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3727, file: !2295, line: 90, column: 7)
!3741 = !DILocation(line: 90, column: 7, scope: !3727)
!3742 = !DILocation(line: 91, column: 12, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3740, file: !2295, line: 90, column: 19)
!3744 = !DILocation(line: 91, column: 4, scope: !3743)
!3745 = !DILocation(line: 91, column: 16, scope: !3743)
!3746 = !DILocation(line: 97, column: 2, scope: !3717)
!3747 = distinct !DISubprogram(name: "fix_extra_red", scope: !2295, file: !2295, line: 155, type: !3748, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !3720, !109}
!3750 = !{!3751, !3752, !3753, !3755, !3756, !3757, !3758, !3759}
!3751 = !DILocalVariable(name: "stack", arg: 1, scope: !3747, file: !2295, line: 155, type: !3720)
!3752 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3747, file: !2295, line: 155, type: !109)
!3753 = !DILocalVariable(name: "node", scope: !3754, file: !2295, line: 158, type: !2300)
!3754 = distinct !DILexicalBlock(scope: !3747, file: !2295, line: 157, column: 22)
!3755 = !DILocalVariable(name: "parent", scope: !3754, file: !2295, line: 159, type: !2300)
!3756 = !DILocalVariable(name: "grandparent", scope: !3754, file: !2295, line: 176, type: !2300)
!3757 = !DILocalVariable(name: "side", scope: !3754, file: !2295, line: 177, type: !167)
!3758 = !DILocalVariable(name: "aunt", scope: !3754, file: !2295, line: 178, type: !2300)
!3759 = !DILocalVariable(name: "parent_side", scope: !3754, file: !2295, line: 198, type: !167)
!3760 = !DILocation(line: 0, scope: !3747)
!3761 = !DILocation(line: 157, column: 17, scope: !3747)
!3762 = !DILocation(line: 157, column: 2, scope: !3747)
!3763 = !DILocation(line: 158, column: 39, scope: !3754)
!3764 = !DILocation(line: 158, column: 25, scope: !3754)
!3765 = !DILocation(line: 0, scope: !3754)
!3766 = !DILocation(line: 159, column: 41, scope: !3754)
!3767 = !DILocation(line: 159, column: 27, scope: !3754)
!3768 = !DILocation(line: 167, column: 7, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3754, file: !2295, line: 167, column: 7)
!3770 = !DILocation(line: 167, column: 7, scope: !3754)
!3771 = !DILocation(line: 176, column: 46, scope: !3754)
!3772 = !DILocation(line: 176, column: 32, scope: !3754)
!3773 = !DILocation(line: 177, column: 18, scope: !3754)
!3774 = !DILocation(line: 179, column: 13, scope: !3754)
!3775 = !DILocation(line: 179, column: 7, scope: !3754)
!3776 = !DILocation(line: 178, column: 25, scope: !3754)
!3777 = !DILocation(line: 181, column: 13, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3754, file: !2295, line: 181, column: 7)
!3779 = !DILocation(line: 181, column: 22, scope: !3778)
!3780 = !DILocation(line: 181, column: 25, scope: !3778)
!3781 = !DILocation(line: 181, column: 7, scope: !3754)
!3782 = !DILocation(line: 198, column: 25, scope: !3754)
!3783 = !DILocation(line: 200, column: 19, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3754, file: !2295, line: 200, column: 7)
!3785 = !DILocation(line: 200, column: 7, scope: !3754)
!3786 = !DILocation(line: 201, column: 4, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !2295, line: 200, column: 28)
!3788 = !DILocation(line: 202, column: 3, scope: !3787)
!3789 = !DILocation(line: 205, column: 3, scope: !3754)
!3790 = !DILocation(line: 206, column: 13, scope: !3754)
!3791 = !DILocation(line: 206, column: 3, scope: !3754)
!3792 = !DILocation(line: 182, column: 4, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3778, file: !2295, line: 181, column: 39)
!3794 = !DILocation(line: 183, column: 4, scope: !3793)
!3795 = !DILocation(line: 184, column: 4, scope: !3793)
!3796 = !DILocation(line: 215, column: 1, scope: !3747)
!3797 = distinct !DISubprogram(name: "is_black", scope: !2295, file: !2295, line: 53, type: !3798, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!754, !2300}
!3800 = !{!3801}
!3801 = !DILocalVariable(name: "n", arg: 1, scope: !3797, file: !2295, line: 53, type: !2300)
!3802 = !DILocation(line: 0, scope: !3797)
!3803 = !DILocation(line: 55, column: 9, scope: !3797)
!3804 = !DILocation(line: 55, column: 22, scope: !3797)
!3805 = !DILocation(line: 55, column: 2, scope: !3797)
!3806 = distinct !DISubprogram(name: "get_side", scope: !2295, file: !2295, line: 111, type: !3807, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3809)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!167, !2300, !2300}
!3809 = !{!3810, !3811}
!3810 = !DILocalVariable(name: "parent", arg: 1, scope: !3806, file: !2295, line: 111, type: !2300)
!3811 = !DILocalVariable(name: "child", arg: 2, scope: !3806, file: !2295, line: 111, type: !2300)
!3812 = !DILocation(line: 0, scope: !3806)
!3813 = !DILocation(line: 115, column: 10, scope: !3806)
!3814 = !DILocation(line: 115, column: 32, scope: !3806)
!3815 = !DILocation(line: 115, column: 9, scope: !3806)
!3816 = !DILocation(line: 115, column: 2, scope: !3806)
!3817 = distinct !DISubprogram(name: "is_red", scope: !2295, file: !2295, line: 58, type: !3798, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3818)
!3818 = !{!3819}
!3819 = !DILocalVariable(name: "n", arg: 1, scope: !3817, file: !2295, line: 58, type: !2300)
!3820 = !DILocation(line: 0, scope: !3817)
!3821 = !DILocation(line: 60, column: 9, scope: !3817)
!3822 = !DILocation(line: 60, column: 22, scope: !3817)
!3823 = !DILocation(line: 60, column: 2, scope: !3817)
!3824 = distinct !DISubprogram(name: "rotate", scope: !2295, file: !2295, line: 128, type: !3748, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3825)
!3825 = !{!3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833}
!3826 = !DILocalVariable(name: "stack", arg: 1, scope: !3824, file: !2295, line: 128, type: !3720)
!3827 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3824, file: !2295, line: 128, type: !109)
!3828 = !DILocalVariable(name: "parent", scope: !3824, file: !2295, line: 132, type: !2300)
!3829 = !DILocalVariable(name: "child", scope: !3824, file: !2295, line: 133, type: !2300)
!3830 = !DILocalVariable(name: "side", scope: !3824, file: !2295, line: 134, type: !167)
!3831 = !DILocalVariable(name: "a", scope: !3824, file: !2295, line: 135, type: !2300)
!3832 = !DILocalVariable(name: "b", scope: !3824, file: !2295, line: 136, type: !2300)
!3833 = !DILocalVariable(name: "grandparent", scope: !3834, file: !2295, line: 139, type: !2300)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !2295, line: 138, column: 20)
!3835 = distinct !DILexicalBlock(scope: !3824, file: !2295, line: 138, column: 6)
!3836 = !DILocation(line: 0, scope: !3824)
!3837 = !DILocation(line: 132, column: 40, scope: !3824)
!3838 = !DILocation(line: 132, column: 26, scope: !3824)
!3839 = !DILocation(line: 133, column: 39, scope: !3824)
!3840 = !DILocation(line: 133, column: 25, scope: !3824)
!3841 = !DILocation(line: 134, column: 17, scope: !3824)
!3842 = !{i8 0, i8 2}
!3843 = !DILocation(line: 135, column: 21, scope: !3824)
!3844 = !DILocation(line: 136, column: 38, scope: !3824)
!3845 = !DILocation(line: 136, column: 21, scope: !3824)
!3846 = !DILocation(line: 138, column: 14, scope: !3835)
!3847 = !DILocation(line: 138, column: 6, scope: !3824)
!3848 = !DILocation(line: 139, column: 46, scope: !3834)
!3849 = !DILocation(line: 139, column: 32, scope: !3834)
!3850 = !DILocation(line: 0, scope: !3834)
!3851 = !DILocation(line: 141, column: 26, scope: !3834)
!3852 = !DILocation(line: 141, column: 57, scope: !3834)
!3853 = !DILocation(line: 141, column: 3, scope: !3834)
!3854 = !DILocation(line: 142, column: 2, scope: !3834)
!3855 = !DILocation(line: 144, column: 25, scope: !3824)
!3856 = !DILocation(line: 144, column: 2, scope: !3824)
!3857 = !DILocation(line: 145, column: 43, scope: !3824)
!3858 = !DILocation(line: 145, column: 2, scope: !3824)
!3859 = !DILocation(line: 146, column: 26, scope: !3824)
!3860 = !DILocation(line: 146, column: 2, scope: !3824)
!3861 = !DILocation(line: 147, column: 21, scope: !3824)
!3862 = !DILocation(line: 148, column: 21, scope: !3824)
!3863 = !DILocation(line: 149, column: 1, scope: !3824)
!3864 = distinct !DISubprogram(name: "get_color", scope: !2295, file: !2295, line: 47, type: !3865, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!2294, !2300}
!3867 = !{!3868}
!3868 = !DILocalVariable(name: "n", arg: 1, scope: !3864, file: !2295, line: 47, type: !2300)
!3869 = !DILocation(line: 0, scope: !3864)
!3870 = !DILocation(line: 50, column: 21, scope: !3864)
!3871 = !DILocation(line: 50, column: 10, scope: !3864)
!3872 = !DILocation(line: 50, column: 37, scope: !3864)
!3873 = !DILocation(line: 50, column: 2, scope: !3864)
!3874 = distinct !DISubprogram(name: "rb_remove", scope: !2295, file: !2295, line: 367, type: !3622, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !3875)
!3875 = !{!3876, !3877, !3878, !3879, !3880, !3884, !3885, !3888, !3889, !3890, !3891, !3892, !3893}
!3876 = !DILocalVariable(name: "tree", arg: 1, scope: !3874, file: !2295, line: 367, type: !3574)
!3877 = !DILocalVariable(name: "node", arg: 2, scope: !3874, file: !2295, line: 367, type: !2300)
!3878 = !DILocalVariable(name: "tmp", scope: !3874, file: !2295, line: 369, type: !2300)
!3879 = !DILocalVariable(name: "__vla_expr0", scope: !3874, type: !32, flags: DIFlagArtificial)
!3880 = !DILocalVariable(name: "stack", scope: !3874, file: !2295, line: 373, type: !3881)
!3881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2300, elements: !3882)
!3882 = !{!3883}
!3883 = !DISubrange(count: !3879)
!3884 = !DILocalVariable(name: "stacksz", scope: !3874, file: !2295, line: 376, type: !109)
!3885 = !DILocalVariable(name: "stacksz0", scope: !3886, file: !2295, line: 388, type: !109)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !2295, line: 387, column: 70)
!3887 = distinct !DILexicalBlock(scope: !3874, file: !2295, line: 387, column: 6)
!3888 = !DILocalVariable(name: "hiparent", scope: !3886, file: !2295, line: 389, type: !2300)
!3889 = !DILocalVariable(name: "loparent", scope: !3886, file: !2295, line: 389, type: !2300)
!3890 = !DILocalVariable(name: "node2", scope: !3886, file: !2295, line: 390, type: !2300)
!3891 = !DILocalVariable(name: "ctmp", scope: !3886, file: !2295, line: 440, type: !2294)
!3892 = !DILocalVariable(name: "child", scope: !3874, file: !2295, line: 449, type: !2300)
!3893 = !DILocalVariable(name: "parent", scope: !3874, file: !2295, line: 466, type: !2300)
!3894 = !DILocation(line: 0, scope: !3874)
!3895 = !DILocation(line: 373, column: 29, scope: !3874)
!3896 = !DILocation(line: 373, column: 39, scope: !3874)
!3897 = !DILocation(line: 373, column: 2, scope: !3874)
!3898 = !DILocation(line: 373, column: 17, scope: !3874)
!3899 = !DILocation(line: 376, column: 16, scope: !3874)
!3900 = !DILocation(line: 378, column: 28, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3874, file: !2295, line: 378, column: 6)
!3902 = !DILocation(line: 378, column: 14, scope: !3901)
!3903 = !DILocation(line: 378, column: 11, scope: !3901)
!3904 = !DILocation(line: 378, column: 6, scope: !3874)
!3905 = !DILocation(line: 387, column: 7, scope: !3887)
!3906 = !DILocation(line: 387, column: 27, scope: !3887)
!3907 = !DILocation(line: 387, column: 36, scope: !3887)
!3908 = !DILocation(line: 387, column: 40, scope: !3887)
!3909 = !DILocation(line: 387, column: 60, scope: !3887)
!3910 = !DILocation(line: 387, column: 6, scope: !3874)
!3911 = !DILocation(line: 0, scope: !3886)
!3912 = !DILocation(line: 392, column: 23, scope: !3886)
!3913 = !DILocation(line: 392, column: 14, scope: !3886)
!3914 = !DILocation(line: 392, column: 44, scope: !3886)
!3915 = !DILocation(line: 392, column: 30, scope: !3886)
!3916 = !DILocation(line: 393, column: 3, scope: !3886)
!3917 = !DILocation(line: 393, column: 20, scope: !3886)
!3918 = !DILocation(line: 394, column: 10, scope: !3886)
!3919 = !DILocation(line: 394, column: 31, scope: !3886)
!3920 = !DILocation(line: 394, column: 3, scope: !3886)
!3921 = !DILocation(line: 396, column: 4, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3886, file: !2295, line: 394, column: 40)
!3923 = !DILocation(line: 396, column: 21, scope: !3922)
!3924 = distinct !{!3924, !3920, !3925}
!3925 = !DILocation(line: 397, column: 3, scope: !3886)
!3926 = !DILocation(line: 399, column: 28, scope: !3886)
!3927 = !DILocation(line: 399, column: 14, scope: !3886)
!3928 = !DILocation(line: 417, column: 16, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3886, file: !2295, line: 417, column: 7)
!3930 = !DILocation(line: 417, column: 7, scope: !3886)
!3931 = !DILocation(line: 418, column: 24, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3929, file: !2295, line: 417, column: 25)
!3933 = !DILocation(line: 418, column: 50, scope: !3932)
!3934 = !DILocation(line: 418, column: 4, scope: !3932)
!3935 = !DILocation(line: 419, column: 3, scope: !3932)
!3936 = !DILocation(line: 420, column: 10, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3929, file: !2295, line: 419, column: 10)
!3938 = !DILocation(line: 420, column: 15, scope: !3937)
!3939 = !DILocation(line: 423, column: 16, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3886, file: !2295, line: 423, column: 7)
!3941 = !DILocation(line: 423, column: 7, scope: !3886)
!3942 = !DILocation(line: 427, column: 24, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !2295, line: 426, column: 10)
!3944 = !DILocation(line: 427, column: 51, scope: !3943)
!3945 = !DILocation(line: 427, column: 4, scope: !3943)
!3946 = !DILocation(line: 428, column: 10, scope: !3943)
!3947 = !DILocation(line: 0, scope: !3940)
!3948 = !DILocation(line: 433, column: 24, scope: !3886)
!3949 = !DILocation(line: 433, column: 3, scope: !3886)
!3950 = !DILocation(line: 434, column: 3, scope: !3886)
!3951 = !DILocation(line: 436, column: 9, scope: !3886)
!3952 = !DILocation(line: 437, column: 25, scope: !3886)
!3953 = !DILocation(line: 437, column: 23, scope: !3886)
!3954 = !DILocation(line: 438, column: 22, scope: !3886)
!3955 = !DILocation(line: 440, column: 24, scope: !3886)
!3956 = !DILocation(line: 442, column: 19, scope: !3886)
!3957 = !{i32 0, i32 2}
!3958 = !DILocation(line: 442, column: 3, scope: !3886)
!3959 = !DILocation(line: 443, column: 3, scope: !3886)
!3960 = !DILocation(line: 444, column: 2, scope: !3886)
!3961 = !DILocation(line: 449, column: 25, scope: !3874)
!3962 = !DILocation(line: 451, column: 12, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3874, file: !2295, line: 451, column: 6)
!3964 = !DILocation(line: 451, column: 6, scope: !3874)
!3965 = !DILocation(line: 452, column: 11, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3963, file: !2295, line: 451, column: 21)
!3967 = !DILocation(line: 453, column: 2, scope: !3966)
!3968 = !DILocation(line: 456, column: 14, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3874, file: !2295, line: 456, column: 6)
!3970 = !DILocation(line: 456, column: 6, scope: !3874)
!3971 = !DILocation(line: 457, column: 9, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3969, file: !2295, line: 456, column: 19)
!3973 = !DILocation(line: 457, column: 14, scope: !3972)
!3974 = !DILocation(line: 458, column: 13, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !2295, line: 458, column: 7)
!3976 = !DILocation(line: 458, column: 7, scope: !3972)
!3977 = !DILocation(line: 459, column: 4, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !2295, line: 458, column: 22)
!3979 = !DILocation(line: 460, column: 3, scope: !3978)
!3980 = !DILocation(line: 461, column: 20, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3975, file: !2295, line: 460, column: 10)
!3982 = !DILocation(line: 466, column: 40, scope: !3874)
!3983 = !DILocation(line: 466, column: 26, scope: !3874)
!3984 = !DILocation(line: 473, column: 12, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3874, file: !2295, line: 473, column: 6)
!3986 = !DILocation(line: 473, column: 6, scope: !3874)
!3987 = !DILocation(line: 474, column: 7, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !2295, line: 474, column: 7)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !2295, line: 473, column: 21)
!3990 = !DILocation(line: 474, column: 7, scope: !3989)
!3991 = !DILocation(line: 475, column: 4, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !2295, line: 474, column: 23)
!3993 = !DILocation(line: 476, column: 3, scope: !3992)
!3994 = !DILocation(line: 478, column: 22, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3988, file: !2295, line: 476, column: 10)
!3996 = !DILocation(line: 478, column: 4, scope: !3995)
!3997 = !DILocation(line: 481, column: 21, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3985, file: !2295, line: 480, column: 9)
!3999 = !DILocation(line: 481, column: 45, scope: !3998)
!4000 = !DILocation(line: 481, column: 3, scope: !3998)
!4001 = !DILocation(line: 486, column: 3, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !2295, line: 486, column: 3)
!4003 = distinct !DILexicalBlock(scope: !3998, file: !2295, line: 486, column: 3)
!4004 = !DILocation(line: 486, column: 3, scope: !4003)
!4005 = !DILocation(line: 486, column: 3, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4002, file: !2295, line: 486, column: 3)
!4007 = !DILocation(line: 487, column: 7, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3998, file: !2295, line: 487, column: 7)
!4009 = !DILocation(line: 487, column: 20, scope: !4008)
!4010 = !DILocation(line: 487, column: 23, scope: !4008)
!4011 = !DILocation(line: 487, column: 7, scope: !3998)
!4012 = !DILocation(line: 488, column: 4, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !2295, line: 487, column: 38)
!4014 = !DILocation(line: 489, column: 3, scope: !4013)
!4015 = !DILocation(line: 493, column: 15, scope: !3874)
!4016 = !DILocation(line: 493, column: 8, scope: !3874)
!4017 = !DILocation(line: 493, column: 13, scope: !3874)
!4018 = !DILocation(line: 494, column: 1, scope: !3874)
!4019 = distinct !DISubprogram(name: "fix_missing_black", scope: !2295, file: !2295, line: 266, type: !4020, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !3720, !109, !2300}
!4022 = !{!4023, !4024, !4025, !4026, !4028, !4029, !4030, !4031, !4032, !4033, !4034}
!4023 = !DILocalVariable(name: "stack", arg: 1, scope: !4019, file: !2295, line: 266, type: !3720)
!4024 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4019, file: !2295, line: 266, type: !109)
!4025 = !DILocalVariable(name: "null_node", arg: 3, scope: !4019, file: !2295, line: 267, type: !2300)
!4026 = !DILocalVariable(name: "c0", scope: !4027, file: !2295, line: 271, type: !2300)
!4027 = distinct !DILexicalBlock(scope: !4019, file: !2295, line: 270, column: 22)
!4028 = !DILocalVariable(name: "c1", scope: !4027, file: !2295, line: 271, type: !2300)
!4029 = !DILocalVariable(name: "inner", scope: !4027, file: !2295, line: 271, type: !2300)
!4030 = !DILocalVariable(name: "outer", scope: !4027, file: !2295, line: 271, type: !2300)
!4031 = !DILocalVariable(name: "n", scope: !4027, file: !2295, line: 272, type: !2300)
!4032 = !DILocalVariable(name: "parent", scope: !4027, file: !2295, line: 273, type: !2300)
!4033 = !DILocalVariable(name: "n_side", scope: !4027, file: !2295, line: 274, type: !167)
!4034 = !DILocalVariable(name: "sib", scope: !4027, file: !2295, line: 275, type: !2300)
!4035 = !DILocation(line: 0, scope: !4019)
!4036 = !DILocation(line: 270, column: 17, scope: !4019)
!4037 = !DILocation(line: 270, column: 2, scope: !4019)
!4038 = !DILocation(line: 272, column: 36, scope: !4027)
!4039 = !DILocation(line: 272, column: 22, scope: !4027)
!4040 = !DILocation(line: 0, scope: !4027)
!4041 = !DILocation(line: 273, column: 41, scope: !4027)
!4042 = !DILocation(line: 273, column: 27, scope: !4027)
!4043 = !DILocation(line: 274, column: 20, scope: !4027)
!4044 = !DILocation(line: 276, column: 21, scope: !4027)
!4045 = !DILocation(line: 276, column: 13, scope: !4027)
!4046 = !DILocation(line: 275, column: 24, scope: !4027)
!4047 = !DILocation(line: 285, column: 8, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4027, file: !2295, line: 285, column: 7)
!4049 = !DILocation(line: 285, column: 7, scope: !4027)
!4050 = !DILocation(line: 286, column: 23, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !2295, line: 285, column: 23)
!4052 = !DILocation(line: 287, column: 4, scope: !4051)
!4053 = !DILocation(line: 288, column: 4, scope: !4051)
!4054 = !DILocation(line: 289, column: 4, scope: !4051)
!4055 = !DILocation(line: 290, column: 17, scope: !4051)
!4056 = !DILocation(line: 290, column: 4, scope: !4051)
!4057 = !DILocation(line: 290, column: 21, scope: !4051)
!4058 = !DILocation(line: 292, column: 13, scope: !4051)
!4059 = !DILocation(line: 293, column: 10, scope: !4051)
!4060 = !DILocation(line: 294, column: 3, scope: !4051)
!4061 = !DILocation(line: 301, column: 8, scope: !4027)
!4062 = !DILocation(line: 302, column: 8, scope: !4027)
!4063 = !DILocation(line: 303, column: 12, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4027, file: !2295, line: 303, column: 7)
!4065 = !DILocation(line: 303, column: 21, scope: !4064)
!4066 = !DILocation(line: 303, column: 24, scope: !4064)
!4067 = !DILocation(line: 303, column: 38, scope: !4064)
!4068 = !DILocation(line: 303, column: 46, scope: !4064)
!4069 = !DILocation(line: 303, column: 55, scope: !4064)
!4070 = !DILocation(line: 304, column: 6, scope: !4064)
!4071 = !DILocation(line: 303, column: 7, scope: !4027)
!4072 = !DILocation(line: 305, column: 10, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !2295, line: 305, column: 8)
!4074 = distinct !DILexicalBlock(scope: !4064, file: !2295, line: 304, column: 21)
!4075 = !DILocation(line: 305, column: 8, scope: !4074)
!4076 = !DILocation(line: 306, column: 5, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !2295, line: 305, column: 24)
!4078 = !DILocation(line: 307, column: 4, scope: !4077)
!4079 = !DILocation(line: 309, column: 4, scope: !4074)
!4080 = !DILocation(line: 310, column: 8, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !2295, line: 310, column: 8)
!4082 = !DILocation(line: 310, column: 8, scope: !4074)
!4083 = !DILocation(line: 320, column: 5, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !2295, line: 318, column: 11)
!4085 = !DILocation(line: 321, column: 5, scope: !4084)
!4086 = !DILocation(line: 331, column: 11, scope: !4027)
!4087 = !DILocation(line: 332, column: 16, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4027, file: !2295, line: 332, column: 7)
!4089 = !DILocation(line: 332, column: 25, scope: !4088)
!4090 = !DILocation(line: 332, column: 28, scope: !4088)
!4091 = !DILocation(line: 332, column: 7, scope: !4027)
!4092 = !DILocation(line: 358, column: 17, scope: !4027)
!4093 = !DILocation(line: 333, column: 12, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4088, file: !2295, line: 332, column: 44)
!4095 = !DILocation(line: 335, column: 18, scope: !4094)
!4096 = !DILocation(line: 335, column: 4, scope: !4094)
!4097 = !DILocation(line: 335, column: 23, scope: !4094)
!4098 = !DILocation(line: 336, column: 17, scope: !4094)
!4099 = !DILocation(line: 336, column: 4, scope: !4094)
!4100 = !DILocation(line: 336, column: 21, scope: !4094)
!4101 = !DILocation(line: 337, column: 4, scope: !4094)
!4102 = !DILocation(line: 338, column: 4, scope: !4094)
!4103 = !DILocation(line: 339, column: 4, scope: !4094)
!4104 = !DILocation(line: 344, column: 10, scope: !4094)
!4105 = !DILocation(line: 345, column: 12, scope: !4094)
!4106 = !DILocation(line: 346, column: 23, scope: !4094)
!4107 = !DILocation(line: 348, column: 3, scope: !4094)
!4108 = !DILocation(line: 355, column: 18, scope: !4027)
!4109 = !DILocation(line: 355, column: 3, scope: !4027)
!4110 = !DILocation(line: 356, column: 3, scope: !4027)
!4111 = !DILocation(line: 357, column: 3, scope: !4027)
!4112 = !DILocation(line: 358, column: 3, scope: !4027)
!4113 = !DILocation(line: 358, column: 22, scope: !4027)
!4114 = !DILocation(line: 359, column: 3, scope: !4027)
!4115 = !DILocation(line: 360, column: 9, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4027, file: !2295, line: 360, column: 7)
!4117 = !DILocation(line: 360, column: 7, scope: !4027)
!4118 = !DILocation(line: 361, column: 4, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4116, file: !2295, line: 360, column: 23)
!4120 = !DILocation(line: 362, column: 3, scope: !4119)
!4121 = !DILocation(line: 316, column: 12, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4081, file: !2295, line: 310, column: 26)
!4123 = !DILocation(line: 365, column: 1, scope: !4019)
!4124 = distinct !DISubprogram(name: "z_rb_walk", scope: !2295, file: !2295, line: 497, type: !4125, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4131)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{null, !2300, !4127, !108}
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_visit_t", file: !157, line: 93, baseType: !4128)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 32)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !2300, !108}
!4131 = !{!4132, !4133, !4134}
!4132 = !DILocalVariable(name: "node", arg: 1, scope: !4124, file: !2295, line: 497, type: !2300)
!4133 = !DILocalVariable(name: "visit_fn", arg: 2, scope: !4124, file: !2295, line: 497, type: !4127)
!4134 = !DILocalVariable(name: "cookie", arg: 3, scope: !4124, file: !2295, line: 497, type: !108)
!4135 = !DILocation(line: 0, scope: !4124)
!4136 = !DILocation(line: 499, column: 11, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4124, file: !2295, line: 499, column: 6)
!4138 = !DILocation(line: 499, column: 6, scope: !4124)
!4139 = !DILocation(line: 500, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4137, file: !2295, line: 499, column: 20)
!4141 = !DILocation(line: 500, column: 3, scope: !4140)
!4142 = !DILocation(line: 501, column: 3, scope: !4140)
!4143 = !DILocation(line: 502, column: 13, scope: !4140)
!4144 = !DILocation(line: 504, column: 1, scope: !4124)
!4145 = distinct !DISubprogram(name: "z_rb_child", scope: !2295, file: !2295, line: 507, type: !3603, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4146)
!4146 = !{!4147, !4148}
!4147 = !DILocalVariable(name: "node", arg: 1, scope: !4145, file: !2295, line: 507, type: !2300)
!4148 = !DILocalVariable(name: "side", arg: 2, scope: !4145, file: !2295, line: 507, type: !167)
!4149 = !DILocation(line: 0, scope: !4145)
!4150 = !DILocation(line: 509, column: 9, scope: !4145)
!4151 = !DILocation(line: 509, column: 2, scope: !4145)
!4152 = distinct !DISubprogram(name: "z_rb_is_black", scope: !2295, file: !2295, line: 512, type: !4153, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!109, !2300}
!4155 = !{!4156}
!4156 = !DILocalVariable(name: "node", arg: 1, scope: !4152, file: !2295, line: 512, type: !2300)
!4157 = !DILocation(line: 0, scope: !4152)
!4158 = !DILocation(line: 514, column: 9, scope: !4152)
!4159 = !DILocation(line: 514, column: 2, scope: !4152)
!4160 = distinct !DISubprogram(name: "rb_contains", scope: !2295, file: !2295, line: 517, type: !4161, scopeLine: 518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4163)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!754, !3574, !2300}
!4163 = !{!4164, !4165, !4166}
!4164 = !DILocalVariable(name: "tree", arg: 1, scope: !4160, file: !2295, line: 517, type: !3574)
!4165 = !DILocalVariable(name: "node", arg: 2, scope: !4160, file: !2295, line: 517, type: !2300)
!4166 = !DILocalVariable(name: "n", scope: !4160, file: !2295, line: 519, type: !2300)
!4167 = !DILocation(line: 0, scope: !4160)
!4168 = !DILocation(line: 519, column: 27, scope: !4160)
!4169 = !DILocation(line: 521, column: 12, scope: !4160)
!4170 = !DILocation(line: 521, column: 21, scope: !4160)
!4171 = !DILocation(line: 521, column: 2, scope: !4160)
!4172 = !DILocation(line: 522, column: 26, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4160, file: !2295, line: 521, column: 37)
!4174 = !DILocation(line: 522, column: 20, scope: !4173)
!4175 = !DILocation(line: 522, column: 7, scope: !4173)
!4176 = distinct !{!4176, !4171, !4177}
!4177 = !DILocation(line: 523, column: 2, scope: !4160)
!4178 = !DILocation(line: 525, column: 11, scope: !4160)
!4179 = !DILocation(line: 525, column: 2, scope: !4160)
!4180 = distinct !DISubprogram(name: "z_rb_foreach_next", scope: !2295, file: !2295, line: 557, type: !4181, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4189)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!2300, !3574, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 32)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !4185)
!4185 = !{!4186, !4187, !4188}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4184, file: !157, line: 156, baseType: !3720, size: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !4184, file: !157, line: 157, baseType: !799, size: 32, offset: 32)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4184, file: !157, line: 158, baseType: !1011, size: 32, offset: 64)
!4189 = !{!4190, !4191, !4192}
!4190 = !DILocalVariable(name: "tree", arg: 1, scope: !4180, file: !2295, line: 557, type: !3574)
!4191 = !DILocalVariable(name: "f", arg: 2, scope: !4180, file: !2295, line: 557, type: !4183)
!4192 = !DILocalVariable(name: "n", scope: !4180, file: !2295, line: 559, type: !2300)
!4193 = !DILocation(line: 0, scope: !4180)
!4194 = !DILocation(line: 561, column: 12, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4180, file: !2295, line: 561, column: 6)
!4196 = !DILocation(line: 561, column: 17, scope: !4195)
!4197 = !DILocation(line: 561, column: 6, scope: !4180)
!4198 = !DILocation(line: 568, column: 9, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4180, file: !2295, line: 568, column: 6)
!4200 = !DILocation(line: 568, column: 13, scope: !4199)
!4201 = !DILocation(line: 568, column: 6, scope: !4180)
!4202 = !DILocation(line: 569, column: 10, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4199, file: !2295, line: 568, column: 20)
!4204 = !DILocation(line: 569, column: 3, scope: !4203)
!4205 = !DILocation(line: 575, column: 19, scope: !4180)
!4206 = !DILocation(line: 575, column: 16, scope: !4180)
!4207 = !DILocation(line: 575, column: 6, scope: !4180)
!4208 = !DILocation(line: 576, column: 8, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4180, file: !2295, line: 576, column: 6)
!4210 = !DILocation(line: 576, column: 6, scope: !4180)
!4211 = !DILocation(line: 577, column: 10, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4209, file: !2295, line: 576, column: 17)
!4213 = !DILocation(line: 577, column: 3, scope: !4212)
!4214 = !DILocation(line: 585, column: 9, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4180, file: !2295, line: 585, column: 6)
!4216 = !DILocation(line: 585, column: 6, scope: !4215)
!4217 = !DILocation(line: 585, column: 25, scope: !4215)
!4218 = !DILocation(line: 585, column: 6, scope: !4180)
!4219 = !DILocation(line: 586, column: 19, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4215, file: !2295, line: 585, column: 32)
!4221 = !DILocation(line: 586, column: 10, scope: !4220)
!4222 = !DILocation(line: 586, column: 3, scope: !4220)
!4223 = !DILocation(line: 593, column: 17, scope: !4180)
!4224 = !DILocation(line: 593, column: 22, scope: !4180)
!4225 = !DILocation(line: 594, column: 9, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4180, file: !2295, line: 593, column: 53)
!4227 = distinct !{!4227, !4228, !4229}
!4228 = !DILocation(line: 593, column: 2, scope: !4180)
!4229 = !DILocation(line: 595, column: 2, scope: !4180)
!4230 = !DILocation(line: 593, column: 26, scope: !4180)
!4231 = !DILocation(line: 593, column: 45, scope: !4180)
!4232 = !DILocation(line: 593, column: 13, scope: !4180)
!4233 = !DILocation(line: 597, column: 8, scope: !4180)
!4234 = !DILocation(line: 598, column: 9, scope: !4180)
!4235 = !DILocation(line: 598, column: 25, scope: !4180)
!4236 = !DILocation(line: 599, column: 1, scope: !4180)
!4237 = distinct !DISubprogram(name: "stack_left_limb", scope: !2295, file: !2295, line: 533, type: !4238, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2291, retainedNodes: !4240)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!2300, !2300, !4183}
!4240 = !{!4241, !4242}
!4241 = !DILocalVariable(name: "n", arg: 1, scope: !4237, file: !2295, line: 533, type: !2300)
!4242 = !DILocalVariable(name: "f", arg: 2, scope: !4237, file: !2295, line: 534, type: !4183)
!4243 = !DILocation(line: 0, scope: !4237)
!4244 = !DILocation(line: 536, column: 5, scope: !4237)
!4245 = !DILocation(line: 536, column: 8, scope: !4237)
!4246 = !DILocation(line: 537, column: 5, scope: !4237)
!4247 = !DILocation(line: 537, column: 2, scope: !4237)
!4248 = !DILocation(line: 537, column: 19, scope: !4237)
!4249 = !DILocation(line: 538, column: 5, scope: !4237)
!4250 = !DILocation(line: 538, column: 16, scope: !4237)
!4251 = !DILocation(line: 538, column: 2, scope: !4237)
!4252 = !DILocation(line: 538, column: 21, scope: !4237)
!4253 = !DILocation(line: 540, column: 14, scope: !4237)
!4254 = !DILocation(line: 540, column: 32, scope: !4237)
!4255 = !DILocation(line: 540, column: 2, scope: !4237)
!4256 = !DILocation(line: 541, column: 9, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4237, file: !2295, line: 540, column: 41)
!4258 = !DILocation(line: 542, column: 6, scope: !4257)
!4259 = !DILocation(line: 542, column: 3, scope: !4257)
!4260 = !DILocation(line: 542, column: 20, scope: !4257)
!4261 = !DILocation(line: 543, column: 6, scope: !4257)
!4262 = !DILocation(line: 543, column: 17, scope: !4257)
!4263 = !DILocation(line: 543, column: 3, scope: !4257)
!4264 = !DILocation(line: 543, column: 22, scope: !4257)
!4265 = distinct !{!4265, !4255, !4266}
!4266 = !DILocation(line: 544, column: 2, scope: !4237)
!4267 = !DILocation(line: 546, column: 12, scope: !4237)
!4268 = !DILocation(line: 546, column: 21, scope: !4237)
!4269 = !DILocation(line: 546, column: 9, scope: !4237)
!4270 = !DILocation(line: 546, column: 2, scope: !4237)
!4271 = distinct !DISubprogram(name: "z_thread_entry", scope: !4272, file: !4272, line: 30, type: !4273, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !4275)
!4272 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4273 = !DISubroutineType(types: !4274)
!4274 = !{null, !215, !108, !108, !108}
!4275 = !{!4276, !4277, !4278, !4279}
!4276 = !DILocalVariable(name: "entry", arg: 1, scope: !4271, file: !4272, line: 30, type: !215)
!4277 = !DILocalVariable(name: "p1", arg: 2, scope: !4271, file: !4272, line: 31, type: !108)
!4278 = !DILocalVariable(name: "p2", arg: 3, scope: !4271, file: !4272, line: 31, type: !108)
!4279 = !DILocalVariable(name: "p3", arg: 4, scope: !4271, file: !4272, line: 31, type: !108)
!4280 = !DILocation(line: 0, scope: !4271)
!4281 = !DILocation(line: 36, column: 2, scope: !4271)
!4282 = !DILocation(line: 38, column: 17, scope: !4271)
!4283 = !DILocation(line: 38, column: 2, scope: !4271)
!4284 = !DILocation(line: 45, column: 2, scope: !4271)
!4285 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !4286, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !1817)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!4288}
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !4289)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 32)
!4290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !4291)
!4291 = !{!4292, !4350, !4362, !4363, !4364, !4371, !4372, !4373, !4374, !4389}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4290, file: !145, line: 247, baseType: !4293, size: 384)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !4294)
!4294 = !{!4295, !4319, !4326, !4327, !4328, !4337, !4338, !4339}
!4295 = !DIDerivedType(tag: DW_TAG_member, scope: !4293, file: !145, line: 60, baseType: !4296, size: 64)
!4296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4293, file: !145, line: 60, size: 64, elements: !4297)
!4297 = !{!4298, !4313}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4296, file: !145, line: 61, baseType: !4299, size: 64)
!4299 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !4300)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !4301)
!4301 = !{!4302, !4308}
!4302 = !DIDerivedType(tag: DW_TAG_member, scope: !4300, file: !128, line: 38, baseType: !4303, size: 32)
!4303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4300, file: !128, line: 38, size: 32, elements: !4304)
!4304 = !{!4305, !4307}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4303, file: !128, line: 39, baseType: !4306, size: 32)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 32)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4303, file: !128, line: 40, baseType: !4306, size: 32)
!4308 = !DIDerivedType(tag: DW_TAG_member, scope: !4300, file: !128, line: 42, baseType: !4309, size: 32, offset: 32)
!4309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4300, file: !128, line: 42, size: 32, elements: !4310)
!4310 = !{!4311, !4312}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4309, file: !128, line: 43, baseType: !4306, size: 32)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4309, file: !128, line: 44, baseType: !4306, size: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4296, file: !145, line: 62, baseType: !4314, size: 64)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !4315)
!4315 = !{!4316}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4314, file: !157, line: 50, baseType: !4317, size: 64)
!4317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4318, size: 64, elements: !162)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 32)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4293, file: !145, line: 68, baseType: !4320, size: 32, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 32)
!4321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !4322)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !4323)
!4323 = !{!4324}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4322, file: !123, line: 232, baseType: !4325, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !4300)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4293, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4293, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!4328 = !DIDerivedType(tag: DW_TAG_member, scope: !4293, file: !145, line: 90, baseType: !4329, size: 16, offset: 112)
!4329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4293, file: !145, line: 90, size: 16, elements: !4330)
!4330 = !{!4331, !4336}
!4331 = !DIDerivedType(tag: DW_TAG_member, scope: !4329, file: !145, line: 91, baseType: !4332, size: 16)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4329, file: !145, line: 91, size: 16, elements: !4333)
!4333 = !{!4334, !4335}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4332, file: !145, line: 96, baseType: !177, size: 8)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4332, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4329, file: !145, line: 100, baseType: !181, size: 16)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4293, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4293, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4293, file: !145, line: 131, baseType: !4340, size: 192, offset: 192)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !4341)
!4341 = !{!4342, !4343, !4349}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4340, file: !123, line: 245, baseType: !4299, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4340, file: !123, line: 246, baseType: !4344, size: 32, offset: 64)
!4344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !4345)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 32)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{null, !4348}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4340, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4290, file: !145, line: 250, baseType: !4351, size: 288, offset: 384)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !4352)
!4352 = !{!4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4351, file: !198, line: 26, baseType: !110, size: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4351, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4351, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4351, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4351, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4351, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4351, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4351, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4351, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4290, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4290, file: !145, line: 256, baseType: !4321, size: 64, offset: 704)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4290, file: !145, line: 271, baseType: !4365, size: 128, offset: 768)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !4366)
!4366 = !{!4367, !4368, !4369, !4370}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !4365, file: !145, line: 35, baseType: !215, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !4365, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !4365, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !4365, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !4290, file: !145, line: 274, baseType: !4289, size: 32, offset: 896)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4290, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4290, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4290, file: !145, line: 325, baseType: !4375, size: 32, offset: 1216)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 32)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !4377)
!4377 = !{!4378, !4384, !4385}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4376, file: !119, line: 5074, baseType: !4379, size: 96)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !4380)
!4380 = !{!4381, !4382, !4383}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4379, file: !236, line: 57, baseType: !239, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4379, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4379, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4376, file: !119, line: 5075, baseType: !4321, size: 64, offset: 96)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4376, file: !119, line: 5076, baseType: !4386, size: 32, offset: 160)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !4387)
!4387 = !{!4388}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4386, file: !248, line: 52, baseType: !22, size: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4290, file: !145, line: 343, baseType: !4390, size: 64, offset: 1248)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !4391)
!4391 = !{!4392, !4393}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4390, file: !198, line: 63, baseType: !110, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4390, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!4394 = !DILocation(line: 535, column: 9, scope: !4285)
!4395 = !DILocation(line: 535, column: 2, scope: !4285)
!4396 = distinct !DISubprogram(name: "k_thread_abort", scope: !3105, file: !3105, line: 188, type: !4397, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !4399)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{null, !4288}
!4399 = !{!4400}
!4400 = !DILocalVariable(name: "thread", arg: 1, scope: !4396, file: !3105, line: 188, type: !4288)
!4401 = !DILocation(line: 0, scope: !4396)
!4402 = !DILocation(line: 197, column: 2, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4396, file: !3105, line: 197, column: 2)
!4404 = !{i64 2151040568}
!4405 = !DILocation(line: 198, column: 2, scope: !4396)
!4406 = !DILocation(line: 199, column: 1, scope: !4396)
!4407 = distinct !DISubprogram(name: "z_current_get", scope: !3105, file: !3105, line: 173, type: !4286, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !1817)
!4408 = !DILocation(line: 180, column: 2, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4407, file: !3105, line: 180, column: 2)
!4410 = !{i64 2151040500}
!4411 = !DILocation(line: 181, column: 9, scope: !4407)
!4412 = !DILocation(line: 181, column: 2, scope: !4407)
!4413 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2311, file: !2311, line: 1338, type: !4414, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4422)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!109, !3445, !108, !744, !4416, !110}
!4416 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3409, line: 99, baseType: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3409, line: 40, baseType: !4418)
!4418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2311, baseType: !4419)
!4419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4420)
!4420 = !{!4421}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4419, file: !2311, baseType: !108, size: 32)
!4422 = !{!4423, !4424, !4425, !4426, !4427, !4428, !4432, !4433, !4434, !4436, !4441, !4486, !4489, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4501, !4502, !4503, !4507, !4510, !4512, !4515, !4516, !4517, !4522, !4528, !4531, !4535, !4541, !4545, !4548, !4550, !4553}
!4423 = !DILocalVariable(name: "out", arg: 1, scope: !4413, file: !2311, line: 1338, type: !3445)
!4424 = !DILocalVariable(name: "ctx", arg: 2, scope: !4413, file: !2311, line: 1338, type: !108)
!4425 = !DILocalVariable(name: "fp", arg: 3, scope: !4413, file: !2311, line: 1338, type: !744)
!4426 = !DILocalVariable(name: "ap", arg: 4, scope: !4413, file: !2311, line: 1339, type: !4416)
!4427 = !DILocalVariable(name: "flags", arg: 5, scope: !4413, file: !2311, line: 1339, type: !110)
!4428 = !DILocalVariable(name: "buf", scope: !4413, file: !2311, line: 1341, type: !4429)
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 176, elements: !4430)
!4430 = !{!4431}
!4431 = !DISubrange(count: 22)
!4432 = !DILocalVariable(name: "count", scope: !4413, file: !2311, line: 1342, type: !243)
!4433 = !DILocalVariable(name: "sint", scope: !4413, file: !2311, line: 1343, type: !2330)
!4434 = !DILocalVariable(name: "tagged_ap", scope: !4413, file: !2311, line: 1345, type: !4435)
!4435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!4436 = !DILocalVariable(name: "rc", scope: !4437, file: !2311, line: 1377, type: !109)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !2311, line: 1377, column: 4)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !2311, line: 1376, column: 19)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1376, column: 7)
!4440 = distinct !DILexicalBlock(scope: !4413, file: !2311, line: 1375, column: 19)
!4441 = !DILocalVariable(name: "state", scope: !4440, file: !2311, line: 1395, type: !4442)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4413, file: !2311, line: 1392, size: 192, elements: !4443)
!4443 = !{!4444, !4454}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4442, file: !2311, line: 1393, baseType: !4445, size: 64)
!4445 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2311, line: 166, size: 64, elements: !4446)
!4446 = !{!4447, !4448, !4449, !4451, !4453}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4445, file: !2311, line: 168, baseType: !2330, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4445, file: !2311, line: 171, baseType: !2333, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4445, file: !2311, line: 174, baseType: !4450, size: 64)
!4450 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4445, file: !2311, line: 177, baseType: !4452, size: 64)
!4452 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4445, file: !2311, line: 180, baseType: !108, size: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4442, file: !2311, line: 1394, baseType: !4455, size: 96, offset: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2311, line: 189, size: 96, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4481}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4455, file: !2311, line: 191, baseType: !754, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4455, file: !2311, line: 194, baseType: !754, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4455, file: !2311, line: 197, baseType: !754, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4455, file: !2311, line: 200, baseType: !754, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4455, file: !2311, line: 203, baseType: !754, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4455, file: !2311, line: 206, baseType: !754, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4455, file: !2311, line: 209, baseType: !754, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4455, file: !2311, line: 212, baseType: !754, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4455, file: !2311, line: 219, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4455, file: !2311, line: 222, baseType: !754, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4455, file: !2311, line: 229, baseType: !754, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4455, file: !2311, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4455, file: !2311, line: 238, baseType: !754, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4455, file: !2311, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4455, file: !2311, line: 244, baseType: !754, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4455, file: !2311, line: 247, baseType: !754, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4455, file: !2311, line: 252, baseType: !754, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4455, file: !2311, line: 257, baseType: !754, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4455, file: !2311, line: 260, baseType: !168, size: 8, offset: 24)
!4476 = !DIDerivedType(tag: DW_TAG_member, scope: !4455, file: !2311, line: 262, baseType: !4477, size: 32, offset: 32)
!4477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4455, file: !2311, line: 262, size: 32, elements: !4478)
!4478 = !{!4479, !4480}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4477, file: !2311, line: 267, baseType: !109, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4477, file: !2311, line: 289, baseType: !109, size: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, scope: !4455, file: !2311, line: 292, baseType: !4482, size: 32, offset: 64)
!4482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4455, file: !2311, line: 292, size: 32, elements: !4483)
!4483 = !{!4484, !4485}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4482, file: !2311, line: 297, baseType: !109, size: 32)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4482, file: !2311, line: 306, baseType: !109, size: 32)
!4486 = !DILocalVariable(name: "conv", scope: !4440, file: !2311, line: 1400, type: !4487)
!4487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4488)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 32)
!4489 = !DILocalVariable(name: "value", scope: !4440, file: !2311, line: 1401, type: !4490)
!4490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4491)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 32)
!4492 = !DILocalVariable(name: "sp", scope: !4440, file: !2311, line: 1402, type: !744)
!4493 = !DILocalVariable(name: "width", scope: !4440, file: !2311, line: 1403, type: !109)
!4494 = !DILocalVariable(name: "precision", scope: !4440, file: !2311, line: 1404, type: !109)
!4495 = !DILocalVariable(name: "bps", scope: !4440, file: !2311, line: 1405, type: !744)
!4496 = !DILocalVariable(name: "bpe", scope: !4440, file: !2311, line: 1406, type: !744)
!4497 = !DILocalVariable(name: "sign", scope: !4440, file: !2311, line: 1407, type: !226)
!4498 = !DILocalVariable(name: "arg", scope: !4499, file: !2311, line: 1432, type: !109)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2311, line: 1431, column: 24)
!4500 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1431, column: 7)
!4501 = !DILocalVariable(name: "specifier_cat", scope: !4440, file: !2311, line: 1468, type: !2310)
!4502 = !DILocalVariable(name: "length_mod", scope: !4440, file: !2311, line: 1470, type: !2318)
!4503 = !DILocalVariable(name: "rc", scope: !4504, file: !2311, line: 1575, type: !109)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !2311, line: 1575, column: 4)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !2311, line: 1574, column: 43)
!4506 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1574, column: 7)
!4507 = !DILocalVariable(name: "rc", scope: !4508, file: !2311, line: 1584, type: !109)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1584, column: 4)
!4509 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1582, column: 28)
!4510 = !DILocalVariable(name: "len", scope: !4511, file: !2311, line: 1589, type: !243)
!4511 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1586, column: 13)
!4512 = !DILocalVariable(name: "len", scope: !4513, file: !2311, line: 1641, type: !243)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !2311, line: 1640, column: 24)
!4514 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1640, column: 8)
!4515 = !DILocalVariable(name: "nj_len", scope: !4440, file: !2311, line: 1722, type: !243)
!4516 = !DILocalVariable(name: "pad_len", scope: !4440, file: !2311, line: 1723, type: !109)
!4517 = !DILocalVariable(name: "pad", scope: !4518, file: !2311, line: 1751, type: !226)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2311, line: 1750, column: 26)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2311, line: 1750, column: 8)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2311, line: 1747, column: 18)
!4521 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1747, column: 7)
!4522 = !DILocalVariable(name: "rc", scope: !4523, file: !2311, line: 1758, type: !109)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2311, line: 1758, column: 7)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2311, line: 1757, column: 21)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !2311, line: 1757, column: 10)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !2311, line: 1756, column: 26)
!4527 = distinct !DILexicalBlock(scope: !4518, file: !2311, line: 1756, column: 9)
!4528 = !DILocalVariable(name: "rc", scope: !4529, file: !2311, line: 1765, type: !109)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !2311, line: 1765, column: 6)
!4530 = distinct !DILexicalBlock(scope: !4518, file: !2311, line: 1764, column: 25)
!4531 = !DILocalVariable(name: "rc", scope: !4532, file: !2311, line: 1774, type: !109)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2311, line: 1774, column: 4)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2311, line: 1773, column: 18)
!4534 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1773, column: 7)
!4535 = !DILocalVariable(name: "rc", scope: !4536, file: !2311, line: 1819, type: !109)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2311, line: 1819, column: 5)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2311, line: 1818, column: 44)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2311, line: 1818, column: 8)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2311, line: 1817, column: 10)
!4540 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1777, column: 7)
!4541 = !DILocalVariable(name: "rc", scope: !4542, file: !2311, line: 1823, type: !109)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2311, line: 1823, column: 5)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2311, line: 1822, column: 26)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !2311, line: 1822, column: 8)
!4545 = !DILocalVariable(name: "rc", scope: !4546, file: !2311, line: 1828, type: !109)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2311, line: 1828, column: 5)
!4547 = distinct !DILexicalBlock(scope: !4539, file: !2311, line: 1827, column: 26)
!4548 = !DILocalVariable(name: "rc", scope: !4549, file: !2311, line: 1831, type: !109)
!4549 = distinct !DILexicalBlock(scope: !4539, file: !2311, line: 1831, column: 4)
!4550 = !DILocalVariable(name: "rc", scope: !4551, file: !2311, line: 1836, type: !109)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2311, line: 1836, column: 4)
!4552 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1835, column: 21)
!4553 = !DILabel(scope: !4509, name: "prec_int_pad0", file: !2311, line: 1634)
!4554 = !DILocation(line: 0, scope: !4413)
!4555 = !DILocation(line: 1341, column: 2, scope: !4413)
!4556 = !DILocation(line: 1341, column: 7, scope: !4413)
!4557 = !DILocation(line: 1375, column: 2, scope: !4413)
!4558 = !DILocation(line: 1342, column: 9, scope: !4413)
!4559 = !DILocation(line: 1375, column: 9, scope: !4413)
!4560 = !DILocation(line: 1377, column: 4, scope: !4437)
!4561 = !DILocation(line: 0, scope: !4437)
!4562 = !DILocation(line: 1377, column: 4, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4437, file: !2311, line: 1377, column: 4)
!4564 = distinct !{!4564, !4557, !4565}
!4565 = !DILocation(line: 1839, column: 2, scope: !4413)
!4566 = !DILocation(line: 1392, column: 3, scope: !4440)
!4567 = !DILocation(line: 1395, column: 5, scope: !4440)
!4568 = !DILocation(line: 0, scope: !4440)
!4569 = !DILocation(line: 1409, column: 8, scope: !4440)
!4570 = !DILocation(line: 1414, column: 13, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1414, column: 7)
!4572 = !DILocation(line: 1414, column: 7, scope: !4440)
!4573 = !DILocation(line: 1415, column: 12, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !2311, line: 1414, column: 25)
!4575 = !DILocation(line: 1417, column: 14, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4574, file: !2311, line: 1417, column: 8)
!4577 = !DILocation(line: 1417, column: 8, scope: !4574)
!4578 = !DILocation(line: 1418, column: 21, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4576, file: !2311, line: 1417, column: 19)
!4580 = !DILocation(line: 1419, column: 13, scope: !4579)
!4581 = !DILocation(line: 1420, column: 4, scope: !4579)
!4582 = !DILocation(line: 1421, column: 20, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4571, file: !2311, line: 1421, column: 14)
!4584 = !DILocation(line: 1421, column: 14, scope: !4571)
!4585 = !DILocation(line: 1431, column: 13, scope: !4500)
!4586 = !DILocation(line: 1431, column: 7, scope: !4440)
!4587 = !DILocation(line: 1432, column: 14, scope: !4499)
!4588 = !DILocation(line: 0, scope: !4499)
!4589 = !DILocation(line: 1434, column: 12, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4499, file: !2311, line: 1434, column: 8)
!4591 = !DILocation(line: 1434, column: 8, scope: !4499)
!4592 = !DILocation(line: 1435, column: 24, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !2311, line: 1434, column: 17)
!4594 = !DILocation(line: 1436, column: 4, scope: !4593)
!4595 = !DILocation(line: 1439, column: 20, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4500, file: !2311, line: 1439, column: 14)
!4597 = !DILocation(line: 1439, column: 14, scope: !4500)
!4598 = !DILocation(line: 1469, column: 37, scope: !4440)
!4599 = !DILocation(line: 1448, column: 20, scope: !4440)
!4600 = !DILocation(line: 1449, column: 22, scope: !4440)
!4601 = !DILocation(line: 1471, column: 34, scope: !4440)
!4602 = !DILocation(line: 1478, column: 7, scope: !4440)
!4603 = !DILocation(line: 1479, column: 4, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !2311, line: 1478, column: 40)
!4605 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1478, column: 7)
!4606 = !DILocation(line: 1484, column: 19, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !2311, line: 1479, column: 24)
!4608 = !DILocation(line: 1484, column: 17, scope: !4607)
!4609 = !DILocation(line: 1485, column: 5, scope: !4607)
!4610 = !DILocation(line: 1492, column: 20, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !2311, line: 1491, column: 12)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !2311, line: 1487, column: 9)
!4613 = !DILocation(line: 1492, column: 18, scope: !4611)
!4614 = !DILocation(line: 1494, column: 5, scope: !4607)
!4615 = !DILocation(line: 1497, column: 23, scope: !4607)
!4616 = !DILocation(line: 1496, column: 17, scope: !4607)
!4617 = !DILocation(line: 1498, column: 5, scope: !4607)
!4618 = !DILocation(line: 1501, column: 23, scope: !4607)
!4619 = !DILocation(line: 1500, column: 17, scope: !4607)
!4620 = !DILocation(line: 1502, column: 5, scope: !4607)
!4621 = !DILocation(line: 1513, column: 23, scope: !4607)
!4622 = !DILocation(line: 1513, column: 6, scope: !4607)
!4623 = !DILocation(line: 1512, column: 17, scope: !4607)
!4624 = !DILocation(line: 1514, column: 5, scope: !4607)
!4625 = !DILocation(line: 0, scope: !4607)
!4626 = !DILocation(line: 1516, column: 8, scope: !4604)
!4627 = !DILocation(line: 1517, column: 19, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2311, line: 1516, column: 33)
!4629 = distinct !DILexicalBlock(scope: !4604, file: !2311, line: 1516, column: 8)
!4630 = !DILocation(line: 1517, column: 17, scope: !4628)
!4631 = !DILocation(line: 1518, column: 4, scope: !4628)
!4632 = !DILocation(line: 1519, column: 19, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2311, line: 1518, column: 39)
!4634 = distinct !DILexicalBlock(scope: !4629, file: !2311, line: 1518, column: 15)
!4635 = !DILocation(line: 1519, column: 17, scope: !4633)
!4636 = !DILocation(line: 1520, column: 4, scope: !4633)
!4637 = !DILocation(line: 1522, column: 4, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2311, line: 1521, column: 47)
!4639 = distinct !DILexicalBlock(scope: !4605, file: !2311, line: 1521, column: 14)
!4640 = !DILocation(line: 1527, column: 19, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !2311, line: 1522, column: 24)
!4642 = !DILocation(line: 1527, column: 17, scope: !4641)
!4643 = !DILocation(line: 1528, column: 5, scope: !4641)
!4644 = !DILocation(line: 0, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4641, file: !2311, line: 1530, column: 9)
!4646 = !DILocation(line: 1540, column: 23, scope: !4641)
!4647 = !DILocation(line: 1539, column: 17, scope: !4641)
!4648 = !DILocation(line: 1542, column: 5, scope: !4641)
!4649 = !DILocation(line: 1545, column: 23, scope: !4641)
!4650 = !DILocation(line: 1544, column: 17, scope: !4641)
!4651 = !DILocation(line: 1547, column: 5, scope: !4641)
!4652 = !DILocation(line: 1551, column: 23, scope: !4641)
!4653 = !DILocation(line: 1551, column: 6, scope: !4641)
!4654 = !DILocation(line: 1550, column: 17, scope: !4641)
!4655 = !DILocation(line: 1552, column: 5, scope: !4641)
!4656 = !DILocation(line: 0, scope: !4641)
!4657 = !DILocation(line: 1554, column: 8, scope: !4638)
!4658 = !DILocation(line: 1555, column: 19, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2311, line: 1554, column: 33)
!4660 = distinct !DILexicalBlock(scope: !4638, file: !2311, line: 1554, column: 8)
!4661 = !DILocation(line: 1555, column: 17, scope: !4659)
!4662 = !DILocation(line: 1556, column: 4, scope: !4659)
!4663 = !DILocation(line: 1557, column: 19, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2311, line: 1556, column: 39)
!4665 = distinct !DILexicalBlock(scope: !4660, file: !2311, line: 1556, column: 15)
!4666 = !DILocation(line: 1557, column: 17, scope: !4664)
!4667 = !DILocation(line: 1558, column: 4, scope: !4664)
!4668 = !DILocation(line: 0, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2311, line: 1560, column: 8)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2311, line: 1559, column: 45)
!4671 = distinct !DILexicalBlock(scope: !4639, file: !2311, line: 1559, column: 14)
!4672 = !DILocation(line: 1566, column: 17, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2311, line: 1565, column: 46)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !2311, line: 1565, column: 14)
!4675 = !DILocation(line: 1566, column: 15, scope: !4673)
!4676 = !DILocation(line: 1567, column: 3, scope: !4673)
!4677 = !DILocation(line: 1574, column: 21, scope: !4506)
!4678 = !DILocation(line: 1575, column: 4, scope: !4504)
!4679 = !DILocation(line: 0, scope: !4504)
!4680 = !DILocation(line: 1575, column: 4, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4504, file: !2311, line: 1575, column: 4)
!4682 = !DILocation(line: 1582, column: 17, scope: !4440)
!4683 = !DILocation(line: 1582, column: 3, scope: !4440)
!4684 = !DILocation(line: 1584, column: 4, scope: !4508)
!4685 = !DILocation(line: 0, scope: !4508)
!4686 = !DILocation(line: 1584, column: 4, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4508, file: !2311, line: 1584, column: 4)
!4688 = !DILocation(line: 1587, column: 31, scope: !4511)
!4689 = !DILocation(line: 1591, column: 18, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4511, file: !2311, line: 1591, column: 8)
!4691 = !DILocation(line: 1591, column: 8, scope: !4511)
!4692 = !DILocation(line: 1592, column: 11, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !2311, line: 1591, column: 24)
!4694 = !DILocation(line: 0, scope: !4511)
!4695 = !DILocation(line: 1593, column: 4, scope: !4693)
!4696 = !DILocation(line: 1594, column: 11, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4690, file: !2311, line: 1593, column: 11)
!4698 = !DILocation(line: 1604, column: 51, scope: !4509)
!4699 = !DILocation(line: 1604, column: 13, scope: !4509)
!4700 = !DILocation(line: 1604, column: 11, scope: !4509)
!4701 = !DILocation(line: 1606, column: 4, scope: !4509)
!4702 = !DILocation(line: 1609, column: 14, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1609, column: 8)
!4704 = !DILocation(line: 1609, column: 8, scope: !4509)
!4705 = !DILocation(line: 1619, column: 18, scope: !4509)
!4706 = !DILocation(line: 1620, column: 13, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1620, column: 8)
!4708 = !DILocation(line: 1620, column: 8, scope: !4509)
!4709 = !DILocation(line: 1622, column: 36, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4707, file: !2311, line: 1620, column: 18)
!4711 = !DILocation(line: 1622, column: 17, scope: !4710)
!4712 = !DILocation(line: 1623, column: 4, scope: !4710)
!4713 = !DILocation(line: 1632, column: 29, scope: !4509)
!4714 = !DILocation(line: 1632, column: 10, scope: !4509)
!4715 = !DILocation(line: 1632, column: 4, scope: !4509)
!4716 = !DILocation(line: 1407, column: 8, scope: !4440)
!4717 = !DILocation(line: 0, scope: !4509)
!4718 = !DILocation(line: 1634, column: 3, scope: !4509)
!4719 = !DILocation(line: 1640, column: 18, scope: !4514)
!4720 = !DILocation(line: 1640, column: 8, scope: !4509)
!4721 = !DILocation(line: 1729, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1729, column: 7)
!4723 = !DILocation(line: 1641, column: 22, scope: !4513)
!4724 = !DILocation(line: 0, scope: !4513)
!4725 = !DILocation(line: 1646, column: 21, scope: !4513)
!4726 = !DILocation(line: 1649, column: 13, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4513, file: !2311, line: 1649, column: 9)
!4728 = !DILocation(line: 1649, column: 9, scope: !4513)
!4729 = !DILocation(line: 1650, column: 35, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !2311, line: 1649, column: 34)
!4731 = !DILocation(line: 1650, column: 23, scope: !4730)
!4732 = !DILocation(line: 1651, column: 5, scope: !4730)
!4733 = !DILocation(line: 1660, column: 15, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1660, column: 8)
!4735 = !DILocation(line: 1660, column: 19, scope: !4734)
!4736 = !DILocation(line: 1660, column: 8, scope: !4509)
!4737 = !DILocation(line: 1661, column: 23, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4734, file: !2311, line: 1660, column: 28)
!4739 = !DILocation(line: 1661, column: 11, scope: !4738)
!4740 = !DILocation(line: 1665, column: 22, scope: !4738)
!4741 = !DILocation(line: 1666, column: 21, scope: !4738)
!4742 = !DILocation(line: 1668, column: 5, scope: !4738)
!4743 = !DILocation(line: 1677, column: 30, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2311, line: 1676, column: 49)
!4745 = distinct !DILexicalBlock(scope: !4509, file: !2311, line: 1676, column: 8)
!4746 = !DILocation(line: 1677, column: 5, scope: !4744)
!4747 = !DILocation(line: 1680, column: 4, scope: !4509)
!4748 = !DILocation(line: 0, scope: !4690)
!4749 = !DILocation(line: 1597, column: 14, scope: !4511)
!4750 = !DILocation(line: 1699, column: 11, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1699, column: 7)
!4752 = !DILocation(line: 1699, column: 7, scope: !4440)
!4753 = !DILocation(line: 1725, column: 7, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1725, column: 7)
!4755 = !DILocation(line: 1725, column: 12, scope: !4754)
!4756 = !DILocation(line: 1747, column: 13, scope: !4521)
!4757 = !DILocation(line: 1747, column: 7, scope: !4440)
!4758 = !DILocation(line: 1722, column: 24, scope: !4440)
!4759 = !DILocation(line: 1725, column: 7, scope: !4440)
!4760 = !DILocation(line: 1729, column: 7, scope: !4440)
!4761 = !DILocation(line: 1736, column: 13, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4440, file: !2311, line: 1736, column: 7)
!4763 = !DILocation(line: 1735, column: 19, scope: !4440)
!4764 = !DILocation(line: 1736, column: 7, scope: !4440)
!4765 = !DILocation(line: 1748, column: 10, scope: !4520)
!4766 = !DILocation(line: 1750, column: 15, scope: !4519)
!4767 = !DILocation(line: 1750, column: 8, scope: !4520)
!4768 = !DILocation(line: 0, scope: !4518)
!4769 = !DILocation(line: 1756, column: 15, scope: !4527)
!4770 = !DILocation(line: 1756, column: 9, scope: !4518)
!4771 = !DILocation(line: 1758, column: 7, scope: !4523)
!4772 = !DILocation(line: 0, scope: !4523)
!4773 = !DILocation(line: 1758, column: 7, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4523, file: !2311, line: 1758, column: 7)
!4775 = !DILocation(line: 1764, column: 5, scope: !4518)
!4776 = !DILocation(line: 0, scope: !4520)
!4777 = !DILocation(line: 1764, column: 20, scope: !4518)
!4778 = !DILocation(line: 1764, column: 17, scope: !4518)
!4779 = !DILocation(line: 1765, column: 6, scope: !4529)
!4780 = !DILocation(line: 0, scope: !4529)
!4781 = !DILocation(line: 1765, column: 6, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4529, file: !2311, line: 1765, column: 6)
!4783 = distinct !{!4783, !4775, !4784}
!4784 = !DILocation(line: 1766, column: 5, scope: !4518)
!4785 = !DILocation(line: 1773, column: 12, scope: !4534)
!4786 = !DILocation(line: 1773, column: 7, scope: !4440)
!4787 = !DILocation(line: 1773, column: 7, scope: !4534)
!4788 = !DILocation(line: 1774, column: 4, scope: !4532)
!4789 = !DILocation(line: 0, scope: !4532)
!4790 = !DILocation(line: 1774, column: 4, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4532, file: !2311, line: 1774, column: 4)
!4792 = !DILocation(line: 1818, column: 8, scope: !4538)
!4793 = !DILocation(line: 1818, column: 27, scope: !4538)
!4794 = !DILocation(line: 1818, column: 25, scope: !4538)
!4795 = !DILocation(line: 1818, column: 8, scope: !4539)
!4796 = !DILocation(line: 1819, column: 5, scope: !4536)
!4797 = !DILocation(line: 0, scope: !4536)
!4798 = !DILocation(line: 1819, column: 5, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4536, file: !2311, line: 1819, column: 5)
!4800 = !DILocation(line: 1822, column: 14, scope: !4544)
!4801 = !DILocation(line: 1822, column: 8, scope: !4539)
!4802 = !DILocation(line: 1823, column: 5, scope: !4542)
!4803 = !DILocation(line: 0, scope: !4542)
!4804 = !DILocation(line: 1823, column: 5, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4542, file: !2311, line: 1823, column: 5)
!4806 = !DILocation(line: 1826, column: 20, scope: !4539)
!4807 = !DILocation(line: 1827, column: 4, scope: !4539)
!4808 = !DILocation(line: 0, scope: !4539)
!4809 = !DILocation(line: 1827, column: 21, scope: !4539)
!4810 = !DILocation(line: 1827, column: 18, scope: !4539)
!4811 = !DILocation(line: 1828, column: 5, scope: !4546)
!4812 = !DILocation(line: 0, scope: !4546)
!4813 = !DILocation(line: 1828, column: 5, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4546, file: !2311, line: 1828, column: 5)
!4815 = distinct !{!4815, !4807, !4816}
!4816 = !DILocation(line: 1829, column: 4, scope: !4539)
!4817 = !DILocation(line: 1831, column: 4, scope: !4549)
!4818 = !DILocation(line: 0, scope: !4549)
!4819 = !DILocation(line: 1831, column: 4, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4549, file: !2311, line: 1831, column: 4)
!4821 = !DILocation(line: 1835, column: 16, scope: !4440)
!4822 = !DILocation(line: 1835, column: 3, scope: !4440)
!4823 = !DILocation(line: 1836, column: 4, scope: !4551)
!4824 = !DILocation(line: 0, scope: !4551)
!4825 = !DILocation(line: 1836, column: 4, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4551, file: !2311, line: 1836, column: 4)
!4827 = !DILocation(line: 1837, column: 4, scope: !4552)
!4828 = distinct !{!4828, !4822, !4829}
!4829 = !DILocation(line: 1838, column: 3, scope: !4440)
!4830 = !DILocation(line: 1844, column: 1, scope: !4413)
!4831 = distinct !DISubprogram(name: "extract_conversion", scope: !2311, file: !2311, line: 642, type: !4832, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4834)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!744, !4488, !744}
!4834 = !{!4835, !4836}
!4835 = !DILocalVariable(name: "conv", arg: 1, scope: !4831, file: !2311, line: 642, type: !4488)
!4836 = !DILocalVariable(name: "sp", arg: 2, scope: !4831, file: !2311, line: 643, type: !744)
!4837 = !DILocation(line: 0, scope: !4831)
!4838 = !DILocation(line: 645, column: 10, scope: !4831)
!4839 = !DILocation(line: 653, column: 2, scope: !4831)
!4840 = !DILocation(line: 654, column: 6, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4831, file: !2311, line: 654, column: 6)
!4842 = !DILocation(line: 654, column: 10, scope: !4841)
!4843 = !DILocation(line: 654, column: 6, scope: !4831)
!4844 = !DILocation(line: 655, column: 24, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !2311, line: 654, column: 18)
!4846 = !DILocation(line: 655, column: 19, scope: !4845)
!4847 = !DILocation(line: 656, column: 3, scope: !4845)
!4848 = !DILocation(line: 659, column: 7, scope: !4831)
!4849 = !DILocation(line: 660, column: 7, scope: !4831)
!4850 = !DILocation(line: 661, column: 7, scope: !4831)
!4851 = !DILocation(line: 662, column: 7, scope: !4831)
!4852 = !DILocation(line: 663, column: 7, scope: !4831)
!4853 = !DILocation(line: 665, column: 2, scope: !4831)
!4854 = !DILocation(line: 666, column: 1, scope: !4831)
!4855 = distinct !DISubprogram(name: "outs", scope: !2311, file: !2311, line: 1319, type: !4856, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4858)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!109, !3445, !108, !744, !744}
!4858 = !{!4859, !4860, !4861, !4862, !4863, !4864}
!4859 = !DILocalVariable(name: "out", arg: 1, scope: !4855, file: !2311, line: 1319, type: !3445)
!4860 = !DILocalVariable(name: "ctx", arg: 2, scope: !4855, file: !2311, line: 1320, type: !108)
!4861 = !DILocalVariable(name: "sp", arg: 3, scope: !4855, file: !2311, line: 1321, type: !744)
!4862 = !DILocalVariable(name: "ep", arg: 4, scope: !4855, file: !2311, line: 1322, type: !744)
!4863 = !DILocalVariable(name: "count", scope: !4855, file: !2311, line: 1324, type: !243)
!4864 = !DILocalVariable(name: "rc", scope: !4865, file: !2311, line: 1327, type: !109)
!4865 = distinct !DILexicalBlock(scope: !4855, file: !2311, line: 1326, column: 45)
!4866 = !DILocation(line: 0, scope: !4855)
!4867 = !DILocation(line: 1326, column: 2, scope: !4855)
!4868 = !DILocation(line: 1324, column: 9, scope: !4855)
!4869 = !DILocation(line: 1326, column: 13, scope: !4855)
!4870 = !DILocation(line: 1326, column: 19, scope: !4855)
!4871 = !DILocation(line: 1327, column: 21, scope: !4865)
!4872 = !DILocation(line: 1326, column: 36, scope: !4855)
!4873 = !DILocation(line: 1326, column: 39, scope: !4855)
!4874 = !DILocation(line: 1327, column: 24, scope: !4865)
!4875 = !DILocation(line: 1327, column: 16, scope: !4865)
!4876 = !DILocation(line: 1327, column: 12, scope: !4865)
!4877 = !DILocation(line: 0, scope: !4865)
!4878 = !DILocation(line: 1329, column: 10, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4865, file: !2311, line: 1329, column: 7)
!4880 = !DILocation(line: 1329, column: 7, scope: !4865)
!4881 = distinct !{!4881, !4867, !4882}
!4882 = !DILocation(line: 1333, column: 2, scope: !4855)
!4883 = !DILocation(line: 1336, column: 1, scope: !4855)
!4884 = distinct !DISubprogram(name: "encode_uint", scope: !2311, file: !2311, line: 788, type: !4885, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4887)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{!936, !2333, !4488, !936, !744}
!4887 = !{!4888, !4889, !4890, !4891, !4892, !4893, !4895, !4896}
!4888 = !DILocalVariable(name: "value", arg: 1, scope: !4884, file: !2311, line: 788, type: !2333)
!4889 = !DILocalVariable(name: "conv", arg: 2, scope: !4884, file: !2311, line: 789, type: !4488)
!4890 = !DILocalVariable(name: "bps", arg: 3, scope: !4884, file: !2311, line: 790, type: !936)
!4891 = !DILocalVariable(name: "bpe", arg: 4, scope: !4884, file: !2311, line: 791, type: !744)
!4892 = !DILocalVariable(name: "upcase", scope: !4884, file: !2311, line: 793, type: !754)
!4893 = !DILocalVariable(name: "radix", scope: !4884, file: !2311, line: 794, type: !4894)
!4894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4895 = !DILocalVariable(name: "bp", scope: !4884, file: !2311, line: 795, type: !936)
!4896 = !DILocalVariable(name: "lsv", scope: !4897, file: !2311, line: 798, type: !32)
!4897 = distinct !DILexicalBlock(scope: !4884, file: !2311, line: 797, column: 5)
!4898 = !DILocation(line: 0, scope: !4884)
!4899 = !DILocation(line: 793, column: 35, scope: !4884)
!4900 = !DILocation(line: 793, column: 24, scope: !4884)
!4901 = !DILocation(line: 793, column: 16, scope: !4884)
!4902 = !DILocation(line: 794, column: 29, scope: !4884)
!4903 = !DILocation(line: 795, column: 24, scope: !4884)
!4904 = !DILocation(line: 795, column: 17, scope: !4884)
!4905 = !DILocation(line: 797, column: 2, scope: !4884)
!4906 = !DILocation(line: 802, column: 9, scope: !4897)
!4907 = !DILocation(line: 798, column: 22, scope: !4897)
!4908 = !DILocation(line: 0, scope: !4897)
!4909 = !DILocation(line: 800, column: 16, scope: !4897)
!4910 = !DILocation(line: 800, column: 11, scope: !4897)
!4911 = !DILocation(line: 800, column: 4, scope: !4897)
!4912 = !DILocation(line: 800, column: 9, scope: !4897)
!4913 = !DILocation(line: 803, column: 18, scope: !4884)
!4914 = !DILocation(line: 803, column: 24, scope: !4884)
!4915 = !DILocation(line: 803, column: 2, scope: !4897)
!4916 = distinct !{!4916, !4905, !4917}
!4917 = !DILocation(line: 803, column: 37, scope: !4884)
!4918 = !DILocation(line: 808, column: 12, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4884, file: !2311, line: 808, column: 6)
!4920 = !DILocation(line: 808, column: 6, scope: !4884)
!4921 = !DILocation(line: 809, column: 7, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !2311, line: 808, column: 23)
!4923 = !DILocation(line: 813, column: 3, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2311, line: 811, column: 27)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !2311, line: 811, column: 14)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !2311, line: 809, column: 7)
!4927 = !DILocation(line: 0, scope: !4926)
!4928 = !DILocation(line: 818, column: 2, scope: !4884)
!4929 = distinct !DISubprogram(name: "store_count", scope: !2311, file: !2311, line: 1280, type: !4930, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4934)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{null, !4932, !108, !109}
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 32)
!4933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4455)
!4934 = !{!4935, !4936, !4937}
!4935 = !DILocalVariable(name: "conv", arg: 1, scope: !4929, file: !2311, line: 1280, type: !4932)
!4936 = !DILocalVariable(name: "dp", arg: 2, scope: !4929, file: !2311, line: 1281, type: !108)
!4937 = !DILocalVariable(name: "count", arg: 3, scope: !4929, file: !2311, line: 1282, type: !109)
!4938 = !DILocation(line: 0, scope: !4929)
!4939 = !DILocation(line: 1284, column: 38, scope: !4929)
!4940 = !DILocation(line: 1284, column: 2, scope: !4929)
!4941 = !DILocation(line: 1286, column: 4, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4929, file: !2311, line: 1284, column: 50)
!4943 = !DILocation(line: 1286, column: 14, scope: !4942)
!4944 = !DILocation(line: 1287, column: 3, scope: !4942)
!4945 = !DILocation(line: 1289, column: 24, scope: !4942)
!4946 = !DILocation(line: 1289, column: 22, scope: !4942)
!4947 = !DILocation(line: 1290, column: 3, scope: !4942)
!4948 = !DILocation(line: 1292, column: 18, scope: !4942)
!4949 = !DILocation(line: 1292, column: 4, scope: !4942)
!4950 = !DILocation(line: 1292, column: 16, scope: !4942)
!4951 = !DILocation(line: 1293, column: 3, scope: !4942)
!4952 = !DILocation(line: 1295, column: 4, scope: !4942)
!4953 = !DILocation(line: 1295, column: 15, scope: !4942)
!4954 = !DILocation(line: 1296, column: 3, scope: !4942)
!4955 = !DILocation(line: 1298, column: 22, scope: !4942)
!4956 = !DILocation(line: 1298, column: 4, scope: !4942)
!4957 = !DILocation(line: 1298, column: 20, scope: !4942)
!4958 = !DILocation(line: 1299, column: 3, scope: !4942)
!4959 = !DILocation(line: 1301, column: 21, scope: !4942)
!4960 = !DILocation(line: 1301, column: 4, scope: !4942)
!4961 = !DILocation(line: 1301, column: 19, scope: !4942)
!4962 = !DILocation(line: 1302, column: 3, scope: !4942)
!4963 = !DILocation(line: 1304, column: 4, scope: !4942)
!4964 = !DILocation(line: 1304, column: 17, scope: !4942)
!4965 = !DILocation(line: 1305, column: 3, scope: !4942)
!4966 = !DILocation(line: 1307, column: 4, scope: !4942)
!4967 = !DILocation(line: 1307, column: 20, scope: !4942)
!4968 = !DILocation(line: 1308, column: 3, scope: !4942)
!4969 = !DILocation(line: 1316, column: 1, scope: !4929)
!4970 = distinct !DISubprogram(name: "isupper", scope: !4971, file: !4971, line: 16, type: !282, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4972)
!4971 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4972 = !{!4973}
!4973 = !DILocalVariable(name: "a", arg: 1, scope: !4970, file: !4971, line: 16, type: !109)
!4974 = !DILocation(line: 0, scope: !4970)
!4975 = !DILocation(line: 18, column: 29, scope: !4970)
!4976 = !DILocation(line: 18, column: 45, scope: !4970)
!4977 = !DILocation(line: 18, column: 2, scope: !4970)
!4978 = distinct !DISubprogram(name: "conversion_radix", scope: !2311, file: !2311, line: 761, type: !4979, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4981)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!243, !226}
!4981 = !{!4982}
!4982 = !DILocalVariable(name: "specifier", arg: 1, scope: !4978, file: !2311, line: 761, type: !226)
!4983 = !DILocation(line: 0, scope: !4978)
!4984 = !DILocation(line: 763, column: 2, scope: !4978)
!4985 = !DILocation(line: 770, column: 3, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4978, file: !2311, line: 763, column: 21)
!4987 = !DILocation(line: 774, column: 3, scope: !4986)
!4988 = !DILocation(line: 0, scope: !4986)
!4989 = !DILocation(line: 776, column: 1, scope: !4978)
!4990 = distinct !DISubprogram(name: "extract_flags", scope: !2311, file: !2311, line: 339, type: !4832, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !4991)
!4991 = !{!4992, !4993, !4994}
!4992 = !DILocalVariable(name: "conv", arg: 1, scope: !4990, file: !2311, line: 339, type: !4488)
!4993 = !DILocalVariable(name: "sp", arg: 2, scope: !4990, file: !2311, line: 340, type: !744)
!4994 = !DILocalVariable(name: "loop", scope: !4990, file: !2311, line: 342, type: !754)
!4995 = !DILocation(line: 0, scope: !4990)
!4996 = !DILocation(line: 344, column: 2, scope: !4990)
!4997 = !DILocation(line: 345, column: 11, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4990, file: !2311, line: 344, column: 5)
!4999 = !DILocation(line: 345, column: 3, scope: !4998)
!5000 = !DILocation(line: 351, column: 4, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4998, file: !2311, line: 345, column: 16)
!5002 = !DILocation(line: 354, column: 4, scope: !5001)
!5003 = !DILocation(line: 357, column: 4, scope: !5001)
!5004 = !DILocation(line: 360, column: 4, scope: !5001)
!5005 = !DILocation(line: 0, scope: !5001)
!5006 = !DILocation(line: 370, column: 12, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4990, file: !2311, line: 370, column: 6)
!5008 = !DILocation(line: 370, column: 22, scope: !5007)
!5009 = !DILocation(line: 371, column: 19, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5007, file: !2311, line: 370, column: 42)
!5011 = !DILocation(line: 372, column: 2, scope: !5010)
!5012 = !DILocation(line: 376, column: 2, scope: !4990)
!5013 = distinct !DISubprogram(name: "extract_width", scope: !2311, file: !2311, line: 388, type: !4832, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5014)
!5014 = !{!5015, !5016, !5017, !5018}
!5015 = !DILocalVariable(name: "conv", arg: 1, scope: !5013, file: !2311, line: 388, type: !4488)
!5016 = !DILocalVariable(name: "sp", arg: 2, scope: !5013, file: !2311, line: 389, type: !744)
!5017 = !DILocalVariable(name: "wp", scope: !5013, file: !2311, line: 398, type: !744)
!5018 = !DILocalVariable(name: "width", scope: !5013, file: !2311, line: 399, type: !243)
!5019 = !DILocation(line: 0, scope: !5013)
!5020 = !DILocation(line: 391, column: 8, scope: !5013)
!5021 = !DILocation(line: 391, column: 22, scope: !5013)
!5022 = !DILocation(line: 393, column: 6, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5013, file: !2311, line: 393, column: 6)
!5024 = !DILocation(line: 393, column: 10, scope: !5023)
!5025 = !DILocation(line: 393, column: 6, scope: !5013)
!5026 = !DILocation(line: 394, column: 20, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !2311, line: 393, column: 18)
!5028 = !DILocation(line: 395, column: 10, scope: !5027)
!5029 = !DILocation(line: 395, column: 3, scope: !5027)
!5030 = !DILocation(line: 399, column: 17, scope: !5013)
!5031 = !DILocation(line: 401, column: 6, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5013, file: !2311, line: 401, column: 6)
!5033 = !DILocation(line: 401, column: 9, scope: !5032)
!5034 = !DILocation(line: 401, column: 6, scope: !5013)
!5035 = !DILocation(line: 402, column: 23, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !2311, line: 401, column: 16)
!5037 = !DILocation(line: 403, column: 9, scope: !5036)
!5038 = !DILocation(line: 403, column: 21, scope: !5036)
!5039 = !DILocation(line: 405, column: 11, scope: !5036)
!5040 = !DILocation(line: 404, column: 21, scope: !5036)
!5041 = !DILocation(line: 406, column: 2, scope: !5036)
!5042 = !DILocation(line: 409, column: 1, scope: !5013)
!5043 = distinct !DISubprogram(name: "extract_prec", scope: !2311, file: !2311, line: 420, type: !4832, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5044)
!5044 = !{!5045, !5046, !5047}
!5045 = !DILocalVariable(name: "conv", arg: 1, scope: !5043, file: !2311, line: 420, type: !4488)
!5046 = !DILocalVariable(name: "sp", arg: 2, scope: !5043, file: !2311, line: 421, type: !744)
!5047 = !DILocalVariable(name: "prec", scope: !5043, file: !2311, line: 435, type: !243)
!5048 = !DILocation(line: 0, scope: !5043)
!5049 = !DILocation(line: 423, column: 24, scope: !5043)
!5050 = !DILocation(line: 423, column: 28, scope: !5043)
!5051 = !DILocation(line: 423, column: 8, scope: !5043)
!5052 = !DILocation(line: 423, column: 21, scope: !5043)
!5053 = !DILocation(line: 425, column: 6, scope: !5043)
!5054 = !DILocation(line: 428, column: 2, scope: !5043)
!5055 = !DILocation(line: 430, column: 6, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5043, file: !2311, line: 430, column: 6)
!5057 = !DILocation(line: 430, column: 10, scope: !5056)
!5058 = !DILocation(line: 430, column: 6, scope: !5043)
!5059 = !DILocation(line: 431, column: 19, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5056, file: !2311, line: 430, column: 18)
!5061 = !DILocation(line: 432, column: 10, scope: !5060)
!5062 = !DILocation(line: 432, column: 3, scope: !5060)
!5063 = !DILocation(line: 435, column: 16, scope: !5043)
!5064 = !DILocation(line: 437, column: 8, scope: !5043)
!5065 = !DILocation(line: 437, column: 19, scope: !5043)
!5066 = !DILocation(line: 439, column: 10, scope: !5043)
!5067 = !DILocation(line: 438, column: 20, scope: !5043)
!5068 = !DILocation(line: 441, column: 9, scope: !5043)
!5069 = !DILocation(line: 442, column: 1, scope: !5043)
!5070 = distinct !DISubprogram(name: "extract_length", scope: !2311, file: !2311, line: 453, type: !4832, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5071)
!5071 = !{!5072, !5073}
!5072 = !DILocalVariable(name: "conv", arg: 1, scope: !5070, file: !2311, line: 453, type: !4488)
!5073 = !DILocalVariable(name: "sp", arg: 2, scope: !5070, file: !2311, line: 454, type: !744)
!5074 = !DILocation(line: 0, scope: !5070)
!5075 = !DILocation(line: 456, column: 10, scope: !5070)
!5076 = !DILocation(line: 456, column: 2, scope: !5070)
!5077 = !DILocation(line: 458, column: 8, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !2311, line: 458, column: 7)
!5079 = distinct !DILexicalBlock(scope: !5070, file: !2311, line: 456, column: 15)
!5080 = !DILocation(line: 458, column: 7, scope: !5078)
!5081 = !DILocation(line: 458, column: 13, scope: !5078)
!5082 = !DILocation(line: 0, scope: !5078)
!5083 = !DILocation(line: 458, column: 7, scope: !5079)
!5084 = !DILocation(line: 459, column: 21, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5078, file: !2311, line: 458, column: 21)
!5086 = !DILocation(line: 460, column: 4, scope: !5085)
!5087 = !DILocation(line: 461, column: 3, scope: !5085)
!5088 = !DILocation(line: 462, column: 21, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5078, file: !2311, line: 461, column: 10)
!5090 = !DILocation(line: 466, column: 8, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5079, file: !2311, line: 466, column: 7)
!5092 = !DILocation(line: 466, column: 7, scope: !5091)
!5093 = !DILocation(line: 466, column: 13, scope: !5091)
!5094 = !DILocation(line: 0, scope: !5091)
!5095 = !DILocation(line: 466, column: 7, scope: !5079)
!5096 = !DILocation(line: 467, column: 21, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5091, file: !2311, line: 466, column: 21)
!5098 = !DILocation(line: 468, column: 4, scope: !5097)
!5099 = !DILocation(line: 469, column: 3, scope: !5097)
!5100 = !DILocation(line: 470, column: 21, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5091, file: !2311, line: 469, column: 10)
!5102 = !DILocation(line: 474, column: 9, scope: !5079)
!5103 = !DILocation(line: 474, column: 20, scope: !5079)
!5104 = !DILocation(line: 475, column: 3, scope: !5079)
!5105 = !DILocation(line: 476, column: 3, scope: !5079)
!5106 = !DILocation(line: 478, column: 9, scope: !5079)
!5107 = !DILocation(line: 478, column: 20, scope: !5079)
!5108 = !DILocation(line: 479, column: 3, scope: !5079)
!5109 = !DILocation(line: 480, column: 3, scope: !5079)
!5110 = !DILocation(line: 482, column: 9, scope: !5079)
!5111 = !DILocation(line: 482, column: 20, scope: !5079)
!5112 = !DILocation(line: 483, column: 3, scope: !5079)
!5113 = !DILocation(line: 484, column: 3, scope: !5079)
!5114 = !DILocation(line: 486, column: 9, scope: !5079)
!5115 = !DILocation(line: 486, column: 20, scope: !5079)
!5116 = !DILocation(line: 487, column: 3, scope: !5079)
!5117 = !DILocation(line: 492, column: 21, scope: !5079)
!5118 = !DILocation(line: 493, column: 3, scope: !5079)
!5119 = !DILocation(line: 495, column: 9, scope: !5079)
!5120 = !DILocation(line: 495, column: 20, scope: !5079)
!5121 = !DILocation(line: 496, column: 3, scope: !5079)
!5122 = !DILocation(line: 498, column: 2, scope: !5070)
!5123 = distinct !DISubprogram(name: "extract_specifier", scope: !2311, file: !2311, line: 513, type: !4832, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5124)
!5124 = !{!5125, !5126, !5127, !5128}
!5125 = !DILocalVariable(name: "conv", arg: 1, scope: !5123, file: !2311, line: 513, type: !4488)
!5126 = !DILocalVariable(name: "sp", arg: 2, scope: !5123, file: !2311, line: 514, type: !744)
!5127 = !DILocalVariable(name: "unsupported", scope: !5123, file: !2311, line: 516, type: !754)
!5128 = !DILabel(scope: !5129, name: "int_conv", file: !2311, line: 526)
!5129 = distinct !DILexicalBlock(scope: !5123, file: !2311, line: 520, column: 27)
!5130 = !DILocation(line: 0, scope: !5123)
!5131 = !DILocation(line: 518, column: 20, scope: !5123)
!5132 = !DILocation(line: 518, column: 8, scope: !5123)
!5133 = !DILocation(line: 518, column: 18, scope: !5123)
!5134 = !DILocation(line: 520, column: 2, scope: !5123)
!5135 = !DILocation(line: 525, column: 3, scope: !5129)
!5136 = !DILocation(line: 0, scope: !5129)
!5137 = !DILocation(line: 526, column: 1, scope: !5129)
!5138 = !DILocation(line: 528, column: 24, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5129, file: !2311, line: 528, column: 7)
!5140 = !DILocation(line: 528, column: 7, scope: !5129)
!5141 = !DILocation(line: 535, column: 23, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5129, file: !2311, line: 535, column: 7)
!5143 = !DILocation(line: 535, column: 7, scope: !5129)
!5144 = !DILocation(line: 536, column: 36, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !2311, line: 535, column: 31)
!5146 = !DILocation(line: 537, column: 3, scope: !5145)
!5147 = !DILocation(line: 570, column: 9, scope: !5129)
!5148 = !DILocation(line: 570, column: 23, scope: !5129)
!5149 = !DILocation(line: 575, column: 4, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !2311, line: 573, column: 48)
!5151 = distinct !DILexicalBlock(scope: !5129, file: !2311, line: 573, column: 7)
!5152 = !DILocation(line: 603, column: 9, scope: !5129)
!5153 = !DILocation(line: 603, column: 23, scope: !5129)
!5154 = !DILocation(line: 605, column: 24, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5129, file: !2311, line: 605, column: 7)
!5156 = !DILocation(line: 605, column: 7, scope: !5129)
!5157 = !DILocation(line: 612, column: 9, scope: !5129)
!5158 = !DILocation(line: 612, column: 23, scope: !5129)
!5159 = !DILocation(line: 619, column: 24, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5129, file: !2311, line: 619, column: 7)
!5161 = !DILocation(line: 619, column: 7, scope: !5129)
!5162 = !DILocation(line: 625, column: 9, scope: !5129)
!5163 = !DILocation(line: 625, column: 17, scope: !5129)
!5164 = !DILocation(line: 626, column: 3, scope: !5129)
!5165 = !DILocation(line: 629, column: 20, scope: !5123)
!5166 = !DILocation(line: 629, column: 8, scope: !5123)
!5167 = !DILocation(line: 518, column: 23, scope: !5123)
!5168 = !DILocation(line: 631, column: 2, scope: !5123)
!5169 = distinct !DISubprogram(name: "extract_decimal", scope: !2311, file: !2311, line: 318, type: !5170, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5173)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!243, !5172}
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!5173 = !{!5174, !5175, !5176}
!5174 = !DILocalVariable(name: "str", arg: 1, scope: !5169, file: !2311, line: 318, type: !5172)
!5175 = !DILocalVariable(name: "sp", scope: !5169, file: !2311, line: 320, type: !744)
!5176 = !DILocalVariable(name: "val", scope: !5169, file: !2311, line: 321, type: !243)
!5177 = !DILocation(line: 0, scope: !5169)
!5178 = !DILocation(line: 320, column: 19, scope: !5169)
!5179 = !DILocation(line: 323, column: 37, scope: !5169)
!5180 = !DILocation(line: 323, column: 17, scope: !5169)
!5181 = !DILocation(line: 323, column: 9, scope: !5169)
!5182 = !DILocation(line: 323, column: 2, scope: !5169)
!5183 = !DILocation(line: 324, column: 13, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5169, file: !2311, line: 323, column: 43)
!5185 = !DILocation(line: 324, column: 24, scope: !5184)
!5186 = !DILocation(line: 324, column: 19, scope: !5184)
!5187 = !DILocation(line: 324, column: 27, scope: !5184)
!5188 = distinct !{!5188, !5182, !5189}
!5189 = !DILocation(line: 325, column: 2, scope: !5169)
!5190 = !DILocation(line: 326, column: 7, scope: !5169)
!5191 = !DILocation(line: 327, column: 2, scope: !5169)
!5192 = distinct !DISubprogram(name: "isdigit", scope: !4971, file: !4971, line: 43, type: !282, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !5193)
!5193 = !{!5194}
!5194 = !DILocalVariable(name: "a", arg: 1, scope: !5192, file: !4971, line: 43, type: !109)
!5195 = !DILocation(line: 0, scope: !5192)
!5196 = !DILocation(line: 45, column: 29, scope: !5192)
!5197 = !DILocation(line: 45, column: 45, scope: !5192)
!5198 = !DILocation(line: 45, column: 2, scope: !5192)
!5199 = distinct !DISubprogram(name: "assert_post_action", scope: !5200, file: !5200, line: 26, type: !5201, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !5203)
!5200 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !744, !32}
!5203 = !{!5204, !5205}
!5204 = !DILocalVariable(name: "file", arg: 1, scope: !5199, file: !5200, line: 26, type: !744)
!5205 = !DILocalVariable(name: "line", arg: 2, scope: !5199, file: !5200, line: 26, type: !32)
!5206 = !DILocation(line: 0, scope: !5199)
!5207 = !DILocation(line: 43, column: 2, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5199, file: !5200, line: 43, column: 2)
!5209 = !{i64 2151045912, i64 2151045928, i64 2151045954, i64 2151045982, i64 2151046002}
!5210 = !DILocation(line: 44, column: 1, scope: !5199)
!5211 = distinct !DISubprogram(name: "assert_print", scope: !5200, file: !5200, line: 46, type: !3477, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !5212)
!5212 = !{!5213, !5214}
!5213 = !DILocalVariable(name: "fmt", arg: 1, scope: !5211, file: !5200, line: 46, type: !744)
!5214 = !DILocalVariable(name: "ap", scope: !5211, file: !5200, line: 48, type: !5215)
!5215 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3409, line: 99, baseType: !5216)
!5216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3409, line: 40, baseType: !5217)
!5217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5200, baseType: !5218)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5219)
!5219 = !{!5220}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5218, file: !5200, line: 48, baseType: !108, size: 32)
!5221 = !DILocation(line: 0, scope: !5211)
!5222 = !DILocation(line: 48, column: 2, scope: !5211)
!5223 = !DILocation(line: 48, column: 10, scope: !5211)
!5224 = !DILocation(line: 50, column: 2, scope: !5211)
!5225 = !DILocation(line: 52, column: 2, scope: !5211)
!5226 = !DILocation(line: 54, column: 2, scope: !5211)
!5227 = !DILocation(line: 55, column: 1, scope: !5211)
!5228 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5229, file: !5229, line: 9, type: !2930, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !1817)
!5229 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!5230 = !DILocation(line: 11, column: 1, scope: !5228)
!5231 = !{i64 2147556321, i64 2147556364, i64 2147556404}
!5232 = !DILocation(line: 12, column: 1, scope: !5228)
!5233 = !{i64 2147560548, i64 2147560591, i64 2147560631}
!5234 = !DILocation(line: 13, column: 1, scope: !5228)
!5235 = !{i64 2147560757, i64 2147560800, i64 2147560840}
!5236 = !DILocation(line: 14, column: 1, scope: !5228)
!5237 = !{i64 2147560974, i64 2147561017, i64 2147561057}
!5238 = !DILocation(line: 15, column: 1, scope: !5228)
!5239 = !{i64 2147561143, i64 2147561186, i64 2147561226}
!5240 = !DILocation(line: 16, column: 1, scope: !5228)
!5241 = !{i64 2147561328, i64 2147561371, i64 2147561411}
!5242 = !DILocation(line: 17, column: 1, scope: !5228)
!5243 = !{i64 2147561545, i64 2147561588, i64 2147561628}
!5244 = !DILocation(line: 18, column: 1, scope: !5228)
!5245 = !{i64 2147561708, i64 2147561751, i64 2147561791}
!5246 = !DILocation(line: 19, column: 1, scope: !5228)
!5247 = !{i64 2147561892, i64 2147561935, i64 2147561975}
!5248 = !DILocation(line: 20, column: 1, scope: !5228)
!5249 = !{i64 2147562072, i64 2147562115, i64 2147562155}
!5250 = !DILocation(line: 21, column: 1, scope: !5228)
!5251 = !{i64 2147562315, i64 2147562358, i64 2147562398}
!5252 = !DILocation(line: 22, column: 1, scope: !5228)
!5253 = !{i64 2147562551, i64 2147562594, i64 2147562634}
!5254 = !DILocation(line: 23, column: 1, scope: !5228)
!5255 = !{i64 2147562754, i64 2147562797, i64 2147562837}
!5256 = !DILocation(line: 24, column: 1, scope: !5228)
!5257 = !{i64 2147562957, i64 2147563000, i64 2147563040}
!5258 = !DILocation(line: 25, column: 1, scope: !5228)
!5259 = !{i64 2147563156, i64 2147563199, i64 2147563239}
!5260 = !DILocation(line: 26, column: 1, scope: !5228)
!5261 = !{i64 2147563331, i64 2147563374, i64 2147563414}
!5262 = !DILocation(line: 27, column: 1, scope: !5228)
!5263 = !{i64 2147563539, i64 2147563582, i64 2147563622}
!5264 = !DILocation(line: 28, column: 1, scope: !5228)
!5265 = !{i64 2147563743, i64 2147563786, i64 2147563826}
!5266 = !DILocation(line: 29, column: 1, scope: !5228)
!5267 = !{i64 2147563936, i64 2147563979, i64 2147564019}
!5268 = !DILocation(line: 30, column: 1, scope: !5228)
!5269 = !{i64 2147564138, i64 2147564181, i64 2147564221}
!5270 = !DILocation(line: 31, column: 1, scope: !5228)
!5271 = !{i64 2147564365, i64 2147564408, i64 2147564448}
!5272 = !DILocation(line: 32, column: 1, scope: !5228)
!5273 = !{i64 2147564580, i64 2147564623, i64 2147564663}
!5274 = !DILocation(line: 33, column: 1, scope: !5228)
!5275 = !{i64 2147564767, i64 2147564810, i64 2147564850}
!5276 = !DILocation(line: 34, column: 1, scope: !5228)
!5277 = !{i64 2147564939, i64 2147564982, i64 2147565022}
!5278 = !DILocation(line: 35, column: 1, scope: !5228)
!5279 = !{i64 2147565141, i64 2147565184, i64 2147565224}
!5280 = !DILocation(line: 36, column: 1, scope: !5228)
!5281 = !{i64 2147565340, i64 2147565383, i64 2147565423}
!5282 = !DILocation(line: 37, column: 1, scope: !5228)
!5283 = !{i64 2147565515, i64 2147565558, i64 2147565598}
!5284 = !DILocation(line: 38, column: 1, scope: !5228)
!5285 = !{i64 2147565768, i64 2147565811, i64 2147565851}
!5286 = !DILocation(line: 39, column: 1, scope: !5228)
!5287 = !{i64 2147566006, i64 2147566049, i64 2147566089}
!5288 = !DILocation(line: 40, column: 1, scope: !5228)
!5289 = !{i64 2147566241, i64 2147566284, i64 2147566324}
!5290 = !DILocation(line: 41, column: 1, scope: !5228)
!5291 = !{i64 2147566467, i64 2147566510, i64 2147566550}
!5292 = !DILocation(line: 42, column: 1, scope: !5228)
!5293 = !{i64 2147566702, i64 2147566745, i64 2147566785}
!5294 = !DILocation(line: 43, column: 1, scope: !5228)
!5295 = !{i64 2147566937, i64 2147566980, i64 2147567020}
!5296 = !DILocation(line: 44, column: 1, scope: !5228)
!5297 = !{i64 2147567178, i64 2147567221, i64 2147567261}
!5298 = !DILocation(line: 45, column: 1, scope: !5228)
!5299 = !{i64 2147567413, i64 2147567456, i64 2147567496}
!5300 = !DILocation(line: 46, column: 1, scope: !5228)
!5301 = !{i64 2147567642, i64 2147567685, i64 2147567725}
!5302 = !DILocation(line: 47, column: 1, scope: !5228)
!5303 = !{i64 2147567877, i64 2147567920, i64 2147567960}
!5304 = !DILocation(line: 48, column: 1, scope: !5228)
!5305 = !{i64 2147568127, i64 2147568170, i64 2147568210}
!5306 = !DILocation(line: 49, column: 1, scope: !5228)
!5307 = !{i64 2147568356, i64 2147568399, i64 2147568439}
!5308 = !DILocation(line: 50, column: 1, scope: !5228)
!5309 = !{i64 2147568564, i64 2147568607, i64 2147568647}
!5310 = !DILocation(line: 51, column: 1, scope: !5228)
!5311 = !{i64 2147568775, i64 2147568818, i64 2147568858}
!5312 = !DILocation(line: 52, column: 1, scope: !5228)
!5313 = !{i64 2147569010, i64 2147569053, i64 2147569093}
!5314 = !DILocation(line: 53, column: 1, scope: !5228)
!5315 = !{i64 2147569239, i64 2147569282, i64 2147569322}
!5316 = !DILocation(line: 54, column: 1, scope: !5228)
!5317 = !{i64 2147573538, i64 2147573581, i64 2147573621}
!5318 = !DILocation(line: 55, column: 1, scope: !5228)
!5319 = !{i64 2147573770, i64 2147573813, i64 2147573853}
!5320 = !DILocation(line: 56, column: 1, scope: !5228)
!5321 = !{i64 2147573996, i64 2147574039, i64 2147574079}
!5322 = !DILocation(line: 57, column: 1, scope: !5228)
!5323 = !{i64 2147574213, i64 2147574256, i64 2147574296}
!5324 = !DILocation(line: 58, column: 1, scope: !5228)
!5325 = !{i64 2147574445, i64 2147574488, i64 2147574528}
!5326 = !DILocation(line: 59, column: 1, scope: !5228)
!5327 = !{i64 2147574671, i64 2147574714, i64 2147574754}
!5328 = !DILocation(line: 60, column: 1, scope: !5228)
!5329 = !{i64 2147574885, i64 2147574928, i64 2147574968}
!5330 = !DILocation(line: 61, column: 1, scope: !5228)
!5331 = !{i64 2147575105, i64 2147575148, i64 2147575188}
!5332 = !DILocation(line: 62, column: 1, scope: !5228)
!5333 = !{i64 2147575337, i64 2147575380, i64 2147575420}
!5334 = !DILocation(line: 63, column: 1, scope: !5228)
!5335 = !{i64 2147575545, i64 2147575588, i64 2147575628}
!5336 = !DILocation(line: 64, column: 1, scope: !5228)
!5337 = !{i64 2147575750, i64 2147575793, i64 2147575833}
!5338 = !DILocation(line: 65, column: 1, scope: !5228)
!5339 = !{i64 2147575967, i64 2147576010, i64 2147576050}
!5340 = !DILocation(line: 66, column: 1, scope: !5228)
!5341 = !{i64 2147576181, i64 2147576224, i64 2147576264}
!5342 = !DILocation(line: 67, column: 1, scope: !5228)
!5343 = !{i64 2147576407, i64 2147576450, i64 2147576490}
!5344 = !DILocation(line: 68, column: 1, scope: !5228)
!5345 = !{i64 2147576627, i64 2147576670, i64 2147576710}
!5346 = !DILocation(line: 69, column: 1, scope: !5228)
!5347 = !{i64 2147576832, i64 2147576875, i64 2147576915}
!5348 = !DILocation(line: 70, column: 1, scope: !5228)
!5349 = !{i64 2147577064, i64 2147577107, i64 2147577147}
!5350 = !DILocation(line: 71, column: 1, scope: !5228)
!5351 = !{i64 2147577299, i64 2147577342, i64 2147577382}
!5352 = !DILocation(line: 72, column: 1, scope: !5228)
!5353 = !{i64 2147577549, i64 2147577592, i64 2147577632}
!5354 = !DILocation(line: 73, column: 1, scope: !5228)
!5355 = !{i64 2147577799, i64 2147577842, i64 2147577882}
!5356 = !DILocation(line: 74, column: 1, scope: !5228)
!5357 = !{i64 2147578037, i64 2147578080, i64 2147578120}
!5358 = !DILocation(line: 75, column: 1, scope: !5228)
!5359 = !{i64 2147578248, i64 2147578291, i64 2147578331}
!5360 = !DILocation(line: 76, column: 1, scope: !5228)
!5361 = !{i64 2147578465, i64 2147578508, i64 2147578548}
!5362 = !DILocation(line: 77, column: 1, scope: !5228)
!5363 = !{i64 2147578661, i64 2147578704, i64 2147578744}
!5364 = !DILocation(line: 78, column: 1, scope: !5228)
!5365 = !{i64 2147578863, i64 2147578906, i64 2147578946}
!5366 = !DILocation(line: 79, column: 1, scope: !5228)
!5367 = !{i64 2147579050, i64 2147579093, i64 2147579133}
!5368 = !DILocation(line: 80, column: 1, scope: !5228)
!5369 = !{i64 2147579240, i64 2147579283, i64 2147579323}
!5370 = !DILocation(line: 81, column: 1, scope: !5228)
!5371 = !{i64 2147579427, i64 2147579470, i64 2147579510}
!5372 = !DILocation(line: 82, column: 1, scope: !5228)
!5373 = !{i64 2147579623, i64 2147579666, i64 2147579706}
!5374 = !DILocation(line: 83, column: 1, scope: !5228)
!5375 = !{i64 2147579819, i64 2147579862, i64 2147579902}
!5376 = !DILocation(line: 84, column: 1, scope: !5228)
!5377 = !{i64 2147580030, i64 2147580073, i64 2147580113}
!5378 = !DILocation(line: 85, column: 1, scope: !5228)
!5379 = !{i64 2147580238, i64 2147580281, i64 2147580321}
!5380 = !DILocation(line: 86, column: 1, scope: !5228)
!5381 = !{i64 2147580422, i64 2147580465, i64 2147580505}
!5382 = !DILocation(line: 87, column: 1, scope: !5228)
!5383 = !{i64 2147580618, i64 2147580661, i64 2147580701}
!5384 = !DILocation(line: 88, column: 1, scope: !5228)
!5385 = !{i64 2147580811, i64 2147580854, i64 2147580894}
!5386 = !DILocation(line: 89, column: 1, scope: !5228)
!5387 = !{i64 2147581058, i64 2147581101, i64 2147581141}
!5388 = !DILocation(line: 90, column: 1, scope: !5228)
!5389 = !{i64 2147581281, i64 2147581324, i64 2147581364}
!5390 = !DILocation(line: 91, column: 1, scope: !5228)
!5391 = !{i64 2147581447, i64 2147581490, i64 2147581530}
!5392 = !DILocation(line: 92, column: 1, scope: !5228)
!5393 = !{i64 2147581631, i64 2147581674, i64 2147581714}
!5394 = !DILocation(line: 93, column: 1, scope: !5228)
!5395 = !{i64 2147581821, i64 2147581864, i64 2147581904}
!5396 = !DILocation(line: 94, column: 1, scope: !5228)
!5397 = !{i64 2147582005, i64 2147582048, i64 2147582088}
!5398 = !DILocation(line: 95, column: 1, scope: !5228)
!5399 = !{i64 2147582219, i64 2147582262, i64 2147582302}
!5400 = !DILocation(line: 96, column: 1, scope: !5228)
!5401 = !{i64 2147586491, i64 2147586534, i64 2147586574}
!5402 = !DILocation(line: 97, column: 1, scope: !5228)
!5403 = !{i64 2147586714, i64 2147586757, i64 2147586797}
!5404 = !DILocation(line: 98, column: 1, scope: !5228)
!5405 = !{i64 2147586898, i64 2147586941, i64 2147586981}
!5406 = !DILocation(line: 99, column: 1, scope: !5228)
!5407 = !{i64 2147587064, i64 2147587107, i64 2147587147}
!5408 = !DILocation(line: 100, column: 1, scope: !5228)
!5409 = !{i64 2147587245, i64 2147587288, i64 2147587328}
!5410 = !DILocation(line: 101, column: 1, scope: !5228)
!5411 = !{i64 2147587438, i64 2147587481, i64 2147587521}
!5412 = !DILocation(line: 102, column: 1, scope: !5228)
!5413 = !{i64 2147587664, i64 2147587707, i64 2147587747}
!5414 = !DILocation(line: 103, column: 1, scope: !5228)
!5415 = !{i64 2147587878, i64 2147587921, i64 2147587961}
!5416 = !DILocation(line: 104, column: 1, scope: !5228)
!5417 = !{i64 2147588104, i64 2147588147, i64 2147588187}
!5418 = !DILocation(line: 105, column: 1, scope: !5228)
!5419 = !{i64 2147588321, i64 2147588364, i64 2147588404}
!5420 = !DILocation(line: 106, column: 1, scope: !5228)
!5421 = !{i64 2147588598, i64 2147588641, i64 2147588681}
!5422 = !DILocation(line: 107, column: 1, scope: !5228)
!5423 = !{i64 2147588824, i64 2147588867, i64 2147588907}
!5424 = !DILocation(line: 108, column: 1, scope: !5228)
!5425 = !{i64 2147589032, i64 2147589075, i64 2147589115}
!5426 = !DILocation(line: 109, column: 1, scope: !5228)
!5427 = !{i64 2147589228, i64 2147589271, i64 2147589311}
!5428 = !DILocation(line: 110, column: 1, scope: !5228)
!5429 = !{i64 2147589493, i64 2147589536, i64 2147589576}
!5430 = !DILocation(line: 111, column: 1, scope: !5228)
!5431 = !{i64 2147589707, i64 2147589750, i64 2147589790}
!5432 = !DILocation(line: 112, column: 1, scope: !5228)
!5433 = !{i64 2147589870, i64 2147589913, i64 2147589953}
!5434 = !DILocation(line: 113, column: 1, scope: !5228)
!5435 = !{i64 2147590057, i64 2147590100, i64 2147590140}
!5436 = !DILocation(line: 114, column: 1, scope: !5228)
!5437 = !{i64 2147590250, i64 2147590293, i64 2147590333}
!5438 = !DILocation(line: 115, column: 1, scope: !5228)
!5439 = !{i64 2147590432, i64 2147590475, i64 2147590515}
!5440 = !DILocation(line: 116, column: 1, scope: !5228)
!5441 = !{i64 2147590646, i64 2147590689, i64 2147590729}
!5442 = !DILocation(line: 117, column: 1, scope: !5228)
!5443 = !{i64 2147590845, i64 2147590888, i64 2147590928}
!5444 = !DILocation(line: 118, column: 1, scope: !5228)
!5445 = !{i64 2147591080, i64 2147591123, i64 2147591163}
!5446 = !DILocation(line: 119, column: 1, scope: !5228)
!5447 = !{i64 2147591330, i64 2147591373, i64 2147591413}
!5448 = !DILocation(line: 120, column: 1, scope: !5228)
!5449 = !{i64 2147591532, i64 2147591575, i64 2147591615}
!5450 = !DILocation(line: 121, column: 1, scope: !5228)
!5451 = !{i64 2147591755, i64 2147591798, i64 2147591838}
!5452 = !DILocation(line: 122, column: 1, scope: !5228)
!5453 = !{i64 2147591969, i64 2147592012, i64 2147592052}
!5454 = !DILocation(line: 123, column: 1, scope: !5228)
!5455 = !{i64 2147592213, i64 2147592256, i64 2147592296}
!5456 = !DILocation(line: 124, column: 1, scope: !5228)
!5457 = !{i64 2147592442, i64 2147592485, i64 2147592525}
!5458 = !DILocation(line: 125, column: 1, scope: !5228)
!5459 = !{i64 2147592668, i64 2147592711, i64 2147592751}
!5460 = !DILocation(line: 126, column: 1, scope: !5228)
!5461 = !{i64 2147592927, i64 2147592970, i64 2147593010}
!5462 = !DILocation(line: 127, column: 1, scope: !5228)
!5463 = !{i64 2147593147, i64 2147593190, i64 2147593230}
!5464 = !DILocation(line: 128, column: 1, scope: !5228)
!5465 = !{i64 2147593379, i64 2147593422, i64 2147593462}
!5466 = !DILocation(line: 129, column: 1, scope: !5228)
!5467 = !{i64 2147593620, i64 2147593663, i64 2147593703}
!5468 = !DILocation(line: 130, column: 1, scope: !5228)
!5469 = !{i64 2147593861, i64 2147593904, i64 2147593944}
!5470 = !DILocation(line: 131, column: 1, scope: !5228)
!5471 = !{i64 2147594084, i64 2147594127, i64 2147594167}
!5472 = !DILocation(line: 132, column: 1, scope: !5228)
!5473 = !{i64 2147594301, i64 2147594344, i64 2147594384}
!5474 = !DILocation(line: 133, column: 1, scope: !5228)
!5475 = !{i64 2147594542, i64 2147594585, i64 2147594625}
!5476 = !DILocation(line: 134, column: 1, scope: !5228)
!5477 = !{i64 2147594729, i64 2147594772, i64 2147594812}
!5478 = !DILocation(line: 135, column: 1, scope: !5228)
!5479 = !{i64 2147594958, i64 2147595001, i64 2147595041}
!5480 = !DILocation(line: 136, column: 1, scope: !5228)
!5481 = !{i64 2147599215, i64 2147599258, i64 2147599298}
!5482 = !DILocation(line: 137, column: 1, scope: !5228)
!5483 = !{i64 2147599427, i64 2147599470, i64 2147599510}
!5484 = !DILocation(line: 138, column: 1, scope: !5228)
!5485 = !{i64 2147599648, i64 2147599691, i64 2147599731}
!5486 = !DILocation(line: 139, column: 1, scope: !5228)
!5487 = !{i64 2147599862, i64 2147599905, i64 2147599945}
!5488 = !DILocation(line: 140, column: 1, scope: !5228)
!5489 = !{i64 2147600052, i64 2147600095, i64 2147600135}
!5490 = !DILocation(line: 141, column: 1, scope: !5228)
!5491 = !{i64 2147600251, i64 2147600294, i64 2147600334}
!5492 = !DILocation(line: 142, column: 1, scope: !5228)
!5493 = !{i64 2147600456, i64 2147600499, i64 2147600539}
!5494 = !DILocation(line: 143, column: 1, scope: !5228)
!5495 = !{i64 2147600676, i64 2147600719, i64 2147600759}
!5496 = !DILocation(line: 144, column: 1, scope: !5228)
!5497 = !{i64 2147600877, i64 2147600920, i64 2147600960}
!5498 = !DILocation(line: 145, column: 1, scope: !5228)
!5499 = !{i64 2147601076, i64 2147601119, i64 2147601159}
!5500 = !DILocation(line: 146, column: 1, scope: !5228)
!5501 = !{i64 2147601245, i64 2147601288, i64 2147601328}
!5502 = !DILocation(line: 147, column: 1, scope: !5228)
!5503 = !{i64 2147601441, i64 2147601484, i64 2147601524}
!5504 = !DILocation(line: 148, column: 1, scope: !5228)
!5505 = !{i64 2147601625, i64 2147601668, i64 2147601708}
!5506 = !DILocation(line: 149, column: 1, scope: !5228)
!5507 = !{i64 2147601812, i64 2147601855, i64 2147601895}
!5508 = !DILocation(line: 150, column: 1, scope: !5228)
!5509 = !{i64 2147601996, i64 2147602039, i64 2147602079}
!5510 = !DILocation(line: 151, column: 1, scope: !5228)
!5511 = !{i64 2147602192, i64 2147602235, i64 2147602275}
!5512 = !DILocation(line: 152, column: 1, scope: !5228)
!5513 = !{i64 2147602379, i64 2147602422, i64 2147602462}
!5514 = !DILocation(line: 153, column: 1, scope: !5228)
!5515 = !{i64 2147602591, i64 2147602634, i64 2147602674}
!5516 = !DILocation(line: 154, column: 1, scope: !5228)
!5517 = !{i64 2147602829, i64 2147602872, i64 2147602912}
!5518 = !DILocation(line: 155, column: 1, scope: !5228)
!5519 = !{i64 2147603059, i64 2147603102, i64 2147603142}
!5520 = !DILocation(line: 156, column: 1, scope: !5228)
!5521 = !{i64 2147603288, i64 2147603331, i64 2147603371}
!5522 = !DILocation(line: 157, column: 1, scope: !5228)
!5523 = !{i64 2147603475, i64 2147603518, i64 2147603558}
!5524 = !DILocation(line: 158, column: 1, scope: !5228)
!5525 = !{i64 2147603671, i64 2147603714, i64 2147603754}
!5526 = !DILocation(line: 159, column: 1, scope: !5228)
!5527 = !{i64 2147603879, i64 2147603922, i64 2147603962}
!5528 = !DILocation(line: 160, column: 1, scope: !5228)
!5529 = !{i64 2147604091, i64 2147604134, i64 2147604174}
!5530 = !DILocation(line: 161, column: 1, scope: !5228)
!5531 = !{i64 2147604290, i64 2147604333, i64 2147604373}
!5532 = !DILocation(line: 162, column: 1, scope: !5228)
!5533 = !{i64 2147604528, i64 2147604571, i64 2147604611}
!5534 = !DILocation(line: 163, column: 1, scope: !5228)
!5535 = !{i64 2147604724, i64 2147604767, i64 2147604807}
!5536 = !DILocation(line: 164, column: 1, scope: !5228)
!5537 = !{i64 2147604926, i64 2147604969, i64 2147605009}
!5538 = !DILocation(line: 165, column: 1, scope: !5228)
!5539 = !{i64 2147605119, i64 2147605162, i64 2147605202}
!5540 = !DILocation(line: 166, column: 1, scope: !5228)
!5541 = !{i64 2147605353, i64 2147605396, i64 2147605436}
!5542 = !DILocation(line: 167, column: 1, scope: !5228)
!5543 = !{i64 2147605516, i64 2147605559, i64 2147605599}
!5544 = !DILocation(line: 168, column: 1, scope: !5228)
!5545 = !{i64 2147605755, i64 2147605798, i64 2147605838}
!5546 = !DILocation(line: 169, column: 1, scope: !5228)
!5547 = !{i64 2147605994, i64 2147606037, i64 2147606077}
!5548 = !DILocation(line: 170, column: 1, scope: !5228)
!5549 = !{i64 2147606230, i64 2147606273, i64 2147606313}
!5550 = !DILocation(line: 171, column: 1, scope: !5228)
!5551 = !{i64 2147606460, i64 2147606503, i64 2147606543}
!5552 = !DILocation(line: 172, column: 1, scope: !5228)
!5553 = !{i64 2147606647, i64 2147606690, i64 2147606730}
!5554 = !DILocation(line: 173, column: 1, scope: !5228)
!5555 = !{i64 2147606846, i64 2147606889, i64 2147606929}
!5556 = !DILocation(line: 174, column: 1, scope: !5228)
!5557 = !{i64 2147607117, i64 2147607160, i64 2147607200}
!5558 = !DILocation(line: 175, column: 1, scope: !5228)
!5559 = !{i64 2147607292, i64 2147607335, i64 2147607375}
!5560 = !DILocation(line: 176, column: 1, scope: !5228)
!5561 = !{i64 2147607526, i64 2147607569, i64 2147607609}
!5562 = !DILocation(line: 177, column: 1, scope: !5228)
!5563 = !{i64 2147607734, i64 2147607777, i64 2147607817}
!5564 = !DILocation(line: 178, column: 1, scope: !5228)
!5565 = !{i64 2147607952, i64 2147607995, i64 2147608035}
!5566 = !DILocation(line: 179, column: 1, scope: !5228)
!5567 = !{i64 2147608142, i64 2147608185, i64 2147608225}
!5568 = !DILocation(line: 180, column: 1, scope: !5228)
!5569 = !{i64 2147608338, i64 2147608381, i64 2147608421}
!5570 = !DILocation(line: 181, column: 1, scope: !5228)
!5571 = !{i64 2147612605, i64 2147612648, i64 2147612688}
!5572 = !DILocation(line: 182, column: 1, scope: !5228)
!5573 = !{i64 2147612810, i64 2147612853, i64 2147612893}
!5574 = !DILocation(line: 183, column: 1, scope: !5228)
!5575 = !{i64 2147613036, i64 2147613079, i64 2147613119}
!5576 = !DILocation(line: 184, column: 1, scope: !5228)
!5577 = !{i64 2147613268, i64 2147613311, i64 2147613351}
!5578 = !DILocation(line: 185, column: 1, scope: !5228)
!5579 = !{i64 2147613446, i64 2147613489, i64 2147613529}
!5580 = !DILocation(line: 186, column: 1, scope: !5228)
!5581 = !{i64 2147613655, i64 2147613698, i64 2147613738}
!5582 = !DILocation(line: 187, column: 1, scope: !5228)
!5583 = !{i64 2147613887, i64 2147613930, i64 2147613970}
!5584 = !DILocation(line: 188, column: 1, scope: !5228)
!5585 = !{i64 2147614089, i64 2147614132, i64 2147614172}
!5586 = !DILocation(line: 189, column: 1, scope: !5228)
!5587 = !{i64 2147614339, i64 2147614382, i64 2147614422}
!5588 = !DILocation(line: 190, column: 1, scope: !5228)
!5589 = !{i64 2147614577, i64 2147614620, i64 2147614660}
!5590 = !DILocation(line: 191, column: 1, scope: !5228)
!5591 = !{i64 2147614755, i64 2147614798, i64 2147614838}
!5592 = !DILocation(line: 192, column: 1, scope: !5228)
!5593 = !{i64 2147614969, i64 2147615012, i64 2147615052}
!5594 = !DILocation(line: 193, column: 1, scope: !5228)
!5595 = !{i64 2147615177, i64 2147615220, i64 2147615260}
!5596 = !DILocation(line: 194, column: 1, scope: !5228)
!5597 = !{i64 2147615367, i64 2147615410, i64 2147615450}
!5598 = !DILocation(line: 195, column: 1, scope: !5228)
!5599 = !{i64 2147615581, i64 2147615624, i64 2147615664}
!5600 = !DILocation(line: 196, column: 1, scope: !5228)
!5601 = !{i64 2147615843, i64 2147615886, i64 2147615926}
!5602 = !DILocation(line: 197, column: 1, scope: !5228)
!5603 = !{i64 2147616054, i64 2147616097, i64 2147616137}
!5604 = !DILocation(line: 198, column: 1, scope: !5228)
!5605 = !{i64 2147616298, i64 2147616341, i64 2147616381}
!5606 = !DILocation(line: 199, column: 1, scope: !5228)
!5607 = !{i64 2147616509, i64 2147616552, i64 2147616592}
!5608 = !DILocation(line: 200, column: 1, scope: !5228)
!5609 = !{i64 2147616738, i64 2147616781, i64 2147616821}
!5610 = !DILocation(line: 201, column: 1, scope: !5228)
!5611 = !{i64 2147617003, i64 2147617046, i64 2147617086}
!5612 = !DILocation(line: 202, column: 1, scope: !5228)
!5613 = !{i64 2147617208, i64 2147617251, i64 2147617291}
!5614 = !DILocation(line: 203, column: 1, scope: !5228)
!5615 = !{i64 2147617431, i64 2147617474, i64 2147617514}
!5616 = !DILocation(line: 204, column: 1, scope: !5228)
!5617 = !{i64 2147617594, i64 2147617637, i64 2147617677}
!5618 = !DILocation(line: 205, column: 1, scope: !5228)
!5619 = !{i64 2147617799, i64 2147617842, i64 2147617882}
!5620 = !DILocation(line: 206, column: 1, scope: !5228)
!5621 = !{i64 2147618019, i64 2147618062, i64 2147618102}
!5622 = !DILocation(line: 207, column: 1, scope: !5228)
!5623 = !{i64 2147618233, i64 2147618276, i64 2147618316}
!5624 = !DILocation(line: 208, column: 1, scope: !5228)
!5625 = !{i64 2147618447, i64 2147618490, i64 2147618530}
!5626 = !DILocation(line: 209, column: 1, scope: !5228)
!5627 = !{i64 2147618658, i64 2147618701, i64 2147618741}
!5628 = !DILocation(line: 210, column: 1, scope: !5228)
!5629 = !{i64 2147618851, i64 2147618894, i64 2147618934}
!5630 = !DILocation(line: 211, column: 1, scope: !5228)
!5631 = !{i64 2147619050, i64 2147619093, i64 2147619133}
!5632 = !DILocation(line: 212, column: 1, scope: !5228)
!5633 = !{i64 2147619222, i64 2147619265, i64 2147619305}
!5634 = !DILocation(line: 213, column: 1, scope: !5228)
!5635 = !{i64 2147619415, i64 2147619458, i64 2147619498}
!5636 = !DILocation(line: 214, column: 1, scope: !5228)
!5637 = !{i64 2147619587, i64 2147619630, i64 2147619670}
!5638 = !DILocation(line: 215, column: 1, scope: !5228)
!5639 = !{i64 2147619777, i64 2147619820, i64 2147619860}
!5640 = !DILocation(line: 216, column: 1, scope: !5228)
!5641 = !{i64 2147619970, i64 2147620013, i64 2147620053}
!5642 = !DILocation(line: 217, column: 1, scope: !5228)
!5643 = !{i64 2147620166, i64 2147620209, i64 2147620249}
!5644 = !DILocation(line: 218, column: 1, scope: !5228)
!5645 = !{i64 2147620371, i64 2147620414, i64 2147620454}
!5646 = !DILocation(line: 219, column: 1, scope: !5228)
!5647 = !{i64 2147620598, i64 2147620641, i64 2147620681}
!5648 = !DILocation(line: 220, column: 1, scope: !5228)
!5649 = !{i64 2147620815, i64 2147620858, i64 2147620898}
!5650 = !DILocation(line: 221, column: 1, scope: !5228)
!5651 = !{i64 2147621107, i64 2147621150, i64 2147621190}
!5652 = !DILocation(line: 222, column: 1, scope: !5228)
!5653 = !{i64 2147625400, i64 2147625443, i64 2147625483}
!5654 = !DILocation(line: 223, column: 1, scope: !5228)
!5655 = !{i64 2147625617, i64 2147625660, i64 2147625700}
!5656 = !DILocation(line: 224, column: 1, scope: !5228)
!5657 = !{i64 2147625824, i64 2147625867, i64 2147625907}
!5658 = !DILocation(line: 225, column: 1, scope: !5228)
!5659 = !{i64 2147626025, i64 2147626068, i64 2147626108}
!5660 = !DILocation(line: 226, column: 1, scope: !5228)
!5661 = !{i64 2147626257, i64 2147626300, i64 2147626340}
!5662 = !DILocation(line: 227, column: 1, scope: !5228)
!5663 = !{i64 2147626465, i64 2147626508, i64 2147626548}
!5664 = !DILocation(line: 228, column: 1, scope: !5228)
!5665 = !{i64 2147626655, i64 2147626698, i64 2147626738}
!5666 = !DILocation(line: 229, column: 1, scope: !5228)
!5667 = !{i64 2147626881, i64 2147626924, i64 2147626964}
!5668 = !DILocation(line: 230, column: 1, scope: !5228)
!5669 = !{i64 2147627070, i64 2147627113, i64 2147627153}
!5670 = !DILocation(line: 231, column: 1, scope: !5228)
!5671 = !{i64 2147627341, i64 2147627384, i64 2147627424}
!5672 = !DILocation(line: 232, column: 1, scope: !5228)
!5673 = !{i64 2147627561, i64 2147627604, i64 2147627644}
!5674 = !DILocation(line: 233, column: 1, scope: !5228)
!5675 = !{i64 2147627814, i64 2147627857, i64 2147627897}
!5676 = !DILocation(line: 234, column: 1, scope: !5228)
!5677 = !{i64 2147628022, i64 2147628065, i64 2147628105}
!5678 = !DILocation(line: 235, column: 1, scope: !5228)
!5679 = !{i64 2147628254, i64 2147628297, i64 2147628337}
!5680 = !DILocation(line: 236, column: 1, scope: !5228)
!5681 = !{i64 2147628465, i64 2147628508, i64 2147628548}
!5682 = !DILocation(line: 237, column: 1, scope: !5228)
!5683 = !{i64 2147628655, i64 2147628698, i64 2147628738}
!5684 = !DILocation(line: 238, column: 1, scope: !5228)
!5685 = !{i64 2147628869, i64 2147628912, i64 2147628952}
!5686 = !DILocation(line: 239, column: 1, scope: !5228)
!5687 = !{i64 2147629068, i64 2147629111, i64 2147629151}
!5688 = !DILocation(line: 240, column: 1, scope: !5228)
!5689 = !{i64 2147629255, i64 2147629298, i64 2147629338}
!5690 = !DILocation(line: 241, column: 1, scope: !5228)
!5691 = !{i64 2147629463, i64 2147629506, i64 2147629546}
!5692 = !DILocation(line: 242, column: 1, scope: !5228)
!5693 = !{i64 2147629692, i64 2147629735, i64 2147629775}
!5694 = !DILocation(line: 243, column: 1, scope: !5228)
!5695 = !{i64 2147629894, i64 2147629937, i64 2147629977}
!5696 = !DILocation(line: 244, column: 1, scope: !5228)
!5697 = !{i64 2147630093, i64 2147630136, i64 2147630176}
!5698 = !DILocation(line: 245, column: 1, scope: !5228)
!5699 = !{i64 2147630310, i64 2147630353, i64 2147630393}
!5700 = !DILocation(line: 247, column: 1, scope: !5228)
!5701 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !698, file: !698, line: 225, type: !705, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5702)
!5702 = !{!5703}
!5703 = !DILocalVariable(name: "arg", arg: 1, scope: !5701, file: !698, line: 225, type: !707)
!5704 = !DILocation(line: 0, scope: !5701)
!5705 = !DILocation(line: 230, column: 2, scope: !5701)
!5706 = !DILocation(line: 233, column: 2, scope: !5701)
!5707 = !DILocation(line: 236, column: 2, scope: !5701)
!5708 = !DILocation(line: 255, column: 2, scope: !5701)
!5709 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !698, file: !698, line: 50, type: !2930, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !1817)
!5710 = !DILocation(line: 53, column: 2, scope: !5709)
!5711 = !DILocation(line: 54, column: 1, scope: !5709)
!5712 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !698, file: !698, line: 14, type: !2930, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !1817)
!5713 = !DILocation(line: 23, column: 2, scope: !5712)
!5714 = !DILocation(line: 24, column: 2, scope: !5712)
!5715 = !DILocation(line: 25, column: 2, scope: !5712)
!5716 = !DILocation(line: 27, column: 2, scope: !5712)
!5717 = !DILocation(line: 31, column: 2, scope: !5712)
!5718 = !DILocation(line: 33, column: 2, scope: !5712)
!5719 = !DILocation(line: 36, column: 2, scope: !5712)
!5720 = !DILocation(line: 37, column: 2, scope: !5712)
!5721 = !DILocation(line: 40, column: 2, scope: !5712)
!5722 = !DILocation(line: 41, column: 2, scope: !5712)
!5723 = !DILocation(line: 42, column: 2, scope: !5712)
!5724 = !DILocation(line: 43, column: 2, scope: !5712)
!5725 = !DILocation(line: 44, column: 2, scope: !5712)
!5726 = !DILocation(line: 47, column: 2, scope: !5712)
!5727 = !DILocation(line: 48, column: 1, scope: !5712)
!5728 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !698, file: !698, line: 57, type: !2930, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !1817)
!5729 = !DILocation(line: 61, column: 2, scope: !5728)
!5730 = !DILocation(line: 63, column: 2, scope: !5728)
!5731 = !DILocation(line: 80, column: 1, scope: !5728)
!5732 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5733, file: !5733, line: 164, type: !5734, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5736)
!5733 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5734 = !DISubroutineType(types: !5735)
!5735 = !{null, !644, !110, !167, !754, !754}
!5736 = !{!5737, !5738, !5739, !5740, !5741}
!5737 = !DILocalVariable(name: "base", arg: 1, scope: !5732, file: !5733, line: 164, type: !644)
!5738 = !DILocalVariable(name: "pdap", arg: 2, scope: !5732, file: !5733, line: 164, type: !110)
!5739 = !DILocalVariable(name: "perm", arg: 3, scope: !5732, file: !5733, line: 164, type: !167)
!5740 = !DILocalVariable(name: "sreq", arg: 4, scope: !5732, file: !5733, line: 164, type: !754)
!5741 = !DILocalVariable(name: "lock", arg: 5, scope: !5732, file: !5733, line: 164, type: !754)
!5742 = !DILocation(line: 0, scope: !5732)
!5743 = !DILocation(line: 166, column: 24, scope: !5732)
!5744 = !DILocation(line: 166, column: 5, scope: !5732)
!5745 = !DILocation(line: 166, column: 22, scope: !5732)
!5746 = !DILocation(line: 167, column: 1, scope: !5732)
!5747 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !290, file: !290, line: 454, type: !5748, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5750)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{null, !572, !110, !110}
!5750 = !{!5751, !5752, !5753}
!5751 = !DILocalVariable(name: "base", arg: 1, scope: !5747, file: !290, line: 454, type: !572)
!5752 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5747, file: !290, line: 454, type: !110)
!5753 = !DILocalVariable(name: "control", arg: 3, scope: !5747, file: !290, line: 454, type: !110)
!5754 = !DILocation(line: 0, scope: !5747)
!5755 = !DILocation(line: 456, column: 5, scope: !5747)
!5756 = !DILocation(line: 456, column: 22, scope: !5747)
!5757 = !DILocation(line: 457, column: 1, scope: !5747)
!5758 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !290, file: !290, line: 379, type: !5759, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5761)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{null, !572, !110}
!5761 = !{!5762, !5763}
!5762 = !DILocalVariable(name: "base", arg: 1, scope: !5758, file: !290, line: 379, type: !572)
!5763 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5758, file: !290, line: 379, type: !110)
!5764 = !DILocation(line: 0, scope: !5758)
!5765 = !DILocation(line: 381, column: 26, scope: !5758)
!5766 = !DILocation(line: 382, column: 1, scope: !5758)
!5767 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5768, file: !5768, line: 136, type: !5769, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5771)
!5768 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5769 = !DISubroutineType(types: !5770)
!5770 = !{null, !685}
!5771 = !{!5772}
!5772 = !DILocalVariable(name: "base", arg: 1, scope: !5767, file: !5768, line: 136, type: !685)
!5773 = !DILocation(line: 0, scope: !5767)
!5774 = !DILocation(line: 138, column: 16, scope: !5767)
!5775 = !DILocation(line: 139, column: 1, scope: !5767)
!5776 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5733, file: !5733, line: 136, type: !5777, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !286, retainedNodes: !5779)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{null, !644, !110, !110, !754}
!5779 = !{!5780, !5781, !5782, !5783}
!5780 = !DILocalVariable(name: "base", arg: 1, scope: !5776, file: !5733, line: 136, type: !644)
!5781 = !DILocalVariable(name: "mda", arg: 2, scope: !5776, file: !5733, line: 136, type: !110)
!5782 = !DILocalVariable(name: "domainId", arg: 3, scope: !5776, file: !5733, line: 136, type: !110)
!5783 = !DILocalVariable(name: "lock", arg: 4, scope: !5776, file: !5733, line: 136, type: !754)
!5784 = !DILocation(line: 0, scope: !5776)
!5785 = !DILocation(line: 140, column: 20, scope: !5776)
!5786 = !DILocation(line: 141, column: 1, scope: !5776)
!5787 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5788, file: !5788, line: 57, type: !5789, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5835)
!5788 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5789 = !DISubroutineType(types: !5790)
!5790 = !{null, !32, !5791}
!5791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 32)
!5792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5793)
!5793 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2469, line: 141, baseType: !5794)
!5794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2469, line: 97, size: 256, elements: !5795)
!5795 = !{!5796}
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5794, file: !2469, line: 107, baseType: !5797, size: 256)
!5797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2469, line: 98, size: 256, elements: !5798)
!5798 = !{!5799, !5804, !5809, !5814, !5819, !5824, !5829, !5834}
!5799 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 99, baseType: !5800, size: 32)
!5800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 99, size: 32, elements: !5801)
!5801 = !{!5802, !5803}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5800, file: !2469, line: 99, baseType: !110, size: 32)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5800, file: !2469, line: 99, baseType: !110, size: 32)
!5804 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 100, baseType: !5805, size: 32, offset: 32)
!5805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 100, size: 32, elements: !5806)
!5806 = !{!5807, !5808}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5805, file: !2469, line: 100, baseType: !110, size: 32)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5805, file: !2469, line: 100, baseType: !110, size: 32)
!5809 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 101, baseType: !5810, size: 32, offset: 64)
!5810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 101, size: 32, elements: !5811)
!5811 = !{!5812, !5813}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5810, file: !2469, line: 101, baseType: !110, size: 32)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5810, file: !2469, line: 101, baseType: !110, size: 32)
!5814 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 102, baseType: !5815, size: 32, offset: 96)
!5815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 102, size: 32, elements: !5816)
!5816 = !{!5817, !5818}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5815, file: !2469, line: 102, baseType: !110, size: 32)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5815, file: !2469, line: 102, baseType: !110, size: 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 103, baseType: !5820, size: 32, offset: 128)
!5820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 103, size: 32, elements: !5821)
!5821 = !{!5822, !5823}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5820, file: !2469, line: 103, baseType: !110, size: 32)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5820, file: !2469, line: 103, baseType: !110, size: 32)
!5824 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 104, baseType: !5825, size: 32, offset: 160)
!5825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 104, size: 32, elements: !5826)
!5826 = !{!5827, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5825, file: !2469, line: 104, baseType: !110, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5825, file: !2469, line: 104, baseType: !110, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, scope: !5797, file: !2469, line: 105, baseType: !5830, size: 32, offset: 192)
!5830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5797, file: !2469, line: 105, size: 32, elements: !5831)
!5831 = !{!5832, !5833}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5830, file: !2469, line: 105, baseType: !110, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5830, file: !2469, line: 105, baseType: !110, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5797, file: !2469, line: 106, baseType: !110, size: 32, offset: 224)
!5835 = !{!5836, !5837}
!5836 = !DILocalVariable(name: "reason", arg: 1, scope: !5787, file: !5788, line: 57, type: !32)
!5837 = !DILocalVariable(name: "esf", arg: 2, scope: !5787, file: !5788, line: 57, type: !5791)
!5838 = !DILocation(line: 0, scope: !5787)
!5839 = !DILocation(line: 63, column: 2, scope: !5787)
!5840 = !DILocation(line: 64, column: 1, scope: !5787)
!5841 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5788, file: !5788, line: 82, type: !5842, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5857)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{null, !5791, !5844}
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 32)
!5845 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !5846)
!5846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !5847)
!5847 = !{!5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5846, file: !198, line: 26, baseType: !110, size: 32)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5846, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5846, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5846, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5846, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5846, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5846, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5846, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5846, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!5857 = !{!5858, !5859, !5860}
!5858 = !DILocalVariable(name: "esf", arg: 1, scope: !5841, file: !5788, line: 82, type: !5791)
!5859 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5841, file: !5788, line: 82, type: !5844)
!5860 = !DILocalVariable(name: "reason", scope: !5841, file: !5788, line: 88, type: !32)
!5861 = !DILocation(line: 0, scope: !5841)
!5862 = !DILocation(line: 88, column: 35, scope: !5841)
!5863 = !DILocation(line: 108, column: 2, scope: !5841)
!5864 = !DILocation(line: 131, column: 1, scope: !5841)
!5865 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5788, file: !5788, line: 133, type: !5866, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5868)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{null, !108}
!5868 = !{!5869, !5870, !5871}
!5869 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5865, file: !5788, line: 133, type: !108)
!5870 = !DILocalVariable(name: "ssf_contents", scope: !5865, file: !5788, line: 135, type: !1265)
!5871 = !DILocalVariable(name: "oops_esf", scope: !5865, file: !5788, line: 136, type: !5793)
!5872 = !DILocation(line: 0, scope: !5865)
!5873 = !DILocation(line: 136, column: 2, scope: !5865)
!5874 = !DILocation(line: 136, column: 15, scope: !5865)
!5875 = !DILocation(line: 139, column: 22, scope: !5865)
!5876 = !DILocation(line: 139, column: 17, scope: !5865)
!5877 = !DILocation(line: 139, column: 20, scope: !5865)
!5878 = !DILocation(line: 141, column: 2, scope: !5865)
!5879 = !DILocation(line: 142, column: 2, scope: !5865)
!5880 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5881, file: !5881, line: 40, type: !5882, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5884)
!5881 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5882 = !DISubroutineType(types: !5883)
!5883 = !{null, !32}
!5884 = !{!5885}
!5885 = !DILocalVariable(name: "irq", arg: 1, scope: !5880, file: !5881, line: 40, type: !32)
!5886 = !DILocation(line: 0, scope: !5880)
!5887 = !DILocation(line: 42, column: 2, scope: !5880)
!5888 = !DILocation(line: 43, column: 1, scope: !5880)
!5889 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1458, file: !1458, line: 1684, type: !5890, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{null, !2363}
!5892 = !{!5893}
!5893 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5889, file: !1458, line: 1684, type: !2363)
!5894 = !DILocation(line: 0, scope: !5889)
!5895 = !DILocation(line: 1686, column: 23, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5889, file: !1458, line: 1686, column: 7)
!5897 = !DILocation(line: 1686, column: 7, scope: !5889)
!5898 = !DILocation(line: 1688, column: 5, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5896, file: !1458, line: 1687, column: 3)
!5900 = !{i64 2154450903}
!5901 = !DILocation(line: 1689, column: 81, scope: !5899)
!5902 = !DILocation(line: 1689, column: 60, scope: !5899)
!5903 = !DILocation(line: 1689, column: 34, scope: !5899)
!5904 = !DILocation(line: 1689, column: 5, scope: !5899)
!5905 = !DILocation(line: 1689, column: 43, scope: !5899)
!5906 = !DILocation(line: 1690, column: 5, scope: !5899)
!5907 = !{i64 2154451017}
!5908 = !DILocation(line: 1691, column: 3, scope: !5899)
!5909 = !DILocation(line: 1692, column: 1, scope: !5889)
!5910 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5881, file: !5881, line: 45, type: !5882, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5911)
!5911 = !{!5912}
!5912 = !DILocalVariable(name: "irq", arg: 1, scope: !5910, file: !5881, line: 45, type: !32)
!5913 = !DILocation(line: 0, scope: !5910)
!5914 = !DILocation(line: 47, column: 2, scope: !5910)
!5915 = !DILocation(line: 48, column: 1, scope: !5910)
!5916 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1458, file: !1458, line: 1722, type: !5890, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5917)
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5916, file: !1458, line: 1722, type: !2363)
!5919 = !DILocation(line: 0, scope: !5916)
!5920 = !DILocation(line: 1724, column: 23, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5916, file: !1458, line: 1724, column: 7)
!5922 = !DILocation(line: 1724, column: 7, scope: !5916)
!5923 = !DILocation(line: 1726, column: 81, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !1458, line: 1725, column: 3)
!5925 = !DILocation(line: 1726, column: 60, scope: !5924)
!5926 = !DILocation(line: 1726, column: 34, scope: !5924)
!5927 = !DILocation(line: 1726, column: 5, scope: !5924)
!5928 = !DILocation(line: 1726, column: 43, scope: !5924)
!5929 = !DILocation(line: 271, column: 3, scope: !5930, inlinedAt: !5932)
!5930 = distinct !DISubprogram(name: "__DSB", scope: !5931, file: !5931, line: 269, type: !2930, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !1817)
!5931 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5932 = distinct !DILocation(line: 1727, column: 5, scope: !5924)
!5933 = !{i64 6905290}
!5934 = !DILocation(line: 260, column: 3, scope: !5935, inlinedAt: !5936)
!5935 = distinct !DISubprogram(name: "__ISB", scope: !5931, file: !5931, line: 258, type: !2930, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !1817)
!5936 = distinct !DILocation(line: 1728, column: 5, scope: !5924)
!5937 = !{i64 6905007}
!5938 = !DILocation(line: 1729, column: 3, scope: !5924)
!5939 = !DILocation(line: 1730, column: 1, scope: !5916)
!5940 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5881, file: !5881, line: 50, type: !5941, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5943)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!109, !32}
!5943 = !{!5944}
!5944 = !DILocalVariable(name: "irq", arg: 1, scope: !5940, file: !5881, line: 50, type: !32)
!5945 = !DILocation(line: 0, scope: !5940)
!5946 = !DILocation(line: 52, column: 20, scope: !5940)
!5947 = !DILocation(line: 52, column: 9, scope: !5940)
!5948 = !DILocation(line: 52, column: 41, scope: !5940)
!5949 = !DILocation(line: 52, column: 39, scope: !5940)
!5950 = !DILocation(line: 52, column: 2, scope: !5940)
!5951 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5881, file: !5881, line: 64, type: !5952, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5954)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !32, !32, !110}
!5954 = !{!5955, !5956, !5957}
!5955 = !DILocalVariable(name: "irq", arg: 1, scope: !5951, file: !5881, line: 64, type: !32)
!5956 = !DILocalVariable(name: "prio", arg: 2, scope: !5951, file: !5881, line: 64, type: !32)
!5957 = !DILocalVariable(name: "flags", arg: 3, scope: !5951, file: !5881, line: 64, type: !110)
!5958 = !DILocation(line: 0, scope: !5951)
!5959 = !DILocation(line: 83, column: 8, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !5881, line: 82, column: 9)
!5961 = distinct !DILexicalBlock(scope: !5951, file: !5881, line: 76, column: 6)
!5962 = !DILocation(line: 91, column: 2, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !5881, line: 91, column: 2)
!5964 = distinct !DILexicalBlock(scope: !5951, file: !5881, line: 91, column: 2)
!5965 = !DILocation(line: 91, column: 2, scope: !5964)
!5966 = !DILocation(line: 91, column: 2, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !5881, line: 91, column: 2)
!5968 = !DILocation(line: 95, column: 2, scope: !5951)
!5969 = !DILocation(line: 96, column: 1, scope: !5951)
!5970 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1458, file: !1458, line: 1814, type: !5971, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5973)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{null, !2363, !110}
!5973 = !{!5974, !5975}
!5974 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5970, file: !1458, line: 1814, type: !2363)
!5975 = !DILocalVariable(name: "priority", arg: 2, scope: !5970, file: !1458, line: 1814, type: !110)
!5976 = !DILocation(line: 0, scope: !5970)
!5977 = !DILocation(line: 0, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5970, file: !1458, line: 1816, column: 7)
!5979 = !DILocation(line: 1816, column: 7, scope: !5970)
!5980 = !DILocation(line: 1824, column: 1, scope: !5970)
!5981 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5881, file: !5881, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !5982)
!5982 = !{!5983}
!5983 = !DILocalVariable(name: "unused", arg: 1, scope: !5981, file: !5881, line: 155, type: !13)
!5984 = !DILocation(line: 0, scope: !5981)
!5985 = !DILocation(line: 159, column: 2, scope: !5981)
!5986 = !DILocation(line: 160, column: 1, scope: !5981)
!5987 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5988, file: !5988, line: 87, type: !2930, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !1817)
!5988 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5989 = !DILocation(line: 89, column: 2, scope: !5987)
!5990 = !DILocation(line: 90, column: 2, scope: !5987)
!5991 = !DILocation(line: 91, column: 1, scope: !5987)
!5992 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5988, file: !5988, line: 23, type: !2930, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1817)
!5993 = !DISubprogram(name: "z_arm_int_exit", scope: !5994, file: !5994, line: 153, type: !2930, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1817)
!5994 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5995 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5996, file: !5996, line: 256, type: !2930, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !1817)
!5996 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5997 = !DILocation(line: 258, column: 2, scope: !5995)
!5998 = !DILocation(line: 260, column: 2, scope: !5995)
!5999 = !DILocation(line: 262, column: 2, scope: !5995)
!6000 = !DILocation(line: 263, column: 2, scope: !5995)
!6001 = !DILocation(line: 267, column: 2, scope: !5995)
!6002 = !DILocation(line: 268, column: 2, scope: !5995)
!6003 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5996, file: !5996, line: 53, type: !2930, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !1817)
!6004 = !DILocation(line: 55, column: 12, scope: !6003)
!6005 = !DILocation(line: 271, column: 3, scope: !6006, inlinedAt: !6007)
!6006 = distinct !DISubprogram(name: "__DSB", scope: !5931, file: !5931, line: 269, type: !2930, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !1817)
!6007 = distinct !DILocation(line: 56, column: 2, scope: !6003)
!6008 = !{i64 6941064}
!6009 = !DILocation(line: 260, column: 3, scope: !6010, inlinedAt: !6011)
!6010 = distinct !DISubprogram(name: "__ISB", scope: !5931, file: !5931, line: 258, type: !2930, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !1817)
!6011 = distinct !DILocation(line: 57, column: 2, scope: !6003)
!6012 = !{i64 6940781}
!6013 = !DILocation(line: 58, column: 1, scope: !6003)
!6014 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5996, file: !5996, line: 96, type: !2930, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !1817)
!6015 = !DILocation(line: 103, column: 13, scope: !6014)
!6016 = !DILocation(line: 975, column: 3, scope: !6017, inlinedAt: !6020)
!6017 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5931, file: !5931, line: 971, type: !3202, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !6018)
!6018 = !{!6019}
!6019 = !DILocalVariable(name: "result", scope: !6017, file: !5931, line: 973, type: !110)
!6020 = distinct !DILocation(line: 189, column: 16, scope: !6014)
!6021 = !{i64 6961894}
!6022 = !DILocation(line: 0, scope: !6017, inlinedAt: !6020)
!6023 = !DILocation(line: 189, column: 32, scope: !6014)
!6024 = !DILocalVariable(name: "control", arg: 1, scope: !6025, file: !5931, line: 1001, type: !110)
!6025 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5931, file: !5931, line: 1001, type: !6026, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2408, retainedNodes: !6028)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{null, !110}
!6028 = !{!6024}
!6029 = !DILocation(line: 0, scope: !6025, inlinedAt: !6030)
!6030 = distinct !DILocation(line: 189, column: 2, scope: !6014)
!6031 = !DILocation(line: 1003, column: 3, scope: !6025, inlinedAt: !6030)
!6032 = !{i64 6962614}
!6033 = !DILocation(line: 260, column: 3, scope: !6010, inlinedAt: !6034)
!6034 = distinct !DILocation(line: 1004, column: 3, scope: !6025, inlinedAt: !6030)
!6035 = !DILocation(line: 191, column: 1, scope: !6014)
!6036 = distinct !DISubprogram(name: "arch_swap", scope: !6037, file: !6037, line: 33, type: !5941, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6038)
!6037 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6038 = !{!6039}
!6039 = !DILocalVariable(name: "key", arg: 1, scope: !6036, file: !6037, line: 33, type: !32)
!6040 = !DILocation(line: 0, scope: !6036)
!6041 = !DILocation(line: 36, column: 2, scope: !6036)
!6042 = !DILocation(line: 36, column: 17, scope: !6036)
!6043 = !DILocation(line: 36, column: 25, scope: !6036)
!6044 = !DILocation(line: 37, column: 37, scope: !6036)
!6045 = !DILocation(line: 37, column: 17, scope: !6036)
!6046 = !DILocation(line: 37, column: 35, scope: !6036)
!6047 = !DILocation(line: 41, column: 12, scope: !6036)
!6048 = !DILocalVariable(name: "key", arg: 1, scope: !6049, file: !6050, line: 84, type: !32)
!6049 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2436, retainedNodes: !6051)
!6050 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6051 = !{!6048}
!6052 = !DILocation(line: 0, scope: !6049, inlinedAt: !6053)
!6053 = distinct !DILocation(line: 44, column: 2, scope: !6036)
!6054 = !DILocation(line: 95, column: 2, scope: !6049, inlinedAt: !6053)
!6055 = !{i64 2842969}
!6056 = !DILocation(line: 53, column: 9, scope: !6036)
!6057 = !DILocation(line: 53, column: 24, scope: !6036)
!6058 = !DILocation(line: 53, column: 2, scope: !6036)
!6059 = distinct !DISubprogram(name: "arch_new_thread", scope: !6060, file: !6060, line: 56, type: !6061, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !6173)
!6060 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6061 = !DISubroutineType(types: !6062)
!6062 = !{null, !6063, !6168, !936, !215, !108, !108, !108}
!6063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 32)
!6064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !6065)
!6065 = !{!6066, !6124, !6136, !6137, !6138, !6145, !6146, !6147, !6148, !6163}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6064, file: !145, line: 247, baseType: !6067, size: 384)
!6067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6068)
!6068 = !{!6069, !6093, !6100, !6101, !6102, !6111, !6112, !6113}
!6069 = !DIDerivedType(tag: DW_TAG_member, scope: !6067, file: !145, line: 60, baseType: !6070, size: 64)
!6070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6067, file: !145, line: 60, size: 64, elements: !6071)
!6071 = !{!6072, !6087}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6070, file: !145, line: 61, baseType: !6073, size: 64)
!6073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6074)
!6074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6075)
!6075 = !{!6076, !6082}
!6076 = !DIDerivedType(tag: DW_TAG_member, scope: !6074, file: !128, line: 38, baseType: !6077, size: 32)
!6077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6074, file: !128, line: 38, size: 32, elements: !6078)
!6078 = !{!6079, !6081}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6077, file: !128, line: 39, baseType: !6080, size: 32)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6077, file: !128, line: 40, baseType: !6080, size: 32)
!6082 = !DIDerivedType(tag: DW_TAG_member, scope: !6074, file: !128, line: 42, baseType: !6083, size: 32, offset: 32)
!6083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6074, file: !128, line: 42, size: 32, elements: !6084)
!6084 = !{!6085, !6086}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6083, file: !128, line: 43, baseType: !6080, size: 32)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6083, file: !128, line: 44, baseType: !6080, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6070, file: !145, line: 62, baseType: !6088, size: 64)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6089)
!6089 = !{!6090}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6088, file: !157, line: 50, baseType: !6091, size: 64)
!6091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6092, size: 64, elements: !162)
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 32)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6067, file: !145, line: 68, baseType: !6094, size: 32, offset: 64)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 32)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6096)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6097)
!6097 = !{!6098}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6096, file: !123, line: 232, baseType: !6099, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6074)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6067, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6067, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6102 = !DIDerivedType(tag: DW_TAG_member, scope: !6067, file: !145, line: 90, baseType: !6103, size: 16, offset: 112)
!6103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6067, file: !145, line: 90, size: 16, elements: !6104)
!6104 = !{!6105, !6110}
!6105 = !DIDerivedType(tag: DW_TAG_member, scope: !6103, file: !145, line: 91, baseType: !6106, size: 16)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6103, file: !145, line: 91, size: 16, elements: !6107)
!6107 = !{!6108, !6109}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6106, file: !145, line: 96, baseType: !177, size: 8)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6106, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6103, file: !145, line: 100, baseType: !181, size: 16)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6067, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6067, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6067, file: !145, line: 131, baseType: !6114, size: 192, offset: 192)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6115)
!6115 = !{!6116, !6117, !6123}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6114, file: !123, line: 245, baseType: !6073, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6114, file: !123, line: 246, baseType: !6118, size: 32, offset: 64)
!6118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6119)
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 32)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{null, !6122}
!6122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 32)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6114, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6064, file: !145, line: 250, baseType: !6125, size: 288, offset: 384)
!6125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6126)
!6126 = !{!6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6125, file: !198, line: 26, baseType: !110, size: 32)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6125, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6125, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6125, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6125, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6125, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6125, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6125, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6125, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6064, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6064, file: !145, line: 256, baseType: !6095, size: 64, offset: 704)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6064, file: !145, line: 271, baseType: !6139, size: 128, offset: 768)
!6139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6140)
!6140 = !{!6141, !6142, !6143, !6144}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6139, file: !145, line: 35, baseType: !215, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6139, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6139, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6139, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6064, file: !145, line: 274, baseType: !6063, size: 32, offset: 896)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6064, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6064, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6064, file: !145, line: 325, baseType: !6149, size: 32, offset: 1216)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 32)
!6150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6151)
!6151 = !{!6152, !6158, !6159}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6150, file: !119, line: 5074, baseType: !6153, size: 96)
!6153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !6154)
!6154 = !{!6155, !6156, !6157}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6153, file: !236, line: 57, baseType: !239, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6153, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6153, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6150, file: !119, line: 5075, baseType: !6095, size: 64, offset: 96)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6150, file: !119, line: 5076, baseType: !6160, size: 32, offset: 160)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !6161)
!6161 = !{!6162}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6160, file: !248, line: 52, baseType: !22, size: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6064, file: !145, line: 343, baseType: !6164, size: 64, offset: 1248)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6165)
!6165 = !{!6166, !6167}
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6164, file: !198, line: 63, baseType: !110, size: 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6164, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 32)
!6169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !6170)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !267, line: 47, size: 8, elements: !6171)
!6171 = !{!6172}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6170, file: !267, line: 48, baseType: !226, size: 8)
!6173 = !{!6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181}
!6174 = !DILocalVariable(name: "thread", arg: 1, scope: !6059, file: !6060, line: 56, type: !6063)
!6175 = !DILocalVariable(name: "stack", arg: 2, scope: !6059, file: !6060, line: 56, type: !6168)
!6176 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6059, file: !6060, line: 57, type: !936)
!6177 = !DILocalVariable(name: "entry", arg: 4, scope: !6059, file: !6060, line: 57, type: !215)
!6178 = !DILocalVariable(name: "p1", arg: 5, scope: !6059, file: !6060, line: 58, type: !108)
!6179 = !DILocalVariable(name: "p2", arg: 6, scope: !6059, file: !6060, line: 58, type: !108)
!6180 = !DILocalVariable(name: "p3", arg: 7, scope: !6059, file: !6060, line: 58, type: !108)
!6181 = !DILocalVariable(name: "iframe", scope: !6059, file: !6060, line: 60, type: !2467)
!6182 = !DILocation(line: 0, scope: !6059)
!6183 = !DILocation(line: 85, column: 11, scope: !6059)
!6184 = !DILocation(line: 93, column: 10, scope: !6059)
!6185 = !DILocation(line: 98, column: 13, scope: !6059)
!6186 = !DILocation(line: 100, column: 15, scope: !6059)
!6187 = !DILocation(line: 100, column: 10, scope: !6059)
!6188 = !DILocation(line: 100, column: 13, scope: !6059)
!6189 = !DILocation(line: 101, column: 15, scope: !6059)
!6190 = !DILocation(line: 101, column: 10, scope: !6059)
!6191 = !DILocation(line: 101, column: 13, scope: !6059)
!6192 = !DILocation(line: 102, column: 15, scope: !6059)
!6193 = !DILocation(line: 102, column: 10, scope: !6059)
!6194 = !DILocation(line: 102, column: 13, scope: !6059)
!6195 = !DILocation(line: 103, column: 15, scope: !6059)
!6196 = !DILocation(line: 103, column: 10, scope: !6059)
!6197 = !DILocation(line: 103, column: 13, scope: !6059)
!6198 = !DILocation(line: 106, column: 10, scope: !6059)
!6199 = !DILocation(line: 106, column: 15, scope: !6059)
!6200 = !DILocation(line: 122, column: 29, scope: !6059)
!6201 = !DILocation(line: 122, column: 23, scope: !6059)
!6202 = !DILocation(line: 122, column: 27, scope: !6059)
!6203 = !DILocation(line: 123, column: 15, scope: !6059)
!6204 = !DILocation(line: 123, column: 23, scope: !6059)
!6205 = !DILocation(line: 143, column: 1, scope: !6059)
!6206 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6060, file: !6060, line: 530, type: !6207, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !6209)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{null, !6063, !936, !215}
!6209 = !{!6210, !6211, !6212}
!6210 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6206, file: !6060, line: 530, type: !6063)
!6211 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6206, file: !6060, line: 530, type: !936)
!6212 = !DILocalVariable(name: "_main", arg: 3, scope: !6206, file: !6060, line: 531, type: !215)
!6213 = !DILocation(line: 0, scope: !6206)
!6214 = !DILocation(line: 535, column: 11, scope: !6206)
!6215 = !DILocation(line: 576, column: 2, scope: !6206)
!6216 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6217 = !DILocation(line: 603, column: 2, scope: !6206)
!6218 = distinct !DISubprogram(name: "z_arm_fault", scope: !6219, file: !6219, line: 1036, type: !6220, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6235)
!6219 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6220 = !DISubroutineType(types: !6221)
!6221 = !{null, !110, !110, !110, !6222}
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6223, size: 32)
!6223 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6224)
!6224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6225)
!6225 = !{!6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6224, file: !198, line: 26, baseType: !110, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6224, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6224, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6224, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6224, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6224, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6224, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6224, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6224, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6235 = !{!6236, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245}
!6236 = !DILocalVariable(name: "msp", arg: 1, scope: !6218, file: !6219, line: 1036, type: !110)
!6237 = !DILocalVariable(name: "psp", arg: 2, scope: !6218, file: !6219, line: 1036, type: !110)
!6238 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6218, file: !6219, line: 1036, type: !110)
!6239 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6218, file: !6219, line: 1037, type: !6222)
!6240 = !DILocalVariable(name: "reason", scope: !6218, file: !6219, line: 1039, type: !110)
!6241 = !DILocalVariable(name: "fault", scope: !6218, file: !6219, line: 1040, type: !109)
!6242 = !DILocalVariable(name: "recoverable", scope: !6218, file: !6219, line: 1041, type: !754)
!6243 = !DILocalVariable(name: "nested_exc", scope: !6218, file: !6219, line: 1041, type: !754)
!6244 = !DILocalVariable(name: "esf", scope: !6218, file: !6219, line: 1042, type: !2535)
!6245 = !DILocalVariable(name: "esf_copy", scope: !6218, file: !6219, line: 1047, type: !2536)
!6246 = !DILocation(line: 0, scope: !6218)
!6247 = !DILocation(line: 1040, column: 19, scope: !6218)
!6248 = !DILocation(line: 1041, column: 2, scope: !6218)
!6249 = !DILocation(line: 1047, column: 2, scope: !6218)
!6250 = !DILocation(line: 1047, column: 15, scope: !6218)
!6251 = !DILocalVariable(name: "key", arg: 1, scope: !6252, file: !6050, line: 84, type: !32)
!6252 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6253)
!6253 = !{!6251}
!6254 = !DILocation(line: 0, scope: !6252, inlinedAt: !6255)
!6255 = distinct !DILocation(line: 1050, column: 2, scope: !6218)
!6256 = !DILocation(line: 95, column: 2, scope: !6252, inlinedAt: !6255)
!6257 = !{i64 2876213}
!6258 = !DILocation(line: 1055, column: 9, scope: !6218)
!6259 = !DILocation(line: 1056, column: 2, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !6219, line: 1056, column: 2)
!6261 = distinct !DILexicalBlock(scope: !6218, file: !6219, line: 1056, column: 2)
!6262 = !DILocation(line: 1056, column: 2, scope: !6261)
!6263 = !DILocation(line: 1056, column: 2, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !6219, line: 1056, column: 2)
!6265 = !DILocation(line: 1040, column: 24, scope: !6218)
!6266 = !DILocation(line: 1063, column: 11, scope: !6218)
!6267 = !DILocation(line: 1064, column: 6, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6218, file: !6219, line: 1064, column: 6)
!6269 = !DILocation(line: 1064, column: 6, scope: !6218)
!6270 = !DILocation(line: 1070, column: 20, scope: !6218)
!6271 = !DILocation(line: 1070, column: 2, scope: !6218)
!6272 = !DILocation(line: 1089, column: 6, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6218, file: !6219, line: 1089, column: 6)
!6274 = !DILocation(line: 0, scope: !6273)
!6275 = !DILocation(line: 1089, column: 6, scope: !6218)
!6276 = !DILocation(line: 1090, column: 28, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !6219, line: 1090, column: 7)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !6219, line: 1089, column: 18)
!6279 = !DILocation(line: 1090, column: 44, scope: !6277)
!6280 = !DILocation(line: 1090, column: 7, scope: !6278)
!6281 = !DILocation(line: 1091, column: 24, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !6219, line: 1090, column: 50)
!6283 = !DILocation(line: 1092, column: 3, scope: !6282)
!6284 = !DILocation(line: 1094, column: 23, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6273, file: !6219, line: 1093, column: 9)
!6286 = !DILocation(line: 1097, column: 2, scope: !6218)
!6287 = !DILocation(line: 1098, column: 1, scope: !6218)
!6288 = distinct !DISubprogram(name: "get_esf", scope: !6219, file: !6219, line: 894, type: !6289, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6292)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{!2535, !110, !110, !110, !6291}
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!6292 = !{!6293, !6294, !6295, !6296, !6297, !6298}
!6293 = !DILocalVariable(name: "msp", arg: 1, scope: !6288, file: !6219, line: 894, type: !110)
!6294 = !DILocalVariable(name: "psp", arg: 2, scope: !6288, file: !6219, line: 894, type: !110)
!6295 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6288, file: !6219, line: 894, type: !110)
!6296 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6288, file: !6219, line: 895, type: !6291)
!6297 = !DILocalVariable(name: "alternative_state_exc", scope: !6288, file: !6219, line: 897, type: !754)
!6298 = !DILocalVariable(name: "ptr_esf", scope: !6288, file: !6219, line: 898, type: !2535)
!6299 = !DILocation(line: 0, scope: !6288)
!6300 = !DILocation(line: 900, column: 14, scope: !6288)
!6301 = !DILocation(line: 902, column: 49, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6288, file: !6219, line: 902, column: 6)
!6303 = !DILocation(line: 902, column: 6, scope: !6288)
!6304 = !DILocation(line: 983, column: 18, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6288, file: !6219, line: 983, column: 6)
!6306 = !DILocation(line: 991, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !6219, line: 990, column: 30)
!6308 = distinct !DILexicalBlock(scope: !6288, file: !6219, line: 990, column: 6)
!6309 = !DILocation(line: 998, column: 16, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !6219, line: 995, column: 10)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !6219, line: 991, column: 7)
!6312 = !DILocation(line: 1002, column: 2, scope: !6288)
!6313 = !DILocation(line: 1003, column: 1, scope: !6288)
!6314 = distinct !DISubprogram(name: "fault_handle", scope: !6219, file: !6219, line: 786, type: !6315, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!110, !2535, !109, !6291}
!6317 = !{!6318, !6319, !6320, !6321}
!6318 = !DILocalVariable(name: "esf", arg: 1, scope: !6314, file: !6219, line: 786, type: !2535)
!6319 = !DILocalVariable(name: "fault", arg: 2, scope: !6314, file: !6219, line: 786, type: !109)
!6320 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6314, file: !6219, line: 786, type: !6291)
!6321 = !DILocalVariable(name: "reason", scope: !6314, file: !6219, line: 788, type: !110)
!6322 = !DILocation(line: 0, scope: !6314)
!6323 = !DILocation(line: 790, column: 15, scope: !6314)
!6324 = !DILocation(line: 792, column: 2, scope: !6314)
!6325 = !DILocation(line: 794, column: 12, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6314, file: !6219, line: 792, column: 17)
!6327 = !DILocation(line: 795, column: 3, scope: !6326)
!6328 = !DILocation(line: 800, column: 12, scope: !6326)
!6329 = !DILocation(line: 801, column: 3, scope: !6326)
!6330 = !DILocation(line: 803, column: 12, scope: !6326)
!6331 = !DILocation(line: 804, column: 3, scope: !6326)
!6332 = !DILocation(line: 806, column: 12, scope: !6326)
!6333 = !DILocation(line: 807, column: 3, scope: !6326)
!6334 = !DILocation(line: 814, column: 3, scope: !6326)
!6335 = !DILocation(line: 815, column: 3, scope: !6326)
!6336 = !DILocation(line: 829, column: 2, scope: !6314)
!6337 = distinct !DISubprogram(name: "hard_fault", scope: !6219, file: !6219, line: 709, type: !6338, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{!110, !2535, !6291}
!6340 = !{!6341, !6342, !6343}
!6341 = !DILocalVariable(name: "esf", arg: 1, scope: !6337, file: !6219, line: 709, type: !2535)
!6342 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6337, file: !6219, line: 709, type: !6291)
!6343 = !DILocalVariable(name: "reason", scope: !6337, file: !6219, line: 711, type: !110)
!6344 = !DILocation(line: 0, scope: !6337)
!6345 = !DILocation(line: 732, column: 15, scope: !6337)
!6346 = !DILocation(line: 734, column: 12, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6337, file: !6219, line: 734, column: 6)
!6348 = !DILocation(line: 734, column: 17, scope: !6347)
!6349 = !DILocation(line: 734, column: 41, scope: !6347)
!6350 = !DILocation(line: 734, column: 6, scope: !6337)
!6351 = !DILocation(line: 736, column: 19, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6347, file: !6219, line: 736, column: 13)
!6353 = !DILocation(line: 736, column: 49, scope: !6352)
!6354 = !DILocation(line: 736, column: 13, scope: !6347)
!6355 = !DILocation(line: 738, column: 19, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6352, file: !6219, line: 738, column: 13)
!6357 = !DILocation(line: 738, column: 24, scope: !6356)
!6358 = !DILocation(line: 738, column: 47, scope: !6356)
!6359 = !DILocation(line: 738, column: 13, scope: !6352)
!6360 = !DILocation(line: 740, column: 7, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !6219, line: 740, column: 7)
!6362 = distinct !DILexicalBlock(scope: !6356, file: !6219, line: 738, column: 53)
!6363 = !DILocation(line: 740, column: 7, scope: !6362)
!6364 = !DILocation(line: 742, column: 24, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6361, file: !6219, line: 740, column: 38)
!6366 = !DILocation(line: 743, column: 3, scope: !6365)
!6367 = !DILocation(line: 743, column: 20, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6361, file: !6219, line: 743, column: 14)
!6369 = !DILocation(line: 743, column: 25, scope: !6368)
!6370 = !DILocation(line: 743, column: 52, scope: !6368)
!6371 = !DILocation(line: 743, column: 14, scope: !6361)
!6372 = !DILocation(line: 744, column: 13, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !6219, line: 743, column: 58)
!6374 = !DILocation(line: 745, column: 3, scope: !6373)
!6375 = !DILocation(line: 745, column: 20, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6368, file: !6219, line: 745, column: 14)
!6377 = !DILocation(line: 745, column: 25, scope: !6376)
!6378 = !DILocation(line: 745, column: 52, scope: !6376)
!6379 = !DILocation(line: 745, column: 14, scope: !6368)
!6380 = !DILocation(line: 746, column: 13, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6376, file: !6219, line: 745, column: 58)
!6382 = !DILocation(line: 747, column: 3, scope: !6381)
!6383 = !DILocation(line: 747, column: 20, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6376, file: !6219, line: 747, column: 14)
!6385 = !DILocation(line: 747, column: 52, scope: !6384)
!6386 = !DILocation(line: 747, column: 14, scope: !6376)
!6387 = !DILocation(line: 748, column: 13, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6384, file: !6219, line: 747, column: 58)
!6389 = !DILocation(line: 754, column: 4, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !6219, line: 754, column: 4)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !6219, line: 754, column: 4)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !6219, line: 754, column: 4)
!6393 = distinct !DILexicalBlock(scope: !6384, file: !6219, line: 753, column: 10)
!6394 = !DILocation(line: 758, column: 3, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !6219, line: 758, column: 3)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !6219, line: 758, column: 3)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !6219, line: 758, column: 3)
!6398 = distinct !DILexicalBlock(scope: !6356, file: !6219, line: 757, column: 9)
!6399 = !DILocation(line: 766, column: 2, scope: !6337)
!6400 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6219, file: !6219, line: 229, type: !6315, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6401)
!6401 = !{!6402, !6403, !6404, !6405, !6406, !6407}
!6402 = !DILocalVariable(name: "esf", arg: 1, scope: !6400, file: !6219, line: 229, type: !2535)
!6403 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6400, file: !6219, line: 229, type: !109)
!6404 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6400, file: !6219, line: 230, type: !6291)
!6405 = !DILocalVariable(name: "reason", scope: !6400, file: !6219, line: 232, type: !110)
!6406 = !DILocalVariable(name: "mmfar", scope: !6400, file: !6219, line: 233, type: !110)
!6407 = !DILocalVariable(name: "temp", scope: !6408, file: !6219, line: 254, type: !110)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !6219, line: 244, column: 48)
!6409 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 244, column: 6)
!6410 = !DILocation(line: 0, scope: !6400)
!6411 = !DILocation(line: 237, column: 12, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 237, column: 6)
!6413 = !DILocation(line: 241, column: 12, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 241, column: 6)
!6415 = !DILocation(line: 244, column: 12, scope: !6409)
!6416 = !DILocation(line: 244, column: 17, scope: !6409)
!6417 = !DILocation(line: 244, column: 42, scope: !6409)
!6418 = !DILocation(line: 244, column: 6, scope: !6400)
!6419 = !DILocation(line: 254, column: 24, scope: !6408)
!6420 = !DILocation(line: 0, scope: !6408)
!6421 = !DILocation(line: 256, column: 13, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6408, file: !6219, line: 256, column: 7)
!6423 = !DILocation(line: 256, column: 18, scope: !6422)
!6424 = !DILocation(line: 256, column: 44, scope: !6422)
!6425 = !DILocation(line: 256, column: 7, scope: !6408)
!6426 = !DILocation(line: 261, column: 15, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !6219, line: 259, column: 30)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !6219, line: 259, column: 8)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !6219, line: 256, column: 50)
!6430 = !DILocation(line: 262, column: 4, scope: !6427)
!6431 = !DILocation(line: 265, column: 12, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 265, column: 6)
!6433 = !DILocation(line: 269, column: 12, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 269, column: 6)
!6435 = !DILocation(line: 288, column: 12, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 288, column: 6)
!6437 = !DILocation(line: 288, column: 17, scope: !6436)
!6438 = !DILocation(line: 288, column: 41, scope: !6436)
!6439 = !DILocation(line: 289, column: 9, scope: !6436)
!6440 = !DILocation(line: 289, column: 14, scope: !6436)
!6441 = !DILocation(line: 288, column: 6, scope: !6400)
!6442 = !DILocation(line: 348, column: 2, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !6219, line: 348, column: 2)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !6219, line: 348, column: 2)
!6445 = distinct !DILexicalBlock(scope: !6436, file: !6219, line: 289, column: 40)
!6446 = !DILocation(line: 348, column: 2, scope: !6444)
!6447 = !DILocation(line: 348, column: 2, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !6219, line: 348, column: 2)
!6449 = !DILocation(line: 360, column: 12, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6400, file: !6219, line: 360, column: 6)
!6451 = !DILocation(line: 360, column: 17, scope: !6450)
!6452 = !DILocation(line: 360, column: 41, scope: !6450)
!6453 = !DILocation(line: 360, column: 6, scope: !6400)
!6454 = !DILocation(line: 361, column: 14, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6450, file: !6219, line: 360, column: 47)
!6456 = !DILocation(line: 362, column: 2, scope: !6455)
!6457 = !DILocation(line: 366, column: 12, scope: !6400)
!6458 = !DILocation(line: 369, column: 15, scope: !6400)
!6459 = !DILocation(line: 371, column: 2, scope: !6400)
!6460 = distinct !DISubprogram(name: "bus_fault", scope: !6219, file: !6219, line: 383, type: !6461, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6463)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!109, !2535, !109, !6291}
!6463 = !{!6464, !6465, !6466, !6467, !6468}
!6464 = !DILocalVariable(name: "esf", arg: 1, scope: !6460, file: !6219, line: 383, type: !2535)
!6465 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6460, file: !6219, line: 383, type: !109)
!6466 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6460, file: !6219, line: 383, type: !6291)
!6467 = !DILocalVariable(name: "reason", scope: !6460, file: !6219, line: 385, type: !110)
!6468 = !DILocalVariable(name: "bfar", scope: !6469, file: !6219, line: 405, type: !110)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6219, line: 395, column: 42)
!6470 = distinct !DILexicalBlock(scope: !6460, file: !6219, line: 395, column: 6)
!6471 = !DILocation(line: 0, scope: !6460)
!6472 = !DILocation(line: 389, column: 11, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6460, file: !6219, line: 389, column: 6)
!6474 = !DILocation(line: 392, column: 11, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6460, file: !6219, line: 392, column: 6)
!6476 = !DILocation(line: 395, column: 11, scope: !6470)
!6477 = !DILocation(line: 395, column: 16, scope: !6470)
!6478 = !DILocation(line: 395, column: 6, scope: !6460)
!6479 = !DILocation(line: 405, column: 3, scope: !6469)
!6480 = !DILocation(line: 0, scope: !6469)
!6481 = !DILocation(line: 407, column: 13, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6469, file: !6219, line: 407, column: 7)
!6483 = !DILocation(line: 407, column: 18, scope: !6482)
!6484 = !DILocation(line: 407, column: 44, scope: !6482)
!6485 = !DILocation(line: 407, column: 7, scope: !6469)
!6486 = !DILocation(line: 411, column: 15, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !6219, line: 409, column: 30)
!6488 = distinct !DILexicalBlock(scope: !6489, file: !6219, line: 409, column: 8)
!6489 = distinct !DILexicalBlock(scope: !6482, file: !6219, line: 407, column: 50)
!6490 = !DILocation(line: 412, column: 4, scope: !6487)
!6491 = !DILocation(line: 415, column: 11, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6460, file: !6219, line: 415, column: 6)
!6493 = !DILocation(line: 418, column: 12, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6460, file: !6219, line: 418, column: 6)
!6495 = !DILocation(line: 418, column: 17, scope: !6494)
!6496 = !DILocation(line: 418, column: 41, scope: !6494)
!6497 = !DILocation(line: 418, column: 6, scope: !6460)
!6498 = !DILocation(line: 423, column: 18, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !6219, line: 423, column: 13)
!6500 = !DILocation(line: 524, column: 12, scope: !6460)
!6501 = !DILocation(line: 526, column: 15, scope: !6460)
!6502 = !DILocation(line: 528, column: 2, scope: !6460)
!6503 = distinct !DISubprogram(name: "usage_fault", scope: !6219, file: !6219, line: 539, type: !6504, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6508)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!110, !6506}
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 32)
!6507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2536)
!6508 = !{!6509, !6510}
!6509 = !DILocalVariable(name: "esf", arg: 1, scope: !6503, file: !6219, line: 539, type: !6506)
!6510 = !DILocalVariable(name: "reason", scope: !6503, file: !6219, line: 541, type: !110)
!6511 = !DILocation(line: 0, scope: !6503)
!6512 = !DILocation(line: 546, column: 12, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 546, column: 6)
!6514 = !DILocation(line: 549, column: 12, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 549, column: 6)
!6516 = !DILocation(line: 567, column: 12, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 567, column: 6)
!6518 = !DILocation(line: 570, column: 12, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 570, column: 6)
!6520 = !DILocation(line: 573, column: 12, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 573, column: 6)
!6522 = !DILocation(line: 576, column: 12, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6503, file: !6219, line: 576, column: 6)
!6524 = !DILocation(line: 581, column: 12, scope: !6503)
!6525 = !DILocation(line: 583, column: 2, scope: !6503)
!6526 = distinct !DISubprogram(name: "debug_monitor", scope: !6219, file: !6219, line: 632, type: !6527, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6529)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{null, !2535, !6291}
!6529 = !{!6530, !6531}
!6530 = !DILocalVariable(name: "esf", arg: 1, scope: !6526, file: !6219, line: 632, type: !2535)
!6531 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6526, file: !6219, line: 632, type: !6291)
!6532 = !DILocation(line: 0, scope: !6526)
!6533 = !DILocation(line: 634, column: 15, scope: !6526)
!6534 = !DILocation(line: 652, column: 1, scope: !6526)
!6535 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6219, file: !6219, line: 658, type: !6536, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!754, !2535}
!6538 = !{!6539, !6540, !6541}
!6539 = !DILocalVariable(name: "esf", arg: 1, scope: !6535, file: !6219, line: 658, type: !2535)
!6540 = !DILocalVariable(name: "ret_addr", scope: !6535, file: !6219, line: 660, type: !2578)
!6541 = !DILocalVariable(name: "fault_insn", scope: !6535, file: !6219, line: 686, type: !181)
!6542 = !DILocation(line: 0, scope: !6535)
!6543 = !DILocation(line: 660, column: 46, scope: !6535)
!6544 = !DILocation(line: 660, column: 23, scope: !6535)
!6545 = !DILocation(line: 682, column: 11, scope: !6535)
!6546 = !DILocation(line: 271, column: 3, scope: !6547, inlinedAt: !6548)
!6547 = distinct !DISubprogram(name: "__DSB", scope: !5931, file: !5931, line: 269, type: !2930, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !1817)
!6548 = distinct !DILocation(line: 683, column: 2, scope: !6535)
!6549 = !{i64 6968168}
!6550 = !DILocation(line: 260, column: 3, scope: !6551, inlinedAt: !6552)
!6551 = distinct !DISubprogram(name: "__ISB", scope: !5931, file: !5931, line: 258, type: !2930, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !1817)
!6552 = distinct !DILocation(line: 684, column: 2, scope: !6535)
!6553 = !{i64 6967885}
!6554 = !DILocation(line: 686, column: 35, scope: !6535)
!6555 = !DILocation(line: 686, column: 24, scope: !6535)
!6556 = !DILocation(line: 688, column: 11, scope: !6535)
!6557 = !DILocation(line: 271, column: 3, scope: !6547, inlinedAt: !6558)
!6558 = distinct !DILocation(line: 689, column: 2, scope: !6535)
!6559 = !DILocation(line: 260, column: 3, scope: !6551, inlinedAt: !6560)
!6560 = distinct !DILocation(line: 690, column: 2, scope: !6535)
!6561 = !DILocation(line: 693, column: 45, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6535, file: !6219, line: 693, column: 6)
!6563 = !DILocation(line: 699, column: 1, scope: !6535)
!6564 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6219, file: !6219, line: 1107, type: !2930, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !1817)
!6565 = !DILocation(line: 1111, column: 11, scope: !6564)
!6566 = !DILocation(line: 1136, column: 1, scope: !6564)
!6567 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6568, file: !6568, line: 26, type: !2930, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6569)
!6568 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6569 = !{!6570}
!6570 = !DILocalVariable(name: "irq", scope: !6567, file: !6568, line: 28, type: !109)
!6571 = !DILocation(line: 0, scope: !6567)
!6572 = !DILocation(line: 30, column: 2, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6567, file: !6568, line: 30, column: 2)
!6574 = !DILocation(line: 31, column: 3, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !6568, line: 30, column: 39)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !6568, line: 30, column: 2)
!6577 = !DILocation(line: 30, column: 35, scope: !6576)
!6578 = !DILocation(line: 30, column: 13, scope: !6576)
!6579 = distinct !{!6579, !6572, !6580}
!6580 = !DILocation(line: 32, column: 2, scope: !6573)
!6581 = !DILocation(line: 33, column: 1, scope: !6567)
!6582 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1458, file: !1458, line: 1814, type: !5971, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6583)
!6583 = !{!6584, !6585}
!6584 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6582, file: !1458, line: 1814, type: !2363)
!6585 = !DILocalVariable(name: "priority", arg: 2, scope: !6582, file: !1458, line: 1814, type: !110)
!6586 = !DILocation(line: 0, scope: !6582)
!6587 = !DILocation(line: 1816, column: 7, scope: !6582)
!6588 = !DILocation(line: 0, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6582, file: !1458, line: 1816, column: 7)
!6590 = !DILocation(line: 1824, column: 1, scope: !6582)
!6591 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6592, file: !6592, line: 27, type: !6593, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6701)
!6592 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6593 = !DISubroutineType(types: !6594)
!6594 = !{null, !6595}
!6595 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !6596)
!6596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6597, size: 32)
!6597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !6598)
!6598 = !{!6599, !6657, !6669, !6670, !6671, !6678, !6679, !6680, !6681, !6696}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6597, file: !145, line: 247, baseType: !6600, size: 384)
!6600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6601)
!6601 = !{!6602, !6626, !6633, !6634, !6635, !6644, !6645, !6646}
!6602 = !DIDerivedType(tag: DW_TAG_member, scope: !6600, file: !145, line: 60, baseType: !6603, size: 64)
!6603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6600, file: !145, line: 60, size: 64, elements: !6604)
!6604 = !{!6605, !6620}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6603, file: !145, line: 61, baseType: !6606, size: 64)
!6606 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6607)
!6607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6608)
!6608 = !{!6609, !6615}
!6609 = !DIDerivedType(tag: DW_TAG_member, scope: !6607, file: !128, line: 38, baseType: !6610, size: 32)
!6610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6607, file: !128, line: 38, size: 32, elements: !6611)
!6611 = !{!6612, !6614}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6610, file: !128, line: 39, baseType: !6613, size: 32)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 32)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6610, file: !128, line: 40, baseType: !6613, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_member, scope: !6607, file: !128, line: 42, baseType: !6616, size: 32, offset: 32)
!6616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6607, file: !128, line: 42, size: 32, elements: !6617)
!6617 = !{!6618, !6619}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6616, file: !128, line: 43, baseType: !6613, size: 32)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6616, file: !128, line: 44, baseType: !6613, size: 32)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6603, file: !145, line: 62, baseType: !6621, size: 64)
!6621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6622)
!6622 = !{!6623}
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6621, file: !157, line: 50, baseType: !6624, size: 64)
!6624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6625, size: 64, elements: !162)
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 32)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6600, file: !145, line: 68, baseType: !6627, size: 32, offset: 64)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 32)
!6628 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6629)
!6629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6630)
!6630 = !{!6631}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6629, file: !123, line: 232, baseType: !6632, size: 64)
!6632 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6607)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6600, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6600, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6635 = !DIDerivedType(tag: DW_TAG_member, scope: !6600, file: !145, line: 90, baseType: !6636, size: 16, offset: 112)
!6636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6600, file: !145, line: 90, size: 16, elements: !6637)
!6637 = !{!6638, !6643}
!6638 = !DIDerivedType(tag: DW_TAG_member, scope: !6636, file: !145, line: 91, baseType: !6639, size: 16)
!6639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6636, file: !145, line: 91, size: 16, elements: !6640)
!6640 = !{!6641, !6642}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6639, file: !145, line: 96, baseType: !177, size: 8)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6639, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6636, file: !145, line: 100, baseType: !181, size: 16)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6600, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6600, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6600, file: !145, line: 131, baseType: !6647, size: 192, offset: 192)
!6647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6648)
!6648 = !{!6649, !6650, !6656}
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6647, file: !123, line: 245, baseType: !6606, size: 64)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6647, file: !123, line: 246, baseType: !6651, size: 32, offset: 64)
!6651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6652)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 32)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{null, !6655}
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 32)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6647, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6597, file: !145, line: 250, baseType: !6658, size: 288, offset: 384)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6659)
!6659 = !{!6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6658, file: !198, line: 26, baseType: !110, size: 32)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6658, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6658, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6658, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6658, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6658, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6658, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6658, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6658, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6597, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6597, file: !145, line: 256, baseType: !6628, size: 64, offset: 704)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6597, file: !145, line: 271, baseType: !6672, size: 128, offset: 768)
!6672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6673)
!6673 = !{!6674, !6675, !6676, !6677}
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6672, file: !145, line: 35, baseType: !215, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6672, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6672, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6672, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6597, file: !145, line: 274, baseType: !6596, size: 32, offset: 896)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6597, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6597, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6597, file: !145, line: 325, baseType: !6682, size: 32, offset: 1216)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 32)
!6683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6684)
!6684 = !{!6685, !6691, !6692}
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6683, file: !119, line: 5074, baseType: !6686, size: 96)
!6686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !6687)
!6687 = !{!6688, !6689, !6690}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6686, file: !236, line: 57, baseType: !239, size: 32)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6686, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6686, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6683, file: !119, line: 5075, baseType: !6628, size: 64, offset: 96)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6683, file: !119, line: 5076, baseType: !6693, size: 32, offset: 160)
!6693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !6694)
!6694 = !{!6695}
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6693, file: !248, line: 52, baseType: !22, size: 32)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6597, file: !145, line: 343, baseType: !6697, size: 64, offset: 1248)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6698)
!6698 = !{!6699, !6700}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6697, file: !198, line: 63, baseType: !110, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6697, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6701 = !{!6702}
!6702 = !DILocalVariable(name: "thread", arg: 1, scope: !6591, file: !6592, line: 27, type: !6595)
!6703 = !DILocation(line: 0, scope: !6591)
!6704 = !DILocation(line: 29, column: 6, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6591, file: !6592, line: 29, column: 6)
!6706 = !DILocation(line: 29, column: 15, scope: !6705)
!6707 = !DILocation(line: 29, column: 6, scope: !6591)
!6708 = !DILocation(line: 1031, column: 3, scope: !6709, inlinedAt: !6712)
!6709 = distinct !DISubprogram(name: "__get_IPSR", scope: !5931, file: !5931, line: 1027, type: !3202, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6710)
!6710 = !{!6711}
!6711 = !DILocalVariable(name: "result", scope: !6709, file: !5931, line: 1029, type: !110)
!6712 = distinct !DILocation(line: 48, column: 10, scope: !6713, inlinedAt: !6717)
!6713 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6714, file: !6714, line: 46, type: !6715, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !1817)
!6714 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!754}
!6717 = distinct !DILocation(line: 30, column: 7, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6592, line: 30, column: 7)
!6719 = distinct !DILexicalBlock(scope: !6705, file: !6592, line: 29, column: 26)
!6720 = !{i64 6969392}
!6721 = !DILocation(line: 0, scope: !6709, inlinedAt: !6712)
!6722 = !DILocation(line: 48, column: 9, scope: !6713, inlinedAt: !6717)
!6723 = !DILocation(line: 30, column: 7, scope: !6719)
!6724 = !DILocation(line: 42, column: 14, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6718, file: !6592, line: 30, column: 25)
!6726 = !DILocation(line: 48, column: 15, scope: !6725)
!6727 = !DILocation(line: 49, column: 3, scope: !6725)
!6728 = !DILocation(line: 52, column: 2, scope: !6591)
!6729 = !DILocation(line: 53, column: 1, scope: !6591)
!6730 = distinct !DISubprogram(name: "strcpy", scope: !6731, file: !6731, line: 20, type: !6732, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6736)
!6731 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!936, !6734, !6735}
!6734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !936)
!6735 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !744)
!6736 = !{!6737, !6738, !6739}
!6737 = !DILocalVariable(name: "d", arg: 1, scope: !6730, file: !6731, line: 20, type: !6734)
!6738 = !DILocalVariable(name: "s", arg: 2, scope: !6730, file: !6731, line: 20, type: !6735)
!6739 = !DILocalVariable(name: "dest", scope: !6730, file: !6731, line: 22, type: !936)
!6740 = !DILocation(line: 0, scope: !6730)
!6741 = !DILocation(line: 24, column: 9, scope: !6730)
!6742 = !DILocation(line: 24, column: 12, scope: !6730)
!6743 = !DILocation(line: 24, column: 2, scope: !6730)
!6744 = !DILocation(line: 25, column: 6, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6730, file: !6731, line: 24, column: 21)
!6746 = !DILocation(line: 26, column: 4, scope: !6745)
!6747 = !DILocation(line: 27, column: 4, scope: !6745)
!6748 = distinct !{!6748, !6743, !6749}
!6749 = !DILocation(line: 28, column: 2, scope: !6730)
!6750 = !DILocation(line: 30, column: 5, scope: !6730)
!6751 = !DILocation(line: 32, column: 2, scope: !6730)
!6752 = distinct !DISubprogram(name: "strncpy", scope: !6731, file: !6731, line: 42, type: !6753, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6755)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!936, !6734, !6735, !243}
!6755 = !{!6756, !6757, !6758, !6759}
!6756 = !DILocalVariable(name: "d", arg: 1, scope: !6752, file: !6731, line: 42, type: !6734)
!6757 = !DILocalVariable(name: "s", arg: 2, scope: !6752, file: !6731, line: 42, type: !6735)
!6758 = !DILocalVariable(name: "n", arg: 3, scope: !6752, file: !6731, line: 42, type: !243)
!6759 = !DILocalVariable(name: "dest", scope: !6752, file: !6731, line: 44, type: !936)
!6760 = !DILocation(line: 0, scope: !6752)
!6761 = !DILocation(line: 46, column: 12, scope: !6752)
!6762 = !DILocation(line: 46, column: 17, scope: !6752)
!6763 = !DILocation(line: 46, column: 20, scope: !6752)
!6764 = !DILocation(line: 46, column: 23, scope: !6752)
!6765 = !DILocation(line: 46, column: 2, scope: !6752)
!6766 = !DILocation(line: 47, column: 6, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6752, file: !6731, line: 46, column: 32)
!6768 = !DILocation(line: 48, column: 4, scope: !6767)
!6769 = !DILocation(line: 49, column: 4, scope: !6767)
!6770 = !DILocation(line: 50, column: 4, scope: !6767)
!6771 = distinct !{!6771, !6765, !6772}
!6772 = !DILocation(line: 51, column: 2, scope: !6752)
!6773 = !DILocation(line: 54, column: 6, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6752, file: !6731, line: 53, column: 16)
!6775 = !DILocation(line: 55, column: 4, scope: !6774)
!6776 = !DILocation(line: 56, column: 4, scope: !6774)
!6777 = !DILocation(line: 53, column: 11, scope: !6752)
!6778 = !DILocation(line: 53, column: 2, scope: !6752)
!6779 = distinct !{!6779, !6778, !6780}
!6780 = !DILocation(line: 57, column: 2, scope: !6752)
!6781 = !DILocation(line: 59, column: 2, scope: !6752)
!6782 = distinct !DISubprogram(name: "strchr", scope: !6731, file: !6731, line: 69, type: !6783, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{!936, !744, !109}
!6785 = !{!6786, !6787, !6788}
!6786 = !DILocalVariable(name: "s", arg: 1, scope: !6782, file: !6731, line: 69, type: !744)
!6787 = !DILocalVariable(name: "c", arg: 2, scope: !6782, file: !6731, line: 69, type: !109)
!6788 = !DILocalVariable(name: "tmp", scope: !6782, file: !6731, line: 71, type: !226)
!6789 = !DILocation(line: 0, scope: !6782)
!6790 = !DILocation(line: 73, column: 2, scope: !6782)
!6791 = !DILocation(line: 73, column: 10, scope: !6782)
!6792 = !DILocation(line: 73, column: 13, scope: !6782)
!6793 = !DILocation(line: 73, column: 21, scope: !6782)
!6794 = !DILocation(line: 74, column: 4, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6782, file: !6731, line: 73, column: 38)
!6796 = distinct !{!6796, !6790, !6797}
!6797 = !DILocation(line: 75, column: 2, scope: !6782)
!6798 = !DILocation(line: 77, column: 9, scope: !6782)
!6799 = !DILocation(line: 77, column: 2, scope: !6782)
!6800 = distinct !DISubprogram(name: "strrchr", scope: !6731, file: !6731, line: 87, type: !6783, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6801)
!6801 = !{!6802, !6803, !6804}
!6802 = !DILocalVariable(name: "s", arg: 1, scope: !6800, file: !6731, line: 87, type: !744)
!6803 = !DILocalVariable(name: "c", arg: 2, scope: !6800, file: !6731, line: 87, type: !109)
!6804 = !DILocalVariable(name: "match", scope: !6800, file: !6731, line: 89, type: !936)
!6805 = !DILocation(line: 0, scope: !6800)
!6806 = !DILocation(line: 91, column: 2, scope: !6800)
!6807 = !DILocation(line: 92, column: 7, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6731, line: 92, column: 7)
!6809 = distinct !DILexicalBlock(scope: !6800, file: !6731, line: 91, column: 5)
!6810 = !DILocation(line: 92, column: 10, scope: !6808)
!6811 = !DILocation(line: 92, column: 7, scope: !6809)
!6812 = !DILocation(line: 95, column: 13, scope: !6800)
!6813 = !DILocation(line: 95, column: 2, scope: !6809)
!6814 = distinct !{!6814, !6806, !6815}
!6815 = !DILocation(line: 95, column: 15, scope: !6800)
!6816 = !DILocation(line: 97, column: 2, scope: !6800)
!6817 = distinct !DISubprogram(name: "strlen", scope: !6731, file: !6731, line: 107, type: !6818, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6820)
!6818 = !DISubroutineType(types: !6819)
!6819 = !{!243, !744}
!6820 = !{!6821, !6822}
!6821 = !DILocalVariable(name: "s", arg: 1, scope: !6817, file: !6731, line: 107, type: !744)
!6822 = !DILocalVariable(name: "n", scope: !6817, file: !6731, line: 109, type: !243)
!6823 = !DILocation(line: 0, scope: !6817)
!6824 = !DILocation(line: 111, column: 9, scope: !6817)
!6825 = !DILocation(line: 111, column: 12, scope: !6817)
!6826 = !DILocation(line: 111, column: 2, scope: !6817)
!6827 = !DILocation(line: 112, column: 4, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6817, file: !6731, line: 111, column: 21)
!6829 = !DILocation(line: 113, column: 4, scope: !6828)
!6830 = distinct !{!6830, !6826, !6831}
!6831 = !DILocation(line: 114, column: 2, scope: !6817)
!6832 = !DILocation(line: 116, column: 2, scope: !6817)
!6833 = distinct !DISubprogram(name: "strnlen", scope: !6731, file: !6731, line: 126, type: !6834, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!243, !744, !243}
!6836 = !{!6837, !6838, !6839}
!6837 = !DILocalVariable(name: "s", arg: 1, scope: !6833, file: !6731, line: 126, type: !744)
!6838 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6833, file: !6731, line: 126, type: !243)
!6839 = !DILocalVariable(name: "n", scope: !6833, file: !6731, line: 128, type: !243)
!6840 = !DILocation(line: 0, scope: !6833)
!6841 = !DILocation(line: 130, column: 9, scope: !6833)
!6842 = !DILocation(line: 130, column: 12, scope: !6833)
!6843 = !DILocation(line: 130, column: 20, scope: !6833)
!6844 = !DILocation(line: 130, column: 2, scope: !6833)
!6845 = !DILocation(line: 131, column: 4, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6833, file: !6731, line: 130, column: 35)
!6847 = !DILocation(line: 132, column: 4, scope: !6846)
!6848 = distinct !{!6848, !6844, !6849}
!6849 = !DILocation(line: 133, column: 2, scope: !6833)
!6850 = !DILocation(line: 135, column: 2, scope: !6833)
!6851 = distinct !DISubprogram(name: "strcmp", scope: !6731, file: !6731, line: 145, type: !6852, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!109, !744, !744}
!6854 = !{!6855, !6856}
!6855 = !DILocalVariable(name: "s1", arg: 1, scope: !6851, file: !6731, line: 145, type: !744)
!6856 = !DILocalVariable(name: "s2", arg: 2, scope: !6851, file: !6731, line: 145, type: !744)
!6857 = !DILocation(line: 0, scope: !6851)
!6858 = !DILocation(line: 147, column: 10, scope: !6851)
!6859 = !DILocation(line: 147, column: 17, scope: !6851)
!6860 = !DILocation(line: 147, column: 14, scope: !6851)
!6861 = !DILocation(line: 147, column: 22, scope: !6851)
!6862 = !DILocation(line: 148, column: 5, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6851, file: !6731, line: 147, column: 40)
!6864 = !DILocation(line: 149, column: 5, scope: !6863)
!6865 = distinct !{!6865, !6866, !6867}
!6866 = !DILocation(line: 147, column: 2, scope: !6851)
!6867 = !DILocation(line: 150, column: 2, scope: !6851)
!6868 = !DILocation(line: 152, column: 9, scope: !6851)
!6869 = !DILocation(line: 152, column: 15, scope: !6851)
!6870 = !DILocation(line: 152, column: 13, scope: !6851)
!6871 = !DILocation(line: 152, column: 2, scope: !6851)
!6872 = distinct !DISubprogram(name: "strncmp", scope: !6731, file: !6731, line: 162, type: !6873, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6875)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{!109, !744, !744, !243}
!6875 = !{!6876, !6877, !6878}
!6876 = !DILocalVariable(name: "s1", arg: 1, scope: !6872, file: !6731, line: 162, type: !744)
!6877 = !DILocalVariable(name: "s2", arg: 2, scope: !6872, file: !6731, line: 162, type: !744)
!6878 = !DILocalVariable(name: "n", arg: 3, scope: !6872, file: !6731, line: 162, type: !243)
!6879 = !DILocation(line: 0, scope: !6872)
!6880 = !DILocation(line: 164, column: 17, scope: !6872)
!6881 = !DILocation(line: 164, column: 21, scope: !6872)
!6882 = !DILocation(line: 164, column: 28, scope: !6872)
!6883 = !DILocation(line: 164, column: 25, scope: !6872)
!6884 = !DILocation(line: 164, column: 33, scope: !6872)
!6885 = !DILocation(line: 165, column: 5, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6872, file: !6731, line: 164, column: 51)
!6887 = !DILocation(line: 166, column: 5, scope: !6886)
!6888 = !DILocation(line: 167, column: 4, scope: !6886)
!6889 = distinct !{!6889, !6890, !6891}
!6890 = !DILocation(line: 164, column: 2, scope: !6872)
!6891 = !DILocation(line: 168, column: 2, scope: !6872)
!6892 = !DILocation(line: 170, column: 25, scope: !6872)
!6893 = !DILocation(line: 170, column: 31, scope: !6872)
!6894 = !DILocation(line: 170, column: 29, scope: !6872)
!6895 = !DILocation(line: 170, column: 9, scope: !6872)
!6896 = !DILocation(line: 170, column: 2, scope: !6872)
!6897 = distinct !DISubprogram(name: "strtok_r", scope: !6731, file: !6731, line: 180, type: !6898, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6901)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!936, !936, !744, !6900}
!6900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!6901 = !{!6902, !6903, !6904, !6905, !6906}
!6902 = !DILocalVariable(name: "str", arg: 1, scope: !6897, file: !6731, line: 180, type: !936)
!6903 = !DILocalVariable(name: "sep", arg: 2, scope: !6897, file: !6731, line: 180, type: !744)
!6904 = !DILocalVariable(name: "state", arg: 3, scope: !6897, file: !6731, line: 180, type: !6900)
!6905 = !DILocalVariable(name: "start", scope: !6897, file: !6731, line: 182, type: !936)
!6906 = !DILocalVariable(name: "end", scope: !6897, file: !6731, line: 182, type: !936)
!6907 = !DILocation(line: 0, scope: !6897)
!6908 = !DILocation(line: 184, column: 10, scope: !6897)
!6909 = !DILocation(line: 184, column: 22, scope: !6897)
!6910 = !DILocation(line: 187, column: 9, scope: !6897)
!6911 = !DILocation(line: 187, column: 16, scope: !6897)
!6912 = !DILocation(line: 187, column: 19, scope: !6897)
!6913 = !DILocation(line: 187, column: 2, scope: !6897)
!6914 = !DILocation(line: 188, column: 8, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6897, file: !6731, line: 187, column: 40)
!6916 = distinct !{!6916, !6913, !6917}
!6917 = !DILocation(line: 189, column: 2, scope: !6897)
!6918 = !DILocation(line: 198, column: 9, scope: !6897)
!6919 = !DILocation(line: 198, column: 18, scope: !6897)
!6920 = !DILocation(line: 198, column: 17, scope: !6897)
!6921 = !DILocation(line: 198, column: 2, scope: !6897)
!6922 = !DILocation(line: 199, column: 6, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6897, file: !6731, line: 198, column: 37)
!6924 = !DILocation(line: 198, column: 14, scope: !6897)
!6925 = distinct !{!6925, !6921, !6926}
!6926 = !DILocation(line: 200, column: 2, scope: !6897)
!6927 = !DILocation(line: 203, column: 8, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6731, line: 202, column: 20)
!6929 = distinct !DILexicalBlock(scope: !6897, file: !6731, line: 202, column: 6)
!6930 = !DILocation(line: 204, column: 16, scope: !6928)
!6931 = !DILocation(line: 205, column: 2, scope: !6928)
!6932 = !DILocation(line: 210, column: 1, scope: !6897)
!6933 = distinct !DISubprogram(name: "strcat", scope: !6731, file: !6731, line: 212, type: !6732, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6934)
!6934 = !{!6935, !6936}
!6935 = !DILocalVariable(name: "dest", arg: 1, scope: !6933, file: !6731, line: 212, type: !6734)
!6936 = !DILocalVariable(name: "src", arg: 2, scope: !6933, file: !6731, line: 212, type: !6735)
!6937 = !DILocation(line: 0, scope: !6933)
!6938 = !DILocation(line: 214, column: 16, scope: !6933)
!6939 = !DILocation(line: 214, column: 14, scope: !6933)
!6940 = !DILocation(line: 214, column: 2, scope: !6933)
!6941 = !DILocation(line: 215, column: 2, scope: !6933)
!6942 = distinct !DISubprogram(name: "strncat", scope: !6731, file: !6731, line: 218, type: !6753, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6943)
!6943 = !{!6944, !6945, !6946, !6947, !6948}
!6944 = !DILocalVariable(name: "dest", arg: 1, scope: !6942, file: !6731, line: 218, type: !6734)
!6945 = !DILocalVariable(name: "src", arg: 2, scope: !6942, file: !6731, line: 218, type: !6735)
!6946 = !DILocalVariable(name: "n", arg: 3, scope: !6942, file: !6731, line: 219, type: !243)
!6947 = !DILocalVariable(name: "orig_dest", scope: !6942, file: !6731, line: 221, type: !936)
!6948 = !DILocalVariable(name: "len", scope: !6942, file: !6731, line: 222, type: !243)
!6949 = !DILocation(line: 0, scope: !6942)
!6950 = !DILocation(line: 222, column: 15, scope: !6942)
!6951 = !DILocation(line: 224, column: 7, scope: !6942)
!6952 = !DILocation(line: 225, column: 14, scope: !6942)
!6953 = !DILocation(line: 225, column: 19, scope: !6942)
!6954 = !DILocation(line: 225, column: 11, scope: !6942)
!6955 = !DILocation(line: 225, column: 23, scope: !6942)
!6956 = !DILocation(line: 225, column: 28, scope: !6942)
!6957 = !DILocation(line: 225, column: 2, scope: !6942)
!6958 = !DILocation(line: 226, column: 17, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6942, file: !6731, line: 225, column: 38)
!6960 = !DILocation(line: 226, column: 8, scope: !6959)
!6961 = !DILocation(line: 226, column: 11, scope: !6959)
!6962 = distinct !{!6962, !6957, !6963}
!6963 = !DILocation(line: 227, column: 2, scope: !6942)
!6964 = !DILocation(line: 228, column: 8, scope: !6942)
!6965 = !DILocation(line: 230, column: 2, scope: !6942)
!6966 = distinct !DISubprogram(name: "memcmp", scope: !6731, file: !6731, line: 239, type: !6967, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6969)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!109, !13, !13, !243}
!6969 = !{!6970, !6971, !6972, !6973, !6974}
!6970 = !DILocalVariable(name: "m1", arg: 1, scope: !6966, file: !6731, line: 239, type: !13)
!6971 = !DILocalVariable(name: "m2", arg: 2, scope: !6966, file: !6731, line: 239, type: !13)
!6972 = !DILocalVariable(name: "n", arg: 3, scope: !6966, file: !6731, line: 239, type: !243)
!6973 = !DILocalVariable(name: "c1", scope: !6966, file: !6731, line: 241, type: !744)
!6974 = !DILocalVariable(name: "c2", scope: !6966, file: !6731, line: 242, type: !744)
!6975 = !DILocation(line: 0, scope: !6966)
!6976 = !DILocation(line: 244, column: 7, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6966, file: !6731, line: 244, column: 6)
!6978 = !DILocation(line: 244, column: 6, scope: !6966)
!6979 = !DILocation(line: 248, column: 10, scope: !6966)
!6980 = !DILocation(line: 248, column: 14, scope: !6966)
!6981 = !DILocation(line: 248, column: 19, scope: !6966)
!6982 = !DILocation(line: 248, column: 2, scope: !6966)
!6983 = !DILocation(line: 248, column: 23, scope: !6966)
!6984 = !DILocation(line: 248, column: 30, scope: !6966)
!6985 = !DILocation(line: 248, column: 27, scope: !6966)
!6986 = !DILocation(line: 249, column: 5, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6966, file: !6731, line: 248, column: 36)
!6988 = !DILocation(line: 250, column: 5, scope: !6987)
!6989 = distinct !{!6989, !6982, !6990}
!6990 = !DILocation(line: 251, column: 2, scope: !6966)
!6991 = !DILocation(line: 253, column: 9, scope: !6966)
!6992 = !DILocation(line: 253, column: 15, scope: !6966)
!6993 = !DILocation(line: 253, column: 13, scope: !6966)
!6994 = !DILocation(line: 253, column: 2, scope: !6966)
!6995 = !DILocation(line: 254, column: 1, scope: !6966)
!6996 = distinct !DISubprogram(name: "memmove", scope: !6731, file: !6731, line: 263, type: !6997, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6999)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!108, !108, !13, !243}
!6999 = !{!7000, !7001, !7002, !7003, !7004}
!7000 = !DILocalVariable(name: "d", arg: 1, scope: !6996, file: !6731, line: 263, type: !108)
!7001 = !DILocalVariable(name: "s", arg: 2, scope: !6996, file: !6731, line: 263, type: !13)
!7002 = !DILocalVariable(name: "n", arg: 3, scope: !6996, file: !6731, line: 263, type: !243)
!7003 = !DILocalVariable(name: "dest", scope: !6996, file: !6731, line: 265, type: !936)
!7004 = !DILocalVariable(name: "src", scope: !6996, file: !6731, line: 266, type: !744)
!7005 = !DILocation(line: 0, scope: !6996)
!7006 = !DILocation(line: 268, column: 21, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6996, file: !6731, line: 268, column: 6)
!7008 = !DILocation(line: 268, column: 28, scope: !7007)
!7009 = !DILocation(line: 268, column: 6, scope: !6996)
!7010 = !DILocation(line: 280, column: 12, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7007, file: !6731, line: 278, column: 9)
!7012 = !DILocation(line: 280, column: 3, scope: !7011)
!7013 = !DILocation(line: 275, column: 5, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6731, line: 274, column: 17)
!7015 = distinct !DILexicalBlock(scope: !7007, file: !6731, line: 268, column: 33)
!7016 = !DILocation(line: 276, column: 14, scope: !7014)
!7017 = !DILocation(line: 276, column: 4, scope: !7014)
!7018 = !DILocation(line: 276, column: 12, scope: !7014)
!7019 = !DILocation(line: 274, column: 12, scope: !7015)
!7020 = !DILocation(line: 274, column: 3, scope: !7015)
!7021 = distinct !{!7021, !7020, !7022}
!7022 = !DILocation(line: 277, column: 3, scope: !7015)
!7023 = !DILocation(line: 281, column: 12, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7011, file: !6731, line: 280, column: 17)
!7025 = !DILocation(line: 281, column: 10, scope: !7024)
!7026 = !DILocation(line: 282, column: 8, scope: !7024)
!7027 = !DILocation(line: 283, column: 7, scope: !7024)
!7028 = !DILocation(line: 284, column: 5, scope: !7024)
!7029 = distinct !{!7029, !7012, !7030}
!7030 = !DILocation(line: 285, column: 3, scope: !7011)
!7031 = !DILocation(line: 288, column: 2, scope: !6996)
!7032 = distinct !DISubprogram(name: "memcpy", scope: !6731, file: !6731, line: 298, type: !7033, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !7037)
!7033 = !DISubroutineType(types: !7034)
!7034 = !{!108, !7035, !7036, !243}
!7035 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!7036 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7037 = !{!7038, !7039, !7040, !7041, !7042}
!7038 = !DILocalVariable(name: "d", arg: 1, scope: !7032, file: !6731, line: 298, type: !7035)
!7039 = !DILocalVariable(name: "s", arg: 2, scope: !7032, file: !6731, line: 298, type: !7036)
!7040 = !DILocalVariable(name: "n", arg: 3, scope: !7032, file: !6731, line: 298, type: !243)
!7041 = !DILocalVariable(name: "d_byte", scope: !7032, file: !6731, line: 302, type: !762)
!7042 = !DILocalVariable(name: "s_byte", scope: !7032, file: !6731, line: 303, type: !2655)
!7043 = !DILocation(line: 0, scope: !7032)
!7044 = !DILocation(line: 337, column: 11, scope: !7032)
!7045 = !DILocation(line: 337, column: 2, scope: !7032)
!7046 = !DILocation(line: 338, column: 25, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7032, file: !6731, line: 337, column: 16)
!7048 = !DILocation(line: 338, column: 17, scope: !7047)
!7049 = !DILocation(line: 338, column: 11, scope: !7047)
!7050 = !DILocation(line: 338, column: 15, scope: !7047)
!7051 = !DILocation(line: 339, column: 4, scope: !7047)
!7052 = distinct !{!7052, !7045, !7053}
!7053 = !DILocation(line: 340, column: 2, scope: !7032)
!7054 = !DILocation(line: 342, column: 2, scope: !7032)
!7055 = distinct !DISubprogram(name: "memset", scope: !6731, file: !6731, line: 352, type: !7056, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!108, !108, !109, !243}
!7058 = !{!7059, !7060, !7061, !7062, !7063}
!7059 = !DILocalVariable(name: "buf", arg: 1, scope: !7055, file: !6731, line: 352, type: !108)
!7060 = !DILocalVariable(name: "c", arg: 2, scope: !7055, file: !6731, line: 352, type: !109)
!7061 = !DILocalVariable(name: "n", arg: 3, scope: !7055, file: !6731, line: 352, type: !243)
!7062 = !DILocalVariable(name: "d_byte", scope: !7055, file: !6731, line: 356, type: !762)
!7063 = !DILocalVariable(name: "c_byte", scope: !7055, file: !6731, line: 357, type: !168)
!7064 = !DILocation(line: 0, scope: !7055)
!7065 = !DILocation(line: 357, column: 25, scope: !7055)
!7066 = !DILocation(line: 389, column: 11, scope: !7055)
!7067 = !DILocation(line: 389, column: 2, scope: !7055)
!7068 = !DILocation(line: 390, column: 11, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7055, file: !6731, line: 389, column: 16)
!7070 = !DILocation(line: 390, column: 15, scope: !7069)
!7071 = !DILocation(line: 391, column: 4, scope: !7069)
!7072 = distinct !{!7072, !7067, !7073}
!7073 = !DILocation(line: 392, column: 2, scope: !7055)
!7074 = !DILocation(line: 394, column: 2, scope: !7055)
!7075 = distinct !DISubprogram(name: "memchr", scope: !6731, file: !6731, line: 404, type: !7076, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !7078)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{!108, !13, !109, !243}
!7078 = !{!7079, !7080, !7081, !7082}
!7079 = !DILocalVariable(name: "s", arg: 1, scope: !7075, file: !6731, line: 404, type: !13)
!7080 = !DILocalVariable(name: "c", arg: 2, scope: !7075, file: !6731, line: 404, type: !109)
!7081 = !DILocalVariable(name: "n", arg: 3, scope: !7075, file: !6731, line: 404, type: !243)
!7082 = !DILocalVariable(name: "p", scope: !7083, file: !6731, line: 407, type: !2655)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6731, line: 406, column: 14)
!7084 = distinct !DILexicalBlock(scope: !7075, file: !6731, line: 406, column: 6)
!7085 = !DILocation(line: 0, scope: !7075)
!7086 = !DILocation(line: 406, column: 8, scope: !7084)
!7087 = !DILocation(line: 406, column: 6, scope: !7075)
!7088 = !DILocation(line: 409, column: 3, scope: !7083)
!7089 = !DILocation(line: 0, scope: !7083)
!7090 = !DILocation(line: 410, column: 8, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6731, line: 410, column: 8)
!7092 = distinct !DILexicalBlock(scope: !7083, file: !6731, line: 409, column: 6)
!7093 = !DILocation(line: 410, column: 13, scope: !7091)
!7094 = !DILocation(line: 410, column: 8, scope: !7092)
!7095 = distinct !{!7095, !7088, !7096}
!7096 = !DILocation(line: 414, column: 20, scope: !7083)
!7097 = !DILocation(line: 417, column: 2, scope: !7075)
!7098 = !DILocation(line: 418, column: 1, scope: !7075)
!7099 = distinct !DISubprogram(name: "uart_console_init", scope: !826, file: !826, line: 588, type: !769, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7100)
!7100 = !{!7101}
!7101 = !DILocalVariable(name: "arg", arg: 1, scope: !7099, file: !826, line: 588, type: !738)
!7102 = !DILocation(line: 0, scope: !7099)
!7103 = !DILocation(line: 593, column: 7, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7099, file: !826, line: 593, column: 6)
!7105 = !DILocation(line: 593, column: 6, scope: !7099)
!7106 = !DILocation(line: 597, column: 2, scope: !7099)
!7107 = !DILocation(line: 599, column: 2, scope: !7099)
!7108 = !DILocation(line: 600, column: 1, scope: !7099)
!7109 = distinct !DISubprogram(name: "device_is_ready", scope: !7110, file: !7110, line: 47, type: !7111, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7113)
!7110 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!754, !738}
!7113 = !{!7114}
!7114 = !DILocalVariable(name: "dev", arg: 1, scope: !7109, file: !7110, line: 47, type: !738)
!7115 = !DILocation(line: 0, scope: !7109)
!7116 = !DILocation(line: 55, column: 2, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7109, file: !7110, line: 55, column: 2)
!7118 = !{i64 2151378587}
!7119 = !DILocation(line: 56, column: 9, scope: !7109)
!7120 = !DILocation(line: 56, column: 2, scope: !7109)
!7121 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !826, file: !826, line: 573, type: !2930, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !1817)
!7122 = !DILocation(line: 579, column: 2, scope: !7121)
!7123 = !DILocation(line: 581, column: 1, scope: !7121)
!7124 = distinct !DISubprogram(name: "console_out", scope: !826, file: !826, line: 77, type: !282, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7125)
!7125 = !{!7126}
!7126 = !DILocalVariable(name: "c", arg: 1, scope: !7124, file: !826, line: 77, type: !109)
!7127 = !DILocation(line: 0, scope: !7124)
!7128 = !DILocation(line: 89, column: 11, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7124, file: !826, line: 89, column: 6)
!7130 = !DILocation(line: 89, column: 6, scope: !7124)
!7131 = !DILocation(line: 90, column: 3, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7129, file: !826, line: 89, column: 17)
!7133 = !DILocation(line: 91, column: 2, scope: !7132)
!7134 = !DILocation(line: 92, column: 34, scope: !7124)
!7135 = !DILocation(line: 92, column: 2, scope: !7124)
!7136 = !DILocation(line: 94, column: 2, scope: !7124)
!7137 = distinct !DISubprogram(name: "uart_poll_out", scope: !7138, file: !7138, line: 95, type: !765, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7139)
!7138 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_meerkat96/philosophers")
!7139 = !{!7140, !7141}
!7140 = !DILocalVariable(name: "dev", arg: 1, scope: !7137, file: !7138, line: 95, type: !738)
!7141 = !DILocalVariable(name: "out_char", arg: 2, scope: !7137, file: !7138, line: 95, type: !168)
!7142 = !DILocation(line: 0, scope: !7137)
!7143 = !DILocation(line: 105, column: 2, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7137, file: !7138, line: 105, column: 2)
!7145 = !{i64 2151461832}
!7146 = !DILocation(line: 106, column: 2, scope: !7137)
!7147 = !DILocation(line: 107, column: 1, scope: !7137)
!7148 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !732, file: !732, line: 574, type: !765, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7149)
!7149 = !{!7150, !7151, !7152}
!7150 = !DILocalVariable(name: "dev", arg: 1, scope: !7148, file: !732, line: 574, type: !738)
!7151 = !DILocalVariable(name: "out_char", arg: 2, scope: !7148, file: !732, line: 575, type: !168)
!7152 = !DILocalVariable(name: "api", scope: !7148, file: !732, line: 577, type: !729)
!7153 = !DILocation(line: 0, scope: !7148)
!7154 = !DILocation(line: 578, column: 40, scope: !7148)
!7155 = !DILocation(line: 580, column: 7, scope: !7148)
!7156 = !DILocation(line: 580, column: 2, scope: !7148)
!7157 = !DILocation(line: 581, column: 1, scope: !7148)
!7158 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !741, file: !741, line: 730, type: !7111, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7159)
!7159 = !{!7160}
!7160 = !DILocalVariable(name: "dev", arg: 1, scope: !7158, file: !741, line: 730, type: !738)
!7161 = !DILocation(line: 0, scope: !7158)
!7162 = !DILocation(line: 732, column: 9, scope: !7158)
!7163 = !DILocation(line: 732, column: 2, scope: !7158)
!7164 = distinct !DISubprogram(name: "uart_register_input", scope: !826, file: !826, line: 560, type: !7165, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !7212)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{null, !7167, !7167, !7209}
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 32)
!7168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !119, line: 2208, size: 160, elements: !7169)
!7169 = !{!7170}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7168, file: !119, line: 2209, baseType: !7171, size: 160)
!7171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !119, line: 1709, size: 160, elements: !7172)
!7172 = !{!7173, !7186, !7190}
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7171, file: !119, line: 1710, baseType: !7174, size: 64)
!7174 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7175, line: 46, baseType: !7176)
!7175 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7175, line: 41, size: 64, elements: !7177)
!7177 = !{!7178, !7185}
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7176, file: !7175, line: 42, baseType: !7179, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7180, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7175, line: 39, baseType: !7181)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7175, line: 35, size: 32, elements: !7182)
!7182 = !{!7183}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7181, file: !7175, line: 36, baseType: !7184, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7175, line: 32, baseType: !110)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7176, file: !7175, line: 43, baseType: !7179, size: 32, offset: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7171, file: !119, line: 1711, baseType: !7187, size: 32, offset: 64)
!7187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !7188)
!7188 = !{!7189}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7187, file: !248, line: 52, baseType: !22, size: 32)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7171, file: !119, line: 1712, baseType: !7191, size: 64, offset: 96)
!7191 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !7192)
!7192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !7193)
!7193 = !{!7194}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7192, file: !123, line: 232, baseType: !7195, size: 64)
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !7196)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !7197)
!7197 = !{!7198, !7204}
!7198 = !DIDerivedType(tag: DW_TAG_member, scope: !7196, file: !128, line: 38, baseType: !7199, size: 32)
!7199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7196, file: !128, line: 38, size: 32, elements: !7200)
!7200 = !{!7201, !7203}
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7199, file: !128, line: 39, baseType: !7202, size: 32)
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7196, size: 32)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7199, file: !128, line: 40, baseType: !7202, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_member, scope: !7196, file: !128, line: 42, baseType: !7205, size: 32, offset: 32)
!7205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7196, file: !128, line: 42, size: 32, elements: !7206)
!7206 = !{!7207, !7208}
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7205, file: !128, line: 43, baseType: !7202, size: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7205, file: !128, line: 44, baseType: !7202, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 32)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!167, !936, !167}
!7212 = !{!7213, !7214, !7215}
!7213 = !DILocalVariable(name: "avail", arg: 1, scope: !7164, file: !826, line: 560, type: !7167)
!7214 = !DILocalVariable(name: "lines", arg: 2, scope: !7164, file: !826, line: 560, type: !7167)
!7215 = !DILocalVariable(name: "completion", arg: 3, scope: !7164, file: !826, line: 561, type: !7209)
!7216 = !DILocation(line: 0, scope: !7164)
!7217 = !DILocation(line: 566, column: 1, scope: !7164)
!7218 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !940, file: !940, line: 40, type: !861, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7219)
!7219 = !{!7220, !7221, !7222, !7223, !7225, !7226, !7231, !7232}
!7220 = !DILocalVariable(name: "port", arg: 1, scope: !7218, file: !940, line: 40, type: !863)
!7221 = !DILocalVariable(name: "pin", arg: 2, scope: !7218, file: !940, line: 40, type: !878)
!7222 = !DILocalVariable(name: "flags", arg: 3, scope: !7218, file: !940, line: 41, type: !879)
!7223 = !DILocalVariable(name: "config", scope: !7218, file: !940, line: 43, type: !7224)
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!7225 = !DILocalVariable(name: "base", scope: !7218, file: !940, line: 44, type: !977)
!7226 = !DILocalVariable(name: "pin_cfg", scope: !7218, file: !940, line: 52, type: !7227)
!7227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !993, line: 59, size: 160, elements: !7228)
!7228 = !{!7229, !7230}
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !7227, file: !993, line: 60, baseType: !992, size: 128)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !7227, file: !993, line: 61, baseType: !110, size: 32, offset: 128)
!7231 = !DILocalVariable(name: "gpio_cfg_reg", scope: !7218, file: !940, line: 54, type: !696)
!7232 = !DILocalVariable(name: "reg", scope: !7218, file: !940, line: 56, type: !110)
!7233 = !DILocation(line: 0, scope: !7218)
!7234 = !DILocation(line: 43, column: 47, scope: !7218)
!7235 = !DILocation(line: 44, column: 28, scope: !7218)
!7236 = !DILocation(line: 46, column: 35, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7218, file: !940, line: 46, column: 6)
!7238 = !DILocation(line: 50, column: 2, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !940, line: 50, column: 2)
!7240 = distinct !DILexicalBlock(scope: !7218, file: !940, line: 50, column: 2)
!7241 = !DILocation(line: 50, column: 2, scope: !7240)
!7242 = !DILocation(line: 50, column: 2, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !940, line: 50, column: 2)
!7244 = !DILocation(line: 52, column: 2, scope: !7218)
!7245 = !DILocation(line: 52, column: 25, scope: !7218)
!7246 = !DILocation(line: 55, column: 32, scope: !7218)
!7247 = !DILocation(line: 55, column: 47, scope: !7218)
!7248 = !DILocation(line: 55, column: 3, scope: !7218)
!7249 = !DILocation(line: 56, column: 17, scope: !7218)
!7250 = !DILocation(line: 66, column: 13, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7218, file: !940, line: 66, column: 6)
!7252 = !DILocation(line: 66, column: 34, scope: !7251)
!7253 = !DILocation(line: 66, column: 6, scope: !7218)
!7254 = !DILocation(line: 70, column: 36, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7218, file: !940, line: 70, column: 6)
!7256 = !DILocation(line: 70, column: 14, scope: !7255)
!7257 = !DILocation(line: 70, column: 30, scope: !7255)
!7258 = !DILocation(line: 72, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7255, file: !940, line: 70, column: 72)
!7260 = !DILocation(line: 73, column: 8, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !940, line: 72, column: 38)
!7262 = distinct !DILexicalBlock(scope: !7259, file: !940, line: 72, column: 7)
!7263 = !DILocation(line: 74, column: 3, scope: !7261)
!7264 = !DILocation(line: 75, column: 8, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7262, file: !940, line: 74, column: 10)
!7266 = !DILocation(line: 79, column: 7, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7255, file: !940, line: 77, column: 9)
!7268 = !DILocation(line: 0, scope: !7255)
!7269 = !DILocation(line: 84, column: 27, scope: !7218)
!7270 = !DILocation(line: 84, column: 26, scope: !7218)
!7271 = !DILocation(line: 84, column: 2, scope: !7218)
!7272 = !DILocation(line: 86, column: 10, scope: !7218)
!7273 = !DILocation(line: 86, column: 25, scope: !7218)
!7274 = !DILocation(line: 87, column: 2, scope: !7218)
!7275 = !DILocation(line: 98, column: 2, scope: !7218)
!7276 = !DILocation(line: 99, column: 2, scope: !7218)
!7277 = !DILocation(line: 101, column: 6, scope: !7218)
!7278 = !DILocation(line: 103, column: 14, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !940, line: 103, column: 7)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !940, line: 101, column: 35)
!7281 = distinct !DILexicalBlock(scope: !7218, file: !940, line: 101, column: 6)
!7282 = !DILocation(line: 103, column: 38, scope: !7279)
!7283 = !DILocation(line: 103, column: 7, scope: !7280)
!7284 = !DILocation(line: 105, column: 21, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !940, line: 105, column: 14)
!7286 = !DILocation(line: 105, column: 46, scope: !7285)
!7287 = !DILocation(line: 105, column: 14, scope: !7279)
!7288 = !DILocation(line: 0, scope: !7279)
!7289 = !DILocation(line: 110, column: 3, scope: !7280)
!7290 = !DILocation(line: 111, column: 2, scope: !7280)
!7291 = !DILocation(line: 113, column: 3, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7281, file: !940, line: 111, column: 9)
!7293 = !DILocation(line: 117, column: 1, scope: !7218)
!7294 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !940, file: !940, line: 119, type: !7295, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7297)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!109, !863, !1265}
!7297 = !{!7298, !7299, !7300, !7301}
!7298 = !DILocalVariable(name: "port", arg: 1, scope: !7294, file: !940, line: 119, type: !863)
!7299 = !DILocalVariable(name: "value", arg: 2, scope: !7294, file: !940, line: 119, type: !1265)
!7300 = !DILocalVariable(name: "config", scope: !7294, file: !940, line: 121, type: !7224)
!7301 = !DILocalVariable(name: "base", scope: !7294, file: !940, line: 122, type: !977)
!7302 = !DILocation(line: 0, scope: !7294)
!7303 = !DILocation(line: 121, column: 47, scope: !7294)
!7304 = !DILocation(line: 122, column: 28, scope: !7294)
!7305 = !DILocation(line: 124, column: 11, scope: !7294)
!7306 = !DILocation(line: 124, column: 9, scope: !7294)
!7307 = !DILocation(line: 126, column: 2, scope: !7294)
!7308 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !940, file: !940, line: 129, type: !888, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7309)
!7309 = !{!7310, !7311, !7312, !7313, !7314}
!7310 = !DILocalVariable(name: "port", arg: 1, scope: !7308, file: !940, line: 129, type: !863)
!7311 = !DILocalVariable(name: "mask", arg: 2, scope: !7308, file: !940, line: 130, type: !890)
!7312 = !DILocalVariable(name: "value", arg: 3, scope: !7308, file: !940, line: 131, type: !885)
!7313 = !DILocalVariable(name: "config", scope: !7308, file: !940, line: 133, type: !7224)
!7314 = !DILocalVariable(name: "base", scope: !7308, file: !940, line: 134, type: !977)
!7315 = !DILocation(line: 0, scope: !7308)
!7316 = !DILocation(line: 133, column: 47, scope: !7308)
!7317 = !DILocation(line: 134, column: 28, scope: !7308)
!7318 = !DILocation(line: 137, column: 5, scope: !7308)
!7319 = !DILocation(line: 137, column: 32, scope: !7308)
!7320 = !DILocation(line: 137, column: 30, scope: !7308)
!7321 = !DILocation(line: 137, column: 48, scope: !7308)
!7322 = !DILocation(line: 137, column: 39, scope: !7308)
!7323 = !DILocation(line: 136, column: 2, scope: !7308)
!7324 = !DILocation(line: 139, column: 2, scope: !7308)
!7325 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !940, file: !940, line: 142, type: !893, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7326)
!7326 = !{!7327, !7328, !7329, !7330}
!7327 = !DILocalVariable(name: "port", arg: 1, scope: !7325, file: !940, line: 142, type: !863)
!7328 = !DILocalVariable(name: "pins", arg: 2, scope: !7325, file: !940, line: 143, type: !890)
!7329 = !DILocalVariable(name: "config", scope: !7325, file: !940, line: 145, type: !7224)
!7330 = !DILocalVariable(name: "base", scope: !7325, file: !940, line: 146, type: !977)
!7331 = !DILocation(line: 0, scope: !7325)
!7332 = !DILocation(line: 145, column: 47, scope: !7325)
!7333 = !DILocation(line: 146, column: 28, scope: !7325)
!7334 = !DILocation(line: 148, column: 29, scope: !7325)
!7335 = !DILocation(line: 148, column: 54, scope: !7325)
!7336 = !DILocation(line: 148, column: 2, scope: !7325)
!7337 = !DILocation(line: 150, column: 2, scope: !7325)
!7338 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !940, file: !940, line: 153, type: !893, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7339)
!7339 = !{!7340, !7341, !7342, !7343}
!7340 = !DILocalVariable(name: "port", arg: 1, scope: !7338, file: !940, line: 153, type: !863)
!7341 = !DILocalVariable(name: "pins", arg: 2, scope: !7338, file: !940, line: 154, type: !890)
!7342 = !DILocalVariable(name: "config", scope: !7338, file: !940, line: 156, type: !7224)
!7343 = !DILocalVariable(name: "base", scope: !7338, file: !940, line: 157, type: !977)
!7344 = !DILocation(line: 0, scope: !7338)
!7345 = !DILocation(line: 156, column: 47, scope: !7338)
!7346 = !DILocation(line: 157, column: 28, scope: !7338)
!7347 = !DILocation(line: 159, column: 29, scope: !7338)
!7348 = !DILocation(line: 159, column: 56, scope: !7338)
!7349 = !DILocation(line: 159, column: 54, scope: !7338)
!7350 = !DILocation(line: 159, column: 2, scope: !7338)
!7351 = !DILocation(line: 161, column: 2, scope: !7338)
!7352 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !940, file: !940, line: 164, type: !893, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7353)
!7353 = !{!7354, !7355, !7356, !7357}
!7354 = !DILocalVariable(name: "port", arg: 1, scope: !7352, file: !940, line: 164, type: !863)
!7355 = !DILocalVariable(name: "pins", arg: 2, scope: !7352, file: !940, line: 165, type: !890)
!7356 = !DILocalVariable(name: "config", scope: !7352, file: !940, line: 167, type: !7224)
!7357 = !DILocalVariable(name: "base", scope: !7352, file: !940, line: 168, type: !977)
!7358 = !DILocation(line: 0, scope: !7352)
!7359 = !DILocation(line: 167, column: 47, scope: !7352)
!7360 = !DILocation(line: 168, column: 28, scope: !7352)
!7361 = !DILocation(line: 170, column: 29, scope: !7352)
!7362 = !DILocation(line: 170, column: 54, scope: !7352)
!7363 = !DILocation(line: 170, column: 2, scope: !7352)
!7364 = !DILocation(line: 172, column: 2, scope: !7352)
!7365 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !940, file: !940, line: 175, type: !899, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7366)
!7366 = !{!7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376}
!7367 = !DILocalVariable(name: "port", arg: 1, scope: !7365, file: !940, line: 175, type: !863)
!7368 = !DILocalVariable(name: "pin", arg: 2, scope: !7365, file: !940, line: 176, type: !878)
!7369 = !DILocalVariable(name: "mode", arg: 3, scope: !7365, file: !940, line: 177, type: !838)
!7370 = !DILocalVariable(name: "trig", arg: 4, scope: !7365, file: !940, line: 178, type: !844)
!7371 = !DILocalVariable(name: "config", scope: !7365, file: !940, line: 180, type: !7224)
!7372 = !DILocalVariable(name: "base", scope: !7365, file: !940, line: 181, type: !977)
!7373 = !DILocalVariable(name: "icr_reg", scope: !7365, file: !940, line: 182, type: !696)
!7374 = !DILocalVariable(name: "key", scope: !7365, file: !940, line: 183, type: !32)
!7375 = !DILocalVariable(name: "icr_val", scope: !7365, file: !940, line: 184, type: !110)
!7376 = !DILocalVariable(name: "shift", scope: !7365, file: !940, line: 185, type: !167)
!7377 = !DILocation(line: 0, scope: !7365)
!7378 = !DILocation(line: 180, column: 47, scope: !7365)
!7379 = !DILocation(line: 181, column: 28, scope: !7365)
!7380 = !DILocation(line: 187, column: 14, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7365, file: !940, line: 187, column: 6)
!7382 = !DILocation(line: 187, column: 21, scope: !7381)
!7383 = !DILocation(line: 187, column: 19, scope: !7381)
!7384 = !DILocation(line: 187, column: 31, scope: !7381)
!7385 = !DILocation(line: 188, column: 6, scope: !7381)
!7386 = !DILocation(line: 193, column: 12, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7365, file: !940, line: 193, column: 6)
!7388 = !DILocation(line: 193, column: 35, scope: !7387)
!7389 = !DILocation(line: 195, column: 42, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7387, file: !940, line: 195, column: 13)
!7391 = !DILocation(line: 198, column: 19, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7390, file: !940, line: 198, column: 13)
!7393 = !DILocation(line: 198, column: 43, scope: !7392)
!7394 = !DILocation(line: 0, scope: !7387)
!7395 = !DILocation(line: 205, column: 10, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7365, file: !940, line: 205, column: 6)
!7397 = !DILocation(line: 205, column: 6, scope: !7365)
!7398 = !DILocation(line: 206, column: 14, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7396, file: !940, line: 205, column: 17)
!7400 = !DILocation(line: 207, column: 21, scope: !7399)
!7401 = !DILocation(line: 208, column: 2, scope: !7399)
!7402 = !DILocation(line: 208, column: 17, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7396, file: !940, line: 208, column: 13)
!7404 = !DILocation(line: 208, column: 13, scope: !7396)
!7405 = !DILocation(line: 209, column: 14, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !940, line: 208, column: 24)
!7407 = !DILocation(line: 210, column: 21, scope: !7406)
!7408 = !DILocation(line: 0, scope: !7396)
!7409 = !DILocation(line: 55, column: 2, scope: !7410, inlinedAt: !7416)
!7410 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!32}
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "key", scope: !7410, file: !6050, line: 44, type: !32)
!7415 = !DILocalVariable(name: "tmp", scope: !7410, file: !6050, line: 53, type: !32)
!7416 = distinct !DILocation(line: 215, column: 8, scope: !7365)
!7417 = !{i64 3054008}
!7418 = !DILocation(line: 0, scope: !7410, inlinedAt: !7416)
!7419 = !DILocation(line: 217, column: 14, scope: !7365)
!7420 = !DILocation(line: 217, column: 33, scope: !7365)
!7421 = !DILocation(line: 217, column: 30, scope: !7365)
!7422 = !DILocation(line: 217, column: 25, scope: !7365)
!7423 = !DILocation(line: 217, column: 23, scope: !7365)
!7424 = !DILocation(line: 217, column: 52, scope: !7365)
!7425 = !DILocation(line: 217, column: 41, scope: !7365)
!7426 = !DILocation(line: 217, column: 11, scope: !7365)
!7427 = !DILocation(line: 219, column: 2, scope: !7365)
!7428 = !DILocation(line: 220, column: 2, scope: !7365)
!7429 = !DILocation(line: 221, column: 2, scope: !7365)
!7430 = !DILocalVariable(name: "key", arg: 1, scope: !7431, file: !6050, line: 84, type: !32)
!7431 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7432)
!7432 = !{!7430}
!7433 = !DILocation(line: 0, scope: !7431, inlinedAt: !7434)
!7434 = distinct !DILocation(line: 223, column: 2, scope: !7365)
!7435 = !DILocation(line: 95, column: 2, scope: !7431, inlinedAt: !7434)
!7436 = !{i64 3054825}
!7437 = !DILocation(line: 225, column: 2, scope: !7365)
!7438 = !DILocation(line: 226, column: 1, scope: !7365)
!7439 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !940, file: !940, line: 228, type: !903, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7440)
!7440 = !{!7441, !7442, !7443, !7444}
!7441 = !DILocalVariable(name: "port", arg: 1, scope: !7439, file: !940, line: 228, type: !863)
!7442 = !DILocalVariable(name: "cb", arg: 2, scope: !7439, file: !940, line: 229, type: !905)
!7443 = !DILocalVariable(name: "set", arg: 3, scope: !7439, file: !940, line: 229, type: !754)
!7444 = !DILocalVariable(name: "data", scope: !7439, file: !940, line: 231, type: !7445)
!7445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!7446 = !DILocation(line: 0, scope: !7439)
!7447 = !DILocation(line: 231, column: 37, scope: !7439)
!7448 = !DILocation(line: 233, column: 37, scope: !7439)
!7449 = !DILocation(line: 233, column: 9, scope: !7439)
!7450 = !DILocation(line: 233, column: 2, scope: !7439)
!7451 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7452, file: !7452, line: 38, type: !7453, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7456)
!7452 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7453 = !DISubroutineType(types: !7454)
!7454 = !{!109, !7455, !905, !754}
!7455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!7456 = !{!7457, !7458, !7459}
!7457 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7451, file: !7452, line: 38, type: !7455)
!7458 = !DILocalVariable(name: "callback", arg: 2, scope: !7451, file: !7452, line: 39, type: !905)
!7459 = !DILocalVariable(name: "set", arg: 3, scope: !7451, file: !7452, line: 40, type: !754)
!7460 = !DILocation(line: 0, scope: !7451)
!7461 = !DILocation(line: 42, column: 2, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !7452, line: 42, column: 2)
!7463 = distinct !DILexicalBlock(scope: !7451, file: !7452, line: 42, column: 2)
!7464 = !DILocation(line: 42, column: 2, scope: !7463)
!7465 = !DILocation(line: 42, column: 2, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7462, file: !7452, line: 42, column: 2)
!7467 = !DILocation(line: 43, column: 2, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !7452, line: 43, column: 2)
!7469 = distinct !DILexicalBlock(scope: !7451, file: !7452, line: 43, column: 2)
!7470 = !DILocation(line: 43, column: 2, scope: !7469)
!7471 = !DILocation(line: 43, column: 2, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7468, file: !7452, line: 43, column: 2)
!7473 = !DILocation(line: 45, column: 7, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7451, file: !7452, line: 45, column: 6)
!7475 = !DILocation(line: 45, column: 6, scope: !7451)
!7476 = !DILocation(line: 46, column: 56, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !7452, line: 46, column: 7)
!7478 = distinct !DILexicalBlock(scope: !7474, file: !7452, line: 45, column: 38)
!7479 = !DILocation(line: 46, column: 8, scope: !7477)
!7480 = !DILocation(line: 46, column: 7, scope: !7478)
!7481 = !DILocation(line: 51, column: 13, scope: !7474)
!7482 = !DILocation(line: 56, column: 43, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !7452, line: 55, column: 11)
!7484 = distinct !DILexicalBlock(scope: !7451, file: !7452, line: 55, column: 6)
!7485 = !DILocation(line: 56, column: 3, scope: !7483)
!7486 = !DILocation(line: 57, column: 2, scope: !7483)
!7487 = !DILocation(line: 60, column: 1, scope: !7451)
!7488 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !910, file: !910, line: 261, type: !7489, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7491)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!754, !7455}
!7491 = !{!7492}
!7492 = !DILocalVariable(name: "list", arg: 1, scope: !7488, file: !910, line: 261, type: !7455)
!7493 = !DILocation(line: 0, scope: !7488)
!7494 = !DILocation(line: 261, column: 1, scope: !7488)
!7495 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !910, file: !910, line: 417, type: !7496, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7498)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!754, !7455, !966}
!7498 = !{!7499, !7500, !7501, !7502}
!7499 = !DILocalVariable(name: "list", arg: 1, scope: !7495, file: !910, line: 417, type: !7455)
!7500 = !DILocalVariable(name: "node", arg: 2, scope: !7495, file: !910, line: 417, type: !966)
!7501 = !DILocalVariable(name: "prev", scope: !7495, file: !910, line: 417, type: !966)
!7502 = !DILocalVariable(name: "test", scope: !7495, file: !910, line: 417, type: !966)
!7503 = !DILocation(line: 0, scope: !7495)
!7504 = !DILocation(line: 417, column: 1, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7495, file: !910, line: 417, column: 1)
!7506 = !DILocation(line: 417, column: 1, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7505, file: !910, line: 417, column: 1)
!7508 = !DILocation(line: 417, column: 1, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !910, line: 417, column: 1)
!7510 = distinct !DILexicalBlock(scope: !7507, file: !910, line: 417, column: 1)
!7511 = !DILocation(line: 417, column: 1, scope: !7510)
!7512 = distinct !{!7512, !7504, !7504}
!7513 = !DILocation(line: 417, column: 1, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7509, file: !910, line: 417, column: 1)
!7515 = !DILocation(line: 417, column: 1, scope: !7495)
!7516 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !910, file: !910, line: 298, type: !7517, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{null, !7455, !966}
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "list", arg: 1, scope: !7516, file: !910, line: 298, type: !7455)
!7521 = !DILocalVariable(name: "node", arg: 2, scope: !7516, file: !910, line: 298, type: !966)
!7522 = !DILocation(line: 0, scope: !7516)
!7523 = !DILocation(line: 298, column: 1, scope: !7516)
!7524 = !DILocation(line: 298, column: 1, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7516, file: !910, line: 298, column: 1)
!7526 = !DILocation(line: 298, column: 1, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7525, file: !910, line: 298, column: 1)
!7528 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !910, file: !910, line: 231, type: !7529, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7531)
!7529 = !DISubroutineType(types: !7530)
!7530 = !{!966, !7455}
!7531 = !{!7532}
!7532 = !DILocalVariable(name: "list", arg: 1, scope: !7528, file: !910, line: 231, type: !7455)
!7533 = !DILocation(line: 0, scope: !7528)
!7534 = !DILocation(line: 233, column: 15, scope: !7528)
!7535 = !DILocation(line: 233, column: 2, scope: !7528)
!7536 = distinct !DISubprogram(name: "z_snode_next_set", scope: !910, file: !910, line: 209, type: !7537, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7539)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{null, !966, !966}
!7539 = !{!7540, !7541}
!7540 = !DILocalVariable(name: "parent", arg: 1, scope: !7536, file: !910, line: 209, type: !966)
!7541 = !DILocalVariable(name: "child", arg: 2, scope: !7536, file: !910, line: 209, type: !966)
!7542 = !DILocation(line: 0, scope: !7536)
!7543 = !DILocation(line: 211, column: 10, scope: !7536)
!7544 = !DILocation(line: 211, column: 15, scope: !7536)
!7545 = !DILocation(line: 212, column: 1, scope: !7536)
!7546 = distinct !DISubprogram(name: "z_slist_head_set", scope: !910, file: !910, line: 214, type: !7517, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7547)
!7547 = !{!7548, !7549}
!7548 = !DILocalVariable(name: "list", arg: 1, scope: !7546, file: !910, line: 214, type: !7455)
!7549 = !DILocalVariable(name: "node", arg: 2, scope: !7546, file: !910, line: 214, type: !966)
!7550 = !DILocation(line: 0, scope: !7546)
!7551 = !DILocation(line: 216, column: 8, scope: !7546)
!7552 = !DILocation(line: 216, column: 13, scope: !7546)
!7553 = !DILocation(line: 217, column: 1, scope: !7546)
!7554 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !910, file: !910, line: 243, type: !7529, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7555)
!7555 = !{!7556}
!7556 = !DILocalVariable(name: "list", arg: 1, scope: !7554, file: !910, line: 243, type: !7455)
!7557 = !DILocation(line: 0, scope: !7554)
!7558 = !DILocation(line: 245, column: 15, scope: !7554)
!7559 = !DILocation(line: 245, column: 2, scope: !7554)
!7560 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !910, file: !910, line: 219, type: !7517, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7561)
!7561 = !{!7562, !7563}
!7562 = !DILocalVariable(name: "list", arg: 1, scope: !7560, file: !910, line: 219, type: !7455)
!7563 = !DILocalVariable(name: "node", arg: 2, scope: !7560, file: !910, line: 219, type: !966)
!7564 = !DILocation(line: 0, scope: !7560)
!7565 = !DILocation(line: 221, column: 8, scope: !7560)
!7566 = !DILocation(line: 221, column: 13, scope: !7560)
!7567 = !DILocation(line: 222, column: 1, scope: !7560)
!7568 = distinct !DISubprogram(name: "sys_slist_remove", scope: !910, file: !910, line: 401, type: !7569, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7571)
!7569 = !DISubroutineType(types: !7570)
!7570 = !{null, !7455, !966, !966}
!7571 = !{!7572, !7573, !7574}
!7572 = !DILocalVariable(name: "list", arg: 1, scope: !7568, file: !910, line: 401, type: !7455)
!7573 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7568, file: !910, line: 401, type: !966)
!7574 = !DILocalVariable(name: "node", arg: 3, scope: !7568, file: !910, line: 401, type: !966)
!7575 = !DILocation(line: 0, scope: !7568)
!7576 = !DILocation(line: 401, column: 1, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7568, file: !910, line: 401, column: 1)
!7578 = !DILocation(line: 0, scope: !7577)
!7579 = !DILocation(line: 401, column: 1, scope: !7568)
!7580 = !DILocation(line: 401, column: 1, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7577, file: !910, line: 401, column: 1)
!7582 = !DILocation(line: 401, column: 1, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7581, file: !910, line: 401, column: 1)
!7584 = !DILocation(line: 401, column: 1, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7583, file: !910, line: 401, column: 1)
!7586 = !DILocation(line: 401, column: 1, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7577, file: !910, line: 401, column: 1)
!7588 = !DILocation(line: 401, column: 1, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7587, file: !910, line: 401, column: 1)
!7590 = !DILocation(line: 401, column: 1, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7589, file: !910, line: 401, column: 1)
!7592 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !910, file: !910, line: 285, type: !7593, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7595)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!966, !966}
!7595 = !{!7596}
!7596 = !DILocalVariable(name: "node", arg: 1, scope: !7592, file: !910, line: 285, type: !966)
!7597 = !DILocation(line: 0, scope: !7592)
!7598 = !DILocation(line: 285, column: 1, scope: !7592)
!7599 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !910, file: !910, line: 274, type: !7593, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7600)
!7600 = !{!7601}
!7601 = !DILocalVariable(name: "node", arg: 1, scope: !7599, file: !910, line: 274, type: !966)
!7602 = !DILocation(line: 0, scope: !7599)
!7603 = !DILocation(line: 274, column: 1, scope: !7599)
!7604 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !910, file: !910, line: 204, type: !7593, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7605)
!7605 = !{!7606}
!7606 = !DILocalVariable(name: "node", arg: 1, scope: !7604, file: !910, line: 204, type: !966)
!7607 = !DILocation(line: 0, scope: !7604)
!7608 = !DILocation(line: 206, column: 15, scope: !7604)
!7609 = !DILocation(line: 206, column: 2, scope: !7604)
!7610 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !850, file: !850, line: 131, type: !7611, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7613)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!110, !977}
!7613 = !{!7614}
!7614 = !DILocalVariable(name: "base", arg: 1, scope: !7610, file: !850, line: 131, type: !977)
!7615 = !DILocation(line: 0, scope: !7610)
!7616 = !DILocation(line: 133, column: 12, scope: !7610)
!7617 = !DILocation(line: 133, column: 5, scope: !7610)
!7618 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !850, file: !850, line: 178, type: !7619, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{null, !977, !110}
!7621 = !{!7622, !7623}
!7622 = !DILocalVariable(name: "base", arg: 1, scope: !7618, file: !850, line: 178, type: !977)
!7623 = !DILocalVariable(name: "portVal", arg: 2, scope: !7618, file: !850, line: 178, type: !110)
!7624 = !DILocation(line: 0, scope: !7618)
!7625 = !DILocation(line: 180, column: 5, scope: !7618)
!7626 = !DILocation(line: 180, column: 23, scope: !7618)
!7627 = !DILocation(line: 181, column: 1, scope: !7618)
!7628 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !940, file: !940, line: 236, type: !7629, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{null, !863}
!7631 = !{!7632, !7633, !7634, !7635}
!7632 = !DILocalVariable(name: "port", arg: 1, scope: !7628, file: !940, line: 236, type: !863)
!7633 = !DILocalVariable(name: "config", scope: !7628, file: !940, line: 238, type: !7224)
!7634 = !DILocalVariable(name: "data", scope: !7628, file: !940, line: 239, type: !7445)
!7635 = !DILocalVariable(name: "int_status", scope: !7628, file: !940, line: 240, type: !110)
!7636 = !DILocation(line: 0, scope: !7628)
!7637 = !DILocation(line: 238, column: 47, scope: !7628)
!7638 = !DILocation(line: 239, column: 37, scope: !7628)
!7639 = !DILocation(line: 242, column: 23, scope: !7628)
!7640 = !DILocation(line: 242, column: 29, scope: !7628)
!7641 = !DILocation(line: 244, column: 20, scope: !7628)
!7642 = !DILocation(line: 246, column: 29, scope: !7628)
!7643 = !DILocation(line: 246, column: 2, scope: !7628)
!7644 = !DILocation(line: 247, column: 1, scope: !7628)
!7645 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7452, file: !7452, line: 69, type: !7646, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !835, retainedNodes: !7648)
!7646 = !DISubroutineType(types: !7647)
!7647 = !{null, !7455, !863, !110}
!7648 = !{!7649, !7650, !7651, !7652, !7653}
!7649 = !DILocalVariable(name: "list", arg: 1, scope: !7645, file: !7452, line: 69, type: !7455)
!7650 = !DILocalVariable(name: "port", arg: 2, scope: !7645, file: !7452, line: 70, type: !863)
!7651 = !DILocalVariable(name: "pins", arg: 3, scope: !7645, file: !7452, line: 71, type: !110)
!7652 = !DILocalVariable(name: "cb", scope: !7645, file: !7452, line: 73, type: !905)
!7653 = !DILocalVariable(name: "tmp", scope: !7645, file: !7452, line: 73, type: !905)
!7654 = !DILocation(line: 0, scope: !7645)
!7655 = !DILocation(line: 75, column: 2, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7645, file: !7452, line: 75, column: 2)
!7657 = !DILocation(line: 0, scope: !7656)
!7658 = !DILocation(line: 76, column: 11, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7452, line: 76, column: 7)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !7452, line: 75, column: 57)
!7661 = distinct !DILexicalBlock(scope: !7656, file: !7452, line: 75, column: 2)
!7662 = !DILocation(line: 76, column: 20, scope: !7659)
!7663 = !DILocation(line: 76, column: 7, scope: !7660)
!7664 = !DILocation(line: 77, column: 4, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !7452, line: 77, column: 4)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !7452, line: 77, column: 4)
!7667 = distinct !DILexicalBlock(scope: !7659, file: !7452, line: 76, column: 28)
!7668 = !DILocation(line: 77, column: 4, scope: !7666)
!7669 = !DILocation(line: 77, column: 4, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7665, file: !7452, line: 77, column: 4)
!7671 = !DILocation(line: 78, column: 4, scope: !7667)
!7672 = !DILocation(line: 79, column: 3, scope: !7667)
!7673 = !DILocation(line: 75, column: 2, scope: !7661)
!7674 = !DILocation(line: 81, column: 1, scope: !7645)
!7675 = !DILocation(line: 0, scope: !1005)
!7676 = !DILocation(line: 318, column: 1, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !1005, file: !940, line: 318, column: 1)
!7678 = !DILocation(line: 318, column: 1, scope: !1005)
!7679 = !DILocation(line: 318, column: 1, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !1005, file: !940, line: 318, column: 1)
!7681 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1230, file: !1230, line: 114, type: !1128, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7682)
!7682 = !{!7683, !7684, !7685, !7686}
!7683 = !DILocalVariable(name: "dev", arg: 1, scope: !7681, file: !1230, line: 114, type: !1130)
!7684 = !DILocalVariable(name: "c", arg: 2, scope: !7681, file: !1230, line: 114, type: !762)
!7685 = !DILocalVariable(name: "uart", scope: !7681, file: !1230, line: 116, type: !1201)
!7686 = !DILocalVariable(name: "ret", scope: !7681, file: !1230, line: 117, type: !109)
!7687 = !DILocation(line: 0, scope: !7681)
!7688 = !DILocation(line: 116, column: 20, scope: !7681)
!7689 = !DILocation(line: 119, column: 6, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7681, file: !1230, line: 119, column: 6)
!7691 = !DILocation(line: 119, column: 6, scope: !7681)
!7692 = !DILocation(line: 120, column: 8, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7690, file: !1230, line: 119, column: 55)
!7694 = !DILocation(line: 120, column: 6, scope: !7693)
!7695 = !DILocation(line: 122, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7693, file: !1230, line: 122, column: 7)
!7697 = !DILocation(line: 122, column: 7, scope: !7693)
!7698 = !DILocation(line: 123, column: 4, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7696, file: !1230, line: 122, column: 54)
!7700 = !DILocation(line: 124, column: 3, scope: !7699)
!7701 = !DILocation(line: 128, column: 2, scope: !7681)
!7702 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1230, file: !1230, line: 105, type: !1147, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7703)
!7703 = !{!7704, !7705, !7706}
!7704 = !DILocalVariable(name: "dev", arg: 1, scope: !7702, file: !1230, line: 105, type: !1130)
!7705 = !DILocalVariable(name: "c", arg: 2, scope: !7702, file: !1230, line: 105, type: !168)
!7706 = !DILocalVariable(name: "uart", scope: !7702, file: !1230, line: 107, type: !1201)
!7707 = !DILocation(line: 0, scope: !7702)
!7708 = !DILocation(line: 107, column: 20, scope: !7702)
!7709 = !DILocation(line: 109, column: 2, scope: !7702)
!7710 = !DILocation(line: 109, column: 10, scope: !7702)
!7711 = distinct !{!7711, !7709, !7712}
!7712 = !DILocation(line: 110, column: 2, scope: !7702)
!7713 = !DILocation(line: 111, column: 2, scope: !7702)
!7714 = !DILocation(line: 112, column: 1, scope: !7702)
!7715 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1230, file: !1230, line: 133, type: !1173, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7716)
!7716 = !{!7717, !7718, !7719, !7720, !7721}
!7717 = !DILocalVariable(name: "dev", arg: 1, scope: !7715, file: !1230, line: 133, type: !1130)
!7718 = !DILocalVariable(name: "tx_data", arg: 2, scope: !7715, file: !1230, line: 134, type: !793)
!7719 = !DILocalVariable(name: "size", arg: 3, scope: !7715, file: !1230, line: 135, type: !109)
!7720 = !DILocalVariable(name: "uart", scope: !7715, file: !1230, line: 137, type: !1201)
!7721 = !DILocalVariable(name: "num_tx", scope: !7715, file: !1230, line: 138, type: !32)
!7722 = !DILocation(line: 0, scope: !7715)
!7723 = !DILocation(line: 137, column: 20, scope: !7715)
!7724 = !DILocation(line: 140, column: 26, scope: !7715)
!7725 = !DILocation(line: 140, column: 31, scope: !7715)
!7726 = !DILocation(line: 141, column: 6, scope: !7715)
!7727 = !DILocation(line: 140, column: 2, scope: !7715)
!7728 = !DILocation(line: 143, column: 22, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7715, file: !1230, line: 141, column: 51)
!7730 = !DILocation(line: 143, column: 3, scope: !7729)
!7731 = !DILocation(line: 144, column: 9, scope: !7729)
!7732 = distinct !{!7732, !7727, !7733}
!7733 = !DILocation(line: 145, column: 2, scope: !7715)
!7734 = !DILocation(line: 147, column: 2, scope: !7715)
!7735 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1230, file: !1230, line: 150, type: !1177, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7736)
!7736 = !{!7737, !7738, !7739, !7740, !7741}
!7737 = !DILocalVariable(name: "dev", arg: 1, scope: !7735, file: !1230, line: 150, type: !1130)
!7738 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7735, file: !1230, line: 150, type: !799)
!7739 = !DILocalVariable(name: "size", arg: 3, scope: !7735, file: !1230, line: 151, type: !800)
!7740 = !DILocalVariable(name: "uart", scope: !7735, file: !1230, line: 153, type: !1201)
!7741 = !DILocalVariable(name: "num_rx", scope: !7735, file: !1230, line: 154, type: !32)
!7742 = !DILocation(line: 0, scope: !7735)
!7743 = !DILocation(line: 153, column: 20, scope: !7735)
!7744 = !DILocation(line: 156, column: 26, scope: !7735)
!7745 = !DILocation(line: 156, column: 31, scope: !7735)
!7746 = !DILocation(line: 157, column: 6, scope: !7735)
!7747 = !DILocation(line: 156, column: 2, scope: !7735)
!7748 = !DILocation(line: 159, column: 23, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7735, file: !1230, line: 157, column: 51)
!7750 = !DILocation(line: 159, column: 17, scope: !7749)
!7751 = !DILocation(line: 159, column: 3, scope: !7749)
!7752 = !DILocation(line: 159, column: 21, scope: !7749)
!7753 = distinct !{!7753, !7747, !7754}
!7754 = !DILocation(line: 160, column: 2, scope: !7735)
!7755 = !DILocation(line: 162, column: 6, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7735, file: !1230, line: 162, column: 6)
!7757 = !DILocation(line: 162, column: 6, scope: !7735)
!7758 = !DILocation(line: 163, column: 3, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7756, file: !1230, line: 162, column: 53)
!7760 = !DILocation(line: 164, column: 2, scope: !7759)
!7761 = !DILocation(line: 166, column: 2, scope: !7735)
!7762 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1230, file: !1230, line: 169, type: !1181, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7763)
!7763 = !{!7764, !7765}
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7762, file: !1230, line: 169, type: !1130)
!7765 = !DILocalVariable(name: "uart", scope: !7762, file: !1230, line: 171, type: !1201)
!7766 = !DILocation(line: 0, scope: !7762)
!7767 = !DILocation(line: 171, column: 20, scope: !7762)
!7768 = !DILocation(line: 173, column: 2, scope: !7762)
!7769 = !DILocation(line: 174, column: 1, scope: !7762)
!7770 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1230, file: !1230, line: 176, type: !1181, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7771)
!7771 = !{!7772, !7773}
!7772 = !DILocalVariable(name: "dev", arg: 1, scope: !7770, file: !1230, line: 176, type: !1130)
!7773 = !DILocalVariable(name: "uart", scope: !7770, file: !1230, line: 178, type: !1201)
!7774 = !DILocation(line: 0, scope: !7770)
!7775 = !DILocation(line: 178, column: 20, scope: !7770)
!7776 = !DILocation(line: 180, column: 2, scope: !7770)
!7777 = !DILocation(line: 181, column: 1, scope: !7770)
!7778 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1230, file: !1230, line: 183, type: !1151, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7779)
!7779 = !{!7780, !7781}
!7780 = !DILocalVariable(name: "dev", arg: 1, scope: !7778, file: !1230, line: 183, type: !1130)
!7781 = !DILocalVariable(name: "uart", scope: !7778, file: !1230, line: 185, type: !1201)
!7782 = !DILocation(line: 0, scope: !7778)
!7783 = !DILocation(line: 185, column: 20, scope: !7778)
!7784 = !DILocation(line: 187, column: 9, scope: !7778)
!7785 = !DILocation(line: 187, column: 2, scope: !7778)
!7786 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1230, file: !1230, line: 190, type: !1181, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7787)
!7787 = !{!7788, !7789}
!7788 = !DILocalVariable(name: "dev", arg: 1, scope: !7786, file: !1230, line: 190, type: !1130)
!7789 = !DILocalVariable(name: "uart", scope: !7786, file: !1230, line: 192, type: !1201)
!7790 = !DILocation(line: 0, scope: !7786)
!7791 = !DILocation(line: 192, column: 20, scope: !7786)
!7792 = !DILocation(line: 194, column: 2, scope: !7786)
!7793 = !DILocation(line: 195, column: 1, scope: !7786)
!7794 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1230, file: !1230, line: 197, type: !1181, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7795)
!7795 = !{!7796, !7797}
!7796 = !DILocalVariable(name: "dev", arg: 1, scope: !7794, file: !1230, line: 197, type: !1130)
!7797 = !DILocalVariable(name: "uart", scope: !7794, file: !1230, line: 199, type: !1201)
!7798 = !DILocation(line: 0, scope: !7794)
!7799 = !DILocation(line: 199, column: 20, scope: !7794)
!7800 = !DILocation(line: 201, column: 2, scope: !7794)
!7801 = !DILocation(line: 202, column: 1, scope: !7794)
!7802 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1230, file: !1230, line: 204, type: !1151, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7803)
!7803 = !{!7804, !7805}
!7804 = !DILocalVariable(name: "dev", arg: 1, scope: !7802, file: !1230, line: 204, type: !1130)
!7805 = !DILocalVariable(name: "uart", scope: !7802, file: !1230, line: 206, type: !1201)
!7806 = !DILocation(line: 0, scope: !7802)
!7807 = !DILocation(line: 206, column: 20, scope: !7802)
!7808 = !DILocation(line: 208, column: 9, scope: !7802)
!7809 = !DILocation(line: 208, column: 2, scope: !7802)
!7810 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1230, file: !1230, line: 211, type: !1181, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7811)
!7811 = !{!7812, !7813}
!7812 = !DILocalVariable(name: "dev", arg: 1, scope: !7810, file: !1230, line: 211, type: !1130)
!7813 = !DILocalVariable(name: "uart", scope: !7810, file: !1230, line: 213, type: !1201)
!7814 = !DILocation(line: 0, scope: !7810)
!7815 = !DILocation(line: 213, column: 20, scope: !7810)
!7816 = !DILocation(line: 215, column: 2, scope: !7810)
!7817 = !DILocation(line: 216, column: 2, scope: !7810)
!7818 = !DILocation(line: 217, column: 1, scope: !7810)
!7819 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1230, file: !1230, line: 219, type: !1181, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7820)
!7820 = !{!7821, !7822}
!7821 = !DILocalVariable(name: "dev", arg: 1, scope: !7819, file: !1230, line: 219, type: !1130)
!7822 = !DILocalVariable(name: "uart", scope: !7819, file: !1230, line: 221, type: !1201)
!7823 = !DILocation(line: 0, scope: !7819)
!7824 = !DILocation(line: 221, column: 20, scope: !7819)
!7825 = !DILocation(line: 223, column: 2, scope: !7819)
!7826 = !DILocation(line: 224, column: 2, scope: !7819)
!7827 = !DILocation(line: 225, column: 1, scope: !7819)
!7828 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1230, file: !1230, line: 227, type: !1151, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7829)
!7829 = !{!7830, !7831}
!7830 = !DILocalVariable(name: "dev", arg: 1, scope: !7828, file: !1230, line: 227, type: !1130)
!7831 = !DILocalVariable(name: "uart", scope: !7828, file: !1230, line: 229, type: !1201)
!7832 = !DILocation(line: 0, scope: !7828)
!7833 = !DILocation(line: 229, column: 20, scope: !7828)
!7834 = !DILocation(line: 231, column: 9, scope: !7828)
!7835 = !DILocation(line: 231, column: 53, scope: !7828)
!7836 = !DILocation(line: 232, column: 3, scope: !7828)
!7837 = !DILocation(line: 231, column: 2, scope: !7828)
!7838 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1230, file: !1230, line: 235, type: !1151, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7839)
!7839 = !{!7840}
!7840 = !DILocalVariable(name: "dev", arg: 1, scope: !7838, file: !1230, line: 235, type: !1130)
!7841 = !DILocation(line: 0, scope: !7838)
!7842 = !DILocation(line: 237, column: 2, scope: !7838)
!7843 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1230, file: !1230, line: 240, type: !1195, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7844)
!7844 = !{!7845, !7846, !7847, !7848}
!7845 = !DILocalVariable(name: "dev", arg: 1, scope: !7843, file: !1230, line: 240, type: !1130)
!7846 = !DILocalVariable(name: "cb", arg: 2, scope: !7843, file: !1230, line: 241, type: !1197)
!7847 = !DILocalVariable(name: "cb_data", arg: 3, scope: !7843, file: !1230, line: 242, type: !108)
!7848 = !DILocalVariable(name: "data", scope: !7843, file: !1230, line: 244, type: !7849)
!7849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!7850 = !DILocation(line: 0, scope: !7843)
!7851 = !DILocation(line: 244, column: 36, scope: !7843)
!7852 = !DILocation(line: 246, column: 8, scope: !7843)
!7853 = !DILocation(line: 246, column: 17, scope: !7843)
!7854 = !DILocation(line: 247, column: 8, scope: !7843)
!7855 = !DILocation(line: 247, column: 16, scope: !7843)
!7856 = !DILocation(line: 248, column: 1, scope: !7843)
!7857 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1037, file: !1037, line: 392, type: !7858, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7860)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{!754, !1201, !110}
!7860 = !{!7861, !7862, !7863}
!7861 = !DILocalVariable(name: "base", arg: 1, scope: !7857, file: !1037, line: 392, type: !1201)
!7862 = !DILocalVariable(name: "flag", arg: 2, scope: !7857, file: !1037, line: 392, type: !110)
!7863 = !DILocalVariable(name: "uart_reg", scope: !7857, file: !1037, line: 393, type: !696)
!7864 = !DILocation(line: 0, scope: !7857)
!7865 = !DILocation(line: 395, column: 29, scope: !7857)
!7866 = !DILocation(line: 395, column: 52, scope: !7857)
!7867 = !DILocation(line: 395, column: 44, scope: !7857)
!7868 = !DILocation(line: 395, column: 16, scope: !7857)
!7869 = !DILocation(line: 396, column: 20, scope: !7857)
!7870 = !DILocation(line: 396, column: 39, scope: !7857)
!7871 = !DILocation(line: 396, column: 12, scope: !7857)
!7872 = !DILocation(line: 396, column: 5, scope: !7857)
!7873 = distinct !DISubprogram(name: "UART_Getchar", scope: !1037, file: !1037, line: 358, type: !7874, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7876)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!167, !1201}
!7876 = !{!7877}
!7877 = !DILocalVariable(name: "base", arg: 1, scope: !7873, file: !1037, line: 358, type: !1201)
!7878 = !DILocation(line: 0, scope: !7873)
!7879 = !DILocation(line: 360, column: 22, scope: !7873)
!7880 = !DILocation(line: 360, column: 12, scope: !7873)
!7881 = !DILocation(line: 360, column: 5, scope: !7873)
!7882 = distinct !DISubprogram(name: "UART_Putchar", scope: !1037, file: !1037, line: 346, type: !7883, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{null, !1201, !167}
!7885 = !{!7886, !7887}
!7886 = !DILocalVariable(name: "base", arg: 1, scope: !7882, file: !1037, line: 346, type: !1201)
!7887 = !DILocalVariable(name: "data", arg: 2, scope: !7882, file: !1037, line: 346, type: !167)
!7888 = !DILocation(line: 0, scope: !7882)
!7889 = !DILocation(line: 348, column: 28, scope: !7882)
!7890 = !DILocation(line: 348, column: 5, scope: !7882)
!7891 = !DILocation(line: 348, column: 25, scope: !7882)
!7892 = !DILocation(line: 349, column: 1, scope: !7882)
!7893 = !DILocation(line: 0, scope: !1301)
!7894 = !DILocation(line: 339, column: 1, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !1301, file: !1230, line: 339, column: 1)
!7896 = !DILocation(line: 339, column: 1, scope: !1301)
!7897 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1230, file: !1230, line: 260, type: !1181, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7898)
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "dev", arg: 1, scope: !7897, file: !1230, line: 260, type: !1130)
!7900 = !DILocalVariable(name: "data", scope: !7897, file: !1230, line: 262, type: !7849)
!7901 = !DILocation(line: 0, scope: !7897)
!7902 = !DILocation(line: 262, column: 36, scope: !7897)
!7903 = !DILocation(line: 264, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7897, file: !1230, line: 264, column: 6)
!7905 = !DILocation(line: 264, column: 6, scope: !7904)
!7906 = !DILocation(line: 264, column: 6, scope: !7897)
!7907 = !DILocation(line: 265, column: 29, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7904, file: !1230, line: 264, column: 22)
!7909 = !DILocation(line: 265, column: 3, scope: !7908)
!7910 = !DILocation(line: 266, column: 2, scope: !7908)
!7911 = !DILocation(line: 267, column: 1, scope: !7897)
!7912 = distinct !DISubprogram(name: "uart_imx_init", scope: !1230, file: !1230, line: 56, type: !1151, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7913)
!7913 = !{!7914, !7915, !7916, !7917, !7918, !7919}
!7914 = !DILocalVariable(name: "dev", arg: 1, scope: !7912, file: !1230, line: 56, type: !1130)
!7915 = !DILocalVariable(name: "uart", scope: !7912, file: !1230, line: 58, type: !1201)
!7916 = !DILocalVariable(name: "config", scope: !7912, file: !1230, line: 59, type: !1227)
!7917 = !DILocalVariable(name: "old_level", scope: !7912, file: !1230, line: 60, type: !32)
!7918 = !DILocalVariable(name: "err", scope: !7912, file: !1230, line: 61, type: !109)
!7919 = !DILocalVariable(name: "initConfig", scope: !7912, file: !1230, line: 67, type: !7920)
!7920 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1037, line: 57, baseType: !7921)
!7921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1037, line: 49, size: 192, elements: !7922)
!7922 = !{!7923, !7924, !7925, !7926, !7927, !7928}
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !7921, file: !1037, line: 51, baseType: !110, size: 32)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !7921, file: !1037, line: 52, baseType: !110, size: 32, offset: 32)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !7921, file: !1037, line: 53, baseType: !110, size: 32, offset: 64)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !7921, file: !1037, line: 54, baseType: !110, size: 32, offset: 96)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7921, file: !1037, line: 55, baseType: !110, size: 32, offset: 128)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !7921, file: !1037, line: 56, baseType: !110, size: 32, offset: 160)
!7929 = !DILocation(line: 0, scope: !7912)
!7930 = !DILocation(line: 58, column: 20, scope: !7912)
!7931 = !DILocation(line: 55, column: 2, scope: !7932, inlinedAt: !7936)
!7932 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7933)
!7933 = !{!7934, !7935}
!7934 = !DILocalVariable(name: "key", scope: !7932, file: !6050, line: 44, type: !32)
!7935 = !DILocalVariable(name: "tmp", scope: !7932, file: !6050, line: 53, type: !32)
!7936 = distinct !DILocation(line: 64, column: 14, scope: !7912)
!7937 = !{i64 2848579}
!7938 = !DILocation(line: 0, scope: !7932, inlinedAt: !7936)
!7939 = !DILocation(line: 67, column: 2, scope: !7912)
!7940 = !DILocation(line: 67, column: 21, scope: !7912)
!7941 = !DILocation(line: 67, column: 34, scope: !7912)
!7942 = !DILocation(line: 68, column: 23, scope: !7912)
!7943 = !DILocation(line: 75, column: 36, scope: !7912)
!7944 = !DILocation(line: 75, column: 8, scope: !7912)
!7945 = !DILocation(line: 76, column: 6, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7912, file: !1230, line: 76, column: 6)
!7947 = !DILocation(line: 76, column: 6, scope: !7912)
!7948 = !DILocation(line: 81, column: 26, scope: !7912)
!7949 = !DILocation(line: 81, column: 24, scope: !7912)
!7950 = !DILocation(line: 83, column: 2, scope: !7912)
!7951 = !DILocation(line: 86, column: 2, scope: !7912)
!7952 = !DILocation(line: 87, column: 2, scope: !7912)
!7953 = !DILocalVariable(name: "key", arg: 1, scope: !7954, file: !6050, line: 84, type: !32)
!7954 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7955)
!7955 = !{!7953}
!7956 = !DILocation(line: 0, scope: !7954, inlinedAt: !7957)
!7957 = distinct !DILocation(line: 90, column: 2, scope: !7912)
!7958 = !DILocation(line: 95, column: 2, scope: !7954, inlinedAt: !7957)
!7959 = !{i64 2849396}
!7960 = !DILocation(line: 93, column: 10, scope: !7912)
!7961 = !DILocation(line: 93, column: 2, scope: !7912)
!7962 = !DILocation(line: 97, column: 34, scope: !7912)
!7963 = !DILocation(line: 97, column: 26, scope: !7912)
!7964 = !DILocation(line: 97, column: 2, scope: !7912)
!7965 = !DILocation(line: 100, column: 2, scope: !7912)
!7966 = !DILocation(line: 102, column: 2, scope: !7912)
!7967 = !DILocation(line: 103, column: 1, scope: !7912)
!7968 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1239, file: !1239, line: 342, type: !7969, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!109, !1236, !167}
!7971 = !{!7972, !7973, !7974, !7975}
!7972 = !DILocalVariable(name: "config", arg: 1, scope: !7968, file: !1239, line: 342, type: !1236)
!7973 = !DILocalVariable(name: "id", arg: 2, scope: !7968, file: !1239, line: 343, type: !167)
!7974 = !DILocalVariable(name: "ret", scope: !7968, file: !1239, line: 345, type: !109)
!7975 = !DILocalVariable(name: "state", scope: !7968, file: !1239, line: 346, type: !1242)
!7976 = !DILocation(line: 0, scope: !7968)
!7977 = !DILocation(line: 346, column: 2, scope: !7968)
!7978 = !DILocation(line: 348, column: 8, scope: !7968)
!7979 = !DILocation(line: 349, column: 10, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7968, file: !1239, line: 349, column: 6)
!7981 = !DILocation(line: 349, column: 6, scope: !7968)
!7982 = !DILocation(line: 353, column: 44, scope: !7968)
!7983 = !DILocation(line: 353, column: 9, scope: !7968)
!7984 = !DILocation(line: 353, column: 2, scope: !7968)
!7985 = !DILocation(line: 354, column: 1, scope: !7968)
!7986 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1037, file: !1037, line: 444, type: !7883, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7987)
!7987 = !{!7988, !7989}
!7988 = !DILocalVariable(name: "base", arg: 1, scope: !7986, file: !1037, line: 444, type: !1201)
!7989 = !DILocalVariable(name: "watermark", arg: 2, scope: !7986, file: !1037, line: 444, type: !167)
!7990 = !DILocation(line: 0, scope: !7986)
!7991 = !DILocation(line: 447, column: 28, scope: !7986)
!7992 = !DILocation(line: 447, column: 48, scope: !7986)
!7993 = !DILocation(line: 447, column: 72, scope: !7986)
!7994 = !DILocation(line: 447, column: 25, scope: !7986)
!7995 = !DILocation(line: 448, column: 1, scope: !7986)
!7996 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1037, file: !1037, line: 458, type: !7883, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !7997)
!7997 = !{!7998, !7999}
!7998 = !DILocalVariable(name: "base", arg: 1, scope: !7996, file: !1037, line: 458, type: !1201)
!7999 = !DILocalVariable(name: "watermark", arg: 2, scope: !7996, file: !1037, line: 458, type: !167)
!8000 = !DILocation(line: 0, scope: !7996)
!8001 = !DILocation(line: 461, column: 28, scope: !7996)
!8002 = !DILocation(line: 461, column: 48, scope: !7996)
!8003 = !DILocation(line: 461, column: 72, scope: !7996)
!8004 = !DILocation(line: 461, column: 25, scope: !7996)
!8005 = !DILocation(line: 462, column: 1, scope: !7996)
!8006 = distinct !DISubprogram(name: "UART_Enable", scope: !1037, file: !1037, line: 242, type: !8007, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !8009)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{null, !1201}
!8009 = !{!8010}
!8010 = !DILocalVariable(name: "base", arg: 1, scope: !8006, file: !1037, line: 242, type: !1201)
!8011 = !DILocation(line: 0, scope: !8006)
!8012 = !DILocation(line: 244, column: 5, scope: !8006)
!8013 = !DILocation(line: 244, column: 25, scope: !8006)
!8014 = !DILocation(line: 245, column: 1, scope: !8006)
!8015 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1239, file: !1239, line: 316, type: !8016, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1033, retainedNodes: !8018)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!109, !1236, !1242}
!8018 = !{!8019, !8020, !8021}
!8019 = !DILocalVariable(name: "config", arg: 1, scope: !8015, file: !1239, line: 317, type: !1236)
!8020 = !DILocalVariable(name: "state", arg: 2, scope: !8015, file: !1239, line: 318, type: !1242)
!8021 = !DILocalVariable(name: "reg", scope: !8015, file: !1239, line: 320, type: !22)
!8022 = !DILocation(line: 0, scope: !8015)
!8023 = !DILocation(line: 329, column: 39, scope: !8015)
!8024 = !DILocation(line: 329, column: 52, scope: !8015)
!8025 = !DILocation(line: 329, column: 9, scope: !8015)
!8026 = !DILocation(line: 329, column: 2, scope: !8015)
!8027 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1537, file: !1537, line: 270, type: !1543, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8028)
!8028 = !{!8029}
!8029 = !DILocalVariable(name: "dev", arg: 1, scope: !8027, file: !1537, line: 270, type: !1545)
!8030 = !DILocation(line: 0, scope: !8027)
!8031 = !DILocation(line: 274, column: 2, scope: !8027)
!8032 = !DILocation(line: 275, column: 12, scope: !8027)
!8033 = !DILocation(line: 276, column: 15, scope: !8027)
!8034 = !DILocation(line: 277, column: 16, scope: !8027)
!8035 = !DILocation(line: 278, column: 15, scope: !8027)
!8036 = !DILocation(line: 279, column: 16, scope: !8027)
!8037 = !DILocation(line: 282, column: 2, scope: !8027)
!8038 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1458, file: !1458, line: 1814, type: !5971, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8039)
!8039 = !{!8040, !8041}
!8040 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8038, file: !1458, line: 1814, type: !2363)
!8041 = !DILocalVariable(name: "priority", arg: 2, scope: !8038, file: !1458, line: 1814, type: !110)
!8042 = !DILocation(line: 0, scope: !8038)
!8043 = !DILocation(line: 1822, column: 46, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !1458, line: 1821, column: 3)
!8045 = distinct !DILexicalBlock(scope: !8038, file: !1458, line: 1816, column: 7)
!8046 = !DILocation(line: 1824, column: 1, scope: !8038)
!8047 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1537, file: !1537, line: 118, type: !5866, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8048)
!8048 = !{!8049, !8050}
!8049 = !DILocalVariable(name: "arg", arg: 1, scope: !8047, file: !1537, line: 118, type: !108)
!8050 = !DILocalVariable(name: "dticks", scope: !8047, file: !1537, line: 121, type: !110)
!8051 = !DILocation(line: 0, scope: !8047)
!8052 = !DILocation(line: 124, column: 2, scope: !8047)
!8053 = !DILocation(line: 129, column: 17, scope: !8047)
!8054 = !DILocation(line: 129, column: 14, scope: !8047)
!8055 = !DILocation(line: 130, column: 15, scope: !8047)
!8056 = !DILocation(line: 145, column: 27, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !1537, line: 132, column: 16)
!8058 = distinct !DILexicalBlock(scope: !8047, file: !1537, line: 132, column: 6)
!8059 = !DILocation(line: 145, column: 25, scope: !8057)
!8060 = !DILocation(line: 145, column: 45, scope: !8057)
!8061 = !DILocation(line: 146, column: 30, scope: !8057)
!8062 = !DILocation(line: 146, column: 20, scope: !8057)
!8063 = !DILocation(line: 147, column: 3, scope: !8057)
!8064 = !DILocation(line: 151, column: 2, scope: !8047)
!8065 = !DILocation(line: 152, column: 1, scope: !8047)
!8066 = distinct !DISubprogram(name: "elapsed", scope: !1537, file: !1537, line: 85, type: !3202, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8067)
!8067 = !{!8068, !8069, !8070}
!8068 = !DILocalVariable(name: "val1", scope: !8066, file: !1537, line: 87, type: !110)
!8069 = !DILocalVariable(name: "ctrl", scope: !8066, file: !1537, line: 88, type: !110)
!8070 = !DILocalVariable(name: "val2", scope: !8066, file: !1537, line: 89, type: !110)
!8071 = !DILocation(line: 87, column: 27, scope: !8066)
!8072 = !DILocation(line: 0, scope: !8066)
!8073 = !DILocation(line: 88, column: 27, scope: !8066)
!8074 = !DILocation(line: 89, column: 27, scope: !8066)
!8075 = !DILocation(line: 105, column: 12, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8066, file: !1537, line: 105, column: 6)
!8077 = !DILocation(line: 106, column: 6, scope: !8076)
!8078 = !DILocation(line: 107, column: 16, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8076, file: !1537, line: 106, column: 24)
!8080 = !DILocation(line: 111, column: 18, scope: !8079)
!8081 = !DILocation(line: 112, column: 2, scope: !8079)
!8082 = !DILocation(line: 114, column: 20, scope: !8066)
!8083 = !DILocation(line: 114, column: 30, scope: !8066)
!8084 = !DILocation(line: 114, column: 28, scope: !8066)
!8085 = !DILocation(line: 114, column: 2, scope: !8066)
!8086 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1537, file: !1537, line: 154, type: !8087, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8089)
!8087 = !DISubroutineType(types: !8088)
!8088 = !{null, !1011, !754}
!8089 = !{!8090, !8091, !8092, !8093, !8094, !8095, !8096, !8101, !8102}
!8090 = !DILocalVariable(name: "ticks", arg: 1, scope: !8086, file: !1537, line: 154, type: !1011)
!8091 = !DILocalVariable(name: "idle", arg: 2, scope: !8086, file: !1537, line: 154, type: !754)
!8092 = !DILocalVariable(name: "delay", scope: !8086, file: !1537, line: 169, type: !110)
!8093 = !DILocalVariable(name: "val1", scope: !8086, file: !1537, line: 170, type: !110)
!8094 = !DILocalVariable(name: "val2", scope: !8086, file: !1537, line: 170, type: !110)
!8095 = !DILocalVariable(name: "last_load_", scope: !8086, file: !1537, line: 171, type: !110)
!8096 = !DILocalVariable(name: "key", scope: !8086, file: !1537, line: 176, type: !8097)
!8097 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !248, line: 106, baseType: !8098)
!8098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !248, line: 32, size: 32, elements: !8099)
!8099 = !{!8100}
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8098, file: !248, line: 33, baseType: !109, size: 32)
!8101 = !DILocalVariable(name: "pending", scope: !8086, file: !1537, line: 178, type: !110)
!8102 = !DILocalVariable(name: "unannounced", scope: !8086, file: !1537, line: 185, type: !110)
!8103 = !DILocation(line: 0, scope: !8086)
!8104 = !DILocation(line: 162, column: 49, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8086, file: !1537, line: 162, column: 6)
!8106 = !DILocation(line: 163, column: 17, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8105, file: !1537, line: 162, column: 78)
!8108 = !DILocation(line: 164, column: 13, scope: !8107)
!8109 = !DILocation(line: 165, column: 3, scope: !8107)
!8110 = !DILocation(line: 171, column: 24, scope: !8086)
!8111 = !DILocation(line: 173, column: 10, scope: !8086)
!8112 = !DILocation(line: 174, column: 10, scope: !8086)
!8113 = !DILocalVariable(name: "l", arg: 1, scope: !8114, file: !248, line: 136, type: !8117)
!8114 = distinct !DISubprogram(name: "k_spin_lock", scope: !248, file: !248, line: 136, type: !8115, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8118)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!8097, !8117}
!8117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!8118 = !{!8113, !8119}
!8119 = !DILocalVariable(name: "k", scope: !8114, file: !248, line: 139, type: !8097)
!8120 = !DILocation(line: 0, scope: !8114, inlinedAt: !8121)
!8121 = distinct !DILocation(line: 176, column: 25, scope: !8086)
!8122 = !DILocation(line: 55, column: 2, scope: !8123, inlinedAt: !8127)
!8123 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8124)
!8124 = !{!8125, !8126}
!8125 = !DILocalVariable(name: "key", scope: !8123, file: !6050, line: 44, type: !32)
!8126 = !DILocalVariable(name: "tmp", scope: !8123, file: !6050, line: 53, type: !32)
!8127 = distinct !DILocation(line: 145, column: 10, scope: !8114, inlinedAt: !8121)
!8128 = !{i64 2951317}
!8129 = !DILocation(line: 0, scope: !8123, inlinedAt: !8127)
!8130 = !DILocation(line: 148, column: 2, scope: !8131, inlinedAt: !8121)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !248, line: 148, column: 2)
!8132 = distinct !DILexicalBlock(scope: !8114, file: !248, line: 148, column: 2)
!8133 = !DILocation(line: 148, column: 2, scope: !8132, inlinedAt: !8121)
!8134 = !DILocation(line: 148, column: 2, scope: !8135, inlinedAt: !8121)
!8135 = distinct !DILexicalBlock(scope: !8131, file: !248, line: 148, column: 2)
!8136 = !DILocation(line: 160, column: 2, scope: !8114, inlinedAt: !8121)
!8137 = !DILocation(line: 178, column: 21, scope: !8086)
!8138 = !DILocation(line: 180, column: 18, scope: !8086)
!8139 = !DILocation(line: 182, column: 14, scope: !8086)
!8140 = !DILocation(line: 183, column: 15, scope: !8086)
!8141 = !DILocation(line: 185, column: 39, scope: !8086)
!8142 = !DILocation(line: 185, column: 37, scope: !8086)
!8143 = !DILocation(line: 187, column: 27, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8086, file: !1537, line: 187, column: 6)
!8145 = !DILocation(line: 187, column: 6, scope: !8086)
!8146 = !DILocation(line: 202, column: 27, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !1537, line: 195, column: 9)
!8148 = !DILocation(line: 202, column: 48, scope: !8147)
!8149 = !DILocation(line: 203, column: 9, scope: !8147)
!8150 = !DILocation(line: 204, column: 11, scope: !8147)
!8151 = !DILocation(line: 205, column: 13, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8147, file: !1537, line: 205, column: 7)
!8153 = !DILocation(line: 205, column: 7, scope: !8147)
!8154 = !DILocation(line: 0, scope: !8144)
!8155 = !DILocation(line: 212, column: 18, scope: !8086)
!8156 = !DILocation(line: 214, column: 28, scope: !8086)
!8157 = !DILocation(line: 214, column: 16, scope: !8086)
!8158 = !DILocation(line: 215, column: 15, scope: !8086)
!8159 = !DILocation(line: 227, column: 11, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8086, file: !1537, line: 227, column: 6)
!8161 = !DILocation(line: 227, column: 6, scope: !8086)
!8162 = !DILocation(line: 228, column: 15, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8160, file: !1537, line: 227, column: 19)
!8164 = !DILocation(line: 228, column: 38, scope: !8163)
!8165 = !DILocation(line: 228, column: 24, scope: !8163)
!8166 = !DILocation(line: 229, column: 2, scope: !8163)
!8167 = !DILocation(line: 230, column: 24, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !1537, line: 229, column: 9)
!8169 = !DILocation(line: 230, column: 15, scope: !8168)
!8170 = !DILocation(line: 0, scope: !8160)
!8171 = !DILocalVariable(name: "key", arg: 2, scope: !8172, file: !248, line: 190, type: !8097)
!8172 = distinct !DISubprogram(name: "k_spin_unlock", scope: !248, file: !248, line: 189, type: !8173, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8175)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{null, !8117, !8097}
!8175 = !{!8176, !8171}
!8176 = !DILocalVariable(name: "l", arg: 1, scope: !8172, file: !248, line: 189, type: !8117)
!8177 = !DILocation(line: 0, scope: !8172, inlinedAt: !8178)
!8178 = distinct !DILocation(line: 232, column: 2, scope: !8086)
!8179 = !DILocation(line: 194, column: 2, scope: !8180, inlinedAt: !8178)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !248, line: 194, column: 2)
!8181 = distinct !DILexicalBlock(scope: !8172, file: !248, line: 194, column: 2)
!8182 = !DILocation(line: 194, column: 2, scope: !8181, inlinedAt: !8178)
!8183 = !DILocation(line: 194, column: 2, scope: !8184, inlinedAt: !8178)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !248, line: 194, column: 2)
!8185 = !DILocalVariable(name: "key", arg: 1, scope: !8186, file: !6050, line: 84, type: !32)
!8186 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8187)
!8187 = !{!8185}
!8188 = !DILocation(line: 0, scope: !8186, inlinedAt: !8189)
!8189 = distinct !DILocation(line: 215, column: 2, scope: !8172, inlinedAt: !8178)
!8190 = !DILocation(line: 95, column: 2, scope: !8186, inlinedAt: !8189)
!8191 = !{i64 2952134}
!8192 = !DILocation(line: 234, column: 1, scope: !8086)
!8193 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1537, file: !1537, line: 236, type: !3202, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8194)
!8194 = !{!8195, !8196}
!8195 = !DILocalVariable(name: "key", scope: !8193, file: !1537, line: 242, type: !8097)
!8196 = !DILocalVariable(name: "cyc", scope: !8193, file: !1537, line: 243, type: !110)
!8197 = !DILocation(line: 0, scope: !8114, inlinedAt: !8198)
!8198 = distinct !DILocation(line: 242, column: 25, scope: !8193)
!8199 = !DILocation(line: 55, column: 2, scope: !8123, inlinedAt: !8200)
!8200 = distinct !DILocation(line: 145, column: 10, scope: !8114, inlinedAt: !8198)
!8201 = !DILocation(line: 0, scope: !8123, inlinedAt: !8200)
!8202 = !DILocation(line: 148, column: 2, scope: !8131, inlinedAt: !8198)
!8203 = !DILocation(line: 148, column: 2, scope: !8132, inlinedAt: !8198)
!8204 = !DILocation(line: 148, column: 2, scope: !8135, inlinedAt: !8198)
!8205 = !DILocation(line: 160, column: 2, scope: !8114, inlinedAt: !8198)
!8206 = !DILocation(line: 0, scope: !8193)
!8207 = !DILocation(line: 243, column: 17, scope: !8193)
!8208 = !DILocation(line: 243, column: 29, scope: !8193)
!8209 = !DILocation(line: 243, column: 43, scope: !8193)
!8210 = !DILocation(line: 0, scope: !8172, inlinedAt: !8211)
!8211 = distinct !DILocation(line: 245, column: 2, scope: !8193)
!8212 = !DILocation(line: 194, column: 2, scope: !8180, inlinedAt: !8211)
!8213 = !DILocation(line: 194, column: 2, scope: !8181, inlinedAt: !8211)
!8214 = !DILocation(line: 194, column: 2, scope: !8184, inlinedAt: !8211)
!8215 = !DILocation(line: 243, column: 27, scope: !8193)
!8216 = !DILocation(line: 243, column: 41, scope: !8193)
!8217 = !DILocation(line: 0, scope: !8186, inlinedAt: !8218)
!8218 = distinct !DILocation(line: 215, column: 2, scope: !8172, inlinedAt: !8211)
!8219 = !DILocation(line: 95, column: 2, scope: !8186, inlinedAt: !8218)
!8220 = !DILocation(line: 246, column: 13, scope: !8193)
!8221 = !DILocation(line: 246, column: 2, scope: !8193)
!8222 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1537, file: !1537, line: 249, type: !3202, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !8223)
!8223 = !{!8224, !8225}
!8224 = !DILocalVariable(name: "key", scope: !8222, file: !1537, line: 251, type: !8097)
!8225 = !DILocalVariable(name: "ret", scope: !8222, file: !1537, line: 252, type: !110)
!8226 = !DILocation(line: 0, scope: !8114, inlinedAt: !8227)
!8227 = distinct !DILocation(line: 251, column: 25, scope: !8222)
!8228 = !DILocation(line: 55, column: 2, scope: !8123, inlinedAt: !8229)
!8229 = distinct !DILocation(line: 145, column: 10, scope: !8114, inlinedAt: !8227)
!8230 = !DILocation(line: 0, scope: !8123, inlinedAt: !8229)
!8231 = !DILocation(line: 148, column: 2, scope: !8131, inlinedAt: !8227)
!8232 = !DILocation(line: 148, column: 2, scope: !8132, inlinedAt: !8227)
!8233 = !DILocation(line: 148, column: 2, scope: !8135, inlinedAt: !8227)
!8234 = !DILocation(line: 160, column: 2, scope: !8114, inlinedAt: !8227)
!8235 = !DILocation(line: 0, scope: !8222)
!8236 = !DILocation(line: 252, column: 17, scope: !8222)
!8237 = !DILocation(line: 252, column: 29, scope: !8222)
!8238 = !DILocation(line: 0, scope: !8172, inlinedAt: !8239)
!8239 = distinct !DILocation(line: 254, column: 2, scope: !8222)
!8240 = !DILocation(line: 194, column: 2, scope: !8180, inlinedAt: !8239)
!8241 = !DILocation(line: 194, column: 2, scope: !8181, inlinedAt: !8239)
!8242 = !DILocation(line: 194, column: 2, scope: !8184, inlinedAt: !8239)
!8243 = !DILocation(line: 252, column: 27, scope: !8222)
!8244 = !DILocation(line: 0, scope: !8186, inlinedAt: !8245)
!8245 = distinct !DILocation(line: 215, column: 2, scope: !8172, inlinedAt: !8239)
!8246 = !DILocation(line: 95, column: 2, scope: !8186, inlinedAt: !8245)
!8247 = !DILocation(line: 255, column: 2, scope: !8222)
!8248 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1537, file: !1537, line: 258, type: !2930, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !1817)
!8249 = !DILocation(line: 260, column: 6, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8248, file: !1537, line: 260, column: 6)
!8251 = !DILocation(line: 260, column: 16, scope: !8250)
!8252 = !DILocation(line: 260, column: 6, scope: !8248)
!8253 = !DILocation(line: 261, column: 17, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8250, file: !1537, line: 260, column: 34)
!8255 = !DILocation(line: 262, column: 2, scope: !8254)
!8256 = !DILocation(line: 263, column: 1, scope: !8248)
!8257 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1537, file: !1537, line: 265, type: !2930, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1312, retainedNodes: !1817)
!8258 = !DILocation(line: 267, column: 16, scope: !8257)
!8259 = !DILocation(line: 268, column: 1, scope: !8257)
!8260 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8261, file: !8261, line: 9, type: !8262, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2657, retainedNodes: !8292)
!8261 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!109, !8264, !167, !8291}
!8264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8265, size: 32)
!8265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8266)
!8266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1239, line: 60, size: 64, elements: !8267)
!8267 = !{!8268, !8290}
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8266, file: !1239, line: 69, baseType: !8269, size: 32)
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8270, size: 32)
!8270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8271)
!8271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1239, line: 50, size: 64, elements: !8272)
!8272 = !{!8273, !8288, !8289}
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8271, file: !1239, line: 52, baseType: !8274, size: 32)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8275, size: 32)
!8275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8276)
!8276 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !993, line: 64, baseType: !8277)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !993, line: 59, size: 160, elements: !8278)
!8278 = !{!8279, !8287}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8277, file: !993, line: 60, baseType: !8280, size: 128)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !993, line: 51, size: 128, elements: !8281)
!8281 = !{!8282, !8283, !8284, !8285, !8286}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8280, file: !993, line: 52, baseType: !110, size: 32)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8280, file: !993, line: 53, baseType: !110, size: 32, offset: 32)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8280, file: !993, line: 54, baseType: !110, size: 32, offset: 64)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8280, file: !993, line: 55, baseType: !167, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8280, file: !993, line: 56, baseType: !110, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8277, file: !993, line: 61, baseType: !110, size: 32, offset: 128)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8271, file: !1239, line: 54, baseType: !167, size: 8, offset: 32)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8271, file: !1239, line: 56, baseType: !167, size: 8, offset: 40)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8266, file: !1239, line: 71, baseType: !167, size: 8, offset: 32)
!8291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8269, size: 32)
!8292 = !{!8293, !8294, !8295}
!8293 = !DILocalVariable(name: "config", arg: 1, scope: !8260, file: !8261, line: 9, type: !8264)
!8294 = !DILocalVariable(name: "id", arg: 2, scope: !8260, file: !8261, line: 9, type: !167)
!8295 = !DILocalVariable(name: "state", arg: 3, scope: !8260, file: !8261, line: 10, type: !8291)
!8296 = !DILocation(line: 0, scope: !8260)
!8297 = !DILocation(line: 12, column: 20, scope: !8260)
!8298 = !DILocation(line: 13, column: 27, scope: !8260)
!8299 = !DILocation(line: 13, column: 42, scope: !8260)
!8300 = !DILocation(line: 13, column: 19, scope: !8260)
!8301 = !DILocation(line: 13, column: 16, scope: !8260)
!8302 = !DILocation(line: 13, column: 2, scope: !8260)
!8303 = distinct !{!8303, !8302, !8304}
!8304 = !DILocation(line: 19, column: 2, scope: !8260)
!8305 = !DILocation(line: 14, column: 23, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !8261, line: 14, column: 7)
!8307 = distinct !DILexicalBlock(scope: !8260, file: !8261, line: 13, column: 54)
!8308 = !DILocation(line: 14, column: 10, scope: !8306)
!8309 = !DILocation(line: 18, column: 11, scope: !8307)
!8310 = !DILocation(line: 14, column: 7, scope: !8307)
!8311 = !DILocation(line: 22, column: 1, scope: !8260)
!8312 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1578, file: !1578, line: 51, type: !1584, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1574, retainedNodes: !8313)
!8313 = !{!8314}
!8314 = !DILocalVariable(name: "dev", arg: 1, scope: !8312, file: !1578, line: 51, type: !1586)
!8315 = !DILocation(line: 0, scope: !8312)
!8316 = !DILocation(line: 66, column: 2, scope: !8312)
!8317 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1578, file: !1578, line: 10, type: !8318, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1574, retainedNodes: !8334)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!109, !8320, !167, !22}
!8320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8321, size: 32)
!8321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8322)
!8322 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !993, line: 64, baseType: !8323)
!8323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !993, line: 59, size: 160, elements: !8324)
!8324 = !{!8325, !8333}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8323, file: !993, line: 60, baseType: !8326, size: 128)
!8326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !993, line: 51, size: 128, elements: !8327)
!8327 = !{!8328, !8329, !8330, !8331, !8332}
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8326, file: !993, line: 52, baseType: !110, size: 32)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8326, file: !993, line: 53, baseType: !110, size: 32, offset: 32)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8326, file: !993, line: 54, baseType: !110, size: 32, offset: 64)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8326, file: !993, line: 55, baseType: !167, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8326, file: !993, line: 56, baseType: !110, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8323, file: !993, line: 61, baseType: !110, size: 32, offset: 128)
!8334 = !{!8335, !8336, !8337, !8338, !8340, !8343, !8344, !8345, !8346, !8347}
!8335 = !DILocalVariable(name: "pins", arg: 1, scope: !8317, file: !1578, line: 10, type: !8320)
!8336 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8317, file: !1578, line: 10, type: !167)
!8337 = !DILocalVariable(name: "reg", arg: 3, scope: !8317, file: !1578, line: 11, type: !22)
!8338 = !DILocalVariable(name: "i", scope: !8339, file: !1578, line: 14, type: !167)
!8339 = distinct !DILexicalBlock(scope: !8317, file: !1578, line: 14, column: 2)
!8340 = !DILocalVariable(name: "mux_register", scope: !8341, file: !1578, line: 15, type: !110)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !1578, line: 14, column: 41)
!8342 = distinct !DILexicalBlock(scope: !8339, file: !1578, line: 14, column: 2)
!8343 = !DILocalVariable(name: "mux_mode", scope: !8341, file: !1578, line: 16, type: !110)
!8344 = !DILocalVariable(name: "input_register", scope: !8341, file: !1578, line: 17, type: !110)
!8345 = !DILocalVariable(name: "input_daisy", scope: !8341, file: !1578, line: 18, type: !110)
!8346 = !DILocalVariable(name: "config_register", scope: !8341, file: !1578, line: 19, type: !110)
!8347 = !DILocalVariable(name: "pin_ctrl_flags", scope: !8341, file: !1578, line: 20, type: !110)
!8348 = !DILocation(line: 0, scope: !8317)
!8349 = !DILocation(line: 0, scope: !8339)
!8350 = !DILocation(line: 14, column: 25, scope: !8342)
!8351 = !DILocation(line: 14, column: 2, scope: !8339)
!8352 = !DILocation(line: 48, column: 2, scope: !8317)
!8353 = !DILocation(line: 15, column: 42, scope: !8341)
!8354 = !DILocation(line: 0, scope: !8341)
!8355 = !DILocation(line: 16, column: 38, scope: !8341)
!8356 = !DILocation(line: 17, column: 44, scope: !8341)
!8357 = !DILocation(line: 19, column: 45, scope: !8341)
!8358 = !DILocation(line: 20, column: 37, scope: !8341)
!8359 = !DILocation(line: 35, column: 4, scope: !8341)
!8360 = !DILocation(line: 36, column: 4, scope: !8341)
!8361 = !DILocation(line: 35, column: 45, scope: !8341)
!8362 = !DILocation(line: 34, column: 5, scope: !8341)
!8363 = !DILocation(line: 34, column: 53, scope: !8341)
!8364 = !DILocation(line: 37, column: 7, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8341, file: !1578, line: 37, column: 7)
!8366 = !DILocation(line: 37, column: 7, scope: !8341)
!8367 = !DILocation(line: 18, column: 41, scope: !8341)
!8368 = !DILocation(line: 39, column: 5, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !1578, line: 37, column: 23)
!8370 = !DILocation(line: 38, column: 6, scope: !8369)
!8371 = !DILocation(line: 38, column: 56, scope: !8369)
!8372 = !DILocation(line: 40, column: 3, scope: !8369)
!8373 = !DILocation(line: 41, column: 7, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8341, file: !1578, line: 41, column: 7)
!8375 = !DILocation(line: 41, column: 7, scope: !8341)
!8376 = !DILocation(line: 43, column: 20, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8374, file: !1578, line: 41, column: 24)
!8378 = !DILocation(line: 42, column: 6, scope: !8377)
!8379 = !DILocation(line: 42, column: 57, scope: !8377)
!8380 = !DILocation(line: 44, column: 3, scope: !8377)
!8381 = !DILocation(line: 14, column: 37, scope: !8342)
!8382 = distinct !{!8382, !8351, !8383}
!8383 = !DILocation(line: 47, column: 2, scope: !8339)
!8384 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !8385, file: !8385, line: 43, type: !8386, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !8440)
!8385 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8386 = !DISubroutineType(types: !8387)
!8387 = !{null, !8388, !110, !110, !110}
!8388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8389, size: 32)
!8389 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !574, line: 4575, baseType: !8390)
!8390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 4532, size: 390144, elements: !8391)
!8391 = !{!8392, !8393, !8394, !8395, !8396, !8397, !8405, !8406, !8414, !8415}
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !8390, file: !574, line: 4533, baseType: !578, size: 32)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !8390, file: !574, line: 4534, baseType: !578, size: 32, offset: 32)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !8390, file: !574, line: 4535, baseType: !578, size: 32, offset: 64)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !8390, file: !574, line: 4536, baseType: !578, size: 32, offset: 96)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8390, file: !574, line: 4537, baseType: !583, size: 16256, offset: 128)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8390, file: !574, line: 4543, baseType: !8398, size: 4224, offset: 16384)
!8398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8399, size: 4224, elements: !594)
!8399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8390, file: !574, line: 4538, size: 128, elements: !8400)
!8400 = !{!8401, !8402, !8403, !8404}
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8399, file: !574, line: 4539, baseType: !578, size: 32)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !8399, file: !574, line: 4540, baseType: !578, size: 32, offset: 32)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !8399, file: !574, line: 4541, baseType: !578, size: 32, offset: 64)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !8399, file: !574, line: 4542, baseType: !578, size: 32, offset: 96)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !8390, file: !574, line: 4544, baseType: !597, size: 110464, offset: 20608)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8390, file: !574, line: 4550, baseType: !8407, size: 24448, offset: 131072)
!8407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8408, size: 24448, elements: !608)
!8408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8390, file: !574, line: 4545, size: 128, elements: !8409)
!8409 = !{!8410, !8411, !8412, !8413}
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8408, file: !574, line: 4546, baseType: !578, size: 32)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !8408, file: !574, line: 4547, baseType: !578, size: 32, offset: 32)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !8408, file: !574, line: 4548, baseType: !578, size: 32, offset: 64)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !8408, file: !574, line: 4549, baseType: !578, size: 32, offset: 96)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !8390, file: !574, line: 4551, baseType: !611, size: 106624, offset: 155520)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8390, file: !574, line: 4574, baseType: !8416, size: 128000, offset: 262144)
!8416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8417, size: 128000, elements: !642)
!8417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8390, file: !574, line: 4552, size: 1024, elements: !8418)
!8418 = !{!8419, !8420, !8421, !8422, !8423, !8424, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8435, !8436, !8437, !8438, !8439}
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !8417, file: !574, line: 4553, baseType: !578, size: 32)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !8417, file: !574, line: 4554, baseType: !578, size: 32, offset: 32)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !8417, file: !574, line: 4555, baseType: !578, size: 32, offset: 64)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !8417, file: !574, line: 4556, baseType: !578, size: 32, offset: 96)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !8417, file: !574, line: 4557, baseType: !578, size: 32, offset: 128)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !8417, file: !574, line: 4558, baseType: !578, size: 32, offset: 160)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !8417, file: !574, line: 4559, baseType: !578, size: 32, offset: 192)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !8417, file: !574, line: 4560, baseType: !578, size: 32, offset: 224)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !8417, file: !574, line: 4561, baseType: !578, size: 32, offset: 256)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !8417, file: !574, line: 4562, baseType: !578, size: 32, offset: 288)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !8417, file: !574, line: 4563, baseType: !578, size: 32, offset: 320)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !8417, file: !574, line: 4564, baseType: !578, size: 32, offset: 352)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !8417, file: !574, line: 4565, baseType: !578, size: 32, offset: 384)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !8417, file: !574, line: 4566, baseType: !578, size: 32, offset: 416)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !8417, file: !574, line: 4567, baseType: !578, size: 32, offset: 448)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !8417, file: !574, line: 4568, baseType: !578, size: 32, offset: 480)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8417, file: !574, line: 4569, baseType: !635, size: 384, offset: 512)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !8417, file: !574, line: 4570, baseType: !578, size: 32, offset: 896)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !8417, file: !574, line: 4571, baseType: !578, size: 32, offset: 928)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !8417, file: !574, line: 4572, baseType: !578, size: 32, offset: 960)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8417, file: !574, line: 4573, baseType: !578, size: 32, offset: 992)
!8440 = !{!8441, !8442, !8443, !8444}
!8441 = !DILocalVariable(name: "base", arg: 1, scope: !8384, file: !8385, line: 43, type: !8388)
!8442 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8384, file: !8385, line: 43, type: !110)
!8443 = !DILocalVariable(name: "pre", arg: 3, scope: !8384, file: !8385, line: 43, type: !110)
!8444 = !DILocalVariable(name: "post", arg: 4, scope: !8384, file: !8385, line: 43, type: !110)
!8445 = !DILocation(line: 0, scope: !8384)
!8446 = !DILocation(line: 45, column: 5, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !8385, line: 45, column: 5)
!8448 = distinct !DILexicalBlock(scope: !8384, file: !8385, line: 45, column: 5)
!8449 = !DILocation(line: 45, column: 5, scope: !8448)
!8450 = !DILocation(line: 45, column: 5, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8447, file: !8385, line: 45, column: 5)
!8452 = !DILocation(line: 46, column: 5, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !8385, line: 46, column: 5)
!8454 = distinct !DILexicalBlock(scope: !8384, file: !8385, line: 46, column: 5)
!8455 = !DILocation(line: 46, column: 5, scope: !8454)
!8456 = !DILocation(line: 46, column: 5, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8453, file: !8385, line: 46, column: 5)
!8458 = !DILocation(line: 48, column: 25, scope: !8384)
!8459 = !DILocation(line: 48, column: 42, scope: !8384)
!8460 = !DILocation(line: 50, column: 24, scope: !8384)
!8461 = !DILocation(line: 49, column: 94, scope: !8384)
!8462 = !DILocation(line: 50, column: 54, scope: !8384)
!8463 = !DILocation(line: 48, column: 22, scope: !8384)
!8464 = !DILocation(line: 51, column: 1, scope: !8384)
!8465 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !8385, file: !8385, line: 59, type: !8466, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{null, !8388, !110, !1265, !1265}
!8468 = !{!8469, !8470, !8471, !8472}
!8469 = !DILocalVariable(name: "base", arg: 1, scope: !8465, file: !8385, line: 59, type: !8388)
!8470 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8465, file: !8385, line: 59, type: !110)
!8471 = !DILocalVariable(name: "pre", arg: 3, scope: !8465, file: !8385, line: 59, type: !1265)
!8472 = !DILocalVariable(name: "post", arg: 4, scope: !8465, file: !8385, line: 59, type: !1265)
!8473 = !DILocation(line: 0, scope: !8465)
!8474 = !DILocation(line: 61, column: 5, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8385, line: 61, column: 5)
!8476 = distinct !DILexicalBlock(scope: !8465, file: !8385, line: 61, column: 5)
!8477 = !DILocation(line: 61, column: 5, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !8385, line: 61, column: 5)
!8479 = !DILocation(line: 63, column: 13, scope: !8465)
!8480 = !DILocation(line: 63, column: 63, scope: !8465)
!8481 = !DILocation(line: 63, column: 10, scope: !8465)
!8482 = !DILocation(line: 64, column: 14, scope: !8465)
!8483 = !DILocation(line: 64, column: 31, scope: !8465)
!8484 = !DILocation(line: 64, column: 11, scope: !8465)
!8485 = !DILocation(line: 65, column: 1, scope: !8465)
!8486 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !8385, file: !8385, line: 73, type: !8487, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !8489)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{null, !8388, !110, !110, !110, !110}
!8489 = !{!8490, !8491, !8492, !8493, !8494}
!8490 = !DILocalVariable(name: "base", arg: 1, scope: !8486, file: !8385, line: 73, type: !8388)
!8491 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8486, file: !8385, line: 73, type: !110)
!8492 = !DILocalVariable(name: "mux", arg: 3, scope: !8486, file: !8385, line: 73, type: !110)
!8493 = !DILocalVariable(name: "pre", arg: 4, scope: !8486, file: !8385, line: 73, type: !110)
!8494 = !DILocalVariable(name: "post", arg: 5, scope: !8486, file: !8385, line: 73, type: !110)
!8495 = !DILocation(line: 0, scope: !8486)
!8496 = !DILocation(line: 75, column: 5, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !8385, line: 75, column: 5)
!8498 = distinct !DILexicalBlock(scope: !8486, file: !8385, line: 75, column: 5)
!8499 = !DILocation(line: 75, column: 5, scope: !8498)
!8500 = !DILocation(line: 75, column: 5, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8497, file: !8385, line: 75, column: 5)
!8502 = !DILocation(line: 76, column: 5, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !8385, line: 76, column: 5)
!8504 = distinct !DILexicalBlock(scope: !8486, file: !8385, line: 76, column: 5)
!8505 = !DILocation(line: 76, column: 5, scope: !8504)
!8506 = !DILocation(line: 76, column: 5, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8503, file: !8385, line: 76, column: 5)
!8508 = !DILocation(line: 78, column: 25, scope: !8486)
!8509 = !DILocation(line: 78, column: 42, scope: !8486)
!8510 = !DILocation(line: 80, column: 24, scope: !8486)
!8511 = !DILocation(line: 80, column: 51, scope: !8486)
!8512 = !DILocation(line: 79, column: 121, scope: !8486)
!8513 = !DILocation(line: 80, column: 49, scope: !8486)
!8514 = !DILocation(line: 80, column: 81, scope: !8486)
!8515 = !DILocation(line: 78, column: 22, scope: !8486)
!8516 = !DILocation(line: 81, column: 1, scope: !8486)
!8517 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !8518, file: !8518, line: 43, type: !8519, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8521)
!8518 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!110, !2675}
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "base", arg: 1, scope: !8517, file: !8518, line: 43, type: !2675)
!8523 = !DILocation(line: 0, scope: !8517)
!8524 = !DILocation(line: 45, column: 9, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8517, file: !8518, line: 45, column: 9)
!8526 = !DILocation(line: 45, column: 9, scope: !8517)
!8527 = !DILocation(line: 48, column: 26, scope: !8517)
!8528 = !DILocation(line: 48, column: 45, scope: !8517)
!8529 = !DILocation(line: 48, column: 23, scope: !8517)
!8530 = !DILocation(line: 48, column: 5, scope: !8517)
!8531 = !DILocation(line: 49, column: 1, scope: !8517)
!8532 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2666, file: !2666, line: 220, type: !8533, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8535)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!754, !2675, !110}
!8535 = !{!8536, !8537}
!8536 = !DILocalVariable(name: "base", arg: 1, scope: !8532, file: !2666, line: 220, type: !2675)
!8537 = !DILocalVariable(name: "pllControl", arg: 2, scope: !8532, file: !2666, line: 220, type: !110)
!8538 = !DILocation(line: 0, scope: !8532)
!8539 = !DILocation(line: 222, column: 19, scope: !8532)
!8540 = !DILocation(line: 222, column: 58, scope: !8532)
!8541 = !DILocation(line: 222, column: 12, scope: !8532)
!8542 = !DILocation(line: 222, column: 5, scope: !8532)
!8543 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !8518, file: !8518, line: 57, type: !8519, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8544)
!8544 = !{!8545}
!8545 = !DILocalVariable(name: "base", arg: 1, scope: !8543, file: !8518, line: 57, type: !2675)
!8546 = !DILocation(line: 0, scope: !8543)
!8547 = !DILocation(line: 59, column: 9, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8543, file: !8518, line: 59, column: 9)
!8549 = !DILocation(line: 59, column: 9, scope: !8543)
!8550 = !DILocation(line: 62, column: 9, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8543, file: !8518, line: 62, column: 9)
!8552 = !DILocation(line: 62, column: 28, scope: !8551)
!8553 = !DILocation(line: 0, scope: !8551)
!8554 = !DILocation(line: 66, column: 1, scope: !8543)
!8555 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !8518, file: !8518, line: 74, type: !8519, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8556)
!8556 = !{!8557, !8558, !8559, !8560}
!8557 = !DILocalVariable(name: "base", arg: 1, scope: !8555, file: !8518, line: 74, type: !2675)
!8558 = !DILocalVariable(name: "divSelect", scope: !8555, file: !8518, line: 76, type: !167)
!8559 = !DILocalVariable(name: "divTestSelect", scope: !8555, file: !8518, line: 76, type: !167)
!8560 = !DILocalVariable(name: "factor", scope: !8555, file: !8518, line: 77, type: !2738)
!8561 = !DILocation(line: 0, scope: !8555)
!8562 = !DILocation(line: 79, column: 9, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8555, file: !8518, line: 79, column: 9)
!8564 = !DILocation(line: 79, column: 9, scope: !8555)
!8565 = !DILocation(line: 82, column: 17, scope: !8555)
!8566 = !DILocation(line: 83, column: 22, scope: !8555)
!8567 = !DILocation(line: 83, column: 100, scope: !8555)
!8568 = !DILocation(line: 83, column: 21, scope: !8555)
!8569 = !DILocation(line: 86, column: 5, scope: !8555)
!8570 = !DILocation(line: 100, column: 9, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8555, file: !8518, line: 100, column: 9)
!8572 = !DILocation(line: 100, column: 41, scope: !8571)
!8573 = !DILocation(line: 100, column: 9, scope: !8555)
!8574 = !DILocation(line: 102, column: 27, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8571, file: !8518, line: 101, column: 5)
!8576 = !DILocation(line: 102, column: 59, scope: !8575)
!8577 = !DILocation(line: 102, column: 19, scope: !8575)
!8578 = !DILocation(line: 103, column: 27, scope: !8575)
!8579 = !DILocation(line: 103, column: 62, scope: !8575)
!8580 = !DILocation(line: 103, column: 19, scope: !8575)
!8581 = !DILocation(line: 102, column: 95, scope: !8575)
!8582 = !DILocation(line: 104, column: 27, scope: !8575)
!8583 = !DILocation(line: 104, column: 60, scope: !8575)
!8584 = !DILocation(line: 104, column: 19, scope: !8575)
!8585 = !DILocation(line: 103, column: 98, scope: !8575)
!8586 = !DILocation(line: 105, column: 39, scope: !8575)
!8587 = !DILocation(line: 105, column: 27, scope: !8575)
!8588 = !DILocation(line: 105, column: 60, scope: !8575)
!8589 = !DILocation(line: 105, column: 70, scope: !8575)
!8590 = !DILocation(line: 105, column: 57, scope: !8575)
!8591 = !DILocation(line: 105, column: 16, scope: !8575)
!8592 = !DILocation(line: 105, column: 9, scope: !8575)
!8593 = !DILocation(line: 109, column: 28, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8571, file: !8518, line: 108, column: 5)
!8595 = !DILocation(line: 109, column: 48, scope: !8594)
!8596 = !DILocation(line: 109, column: 46, scope: !8594)
!8597 = !DILocation(line: 109, column: 9, scope: !8594)
!8598 = !DILocation(line: 111, column: 1, scope: !8555)
!8599 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !8518, file: !8518, line: 119, type: !8519, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8600)
!8600 = !{!8601}
!8601 = !DILocalVariable(name: "base", arg: 1, scope: !8599, file: !8518, line: 119, type: !2675)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 121, column: 9, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8599, file: !8518, line: 121, column: 9)
!8605 = !DILocation(line: 125, column: 1, scope: !8599)
!8606 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !8518, file: !8518, line: 133, type: !8519, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8607)
!8607 = !{!8608, !8609, !8610, !8611, !8612}
!8608 = !DILocalVariable(name: "base", arg: 1, scope: !8606, file: !8518, line: 133, type: !2675)
!8609 = !DILocalVariable(name: "divSelect", scope: !8606, file: !8518, line: 135, type: !167)
!8610 = !DILocalVariable(name: "divPostSelect", scope: !8606, file: !8518, line: 135, type: !167)
!8611 = !DILocalVariable(name: "divTestSelect", scope: !8606, file: !8518, line: 135, type: !167)
!8612 = !DILocalVariable(name: "factor", scope: !8606, file: !8518, line: 136, type: !2738)
!8613 = !DILocation(line: 0, scope: !8606)
!8614 = !DILocation(line: 138, column: 9, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8606, file: !8518, line: 138, column: 9)
!8616 = !DILocation(line: 138, column: 9, scope: !8606)
!8617 = !DILocation(line: 141, column: 17, scope: !8606)
!8618 = !DILocation(line: 142, column: 22, scope: !8606)
!8619 = !DILocation(line: 142, column: 101, scope: !8606)
!8620 = !DILocation(line: 142, column: 21, scope: !8606)
!8621 = !DILocation(line: 144, column: 22, scope: !8606)
!8622 = !DILocation(line: 144, column: 104, scope: !8606)
!8623 = !DILocation(line: 144, column: 21, scope: !8606)
!8624 = !DILocation(line: 147, column: 5, scope: !8606)
!8625 = !DILocation(line: 161, column: 5, scope: !8606)
!8626 = !DILocation(line: 175, column: 9, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8606, file: !8518, line: 175, column: 9)
!8628 = !DILocation(line: 175, column: 43, scope: !8627)
!8629 = !DILocation(line: 175, column: 9, scope: !8606)
!8630 = !DILocation(line: 177, column: 27, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !8518, line: 176, column: 5)
!8632 = !DILocation(line: 177, column: 61, scope: !8631)
!8633 = !DILocation(line: 177, column: 19, scope: !8631)
!8634 = !DILocation(line: 178, column: 27, scope: !8631)
!8635 = !DILocation(line: 178, column: 64, scope: !8631)
!8636 = !DILocation(line: 178, column: 19, scope: !8631)
!8637 = !DILocation(line: 177, column: 99, scope: !8631)
!8638 = !DILocation(line: 179, column: 27, scope: !8631)
!8639 = !DILocation(line: 179, column: 62, scope: !8631)
!8640 = !DILocation(line: 179, column: 19, scope: !8631)
!8641 = !DILocation(line: 178, column: 102, scope: !8631)
!8642 = !DILocation(line: 180, column: 40, scope: !8631)
!8643 = !DILocation(line: 180, column: 58, scope: !8631)
!8644 = !DILocation(line: 180, column: 27, scope: !8631)
!8645 = !DILocation(line: 180, column: 79, scope: !8631)
!8646 = !DILocation(line: 180, column: 89, scope: !8631)
!8647 = !DILocation(line: 180, column: 76, scope: !8631)
!8648 = !DILocation(line: 180, column: 16, scope: !8631)
!8649 = !DILocation(line: 180, column: 9, scope: !8631)
!8650 = !DILocation(line: 184, column: 29, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8627, file: !8518, line: 183, column: 5)
!8652 = !DILocation(line: 184, column: 47, scope: !8651)
!8653 = !DILocation(line: 184, column: 67, scope: !8651)
!8654 = !DILocation(line: 184, column: 65, scope: !8651)
!8655 = !DILocation(line: 184, column: 9, scope: !8651)
!8656 = !DILocation(line: 186, column: 1, scope: !8606)
!8657 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !8518, file: !8518, line: 194, type: !8519, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8658)
!8658 = !{!8659, !8660, !8661, !8662, !8663}
!8659 = !DILocalVariable(name: "base", arg: 1, scope: !8657, file: !8518, line: 194, type: !2675)
!8660 = !DILocalVariable(name: "divSelect", scope: !8657, file: !8518, line: 196, type: !167)
!8661 = !DILocalVariable(name: "divPostSelect", scope: !8657, file: !8518, line: 196, type: !167)
!8662 = !DILocalVariable(name: "divTestSelect", scope: !8657, file: !8518, line: 196, type: !167)
!8663 = !DILocalVariable(name: "factor", scope: !8657, file: !8518, line: 197, type: !2738)
!8664 = !DILocation(line: 0, scope: !8657)
!8665 = !DILocation(line: 199, column: 9, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8657, file: !8518, line: 199, column: 9)
!8667 = !DILocation(line: 199, column: 9, scope: !8657)
!8668 = !DILocation(line: 202, column: 17, scope: !8657)
!8669 = !DILocation(line: 203, column: 22, scope: !8657)
!8670 = !DILocation(line: 203, column: 101, scope: !8657)
!8671 = !DILocation(line: 203, column: 21, scope: !8657)
!8672 = !DILocation(line: 205, column: 22, scope: !8657)
!8673 = !DILocation(line: 205, column: 104, scope: !8657)
!8674 = !DILocation(line: 205, column: 21, scope: !8657)
!8675 = !DILocation(line: 208, column: 5, scope: !8657)
!8676 = !DILocation(line: 222, column: 5, scope: !8657)
!8677 = !DILocation(line: 236, column: 9, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8657, file: !8518, line: 236, column: 9)
!8679 = !DILocation(line: 236, column: 43, scope: !8678)
!8680 = !DILocation(line: 236, column: 9, scope: !8657)
!8681 = !DILocation(line: 238, column: 27, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8678, file: !8518, line: 237, column: 5)
!8683 = !DILocation(line: 238, column: 61, scope: !8682)
!8684 = !DILocation(line: 238, column: 19, scope: !8682)
!8685 = !DILocation(line: 239, column: 27, scope: !8682)
!8686 = !DILocation(line: 239, column: 64, scope: !8682)
!8687 = !DILocation(line: 239, column: 19, scope: !8682)
!8688 = !DILocation(line: 238, column: 99, scope: !8682)
!8689 = !DILocation(line: 240, column: 27, scope: !8682)
!8690 = !DILocation(line: 240, column: 62, scope: !8682)
!8691 = !DILocation(line: 240, column: 19, scope: !8682)
!8692 = !DILocation(line: 239, column: 102, scope: !8682)
!8693 = !DILocation(line: 241, column: 40, scope: !8682)
!8694 = !DILocation(line: 241, column: 58, scope: !8682)
!8695 = !DILocation(line: 241, column: 27, scope: !8682)
!8696 = !DILocation(line: 241, column: 79, scope: !8682)
!8697 = !DILocation(line: 241, column: 89, scope: !8682)
!8698 = !DILocation(line: 241, column: 76, scope: !8682)
!8699 = !DILocation(line: 241, column: 16, scope: !8682)
!8700 = !DILocation(line: 241, column: 9, scope: !8682)
!8701 = !DILocation(line: 245, column: 29, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8678, file: !8518, line: 244, column: 5)
!8703 = !DILocation(line: 245, column: 47, scope: !8702)
!8704 = !DILocation(line: 245, column: 67, scope: !8702)
!8705 = !DILocation(line: 245, column: 65, scope: !8702)
!8706 = !DILocation(line: 245, column: 9, scope: !8702)
!8707 = !DILocation(line: 247, column: 1, scope: !8657)
!8708 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !8518, file: !8518, line: 255, type: !8709, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!110, !2675, !110}
!8711 = !{!8712, !8713, !8714, !8715}
!8712 = !DILocalVariable(name: "base", arg: 1, scope: !8708, file: !8518, line: 255, type: !2675)
!8713 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !8708, file: !8518, line: 255, type: !110)
!8714 = !DILocalVariable(name: "main", scope: !8708, file: !8518, line: 257, type: !110)
!8715 = !DILocalVariable(name: "frac", scope: !8708, file: !8518, line: 257, type: !110)
!8716 = !DILocation(line: 0, scope: !8708)
!8717 = !DILocation(line: 260, column: 5, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8518, line: 260, column: 5)
!8719 = distinct !DILexicalBlock(scope: !8708, file: !8518, line: 260, column: 5)
!8720 = !DILocation(line: 260, column: 5, scope: !8719)
!8721 = !DILocation(line: 260, column: 5, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !8518, line: 260, column: 5)
!8723 = !DILocation(line: 262, column: 12, scope: !8708)
!8724 = !DILocation(line: 263, column: 12, scope: !8708)
!8725 = !DILocation(line: 265, column: 17, scope: !8708)
!8726 = !DILocation(line: 265, column: 24, scope: !8708)
!8727 = !DILocation(line: 265, column: 5, scope: !8708)
!8728 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2666, file: !2666, line: 373, type: !8709, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2662, retainedNodes: !8729)
!8729 = !{!8730, !8731}
!8730 = !DILocalVariable(name: "base", arg: 1, scope: !8728, file: !2666, line: 373, type: !2675)
!8731 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !8728, file: !2666, line: 373, type: !110)
!8732 = !DILocation(line: 0, scope: !8728)
!8733 = !DILocation(line: 375, column: 13, scope: !8728)
!8734 = !DILocation(line: 375, column: 52, scope: !8728)
!8735 = !DILocation(line: 375, column: 49, scope: !8728)
!8736 = !DILocation(line: 375, column: 85, scope: !8728)
!8737 = !DILocation(line: 375, column: 5, scope: !8728)
!8738 = distinct !DISubprogram(name: "GPIO_Init", scope: !8739, file: !8739, line: 47, type: !8740, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !8764)
!8739 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8740 = !DISubroutineType(types: !8741)
!8741 = !{null, !8742, !8754}
!8742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8743, size: 32)
!8743 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !574, line: 19729, baseType: !8744)
!8744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 19720, size: 256, elements: !8745)
!8745 = !{!8746, !8747, !8748, !8749, !8750, !8751, !8752, !8753}
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !8744, file: !574, line: 19721, baseType: !578, size: 32)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !8744, file: !574, line: 19722, baseType: !578, size: 32, offset: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !8744, file: !574, line: 19723, baseType: !649, size: 32, offset: 64)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !8744, file: !574, line: 19724, baseType: !578, size: 32, offset: 96)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !8744, file: !574, line: 19725, baseType: !578, size: 32, offset: 128)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !8744, file: !574, line: 19726, baseType: !578, size: 32, offset: 160)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !8744, file: !574, line: 19727, baseType: !578, size: 32, offset: 192)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !8744, file: !574, line: 19728, baseType: !578, size: 32, offset: 224)
!8754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8755, size: 32)
!8755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8756)
!8756 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !850, line: 78, baseType: !8757)
!8757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !850, line: 73, size: 96, elements: !8758)
!8758 = !{!8759, !8760, !8762}
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8757, file: !850, line: 75, baseType: !110, size: 32)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8757, file: !850, line: 76, baseType: !8761, size: 32, offset: 32)
!8761 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !850, line: 53, baseType: !2742)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !8757, file: !850, line: 77, baseType: !8763, size: 32, offset: 64)
!8763 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !850, line: 63, baseType: !2746)
!8764 = !{!8765, !8766, !8767, !8768}
!8765 = !DILocalVariable(name: "base", arg: 1, scope: !8738, file: !8739, line: 47, type: !8742)
!8766 = !DILocalVariable(name: "initConfig", arg: 2, scope: !8738, file: !8739, line: 47, type: !8754)
!8767 = !DILocalVariable(name: "pin", scope: !8738, file: !8739, line: 49, type: !110)
!8768 = !DILocalVariable(name: "icr", scope: !8738, file: !8739, line: 50, type: !696)
!8769 = !DILocation(line: 0, scope: !8738)
!8770 = !DILocation(line: 53, column: 5, scope: !8738)
!8771 = !DILocation(line: 53, column: 24, scope: !8738)
!8772 = !DILocation(line: 54, column: 2, scope: !8738)
!8773 = !DILocation(line: 54, column: 26, scope: !8738)
!8774 = !DILocation(line: 57, column: 23, scope: !8738)
!8775 = !DILocation(line: 60, column: 21, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8738, file: !8739, line: 60, column: 9)
!8777 = !DILocation(line: 60, column: 31, scope: !8776)
!8778 = !DILocation(line: 0, scope: !8776)
!8779 = !DILocation(line: 60, column: 9, scope: !8738)
!8780 = !DILocation(line: 61, column: 9, scope: !8776)
!8781 = !DILocation(line: 61, column: 29, scope: !8776)
!8782 = !DILocation(line: 63, column: 32, scope: !8776)
!8783 = !DILocation(line: 63, column: 9, scope: !8776)
!8784 = !DILocation(line: 63, column: 29, scope: !8776)
!8785 = !DILocation(line: 66, column: 12, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8738, file: !8739, line: 66, column: 8)
!8787 = !DILocation(line: 66, column: 8, scope: !8738)
!8788 = !DILocation(line: 73, column: 24, scope: !8738)
!8789 = !DILocation(line: 73, column: 5, scope: !8738)
!8790 = !DILocation(line: 77, column: 30, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !8739, line: 76, column: 9)
!8792 = distinct !DILexicalBlock(scope: !8738, file: !8739, line: 74, column: 5)
!8793 = !DILocation(line: 77, column: 26, scope: !8791)
!8794 = !DILocation(line: 77, column: 21, scope: !8791)
!8795 = !DILocation(line: 77, column: 18, scope: !8791)
!8796 = !DILocation(line: 78, column: 13, scope: !8791)
!8797 = !DILocation(line: 82, column: 21, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8792, file: !8739, line: 81, column: 9)
!8799 = !DILocation(line: 82, column: 38, scope: !8798)
!8800 = !DILocation(line: 82, column: 34, scope: !8798)
!8801 = !DILocation(line: 82, column: 29, scope: !8798)
!8802 = !DILocation(line: 82, column: 26, scope: !8798)
!8803 = !DILocation(line: 82, column: 53, scope: !8798)
!8804 = !DILocation(line: 82, column: 47, scope: !8798)
!8805 = !DILocation(line: 83, column: 13, scope: !8798)
!8806 = !DILocation(line: 87, column: 21, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8792, file: !8739, line: 86, column: 9)
!8808 = !DILocation(line: 87, column: 38, scope: !8807)
!8809 = !DILocation(line: 87, column: 34, scope: !8807)
!8810 = !DILocation(line: 87, column: 29, scope: !8807)
!8811 = !DILocation(line: 87, column: 26, scope: !8807)
!8812 = !DILocation(line: 87, column: 53, scope: !8807)
!8813 = !DILocation(line: 87, column: 47, scope: !8807)
!8814 = !DILocation(line: 88, column: 13, scope: !8807)
!8815 = !DILocation(line: 92, column: 29, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8792, file: !8739, line: 91, column: 9)
!8817 = !DILocation(line: 92, column: 25, scope: !8816)
!8818 = !DILocation(line: 92, column: 18, scope: !8816)
!8819 = !DILocation(line: 93, column: 13, scope: !8816)
!8820 = !DILocation(line: 0, scope: !8792)
!8821 = !DILocation(line: 100, column: 1, scope: !8738)
!8822 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !8739, file: !8739, line: 111, type: !8823, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !8826)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{null, !8742, !110, !8825}
!8825 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !850, line: 70, baseType: !849)
!8826 = !{!8827, !8828, !8829}
!8827 = !DILocalVariable(name: "base", arg: 1, scope: !8822, file: !8739, line: 111, type: !8742)
!8828 = !DILocalVariable(name: "pin", arg: 2, scope: !8822, file: !8739, line: 111, type: !110)
!8829 = !DILocalVariable(name: "pinVal", arg: 3, scope: !8822, file: !8739, line: 111, type: !8825)
!8830 = !DILocation(line: 0, scope: !8822)
!8831 = !DILocation(line: 113, column: 5, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !8739, line: 113, column: 5)
!8833 = distinct !DILexicalBlock(scope: !8822, file: !8739, line: 113, column: 5)
!8834 = !DILocation(line: 113, column: 5, scope: !8833)
!8835 = !DILocation(line: 113, column: 5, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !8739, line: 113, column: 5)
!8837 = !DILocation(line: 114, column: 16, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8822, file: !8739, line: 114, column: 9)
!8839 = !DILocation(line: 0, scope: !8838)
!8840 = !DILocation(line: 114, column: 9, scope: !8822)
!8841 = !DILocation(line: 116, column: 9, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !8739, line: 115, column: 5)
!8843 = !DILocation(line: 116, column: 27, scope: !8842)
!8844 = !DILocation(line: 117, column: 5, scope: !8842)
!8845 = !DILocation(line: 120, column: 30, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8838, file: !8739, line: 119, column: 5)
!8847 = !DILocation(line: 120, column: 9, scope: !8846)
!8848 = !DILocation(line: 120, column: 27, scope: !8846)
!8849 = !DILocation(line: 122, column: 1, scope: !8822)
!8850 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !8739, file: !8739, line: 133, type: !8851, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !8853)
!8851 = !DISubroutineType(types: !8852)
!8852 = !{null, !8742, !110, !754}
!8853 = !{!8854, !8855, !8856}
!8854 = !DILocalVariable(name: "base", arg: 1, scope: !8850, file: !8739, line: 133, type: !8742)
!8855 = !DILocalVariable(name: "pin", arg: 2, scope: !8850, file: !8739, line: 133, type: !110)
!8856 = !DILocalVariable(name: "enable", arg: 3, scope: !8850, file: !8739, line: 133, type: !754)
!8857 = !DILocation(line: 0, scope: !8850)
!8858 = !DILocation(line: 135, column: 5, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !8739, line: 135, column: 5)
!8860 = distinct !DILexicalBlock(scope: !8850, file: !8739, line: 135, column: 5)
!8861 = !DILocation(line: 135, column: 5, scope: !8860)
!8862 = !DILocation(line: 135, column: 5, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8859, file: !8739, line: 135, column: 5)
!8864 = !DILocation(line: 0, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8850, file: !8739, line: 137, column: 8)
!8866 = !DILocation(line: 137, column: 8, scope: !8850)
!8867 = !DILocation(line: 138, column: 9, scope: !8865)
!8868 = !DILocation(line: 138, column: 28, scope: !8865)
!8869 = !DILocation(line: 140, column: 31, scope: !8865)
!8870 = !DILocation(line: 140, column: 9, scope: !8865)
!8871 = !DILocation(line: 140, column: 28, scope: !8865)
!8872 = !DILocation(line: 141, column: 1, scope: !8850)
!8873 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !8739, file: !8739, line: 150, type: !8851, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !8874)
!8874 = !{!8875, !8876, !8877}
!8875 = !DILocalVariable(name: "base", arg: 1, scope: !8873, file: !8739, line: 150, type: !8742)
!8876 = !DILocalVariable(name: "pin", arg: 2, scope: !8873, file: !8739, line: 150, type: !110)
!8877 = !DILocalVariable(name: "enable", arg: 3, scope: !8873, file: !8739, line: 150, type: !754)
!8878 = !DILocation(line: 0, scope: !8873)
!8879 = !DILocation(line: 152, column: 5, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !8739, line: 152, column: 5)
!8881 = distinct !DILexicalBlock(scope: !8873, file: !8739, line: 152, column: 5)
!8882 = !DILocation(line: 152, column: 5, scope: !8881)
!8883 = !DILocation(line: 152, column: 5, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !8739, line: 152, column: 5)
!8885 = !DILocation(line: 0, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8873, file: !8739, line: 154, column: 8)
!8887 = !DILocation(line: 154, column: 8, scope: !8873)
!8888 = !DILocation(line: 155, column: 9, scope: !8886)
!8889 = !DILocation(line: 155, column: 33, scope: !8886)
!8890 = !DILocation(line: 157, column: 36, scope: !8886)
!8891 = !DILocation(line: 157, column: 9, scope: !8886)
!8892 = !DILocation(line: 157, column: 33, scope: !8886)
!8893 = !DILocation(line: 158, column: 1, scope: !8873)
!8894 = distinct !DISubprogram(name: "UART_Init", scope: !8895, file: !8895, line: 47, type: !8896, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !8932)
!8895 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8896 = !DISubroutineType(types: !8897)
!8897 = !{null, !8898, !8921}
!8898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8899, size: 32)
!8899 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !574, line: 41342, baseType: !8900)
!8900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 41322, size: 1504, elements: !8901)
!8901 = !{!8902, !8903, !8904, !8905, !8906, !8907, !8908, !8909, !8910, !8911, !8912, !8913, !8914, !8915, !8916, !8917, !8918, !8919, !8920}
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !8900, file: !574, line: 41323, baseType: !649, size: 32)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8900, file: !574, line: 41324, baseType: !1207, size: 480, offset: 32)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !8900, file: !574, line: 41325, baseType: !578, size: 32, offset: 512)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !8900, file: !574, line: 41326, baseType: !1207, size: 480, offset: 544)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !8900, file: !574, line: 41327, baseType: !578, size: 32, offset: 1024)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !8900, file: !574, line: 41328, baseType: !578, size: 32, offset: 1056)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !8900, file: !574, line: 41329, baseType: !578, size: 32, offset: 1088)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !8900, file: !574, line: 41330, baseType: !578, size: 32, offset: 1120)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !8900, file: !574, line: 41331, baseType: !578, size: 32, offset: 1152)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !8900, file: !574, line: 41332, baseType: !578, size: 32, offset: 1184)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !8900, file: !574, line: 41333, baseType: !578, size: 32, offset: 1216)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !8900, file: !574, line: 41334, baseType: !578, size: 32, offset: 1248)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !8900, file: !574, line: 41335, baseType: !578, size: 32, offset: 1280)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !8900, file: !574, line: 41336, baseType: !578, size: 32, offset: 1312)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !8900, file: !574, line: 41337, baseType: !578, size: 32, offset: 1344)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !8900, file: !574, line: 41338, baseType: !649, size: 32, offset: 1376)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !8900, file: !574, line: 41339, baseType: !578, size: 32, offset: 1408)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !8900, file: !574, line: 41340, baseType: !578, size: 32, offset: 1440)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !8900, file: !574, line: 41341, baseType: !578, size: 32, offset: 1472)
!8921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8922, size: 32)
!8922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8923)
!8923 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1037, line: 57, baseType: !8924)
!8924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1037, line: 49, size: 192, elements: !8925)
!8925 = !{!8926, !8927, !8928, !8929, !8930, !8931}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !8924, file: !1037, line: 51, baseType: !110, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !8924, file: !1037, line: 52, baseType: !110, size: 32, offset: 32)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !8924, file: !1037, line: 53, baseType: !110, size: 32, offset: 64)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !8924, file: !1037, line: 54, baseType: !110, size: 32, offset: 96)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8924, file: !1037, line: 55, baseType: !110, size: 32, offset: 128)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8924, file: !1037, line: 56, baseType: !110, size: 32, offset: 160)
!8932 = !{!8933, !8934}
!8933 = !DILocalVariable(name: "base", arg: 1, scope: !8894, file: !8895, line: 47, type: !8898)
!8934 = !DILocalVariable(name: "initConfig", arg: 2, scope: !8894, file: !8895, line: 47, type: !8921)
!8935 = !DILocation(line: 0, scope: !8894)
!8936 = !DILocation(line: 49, column: 5, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !8895, line: 49, column: 5)
!8938 = distinct !DILexicalBlock(scope: !8894, file: !8895, line: 49, column: 5)
!8939 = !DILocation(line: 49, column: 5, scope: !8938)
!8940 = !DILocation(line: 49, column: 5, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !8895, line: 49, column: 5)
!8942 = !DILocation(line: 52, column: 5, scope: !8894)
!8943 = !DILocation(line: 52, column: 25, scope: !8894)
!8944 = !DILocation(line: 55, column: 5, scope: !8894)
!8945 = !DILocation(line: 60, column: 41, scope: !8894)
!8946 = !DILocation(line: 61, column: 41, scope: !8894)
!8947 = !DILocation(line: 62, column: 41, scope: !8894)
!8948 = !DILocation(line: 63, column: 41, scope: !8894)
!8949 = !DILocation(line: 60, column: 5, scope: !8894)
!8950 = !DILocation(line: 60, column: 25, scope: !8894)
!8951 = !DILocation(line: 61, column: 52, scope: !8894)
!8952 = !DILocation(line: 62, column: 52, scope: !8894)
!8953 = !DILocation(line: 63, column: 52, scope: !8894)
!8954 = !DILocation(line: 68, column: 5, scope: !8894)
!8955 = !DILocation(line: 68, column: 25, scope: !8894)
!8956 = !DILocation(line: 72, column: 40, scope: !8894)
!8957 = !DILocation(line: 72, column: 63, scope: !8894)
!8958 = !DILocation(line: 72, column: 5, scope: !8894)
!8959 = !DILocation(line: 73, column: 1, scope: !8894)
!8960 = distinct !DISubprogram(name: "UART_Deinit", scope: !8895, file: !8895, line: 82, type: !8961, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !8963)
!8961 = !DISubroutineType(types: !8962)
!8962 = !{null, !8898}
!8963 = !{!8964}
!8964 = !DILocalVariable(name: "base", arg: 1, scope: !8960, file: !8895, line: 82, type: !8898)
!8965 = !DILocation(line: 0, scope: !8960)
!8966 = !DILocation(line: 85, column: 5, scope: !8960)
!8967 = !DILocation(line: 85, column: 25, scope: !8960)
!8968 = !DILocation(line: 88, column: 26, scope: !8960)
!8969 = !DILocation(line: 89, column: 5, scope: !8960)
!8970 = !DILocation(line: 89, column: 26, scope: !8960)
!8971 = !DILocation(line: 90, column: 5, scope: !8960)
!8972 = !DILocation(line: 90, column: 26, scope: !8960)
!8973 = !DILocation(line: 93, column: 5, scope: !8960)
!8974 = !DILocation(line: 93, column: 26, scope: !8960)
!8975 = !DILocation(line: 94, column: 5, scope: !8960)
!8976 = !DILocation(line: 94, column: 26, scope: !8960)
!8977 = !DILocation(line: 95, column: 5, scope: !8960)
!8978 = !DILocation(line: 95, column: 26, scope: !8960)
!8979 = !DILocation(line: 96, column: 5, scope: !8960)
!8980 = !DILocation(line: 96, column: 26, scope: !8960)
!8981 = !DILocation(line: 97, column: 5, scope: !8960)
!8982 = !DILocation(line: 97, column: 26, scope: !8960)
!8983 = !DILocation(line: 98, column: 5, scope: !8960)
!8984 = !DILocation(line: 98, column: 26, scope: !8960)
!8985 = !DILocation(line: 99, column: 5, scope: !8960)
!8986 = !DILocation(line: 99, column: 26, scope: !8960)
!8987 = !DILocation(line: 103, column: 25, scope: !8960)
!8988 = !DILocation(line: 104, column: 5, scope: !8960)
!8989 = !DILocation(line: 104, column: 14, scope: !8960)
!8990 = !DILocation(line: 104, column: 34, scope: !8960)
!8991 = !DILocation(line: 104, column: 12, scope: !8960)
!8992 = distinct !{!8992, !8988, !8993}
!8993 = !DILocation(line: 104, column: 57, scope: !8960)
!8994 = !DILocation(line: 105, column: 1, scope: !8960)
!8995 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !8895, file: !8895, line: 113, type: !8996, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !8998)
!8996 = !DISubroutineType(types: !8997)
!8997 = !{null, !8898, !110, !110}
!8998 = !{!8999, !9000, !9001, !9002, !9003, !9004, !9005, !9006, !9007, !9010, !9011}
!8999 = !DILocalVariable(name: "base", arg: 1, scope: !8995, file: !8895, line: 113, type: !8898)
!9000 = !DILocalVariable(name: "clockRate", arg: 2, scope: !8995, file: !8895, line: 113, type: !110)
!9001 = !DILocalVariable(name: "baudRate", arg: 3, scope: !8995, file: !8895, line: 113, type: !110)
!9002 = !DILocalVariable(name: "numerator", scope: !8995, file: !8895, line: 115, type: !110)
!9003 = !DILocalVariable(name: "denominator", scope: !8995, file: !8895, line: 116, type: !110)
!9004 = !DILocalVariable(name: "divisor", scope: !8995, file: !8895, line: 117, type: !110)
!9005 = !DILocalVariable(name: "refFreqDiv", scope: !8995, file: !8895, line: 118, type: !110)
!9006 = !DILocalVariable(name: "divider", scope: !8995, file: !8895, line: 119, type: !110)
!9007 = !DILocalVariable(name: "m", scope: !9008, file: !8895, line: 141, type: !110)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !8895, line: 140, column: 5)
!9009 = distinct !DILexicalBlock(scope: !8995, file: !8895, line: 138, column: 9)
!9010 = !DILocalVariable(name: "n", scope: !9008, file: !8895, line: 142, type: !110)
!9011 = !DILocalVariable(name: "max", scope: !9008, file: !8895, line: 143, type: !110)
!9012 = !DILocation(line: 0, scope: !8995)
!9013 = !DILocation(line: 123, column: 28, scope: !8995)
!9014 = !DILocation(line: 126, column: 24, scope: !8995)
!9015 = !DILocation(line: 126, column: 5, scope: !8995)
!9016 = !DILocation(line: 129, column: 33, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8995, file: !8895, line: 127, column: 5)
!9018 = distinct !{!9018, !9015, !9019}
!9019 = !DILocation(line: 131, column: 5, scope: !8995)
!9020 = !DILocation(line: 133, column: 27, scope: !8995)
!9021 = !DILocation(line: 134, column: 35, scope: !8995)
!9022 = !DILocation(line: 138, column: 20, scope: !9009)
!9023 = !DILocation(line: 138, column: 48, scope: !9009)
!9024 = !DILocation(line: 141, column: 33, scope: !9008)
!9025 = !DILocation(line: 141, column: 38, scope: !9008)
!9026 = !DILocation(line: 141, column: 65, scope: !9008)
!9027 = !DILocation(line: 0, scope: !9008)
!9028 = !DILocation(line: 142, column: 35, scope: !9008)
!9029 = !DILocation(line: 142, column: 40, scope: !9008)
!9030 = !DILocation(line: 142, column: 61, scope: !9008)
!9031 = !DILocation(line: 143, column: 26, scope: !9008)
!9032 = !DILocation(line: 143, column: 24, scope: !9008)
!9033 = !DILocation(line: 144, column: 19, scope: !9008)
!9034 = !DILocation(line: 145, column: 21, scope: !9008)
!9035 = !DILocation(line: 146, column: 15, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9008, file: !8895, line: 146, column: 13)
!9037 = !DILocation(line: 146, column: 13, scope: !9008)
!9038 = !DILocation(line: 148, column: 15, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9008, file: !8895, line: 148, column: 13)
!9040 = !DILocation(line: 148, column: 13, scope: !9008)
!9041 = !DILocation(line: 150, column: 5, scope: !9008)
!9042 = !DILocation(line: 151, column: 26, scope: !8995)
!9043 = !DILocation(line: 151, column: 31, scope: !8995)
!9044 = !DILocation(line: 151, column: 52, scope: !8995)
!9045 = !DILocation(line: 153, column: 5, scope: !8995)
!9046 = !DILocation(line: 0, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !8995, file: !8895, line: 154, column: 5)
!9048 = !DILocation(line: 180, column: 5, scope: !8995)
!9049 = !DILocation(line: 180, column: 25, scope: !8995)
!9050 = !DILocation(line: 181, column: 25, scope: !8995)
!9051 = !DILocation(line: 182, column: 27, scope: !8995)
!9052 = !DILocation(line: 182, column: 5, scope: !8995)
!9053 = !DILocation(line: 182, column: 25, scope: !8995)
!9054 = !DILocation(line: 183, column: 27, scope: !8995)
!9055 = !DILocation(line: 183, column: 5, scope: !8995)
!9056 = !DILocation(line: 183, column: 25, scope: !8995)
!9057 = !DILocation(line: 184, column: 28, scope: !8995)
!9058 = !DILocation(line: 184, column: 5, scope: !8995)
!9059 = !DILocation(line: 184, column: 26, scope: !8995)
!9060 = !DILocation(line: 185, column: 1, scope: !8995)
!9061 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !8895, file: !8895, line: 194, type: !9062, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9064)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{null, !8898, !110, !754}
!9064 = !{!9065, !9066, !9067}
!9065 = !DILocalVariable(name: "base", arg: 1, scope: !9061, file: !8895, line: 194, type: !8898)
!9066 = !DILocalVariable(name: "direction", arg: 2, scope: !9061, file: !8895, line: 194, type: !110)
!9067 = !DILocalVariable(name: "invert", arg: 3, scope: !9061, file: !8895, line: 194, type: !754)
!9068 = !DILocation(line: 0, scope: !9061)
!9069 = !DILocation(line: 196, column: 5, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !8895, line: 196, column: 5)
!9071 = distinct !DILexicalBlock(scope: !9061, file: !8895, line: 196, column: 5)
!9072 = !DILocation(line: 196, column: 5, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9070, file: !8895, line: 196, column: 5)
!9074 = !DILocation(line: 198, column: 9, scope: !9061)
!9075 = !DILocation(line: 200, column: 13, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !8895, line: 199, column: 5)
!9077 = distinct !DILexicalBlock(scope: !9061, file: !8895, line: 198, column: 9)
!9078 = !DILocation(line: 201, column: 13, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9076, file: !8895, line: 200, column: 13)
!9080 = !DILocation(line: 201, column: 33, scope: !9079)
!9081 = !DILocation(line: 202, column: 13, scope: !9076)
!9082 = !DILocation(line: 203, column: 13, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9076, file: !8895, line: 202, column: 13)
!9084 = !DILocation(line: 203, column: 33, scope: !9083)
!9085 = !DILocation(line: 207, column: 13, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9077, file: !8895, line: 206, column: 5)
!9087 = !DILocation(line: 208, column: 13, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9086, file: !8895, line: 207, column: 13)
!9089 = !DILocation(line: 208, column: 33, scope: !9088)
!9090 = !DILocation(line: 209, column: 13, scope: !9086)
!9091 = !DILocation(line: 210, column: 13, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9086, file: !8895, line: 209, column: 13)
!9093 = !DILocation(line: 210, column: 33, scope: !9092)
!9094 = !DILocation(line: 212, column: 1, scope: !9061)
!9095 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !8895, file: !8895, line: 224, type: !9096, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !8898, !754}
!9098 = !{!9099, !9100}
!9099 = !DILocalVariable(name: "base", arg: 1, scope: !9095, file: !8895, line: 224, type: !8898)
!9100 = !DILocalVariable(name: "enable", arg: 2, scope: !9095, file: !8895, line: 224, type: !754)
!9101 = !DILocation(line: 0, scope: !9095)
!9102 = !DILocation(line: 0, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9095, file: !8895, line: 226, column: 9)
!9104 = !DILocation(line: 226, column: 9, scope: !9095)
!9105 = !DILocation(line: 230, column: 1, scope: !9095)
!9106 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !8895, file: !8895, line: 239, type: !9096, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9107)
!9107 = !{!9108, !9109}
!9108 = !DILocalVariable(name: "base", arg: 1, scope: !9106, file: !8895, line: 239, type: !8898)
!9109 = !DILocalVariable(name: "enable", arg: 2, scope: !9106, file: !8895, line: 239, type: !754)
!9110 = !DILocation(line: 0, scope: !9106)
!9111 = !DILocation(line: 0, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9106, file: !8895, line: 241, column: 9)
!9113 = !DILocation(line: 241, column: 9, scope: !9106)
!9114 = !DILocation(line: 245, column: 1, scope: !9106)
!9115 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !8895, file: !8895, line: 258, type: !9062, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9116)
!9116 = !{!9117, !9118, !9119, !9120, !9121}
!9117 = !DILocalVariable(name: "base", arg: 1, scope: !9115, file: !8895, line: 258, type: !8898)
!9118 = !DILocalVariable(name: "intSource", arg: 2, scope: !9115, file: !8895, line: 258, type: !110)
!9119 = !DILocalVariable(name: "enable", arg: 3, scope: !9115, file: !8895, line: 258, type: !754)
!9120 = !DILocalVariable(name: "uart_reg", scope: !9115, file: !8895, line: 260, type: !696)
!9121 = !DILocalVariable(name: "uart_mask", scope: !9115, file: !8895, line: 261, type: !110)
!9122 = !DILocation(line: 0, scope: !9115)
!9123 = !DILocation(line: 263, column: 29, scope: !9115)
!9124 = !DILocation(line: 263, column: 57, scope: !9115)
!9125 = !DILocation(line: 263, column: 44, scope: !9115)
!9126 = !DILocation(line: 263, column: 16, scope: !9115)
!9127 = !DILocation(line: 264, column: 34, scope: !9115)
!9128 = !DILocation(line: 264, column: 20, scope: !9115)
!9129 = !DILocation(line: 266, column: 9, scope: !9115)
!9130 = !DILocation(line: 267, column: 19, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9115, file: !8895, line: 266, column: 9)
!9132 = !DILocation(line: 267, column: 9, scope: !9131)
!9133 = !DILocation(line: 269, column: 22, scope: !9131)
!9134 = !DILocation(line: 269, column: 19, scope: !9131)
!9135 = !DILocation(line: 0, scope: !9131)
!9136 = !DILocation(line: 270, column: 1, scope: !9115)
!9137 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !8895, file: !8895, line: 299, type: !9138, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9140)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{null, !8898, !110}
!9140 = !{!9141, !9142, !9143, !9144}
!9141 = !DILocalVariable(name: "base", arg: 1, scope: !9137, file: !8895, line: 299, type: !8898)
!9142 = !DILocalVariable(name: "flag", arg: 2, scope: !9137, file: !8895, line: 299, type: !110)
!9143 = !DILocalVariable(name: "uart_reg", scope: !9137, file: !8895, line: 301, type: !696)
!9144 = !DILocalVariable(name: "uart_mask", scope: !9137, file: !8895, line: 302, type: !110)
!9145 = !DILocation(line: 0, scope: !9137)
!9146 = !DILocation(line: 304, column: 29, scope: !9137)
!9147 = !DILocation(line: 304, column: 52, scope: !9137)
!9148 = !DILocation(line: 304, column: 44, scope: !9137)
!9149 = !DILocation(line: 304, column: 16, scope: !9137)
!9150 = !DILocation(line: 305, column: 29, scope: !9137)
!9151 = !DILocation(line: 305, column: 20, scope: !9137)
!9152 = !DILocation(line: 308, column: 15, scope: !9137)
!9153 = !DILocation(line: 309, column: 1, scope: !9137)
!9154 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !8895, file: !8895, line: 322, type: !9062, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9155)
!9155 = !{!9156, !9157, !9158, !9159, !9160}
!9156 = !DILocalVariable(name: "base", arg: 1, scope: !9154, file: !8895, line: 322, type: !8898)
!9157 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !9154, file: !8895, line: 322, type: !110)
!9158 = !DILocalVariable(name: "enable", arg: 3, scope: !9154, file: !8895, line: 322, type: !754)
!9159 = !DILocalVariable(name: "uart_reg", scope: !9154, file: !8895, line: 324, type: !696)
!9160 = !DILocalVariable(name: "uart_mask", scope: !9154, file: !8895, line: 325, type: !110)
!9161 = !DILocation(line: 0, scope: !9154)
!9162 = !DILocation(line: 327, column: 29, scope: !9154)
!9163 = !DILocation(line: 327, column: 57, scope: !9154)
!9164 = !DILocation(line: 327, column: 44, scope: !9154)
!9165 = !DILocation(line: 327, column: 16, scope: !9154)
!9166 = !DILocation(line: 328, column: 34, scope: !9154)
!9167 = !DILocation(line: 328, column: 20, scope: !9154)
!9168 = !DILocation(line: 329, column: 9, scope: !9154)
!9169 = !DILocation(line: 330, column: 19, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9154, file: !8895, line: 329, column: 9)
!9171 = !DILocation(line: 330, column: 9, scope: !9170)
!9172 = !DILocation(line: 332, column: 22, scope: !9170)
!9173 = !DILocation(line: 332, column: 19, scope: !9170)
!9174 = !DILocation(line: 0, scope: !9170)
!9175 = !DILocation(line: 333, column: 1, scope: !9154)
!9176 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !8895, file: !8895, line: 345, type: !9096, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9177)
!9177 = !{!9178, !9179}
!9178 = !DILocalVariable(name: "base", arg: 1, scope: !9176, file: !8895, line: 345, type: !8898)
!9179 = !DILocalVariable(name: "enable", arg: 2, scope: !9176, file: !8895, line: 345, type: !754)
!9180 = !DILocation(line: 0, scope: !9176)
!9181 = !DILocation(line: 0, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9176, file: !8895, line: 347, column: 9)
!9183 = !DILocation(line: 347, column: 9, scope: !9176)
!9184 = !DILocation(line: 351, column: 1, scope: !9176)
!9185 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !8895, file: !8895, line: 362, type: !9096, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9186)
!9186 = !{!9187, !9188}
!9187 = !DILocalVariable(name: "base", arg: 1, scope: !9185, file: !8895, line: 362, type: !8898)
!9188 = !DILocalVariable(name: "enable", arg: 2, scope: !9185, file: !8895, line: 362, type: !754)
!9189 = !DILocation(line: 0, scope: !9185)
!9190 = !DILocation(line: 0, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9185, file: !8895, line: 364, column: 9)
!9192 = !DILocation(line: 364, column: 9, scope: !9185)
!9193 = !DILocation(line: 368, column: 1, scope: !9185)
!9194 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !8895, file: !8895, line: 379, type: !9096, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9195)
!9195 = !{!9196, !9197}
!9196 = !DILocalVariable(name: "base", arg: 1, scope: !9194, file: !8895, line: 379, type: !8898)
!9197 = !DILocalVariable(name: "active", arg: 2, scope: !9194, file: !8895, line: 379, type: !754)
!9198 = !DILocation(line: 0, scope: !9194)
!9199 = !DILocation(line: 0, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9194, file: !8895, line: 381, column: 9)
!9201 = !DILocation(line: 381, column: 9, scope: !9194)
!9202 = !DILocation(line: 385, column: 1, scope: !9194)
!9203 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !8895, file: !8895, line: 394, type: !9138, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9204)
!9204 = !{!9205, !9206}
!9205 = !DILocalVariable(name: "base", arg: 1, scope: !9203, file: !8895, line: 394, type: !8898)
!9206 = !DILocalVariable(name: "mode", arg: 2, scope: !9203, file: !8895, line: 394, type: !110)
!9207 = !DILocation(line: 0, scope: !9203)
!9208 = !DILocation(line: 396, column: 5, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !8895, line: 396, column: 5)
!9210 = distinct !DILexicalBlock(scope: !9203, file: !8895, line: 396, column: 5)
!9211 = !DILocation(line: 396, column: 5, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9209, file: !8895, line: 396, column: 5)
!9213 = !DILocation(line: 0, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9203, file: !8895, line: 398, column: 9)
!9215 = !DILocation(line: 398, column: 9, scope: !9203)
!9216 = !DILocation(line: 402, column: 1, scope: !9203)
!9217 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !8895, file: !8895, line: 412, type: !9096, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9218)
!9218 = !{!9219, !9220}
!9219 = !DILocalVariable(name: "base", arg: 1, scope: !9217, file: !8895, line: 412, type: !8898)
!9220 = !DILocalVariable(name: "active", arg: 2, scope: !9217, file: !8895, line: 412, type: !754)
!9221 = !DILocation(line: 0, scope: !9217)
!9222 = !DILocation(line: 0, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9217, file: !8895, line: 414, column: 9)
!9224 = !DILocation(line: 414, column: 9, scope: !9217)
!9225 = !DILocation(line: 418, column: 1, scope: !9217)
!9226 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !8895, file: !8895, line: 427, type: !9096, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9227)
!9227 = !{!9228, !9229}
!9228 = !DILocalVariable(name: "base", arg: 1, scope: !9226, file: !8895, line: 427, type: !8898)
!9229 = !DILocalVariable(name: "active", arg: 2, scope: !9226, file: !8895, line: 427, type: !754)
!9230 = !DILocation(line: 0, scope: !9226)
!9231 = !DILocation(line: 0, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9226, file: !8895, line: 429, column: 9)
!9233 = !DILocation(line: 429, column: 9, scope: !9226)
!9234 = !DILocation(line: 433, column: 1, scope: !9226)
!9235 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !8895, file: !8895, line: 442, type: !9096, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9236)
!9236 = !{!9237, !9238}
!9237 = !DILocalVariable(name: "base", arg: 1, scope: !9235, file: !8895, line: 442, type: !8898)
!9238 = !DILocalVariable(name: "active", arg: 2, scope: !9235, file: !8895, line: 442, type: !754)
!9239 = !DILocation(line: 0, scope: !9235)
!9240 = !DILocation(line: 0, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9235, file: !8895, line: 444, column: 9)
!9242 = !DILocation(line: 444, column: 9, scope: !9235)
!9243 = !DILocation(line: 448, column: 1, scope: !9235)
!9244 = distinct !DISubprogram(name: "UART_Putchar9", scope: !8895, file: !8895, line: 460, type: !9245, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9247)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{null, !8898, !181}
!9247 = !{!9248, !9249}
!9248 = !DILocalVariable(name: "base", arg: 1, scope: !9244, file: !8895, line: 460, type: !8898)
!9249 = !DILocalVariable(name: "data", arg: 2, scope: !9244, file: !8895, line: 460, type: !181)
!9250 = !DILocation(line: 0, scope: !9244)
!9251 = !DILocation(line: 462, column: 5, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !8895, line: 462, column: 5)
!9253 = distinct !DILexicalBlock(scope: !9244, file: !8895, line: 462, column: 5)
!9254 = !DILocation(line: 462, column: 5, scope: !9253)
!9255 = !DILocation(line: 462, column: 5, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9252, file: !8895, line: 462, column: 5)
!9257 = !DILocation(line: 0, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9244, file: !8895, line: 464, column: 9)
!9259 = !DILocation(line: 464, column: 9, scope: !9244)
!9260 = !DILocation(line: 468, column: 33, scope: !9244)
!9261 = !DILocation(line: 468, column: 5, scope: !9244)
!9262 = !DILocation(line: 468, column: 25, scope: !9244)
!9263 = !DILocation(line: 469, column: 1, scope: !9244)
!9264 = distinct !DISubprogram(name: "UART_Getchar9", scope: !8895, file: !8895, line: 478, type: !9265, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9267)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{!181, !8898}
!9267 = !{!9268, !9269}
!9268 = !DILocalVariable(name: "base", arg: 1, scope: !9264, file: !8895, line: 478, type: !8898)
!9269 = !DILocalVariable(name: "rxData", scope: !9264, file: !8895, line: 480, type: !181)
!9270 = !DILocation(line: 0, scope: !9264)
!9271 = !DILocation(line: 480, column: 23, scope: !9264)
!9272 = !DILocation(line: 482, column: 9, scope: !9264)
!9273 = !DILocation(line: 491, column: 5, scope: !9264)
!9274 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !8895, file: !8895, line: 501, type: !9096, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9275)
!9275 = !{!9276, !9277}
!9276 = !DILocalVariable(name: "base", arg: 1, scope: !9274, file: !8895, line: 501, type: !8898)
!9277 = !DILocalVariable(name: "enable", arg: 2, scope: !9274, file: !8895, line: 501, type: !754)
!9278 = !DILocation(line: 0, scope: !9274)
!9279 = !DILocation(line: 0, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9274, file: !8895, line: 503, column: 9)
!9281 = !DILocation(line: 503, column: 9, scope: !9274)
!9282 = !DILocation(line: 507, column: 1, scope: !9274)
!9283 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !8895, file: !8895, line: 516, type: !9096, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9284)
!9284 = !{!9285, !9286}
!9285 = !DILocalVariable(name: "base", arg: 1, scope: !9283, file: !8895, line: 516, type: !8898)
!9286 = !DILocalVariable(name: "enable", arg: 2, scope: !9283, file: !8895, line: 516, type: !754)
!9287 = !DILocation(line: 0, scope: !9283)
!9288 = !DILocation(line: 0, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9283, file: !8895, line: 518, column: 9)
!9290 = !DILocation(line: 518, column: 9, scope: !9283)
!9291 = !DILocation(line: 522, column: 1, scope: !9283)
!9292 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !8895, file: !8895, line: 534, type: !9096, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9293)
!9293 = !{!9294, !9295}
!9294 = !DILocalVariable(name: "base", arg: 1, scope: !9292, file: !8895, line: 534, type: !8898)
!9295 = !DILocalVariable(name: "enable", arg: 2, scope: !9292, file: !8895, line: 534, type: !754)
!9296 = !DILocation(line: 0, scope: !9292)
!9297 = !DILocation(line: 0, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9292, file: !8895, line: 536, column: 9)
!9299 = !DILocation(line: 536, column: 9, scope: !9292)
!9300 = !DILocation(line: 540, column: 1, scope: !9292)
!9301 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !8895, file: !8895, line: 550, type: !9138, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9302)
!9302 = !{!9303, !9304}
!9303 = !DILocalVariable(name: "base", arg: 1, scope: !9301, file: !8895, line: 550, type: !8898)
!9304 = !DILocalVariable(name: "voteClock", arg: 2, scope: !9301, file: !8895, line: 550, type: !110)
!9305 = !DILocation(line: 0, scope: !9301)
!9306 = !DILocation(line: 552, column: 5, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !8895, line: 552, column: 5)
!9308 = distinct !DILexicalBlock(scope: !9301, file: !8895, line: 552, column: 5)
!9309 = !DILocation(line: 552, column: 5, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9307, file: !8895, line: 552, column: 5)
!9311 = !DILocation(line: 0, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9301, file: !8895, line: 555, column: 9)
!9313 = !DILocation(line: 555, column: 9, scope: !9301)
!9314 = !DILocation(line: 559, column: 1, scope: !9301)
!9315 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !8895, file: !8895, line: 571, type: !9096, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9316)
!9316 = !{!9317, !9318}
!9317 = !DILocalVariable(name: "base", arg: 1, scope: !9315, file: !8895, line: 571, type: !8898)
!9318 = !DILocalVariable(name: "enable", arg: 2, scope: !9315, file: !8895, line: 571, type: !754)
!9319 = !DILocation(line: 0, scope: !9315)
!9320 = !DILocation(line: 0, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9315, file: !8895, line: 573, column: 9)
!9322 = !DILocation(line: 573, column: 9, scope: !9315)
!9323 = !DILocation(line: 577, column: 1, scope: !9315)
!9324 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !8895, file: !8895, line: 587, type: !9096, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9325)
!9325 = !{!9326, !9327}
!9326 = !DILocalVariable(name: "base", arg: 1, scope: !9324, file: !8895, line: 587, type: !8898)
!9327 = !DILocalVariable(name: "active", arg: 2, scope: !9324, file: !8895, line: 587, type: !754)
!9328 = !DILocation(line: 0, scope: !9324)
!9329 = !DILocation(line: 0, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9324, file: !8895, line: 589, column: 9)
!9331 = !DILocation(line: 589, column: 9, scope: !9324)
!9332 = !DILocation(line: 593, column: 1, scope: !9324)
!9333 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !8895, file: !8895, line: 602, type: !9096, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !9334)
!9334 = !{!9335, !9336}
!9335 = !DILocalVariable(name: "base", arg: 1, scope: !9333, file: !8895, line: 602, type: !8898)
!9336 = !DILocalVariable(name: "enable", arg: 2, scope: !9333, file: !8895, line: 602, type: !754)
!9337 = !DILocation(line: 0, scope: !9333)
!9338 = !DILocation(line: 0, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !8895, line: 604, column: 9)
!9340 = !DILocation(line: 604, column: 9, scope: !9333)
!9341 = !DILocation(line: 608, column: 1, scope: !9333)
!9342 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !9343, file: !9343, line: 42, type: !9344, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9360)
!9343 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9344 = !DISubroutineType(types: !9345)
!9345 = !{!110, !9346}
!9346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9347, size: 32)
!9347 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !574, line: 20831, baseType: !9348)
!9348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 20820, size: 320, elements: !9349)
!9349 = !{!9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9358, !9359}
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !9348, file: !574, line: 20821, baseType: !578, size: 32)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !9348, file: !574, line: 20822, baseType: !578, size: 32, offset: 32)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !9348, file: !574, line: 20823, baseType: !578, size: 32, offset: 64)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !9348, file: !574, line: 20824, baseType: !578, size: 32, offset: 96)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !9348, file: !574, line: 20825, baseType: !578, size: 32, offset: 128)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !9348, file: !574, line: 20826, baseType: !578, size: 32, offset: 160)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !9348, file: !574, line: 20827, baseType: !578, size: 32, offset: 192)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9348, file: !574, line: 20828, baseType: !649, size: 32, offset: 224)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9348, file: !574, line: 20829, baseType: !649, size: 32, offset: 256)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !9348, file: !574, line: 20830, baseType: !649, size: 32, offset: 288)
!9360 = !{!9361, !9362, !9363, !9364, !9365}
!9361 = !DILocalVariable(name: "base", arg: 1, scope: !9342, file: !9343, line: 42, type: !9346)
!9362 = !DILocalVariable(name: "root", scope: !9342, file: !9343, line: 44, type: !110)
!9363 = !DILocalVariable(name: "hz", scope: !9342, file: !9343, line: 45, type: !110)
!9364 = !DILocalVariable(name: "pre", scope: !9342, file: !9343, line: 46, type: !110)
!9365 = !DILocalVariable(name: "post", scope: !9342, file: !9343, line: 46, type: !110)
!9366 = !DILocation(line: 0, scope: !9342)
!9367 = !DILocation(line: 46, column: 2, scope: !9342)
!9368 = !DILocation(line: 48, column: 10, scope: !9342)
!9369 = !DILocation(line: 48, column: 2, scope: !9342)
!9370 = !DILocation(line: 56, column: 3, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9342, file: !9343, line: 48, column: 26)
!9372 = !DILocation(line: 0, scope: !9371)
!9373 = !DILocation(line: 61, column: 2, scope: !9342)
!9374 = !DILocation(line: 66, column: 8, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9342, file: !9343, line: 61, column: 16)
!9376 = !DILocation(line: 67, column: 3, scope: !9375)
!9377 = !DILocation(line: 0, scope: !9375)
!9378 = !DILocation(line: 72, column: 15, scope: !9342)
!9379 = !DILocation(line: 72, column: 19, scope: !9342)
!9380 = !DILocation(line: 72, column: 12, scope: !9342)
!9381 = !DILocation(line: 72, column: 27, scope: !9342)
!9382 = !DILocation(line: 72, column: 32, scope: !9342)
!9383 = !DILocation(line: 72, column: 24, scope: !9342)
!9384 = !DILocation(line: 72, column: 2, scope: !9342)
!9385 = !DILocation(line: 73, column: 1, scope: !9342)
!9386 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !290, file: !290, line: 368, type: !9387, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9389)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{!110, !2779, !110}
!9389 = !{!9390, !9391}
!9390 = !DILocalVariable(name: "base", arg: 1, scope: !9386, file: !290, line: 368, type: !2779)
!9391 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9386, file: !290, line: 368, type: !110)
!9392 = !DILocation(line: 0, scope: !9386)
!9393 = !DILocation(line: 370, column: 13, scope: !9386)
!9394 = !DILocation(line: 370, column: 58, scope: !9386)
!9395 = !DILocation(line: 370, column: 5, scope: !9386)
!9396 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !9343, file: !9343, line: 81, type: !9397, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9417)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!110, !9399}
!9399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9400, size: 32)
!9400 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !574, line: 12462, baseType: !9401)
!9401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 12450, size: 544, elements: !9402)
!9402 = !{!9403, !9404, !9405, !9406, !9407, !9408, !9409, !9410, !9411, !9412, !9416}
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !9401, file: !574, line: 12451, baseType: !649, size: 32)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !9401, file: !574, line: 12452, baseType: !578, size: 32, offset: 32)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !9401, file: !574, line: 12453, baseType: !578, size: 32, offset: 64)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !9401, file: !574, line: 12454, baseType: !578, size: 32, offset: 96)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !9401, file: !574, line: 12455, baseType: !578, size: 32, offset: 128)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !9401, file: !574, line: 12456, baseType: !578, size: 32, offset: 160)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !9401, file: !574, line: 12457, baseType: !578, size: 32, offset: 192)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !9401, file: !574, line: 12458, baseType: !578, size: 32, offset: 224)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !9401, file: !574, line: 12459, baseType: !578, size: 32, offset: 256)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9401, file: !574, line: 12460, baseType: !9413, size: 224, offset: 288)
!9413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 224, elements: !9414)
!9414 = !{!9415}
!9415 = !DISubrange(count: 28)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !9401, file: !574, line: 12461, baseType: !578, size: 32, offset: 512)
!9417 = !{!9418, !9419, !9420, !9421, !9422}
!9418 = !DILocalVariable(name: "base", arg: 1, scope: !9396, file: !9343, line: 81, type: !9399)
!9419 = !DILocalVariable(name: "root", scope: !9396, file: !9343, line: 83, type: !110)
!9420 = !DILocalVariable(name: "hz", scope: !9396, file: !9343, line: 84, type: !110)
!9421 = !DILocalVariable(name: "pre", scope: !9396, file: !9343, line: 85, type: !110)
!9422 = !DILocalVariable(name: "post", scope: !9396, file: !9343, line: 85, type: !110)
!9423 = !DILocation(line: 0, scope: !9396)
!9424 = !DILocation(line: 85, column: 2, scope: !9396)
!9425 = !DILocation(line: 87, column: 10, scope: !9396)
!9426 = !DILocation(line: 87, column: 2, scope: !9396)
!9427 = !DILocation(line: 95, column: 3, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9396, file: !9343, line: 87, column: 26)
!9429 = !DILocation(line: 0, scope: !9428)
!9430 = !DILocation(line: 100, column: 2, scope: !9396)
!9431 = !DILocation(line: 105, column: 8, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9396, file: !9343, line: 100, column: 16)
!9433 = !DILocation(line: 106, column: 3, scope: !9432)
!9434 = !DILocation(line: 0, scope: !9432)
!9435 = !DILocation(line: 111, column: 15, scope: !9396)
!9436 = !DILocation(line: 111, column: 19, scope: !9396)
!9437 = !DILocation(line: 111, column: 12, scope: !9396)
!9438 = !DILocation(line: 111, column: 27, scope: !9396)
!9439 = !DILocation(line: 111, column: 32, scope: !9396)
!9440 = !DILocation(line: 111, column: 24, scope: !9396)
!9441 = !DILocation(line: 111, column: 2, scope: !9396)
!9442 = !DILocation(line: 112, column: 1, scope: !9396)
!9443 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !9343, file: !9343, line: 120, type: !9444, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9488)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!110, !9446}
!9446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9447, size: 32)
!9447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !574, line: 3477, baseType: !9448)
!9448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 3446, size: 20256, elements: !9449)
!9449 = !{!9450, !9451, !9452, !9453, !9455, !9456, !9457, !9458, !9459, !9460, !9461, !9462, !9463, !9464, !9465, !9466, !9468, !9469, !9470, !9471, !9472, !9482, !9484, !9486, !9487}
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !9448, file: !574, line: 3447, baseType: !578, size: 32)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !9448, file: !574, line: 3448, baseType: !578, size: 32, offset: 32)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !9448, file: !574, line: 3449, baseType: !578, size: 32, offset: 64)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9448, file: !574, line: 3450, baseType: !9454, size: 32, offset: 96)
!9454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 32, elements: !1525)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !9448, file: !574, line: 3451, baseType: !578, size: 32, offset: 128)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !9448, file: !574, line: 3452, baseType: !578, size: 32, offset: 160)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !9448, file: !574, line: 3453, baseType: !578, size: 32, offset: 192)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !9448, file: !574, line: 3454, baseType: !578, size: 32, offset: 224)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !9448, file: !574, line: 3455, baseType: !578, size: 32, offset: 256)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !9448, file: !574, line: 3456, baseType: !578, size: 32, offset: 288)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !9448, file: !574, line: 3457, baseType: !578, size: 32, offset: 320)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !9448, file: !574, line: 3458, baseType: !578, size: 32, offset: 352)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !9448, file: !574, line: 3459, baseType: !578, size: 32, offset: 384)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !9448, file: !574, line: 3460, baseType: !578, size: 32, offset: 416)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !9448, file: !574, line: 3461, baseType: !649, size: 32, offset: 448)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9448, file: !574, line: 3462, baseType: !9467, size: 64, offset: 480)
!9467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !1471)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !9448, file: !574, line: 3463, baseType: !649, size: 32, offset: 544)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !9448, file: !574, line: 3464, baseType: !578, size: 32, offset: 576)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !9448, file: !574, line: 3465, baseType: !649, size: 32, offset: 608)
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9448, file: !574, line: 3466, baseType: !635, size: 384, offset: 640)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !9448, file: !574, line: 3472, baseType: !9473, size: 8192, offset: 1024)
!9473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9474, size: 8192, elements: !9480)
!9474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9448, file: !574, line: 3467, size: 128, elements: !9475)
!9475 = !{!9476, !9477, !9478, !9479}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9474, file: !574, line: 3468, baseType: !578, size: 32)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !9474, file: !574, line: 3469, baseType: !578, size: 32, offset: 32)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !9474, file: !574, line: 3470, baseType: !578, size: 32, offset: 64)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !9474, file: !574, line: 3471, baseType: !578, size: 32, offset: 96)
!9480 = !{!9481}
!9481 = !DISubrange(count: 64)
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9448, file: !574, line: 3473, baseType: !9483, size: 8192, offset: 9216)
!9483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 8192, elements: !1844)
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !9448, file: !574, line: 3474, baseType: !9485, size: 2048, offset: 17408)
!9485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 2048, elements: !9480)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !9448, file: !574, line: 3475, baseType: !2680, size: 768, offset: 19456)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !9448, file: !574, line: 3476, baseType: !578, size: 32, offset: 20224)
!9488 = !{!9489, !9490, !9491, !9492, !9493}
!9489 = !DILocalVariable(name: "base", arg: 1, scope: !9443, file: !9343, line: 120, type: !9446)
!9490 = !DILocalVariable(name: "root", scope: !9443, file: !9343, line: 122, type: !110)
!9491 = !DILocalVariable(name: "hz", scope: !9443, file: !9343, line: 123, type: !110)
!9492 = !DILocalVariable(name: "pre", scope: !9443, file: !9343, line: 124, type: !110)
!9493 = !DILocalVariable(name: "post", scope: !9443, file: !9343, line: 124, type: !110)
!9494 = !DILocation(line: 0, scope: !9443)
!9495 = !DILocation(line: 124, column: 2, scope: !9443)
!9496 = !DILocation(line: 126, column: 10, scope: !9443)
!9497 = !DILocation(line: 126, column: 2, scope: !9443)
!9498 = !DILocation(line: 134, column: 3, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9443, file: !9343, line: 126, column: 26)
!9500 = !DILocation(line: 0, scope: !9499)
!9501 = !DILocation(line: 139, column: 2, scope: !9443)
!9502 = !DILocation(line: 144, column: 8, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9443, file: !9343, line: 139, column: 16)
!9504 = !DILocation(line: 144, column: 45, scope: !9503)
!9505 = !DILocation(line: 145, column: 3, scope: !9503)
!9506 = !DILocation(line: 147, column: 8, scope: !9503)
!9507 = !DILocation(line: 148, column: 3, scope: !9503)
!9508 = !DILocation(line: 0, scope: !9503)
!9509 = !DILocation(line: 153, column: 15, scope: !9443)
!9510 = !DILocation(line: 153, column: 19, scope: !9443)
!9511 = !DILocation(line: 153, column: 12, scope: !9443)
!9512 = !DILocation(line: 153, column: 27, scope: !9443)
!9513 = !DILocation(line: 153, column: 32, scope: !9443)
!9514 = !DILocation(line: 153, column: 24, scope: !9443)
!9515 = !DILocation(line: 153, column: 2, scope: !9443)
!9516 = !DILocation(line: 154, column: 1, scope: !9443)
!9517 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !9343, file: !9343, line: 162, type: !9518, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9534)
!9518 = !DISubroutineType(types: !9519)
!9519 = !{!110, !9520}
!9520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9521, size: 32)
!9521 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !574, line: 21082, baseType: !9522)
!9522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 21072, size: 144, elements: !9523)
!9523 = !{!9524, !9525, !9527, !9528, !9529, !9530, !9531, !9532, !9533}
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !9522, file: !574, line: 21073, baseType: !690, size: 16)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9522, file: !574, line: 21074, baseType: !9526, size: 16, offset: 16)
!9526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 16, elements: !162)
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !9522, file: !574, line: 21075, baseType: !690, size: 16, offset: 32)
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9522, file: !574, line: 21076, baseType: !9526, size: 16, offset: 48)
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !9522, file: !574, line: 21077, baseType: !690, size: 16, offset: 64)
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9522, file: !574, line: 21078, baseType: !9526, size: 16, offset: 80)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !9522, file: !574, line: 21079, baseType: !690, size: 16, offset: 96)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9522, file: !574, line: 21080, baseType: !9526, size: 16, offset: 112)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !9522, file: !574, line: 21081, baseType: !690, size: 16, offset: 128)
!9534 = !{!9535, !9536, !9537, !9538, !9539}
!9535 = !DILocalVariable(name: "base", arg: 1, scope: !9517, file: !9343, line: 162, type: !9520)
!9536 = !DILocalVariable(name: "root", scope: !9517, file: !9343, line: 164, type: !110)
!9537 = !DILocalVariable(name: "hz", scope: !9517, file: !9343, line: 165, type: !110)
!9538 = !DILocalVariable(name: "pre", scope: !9517, file: !9343, line: 166, type: !110)
!9539 = !DILocalVariable(name: "post", scope: !9517, file: !9343, line: 166, type: !110)
!9540 = !DILocation(line: 0, scope: !9517)
!9541 = !DILocation(line: 166, column: 2, scope: !9517)
!9542 = !DILocation(line: 168, column: 10, scope: !9517)
!9543 = !DILocation(line: 168, column: 2, scope: !9517)
!9544 = !DILocation(line: 0, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9517, file: !9343, line: 168, column: 26)
!9546 = !DILocation(line: 189, column: 2, scope: !9517)
!9547 = !DILocation(line: 194, column: 8, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9517, file: !9343, line: 189, column: 16)
!9549 = !DILocation(line: 194, column: 45, scope: !9548)
!9550 = !DILocation(line: 195, column: 3, scope: !9548)
!9551 = !DILocation(line: 0, scope: !9548)
!9552 = !DILocation(line: 200, column: 15, scope: !9517)
!9553 = !DILocation(line: 200, column: 19, scope: !9517)
!9554 = !DILocation(line: 200, column: 12, scope: !9517)
!9555 = !DILocation(line: 200, column: 27, scope: !9517)
!9556 = !DILocation(line: 200, column: 32, scope: !9517)
!9557 = !DILocation(line: 200, column: 24, scope: !9517)
!9558 = !DILocation(line: 200, column: 2, scope: !9517)
!9559 = !DILocation(line: 201, column: 1, scope: !9517)
!9560 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !9343, file: !9343, line: 209, type: !9561, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !9586)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!110, !9563}
!9563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9564, size: 32)
!9564 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !574, line: 41342, baseType: !9565)
!9565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !574, line: 41322, size: 1504, elements: !9566)
!9566 = !{!9567, !9568, !9569, !9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583, !9584, !9585}
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9565, file: !574, line: 41323, baseType: !649, size: 32)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9565, file: !574, line: 41324, baseType: !1207, size: 480, offset: 32)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9565, file: !574, line: 41325, baseType: !578, size: 32, offset: 512)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9565, file: !574, line: 41326, baseType: !1207, size: 480, offset: 544)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9565, file: !574, line: 41327, baseType: !578, size: 32, offset: 1024)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9565, file: !574, line: 41328, baseType: !578, size: 32, offset: 1056)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9565, file: !574, line: 41329, baseType: !578, size: 32, offset: 1088)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9565, file: !574, line: 41330, baseType: !578, size: 32, offset: 1120)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9565, file: !574, line: 41331, baseType: !578, size: 32, offset: 1152)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9565, file: !574, line: 41332, baseType: !578, size: 32, offset: 1184)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9565, file: !574, line: 41333, baseType: !578, size: 32, offset: 1216)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9565, file: !574, line: 41334, baseType: !578, size: 32, offset: 1248)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9565, file: !574, line: 41335, baseType: !578, size: 32, offset: 1280)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9565, file: !574, line: 41336, baseType: !578, size: 32, offset: 1312)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9565, file: !574, line: 41337, baseType: !578, size: 32, offset: 1344)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9565, file: !574, line: 41338, baseType: !649, size: 32, offset: 1376)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9565, file: !574, line: 41339, baseType: !578, size: 32, offset: 1408)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9565, file: !574, line: 41340, baseType: !578, size: 32, offset: 1440)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9565, file: !574, line: 41341, baseType: !578, size: 32, offset: 1472)
!9586 = !{!9587, !9588, !9589, !9590, !9591}
!9587 = !DILocalVariable(name: "base", arg: 1, scope: !9560, file: !9343, line: 209, type: !9563)
!9588 = !DILocalVariable(name: "root", scope: !9560, file: !9343, line: 211, type: !110)
!9589 = !DILocalVariable(name: "hz", scope: !9560, file: !9343, line: 212, type: !110)
!9590 = !DILocalVariable(name: "pre", scope: !9560, file: !9343, line: 213, type: !110)
!9591 = !DILocalVariable(name: "post", scope: !9560, file: !9343, line: 213, type: !110)
!9592 = !DILocation(line: 0, scope: !9560)
!9593 = !DILocation(line: 213, column: 2, scope: !9560)
!9594 = !DILocation(line: 215, column: 10, scope: !9560)
!9595 = !DILocation(line: 215, column: 2, scope: !9560)
!9596 = !DILocation(line: 223, column: 3, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9560, file: !9343, line: 215, column: 26)
!9598 = !DILocation(line: 227, column: 3, scope: !9597)
!9599 = !DILocation(line: 231, column: 3, scope: !9597)
!9600 = !DILocation(line: 235, column: 3, scope: !9597)
!9601 = !DILocation(line: 239, column: 3, scope: !9597)
!9602 = !DILocation(line: 243, column: 3, scope: !9597)
!9603 = !DILocation(line: 0, scope: !9597)
!9604 = !DILocation(line: 248, column: 2, scope: !9560)
!9605 = !DILocation(line: 253, column: 8, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9560, file: !9343, line: 248, column: 16)
!9607 = !DILocation(line: 253, column: 45, scope: !9606)
!9608 = !DILocation(line: 254, column: 3, scope: !9606)
!9609 = !DILocation(line: 256, column: 8, scope: !9606)
!9610 = !DILocation(line: 257, column: 3, scope: !9606)
!9611 = !DILocation(line: 0, scope: !9606)
!9612 = !DILocation(line: 262, column: 15, scope: !9560)
!9613 = !DILocation(line: 262, column: 19, scope: !9560)
!9614 = !DILocation(line: 262, column: 12, scope: !9560)
!9615 = !DILocation(line: 262, column: 27, scope: !9560)
!9616 = !DILocation(line: 262, column: 32, scope: !9560)
!9617 = !DILocation(line: 262, column: 24, scope: !9560)
!9618 = !DILocation(line: 262, column: 2, scope: !9560)
!9619 = !DILocation(line: 263, column: 1, scope: !9560)
!9620 = distinct !DISubprogram(name: "z_device_state_init", scope: !9621, file: !9621, line: 23, type: !2930, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9622)
!9621 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9622 = !{!9623}
!9623 = !DILocalVariable(name: "dev", scope: !9620, file: !9621, line: 25, type: !9624)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 32)
!9625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9626)
!9626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !741, line: 378, size: 192, elements: !9627)
!9627 = !{!9628, !9629, !9630, !9631, !9637, !9638}
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9626, file: !741, line: 380, baseType: !744, size: 32)
!9629 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9626, file: !741, line: 382, baseType: !13, size: 32, offset: 32)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9626, file: !741, line: 384, baseType: !13, size: 32, offset: 64)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9626, file: !741, line: 386, baseType: !9632, size: 32, offset: 96)
!9632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9633, size: 32)
!9633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !741, line: 351, size: 16, elements: !9634)
!9634 = !{!9635, !9636}
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !9633, file: !741, line: 359, baseType: !167, size: 8)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !9633, file: !741, line: 364, baseType: !754, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9626, file: !741, line: 388, baseType: !108, size: 32, offset: 128)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !9626, file: !741, line: 396, baseType: !757, size: 32, offset: 160)
!9639 = !DILocation(line: 0, scope: !9620)
!9640 = !DILocation(line: 31, column: 1, scope: !9620)
!9641 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !9621, file: !9621, line: 33, type: !9642, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9644)
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!9624, !744}
!9644 = !{!9645, !9646}
!9645 = !DILocalVariable(name: "name", arg: 1, scope: !9641, file: !9621, line: 33, type: !744)
!9646 = !DILocalVariable(name: "dev", scope: !9641, file: !9621, line: 35, type: !9624)
!9647 = !DILocation(line: 0, scope: !9641)
!9648 = !DILocation(line: 40, column: 12, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9641, file: !9621, line: 40, column: 6)
!9650 = !DILocation(line: 40, column: 21, scope: !9649)
!9651 = !DILocation(line: 40, column: 25, scope: !9649)
!9652 = !DILocation(line: 40, column: 33, scope: !9649)
!9653 = !DILocation(line: 40, column: 6, scope: !9641)
!9654 = !DILocation(line: 55, column: 2, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9641, file: !9621, line: 55, column: 2)
!9656 = !DILocation(line: 50, column: 7, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !9621, line: 50, column: 7)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !9621, line: 49, column: 57)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !9621, line: 49, column: 2)
!9660 = distinct !DILexicalBlock(scope: !9641, file: !9621, line: 49, column: 2)
!9661 = !DILocation(line: 50, column: 30, scope: !9657)
!9662 = !DILocation(line: 50, column: 39, scope: !9657)
!9663 = !DILocation(line: 50, column: 44, scope: !9657)
!9664 = !DILocation(line: 50, column: 7, scope: !9658)
!9665 = !DILocation(line: 49, column: 53, scope: !9659)
!9666 = !DILocation(line: 49, column: 33, scope: !9659)
!9667 = !DILocation(line: 49, column: 2, scope: !9660)
!9668 = distinct !{!9668, !9667, !9669}
!9669 = !DILocation(line: 53, column: 2, scope: !9660)
!9670 = !DILocation(line: 56, column: 7, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !9621, line: 56, column: 7)
!9672 = distinct !DILexicalBlock(scope: !9673, file: !9621, line: 55, column: 57)
!9673 = distinct !DILexicalBlock(scope: !9655, file: !9621, line: 55, column: 2)
!9674 = !DILocation(line: 56, column: 30, scope: !9671)
!9675 = !DILocation(line: 56, column: 52, scope: !9671)
!9676 = !DILocation(line: 56, column: 34, scope: !9671)
!9677 = !DILocation(line: 56, column: 58, scope: !9671)
!9678 = !DILocation(line: 56, column: 7, scope: !9672)
!9679 = !DILocation(line: 55, column: 53, scope: !9673)
!9680 = !DILocation(line: 55, column: 33, scope: !9673)
!9681 = distinct !{!9681, !9654, !9682}
!9682 = !DILocation(line: 59, column: 2, scope: !9655)
!9683 = !DILocation(line: 62, column: 1, scope: !9641)
!9684 = distinct !DISubprogram(name: "z_device_is_ready", scope: !9621, file: !9621, line: 93, type: !9685, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!754, !9624}
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "dev", arg: 1, scope: !9684, file: !9621, line: 93, type: !9624)
!9689 = !DILocation(line: 0, scope: !9684)
!9690 = !DILocation(line: 99, column: 10, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9684, file: !9621, line: 99, column: 6)
!9692 = !DILocation(line: 99, column: 6, scope: !9684)
!9693 = !DILocation(line: 103, column: 14, scope: !9684)
!9694 = !DILocation(line: 103, column: 21, scope: !9684)
!9695 = !DILocation(line: 103, column: 33, scope: !9684)
!9696 = !DILocation(line: 103, column: 49, scope: !9684)
!9697 = !DILocation(line: 103, column: 58, scope: !9684)
!9698 = !DILocation(line: 104, column: 1, scope: !9684)
!9699 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !9621, file: !9621, line: 87, type: !9700, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9703)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!243, !9702}
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9624, size: 32)
!9703 = !{!9704}
!9704 = !DILocalVariable(name: "devices", arg: 1, scope: !9699, file: !9621, line: 87, type: !9702)
!9705 = !DILocation(line: 0, scope: !9699)
!9706 = !DILocation(line: 89, column: 11, scope: !9699)
!9707 = !DILocation(line: 90, column: 2, scope: !9699)
!9708 = distinct !DISubprogram(name: "device_required_foreach", scope: !9621, file: !9621, line: 125, type: !9709, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9715)
!9709 = !DISubroutineType(types: !9710)
!9710 = !{!109, !9624, !9711, !108}
!9711 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !741, line: 471, baseType: !9712)
!9712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9713, size: 32)
!9713 = !DISubroutineType(types: !9714)
!9714 = !{!109, !9624, !108}
!9715 = !{!9716, !9717, !9718, !9719, !9720}
!9716 = !DILocalVariable(name: "dev", arg: 1, scope: !9708, file: !9621, line: 125, type: !9624)
!9717 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !9708, file: !9621, line: 126, type: !9711)
!9718 = !DILocalVariable(name: "context", arg: 3, scope: !9708, file: !9621, line: 127, type: !108)
!9719 = !DILocalVariable(name: "handle_count", scope: !9708, file: !9621, line: 129, type: !243)
!9720 = !DILocalVariable(name: "handles", scope: !9708, file: !9621, line: 130, type: !757)
!9721 = !DILocation(line: 0, scope: !9708)
!9722 = !DILocation(line: 129, column: 2, scope: !9708)
!9723 = !DILocation(line: 129, column: 9, scope: !9708)
!9724 = !DILocation(line: 130, column: 35, scope: !9708)
!9725 = !DILocation(line: 132, column: 33, scope: !9708)
!9726 = !DILocation(line: 132, column: 9, scope: !9708)
!9727 = !DILocation(line: 133, column: 1, scope: !9708)
!9728 = !DILocation(line: 132, column: 2, scope: !9708)
!9729 = distinct !DISubprogram(name: "device_required_handles_get", scope: !741, file: !741, line: 493, type: !9730, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!757, !9624, !2341}
!9732 = !{!9733, !9734, !9735, !9736}
!9733 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !741, line: 493, type: !9624)
!9734 = !DILocalVariable(name: "count", arg: 2, scope: !9729, file: !741, line: 493, type: !2341)
!9735 = !DILocalVariable(name: "rv", scope: !9729, file: !741, line: 495, type: !757)
!9736 = !DILocalVariable(name: "i", scope: !9737, file: !741, line: 498, type: !243)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !741, line: 497, column: 18)
!9738 = distinct !DILexicalBlock(scope: !9729, file: !741, line: 497, column: 6)
!9739 = !DILocation(line: 0, scope: !9729)
!9740 = !DILocation(line: 495, column: 35, scope: !9729)
!9741 = !DILocation(line: 497, column: 9, scope: !9738)
!9742 = !DILocation(line: 497, column: 6, scope: !9729)
!9743 = !DILocation(line: 0, scope: !9737)
!9744 = !DILocation(line: 500, column: 11, scope: !9737)
!9745 = !DILocation(line: 500, column: 40, scope: !9737)
!9746 = !DILocation(line: 502, column: 4, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9737, file: !741, line: 501, column: 40)
!9748 = distinct !{!9748, !9749, !9750}
!9749 = !DILocation(line: 500, column: 3, scope: !9737)
!9750 = !DILocation(line: 503, column: 3, scope: !9737)
!9751 = !DILocation(line: 504, column: 10, scope: !9737)
!9752 = !DILocation(line: 505, column: 2, scope: !9737)
!9753 = !DILocation(line: 507, column: 2, scope: !9729)
!9754 = distinct !DISubprogram(name: "device_visitor", scope: !9621, file: !9621, line: 106, type: !9755, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9757)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!109, !757, !243, !9711, !108}
!9757 = !{!9758, !9759, !9760, !9761, !9762, !9764, !9767, !9768}
!9758 = !DILocalVariable(name: "handles", arg: 1, scope: !9754, file: !9621, line: 106, type: !757)
!9759 = !DILocalVariable(name: "handle_count", arg: 2, scope: !9754, file: !9621, line: 107, type: !243)
!9760 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !9754, file: !9621, line: 108, type: !9711)
!9761 = !DILocalVariable(name: "context", arg: 4, scope: !9754, file: !9621, line: 109, type: !108)
!9762 = !DILocalVariable(name: "i", scope: !9763, file: !9621, line: 112, type: !243)
!9763 = distinct !DILexicalBlock(scope: !9754, file: !9621, line: 112, column: 2)
!9764 = !DILocalVariable(name: "dh", scope: !9765, file: !9621, line: 113, type: !759)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !9621, line: 112, column: 44)
!9766 = distinct !DILexicalBlock(scope: !9763, file: !9621, line: 112, column: 2)
!9767 = !DILocalVariable(name: "rdev", scope: !9765, file: !9621, line: 114, type: !9624)
!9768 = !DILocalVariable(name: "rc", scope: !9765, file: !9621, line: 115, type: !109)
!9769 = !DILocation(line: 0, scope: !9754)
!9770 = !DILocation(line: 0, scope: !9763)
!9771 = !DILocation(line: 112, column: 23, scope: !9766)
!9772 = !DILocation(line: 112, column: 2, scope: !9763)
!9773 = distinct !{!9773, !9772, !9774}
!9774 = !DILocation(line: 120, column: 2, scope: !9763)
!9775 = !DILocation(line: 113, column: 24, scope: !9765)
!9776 = !DILocation(line: 0, scope: !9765)
!9777 = !DILocation(line: 114, column: 31, scope: !9765)
!9778 = !DILocation(line: 115, column: 12, scope: !9765)
!9779 = !DILocation(line: 117, column: 10, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9765, file: !9621, line: 117, column: 7)
!9781 = !DILocation(line: 112, column: 39, scope: !9766)
!9782 = !DILocation(line: 123, column: 1, scope: !9754)
!9783 = distinct !DISubprogram(name: "device_from_handle", scope: !741, file: !741, line: 439, type: !9784, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!9624, !759}
!9786 = !{!9787, !9788, !9789}
!9787 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !9783, file: !741, line: 439, type: !759)
!9788 = !DILocalVariable(name: "dev", scope: !9783, file: !741, line: 443, type: !9624)
!9789 = !DILocalVariable(name: "numdev", scope: !9783, file: !741, line: 444, type: !243)
!9790 = !DILocation(line: 0, scope: !9783)
!9791 = !DILocation(line: 446, column: 7, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9783, file: !741, line: 446, column: 6)
!9793 = !DILocation(line: 446, column: 18, scope: !9792)
!9794 = !DILocation(line: 446, column: 23, scope: !9792)
!9795 = !DILocation(line: 450, column: 2, scope: !9783)
!9796 = distinct !DISubprogram(name: "device_supported_foreach", scope: !9621, file: !9621, line: 135, type: !9709, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9797)
!9797 = !{!9798, !9799, !9800, !9801, !9802}
!9798 = !DILocalVariable(name: "dev", arg: 1, scope: !9796, file: !9621, line: 135, type: !9624)
!9799 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !9796, file: !9621, line: 136, type: !9711)
!9800 = !DILocalVariable(name: "context", arg: 3, scope: !9796, file: !9621, line: 137, type: !108)
!9801 = !DILocalVariable(name: "handle_count", scope: !9796, file: !9621, line: 139, type: !243)
!9802 = !DILocalVariable(name: "handles", scope: !9796, file: !9621, line: 140, type: !757)
!9803 = !DILocation(line: 0, scope: !9796)
!9804 = !DILocation(line: 139, column: 2, scope: !9796)
!9805 = !DILocation(line: 139, column: 9, scope: !9796)
!9806 = !DILocation(line: 140, column: 35, scope: !9796)
!9807 = !DILocation(line: 142, column: 33, scope: !9796)
!9808 = !DILocation(line: 142, column: 9, scope: !9796)
!9809 = !DILocation(line: 143, column: 1, scope: !9796)
!9810 = !DILocation(line: 142, column: 2, scope: !9796)
!9811 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !741, file: !741, line: 573, type: !9730, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !9812)
!9812 = !{!9813, !9814, !9815, !9816, !9817}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !741, line: 573, type: !9624)
!9814 = !DILocalVariable(name: "count", arg: 2, scope: !9811, file: !741, line: 573, type: !2341)
!9815 = !DILocalVariable(name: "rv", scope: !9811, file: !741, line: 575, type: !757)
!9816 = !DILocalVariable(name: "region", scope: !9811, file: !741, line: 576, type: !243)
!9817 = !DILocalVariable(name: "i", scope: !9811, file: !741, line: 577, type: !243)
!9818 = !DILocation(line: 0, scope: !9811)
!9819 = !DILocation(line: 575, column: 35, scope: !9811)
!9820 = !DILocation(line: 579, column: 9, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9811, file: !741, line: 579, column: 6)
!9822 = !DILocation(line: 579, column: 6, scope: !9811)
!9823 = !DILocation(line: 582, column: 8, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !741, line: 582, column: 8)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !741, line: 581, column: 23)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !741, line: 579, column: 18)
!9827 = !DILocation(line: 582, column: 12, scope: !9824)
!9828 = !DILocation(line: 585, column: 6, scope: !9825)
!9829 = !DILocation(line: 0, scope: !9826)
!9830 = !DILocation(line: 581, column: 17, scope: !9826)
!9831 = !DILocation(line: 581, column: 3, scope: !9826)
!9832 = !DILocation(line: 588, column: 10, scope: !9826)
!9833 = !DILocation(line: 588, column: 16, scope: !9826)
!9834 = !DILocation(line: 589, column: 4, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9826, file: !741, line: 588, column: 39)
!9836 = !DILocation(line: 588, column: 3, scope: !9826)
!9837 = distinct !{!9837, !9836, !9838}
!9838 = !DILocation(line: 590, column: 3, scope: !9826)
!9839 = !DILocation(line: 591, column: 10, scope: !9826)
!9840 = !DILocation(line: 592, column: 2, scope: !9826)
!9841 = !DILocation(line: 575, column: 25, scope: !9811)
!9842 = !DILocation(line: 594, column: 2, scope: !9811)
!9843 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1607, file: !1607, line: 49, type: !9844, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1604, retainedNodes: !1817)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{!2335}
!9846 = !DILocation(line: 51, column: 10, scope: !9843)
!9847 = !DILocation(line: 51, column: 20, scope: !9843)
!9848 = !DILocation(line: 51, column: 2, scope: !9843)
!9849 = distinct !DISubprogram(name: "coredump", scope: !2897, file: !2897, line: 209, type: !9850, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10001)
!9850 = !DISubroutineType(types: !9851)
!9851 = !{null, !32, !9852, !9896}
!9852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9853, size: 32)
!9853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9854)
!9854 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2469, line: 141, baseType: !9855)
!9855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2469, line: 97, size: 256, elements: !9856)
!9856 = !{!9857}
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !9855, file: !2469, line: 107, baseType: !9858, size: 256)
!9858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2469, line: 98, size: 256, elements: !9859)
!9859 = !{!9860, !9865, !9870, !9875, !9880, !9885, !9890, !9895}
!9860 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 99, baseType: !9861, size: 32)
!9861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 99, size: 32, elements: !9862)
!9862 = !{!9863, !9864}
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !9861, file: !2469, line: 99, baseType: !110, size: 32)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !9861, file: !2469, line: 99, baseType: !110, size: 32)
!9865 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 100, baseType: !9866, size: 32, offset: 32)
!9866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 100, size: 32, elements: !9867)
!9867 = !{!9868, !9869}
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !9866, file: !2469, line: 100, baseType: !110, size: 32)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !9866, file: !2469, line: 100, baseType: !110, size: 32)
!9870 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 101, baseType: !9871, size: 32, offset: 64)
!9871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 101, size: 32, elements: !9872)
!9872 = !{!9873, !9874}
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !9871, file: !2469, line: 101, baseType: !110, size: 32)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !9871, file: !2469, line: 101, baseType: !110, size: 32)
!9875 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 102, baseType: !9876, size: 32, offset: 96)
!9876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 102, size: 32, elements: !9877)
!9877 = !{!9878, !9879}
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !9876, file: !2469, line: 102, baseType: !110, size: 32)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !9876, file: !2469, line: 102, baseType: !110, size: 32)
!9880 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 103, baseType: !9881, size: 32, offset: 128)
!9881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 103, size: 32, elements: !9882)
!9882 = !{!9883, !9884}
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !9881, file: !2469, line: 103, baseType: !110, size: 32)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !9881, file: !2469, line: 103, baseType: !110, size: 32)
!9885 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 104, baseType: !9886, size: 32, offset: 160)
!9886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 104, size: 32, elements: !9887)
!9887 = !{!9888, !9889}
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !9886, file: !2469, line: 104, baseType: !110, size: 32)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !9886, file: !2469, line: 104, baseType: !110, size: 32)
!9890 = !DIDerivedType(tag: DW_TAG_member, scope: !9858, file: !2469, line: 105, baseType: !9891, size: 32, offset: 192)
!9891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9858, file: !2469, line: 105, size: 32, elements: !9892)
!9892 = !{!9893, !9894}
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !9891, file: !2469, line: 105, baseType: !110, size: 32)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !9891, file: !2469, line: 105, baseType: !110, size: 32)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !9858, file: !2469, line: 106, baseType: !110, size: 32, offset: 224)
!9896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9897, size: 32)
!9897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1344, elements: !9898)
!9898 = !{!9899, !9957, !9969, !9970, !9971, !9978, !9979, !9980, !9981, !9996}
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9897, file: !145, line: 247, baseType: !9900, size: 384)
!9900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !9901)
!9901 = !{!9902, !9926, !9933, !9934, !9935, !9944, !9945, !9946}
!9902 = !DIDerivedType(tag: DW_TAG_member, scope: !9900, file: !145, line: 60, baseType: !9903, size: 64)
!9903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9900, file: !145, line: 60, size: 64, elements: !9904)
!9904 = !{!9905, !9920}
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9903, file: !145, line: 61, baseType: !9906, size: 64)
!9906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !9907)
!9907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !9908)
!9908 = !{!9909, !9915}
!9909 = !DIDerivedType(tag: DW_TAG_member, scope: !9907, file: !128, line: 38, baseType: !9910, size: 32)
!9910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9907, file: !128, line: 38, size: 32, elements: !9911)
!9911 = !{!9912, !9914}
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9910, file: !128, line: 39, baseType: !9913, size: 32)
!9913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9907, size: 32)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9910, file: !128, line: 40, baseType: !9913, size: 32)
!9915 = !DIDerivedType(tag: DW_TAG_member, scope: !9907, file: !128, line: 42, baseType: !9916, size: 32, offset: 32)
!9916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9907, file: !128, line: 42, size: 32, elements: !9917)
!9917 = !{!9918, !9919}
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9916, file: !128, line: 43, baseType: !9913, size: 32)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9916, file: !128, line: 44, baseType: !9913, size: 32)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9903, file: !145, line: 62, baseType: !9921, size: 64)
!9921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !9922)
!9922 = !{!9923}
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9921, file: !157, line: 50, baseType: !9924, size: 64)
!9924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9925, size: 64, elements: !162)
!9925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9921, size: 32)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9900, file: !145, line: 68, baseType: !9927, size: 32, offset: 64)
!9927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9928, size: 32)
!9928 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !9929)
!9929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !9930)
!9930 = !{!9931}
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9929, file: !123, line: 232, baseType: !9932, size: 64)
!9932 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !9907)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9900, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9900, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!9935 = !DIDerivedType(tag: DW_TAG_member, scope: !9900, file: !145, line: 90, baseType: !9936, size: 16, offset: 112)
!9936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9900, file: !145, line: 90, size: 16, elements: !9937)
!9937 = !{!9938, !9943}
!9938 = !DIDerivedType(tag: DW_TAG_member, scope: !9936, file: !145, line: 91, baseType: !9939, size: 16)
!9939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9936, file: !145, line: 91, size: 16, elements: !9940)
!9940 = !{!9941, !9942}
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9939, file: !145, line: 96, baseType: !177, size: 8)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9939, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9936, file: !145, line: 100, baseType: !181, size: 16)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9900, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9900, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9900, file: !145, line: 131, baseType: !9947, size: 192, offset: 192)
!9947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !9948)
!9948 = !{!9949, !9950, !9956}
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9947, file: !123, line: 245, baseType: !9906, size: 64)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9947, file: !123, line: 246, baseType: !9951, size: 32, offset: 64)
!9951 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !9952)
!9952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9953, size: 32)
!9953 = !DISubroutineType(types: !9954)
!9954 = !{null, !9955}
!9955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9947, size: 32)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9947, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9897, file: !145, line: 250, baseType: !9958, size: 288, offset: 384)
!9958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !9959)
!9959 = !{!9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968}
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9958, file: !198, line: 26, baseType: !110, size: 32)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9958, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9958, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9958, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9958, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9958, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9958, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9958, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9958, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9897, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9897, file: !145, line: 256, baseType: !9928, size: 64, offset: 704)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9897, file: !145, line: 271, baseType: !9972, size: 128, offset: 768)
!9972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !9973)
!9973 = !{!9974, !9975, !9976, !9977}
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !9972, file: !145, line: 35, baseType: !215, size: 32)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !9972, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !9972, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !9972, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !9897, file: !145, line: 274, baseType: !9896, size: 32, offset: 896)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9897, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9897, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9897, file: !145, line: 325, baseType: !9982, size: 32, offset: 1216)
!9982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9983, size: 32)
!9983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !9984)
!9984 = !{!9985, !9991, !9992}
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9983, file: !119, line: 5074, baseType: !9986, size: 96)
!9986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !236, line: 56, size: 96, elements: !9987)
!9987 = !{!9988, !9989, !9990}
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9986, file: !236, line: 57, baseType: !239, size: 32)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9986, file: !236, line: 58, baseType: !108, size: 32, offset: 32)
!9990 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9986, file: !236, line: 59, baseType: !243, size: 32, offset: 64)
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9983, file: !119, line: 5075, baseType: !9928, size: 64, offset: 96)
!9992 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9983, file: !119, line: 5076, baseType: !9993, size: 32, offset: 160)
!9993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !248, line: 43, size: 32, elements: !9994)
!9994 = !{!9995}
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9993, file: !248, line: 52, baseType: !22, size: 32)
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9897, file: !145, line: 343, baseType: !9997, size: 64, offset: 1248)
!9997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !9998)
!9998 = !{!9999, !10000}
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9997, file: !198, line: 63, baseType: !110, size: 32)
!10000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9997, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!10001 = !{!10002, !10003, !10004}
!10002 = !DILocalVariable(name: "reason", arg: 1, scope: !9849, file: !2897, line: 209, type: !32)
!10003 = !DILocalVariable(name: "esf", arg: 2, scope: !9849, file: !2897, line: 209, type: !9852)
!10004 = !DILocalVariable(name: "thread", arg: 3, scope: !9849, file: !2897, line: 210, type: !9896)
!10005 = !DILocation(line: 0, scope: !9849)
!10006 = !DILocation(line: 212, column: 1, scope: !9849)
!10007 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2897, file: !2897, line: 214, type: !10008, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10010)
!10008 = !DISubroutineType(types: !10009)
!10009 = !{null, !22, !22}
!10010 = !{!10011, !10012}
!10011 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10007, file: !2897, line: 214, type: !22)
!10012 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10007, file: !2897, line: 214, type: !22)
!10013 = !DILocation(line: 0, scope: !10007)
!10014 = !DILocation(line: 216, column: 1, scope: !10007)
!10015 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2897, file: !2897, line: 218, type: !10016, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10018)
!10016 = !DISubroutineType(types: !10017)
!10017 = !{null, !799, !243}
!10018 = !{!10019, !10020}
!10019 = !DILocalVariable(name: "buf", arg: 1, scope: !10015, file: !2897, line: 218, type: !799)
!10020 = !DILocalVariable(name: "buflen", arg: 2, scope: !10015, file: !2897, line: 218, type: !243)
!10021 = !DILocation(line: 0, scope: !10015)
!10022 = !DILocation(line: 220, column: 1, scope: !10015)
!10023 = distinct !DISubprogram(name: "coredump_query", scope: !2897, file: !2897, line: 222, type: !10024, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10026)
!10024 = !DISubroutineType(types: !10025)
!10025 = !{!109, !2896, !108}
!10026 = !{!10027, !10028}
!10027 = !DILocalVariable(name: "query_id", arg: 1, scope: !10023, file: !2897, line: 222, type: !2896)
!10028 = !DILocalVariable(name: "arg", arg: 2, scope: !10023, file: !2897, line: 222, type: !108)
!10029 = !DILocation(line: 0, scope: !10023)
!10030 = !DILocation(line: 224, column: 2, scope: !10023)
!10031 = distinct !DISubprogram(name: "coredump_cmd", scope: !2897, file: !2897, line: 227, type: !10032, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10034)
!10032 = !DISubroutineType(types: !10033)
!10033 = !{!109, !2903, !108}
!10034 = !{!10035, !10036}
!10035 = !DILocalVariable(name: "query_id", arg: 1, scope: !10031, file: !2897, line: 227, type: !2903)
!10036 = !DILocalVariable(name: "arg", arg: 2, scope: !10031, file: !2897, line: 227, type: !108)
!10037 = !DILocation(line: 0, scope: !10031)
!10038 = !DILocation(line: 229, column: 2, scope: !10031)
!10039 = distinct !DISubprogram(name: "arch_system_halt", scope: !10040, file: !10040, line: 23, type: !5882, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10041)
!10040 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10041 = !{!10042}
!10042 = !DILocalVariable(name: "reason", arg: 1, scope: !10039, file: !10040, line: 23, type: !32)
!10043 = !DILocation(line: 0, scope: !10039)
!10044 = !DILocation(line: 55, column: 2, scope: !10045, inlinedAt: !10049)
!10045 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10046)
!10046 = !{!10047, !10048}
!10047 = !DILocalVariable(name: "key", scope: !10045, file: !6050, line: 44, type: !32)
!10048 = !DILocalVariable(name: "tmp", scope: !10045, file: !6050, line: 53, type: !32)
!10049 = distinct !DILocation(line: 31, column: 8, scope: !10039)
!10050 = !{i64 2845130}
!10051 = !DILocation(line: 0, scope: !10045, inlinedAt: !10049)
!10052 = !DILocation(line: 32, column: 2, scope: !10039)
!10053 = !DILocation(line: 32, column: 2, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !10040, line: 32, column: 2)
!10055 = distinct !DILexicalBlock(scope: !10039, file: !10040, line: 32, column: 2)
!10056 = distinct !{!10056, !10057, !10058}
!10057 = !DILocation(line: 32, column: 2, scope: !10055)
!10058 = !DILocation(line: 34, column: 2, scope: !10055)
!10059 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10040, file: !10040, line: 39, type: !10060, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{null, !32, !9852}
!10062 = !{!10063, !10064}
!10063 = !DILocalVariable(name: "reason", arg: 1, scope: !10059, file: !10040, line: 39, type: !32)
!10064 = !DILocalVariable(name: "esf", arg: 2, scope: !10059, file: !10040, line: 40, type: !9852)
!10065 = !DILocation(line: 0, scope: !10059)
!10066 = !DILocation(line: 46, column: 2, scope: !10059)
!10067 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10040, file: !10040, line: 81, type: !5882, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10068)
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "reason", arg: 1, scope: !10067, file: !10040, line: 81, type: !32)
!10070 = !DILocation(line: 0, scope: !10067)
!10071 = !DILocation(line: 83, column: 2, scope: !10067)
!10072 = distinct !DISubprogram(name: "z_fatal_error", scope: !10040, file: !10040, line: 96, type: !10060, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10073)
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "reason", arg: 1, scope: !10072, file: !10040, line: 96, type: !32)
!10075 = !DILocalVariable(name: "esf", arg: 2, scope: !10072, file: !10040, line: 96, type: !9852)
!10076 = !DILocalVariable(name: "key", scope: !10072, file: !10040, line: 102, type: !32)
!10077 = !DILocalVariable(name: "thread", scope: !10072, file: !10040, line: 103, type: !9896)
!10078 = !DILocation(line: 0, scope: !10072)
!10079 = !DILocation(line: 55, column: 2, scope: !10045, inlinedAt: !10080)
!10080 = distinct !DILocation(line: 102, column: 21, scope: !10072)
!10081 = !DILocation(line: 0, scope: !10045, inlinedAt: !10080)
!10082 = !DILocation(line: 131, column: 2, scope: !10072)
!10083 = !DILocation(line: 147, column: 3, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !10040, line: 147, column: 3)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !10040, line: 147, column: 3)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !10040, line: 146, column: 32)
!10087 = distinct !DILexicalBlock(scope: !10072, file: !10040, line: 146, column: 6)
!10088 = !DILocation(line: 147, column: 3, scope: !10085)
!10089 = !DILocation(line: 147, column: 3, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10084, file: !10040, line: 147, column: 3)
!10091 = !DILocation(line: 104, column: 4, scope: !10072)
!10092 = !DILocalVariable(name: "key", arg: 1, scope: !10093, file: !6050, line: 84, type: !32)
!10093 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10094)
!10094 = !{!10092}
!10095 = !DILocation(line: 0, scope: !10093, inlinedAt: !10096)
!10096 = distinct !DILocation(line: 186, column: 2, scope: !10072)
!10097 = !DILocation(line: 95, column: 2, scope: !10093, inlinedAt: !10096)
!10098 = !{i64 2845947}
!10099 = !DILocation(line: 189, column: 3, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !10040, line: 188, column: 41)
!10101 = distinct !DILexicalBlock(scope: !10072, file: !10040, line: 188, column: 6)
!10102 = !DILocation(line: 191, column: 1, scope: !10072)
!10103 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !10104, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !1817)
!10104 = !DISubroutineType(types: !10105)
!10105 = !{!10106}
!10106 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !9896)
!10107 = !DILocation(line: 535, column: 9, scope: !10103)
!10108 = !DILocation(line: 535, column: 2, scope: !10103)
!10109 = distinct !DISubprogram(name: "k_thread_abort", scope: !3105, file: !3105, line: 188, type: !10110, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{null, !10106}
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "thread", arg: 1, scope: !10109, file: !3105, line: 188, type: !10106)
!10114 = !DILocation(line: 0, scope: !10109)
!10115 = !DILocation(line: 197, column: 2, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10109, file: !3105, line: 197, column: 2)
!10117 = !{i64 2151044273}
!10118 = !DILocation(line: 198, column: 2, scope: !10109)
!10119 = !DILocation(line: 199, column: 1, scope: !10109)
!10120 = distinct !DISubprogram(name: "z_current_get", scope: !3105, file: !3105, line: 173, type: !10104, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !1817)
!10121 = !DILocation(line: 180, column: 2, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10120, file: !3105, line: 180, column: 2)
!10123 = !{i64 2151044205}
!10124 = !DILocation(line: 181, column: 9, scope: !10120)
!10125 = !DILocation(line: 181, column: 2, scope: !10120)
!10126 = distinct !DISubprogram(name: "z_early_memset", scope: !1614, file: !1614, line: 108, type: !10127, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !108, !109, !243}
!10129 = !{!10130, !10131, !10132}
!10130 = !DILocalVariable(name: "dst", arg: 1, scope: !10126, file: !1614, line: 108, type: !108)
!10131 = !DILocalVariable(name: "c", arg: 2, scope: !10126, file: !1614, line: 108, type: !109)
!10132 = !DILocalVariable(name: "n", arg: 3, scope: !10126, file: !1614, line: 108, type: !243)
!10133 = !DILocation(line: 0, scope: !10126)
!10134 = !DILocation(line: 110, column: 9, scope: !10126)
!10135 = !DILocation(line: 111, column: 1, scope: !10126)
!10136 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1614, file: !1614, line: 121, type: !10137, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{null, !108, !13, !243}
!10139 = !{!10140, !10141, !10142}
!10140 = !DILocalVariable(name: "dst", arg: 1, scope: !10136, file: !1614, line: 121, type: !108)
!10141 = !DILocalVariable(name: "src", arg: 2, scope: !10136, file: !1614, line: 121, type: !13)
!10142 = !DILocalVariable(name: "n", arg: 3, scope: !10136, file: !1614, line: 121, type: !243)
!10143 = !DILocation(line: 0, scope: !10136)
!10144 = !DILocation(line: 123, column: 9, scope: !10136)
!10145 = !DILocation(line: 124, column: 1, scope: !10136)
!10146 = distinct !DISubprogram(name: "z_bss_zero", scope: !1614, file: !1614, line: 132, type: !2930, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !1817)
!10147 = !DILocation(line: 143, column: 2, scope: !10146)
!10148 = !DILocation(line: 168, column: 1, scope: !10146)
!10149 = distinct !DISubprogram(name: "z_init_cpu", scope: !1614, file: !1614, line: 372, type: !3248, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10150)
!10150 = !{!10151}
!10151 = !DILocalVariable(name: "id", arg: 1, scope: !10149, file: !1614, line: 372, type: !109)
!10152 = !DILocation(line: 0, scope: !10149)
!10153 = !DILocation(line: 374, column: 2, scope: !10149)
!10154 = !DILocation(line: 375, column: 34, scope: !10149)
!10155 = !DILocation(line: 375, column: 19, scope: !10149)
!10156 = !DILocation(line: 375, column: 31, scope: !10149)
!10157 = !DILocation(line: 376, column: 24, scope: !10149)
!10158 = !DILocation(line: 376, column: 19, scope: !10149)
!10159 = !DILocation(line: 376, column: 22, scope: !10149)
!10160 = !DILocation(line: 378, column: 26, scope: !10149)
!10161 = !DILocation(line: 378, column: 4, scope: !10149)
!10162 = !DILocation(line: 378, column: 50, scope: !10149)
!10163 = !DILocation(line: 377, column: 19, scope: !10149)
!10164 = !DILocation(line: 377, column: 29, scope: !10149)
!10165 = !DILocation(line: 384, column: 1, scope: !10149)
!10166 = distinct !DISubprogram(name: "init_idle_thread", scope: !1614, file: !1614, line: 343, type: !3248, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10167)
!10167 = !{!10168, !10169, !10170, !10173}
!10168 = !DILocalVariable(name: "i", arg: 1, scope: !10166, file: !1614, line: 343, type: !109)
!10169 = !DILocalVariable(name: "thread", scope: !10166, file: !1614, line: 345, type: !1706)
!10170 = !DILocalVariable(name: "stack", scope: !10166, file: !1614, line: 346, type: !10171)
!10171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10172, size: 32)
!10172 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !1841)
!10173 = !DILocalVariable(name: "tname", scope: !10166, file: !1614, line: 354, type: !936)
!10174 = !DILocation(line: 0, scope: !10166)
!10175 = !DILocation(line: 345, column: 29, scope: !10166)
!10176 = !DILocation(line: 346, column: 28, scope: !10166)
!10177 = !DILocation(line: 362, column: 37, scope: !10166)
!10178 = !DILocation(line: 362, column: 36, scope: !10166)
!10179 = !DILocation(line: 361, column: 2, scope: !10166)
!10180 = !DILocation(line: 365, column: 2, scope: !10166)
!10181 = !DILocation(line: 370, column: 1, scope: !10166)
!10182 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !267, file: !267, line: 331, type: !10183, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10185)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!936, !10171}
!10185 = !{!10186}
!10186 = !DILocalVariable(name: "sym", arg: 1, scope: !10182, file: !267, line: 331, type: !10171)
!10187 = !DILocation(line: 0, scope: !10182)
!10188 = !DILocation(line: 333, column: 9, scope: !10182)
!10189 = !DILocation(line: 333, column: 2, scope: !10182)
!10190 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10191, file: !10191, line: 155, type: !10192, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10194)
!10191 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10192 = !DISubroutineType(types: !10193)
!10193 = !{null, !1706}
!10194 = !{!10195}
!10195 = !DILocalVariable(name: "thread", arg: 1, scope: !10190, file: !10191, line: 155, type: !1706)
!10196 = !DILocation(line: 0, scope: !10190)
!10197 = !DILocation(line: 157, column: 15, scope: !10190)
!10198 = !DILocation(line: 157, column: 28, scope: !10190)
!10199 = !DILocation(line: 158, column: 1, scope: !10190)
!10200 = distinct !DISubprogram(name: "z_cstart", scope: !1614, file: !1614, line: 501, type: !2930, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10201)
!10201 = !{!10202}
!10202 = !DILocalVariable(name: "dummy_thread", scope: !10200, file: !1614, line: 518, type: !1707)
!10203 = !DILocation(line: 507, column: 2, scope: !10200)
!10204 = !DILocation(line: 43, column: 14, scope: !10205, inlinedAt: !10209)
!10205 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10206, file: !10206, line: 40, type: !2930, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10207)
!10206 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10207 = !{!10208}
!10208 = !DILocalVariable(name: "msp", scope: !10205, file: !10206, line: 42, type: !110)
!10209 = distinct !DILocation(line: 44, column: 2, scope: !10210, inlinedAt: !10212)
!10210 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10211, file: !10211, line: 42, type: !2930, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !1817)
!10211 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10212 = distinct !DILocation(line: 510, column: 2, scope: !10200)
!10213 = !DILocation(line: 43, column: 3, scope: !10205, inlinedAt: !10209)
!10214 = !DILocation(line: 43, column: 60, scope: !10205, inlinedAt: !10209)
!10215 = !DILocation(line: 0, scope: !10205, inlinedAt: !10209)
!10216 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10217, file: !5931, line: 1153, type: !110)
!10217 = distinct !DISubprogram(name: "__set_MSP", scope: !5931, file: !5931, line: 1153, type: !6026, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10218)
!10218 = !{!10216}
!10219 = !DILocation(line: 0, scope: !10217, inlinedAt: !10220)
!10220 = distinct !DILocation(line: 46, column: 2, scope: !10205, inlinedAt: !10209)
!10221 = !DILocation(line: 1155, column: 3, scope: !10217, inlinedAt: !10220)
!10222 = !{i64 7507973}
!10223 = !DILocation(line: 62, column: 11, scope: !10205, inlinedAt: !10209)
!10224 = !DILocation(line: 102, column: 2, scope: !10225, inlinedAt: !10226)
!10225 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6714, file: !6714, line: 97, type: !2930, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !1817)
!10226 = distinct !DILocation(line: 45, column: 2, scope: !10210, inlinedAt: !10212)
!10227 = !DILocation(line: 108, column: 2, scope: !10225, inlinedAt: !10226)
!10228 = !DILocation(line: 112, column: 2, scope: !10225, inlinedAt: !10226)
!10229 = !DILocation(line: 113, column: 2, scope: !10225, inlinedAt: !10226)
!10230 = !DILocation(line: 114, column: 2, scope: !10225, inlinedAt: !10226)
!10231 = !DILocation(line: 116, column: 2, scope: !10225, inlinedAt: !10226)
!10232 = !DILocation(line: 123, column: 13, scope: !10225, inlinedAt: !10226)
!10233 = !DILocation(line: 46, column: 2, scope: !10210, inlinedAt: !10212)
!10234 = !DILocation(line: 47, column: 2, scope: !10210, inlinedAt: !10212)
!10235 = !DILocation(line: 174, column: 12, scope: !10236, inlinedAt: !10237)
!10236 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6714, file: !6714, line: 169, type: !2930, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !1817)
!10237 = distinct !DILocation(line: 48, column: 2, scope: !10210, inlinedAt: !10212)
!10238 = !DILocation(line: 179, column: 12, scope: !10236, inlinedAt: !10237)
!10239 = !DILocation(line: 518, column: 2, scope: !10200)
!10240 = !DILocation(line: 518, column: 18, scope: !10200)
!10241 = !DILocation(line: 520, column: 2, scope: !10200)
!10242 = !DILocation(line: 523, column: 2, scope: !10200)
!10243 = !DILocation(line: 526, column: 2, scope: !10200)
!10244 = !DILocation(line: 527, column: 2, scope: !10200)
!10245 = !DILocation(line: 543, column: 24, scope: !10200)
!10246 = !DILocation(line: 543, column: 2, scope: !10200)
!10247 = !DILocation(line: 0, scope: !1860)
!10248 = !DILocation(line: 246, column: 15, scope: !1878)
!10249 = !DILocation(line: 246, column: 36, scope: !1877)
!10250 = !DILocation(line: 246, column: 2, scope: !1878)
!10251 = !DILocation(line: 247, column: 37, scope: !1876)
!10252 = !DILocation(line: 0, scope: !1876)
!10253 = !DILocation(line: 248, column: 19, scope: !1876)
!10254 = !DILocation(line: 248, column: 12, scope: !1876)
!10255 = !DILocation(line: 250, column: 11, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !1876, file: !1614, line: 250, column: 7)
!10257 = !DILocation(line: 250, column: 7, scope: !1876)
!10258 = !DILocation(line: 254, column: 11, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10260, file: !1614, line: 254, column: 8)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !1614, line: 250, column: 20)
!10261 = !DILocation(line: 254, column: 8, scope: !10260)
!10262 = !DILocation(line: 255, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10259, file: !1614, line: 254, column: 17)
!10264 = !DILocation(line: 258, column: 9, scope: !10263)
!10265 = !DILocation(line: 261, column: 28, scope: !10263)
!10266 = !DILocation(line: 261, column: 10, scope: !10263)
!10267 = !DILocation(line: 261, column: 17, scope: !10263)
!10268 = !DILocation(line: 261, column: 26, scope: !10263)
!10269 = !DILocation(line: 262, column: 4, scope: !10263)
!10270 = !DILocation(line: 263, column: 9, scope: !10260)
!10271 = !DILocation(line: 263, column: 16, scope: !10260)
!10272 = !DILocation(line: 263, column: 28, scope: !10260)
!10273 = !DILocation(line: 264, column: 3, scope: !10260)
!10274 = !DILocation(line: 246, column: 60, scope: !1877)
!10275 = distinct !{!10275, !10250, !10276}
!10276 = !DILocation(line: 265, column: 2, scope: !1878)
!10277 = !DILocation(line: 266, column: 1, scope: !1860)
!10278 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1458, file: !1458, line: 1814, type: !5971, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10278, file: !1458, line: 1814, type: !2363)
!10281 = !DILocalVariable(name: "priority", arg: 2, scope: !10278, file: !1458, line: 1814, type: !110)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 1822, column: 48, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !1458, line: 1821, column: 3)
!10285 = distinct !DILexicalBlock(scope: !10278, file: !1458, line: 1816, column: 7)
!10286 = !DILocation(line: 1822, column: 32, scope: !10284)
!10287 = !DILocation(line: 1822, column: 40, scope: !10284)
!10288 = !DILocation(line: 1822, column: 5, scope: !10284)
!10289 = !DILocation(line: 1822, column: 46, scope: !10284)
!10290 = !DILocation(line: 1824, column: 1, scope: !10278)
!10291 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10211, file: !10211, line: 32, type: !2930, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1817)
!10292 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10293, file: !10293, line: 215, type: !10192, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10294)
!10293 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10292, file: !10293, line: 215, type: !1706)
!10296 = !DILocation(line: 0, scope: !10292)
!10297 = !DILocation(line: 217, column: 21, scope: !10292)
!10298 = !DILocation(line: 217, column: 34, scope: !10292)
!10299 = !DILocation(line: 221, column: 21, scope: !10292)
!10300 = !DILocation(line: 221, column: 34, scope: !10292)
!10301 = !DILocation(line: 232, column: 16, scope: !10292)
!10302 = !DILocation(line: 232, column: 30, scope: !10292)
!10303 = !DILocation(line: 239, column: 24, scope: !10292)
!10304 = !DILocation(line: 240, column: 1, scope: !10292)
!10305 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1614, file: !1614, line: 399, type: !10306, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!936}
!10308 = !{!10309}
!10309 = !DILocalVariable(name: "stack_ptr", scope: !10305, file: !1614, line: 401, type: !936)
!10310 = !DILocation(line: 404, column: 2, scope: !10305)
!10311 = !DILocation(line: 416, column: 24, scope: !10305)
!10312 = !DILocation(line: 418, column: 14, scope: !10305)
!10313 = !DILocation(line: 0, scope: !10305)
!10314 = !DILocation(line: 423, column: 2, scope: !10305)
!10315 = !DILocation(line: 424, column: 2, scope: !10305)
!10316 = !DILocation(line: 426, column: 2, scope: !10305)
!10317 = !DILocation(line: 428, column: 2, scope: !10305)
!10318 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1614, file: !1614, line: 432, type: !10319, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10321)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{null, !936}
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10318, file: !1614, line: 432, type: !936)
!10323 = !DILocation(line: 0, scope: !10318)
!10324 = !DILocation(line: 435, column: 2, scope: !10318)
!10325 = !DILocation(line: 445, column: 2, scope: !10318)
!10326 = distinct !DISubprogram(name: "bg_thread_main", scope: !1614, file: !1614, line: 277, type: !218, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1610, retainedNodes: !10327)
!10327 = !{!10328, !10329, !10330}
!10328 = !DILocalVariable(name: "unused1", arg: 1, scope: !10326, file: !1614, line: 277, type: !108)
!10329 = !DILocalVariable(name: "unused2", arg: 2, scope: !10326, file: !1614, line: 277, type: !108)
!10330 = !DILocalVariable(name: "unused3", arg: 3, scope: !10326, file: !1614, line: 277, type: !108)
!10331 = !DILocation(line: 0, scope: !10326)
!10332 = !DILocation(line: 291, column: 20, scope: !10326)
!10333 = !DILocation(line: 293, column: 2, scope: !10326)
!10334 = !DILocation(line: 297, column: 2, scope: !10326)
!10335 = !DILocation(line: 305, column: 2, scope: !10326)
!10336 = !DILocation(line: 307, column: 2, scope: !10326)
!10337 = !DILocation(line: 330, column: 8, scope: !10326)
!10338 = !DILocation(line: 333, column: 34, scope: !10326)
!10339 = !DILocation(line: 339, column: 1, scope: !10326)
!10340 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1907, file: !1907, line: 45, type: !10341, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10349)
!10341 = !DISubroutineType(types: !10342)
!10342 = !{null, !10343, !108}
!10343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !119, line: 103, baseType: !10344)
!10344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10345, size: 32)
!10345 = !DISubroutineType(types: !10346)
!10346 = !{null, !10347, !108}
!10347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10348, size: 32)
!10348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!10349 = !{!10350, !10351, !10352, !10353}
!10350 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10340, file: !1907, line: 45, type: !10343)
!10351 = !DILocalVariable(name: "user_data", arg: 2, scope: !10340, file: !1907, line: 45, type: !108)
!10352 = !DILocalVariable(name: "thread", scope: !10340, file: !1907, line: 48, type: !1911)
!10353 = !DILocalVariable(name: "key", scope: !10340, file: !1907, line: 49, type: !10354)
!10354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !248, line: 106, baseType: !10355)
!10355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !248, line: 32, size: 32, elements: !10356)
!10356 = !{!10357}
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10355, file: !248, line: 33, baseType: !109, size: 32)
!10358 = !DILocation(line: 0, scope: !10340)
!10359 = !DILocation(line: 51, column: 2, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1907, line: 51, column: 2)
!10361 = distinct !DILexicalBlock(scope: !10340, file: !1907, line: 51, column: 2)
!10362 = !DILocation(line: 51, column: 2, scope: !10361)
!10363 = !DILocation(line: 51, column: 2, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10360, file: !1907, line: 51, column: 2)
!10365 = !DILocalVariable(name: "l", arg: 1, scope: !10366, file: !248, line: 136, type: !10369)
!10366 = distinct !DISubprogram(name: "k_spin_lock", scope: !248, file: !248, line: 136, type: !10367, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10370)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!10354, !10369}
!10369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!10370 = !{!10365, !10371}
!10371 = !DILocalVariable(name: "k", scope: !10366, file: !248, line: 139, type: !10354)
!10372 = !DILocation(line: 0, scope: !10366, inlinedAt: !10373)
!10373 = distinct !DILocation(line: 59, column: 8, scope: !10340)
!10374 = !DILocation(line: 55, column: 2, scope: !10375, inlinedAt: !10379)
!10375 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10376)
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "key", scope: !10375, file: !6050, line: 44, type: !32)
!10378 = !DILocalVariable(name: "tmp", scope: !10375, file: !6050, line: 53, type: !32)
!10379 = distinct !DILocation(line: 145, column: 10, scope: !10366, inlinedAt: !10373)
!10380 = !{i64 2870286}
!10381 = !DILocation(line: 0, scope: !10375, inlinedAt: !10379)
!10382 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10373)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !248, line: 148, column: 2)
!10384 = distinct !DILexicalBlock(scope: !10366, file: !248, line: 148, column: 2)
!10385 = !DILocation(line: 148, column: 2, scope: !10384, inlinedAt: !10373)
!10386 = !DILocation(line: 148, column: 2, scope: !10387, inlinedAt: !10373)
!10387 = distinct !DILexicalBlock(scope: !10383, file: !248, line: 148, column: 2)
!10388 = !DILocation(line: 160, column: 2, scope: !10366, inlinedAt: !10373)
!10389 = !DILocation(line: 0, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10340, file: !1907, line: 63, column: 2)
!10391 = !DILocation(line: 63, column: 2, scope: !10390)
!10392 = !DILocation(line: 64, column: 3, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !1907, line: 63, column: 71)
!10394 = distinct !DILexicalBlock(scope: !10390, file: !1907, line: 63, column: 2)
!10395 = !DILocation(line: 63, column: 58, scope: !10394)
!10396 = distinct !{!10396, !10391, !10397}
!10397 = !DILocation(line: 65, column: 2, scope: !10390)
!10398 = !DILocalVariable(name: "key", arg: 2, scope: !10399, file: !248, line: 190, type: !10354)
!10399 = distinct !DISubprogram(name: "k_spin_unlock", scope: !248, file: !248, line: 189, type: !10400, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10402)
!10400 = !DISubroutineType(types: !10401)
!10401 = !{null, !10369, !10354}
!10402 = !{!10403, !10398}
!10403 = !DILocalVariable(name: "l", arg: 1, scope: !10399, file: !248, line: 189, type: !10369)
!10404 = !DILocation(line: 0, scope: !10399, inlinedAt: !10405)
!10405 = distinct !DILocation(line: 69, column: 2, scope: !10340)
!10406 = !DILocation(line: 194, column: 2, scope: !10407, inlinedAt: !10405)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !248, line: 194, column: 2)
!10408 = distinct !DILexicalBlock(scope: !10399, file: !248, line: 194, column: 2)
!10409 = !DILocation(line: 194, column: 2, scope: !10408, inlinedAt: !10405)
!10410 = !DILocation(line: 194, column: 2, scope: !10411, inlinedAt: !10405)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !248, line: 194, column: 2)
!10412 = !DILocalVariable(name: "key", arg: 1, scope: !10413, file: !6050, line: 84, type: !32)
!10413 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10414)
!10414 = !{!10412}
!10415 = !DILocation(line: 0, scope: !10413, inlinedAt: !10416)
!10416 = distinct !DILocation(line: 215, column: 2, scope: !10399, inlinedAt: !10405)
!10417 = !DILocation(line: 95, column: 2, scope: !10413, inlinedAt: !10416)
!10418 = !{i64 2871103}
!10419 = !DILocation(line: 71, column: 1, scope: !10340)
!10420 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !1907, file: !1907, line: 853, type: !10421, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!754, !10369}
!10423 = !{!10424, !10425}
!10424 = !DILocalVariable(name: "l", arg: 1, scope: !10420, file: !1907, line: 853, type: !10369)
!10425 = !DILocalVariable(name: "thread_cpu", scope: !10420, file: !1907, line: 855, type: !22)
!10426 = !DILocation(line: 0, scope: !10420)
!10427 = !DILocation(line: 855, column: 28, scope: !10420)
!10428 = !DILocation(line: 857, column: 17, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10420, file: !1907, line: 857, column: 6)
!10430 = !DILocation(line: 857, column: 6, scope: !10420)
!10431 = !DILocation(line: 858, column: 19, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !1907, line: 858, column: 7)
!10433 = distinct !DILexicalBlock(scope: !10429, file: !1907, line: 857, column: 24)
!10434 = !DILocation(line: 858, column: 42, scope: !10432)
!10435 = !DILocation(line: 858, column: 28, scope: !10432)
!10436 = !DILocation(line: 858, column: 25, scope: !10432)
!10437 = !DILocation(line: 858, column: 7, scope: !10433)
!10438 = !DILocation(line: 862, column: 2, scope: !10420)
!10439 = !DILocation(line: 863, column: 1, scope: !10420)
!10440 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !1907, file: !1907, line: 874, type: !10441, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10443)
!10441 = !DISubroutineType(types: !10442)
!10442 = !{null, !10369}
!10443 = !{!10444}
!10444 = !DILocalVariable(name: "l", arg: 1, scope: !10440, file: !1907, line: 874, type: !10369)
!10445 = !DILocation(line: 0, scope: !10440)
!10446 = !DILocation(line: 876, column: 32, scope: !10440)
!10447 = !DILocation(line: 876, column: 18, scope: !10440)
!10448 = !DILocation(line: 876, column: 48, scope: !10440)
!10449 = !DILocation(line: 876, column: 37, scope: !10440)
!10450 = !DILocation(line: 876, column: 35, scope: !10440)
!10451 = !DILocation(line: 876, column: 5, scope: !10440)
!10452 = !DILocation(line: 876, column: 16, scope: !10440)
!10453 = !DILocation(line: 877, column: 1, scope: !10440)
!10454 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !1907, file: !1907, line: 865, type: !10421, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10455)
!10455 = !{!10456}
!10456 = !DILocalVariable(name: "l", arg: 1, scope: !10454, file: !1907, line: 865, type: !10369)
!10457 = !DILocation(line: 0, scope: !10454)
!10458 = !DILocation(line: 867, column: 9, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10454, file: !1907, line: 867, column: 6)
!10460 = !DILocation(line: 867, column: 38, scope: !10459)
!10461 = !DILocation(line: 867, column: 24, scope: !10459)
!10462 = !DILocation(line: 867, column: 54, scope: !10459)
!10463 = !DILocation(line: 867, column: 43, scope: !10459)
!10464 = !DILocation(line: 867, column: 41, scope: !10459)
!10465 = !DILocation(line: 867, column: 20, scope: !10459)
!10466 = !DILocation(line: 867, column: 6, scope: !10454)
!10467 = !DILocation(line: 870, column: 16, scope: !10454)
!10468 = !DILocation(line: 871, column: 2, scope: !10454)
!10469 = !DILocation(line: 872, column: 1, scope: !10454)
!10470 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1907, file: !1907, line: 73, type: !10341, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10471)
!10471 = !{!10472, !10473, !10474, !10475}
!10472 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10470, file: !1907, line: 73, type: !10343)
!10473 = !DILocalVariable(name: "user_data", arg: 2, scope: !10470, file: !1907, line: 73, type: !108)
!10474 = !DILocalVariable(name: "thread", scope: !10470, file: !1907, line: 76, type: !1911)
!10475 = !DILocalVariable(name: "key", scope: !10470, file: !1907, line: 77, type: !10354)
!10476 = !DILocation(line: 0, scope: !10470)
!10477 = !DILocation(line: 79, column: 2, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !1907, line: 79, column: 2)
!10479 = distinct !DILexicalBlock(scope: !10470, file: !1907, line: 79, column: 2)
!10480 = !DILocation(line: 79, column: 2, scope: !10479)
!10481 = !DILocation(line: 79, column: 2, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !1907, line: 79, column: 2)
!10483 = !DILocation(line: 0, scope: !10366, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 81, column: 8, scope: !10470)
!10485 = !DILocation(line: 55, column: 2, scope: !10375, inlinedAt: !10486)
!10486 = distinct !DILocation(line: 145, column: 10, scope: !10366, inlinedAt: !10484)
!10487 = !DILocation(line: 0, scope: !10375, inlinedAt: !10486)
!10488 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10484)
!10489 = !DILocation(line: 148, column: 2, scope: !10384, inlinedAt: !10484)
!10490 = !DILocation(line: 148, column: 2, scope: !10387, inlinedAt: !10484)
!10491 = !DILocation(line: 160, column: 2, scope: !10366, inlinedAt: !10484)
!10492 = !DILocation(line: 0, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10470, file: !1907, line: 85, column: 2)
!10494 = !DILocation(line: 85, column: 2, scope: !10493)
!10495 = !DILocation(line: 0, scope: !10399, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 86, column: 3, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1907, line: 85, column: 71)
!10498 = distinct !DILexicalBlock(scope: !10493, file: !1907, line: 85, column: 2)
!10499 = !DILocation(line: 194, column: 2, scope: !10407, inlinedAt: !10496)
!10500 = !DILocation(line: 194, column: 2, scope: !10408, inlinedAt: !10496)
!10501 = !DILocation(line: 194, column: 2, scope: !10411, inlinedAt: !10496)
!10502 = !DILocation(line: 0, scope: !10413, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 215, column: 2, scope: !10399, inlinedAt: !10496)
!10504 = !DILocation(line: 95, column: 2, scope: !10413, inlinedAt: !10503)
!10505 = !DILocation(line: 87, column: 3, scope: !10497)
!10506 = !DILocation(line: 0, scope: !10366, inlinedAt: !10507)
!10507 = distinct !DILocation(line: 88, column: 9, scope: !10497)
!10508 = !DILocation(line: 55, column: 2, scope: !10375, inlinedAt: !10509)
!10509 = distinct !DILocation(line: 145, column: 10, scope: !10366, inlinedAt: !10507)
!10510 = !DILocation(line: 0, scope: !10375, inlinedAt: !10509)
!10511 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10507)
!10512 = !DILocation(line: 148, column: 2, scope: !10384, inlinedAt: !10507)
!10513 = !DILocation(line: 148, column: 2, scope: !10387, inlinedAt: !10507)
!10514 = !DILocation(line: 160, column: 2, scope: !10366, inlinedAt: !10507)
!10515 = !DILocation(line: 85, column: 58, scope: !10498)
!10516 = distinct !{!10516, !10494, !10517}
!10517 = !DILocation(line: 89, column: 2, scope: !10493)
!10518 = !DILocation(line: 0, scope: !10399, inlinedAt: !10519)
!10519 = distinct !DILocation(line: 93, column: 2, scope: !10470)
!10520 = !DILocation(line: 194, column: 2, scope: !10407, inlinedAt: !10519)
!10521 = !DILocation(line: 194, column: 2, scope: !10408, inlinedAt: !10519)
!10522 = !DILocation(line: 194, column: 2, scope: !10411, inlinedAt: !10519)
!10523 = !DILocation(line: 0, scope: !10413, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 215, column: 2, scope: !10399, inlinedAt: !10519)
!10525 = !DILocation(line: 95, column: 2, scope: !10413, inlinedAt: !10524)
!10526 = !DILocation(line: 95, column: 1, scope: !10470)
!10527 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1907, file: !1907, line: 97, type: !6715, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !1817)
!10528 = !DILocation(line: 1031, column: 3, scope: !10529, inlinedAt: !10532)
!10529 = distinct !DISubprogram(name: "__get_IPSR", scope: !5931, file: !5931, line: 1027, type: !3202, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10530)
!10530 = !{!10531}
!10531 = !DILocalVariable(name: "result", scope: !10529, file: !5931, line: 1029, type: !110)
!10532 = distinct !DILocation(line: 48, column: 10, scope: !10533, inlinedAt: !10534)
!10533 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6714, file: !6714, line: 46, type: !6715, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !1817)
!10534 = distinct !DILocation(line: 99, column: 9, scope: !10527)
!10535 = !{i64 7019733}
!10536 = !DILocation(line: 0, scope: !10529, inlinedAt: !10532)
!10537 = !DILocation(line: 48, column: 9, scope: !10533, inlinedAt: !10534)
!10538 = !DILocation(line: 99, column: 2, scope: !10527)
!10539 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1907, file: !1907, line: 106, type: !2930, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !1817)
!10540 = !DILocation(line: 108, column: 2, scope: !10539)
!10541 = !DILocation(line: 108, column: 17, scope: !10539)
!10542 = !DILocation(line: 108, column: 30, scope: !10539)
!10543 = !DILocation(line: 109, column: 1, scope: !10539)
!10544 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1907, file: !1907, line: 116, type: !2930, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !1817)
!10545 = !DILocation(line: 118, column: 2, scope: !10544)
!10546 = !DILocation(line: 118, column: 17, scope: !10544)
!10547 = !DILocation(line: 118, column: 30, scope: !10544)
!10548 = !DILocation(line: 119, column: 1, scope: !10544)
!10549 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1907, file: !1907, line: 126, type: !6715, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !1817)
!10550 = !DILocation(line: 128, column: 10, scope: !10549)
!10551 = !DILocation(line: 128, column: 25, scope: !10549)
!10552 = !DILocation(line: 128, column: 38, scope: !10549)
!10553 = !DILocation(line: 128, column: 53, scope: !10549)
!10554 = !DILocation(line: 128, column: 2, scope: !10549)
!10555 = distinct !DISubprogram(name: "z_thread_monitor_exit", scope: !1907, file: !1907, line: 164, type: !10556, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !1911}
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "thread", arg: 1, scope: !10555, file: !1907, line: 164, type: !1911)
!10560 = !DILocalVariable(name: "key", scope: !10555, file: !1907, line: 166, type: !10354)
!10561 = !DILocalVariable(name: "prev_thread", scope: !10562, file: !1907, line: 171, type: !1911)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !1907, line: 170, column: 9)
!10563 = distinct !DILexicalBlock(scope: !10555, file: !1907, line: 168, column: 6)
!10564 = !DILocation(line: 0, scope: !10555)
!10565 = !DILocation(line: 0, scope: !10366, inlinedAt: !10566)
!10566 = distinct !DILocation(line: 166, column: 25, scope: !10555)
!10567 = !DILocation(line: 55, column: 2, scope: !10375, inlinedAt: !10568)
!10568 = distinct !DILocation(line: 145, column: 10, scope: !10366, inlinedAt: !10566)
!10569 = !DILocation(line: 0, scope: !10375, inlinedAt: !10568)
!10570 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10566)
!10571 = !DILocation(line: 148, column: 2, scope: !10384, inlinedAt: !10566)
!10572 = !DILocation(line: 148, column: 2, scope: !10387, inlinedAt: !10566)
!10573 = !DILocation(line: 160, column: 2, scope: !10366, inlinedAt: !10566)
!10574 = !DILocation(line: 168, column: 24, scope: !10563)
!10575 = !DILocation(line: 168, column: 13, scope: !10563)
!10576 = !DILocation(line: 168, column: 6, scope: !10555)
!10577 = !DILocation(line: 169, column: 38, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10563, file: !1907, line: 168, column: 33)
!10579 = !DILocation(line: 169, column: 19, scope: !10578)
!10580 = !DILocation(line: 170, column: 2, scope: !10578)
!10581 = !DILocation(line: 0, scope: !10562)
!10582 = !DILocation(line: 174, column: 23, scope: !10562)
!10583 = !DILocation(line: 174, column: 32, scope: !10562)
!10584 = !DILocation(line: 175, column: 28, scope: !10562)
!10585 = !DILocation(line: 175, column: 12, scope: !10562)
!10586 = !DILocation(line: 174, column: 3, scope: !10562)
!10587 = distinct !{!10587, !10586, !10588}
!10588 = !DILocation(line: 177, column: 3, scope: !10562)
!10589 = !DILocation(line: 179, column: 39, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1907, line: 178, column: 28)
!10591 = distinct !DILexicalBlock(scope: !10562, file: !1907, line: 178, column: 7)
!10592 = !DILocation(line: 179, column: 29, scope: !10590)
!10593 = !DILocation(line: 180, column: 3, scope: !10590)
!10594 = !DILocation(line: 0, scope: !10399, inlinedAt: !10595)
!10595 = distinct !DILocation(line: 183, column: 2, scope: !10555)
!10596 = !DILocation(line: 194, column: 2, scope: !10407, inlinedAt: !10595)
!10597 = !DILocation(line: 194, column: 2, scope: !10408, inlinedAt: !10595)
!10598 = !DILocation(line: 194, column: 2, scope: !10411, inlinedAt: !10595)
!10599 = !DILocation(line: 0, scope: !10413, inlinedAt: !10600)
!10600 = distinct !DILocation(line: 215, column: 2, scope: !10399, inlinedAt: !10595)
!10601 = !DILocation(line: 95, column: 2, scope: !10413, inlinedAt: !10600)
!10602 = !DILocation(line: 184, column: 1, scope: !10555)
!10603 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1907, file: !1907, line: 187, type: !10604, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{!109, !1911, !744}
!10606 = !{!10607, !10608}
!10607 = !DILocalVariable(name: "thread", arg: 1, scope: !10603, file: !1907, line: 187, type: !1911)
!10608 = !DILocalVariable(name: "value", arg: 2, scope: !10603, file: !1907, line: 187, type: !744)
!10609 = !DILocation(line: 0, scope: !10603)
!10610 = !DILocation(line: 190, column: 13, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10603, file: !1907, line: 190, column: 6)
!10612 = !DILocation(line: 190, column: 6, scope: !10603)
!10613 = !DILocation(line: 194, column: 10, scope: !10603)
!10614 = !DILocation(line: 194, column: 2, scope: !10603)
!10615 = !DILocation(line: 195, column: 2, scope: !10603)
!10616 = !DILocation(line: 195, column: 47, scope: !10603)
!10617 = !DILocation(line: 199, column: 2, scope: !10603)
!10618 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1907, file: !1907, line: 238, type: !10619, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10621)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{!744, !1911}
!10621 = !{!10622}
!10622 = !DILocalVariable(name: "thread", arg: 1, scope: !10618, file: !1907, line: 238, type: !1911)
!10623 = !DILocation(line: 0, scope: !10618)
!10624 = !DILocation(line: 241, column: 23, scope: !10618)
!10625 = !DILocation(line: 241, column: 2, scope: !10618)
!10626 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1907, file: !1907, line: 248, type: !10627, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{!109, !1910, !936, !243}
!10629 = !{!10630, !10631, !10632}
!10630 = !DILocalVariable(name: "thread", arg: 1, scope: !10626, file: !1907, line: 248, type: !1910)
!10631 = !DILocalVariable(name: "buf", arg: 2, scope: !10626, file: !1907, line: 248, type: !936)
!10632 = !DILocalVariable(name: "size", arg: 3, scope: !10626, file: !1907, line: 248, type: !243)
!10633 = !DILocation(line: 0, scope: !10626)
!10634 = !DILocation(line: 251, column: 15, scope: !10626)
!10635 = !DILocation(line: 251, column: 2, scope: !10626)
!10636 = !DILocation(line: 252, column: 2, scope: !10626)
!10637 = !DILocation(line: 0, scope: !1906)
!10638 = !DILocation(line: 281, column: 11, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !1906, file: !1907, line: 281, column: 6)
!10640 = !DILocation(line: 281, column: 20, scope: !10639)
!10641 = !DILocation(line: 275, column: 45, scope: !1906)
!10642 = !DILocation(line: 285, column: 10, scope: !1906)
!10643 = !DILocation(line: 0, scope: !2010)
!10644 = !DILocation(line: 293, column: 39, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !2010, file: !1907, line: 293, column: 2)
!10646 = !DILocation(line: 293, column: 2, scope: !2010)
!10647 = !DILocation(line: 273, column: 14, scope: !1906)
!10648 = !DILocation(line: 309, column: 2, scope: !1906)
!10649 = !DILocation(line: 309, column: 11, scope: !1906)
!10650 = !DILocation(line: 311, column: 2, scope: !1906)
!10651 = !DILocation(line: 293, column: 26, scope: !10645)
!10652 = !DILocation(line: 294, column: 9, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10645, file: !1907, line: 293, column: 54)
!10654 = !DILocation(line: 295, column: 21, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10653, file: !1907, line: 295, column: 7)
!10656 = !DILocation(line: 295, column: 28, scope: !10655)
!10657 = !DILocation(line: 295, column: 7, scope: !10653)
!10658 = !DILocation(line: 299, column: 25, scope: !10653)
!10659 = !DILocation(line: 299, column: 41, scope: !10653)
!10660 = !DILocation(line: 300, column: 7, scope: !10653)
!10661 = !DILocation(line: 300, column: 26, scope: !10653)
!10662 = !DILocation(line: 299, column: 10, scope: !10653)
!10663 = !DILocation(line: 299, column: 7, scope: !10653)
!10664 = !DILocation(line: 302, column: 16, scope: !10653)
!10665 = !DILocation(line: 304, column: 20, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10653, file: !1907, line: 304, column: 7)
!10667 = !DILocation(line: 304, column: 7, scope: !10653)
!10668 = !DILocation(line: 305, column: 26, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !1907, line: 304, column: 26)
!10670 = !DILocation(line: 305, column: 42, scope: !10669)
!10671 = !DILocation(line: 305, column: 11, scope: !10669)
!10672 = !DILocation(line: 305, column: 8, scope: !10669)
!10673 = !DILocation(line: 306, column: 3, scope: !10669)
!10674 = !DILocation(line: 293, column: 50, scope: !10645)
!10675 = !DILocation(line: 312, column: 1, scope: !1906)
!10676 = distinct !DISubprogram(name: "copy_bytes", scope: !1907, file: !1907, line: 261, type: !10677, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10679)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{!243, !936, !243, !744, !243}
!10679 = !{!10680, !10681, !10682, !10683, !10684}
!10680 = !DILocalVariable(name: "dest", arg: 1, scope: !10676, file: !1907, line: 261, type: !936)
!10681 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10676, file: !1907, line: 261, type: !243)
!10682 = !DILocalVariable(name: "src", arg: 3, scope: !10676, file: !1907, line: 261, type: !744)
!10683 = !DILocalVariable(name: "src_size", arg: 4, scope: !10676, file: !1907, line: 261, type: !243)
!10684 = !DILocalVariable(name: "bytes_to_copy", scope: !10676, file: !1907, line: 263, type: !243)
!10685 = !DILocation(line: 0, scope: !10676)
!10686 = !DILocation(line: 265, column: 18, scope: !10676)
!10687 = !DILocation(line: 266, column: 2, scope: !10676)
!10688 = !DILocation(line: 268, column: 2, scope: !10676)
!10689 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1907, file: !1907, line: 383, type: !10556, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10690)
!10690 = !{!10691}
!10691 = !DILocalVariable(name: "thread", arg: 1, scope: !10689, file: !1907, line: 383, type: !1911)
!10692 = !DILocation(line: 0, scope: !10689)
!10693 = !DILocation(line: 387, column: 2, scope: !10689)
!10694 = !DILocation(line: 388, column: 1, scope: !10689)
!10695 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1907, file: !1907, line: 528, type: !10696, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10703)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{!936, !1911, !10698, !243, !215, !108, !108, !108, !109, !110, !744}
!10698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10699, size: 32)
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !10700)
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !267, line: 47, size: 8, elements: !10701)
!10701 = !{!10702}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10700, file: !267, line: 48, baseType: !226, size: 8)
!10703 = !{!10704, !10705, !10706, !10707, !10708, !10709, !10710, !10711, !10712, !10713, !10714, !10715}
!10704 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10695, file: !1907, line: 528, type: !1911)
!10705 = !DILocalVariable(name: "stack", arg: 2, scope: !10695, file: !1907, line: 529, type: !10698)
!10706 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10695, file: !1907, line: 529, type: !243)
!10707 = !DILocalVariable(name: "entry", arg: 4, scope: !10695, file: !1907, line: 530, type: !215)
!10708 = !DILocalVariable(name: "p1", arg: 5, scope: !10695, file: !1907, line: 531, type: !108)
!10709 = !DILocalVariable(name: "p2", arg: 6, scope: !10695, file: !1907, line: 531, type: !108)
!10710 = !DILocalVariable(name: "p3", arg: 7, scope: !10695, file: !1907, line: 531, type: !108)
!10711 = !DILocalVariable(name: "prio", arg: 8, scope: !10695, file: !1907, line: 532, type: !109)
!10712 = !DILocalVariable(name: "options", arg: 9, scope: !10695, file: !1907, line: 532, type: !110)
!10713 = !DILocalVariable(name: "name", arg: 10, scope: !10695, file: !1907, line: 532, type: !744)
!10714 = !DILocalVariable(name: "stack_ptr", scope: !10695, file: !1907, line: 534, type: !936)
!10715 = !DILocalVariable(name: "key", scope: !10695, file: !1907, line: 587, type: !10354)
!10716 = !DILocation(line: 0, scope: !10695)
!10717 = !DILocation(line: 536, column: 2, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !1907, line: 536, column: 2)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !1907, line: 536, column: 2)
!10720 = distinct !DILexicalBlock(scope: !10695, file: !1907, line: 536, column: 2)
!10721 = !DILocation(line: 536, column: 2, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !1907, line: 536, column: 2)
!10723 = !DILocation(line: 550, column: 28, scope: !10695)
!10724 = !DILocation(line: 550, column: 2, scope: !10695)
!10725 = !DILocation(line: 553, column: 34, scope: !10695)
!10726 = !DILocation(line: 553, column: 2, scope: !10695)
!10727 = !DILocation(line: 554, column: 14, scope: !10695)
!10728 = !DILocation(line: 564, column: 2, scope: !10695)
!10729 = !DILocation(line: 567, column: 14, scope: !10695)
!10730 = !DILocation(line: 567, column: 24, scope: !10695)
!10731 = !DILocation(line: 582, column: 20, scope: !10695)
!10732 = !DILocation(line: 582, column: 27, scope: !10695)
!10733 = !DILocation(line: 583, column: 20, scope: !10695)
!10734 = !DILocation(line: 583, column: 31, scope: !10695)
!10735 = !DILocation(line: 584, column: 20, scope: !10695)
!10736 = !DILocation(line: 584, column: 31, scope: !10695)
!10737 = !DILocation(line: 585, column: 20, scope: !10695)
!10738 = !DILocation(line: 585, column: 31, scope: !10695)
!10739 = !DILocation(line: 0, scope: !10366, inlinedAt: !10740)
!10740 = distinct !DILocation(line: 587, column: 25, scope: !10695)
!10741 = !DILocation(line: 55, column: 2, scope: !10375, inlinedAt: !10742)
!10742 = distinct !DILocation(line: 145, column: 10, scope: !10366, inlinedAt: !10740)
!10743 = !DILocation(line: 0, scope: !10375, inlinedAt: !10742)
!10744 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10740)
!10745 = !DILocation(line: 148, column: 2, scope: !10384, inlinedAt: !10740)
!10746 = !DILocation(line: 148, column: 2, scope: !10387, inlinedAt: !10740)
!10747 = !DILocation(line: 160, column: 2, scope: !10366, inlinedAt: !10740)
!10748 = !DILocation(line: 589, column: 36, scope: !10695)
!10749 = !DILocation(line: 589, column: 14, scope: !10695)
!10750 = !DILocation(line: 589, column: 26, scope: !10695)
!10751 = !DILocation(line: 590, column: 18, scope: !10695)
!10752 = !DILocation(line: 0, scope: !10399, inlinedAt: !10753)
!10753 = distinct !DILocation(line: 591, column: 2, scope: !10695)
!10754 = !DILocation(line: 194, column: 2, scope: !10407, inlinedAt: !10753)
!10755 = !DILocation(line: 194, column: 2, scope: !10408, inlinedAt: !10753)
!10756 = !DILocation(line: 194, column: 2, scope: !10411, inlinedAt: !10753)
!10757 = !DILocation(line: 0, scope: !10413, inlinedAt: !10758)
!10758 = distinct !DILocation(line: 215, column: 2, scope: !10399, inlinedAt: !10753)
!10759 = !DILocation(line: 95, column: 2, scope: !10413, inlinedAt: !10758)
!10760 = !DILocation(line: 594, column: 11, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10695, file: !1907, line: 594, column: 6)
!10762 = !DILocation(line: 0, scope: !10761)
!10763 = !DILocation(line: 594, column: 6, scope: !10695)
!10764 = !DILocation(line: 595, column: 3, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !1907, line: 594, column: 20)
!10766 = !DILocation(line: 598, column: 3, scope: !10765)
!10767 = !DILocation(line: 598, column: 52, scope: !10765)
!10768 = !DILocation(line: 599, column: 2, scope: !10765)
!10769 = !DILocation(line: 600, column: 23, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10761, file: !1907, line: 599, column: 9)
!10771 = !DILocation(line: 612, column: 7, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10695, file: !1907, line: 612, column: 6)
!10773 = !DILocation(line: 612, column: 6, scope: !10695)
!10774 = !DILocation(line: 627, column: 40, scope: !10695)
!10775 = !DILocation(line: 637, column: 2, scope: !10695)
!10776 = !DILocation(line: 613, column: 15, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10772, file: !1907, line: 612, column: 17)
!10778 = !DILocation(line: 613, column: 29, scope: !10777)
!10779 = !DILocation(line: 638, column: 1, scope: !10695)
!10780 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !10191, file: !10191, line: 78, type: !10781, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!754, !108}
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "entry_point", arg: 1, scope: !10780, file: !10191, line: 78, type: !108)
!10785 = !DILocation(line: 0, scope: !10780)
!10786 = !DILocation(line: 80, column: 21, scope: !10780)
!10787 = !DILocation(line: 80, column: 2, scope: !10780)
!10788 = distinct !DISubprogram(name: "z_waitq_init", scope: !10789, file: !10789, line: 47, type: !10790, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10792)
!10789 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !1928}
!10792 = !{!10793}
!10793 = !DILocalVariable(name: "w", arg: 1, scope: !10788, file: !10789, line: 47, type: !1928)
!10794 = !DILocation(line: 0, scope: !10788)
!10795 = !DILocation(line: 49, column: 21, scope: !10788)
!10796 = !DILocation(line: 49, column: 2, scope: !10788)
!10797 = !DILocation(line: 50, column: 1, scope: !10788)
!10798 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1907, file: !1907, line: 791, type: !10799, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10802)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{null, !10801, !109, !110, !32}
!10801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!10802 = !{!10803, !10804, !10805, !10806}
!10803 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10798, file: !1907, line: 791, type: !10801)
!10804 = !DILocalVariable(name: "priority", arg: 2, scope: !10798, file: !1907, line: 791, type: !109)
!10805 = !DILocalVariable(name: "initial_state", arg: 3, scope: !10798, file: !1907, line: 792, type: !110)
!10806 = !DILocalVariable(name: "options", arg: 4, scope: !10798, file: !1907, line: 792, type: !32)
!10807 = !DILocation(line: 0, scope: !10798)
!10808 = !DILocation(line: 795, column: 15, scope: !10798)
!10809 = !DILocation(line: 795, column: 25, scope: !10798)
!10810 = !DILocation(line: 796, column: 30, scope: !10798)
!10811 = !DILocation(line: 796, column: 15, scope: !10798)
!10812 = !DILocation(line: 796, column: 28, scope: !10798)
!10813 = !DILocation(line: 797, column: 30, scope: !10798)
!10814 = !DILocation(line: 797, column: 15, scope: !10798)
!10815 = !DILocation(line: 797, column: 28, scope: !10798)
!10816 = !DILocation(line: 799, column: 22, scope: !10798)
!10817 = !DILocation(line: 799, column: 15, scope: !10798)
!10818 = !DILocation(line: 799, column: 20, scope: !10798)
!10819 = !DILocation(line: 801, column: 15, scope: !10798)
!10820 = !DILocation(line: 801, column: 28, scope: !10798)
!10821 = !DILocation(line: 814, column: 2, scope: !10798)
!10822 = !DILocation(line: 815, column: 1, scope: !10798)
!10823 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1907, file: !1907, line: 449, type: !10824, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10826)
!10824 = !DISubroutineType(types: !10825)
!10825 = !{!936, !1911, !10698, !243}
!10826 = !{!10827, !10828, !10829, !10830, !10831, !10832, !10833, !10834}
!10827 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10823, file: !1907, line: 449, type: !1911)
!10828 = !DILocalVariable(name: "stack", arg: 2, scope: !10823, file: !1907, line: 450, type: !10698)
!10829 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10823, file: !1907, line: 450, type: !243)
!10830 = !DILocalVariable(name: "stack_obj_size", scope: !10823, file: !1907, line: 452, type: !243)
!10831 = !DILocalVariable(name: "stack_buf_size", scope: !10823, file: !1907, line: 452, type: !243)
!10832 = !DILocalVariable(name: "stack_ptr", scope: !10823, file: !1907, line: 453, type: !936)
!10833 = !DILocalVariable(name: "stack_buf_start", scope: !10823, file: !1907, line: 453, type: !936)
!10834 = !DILocalVariable(name: "delta", scope: !10823, file: !1907, line: 454, type: !243)
!10835 = !DILocation(line: 0, scope: !10823)
!10836 = !DILocation(line: 465, column: 20, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10823, file: !1907, line: 463, column: 2)
!10838 = !DILocation(line: 473, column: 28, scope: !10823)
!10839 = !DILocation(line: 520, column: 2, scope: !10823)
!10840 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !10841, file: !10841, line: 40, type: !10842, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10844)
!10841 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10842 = !DISubroutineType(types: !10843)
!10843 = !{null, !10801}
!10844 = !{!10845}
!10845 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10840, file: !10841, line: 40, type: !10801)
!10846 = !DILocation(line: 0, scope: !10840)
!10847 = !DILocation(line: 42, column: 31, scope: !10840)
!10848 = !DILocation(line: 42, column: 2, scope: !10840)
!10849 = !DILocation(line: 43, column: 1, scope: !10840)
!10850 = distinct !DISubprogram(name: "z_init_timeout", scope: !10841, file: !10841, line: 25, type: !1954, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10851)
!10851 = !{!10852}
!10852 = !DILocalVariable(name: "to", arg: 1, scope: !10850, file: !10841, line: 25, type: !1956)
!10853 = !DILocation(line: 0, scope: !10850)
!10854 = !DILocation(line: 27, column: 22, scope: !10850)
!10855 = !DILocation(line: 27, column: 2, scope: !10850)
!10856 = !DILocation(line: 28, column: 1, scope: !10850)
!10857 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !10858, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !1888}
!10860 = !{!10861}
!10861 = !DILocalVariable(name: "node", arg: 1, scope: !10857, file: !128, line: 211, type: !1888)
!10862 = !DILocation(line: 0, scope: !10857)
!10863 = !DILocation(line: 213, column: 8, scope: !10857)
!10864 = !DILocation(line: 213, column: 13, scope: !10857)
!10865 = !DILocation(line: 214, column: 8, scope: !10857)
!10866 = !DILocation(line: 214, column: 13, scope: !10857)
!10867 = !DILocation(line: 215, column: 1, scope: !10857)
!10868 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !10869, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10872)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{null, !10871}
!10871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!10872 = !{!10873}
!10873 = !DILocalVariable(name: "list", arg: 1, scope: !10868, file: !128, line: 197, type: !10871)
!10874 = !DILocation(line: 0, scope: !10868)
!10875 = !DILocation(line: 199, column: 8, scope: !10868)
!10876 = !DILocation(line: 199, column: 13, scope: !10868)
!10877 = !DILocation(line: 200, column: 8, scope: !10868)
!10878 = !DILocation(line: 200, column: 13, scope: !10868)
!10879 = !DILocation(line: 201, column: 1, scope: !10868)
!10880 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1907, file: !1907, line: 641, type: !10881, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10887)
!10881 = !DISubroutineType(types: !10882)
!10882 = !{!1910, !1911, !10698, !243, !215, !108, !108, !108, !109, !110, !10883}
!10883 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !10884)
!10884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !10885)
!10885 = !{!10886}
!10886 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10884, file: !105, line: 66, baseType: !104, size: 64)
!10887 = !{!10888, !10889, !10890, !10891, !10892, !10893, !10894, !10895, !10896, !10897}
!10888 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10880, file: !1907, line: 641, type: !1911)
!10889 = !DILocalVariable(name: "stack", arg: 2, scope: !10880, file: !1907, line: 642, type: !10698)
!10890 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10880, file: !1907, line: 643, type: !243)
!10891 = !DILocalVariable(name: "entry", arg: 4, scope: !10880, file: !1907, line: 643, type: !215)
!10892 = !DILocalVariable(name: "p1", arg: 5, scope: !10880, file: !1907, line: 644, type: !108)
!10893 = !DILocalVariable(name: "p2", arg: 6, scope: !10880, file: !1907, line: 644, type: !108)
!10894 = !DILocalVariable(name: "p3", arg: 7, scope: !10880, file: !1907, line: 644, type: !108)
!10895 = !DILocalVariable(name: "prio", arg: 8, scope: !10880, file: !1907, line: 645, type: !109)
!10896 = !DILocalVariable(name: "options", arg: 9, scope: !10880, file: !1907, line: 645, type: !110)
!10897 = !DILocalVariable(name: "delay", arg: 10, scope: !10880, file: !1907, line: 645, type: !10883)
!10898 = !DILocation(line: 0, scope: !10880)
!10899 = !DILocation(line: 1031, column: 3, scope: !10529, inlinedAt: !10900)
!10900 = distinct !DILocation(line: 48, column: 10, scope: !10533, inlinedAt: !10901)
!10901 = distinct !DILocation(line: 647, column: 2, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10903, file: !1907, line: 647, column: 2)
!10903 = distinct !DILexicalBlock(scope: !10880, file: !1907, line: 647, column: 2)
!10904 = !DILocation(line: 0, scope: !10529, inlinedAt: !10900)
!10905 = !DILocation(line: 48, column: 9, scope: !10533, inlinedAt: !10901)
!10906 = !DILocation(line: 647, column: 2, scope: !10903)
!10907 = !DILocation(line: 647, column: 2, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10902, file: !1907, line: 647, column: 2)
!10909 = !DILocation(line: 649, column: 2, scope: !10880)
!10910 = !DILocation(line: 652, column: 7, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10880, file: !1907, line: 652, column: 6)
!10912 = !DILocation(line: 652, column: 6, scope: !10880)
!10913 = !DILocation(line: 653, column: 3, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !1907, line: 652, column: 39)
!10915 = !DILocation(line: 654, column: 2, scope: !10914)
!10916 = !DILocation(line: 656, column: 2, scope: !10880)
!10917 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1907, file: !1907, line: 401, type: !10918, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10920)
!10918 = !DISubroutineType(types: !10919)
!10919 = !{null, !1911, !10883}
!10920 = !{!10921, !10922}
!10921 = !DILocalVariable(name: "thread", arg: 1, scope: !10917, file: !1907, line: 401, type: !1911)
!10922 = !DILocalVariable(name: "delay", arg: 2, scope: !10917, file: !1907, line: 401, type: !10883)
!10923 = !DILocation(line: 0, scope: !10917)
!10924 = !DILocation(line: 404, column: 6, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10917, file: !1907, line: 404, column: 6)
!10926 = !DILocation(line: 404, column: 6, scope: !10917)
!10927 = !DILocation(line: 405, column: 3, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10925, file: !1907, line: 404, column: 38)
!10929 = !DILocation(line: 406, column: 2, scope: !10928)
!10930 = !DILocation(line: 407, column: 3, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10925, file: !1907, line: 406, column: 9)
!10932 = !DILocation(line: 413, column: 1, scope: !10917)
!10933 = distinct !DISubprogram(name: "k_thread_start", scope: !3105, file: !3105, line: 205, type: !10934, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10936)
!10934 = !DISubroutineType(types: !10935)
!10935 = !{null, !1910}
!10936 = !{!10937}
!10937 = !DILocalVariable(name: "thread", arg: 1, scope: !10933, file: !3105, line: 205, type: !1910)
!10938 = !DILocation(line: 0, scope: !10933)
!10939 = !DILocation(line: 214, column: 2, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10933, file: !3105, line: 214, column: 2)
!10941 = !{i64 2151069497}
!10942 = !DILocation(line: 215, column: 2, scope: !10933)
!10943 = !DILocation(line: 216, column: 1, scope: !10933)
!10944 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10841, file: !10841, line: 47, type: !10918, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10945)
!10945 = !{!10946, !10947}
!10946 = !DILocalVariable(name: "thread", arg: 1, scope: !10944, file: !10841, line: 47, type: !1911)
!10947 = !DILocalVariable(name: "ticks", arg: 2, scope: !10944, file: !10841, line: 47, type: !10883)
!10948 = !DILocation(line: 0, scope: !10944)
!10949 = !DILocation(line: 49, column: 30, scope: !10944)
!10950 = !DILocation(line: 49, column: 2, scope: !10944)
!10951 = !DILocation(line: 50, column: 1, scope: !10944)
!10952 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1907, file: !1907, line: 748, type: !2930, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !10953)
!10953 = !{!10954, !10972}
!10954 = !DILocalVariable(name: "thread_data", scope: !10955, file: !1907, line: 750, type: !10956)
!10955 = distinct !DILexicalBlock(scope: !10952, file: !1907, line: 750, column: 2)
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10957, size: 32)
!10957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !119, line: 620, size: 384, elements: !10958)
!10958 = !{!10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10971}
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !10957, file: !119, line: 621, baseType: !1911, size: 32)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !10957, file: !119, line: 622, baseType: !10698, size: 32, offset: 32)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !10957, file: !119, line: 623, baseType: !32, size: 32, offset: 64)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !10957, file: !119, line: 624, baseType: !215, size: 32, offset: 96)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !10957, file: !119, line: 625, baseType: !108, size: 32, offset: 128)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !10957, file: !119, line: 626, baseType: !108, size: 32, offset: 160)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !10957, file: !119, line: 627, baseType: !108, size: 32, offset: 192)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !10957, file: !119, line: 628, baseType: !109, size: 32, offset: 224)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !10957, file: !119, line: 629, baseType: !110, size: 32, offset: 256)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !10957, file: !119, line: 630, baseType: !1011, size: 32, offset: 288)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !10957, file: !119, line: 631, baseType: !10970, size: 32, offset: 320)
!10970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 32)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !10957, file: !119, line: 632, baseType: !744, size: 32, offset: 352)
!10972 = !DILocalVariable(name: "thread_data", scope: !10973, file: !1907, line: 781, type: !10956)
!10973 = distinct !DILexicalBlock(scope: !10952, file: !1907, line: 781, column: 2)
!10974 = !DILocation(line: 0, scope: !10955)
!10975 = !DILocation(line: 750, column: 2, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1907, line: 750, column: 2)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1907, line: 750, column: 2)
!10978 = distinct !DILexicalBlock(scope: !10955, file: !1907, line: 750, column: 2)
!10979 = !DILocation(line: 750, column: 2, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !1907, line: 750, column: 2)
!10981 = distinct !DILexicalBlock(scope: !10976, file: !1907, line: 750, column: 2)
!10982 = !DILocation(line: 750, column: 2, scope: !10977)
!10983 = !DILocation(line: 750, column: 2, scope: !10955)
!10984 = !DILocation(line: 780, column: 2, scope: !10952)
!10985 = !DILocation(line: 0, scope: !10973)
!10986 = !DILocation(line: 781, column: 2, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !1907, line: 781, column: 2)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1907, line: 781, column: 2)
!10989 = distinct !DILexicalBlock(scope: !10973, file: !1907, line: 781, column: 2)
!10990 = !DILocation(line: 752, column: 17, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10978, file: !1907, line: 750, column: 38)
!10992 = !DILocation(line: 753, column: 17, scope: !10991)
!10993 = !DILocation(line: 754, column: 17, scope: !10991)
!10994 = !DILocation(line: 755, column: 17, scope: !10991)
!10995 = !DILocation(line: 756, column: 17, scope: !10991)
!10996 = !DILocation(line: 757, column: 17, scope: !10991)
!10997 = !DILocation(line: 758, column: 17, scope: !10991)
!10998 = !DILocation(line: 759, column: 17, scope: !10991)
!10999 = !DILocation(line: 760, column: 17, scope: !10991)
!11000 = !DILocation(line: 761, column: 17, scope: !10991)
!11001 = !DILocation(line: 751, column: 3, scope: !10991)
!11002 = !DILocation(line: 763, column: 16, scope: !10991)
!11003 = !DILocation(line: 763, column: 29, scope: !10991)
!11004 = !DILocation(line: 763, column: 39, scope: !10991)
!11005 = !DILocation(line: 750, column: 2, scope: !10978)
!11006 = !DILocation(line: 750, column: 2, scope: !10981)
!11007 = distinct !{!11007, !10983, !11008}
!11008 = !DILocation(line: 764, column: 2, scope: !10955)
!11009 = !DILocation(line: 781, column: 2, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !1907, line: 781, column: 2)
!11011 = distinct !DILexicalBlock(scope: !10987, file: !1907, line: 781, column: 2)
!11012 = !DILocation(line: 781, column: 2, scope: !10988)
!11013 = !DILocation(line: 781, column: 2, scope: !10973)
!11014 = !DILocation(line: 787, column: 2, scope: !10952)
!11015 = !DILocation(line: 788, column: 1, scope: !10952)
!11016 = !DILocation(line: 782, column: 20, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !1907, line: 782, column: 7)
!11018 = distinct !DILexicalBlock(scope: !10989, file: !1907, line: 781, column: 38)
!11019 = !DILocation(line: 782, column: 31, scope: !11017)
!11020 = !DILocation(line: 782, column: 7, scope: !11018)
!11021 = !DILocation(line: 783, column: 37, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11017, file: !1907, line: 782, column: 51)
!11023 = !DILocation(line: 784, column: 10, scope: !11022)
!11024 = !DILocation(line: 783, column: 4, scope: !11022)
!11025 = !DILocation(line: 785, column: 3, scope: !11022)
!11026 = !DILocation(line: 781, column: 2, scope: !10989)
!11027 = !DILocation(line: 781, column: 2, scope: !11011)
!11028 = distinct !{!11028, !11013, !11029}
!11029 = !DILocation(line: 786, column: 2, scope: !10973)
!11030 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3158, file: !3158, line: 403, type: !3159, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11031)
!11031 = !{!11032}
!11032 = !DILocalVariable(name: "t", arg: 1, scope: !11030, file: !3158, line: 403, type: !111)
!11033 = !DILocation(line: 0, scope: !11030)
!11034 = !DILocalVariable(name: "t", arg: 1, scope: !11035, file: !3158, line: 102, type: !111)
!11035 = distinct !DISubprogram(name: "z_tmcvt", scope: !3158, file: !3158, line: 102, type: !3166, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11036)
!11036 = !{!11034, !11037, !11038, !11039, !11040, !11041, !11042, !11043, !11044, !11045, !11046}
!11037 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11035, file: !3158, line: 102, type: !110)
!11038 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11035, file: !3158, line: 103, type: !110)
!11039 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11035, file: !3158, line: 103, type: !754)
!11040 = !DILocalVariable(name: "result32", arg: 5, scope: !11035, file: !3158, line: 104, type: !754)
!11041 = !DILocalVariable(name: "round_up", arg: 6, scope: !11035, file: !3158, line: 104, type: !754)
!11042 = !DILocalVariable(name: "round_off", arg: 7, scope: !11035, file: !3158, line: 105, type: !754)
!11043 = !DILocalVariable(name: "mul_ratio", scope: !11035, file: !3158, line: 107, type: !754)
!11044 = !DILocalVariable(name: "div_ratio", scope: !11035, file: !3158, line: 109, type: !754)
!11045 = !DILocalVariable(name: "off", scope: !11035, file: !3158, line: 116, type: !111)
!11046 = !DILocalVariable(name: "rdivisor", scope: !11047, file: !3158, line: 119, type: !110)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !3158, line: 118, column: 18)
!11048 = distinct !DILexicalBlock(scope: !11035, file: !3158, line: 118, column: 6)
!11049 = !DILocation(line: 0, scope: !11035, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 406, column: 9, scope: !11030)
!11051 = !DILocation(line: 145, column: 13, scope: !11052, inlinedAt: !11050)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !3158, line: 144, column: 10)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !3158, line: 142, column: 7)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !3158, line: 141, column: 24)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !3158, line: 141, column: 13)
!11056 = distinct !DILexicalBlock(scope: !11035, file: !3158, line: 134, column: 6)
!11057 = !DILocation(line: 406, column: 2, scope: !11030)
!11058 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1907, file: !1907, line: 817, type: !4273, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11059)
!11059 = !{!11060, !11061, !11062, !11063}
!11060 = !DILocalVariable(name: "entry", arg: 1, scope: !11058, file: !1907, line: 817, type: !215)
!11061 = !DILocalVariable(name: "p1", arg: 2, scope: !11058, file: !1907, line: 818, type: !108)
!11062 = !DILocalVariable(name: "p2", arg: 3, scope: !11058, file: !1907, line: 818, type: !108)
!11063 = !DILocalVariable(name: "p3", arg: 4, scope: !11058, file: !1907, line: 818, type: !108)
!11064 = !DILocation(line: 0, scope: !11058)
!11065 = !DILocation(line: 822, column: 2, scope: !11058)
!11066 = !DILocation(line: 822, column: 17, scope: !11058)
!11067 = !DILocation(line: 822, column: 30, scope: !11058)
!11068 = !DILocation(line: 823, column: 2, scope: !11058)
!11069 = !DILocation(line: 825, column: 2, scope: !11058)
!11070 = !DILocation(line: 825, column: 18, scope: !11058)
!11071 = !DILocation(line: 825, column: 25, scope: !11058)
!11072 = !DILocation(line: 826, column: 18, scope: !11058)
!11073 = !DILocation(line: 826, column: 29, scope: !11058)
!11074 = !DILocation(line: 827, column: 18, scope: !11058)
!11075 = !DILocation(line: 827, column: 29, scope: !11058)
!11076 = !DILocation(line: 828, column: 18, scope: !11058)
!11077 = !DILocation(line: 828, column: 29, scope: !11058)
!11078 = !DILocation(line: 845, column: 2, scope: !11058)
!11079 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1907, file: !1907, line: 888, type: !11080, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11082)
!11080 = !DISubroutineType(types: !11081)
!11081 = !{!109, !1911}
!11082 = !{!11083}
!11083 = !DILocalVariable(name: "thread", arg: 1, scope: !11079, file: !1907, line: 888, type: !1911)
!11084 = !DILocation(line: 0, scope: !11079)
!11085 = !DILocation(line: 893, column: 2, scope: !11079)
!11086 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1907, file: !1907, line: 897, type: !11087, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11089)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{!109, !1911, !32}
!11089 = !{!11090, !11091}
!11090 = !DILocalVariable(name: "thread", arg: 1, scope: !11086, file: !1907, line: 897, type: !1911)
!11091 = !DILocalVariable(name: "options", arg: 2, scope: !11086, file: !1907, line: 897, type: !32)
!11092 = !DILocation(line: 0, scope: !11086)
!11093 = !DILocation(line: 902, column: 2, scope: !11086)
!11094 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1907, file: !1907, line: 1072, type: !11095, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11100)
!11095 = !DISubroutineType(types: !11096)
!11096 = !{!109, !1910, !11097}
!11097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11098, size: 32)
!11098 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !145, line: 234, baseType: !11099)
!11099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !145, line: 192, elements: !1817)
!11100 = !{!11101, !11102}
!11101 = !DILocalVariable(name: "thread", arg: 1, scope: !11094, file: !1907, line: 1072, type: !1910)
!11102 = !DILocalVariable(name: "stats", arg: 2, scope: !11094, file: !1907, line: 1073, type: !11097)
!11103 = !DILocation(line: 0, scope: !11094)
!11104 = !DILocation(line: 1075, column: 14, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11094, file: !1907, line: 1075, column: 6)
!11106 = !DILocation(line: 1075, column: 23, scope: !11105)
!11107 = !DILocation(line: 1086, column: 1, scope: !11094)
!11108 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1907, file: !1907, line: 1088, type: !11109, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !11111)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{!109, !11097}
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "stats", arg: 1, scope: !11108, file: !1907, line: 1088, type: !11097)
!11113 = !DILocation(line: 0, scope: !11108)
!11114 = !DILocation(line: 1094, column: 12, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11108, file: !1907, line: 1094, column: 6)
!11116 = !DILocation(line: 1120, column: 1, scope: !11108)
!11117 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11118, file: !11118, line: 20, type: !2930, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !1817)
!11118 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11119 = !DILocation(line: 30, column: 2, scope: !11117)
!11120 = !DILocation(line: 31, column: 1, scope: !11117)
!11121 = distinct !DISubprogram(name: "idle", scope: !11118, file: !11118, line: 33, type: !218, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !11122)
!11122 = !{!11123, !11124, !11125}
!11123 = !DILocalVariable(name: "unused1", arg: 1, scope: !11121, file: !11118, line: 33, type: !108)
!11124 = !DILocalVariable(name: "unused2", arg: 2, scope: !11121, file: !11118, line: 33, type: !108)
!11125 = !DILocalVariable(name: "unused3", arg: 3, scope: !11121, file: !11118, line: 33, type: !108)
!11126 = !DILocation(line: 0, scope: !11121)
!11127 = !DILocation(line: 39, column: 2, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !11118, line: 39, column: 2)
!11129 = distinct !DILexicalBlock(scope: !11121, file: !11118, line: 39, column: 2)
!11130 = !DILocation(line: 39, column: 2, scope: !11129)
!11131 = !DILocation(line: 39, column: 2, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11128, file: !11118, line: 39, column: 2)
!11133 = !DILocation(line: 55, column: 2, scope: !11134, inlinedAt: !11138)
!11134 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !11135)
!11135 = !{!11136, !11137}
!11136 = !DILocalVariable(name: "key", scope: !11134, file: !6050, line: 44, type: !32)
!11137 = !DILocalVariable(name: "tmp", scope: !11134, file: !6050, line: 53, type: !32)
!11138 = distinct !DILocation(line: 62, column: 10, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11121, file: !11118, line: 41, column: 15)
!11140 = !{i64 2843472}
!11141 = !DILocation(line: 0, scope: !11134, inlinedAt: !11138)
!11142 = !DILocation(line: 86, column: 3, scope: !11139)
!11143 = !DILocation(line: 41, column: 2, scope: !11121)
!11144 = distinct !{!11144, !11143, !11145}
!11145 = !DILocation(line: 105, column: 2, scope: !11121)
!11146 = distinct !DISubprogram(name: "k_cpu_idle", scope: !119, file: !119, line: 5627, type: !2930, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !1817)
!11147 = !DILocation(line: 5629, column: 2, scope: !11146)
!11148 = !DILocation(line: 5630, column: 1, scope: !11146)
!11149 = !DISubprogram(name: "arch_cpu_idle", scope: !216, file: !216, line: 167, type: !2930, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1817)
!11150 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2128, file: !2128, line: 49, type: !11151, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11160)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{!109, !11153}
!11153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11154, size: 32)
!11154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !11155)
!11155 = !{!11156, !11157, !11158, !11159}
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11154, file: !119, line: 2722, baseType: !2054, size: 64)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !11154, file: !119, line: 2724, baseType: !2036, size: 32, offset: 64)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !11154, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !11154, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!11160 = !{!11161}
!11161 = !DILocalVariable(name: "mutex", arg: 1, scope: !11150, file: !2128, line: 49, type: !11153)
!11162 = !DILocation(line: 0, scope: !11150)
!11163 = !DILocation(line: 51, column: 9, scope: !11150)
!11164 = !DILocation(line: 51, column: 15, scope: !11150)
!11165 = !DILocation(line: 52, column: 9, scope: !11150)
!11166 = !DILocation(line: 52, column: 20, scope: !11150)
!11167 = !DILocation(line: 54, column: 23, scope: !11150)
!11168 = !DILocation(line: 54, column: 2, scope: !11150)
!11169 = !DILocation(line: 60, column: 2, scope: !11150)
!11170 = distinct !DISubprogram(name: "z_waitq_init", scope: !10789, file: !10789, line: 47, type: !11171, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11173)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{null, !2053}
!11173 = !{!11174}
!11174 = !DILocalVariable(name: "w", arg: 1, scope: !11170, file: !10789, line: 47, type: !2053)
!11175 = !DILocation(line: 0, scope: !11170)
!11176 = !DILocation(line: 49, column: 21, scope: !11170)
!11177 = !DILocation(line: 49, column: 2, scope: !11170)
!11178 = !DILocation(line: 50, column: 1, scope: !11170)
!11179 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !11180, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11183)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{null, !11182}
!11182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "list", arg: 1, scope: !11179, file: !128, line: 197, type: !11182)
!11185 = !DILocation(line: 0, scope: !11179)
!11186 = !DILocation(line: 199, column: 8, scope: !11179)
!11187 = !DILocation(line: 199, column: 13, scope: !11179)
!11188 = !DILocation(line: 200, column: 8, scope: !11179)
!11189 = !DILocation(line: 200, column: 13, scope: !11179)
!11190 = !DILocation(line: 201, column: 1, scope: !11179)
!11191 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2128, file: !2128, line: 95, type: !11192, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11198)
!11192 = !DISubroutineType(types: !11193)
!11193 = !{!109, !11153, !11194}
!11194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !11195)
!11195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !11196)
!11196 = !{!11197}
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11195, file: !105, line: 66, baseType: !104, size: 64)
!11198 = !{!11199, !11200, !11201, !11202, !11207, !11208, !11209}
!11199 = !DILocalVariable(name: "mutex", arg: 1, scope: !11191, file: !2128, line: 95, type: !11153)
!11200 = !DILocalVariable(name: "timeout", arg: 2, scope: !11191, file: !2128, line: 95, type: !11194)
!11201 = !DILocalVariable(name: "new_prio", scope: !11191, file: !2128, line: 97, type: !109)
!11202 = !DILocalVariable(name: "key", scope: !11191, file: !2128, line: 98, type: !11203)
!11203 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !248, line: 106, baseType: !11204)
!11204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !248, line: 32, size: 32, elements: !11205)
!11205 = !{!11206}
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11204, file: !248, line: 33, baseType: !109, size: 32)
!11207 = !DILocalVariable(name: "resched", scope: !11191, file: !2128, line: 99, type: !754)
!11208 = !DILocalVariable(name: "got_mutex", scope: !11191, file: !2128, line: 146, type: !109)
!11209 = !DILocalVariable(name: "waiter", scope: !11210, file: !2128, line: 169, type: !2036)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !2128, line: 168, column: 36)
!11211 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 168, column: 6)
!11212 = !DILocation(line: 0, scope: !11191)
!11213 = !DILocation(line: 1031, column: 3, scope: !11214, inlinedAt: !11217)
!11214 = distinct !DISubprogram(name: "__get_IPSR", scope: !5931, file: !5931, line: 1027, type: !3202, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11215)
!11215 = !{!11216}
!11216 = !DILocalVariable(name: "result", scope: !11214, file: !5931, line: 1029, type: !110)
!11217 = distinct !DILocation(line: 48, column: 10, scope: !11218, inlinedAt: !11219)
!11218 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6714, file: !6714, line: 46, type: !6715, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !1817)
!11219 = distinct !DILocation(line: 101, column: 2, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !2128, line: 101, column: 2)
!11221 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 101, column: 2)
!11222 = !{i64 6975286}
!11223 = !DILocation(line: 0, scope: !11214, inlinedAt: !11217)
!11224 = !DILocation(line: 48, column: 9, scope: !11218, inlinedAt: !11219)
!11225 = !DILocation(line: 101, column: 2, scope: !11221)
!11226 = !DILocation(line: 101, column: 2, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11220, file: !2128, line: 101, column: 2)
!11228 = !DILocalVariable(name: "l", arg: 1, scope: !11229, file: !248, line: 136, type: !11232)
!11229 = distinct !DISubprogram(name: "k_spin_lock", scope: !248, file: !248, line: 136, type: !11230, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11233)
!11230 = !DISubroutineType(types: !11231)
!11231 = !{!11203, !11232}
!11232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!11233 = !{!11228, !11234}
!11234 = !DILocalVariable(name: "k", scope: !11229, file: !248, line: 139, type: !11203)
!11235 = !DILocation(line: 0, scope: !11229, inlinedAt: !11236)
!11236 = distinct !DILocation(line: 105, column: 8, scope: !11191)
!11237 = !DILocation(line: 55, column: 2, scope: !11238, inlinedAt: !11242)
!11238 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11239)
!11239 = !{!11240, !11241}
!11240 = !DILocalVariable(name: "key", scope: !11238, file: !6050, line: 44, type: !32)
!11241 = !DILocalVariable(name: "tmp", scope: !11238, file: !6050, line: 53, type: !32)
!11242 = distinct !DILocation(line: 145, column: 10, scope: !11229, inlinedAt: !11236)
!11243 = !{i64 2847880}
!11244 = !DILocation(line: 0, scope: !11238, inlinedAt: !11242)
!11245 = !DILocation(line: 148, column: 2, scope: !11246, inlinedAt: !11236)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !248, line: 148, column: 2)
!11247 = distinct !DILexicalBlock(scope: !11229, file: !248, line: 148, column: 2)
!11248 = !DILocation(line: 148, column: 2, scope: !11247, inlinedAt: !11236)
!11249 = !DILocation(line: 148, column: 2, scope: !11250, inlinedAt: !11236)
!11250 = distinct !DILexicalBlock(scope: !11246, file: !248, line: 148, column: 2)
!11251 = !DILocation(line: 160, column: 2, scope: !11229, inlinedAt: !11236)
!11252 = !DILocation(line: 107, column: 6, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 107, column: 6)
!11254 = !DILocation(line: 107, column: 6, scope: !11191)
!11255 = !{!"branch_weights", i32 2000, i32 1}
!11256 = !DILocation(line: 110, column: 6, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11253, file: !2128, line: 107, column: 71)
!11258 = !DILocation(line: 110, column: 21, scope: !11257)
!11259 = !DILocation(line: 109, column: 28, scope: !11257)
!11260 = !DILocation(line: 111, column: 13, scope: !11257)
!11261 = !DILocation(line: 114, column: 18, scope: !11257)
!11262 = !DILocation(line: 109, column: 10, scope: !11257)
!11263 = !DILocation(line: 109, column: 26, scope: !11257)
!11264 = !DILocation(line: 113, column: 20, scope: !11257)
!11265 = !DILocation(line: 114, column: 10, scope: !11257)
!11266 = !DILocation(line: 114, column: 16, scope: !11257)
!11267 = !DILocalVariable(name: "key", arg: 2, scope: !11268, file: !248, line: 190, type: !11203)
!11268 = distinct !DISubprogram(name: "k_spin_unlock", scope: !248, file: !248, line: 189, type: !11269, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11271)
!11269 = !DISubroutineType(types: !11270)
!11270 = !{null, !11232, !11203}
!11271 = !{!11272, !11267}
!11272 = !DILocalVariable(name: "l", arg: 1, scope: !11268, file: !248, line: 189, type: !11232)
!11273 = !DILocation(line: 0, scope: !11268, inlinedAt: !11274)
!11274 = distinct !DILocation(line: 120, column: 3, scope: !11257)
!11275 = !DILocation(line: 194, column: 2, scope: !11276, inlinedAt: !11274)
!11276 = distinct !DILexicalBlock(scope: !11277, file: !248, line: 194, column: 2)
!11277 = distinct !DILexicalBlock(scope: !11268, file: !248, line: 194, column: 2)
!11278 = !DILocation(line: 194, column: 2, scope: !11277, inlinedAt: !11274)
!11279 = !DILocation(line: 194, column: 2, scope: !11280, inlinedAt: !11274)
!11280 = distinct !DILexicalBlock(scope: !11276, file: !248, line: 194, column: 2)
!11281 = !DILocalVariable(name: "key", arg: 1, scope: !11282, file: !6050, line: 84, type: !32)
!11282 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11283)
!11283 = !{!11281}
!11284 = !DILocation(line: 0, scope: !11282, inlinedAt: !11285)
!11285 = distinct !DILocation(line: 215, column: 2, scope: !11268, inlinedAt: !11274)
!11286 = !DILocation(line: 95, column: 2, scope: !11282, inlinedAt: !11285)
!11287 = !{i64 2848697}
!11288 = !DILocation(line: 124, column: 3, scope: !11257)
!11289 = !DILocation(line: 127, column: 6, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 127, column: 6)
!11291 = !DILocation(line: 127, column: 6, scope: !11191)
!11292 = !{!"branch_weights", i32 1, i32 2000}
!11293 = !DILocation(line: 0, scope: !11268, inlinedAt: !11294)
!11294 = distinct !DILocation(line: 128, column: 3, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11290, file: !2128, line: 127, column: 50)
!11296 = !DILocation(line: 194, column: 2, scope: !11276, inlinedAt: !11294)
!11297 = !DILocation(line: 194, column: 2, scope: !11277, inlinedAt: !11294)
!11298 = !DILocation(line: 194, column: 2, scope: !11280, inlinedAt: !11294)
!11299 = !DILocation(line: 0, scope: !11282, inlinedAt: !11300)
!11300 = distinct !DILocation(line: 215, column: 2, scope: !11268, inlinedAt: !11294)
!11301 = !DILocation(line: 95, column: 2, scope: !11282, inlinedAt: !11300)
!11302 = !DILocation(line: 132, column: 3, scope: !11295)
!11303 = !DILocation(line: 137, column: 53, scope: !11191)
!11304 = !DILocation(line: 137, column: 38, scope: !11191)
!11305 = !DILocation(line: 138, column: 29, scope: !11191)
!11306 = !DILocation(line: 138, column: 10, scope: !11191)
!11307 = !DILocation(line: 137, column: 13, scope: !11191)
!11308 = !DILocation(line: 142, column: 6, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 142, column: 6)
!11310 = !DILocation(line: 142, column: 6, scope: !11191)
!11311 = !DILocation(line: 143, column: 13, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11309, file: !2128, line: 142, column: 59)
!11313 = !DILocation(line: 144, column: 2, scope: !11312)
!11314 = !DILocation(line: 146, column: 50, scope: !11191)
!11315 = !DILocation(line: 146, column: 18, scope: !11191)
!11316 = !DILocation(line: 153, column: 16, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 153, column: 6)
!11318 = !DILocation(line: 153, column: 6, scope: !11191)
!11319 = !DILocation(line: 0, scope: !11229, inlinedAt: !11320)
!11320 = distinct !DILocation(line: 162, column: 8, scope: !11191)
!11321 = !DILocation(line: 55, column: 2, scope: !11238, inlinedAt: !11322)
!11322 = distinct !DILocation(line: 145, column: 10, scope: !11229, inlinedAt: !11320)
!11323 = !DILocation(line: 0, scope: !11238, inlinedAt: !11322)
!11324 = !DILocation(line: 148, column: 2, scope: !11246, inlinedAt: !11320)
!11325 = !DILocation(line: 148, column: 2, scope: !11247, inlinedAt: !11320)
!11326 = !DILocation(line: 148, column: 2, scope: !11250, inlinedAt: !11320)
!11327 = !DILocation(line: 160, column: 2, scope: !11229, inlinedAt: !11320)
!11328 = !DILocation(line: 168, column: 6, scope: !11211)
!11329 = !DILocation(line: 168, column: 6, scope: !11191)
!11330 = !DILocation(line: 169, column: 29, scope: !11210)
!11331 = !DILocation(line: 0, scope: !11210)
!11332 = !DILocation(line: 171, column: 22, scope: !11210)
!11333 = !DILocation(line: 171, column: 14, scope: !11210)
!11334 = !DILocation(line: 172, column: 42, scope: !11210)
!11335 = !DILocation(line: 172, column: 29, scope: !11210)
!11336 = !DILocation(line: 172, column: 55, scope: !11210)
!11337 = !DILocation(line: 172, column: 4, scope: !11210)
!11338 = !DILocation(line: 173, column: 11, scope: !11210)
!11339 = !DILocation(line: 177, column: 13, scope: !11210)
!11340 = !DILocation(line: 177, column: 48, scope: !11210)
!11341 = !DILocation(line: 180, column: 6, scope: !11191)
!11342 = !DILocation(line: 181, column: 3, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !2128, line: 180, column: 15)
!11344 = distinct !DILexicalBlock(scope: !11191, file: !2128, line: 180, column: 6)
!11345 = !DILocation(line: 182, column: 2, scope: !11343)
!11346 = !DILocation(line: 0, scope: !11268, inlinedAt: !11347)
!11347 = distinct !DILocation(line: 183, column: 3, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11344, file: !2128, line: 182, column: 9)
!11349 = !DILocation(line: 194, column: 2, scope: !11276, inlinedAt: !11347)
!11350 = !DILocation(line: 194, column: 2, scope: !11277, inlinedAt: !11347)
!11351 = !DILocation(line: 194, column: 2, scope: !11280, inlinedAt: !11347)
!11352 = !DILocation(line: 0, scope: !11282, inlinedAt: !11353)
!11353 = distinct !DILocation(line: 215, column: 2, scope: !11268, inlinedAt: !11347)
!11354 = !DILocation(line: 95, column: 2, scope: !11282, inlinedAt: !11353)
!11355 = !DILocation(line: 189, column: 1, scope: !11191)
!11356 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2128, file: !2128, line: 72, type: !11357, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!1011, !1011, !1011}
!11359 = !{!11360, !11361, !11362}
!11360 = !DILocalVariable(name: "target", arg: 1, scope: !11356, file: !2128, line: 72, type: !1011)
!11361 = !DILocalVariable(name: "limit", arg: 2, scope: !11356, file: !2128, line: 72, type: !1011)
!11362 = !DILocalVariable(name: "new_prio", scope: !11356, file: !2128, line: 74, type: !109)
!11363 = !DILocation(line: 0, scope: !11356)
!11364 = !DILocation(line: 74, column: 17, scope: !11356)
!11365 = !DILocation(line: 76, column: 13, scope: !11356)
!11366 = !DILocation(line: 78, column: 2, scope: !11356)
!11367 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10191, file: !10191, line: 211, type: !11368, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11370)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!754, !109, !109}
!11370 = !{!11371, !11372}
!11371 = !DILocalVariable(name: "prio", arg: 1, scope: !11367, file: !10191, line: 211, type: !109)
!11372 = !DILocalVariable(name: "test_prio", arg: 2, scope: !11367, file: !10191, line: 211, type: !109)
!11373 = !DILocation(line: 0, scope: !11367)
!11374 = !DILocation(line: 213, column: 9, scope: !11367)
!11375 = !DILocation(line: 213, column: 2, scope: !11367)
!11376 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2128, file: !2128, line: 81, type: !11377, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11379)
!11377 = !DISubroutineType(types: !11378)
!11378 = !{!754, !11153, !1011}
!11379 = !{!11380, !11381}
!11380 = !DILocalVariable(name: "mutex", arg: 1, scope: !11376, file: !2128, line: 81, type: !11153)
!11381 = !DILocalVariable(name: "new_prio", arg: 2, scope: !11376, file: !2128, line: 81, type: !1011)
!11382 = !DILocation(line: 0, scope: !11376)
!11383 = !DILocation(line: 83, column: 13, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11376, file: !2128, line: 83, column: 6)
!11385 = !DILocation(line: 83, column: 25, scope: !11384)
!11386 = !DILocation(line: 83, column: 6, scope: !11384)
!11387 = !DILocation(line: 83, column: 30, scope: !11384)
!11388 = !DILocation(line: 83, column: 6, scope: !11376)
!11389 = !DILocation(line: 90, column: 10, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11384, file: !2128, line: 83, column: 43)
!11391 = !DILocation(line: 90, column: 3, scope: !11390)
!11392 = !DILocation(line: 93, column: 1, scope: !11376)
!11393 = distinct !DISubprogram(name: "z_waitq_head", scope: !10789, file: !10789, line: 52, type: !11394, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11396)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!2036, !2053}
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "w", arg: 1, scope: !11393, file: !10789, line: 52, type: !2053)
!11398 = !DILocation(line: 0, scope: !11393)
!11399 = !DILocation(line: 54, column: 52, scope: !11393)
!11400 = !DILocation(line: 54, column: 28, scope: !11393)
!11401 = !DILocation(line: 54, column: 9, scope: !11393)
!11402 = !DILocation(line: 54, column: 2, scope: !11393)
!11403 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !11404, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11406)
!11404 = !DISubroutineType(types: !11405)
!11405 = !{!2021, !11182}
!11406 = !{!11407}
!11407 = !DILocalVariable(name: "list", arg: 1, scope: !11403, file: !128, line: 294, type: !11182)
!11408 = !DILocation(line: 0, scope: !11403)
!11409 = !DILocation(line: 296, column: 9, scope: !11403)
!11410 = !DILocation(line: 296, column: 49, scope: !11403)
!11411 = !DILocation(line: 296, column: 2, scope: !11403)
!11412 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !11413, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11415)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!754, !11182}
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "list", arg: 1, scope: !11412, file: !128, line: 266, type: !11182)
!11417 = !DILocation(line: 0, scope: !11412)
!11418 = !DILocation(line: 268, column: 15, scope: !11412)
!11419 = !DILocation(line: 268, column: 20, scope: !11412)
!11420 = !DILocation(line: 268, column: 2, scope: !11412)
!11421 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10191, file: !10191, line: 206, type: !11368, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11422)
!11422 = !{!11423, !11424}
!11423 = !DILocalVariable(name: "prio1", arg: 1, scope: !11421, file: !10191, line: 206, type: !109)
!11424 = !DILocalVariable(name: "prio2", arg: 2, scope: !11421, file: !10191, line: 206, type: !109)
!11425 = !DILocation(line: 0, scope: !11421)
!11426 = !DILocation(line: 208, column: 15, scope: !11421)
!11427 = !DILocation(line: 208, column: 2, scope: !11421)
!11428 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !10191, file: !10191, line: 186, type: !282, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11429)
!11429 = !{!11430}
!11430 = !DILocalVariable(name: "prio", arg: 1, scope: !11428, file: !10191, line: 186, type: !109)
!11431 = !DILocation(line: 0, scope: !11428)
!11432 = !DILocation(line: 188, column: 9, scope: !11428)
!11433 = !DILocation(line: 188, column: 2, scope: !11428)
!11434 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !10191, file: !10191, line: 181, type: !11435, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!754, !109}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "prio", arg: 1, scope: !11434, file: !10191, line: 181, type: !109)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 183, column: 14, scope: !11434)
!11441 = !DILocation(line: 183, column: 2, scope: !11434)
!11442 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2128, file: !2128, line: 201, type: !11151, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11443)
!11443 = !{!11444, !11445, !11446, !11447}
!11444 = !DILocalVariable(name: "mutex", arg: 1, scope: !11442, file: !2128, line: 201, type: !11153)
!11445 = !DILocalVariable(name: "new_owner", scope: !11442, file: !2128, line: 203, type: !2036)
!11446 = !DILocalVariable(name: "key", scope: !11442, file: !2128, line: 242, type: !11203)
!11447 = !DILabel(scope: !11442, name: "k_mutex_unlock_return", file: !2128, line: 270)
!11448 = !DILocation(line: 0, scope: !11442)
!11449 = !DILocation(line: 1031, column: 3, scope: !11214, inlinedAt: !11450)
!11450 = distinct !DILocation(line: 48, column: 10, scope: !11218, inlinedAt: !11451)
!11451 = distinct !DILocation(line: 205, column: 2, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !2128, line: 205, column: 2)
!11453 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 205, column: 2)
!11454 = !DILocation(line: 0, scope: !11214, inlinedAt: !11450)
!11455 = !DILocation(line: 48, column: 9, scope: !11218, inlinedAt: !11451)
!11456 = !DILocation(line: 205, column: 2, scope: !11453)
!11457 = !DILocation(line: 205, column: 2, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11452, file: !2128, line: 205, column: 2)
!11459 = !DILocation(line: 209, column: 2, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 209, column: 2)
!11461 = !DILocation(line: 209, column: 2, scope: !11442)
!11462 = !DILocation(line: 217, column: 2, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 217, column: 2)
!11464 = !DILocation(line: 217, column: 2, scope: !11442)
!11465 = !DILocation(line: 229, column: 2, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !2128, line: 229, column: 2)
!11467 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 229, column: 2)
!11468 = !DILocation(line: 229, column: 2, scope: !11467)
!11469 = !DILocation(line: 229, column: 2, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !2128, line: 229, column: 2)
!11471 = !DILocation(line: 238, column: 20, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !2128, line: 237, column: 30)
!11473 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 237, column: 6)
!11474 = !DILocation(line: 239, column: 3, scope: !11472)
!11475 = !DILocation(line: 0, scope: !11229, inlinedAt: !11476)
!11476 = distinct !DILocation(line: 242, column: 25, scope: !11442)
!11477 = !DILocation(line: 55, column: 2, scope: !11238, inlinedAt: !11478)
!11478 = distinct !DILocation(line: 145, column: 10, scope: !11229, inlinedAt: !11476)
!11479 = !DILocation(line: 0, scope: !11238, inlinedAt: !11478)
!11480 = !DILocation(line: 148, column: 2, scope: !11246, inlinedAt: !11476)
!11481 = !DILocation(line: 148, column: 2, scope: !11247, inlinedAt: !11476)
!11482 = !DILocation(line: 148, column: 2, scope: !11250, inlinedAt: !11476)
!11483 = !DILocation(line: 160, column: 2, scope: !11229, inlinedAt: !11476)
!11484 = !DILocation(line: 244, column: 34, scope: !11442)
!11485 = !DILocation(line: 244, column: 2, scope: !11442)
!11486 = !DILocation(line: 247, column: 44, scope: !11442)
!11487 = !DILocation(line: 247, column: 14, scope: !11442)
!11488 = !DILocation(line: 249, column: 15, scope: !11442)
!11489 = !DILocation(line: 254, column: 16, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11442, file: !2128, line: 254, column: 6)
!11491 = !DILocation(line: 254, column: 6, scope: !11442)
!11492 = !DILocation(line: 260, column: 44, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11490, file: !2128, line: 254, column: 25)
!11494 = !DILocation(line: 260, column: 28, scope: !11493)
!11495 = !DILocation(line: 260, column: 26, scope: !11493)
!11496 = !DILocalVariable(name: "thread", arg: 1, scope: !11497, file: !10211, line: 65, type: !2036)
!11497 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10211, file: !10211, line: 65, type: !11498, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !11500)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{null, !2036, !32}
!11500 = !{!11496, !11501}
!11501 = !DILocalVariable(name: "value", arg: 2, scope: !11497, file: !10211, line: 65, type: !32)
!11502 = !DILocation(line: 0, scope: !11497, inlinedAt: !11503)
!11503 = distinct !DILocation(line: 261, column: 3, scope: !11493)
!11504 = !DILocation(line: 67, column: 15, scope: !11497, inlinedAt: !11503)
!11505 = !DILocation(line: 67, column: 33, scope: !11497, inlinedAt: !11503)
!11506 = !DILocation(line: 262, column: 3, scope: !11493)
!11507 = !DILocation(line: 263, column: 3, scope: !11493)
!11508 = !DILocation(line: 264, column: 2, scope: !11493)
!11509 = !DILocation(line: 265, column: 21, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11490, file: !2128, line: 264, column: 9)
!11511 = !DILocation(line: 0, scope: !11268, inlinedAt: !11512)
!11512 = distinct !DILocation(line: 266, column: 3, scope: !11510)
!11513 = !DILocation(line: 194, column: 2, scope: !11276, inlinedAt: !11512)
!11514 = !DILocation(line: 194, column: 2, scope: !11277, inlinedAt: !11512)
!11515 = !DILocation(line: 194, column: 2, scope: !11280, inlinedAt: !11512)
!11516 = !DILocation(line: 0, scope: !11282, inlinedAt: !11517)
!11517 = distinct !DILocation(line: 215, column: 2, scope: !11268, inlinedAt: !11512)
!11518 = !DILocation(line: 95, column: 2, scope: !11282, inlinedAt: !11517)
!11519 = !DILocation(line: 274, column: 1, scope: !11442)
!11520 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2243, file: !2243, line: 93, type: !11521, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11523)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{!1011, !2134, !2134}
!11523 = !{!11524, !11525, !11526, !11527}
!11524 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11520, file: !2243, line: 93, type: !2134)
!11525 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11520, file: !2243, line: 94, type: !2134)
!11526 = !DILocalVariable(name: "b1", scope: !11520, file: !2243, line: 97, type: !1011)
!11527 = !DILocalVariable(name: "b2", scope: !11520, file: !2243, line: 98, type: !1011)
!11528 = !DILocation(line: 0, scope: !11520)
!11529 = !DILocation(line: 97, column: 30, scope: !11520)
!11530 = !DILocation(line: 98, column: 30, scope: !11520)
!11531 = !DILocation(line: 100, column: 9, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11520, file: !2243, line: 100, column: 6)
!11533 = !DILocation(line: 100, column: 6, scope: !11520)
!11534 = !DILocation(line: 125, column: 1, scope: !11520)
!11535 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2243, file: !2243, line: 428, type: !11536, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{null, !2134}
!11538 = !{!11539}
!11539 = !DILocalVariable(name: "curr", arg: 1, scope: !11535, file: !2243, line: 428, type: !2134)
!11540 = !DILocation(line: 0, scope: !11535)
!11541 = !DILocation(line: 434, column: 6, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11535, file: !2243, line: 434, column: 6)
!11543 = !DILocation(line: 434, column: 23, scope: !11542)
!11544 = !DILocation(line: 434, column: 6, scope: !11535)
!11545 = !DILocation(line: 435, column: 50, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11542, file: !2243, line: 434, column: 29)
!11547 = !DILocation(line: 435, column: 48, scope: !11546)
!11548 = !DILocation(line: 435, column: 29, scope: !11546)
!11549 = !DILocation(line: 436, column: 24, scope: !11546)
!11550 = !DILocation(line: 436, column: 3, scope: !11546)
!11551 = !DILocation(line: 437, column: 2, scope: !11546)
!11552 = !DILocation(line: 438, column: 1, scope: !11535)
!11553 = distinct !DISubprogram(name: "slice_time", scope: !2243, file: !2243, line: 407, type: !11554, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11556)
!11554 = !DISubroutineType(types: !11555)
!11555 = !{!109, !2134}
!11556 = !{!11557, !11558}
!11557 = !DILocalVariable(name: "curr", arg: 1, scope: !11553, file: !2243, line: 407, type: !2134)
!11558 = !DILocalVariable(name: "ret", scope: !11553, file: !2243, line: 409, type: !109)
!11559 = !DILocation(line: 0, scope: !11553)
!11560 = !DILocation(line: 409, column: 12, scope: !11553)
!11561 = !DILocation(line: 416, column: 2, scope: !11553)
!11562 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2243, file: !2243, line: 440, type: !11563, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11565)
!11563 = !DISubroutineType(types: !11564)
!11564 = !{null, !1011, !109}
!11565 = !{!11566, !11567, !11568, !11574}
!11566 = !DILocalVariable(name: "slice", arg: 1, scope: !11562, file: !2243, line: 440, type: !1011)
!11567 = !DILocalVariable(name: "prio", arg: 2, scope: !11562, file: !2243, line: 440, type: !109)
!11568 = !DILocalVariable(name: "__i", scope: !11569, file: !2243, line: 442, type: !11570)
!11569 = distinct !DILexicalBlock(scope: !11562, file: !2243, line: 442, column: 2)
!11570 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !248, line: 106, baseType: !11571)
!11571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !248, line: 32, size: 32, elements: !11572)
!11572 = !{!11573}
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11571, file: !248, line: 33, baseType: !109, size: 32)
!11574 = !DILocalVariable(name: "__key", scope: !11569, file: !2243, line: 442, type: !11570)
!11575 = !DILocation(line: 0, scope: !11562)
!11576 = !DILocation(line: 0, scope: !11569)
!11577 = !DILocalVariable(name: "l", arg: 1, scope: !11578, file: !248, line: 136, type: !11581)
!11578 = distinct !DISubprogram(name: "k_spin_lock", scope: !248, file: !248, line: 136, type: !11579, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11582)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{!11570, !11581}
!11581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!11582 = !{!11577, !11583}
!11583 = !DILocalVariable(name: "k", scope: !11578, file: !248, line: 139, type: !11570)
!11584 = !DILocation(line: 0, scope: !11578, inlinedAt: !11585)
!11585 = distinct !DILocation(line: 442, column: 2, scope: !11569)
!11586 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !11591)
!11587 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11588)
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "key", scope: !11587, file: !6050, line: 44, type: !32)
!11590 = !DILocalVariable(name: "tmp", scope: !11587, file: !6050, line: 53, type: !32)
!11591 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !11585)
!11592 = !{i64 2887443}
!11593 = !DILocation(line: 0, scope: !11587, inlinedAt: !11591)
!11594 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !11585)
!11595 = distinct !DILexicalBlock(scope: !11596, file: !248, line: 148, column: 2)
!11596 = distinct !DILexicalBlock(scope: !11578, file: !248, line: 148, column: 2)
!11597 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !11585)
!11598 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !11585)
!11599 = distinct !DILexicalBlock(scope: !11595, file: !248, line: 148, column: 2)
!11600 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !11585)
!11601 = !DILocation(line: 443, column: 29, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11603, file: !2243, line: 442, column: 26)
!11603 = distinct !DILexicalBlock(scope: !11569, file: !2243, line: 442, column: 2)
!11604 = !DILocation(line: 444, column: 17, scope: !11602)
!11605 = !DILocation(line: 445, column: 51, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11602, file: !2243, line: 445, column: 7)
!11607 = !DILocation(line: 445, column: 7, scope: !11602)
!11608 = !DILocation(line: 0, scope: !11602)
!11609 = !DILocation(line: 451, column: 18, scope: !11602)
!11610 = !DILocation(line: 452, column: 3, scope: !11602)
!11611 = !DILocalVariable(name: "key", arg: 2, scope: !11612, file: !248, line: 190, type: !11570)
!11612 = distinct !DISubprogram(name: "k_spin_unlock", scope: !248, file: !248, line: 189, type: !11613, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11615)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{null, !11581, !11570}
!11615 = !{!11616, !11611}
!11616 = !DILocalVariable(name: "l", arg: 1, scope: !11612, file: !248, line: 189, type: !11581)
!11617 = !DILocation(line: 0, scope: !11612, inlinedAt: !11618)
!11618 = distinct !DILocation(line: 442, column: 2, scope: !11603)
!11619 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !11618)
!11620 = distinct !DILexicalBlock(scope: !11621, file: !248, line: 194, column: 2)
!11621 = distinct !DILexicalBlock(scope: !11612, file: !248, line: 194, column: 2)
!11622 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !11618)
!11623 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !11618)
!11624 = distinct !DILexicalBlock(scope: !11620, file: !248, line: 194, column: 2)
!11625 = !DILocalVariable(name: "key", arg: 1, scope: !11626, file: !6050, line: 84, type: !32)
!11626 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11627)
!11627 = !{!11625}
!11628 = !DILocation(line: 0, scope: !11626, inlinedAt: !11629)
!11629 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !11618)
!11630 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !11629)
!11631 = !{i64 2888260}
!11632 = !DILocation(line: 454, column: 1, scope: !11562)
!11633 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3158, file: !3158, line: 389, type: !11634, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11636)
!11634 = !DISubroutineType(types: !11635)
!11635 = !{!110, !110}
!11636 = !{!11637}
!11637 = !DILocalVariable(name: "t", arg: 1, scope: !11633, file: !3158, line: 389, type: !110)
!11638 = !DILocation(line: 0, scope: !11633)
!11639 = !DILocalVariable(name: "t", arg: 1, scope: !11640, file: !3158, line: 102, type: !111)
!11640 = distinct !DISubprogram(name: "z_tmcvt", scope: !3158, file: !3158, line: 102, type: !3166, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11641)
!11641 = !{!11639, !11642, !11643, !11644, !11645, !11646, !11647, !11648, !11649, !11650, !11651}
!11642 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11640, file: !3158, line: 102, type: !110)
!11643 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11640, file: !3158, line: 103, type: !110)
!11644 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11640, file: !3158, line: 103, type: !754)
!11645 = !DILocalVariable(name: "result32", arg: 5, scope: !11640, file: !3158, line: 104, type: !754)
!11646 = !DILocalVariable(name: "round_up", arg: 6, scope: !11640, file: !3158, line: 104, type: !754)
!11647 = !DILocalVariable(name: "round_off", arg: 7, scope: !11640, file: !3158, line: 105, type: !754)
!11648 = !DILocalVariable(name: "mul_ratio", scope: !11640, file: !3158, line: 107, type: !754)
!11649 = !DILocalVariable(name: "div_ratio", scope: !11640, file: !3158, line: 109, type: !754)
!11650 = !DILocalVariable(name: "off", scope: !11640, file: !3158, line: 116, type: !111)
!11651 = !DILocalVariable(name: "rdivisor", scope: !11652, file: !3158, line: 119, type: !110)
!11652 = distinct !DILexicalBlock(scope: !11653, file: !3158, line: 118, column: 18)
!11653 = distinct !DILexicalBlock(scope: !11640, file: !3158, line: 118, column: 6)
!11654 = !DILocation(line: 0, scope: !11640, inlinedAt: !11655)
!11655 = distinct !DILocation(line: 392, column: 9, scope: !11633)
!11656 = !DILocation(line: 143, column: 25, scope: !11657, inlinedAt: !11655)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !3158, line: 142, column: 17)
!11658 = distinct !DILexicalBlock(scope: !11659, file: !3158, line: 142, column: 7)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !3158, line: 141, column: 24)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !3158, line: 141, column: 13)
!11661 = distinct !DILexicalBlock(scope: !11640, file: !3158, line: 134, column: 6)
!11662 = !DILocation(line: 392, column: 2, scope: !11633)
!11663 = distinct !DISubprogram(name: "z_time_slice", scope: !2243, file: !2243, line: 502, type: !3248, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11664)
!11664 = !{!11665, !11666}
!11665 = !DILocalVariable(name: "ticks", arg: 1, scope: !11663, file: !2243, line: 502, type: !109)
!11666 = !DILocalVariable(name: "key", scope: !11663, file: !2243, line: 511, type: !11570)
!11667 = !DILocation(line: 0, scope: !11663)
!11668 = !DILocation(line: 0, scope: !11578, inlinedAt: !11669)
!11669 = distinct !DILocation(line: 511, column: 25, scope: !11663)
!11670 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !11671)
!11671 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !11669)
!11672 = !DILocation(line: 0, scope: !11587, inlinedAt: !11671)
!11673 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !11669)
!11674 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !11669)
!11675 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !11669)
!11676 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !11669)
!11677 = !DILocation(line: 514, column: 6, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11663, file: !2243, line: 514, column: 6)
!11679 = !DILocation(line: 514, column: 25, scope: !11678)
!11680 = !DILocation(line: 514, column: 22, scope: !11678)
!11681 = !DILocation(line: 514, column: 6, scope: !11663)
!11682 = !DILocation(line: 515, column: 3, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !2243, line: 514, column: 35)
!11684 = !DILocation(line: 0, scope: !11612, inlinedAt: !11685)
!11685 = distinct !DILocation(line: 516, column: 3, scope: !11683)
!11686 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !11685)
!11687 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !11685)
!11688 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !11685)
!11689 = !DILocation(line: 0, scope: !11626, inlinedAt: !11690)
!11690 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !11685)
!11691 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !11690)
!11692 = !DILocation(line: 517, column: 3, scope: !11683)
!11693 = !DILocation(line: 519, column: 18, scope: !11663)
!11694 = !DILocation(line: 522, column: 6, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11663, file: !2243, line: 522, column: 6)
!11696 = !DILocation(line: 522, column: 27, scope: !11695)
!11697 = !DILocation(line: 522, column: 30, scope: !11695)
!11698 = !DILocation(line: 522, column: 6, scope: !11663)
!11699 = !DILocation(line: 523, column: 30, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !2243, line: 523, column: 7)
!11701 = distinct !DILexicalBlock(scope: !11695, file: !2243, line: 522, column: 51)
!11702 = !DILocation(line: 523, column: 13, scope: !11700)
!11703 = !DILocation(line: 523, column: 7, scope: !11701)
!11704 = !DILocation(line: 530, column: 10, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11700, file: !2243, line: 523, column: 43)
!11706 = !DILocation(line: 531, column: 3, scope: !11705)
!11707 = !DILocation(line: 532, column: 30, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11700, file: !2243, line: 531, column: 10)
!11709 = !DILocation(line: 535, column: 29, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11695, file: !2243, line: 534, column: 9)
!11711 = !DILocation(line: 0, scope: !11612, inlinedAt: !11712)
!11712 = distinct !DILocation(line: 537, column: 2, scope: !11663)
!11713 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !11712)
!11714 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !11712)
!11715 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !11712)
!11716 = !DILocation(line: 0, scope: !11626, inlinedAt: !11717)
!11717 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !11712)
!11718 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !11717)
!11719 = !DILocation(line: 538, column: 1, scope: !11663)
!11720 = distinct !DISubprogram(name: "sliceable", scope: !2243, file: !2243, line: 468, type: !11721, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11723)
!11721 = !DISubroutineType(types: !11722)
!11722 = !{!754, !2134}
!11723 = !{!11724, !11725}
!11724 = !DILocalVariable(name: "thread", arg: 1, scope: !11720, file: !2243, line: 468, type: !2134)
!11725 = !DILocalVariable(name: "ret", scope: !11720, file: !2243, line: 470, type: !754)
!11726 = !DILocation(line: 0, scope: !11720)
!11727 = !DILocation(line: 470, column: 13, scope: !11720)
!11728 = !DILocation(line: 471, column: 3, scope: !11720)
!11729 = !DILocation(line: 471, column: 7, scope: !11720)
!11730 = !DILocation(line: 472, column: 3, scope: !11720)
!11731 = !DILocation(line: 472, column: 37, scope: !11720)
!11732 = !DILocation(line: 472, column: 24, scope: !11720)
!11733 = !DILocation(line: 472, column: 43, scope: !11720)
!11734 = !DILocation(line: 472, column: 7, scope: !11720)
!11735 = !DILocation(line: 473, column: 3, scope: !11720)
!11736 = !DILocation(line: 473, column: 7, scope: !11720)
!11737 = !DILocation(line: 473, column: 6, scope: !11720)
!11738 = !DILocation(line: 479, column: 2, scope: !11720)
!11739 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2243, file: !2243, line: 482, type: !11740, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11742)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{!11570, !11570}
!11742 = !{!11743, !11744}
!11743 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11739, file: !2243, line: 482, type: !11570)
!11744 = !DILocalVariable(name: "curr", scope: !11739, file: !2243, line: 484, type: !2134)
!11745 = !DILocation(line: 0, scope: !11739)
!11746 = !DILocation(line: 484, column: 26, scope: !11739)
!11747 = !DILocation(line: 493, column: 7, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11739, file: !2243, line: 493, column: 6)
!11749 = !DILocation(line: 493, column: 6, scope: !11739)
!11750 = !DILocation(line: 494, column: 3, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11748, file: !2243, line: 493, column: 49)
!11752 = !DILocation(line: 495, column: 2, scope: !11751)
!11753 = !DILocation(line: 496, column: 2, scope: !11739)
!11754 = !DILocation(line: 499, column: 1, scope: !11739)
!11755 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10191, file: !10191, line: 106, type: !11721, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11756)
!11756 = !{!11757, !11758}
!11757 = !DILocalVariable(name: "thread", arg: 1, scope: !11755, file: !10191, line: 106, type: !2134)
!11758 = !DILocalVariable(name: "state", scope: !11755, file: !10191, line: 108, type: !167)
!11759 = !DILocation(line: 0, scope: !11755)
!11760 = !DILocation(line: 108, column: 31, scope: !11755)
!11761 = !DILocation(line: 110, column: 16, scope: !11755)
!11762 = !DILocation(line: 111, column: 41, scope: !11755)
!11763 = !DILocation(line: 110, column: 2, scope: !11755)
!11764 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2243, file: !2243, line: 393, type: !11536, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11765)
!11765 = !{!11766}
!11766 = !DILocalVariable(name: "thread", arg: 1, scope: !11764, file: !2243, line: 393, type: !2134)
!11767 = !DILocation(line: 0, scope: !11764)
!11768 = !DILocation(line: 395, column: 6, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !2243, line: 395, column: 6)
!11770 = !DILocation(line: 395, column: 6, scope: !11764)
!11771 = !DILocalVariable(name: "thread", arg: 1, scope: !11772, file: !2243, line: 264, type: !2134)
!11772 = distinct !DISubprogram(name: "dequeue_thread", scope: !2243, file: !2243, line: 264, type: !11536, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11773)
!11773 = !{!11771}
!11774 = !DILocation(line: 0, scope: !11772, inlinedAt: !11775)
!11775 = distinct !DILocation(line: 396, column: 3, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11769, file: !2243, line: 395, column: 34)
!11777 = !DILocation(line: 266, column: 15, scope: !11772, inlinedAt: !11775)
!11778 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !11775)
!11779 = !DILocalVariable(name: "thread", arg: 1, scope: !11780, file: !2243, line: 232, type: !2134)
!11780 = distinct !DISubprogram(name: "runq_remove", scope: !2243, file: !2243, line: 232, type: !11536, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11781)
!11781 = !{!11779}
!11782 = !DILocation(line: 0, scope: !11780, inlinedAt: !11783)
!11783 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !11775)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !2243, line: 267, column: 35)
!11785 = distinct !DILexicalBlock(scope: !11772, file: !2243, line: 267, column: 6)
!11786 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !11783)
!11787 = !DILocation(line: 397, column: 2, scope: !11776)
!11788 = !DILocalVariable(name: "thread", arg: 1, scope: !11789, file: !2243, line: 250, type: !2134)
!11789 = distinct !DISubprogram(name: "queue_thread", scope: !2243, file: !2243, line: 250, type: !11536, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11790)
!11790 = !{!11788}
!11791 = !DILocation(line: 0, scope: !11789, inlinedAt: !11792)
!11792 = distinct !DILocation(line: 398, column: 2, scope: !11764)
!11793 = !DILocation(line: 252, column: 15, scope: !11789, inlinedAt: !11792)
!11794 = !DILocation(line: 252, column: 28, scope: !11789, inlinedAt: !11792)
!11795 = !DILocalVariable(name: "thread", arg: 1, scope: !11796, file: !2243, line: 227, type: !2134)
!11796 = distinct !DISubprogram(name: "runq_add", scope: !2243, file: !2243, line: 227, type: !11536, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11797)
!11797 = !{!11795}
!11798 = !DILocation(line: 0, scope: !11796, inlinedAt: !11799)
!11799 = distinct !DILocation(line: 254, column: 3, scope: !11800, inlinedAt: !11792)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !2243, line: 253, column: 35)
!11801 = distinct !DILexicalBlock(scope: !11789, file: !2243, line: 253, column: 6)
!11802 = !DILocation(line: 229, column: 2, scope: !11796, inlinedAt: !11799)
!11803 = !DILocation(line: 399, column: 25, scope: !11764)
!11804 = !DILocation(line: 399, column: 22, scope: !11764)
!11805 = !DILocation(line: 399, column: 2, scope: !11764)
!11806 = !DILocation(line: 400, column: 1, scope: !11764)
!11807 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10191, file: !10191, line: 136, type: !11721, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11808)
!11808 = !{!11809}
!11809 = !DILocalVariable(name: "thread", arg: 1, scope: !11807, file: !10191, line: 136, type: !2134)
!11810 = !DILocation(line: 0, scope: !11807)
!11811 = !DILocation(line: 138, column: 9, scope: !11807)
!11812 = !DILocation(line: 138, column: 2, scope: !11807)
!11813 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2243, file: !2243, line: 1198, type: !11814, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11830)
!11814 = !DISubroutineType(types: !11815)
!11815 = !{null, !11816, !2134}
!11816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11817, size: 32)
!11817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !1824, line: 37, size: 128, elements: !11818)
!11818 = !{!11819, !11829}
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !11817, file: !1824, line: 38, baseType: !11820, size: 96)
!11820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !11821)
!11821 = !{!11822, !11823, !11828}
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !11820, file: !157, line: 84, baseType: !2163, size: 32)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !11820, file: !157, line: 85, baseType: !11824, size: 32, offset: 32)
!11824 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !11825)
!11825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11826, size: 32)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!754, !2163, !2163}
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !11820, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !11817, file: !1824, line: 39, baseType: !109, size: 32, offset: 96)
!11830 = !{!11831, !11832}
!11831 = !DILocalVariable(name: "pq", arg: 1, scope: !11813, file: !2243, line: 1198, type: !11816)
!11832 = !DILocalVariable(name: "thread", arg: 2, scope: !11813, file: !2243, line: 1198, type: !2134)
!11833 = !DILocation(line: 0, scope: !11813)
!11834 = !DILocation(line: 1200, column: 2, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !2243, line: 1200, column: 2)
!11836 = distinct !DILexicalBlock(scope: !11813, file: !2243, line: 1200, column: 2)
!11837 = !DILocation(line: 1200, column: 2, scope: !11836)
!11838 = !DILocation(line: 1200, column: 2, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11835, file: !2243, line: 1200, column: 2)
!11840 = !DILocation(line: 1202, column: 17, scope: !11813)
!11841 = !DILocation(line: 1202, column: 37, scope: !11813)
!11842 = !DILocation(line: 1202, column: 2, scope: !11813)
!11843 = !DILocation(line: 1204, column: 16, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11813, file: !2243, line: 1204, column: 6)
!11845 = !DILocation(line: 1204, column: 7, scope: !11844)
!11846 = !DILocation(line: 1204, column: 6, scope: !11813)
!11847 = !DILocation(line: 1205, column: 7, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11844, file: !2243, line: 1204, column: 22)
!11849 = !DILocation(line: 1205, column: 22, scope: !11848)
!11850 = !DILocation(line: 1206, column: 2, scope: !11848)
!11851 = !DILocation(line: 1207, column: 1, scope: !11813)
!11852 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2243, file: !2243, line: 1175, type: !11814, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11853)
!11853 = !{!11854, !11855, !11856, !11857, !11866}
!11854 = !DILocalVariable(name: "pq", arg: 1, scope: !11852, file: !2243, line: 1175, type: !11816)
!11855 = !DILocalVariable(name: "thread", arg: 2, scope: !11852, file: !2243, line: 1175, type: !2134)
!11856 = !DILocalVariable(name: "t", scope: !11852, file: !2243, line: 1177, type: !2134)
!11857 = !DILocalVariable(name: "__f", scope: !11858, file: !2243, line: 1190, type: !11861)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !2243, line: 1190, column: 3)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !2243, line: 1189, column: 27)
!11860 = distinct !DILexicalBlock(scope: !11852, file: !2243, line: 1189, column: 6)
!11861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !11862)
!11862 = !{!11863, !11864, !11865}
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !11861, file: !157, line: 156, baseType: !2239, size: 32)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !11861, file: !157, line: 157, baseType: !799, size: 32, offset: 32)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !11861, file: !157, line: 158, baseType: !1011, size: 32, offset: 64)
!11866 = !DILocalVariable(name: "n", scope: !11867, file: !2243, line: 1190, type: !2163)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !2243, line: 1190, column: 3)
!11868 = distinct !DILexicalBlock(scope: !11858, file: !2243, line: 1190, column: 3)
!11869 = !DILocation(line: 0, scope: !11852)
!11870 = !DILocation(line: 1179, column: 2, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !2243, line: 1179, column: 2)
!11872 = distinct !DILexicalBlock(scope: !11852, file: !2243, line: 1179, column: 2)
!11873 = !DILocation(line: 1179, column: 2, scope: !11872)
!11874 = !DILocation(line: 1179, column: 2, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11871, file: !2243, line: 1179, column: 2)
!11876 = !DILocation(line: 1181, column: 31, scope: !11852)
!11877 = !DILocation(line: 1181, column: 45, scope: !11852)
!11878 = !DILocation(line: 1181, column: 15, scope: !11852)
!11879 = !DILocation(line: 1181, column: 25, scope: !11852)
!11880 = !DILocation(line: 1189, column: 11, scope: !11860)
!11881 = !DILocation(line: 1189, column: 7, scope: !11860)
!11882 = !DILocation(line: 1189, column: 6, scope: !11852)
!11883 = !DILocation(line: 1190, column: 3, scope: !11858)
!11884 = !DILocation(line: 1190, column: 3, scope: !11867)
!11885 = !DILocation(line: 0, scope: !11867)
!11886 = !DILocation(line: 1190, column: 3, scope: !11868)
!11887 = !DILocation(line: 1193, column: 2, scope: !11859)
!11888 = !DILocation(line: 1191, column: 42, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11868, file: !2243, line: 1190, column: 54)
!11890 = !DILocation(line: 1191, column: 12, scope: !11889)
!11891 = !DILocation(line: 1191, column: 22, scope: !11889)
!11892 = distinct !{!11892, !11883, !11893}
!11893 = !DILocation(line: 1192, column: 3, scope: !11858)
!11894 = !DILocation(line: 1195, column: 17, scope: !11852)
!11895 = !DILocation(line: 1195, column: 37, scope: !11852)
!11896 = !DILocation(line: 1195, column: 2, scope: !11852)
!11897 = !DILocation(line: 1196, column: 1, scope: !11852)
!11898 = distinct !DISubprogram(name: "update_cache", scope: !2243, file: !2243, line: 559, type: !3248, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11899)
!11899 = !{!11900, !11901}
!11900 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11898, file: !2243, line: 559, type: !109)
!11901 = !DILocalVariable(name: "thread", scope: !11898, file: !2243, line: 562, type: !2134)
!11902 = !DILocation(line: 0, scope: !11898)
!11903 = !DILocation(line: 239, column: 9, scope: !11904, inlinedAt: !11907)
!11904 = distinct !DISubprogram(name: "runq_best", scope: !2243, file: !2243, line: 237, type: !11905, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!2134}
!11907 = distinct !DILocation(line: 314, column: 28, scope: !11908, inlinedAt: !11911)
!11908 = distinct !DISubprogram(name: "next_up", scope: !2243, file: !2243, line: 312, type: !11905, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11909)
!11909 = !{!11910}
!11910 = !DILocalVariable(name: "thread", scope: !11908, file: !2243, line: 314, type: !2134)
!11911 = distinct !DILocation(line: 562, column: 28, scope: !11898)
!11912 = !DILocation(line: 0, scope: !11908, inlinedAt: !11911)
!11913 = !DILocation(line: 340, column: 17, scope: !11908, inlinedAt: !11911)
!11914 = !DILocation(line: 340, column: 9, scope: !11908, inlinedAt: !11911)
!11915 = !DILocalVariable(name: "thread", arg: 1, scope: !11916, file: !2243, line: 127, type: !2134)
!11916 = distinct !DISubprogram(name: "should_preempt", scope: !2243, file: !2243, line: 127, type: !11917, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11919)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{!754, !2134, !109}
!11919 = !{!11915, !11920}
!11920 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11916, file: !2243, line: 128, type: !109)
!11921 = !DILocation(line: 0, scope: !11916, inlinedAt: !11922)
!11922 = distinct !DILocation(line: 564, column: 6, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11898, file: !2243, line: 564, column: 6)
!11924 = !DILocation(line: 133, column: 17, scope: !11925, inlinedAt: !11922)
!11925 = distinct !DILexicalBlock(scope: !11916, file: !2243, line: 133, column: 6)
!11926 = !DILocation(line: 0, scope: !11923)
!11927 = !DILocation(line: 133, column: 6, scope: !11916, inlinedAt: !11922)
!11928 = !DILocation(line: 137, column: 2, scope: !11929, inlinedAt: !11922)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !2243, line: 137, column: 2)
!11930 = distinct !DILexicalBlock(scope: !11916, file: !2243, line: 137, column: 2)
!11931 = !DILocation(line: 137, column: 2, scope: !11930, inlinedAt: !11922)
!11932 = !DILocation(line: 137, column: 2, scope: !11933, inlinedAt: !11922)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !2243, line: 137, column: 2)
!11934 = !DILocation(line: 140, column: 6, scope: !11935, inlinedAt: !11922)
!11935 = distinct !DILexicalBlock(scope: !11916, file: !2243, line: 140, column: 6)
!11936 = !DILocation(line: 140, column: 6, scope: !11916, inlinedAt: !11922)
!11937 = !DILocation(line: 150, column: 9, scope: !11938, inlinedAt: !11922)
!11938 = distinct !DILexicalBlock(scope: !11916, file: !2243, line: 149, column: 6)
!11939 = !DILocation(line: 149, column: 6, scope: !11916, inlinedAt: !11922)
!11940 = !DILocation(line: 157, column: 6, scope: !11941, inlinedAt: !11922)
!11941 = distinct !DILexicalBlock(scope: !11916, file: !2243, line: 157, column: 6)
!11942 = !DILocation(line: 564, column: 6, scope: !11898)
!11943 = !DILocation(line: 566, column: 14, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !2243, line: 566, column: 7)
!11945 = distinct !DILexicalBlock(scope: !11923, file: !2243, line: 564, column: 42)
!11946 = !DILocation(line: 566, column: 7, scope: !11945)
!11947 = !DILocation(line: 567, column: 4, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !2243, line: 566, column: 27)
!11949 = !DILocation(line: 568, column: 3, scope: !11948)
!11950 = !DILocation(line: 585, column: 1, scope: !11898)
!11951 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2243, file: !2243, line: 1209, type: !11952, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11954)
!11952 = !DISubroutineType(types: !11953)
!11953 = !{!2134, !11816}
!11954 = !{!11955, !11956, !11957}
!11955 = !DILocalVariable(name: "pq", arg: 1, scope: !11951, file: !2243, line: 1209, type: !11816)
!11956 = !DILocalVariable(name: "thread", scope: !11951, file: !2243, line: 1211, type: !2134)
!11957 = !DILocalVariable(name: "n", scope: !11951, file: !2243, line: 1212, type: !2163)
!11958 = !DILocation(line: 0, scope: !11951)
!11959 = !DILocation(line: 1212, column: 37, scope: !11951)
!11960 = !DILocation(line: 1212, column: 21, scope: !11951)
!11961 = !DILocation(line: 1217, column: 2, scope: !11951)
!11962 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10191, file: !10191, line: 115, type: !11721, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11963)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "thread", arg: 1, scope: !11962, file: !10191, line: 115, type: !2134)
!11965 = !DILocation(line: 0, scope: !11962)
!11966 = !DILocation(line: 117, column: 46, scope: !11962)
!11967 = !DILocation(line: 117, column: 10, scope: !11962)
!11968 = !DILocation(line: 117, column: 9, scope: !11962)
!11969 = !DILocation(line: 117, column: 2, scope: !11962)
!11970 = distinct !DISubprogram(name: "is_preempt", scope: !2243, file: !2243, line: 62, type: !11554, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11971)
!11971 = !{!11972}
!11972 = !DILocalVariable(name: "thread", arg: 1, scope: !11970, file: !2243, line: 62, type: !2134)
!11973 = !DILocation(line: 0, scope: !11970)
!11974 = !DILocation(line: 65, column: 22, scope: !11970)
!11975 = !DILocation(line: 65, column: 30, scope: !11970)
!11976 = !DILocation(line: 65, column: 2, scope: !11970)
!11977 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10841, file: !10841, line: 35, type: !11978, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11982)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!754, !11980}
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!11982 = !{!11983}
!11983 = !DILocalVariable(name: "to", arg: 1, scope: !11977, file: !10841, line: 35, type: !11980)
!11984 = !DILocation(line: 0, scope: !11977)
!11985 = !DILocation(line: 37, column: 35, scope: !11977)
!11986 = !DILocation(line: 37, column: 10, scope: !11977)
!11987 = !DILocation(line: 37, column: 9, scope: !11977)
!11988 = !DILocation(line: 37, column: 2, scope: !11977)
!11989 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !11990, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !11994)
!11990 = !DISubroutineType(types: !11991)
!11991 = !{!754, !11992}
!11992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11993, size: 32)
!11993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!11994 = !{!11995}
!11995 = !DILocalVariable(name: "node", arg: 1, scope: !11989, file: !128, line: 225, type: !11992)
!11996 = !DILocation(line: 0, scope: !11989)
!11997 = !DILocation(line: 227, column: 15, scope: !11989)
!11998 = !DILocation(line: 227, column: 20, scope: !11989)
!11999 = !DILocation(line: 227, column: 2, scope: !11989)
!12000 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !12001, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12004)
!12001 = !DISubroutineType(types: !12002)
!12002 = !{!2163, !12003}
!12003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11820, size: 32)
!12004 = !{!12005}
!12005 = !DILocalVariable(name: "tree", arg: 1, scope: !12000, file: !157, line: 115, type: !12003)
!12006 = !DILocation(line: 0, scope: !12000)
!12007 = !DILocation(line: 117, column: 9, scope: !12000)
!12008 = !DILocation(line: 117, column: 2, scope: !12000)
!12009 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10191, file: !10191, line: 83, type: !11721, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12010)
!12010 = !{!12011}
!12011 = !DILocalVariable(name: "thread", arg: 1, scope: !12009, file: !10191, line: 83, type: !2134)
!12012 = !DILocation(line: 0, scope: !12009)
!12013 = !DILocation(line: 89, column: 16, scope: !12009)
!12014 = !DILocation(line: 89, column: 2, scope: !12009)
!12015 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10191, file: !10191, line: 131, type: !12016, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12018)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!754, !2134, !110}
!12018 = !{!12019, !12020}
!12019 = !DILocalVariable(name: "thread", arg: 1, scope: !12015, file: !10191, line: 131, type: !2134)
!12020 = !DILocalVariable(name: "state", arg: 2, scope: !12015, file: !10191, line: 131, type: !110)
!12021 = !DILocation(line: 0, scope: !12015)
!12022 = !DILocation(line: 133, column: 23, scope: !12015)
!12023 = !DILocation(line: 133, column: 10, scope: !12015)
!12024 = !DILocation(line: 133, column: 36, scope: !12015)
!12025 = !DILocation(line: 133, column: 45, scope: !12015)
!12026 = !DILocation(line: 133, column: 2, scope: !12015)
!12027 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10191, file: !10191, line: 211, type: !11368, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12028)
!12028 = !{!12029, !12030}
!12029 = !DILocalVariable(name: "prio", arg: 1, scope: !12027, file: !10191, line: 211, type: !109)
!12030 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12027, file: !10191, line: 211, type: !109)
!12031 = !DILocation(line: 0, scope: !12027)
!12032 = !DILocation(line: 213, column: 9, scope: !12027)
!12033 = !DILocation(line: 213, column: 2, scope: !12027)
!12034 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10191, file: !10191, line: 206, type: !11368, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12035)
!12035 = !{!12036, !12037}
!12036 = !DILocalVariable(name: "prio1", arg: 1, scope: !12034, file: !10191, line: 206, type: !109)
!12037 = !DILocalVariable(name: "prio2", arg: 2, scope: !12034, file: !10191, line: 206, type: !109)
!12038 = !DILocation(line: 0, scope: !12034)
!12039 = !DILocation(line: 208, column: 15, scope: !12034)
!12040 = !DILocation(line: 208, column: 2, scope: !12034)
!12041 = distinct !DISubprogram(name: "z_ready_thread", scope: !2243, file: !2243, line: 635, type: !11536, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12042)
!12042 = !{!12043, !12044, !12046}
!12043 = !DILocalVariable(name: "thread", arg: 1, scope: !12041, file: !2243, line: 635, type: !2134)
!12044 = !DILocalVariable(name: "__i", scope: !12045, file: !2243, line: 637, type: !11570)
!12045 = distinct !DILexicalBlock(scope: !12041, file: !2243, line: 637, column: 2)
!12046 = !DILocalVariable(name: "__key", scope: !12045, file: !2243, line: 637, type: !11570)
!12047 = !DILocation(line: 0, scope: !12041)
!12048 = !DILocation(line: 0, scope: !12045)
!12049 = !DILocation(line: 0, scope: !11578, inlinedAt: !12050)
!12050 = distinct !DILocation(line: 637, column: 2, scope: !12045)
!12051 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12052)
!12052 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12050)
!12053 = !DILocation(line: 0, scope: !11587, inlinedAt: !12052)
!12054 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12050)
!12055 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12050)
!12056 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12050)
!12057 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12050)
!12058 = !DILocation(line: 639, column: 4, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !2243, line: 638, column: 41)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !2243, line: 638, column: 7)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !2243, line: 637, column: 26)
!12062 = distinct !DILexicalBlock(scope: !12045, file: !2243, line: 637, column: 2)
!12063 = !DILocation(line: 0, scope: !11612, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 637, column: 2, scope: !12062)
!12065 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12064)
!12066 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12064)
!12067 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12064)
!12068 = !DILocation(line: 0, scope: !11626, inlinedAt: !12069)
!12069 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12064)
!12070 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12069)
!12071 = !DILocation(line: 642, column: 1, scope: !12041)
!12072 = distinct !DISubprogram(name: "ready_thread", scope: !2243, file: !2243, line: 617, type: !11536, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12073)
!12073 = !{!12074}
!12074 = !DILocalVariable(name: "thread", arg: 1, scope: !12072, file: !2243, line: 617, type: !2134)
!12075 = !DILocation(line: 0, scope: !12072)
!12076 = !DILocation(line: 626, column: 7, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12072, file: !2243, line: 626, column: 6)
!12078 = !DILocation(line: 626, column: 34, scope: !12077)
!12079 = !DILocation(line: 626, column: 37, scope: !12077)
!12080 = !DILocation(line: 626, column: 6, scope: !12072)
!12081 = !DILocation(line: 0, scope: !11789, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 629, column: 3, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12077, file: !2243, line: 626, column: 64)
!12084 = !DILocation(line: 252, column: 15, scope: !11789, inlinedAt: !12082)
!12085 = !DILocation(line: 252, column: 28, scope: !11789, inlinedAt: !12082)
!12086 = !DILocation(line: 0, scope: !11796, inlinedAt: !12087)
!12087 = distinct !DILocation(line: 254, column: 3, scope: !11800, inlinedAt: !12082)
!12088 = !DILocation(line: 229, column: 2, scope: !11796, inlinedAt: !12087)
!12089 = !DILocation(line: 630, column: 3, scope: !12083)
!12090 = !DILocation(line: 632, column: 2, scope: !12083)
!12091 = !DILocation(line: 633, column: 1, scope: !12072)
!12092 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10191, file: !10191, line: 120, type: !11721, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12093)
!12093 = !{!12094}
!12094 = !DILocalVariable(name: "thread", arg: 1, scope: !12092, file: !10191, line: 120, type: !2134)
!12095 = !DILocation(line: 0, scope: !12092)
!12096 = !DILocation(line: 122, column: 12, scope: !12092)
!12097 = !DILocation(line: 122, column: 62, scope: !12092)
!12098 = !DILocation(line: 123, column: 4, scope: !12092)
!12099 = !DILocation(line: 122, column: 2, scope: !12092)
!12100 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2243, file: !2243, line: 644, type: !11536, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12101)
!12101 = !{!12102, !12103, !12105}
!12102 = !DILocalVariable(name: "thread", arg: 1, scope: !12100, file: !2243, line: 644, type: !2134)
!12103 = !DILocalVariable(name: "__i", scope: !12104, file: !2243, line: 646, type: !11570)
!12104 = distinct !DILexicalBlock(scope: !12100, file: !2243, line: 646, column: 2)
!12105 = !DILocalVariable(name: "__key", scope: !12104, file: !2243, line: 646, type: !11570)
!12106 = !DILocation(line: 0, scope: !12100)
!12107 = !DILocation(line: 0, scope: !12104)
!12108 = !DILocation(line: 0, scope: !11578, inlinedAt: !12109)
!12109 = distinct !DILocation(line: 646, column: 2, scope: !12104)
!12110 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12111)
!12111 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12109)
!12112 = !DILocation(line: 0, scope: !11587, inlinedAt: !12111)
!12113 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12109)
!12114 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12109)
!12115 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12109)
!12116 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12109)
!12117 = !DILocation(line: 647, column: 3, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !2243, line: 646, column: 26)
!12119 = distinct !DILexicalBlock(scope: !12104, file: !2243, line: 646, column: 2)
!12120 = !DILocation(line: 0, scope: !11612, inlinedAt: !12121)
!12121 = distinct !DILocation(line: 646, column: 2, scope: !12119)
!12122 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12121)
!12123 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12121)
!12124 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12121)
!12125 = !DILocation(line: 0, scope: !11626, inlinedAt: !12126)
!12126 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12121)
!12127 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12126)
!12128 = !DILocation(line: 649, column: 1, scope: !12100)
!12129 = distinct !DISubprogram(name: "z_sched_start", scope: !2243, file: !2243, line: 651, type: !11536, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12130)
!12130 = !{!12131, !12132}
!12131 = !DILocalVariable(name: "thread", arg: 1, scope: !12129, file: !2243, line: 651, type: !2134)
!12132 = !DILocalVariable(name: "key", scope: !12129, file: !2243, line: 653, type: !11570)
!12133 = !DILocation(line: 0, scope: !12129)
!12134 = !DILocation(line: 0, scope: !11578, inlinedAt: !12135)
!12135 = distinct !DILocation(line: 653, column: 25, scope: !12129)
!12136 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12137)
!12137 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12135)
!12138 = !DILocation(line: 0, scope: !11587, inlinedAt: !12137)
!12139 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12135)
!12140 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12135)
!12141 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12135)
!12142 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12135)
!12143 = !DILocation(line: 655, column: 6, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12129, file: !2243, line: 655, column: 6)
!12145 = !DILocation(line: 655, column: 6, scope: !12129)
!12146 = !DILocation(line: 0, scope: !11612, inlinedAt: !12147)
!12147 = distinct !DILocation(line: 656, column: 3, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12144, file: !2243, line: 655, column: 36)
!12149 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12147)
!12150 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12147)
!12151 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12147)
!12152 = !DILocation(line: 0, scope: !11626, inlinedAt: !12153)
!12153 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12147)
!12154 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12153)
!12155 = !DILocation(line: 657, column: 3, scope: !12148)
!12156 = !DILocation(line: 660, column: 2, scope: !12129)
!12157 = !DILocation(line: 661, column: 2, scope: !12129)
!12158 = !DILocation(line: 662, column: 2, scope: !12129)
!12159 = !DILocation(line: 663, column: 1, scope: !12129)
!12160 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10191, file: !10191, line: 126, type: !11721, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12161)
!12161 = !{!12162}
!12162 = !DILocalVariable(name: "thread", arg: 1, scope: !12160, file: !10191, line: 126, type: !2134)
!12163 = !DILocation(line: 0, scope: !12160)
!12164 = !DILocation(line: 128, column: 23, scope: !12160)
!12165 = !DILocation(line: 128, column: 36, scope: !12160)
!12166 = !DILocation(line: 128, column: 56, scope: !12160)
!12167 = !DILocation(line: 128, column: 2, scope: !12160)
!12168 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10191, file: !10191, line: 155, type: !11536, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12169)
!12169 = !{!12170}
!12170 = !DILocalVariable(name: "thread", arg: 1, scope: !12168, file: !10191, line: 155, type: !2134)
!12171 = !DILocation(line: 0, scope: !12168)
!12172 = !DILocation(line: 157, column: 15, scope: !12168)
!12173 = !DILocation(line: 157, column: 28, scope: !12168)
!12174 = !DILocation(line: 158, column: 1, scope: !12168)
!12175 = distinct !DISubprogram(name: "z_reschedule", scope: !2243, file: !2243, line: 967, type: !11613, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12176)
!12176 = !{!12177, !12178}
!12177 = !DILocalVariable(name: "lock", arg: 1, scope: !12175, file: !2243, line: 967, type: !11581)
!12178 = !DILocalVariable(name: "key", arg: 2, scope: !12175, file: !2243, line: 967, type: !11570)
!12179 = !DILocation(line: 0, scope: !12175)
!12180 = !DILocation(line: 969, column: 6, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12175, file: !2243, line: 969, column: 6)
!12182 = !DILocation(line: 969, column: 23, scope: !12181)
!12183 = !DILocation(line: 969, column: 26, scope: !12181)
!12184 = !DILocation(line: 969, column: 6, scope: !12175)
!12185 = !DILocalVariable(name: "key", arg: 2, scope: !12186, file: !10293, line: 193, type: !11570)
!12186 = distinct !DISubprogram(name: "z_swap", scope: !10293, file: !10293, line: 193, type: !12187, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!109, !11581, !11570}
!12189 = !{!12190, !12185}
!12190 = !DILocalVariable(name: "lock", arg: 1, scope: !12186, file: !10293, line: 193, type: !11581)
!12191 = !DILocation(line: 0, scope: !12186, inlinedAt: !12192)
!12192 = distinct !DILocation(line: 970, column: 3, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12181, file: !2243, line: 969, column: 39)
!12194 = !DILocalVariable(name: "l", arg: 1, scope: !12195, file: !248, line: 221, type: !11581)
!12195 = distinct !DISubprogram(name: "k_spin_release", scope: !248, file: !248, line: 221, type: !12196, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12198)
!12196 = !DISubroutineType(types: !12197)
!12197 = !{null, !11581}
!12198 = !{!12194}
!12199 = !DILocation(line: 0, scope: !12195, inlinedAt: !12200)
!12200 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !12192)
!12201 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !12200)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !248, line: 225, column: 2)
!12203 = distinct !DILexicalBlock(scope: !12195, file: !248, line: 225, column: 2)
!12204 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !12200)
!12205 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !12200)
!12206 = distinct !DILexicalBlock(scope: !12202, file: !248, line: 225, column: 2)
!12207 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !12192)
!12208 = !DILocation(line: 971, column: 2, scope: !12193)
!12209 = !DILocation(line: 0, scope: !11612, inlinedAt: !12210)
!12210 = distinct !DILocation(line: 972, column: 3, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12181, file: !2243, line: 971, column: 9)
!12212 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12210)
!12213 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12210)
!12214 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12210)
!12215 = !DILocation(line: 0, scope: !11626, inlinedAt: !12216)
!12216 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12210)
!12217 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12216)
!12218 = !DILocation(line: 975, column: 1, scope: !12175)
!12219 = distinct !DISubprogram(name: "resched", scope: !2243, file: !2243, line: 940, type: !12220, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12222)
!12220 = !DISubroutineType(types: !12221)
!12221 = !{!754, !110}
!12222 = !{!12223}
!12223 = !DILocalVariable(name: "key", arg: 1, scope: !12219, file: !2243, line: 940, type: !110)
!12224 = !DILocation(line: 0, scope: !12219)
!12225 = !DILocalVariable(name: "key", arg: 1, scope: !12226, file: !6050, line: 112, type: !32)
!12226 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6050, file: !6050, line: 112, type: !12227, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12229)
!12227 = !DISubroutineType(types: !12228)
!12228 = !{!754, !32}
!12229 = !{!12225}
!12230 = !DILocation(line: 0, scope: !12226, inlinedAt: !12231)
!12231 = distinct !DILocation(line: 946, column: 9, scope: !12219)
!12232 = !DILocation(line: 115, column: 13, scope: !12226, inlinedAt: !12231)
!12233 = !DILocation(line: 946, column: 32, scope: !12219)
!12234 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !12238)
!12235 = distinct !DISubprogram(name: "__get_IPSR", scope: !5931, file: !5931, line: 1027, type: !3202, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12236)
!12236 = !{!12237}
!12237 = !DILocalVariable(name: "result", scope: !12235, file: !5931, line: 1029, type: !110)
!12238 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !12240)
!12239 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6714, file: !6714, line: 46, type: !6715, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!12240 = distinct !DILocation(line: 946, column: 36, scope: !12219)
!12241 = !{i64 7014849}
!12242 = !DILocation(line: 0, scope: !12235, inlinedAt: !12238)
!12243 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !12240)
!12244 = !DILocation(line: 946, column: 2, scope: !12219)
!12245 = distinct !DISubprogram(name: "need_swap", scope: !2243, file: !2243, line: 953, type: !6715, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12246)
!12246 = !{!12247}
!12247 = !DILocalVariable(name: "new_thread", scope: !12245, file: !2243, line: 959, type: !2134)
!12248 = !DILocation(line: 962, column: 31, scope: !12245)
!12249 = !DILocation(line: 0, scope: !12245)
!12250 = !DILocation(line: 963, column: 23, scope: !12245)
!12251 = !DILocation(line: 963, column: 20, scope: !12245)
!12252 = !DILocation(line: 963, column: 2, scope: !12245)
!12253 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10293, file: !10293, line: 181, type: !5941, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12254)
!12254 = !{!12255, !12256}
!12255 = !DILocalVariable(name: "key", arg: 1, scope: !12253, file: !10293, line: 181, type: !32)
!12256 = !DILocalVariable(name: "ret", scope: !12253, file: !10293, line: 183, type: !109)
!12257 = !DILocation(line: 0, scope: !12253)
!12258 = !DILocation(line: 185, column: 8, scope: !12253)
!12259 = !DILocation(line: 186, column: 2, scope: !12253)
!12260 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2243, file: !2243, line: 665, type: !11536, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12261)
!12261 = !{!12262, !12263, !12265}
!12262 = !DILocalVariable(name: "thread", arg: 1, scope: !12260, file: !2243, line: 665, type: !2134)
!12263 = !DILocalVariable(name: "__i", scope: !12264, file: !2243, line: 671, type: !11570)
!12264 = distinct !DILexicalBlock(scope: !12260, file: !2243, line: 671, column: 2)
!12265 = !DILocalVariable(name: "__key", scope: !12264, file: !2243, line: 671, type: !11570)
!12266 = !DILocation(line: 0, scope: !12260)
!12267 = !DILocation(line: 669, column: 8, scope: !12260)
!12268 = !DILocation(line: 0, scope: !12264)
!12269 = !DILocation(line: 0, scope: !11578, inlinedAt: !12270)
!12270 = distinct !DILocation(line: 671, column: 2, scope: !12264)
!12271 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12272)
!12272 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12270)
!12273 = !DILocation(line: 0, scope: !11587, inlinedAt: !12272)
!12274 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12270)
!12275 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12270)
!12276 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12270)
!12277 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12270)
!12278 = !DILocation(line: 672, column: 7, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !2243, line: 672, column: 7)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !2243, line: 671, column: 26)
!12281 = distinct !DILexicalBlock(scope: !12264, file: !2243, line: 671, column: 2)
!12282 = !DILocation(line: 672, column: 7, scope: !12280)
!12283 = !DILocation(line: 0, scope: !11772, inlinedAt: !12284)
!12284 = distinct !DILocation(line: 673, column: 4, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12279, file: !2243, line: 672, column: 35)
!12286 = !DILocation(line: 266, column: 15, scope: !11772, inlinedAt: !12284)
!12287 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !12284)
!12288 = !DILocation(line: 0, scope: !11780, inlinedAt: !12289)
!12289 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !12284)
!12290 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !12289)
!12291 = !DILocation(line: 674, column: 3, scope: !12285)
!12292 = !DILocation(line: 675, column: 3, scope: !12280)
!12293 = !DILocation(line: 676, column: 26, scope: !12280)
!12294 = !DILocation(line: 676, column: 23, scope: !12280)
!12295 = !DILocation(line: 676, column: 3, scope: !12280)
!12296 = !DILocation(line: 0, scope: !11612, inlinedAt: !12297)
!12297 = distinct !DILocation(line: 671, column: 2, scope: !12281)
!12298 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12297)
!12299 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12297)
!12300 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12297)
!12301 = !DILocation(line: 0, scope: !11626, inlinedAt: !12302)
!12302 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12297)
!12303 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12302)
!12304 = !DILocation(line: 679, column: 16, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12260, file: !2243, line: 679, column: 6)
!12306 = !DILocation(line: 679, column: 13, scope: !12305)
!12307 = !DILocation(line: 679, column: 6, scope: !12260)
!12308 = !DILocation(line: 680, column: 3, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !2243, line: 679, column: 26)
!12310 = !DILocation(line: 681, column: 2, scope: !12309)
!12311 = !DILocation(line: 684, column: 1, scope: !12260)
!12312 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !10841, file: !10841, line: 52, type: !11554, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12313)
!12313 = !{!12314}
!12314 = !DILocalVariable(name: "thread", arg: 1, scope: !12312, file: !10841, line: 52, type: !2134)
!12315 = !DILocation(line: 0, scope: !12312)
!12316 = !DILocation(line: 54, column: 39, scope: !12312)
!12317 = !DILocation(line: 54, column: 9, scope: !12312)
!12318 = !DILocation(line: 54, column: 2, scope: !12312)
!12319 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10191, file: !10191, line: 141, type: !11536, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12320)
!12320 = !{!12321}
!12321 = !DILocalVariable(name: "thread", arg: 1, scope: !12319, file: !10191, line: 141, type: !2134)
!12322 = !DILocation(line: 0, scope: !12319)
!12323 = !DILocation(line: 143, column: 15, scope: !12319)
!12324 = !DILocation(line: 143, column: 28, scope: !12319)
!12325 = !DILocation(line: 146, column: 1, scope: !12319)
!12326 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10191, file: !10191, line: 73, type: !2930, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!12327 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12328)
!12328 = distinct !DILocation(line: 75, column: 30, scope: !12326)
!12329 = !DILocation(line: 0, scope: !11587, inlinedAt: !12328)
!12330 = !DILocation(line: 75, column: 9, scope: !12326)
!12331 = !DILocation(line: 76, column: 1, scope: !12326)
!12332 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2243, file: !2243, line: 977, type: !6026, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12333)
!12333 = !{!12334}
!12334 = !DILocalVariable(name: "key", arg: 1, scope: !12332, file: !2243, line: 977, type: !110)
!12335 = !DILocation(line: 0, scope: !12332)
!12336 = !DILocation(line: 979, column: 6, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12332, file: !2243, line: 979, column: 6)
!12338 = !DILocation(line: 979, column: 6, scope: !12332)
!12339 = !DILocation(line: 980, column: 3, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12337, file: !2243, line: 979, column: 20)
!12341 = !DILocation(line: 981, column: 2, scope: !12340)
!12342 = !DILocation(line: 0, scope: !11626, inlinedAt: !12343)
!12343 = distinct !DILocation(line: 982, column: 3, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12337, file: !2243, line: 981, column: 9)
!12345 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12343)
!12346 = !DILocation(line: 985, column: 1, scope: !12332)
!12347 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2243, file: !2243, line: 695, type: !11536, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12348)
!12348 = !{!12349, !12350}
!12349 = !DILocalVariable(name: "thread", arg: 1, scope: !12347, file: !2243, line: 695, type: !2134)
!12350 = !DILocalVariable(name: "key", scope: !12347, file: !2243, line: 699, type: !11570)
!12351 = !DILocation(line: 0, scope: !12347)
!12352 = !DILocation(line: 0, scope: !11578, inlinedAt: !12353)
!12353 = distinct !DILocation(line: 699, column: 25, scope: !12347)
!12354 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12355)
!12355 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12353)
!12356 = !DILocation(line: 0, scope: !11587, inlinedAt: !12355)
!12357 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12353)
!12358 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12353)
!12359 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12353)
!12360 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12353)
!12361 = !DILocation(line: 702, column: 7, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12347, file: !2243, line: 702, column: 6)
!12363 = !DILocation(line: 702, column: 6, scope: !12347)
!12364 = !DILocation(line: 0, scope: !11612, inlinedAt: !12365)
!12365 = distinct !DILocation(line: 703, column: 3, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12362, file: !2243, line: 702, column: 38)
!12367 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12365)
!12368 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12365)
!12369 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12365)
!12370 = !DILocation(line: 0, scope: !11626, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12365)
!12372 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12371)
!12373 = !DILocation(line: 704, column: 3, scope: !12366)
!12374 = !DILocation(line: 707, column: 2, scope: !12347)
!12375 = !DILocation(line: 708, column: 2, scope: !12347)
!12376 = !DILocation(line: 710, column: 2, scope: !12347)
!12377 = !DILocation(line: 713, column: 1, scope: !12347)
!12378 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10191, file: !10191, line: 96, type: !11721, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12379)
!12379 = !{!12380}
!12380 = !DILocalVariable(name: "thread", arg: 1, scope: !12378, file: !10191, line: 96, type: !2134)
!12381 = !DILocation(line: 0, scope: !12378)
!12382 = !DILocation(line: 98, column: 23, scope: !12378)
!12383 = !DILocation(line: 98, column: 36, scope: !12378)
!12384 = !DILocation(line: 98, column: 57, scope: !12378)
!12385 = !DILocation(line: 98, column: 2, scope: !12378)
!12386 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10191, file: !10191, line: 148, type: !11536, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12387)
!12387 = !{!12388}
!12388 = !DILocalVariable(name: "thread", arg: 1, scope: !12386, file: !10191, line: 148, type: !2134)
!12389 = !DILocation(line: 0, scope: !12386)
!12390 = !DILocation(line: 150, column: 15, scope: !12386)
!12391 = !DILocation(line: 150, column: 28, scope: !12386)
!12392 = !DILocation(line: 153, column: 1, scope: !12386)
!12393 = distinct !DISubprogram(name: "z_pend_thread", scope: !2243, file: !2243, line: 770, type: !12394, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12400)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{null, !2134, !2165, !12396}
!12396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12397)
!12397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12398)
!12398 = !{!12399}
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12397, file: !105, line: 66, baseType: !104, size: 64)
!12400 = !{!12401, !12402, !12403, !12404, !12406}
!12401 = !DILocalVariable(name: "thread", arg: 1, scope: !12393, file: !2243, line: 770, type: !2134)
!12402 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12393, file: !2243, line: 770, type: !2165)
!12403 = !DILocalVariable(name: "timeout", arg: 3, scope: !12393, file: !2243, line: 771, type: !12396)
!12404 = !DILocalVariable(name: "__i", scope: !12405, file: !2243, line: 774, type: !11570)
!12405 = distinct !DILexicalBlock(scope: !12393, file: !2243, line: 774, column: 2)
!12406 = !DILocalVariable(name: "__key", scope: !12405, file: !2243, line: 774, type: !11570)
!12407 = !DILocation(line: 0, scope: !12393)
!12408 = !DILocation(line: 773, column: 2, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12410, file: !2243, line: 773, column: 2)
!12410 = distinct !DILexicalBlock(scope: !12393, file: !2243, line: 773, column: 2)
!12411 = !DILocation(line: 773, column: 2, scope: !12410)
!12412 = !DILocation(line: 773, column: 2, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12409, file: !2243, line: 773, column: 2)
!12414 = !DILocation(line: 0, scope: !12405)
!12415 = !DILocation(line: 0, scope: !11578, inlinedAt: !12416)
!12416 = distinct !DILocation(line: 774, column: 2, scope: !12405)
!12417 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12418)
!12418 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12416)
!12419 = !DILocation(line: 0, scope: !11587, inlinedAt: !12418)
!12420 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12416)
!12421 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12416)
!12422 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12416)
!12423 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12416)
!12424 = !DILocation(line: 775, column: 3, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !2243, line: 774, column: 26)
!12426 = distinct !DILexicalBlock(scope: !12405, file: !2243, line: 774, column: 2)
!12427 = !DILocation(line: 0, scope: !11612, inlinedAt: !12428)
!12428 = distinct !DILocation(line: 774, column: 2, scope: !12426)
!12429 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12428)
!12430 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12428)
!12431 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12428)
!12432 = !DILocation(line: 0, scope: !11626, inlinedAt: !12433)
!12433 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12428)
!12434 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12433)
!12435 = !DILocation(line: 777, column: 1, scope: !12393)
!12436 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2243, file: !2243, line: 79, type: !11721, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12437)
!12437 = !{!12438}
!12438 = !DILocalVariable(name: "thread", arg: 1, scope: !12436, file: !2243, line: 79, type: !2134)
!12439 = !DILocation(line: 0, scope: !12436)
!12440 = !DILocation(line: 81, column: 23, scope: !12436)
!12441 = !DILocation(line: 81, column: 36, scope: !12436)
!12442 = !DILocation(line: 81, column: 53, scope: !12436)
!12443 = !DILocation(line: 81, column: 2, scope: !12436)
!12444 = distinct !DISubprogram(name: "pend_locked", scope: !2243, file: !2243, line: 760, type: !12394, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12445)
!12445 = !{!12446, !12447, !12448}
!12446 = !DILocalVariable(name: "thread", arg: 1, scope: !12444, file: !2243, line: 760, type: !2134)
!12447 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12444, file: !2243, line: 760, type: !2165)
!12448 = !DILocalVariable(name: "timeout", arg: 3, scope: !12444, file: !2243, line: 761, type: !12396)
!12449 = !DILocation(line: 0, scope: !12444)
!12450 = !DILocation(line: 766, column: 2, scope: !12444)
!12451 = !DILocation(line: 767, column: 2, scope: !12444)
!12452 = !DILocation(line: 768, column: 1, scope: !12444)
!12453 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2243, file: !2243, line: 740, type: !12454, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{null, !2134, !2165}
!12456 = !{!12457, !12458}
!12457 = !DILocalVariable(name: "thread", arg: 1, scope: !12453, file: !2243, line: 740, type: !2134)
!12458 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12453, file: !2243, line: 740, type: !2165)
!12459 = !DILocation(line: 0, scope: !12453)
!12460 = !DILocation(line: 742, column: 2, scope: !12453)
!12461 = !DILocation(line: 743, column: 2, scope: !12453)
!12462 = !DILocation(line: 747, column: 13, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12453, file: !2243, line: 747, column: 6)
!12464 = !DILocation(line: 747, column: 6, scope: !12453)
!12465 = !DILocation(line: 748, column: 16, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12463, file: !2243, line: 747, column: 22)
!12467 = !DILocation(line: 748, column: 26, scope: !12466)
!12468 = !DILocation(line: 749, column: 28, scope: !12466)
!12469 = !DILocalVariable(name: "pq", arg: 1, scope: !12470, file: !2243, line: 181, type: !12473)
!12470 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2243, file: !2243, line: 181, type: !12471, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12474)
!12471 = !DISubroutineType(types: !12472)
!12472 = !{null, !12473, !2134}
!12473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!12474 = !{!12469, !12475, !12476}
!12475 = !DILocalVariable(name: "thread", arg: 2, scope: !12470, file: !2243, line: 182, type: !2134)
!12476 = !DILocalVariable(name: "t", scope: !12470, file: !2243, line: 184, type: !2134)
!12477 = !DILocation(line: 0, scope: !12470, inlinedAt: !12478)
!12478 = distinct !DILocation(line: 749, column: 3, scope: !12466)
!12479 = !DILocation(line: 186, column: 2, scope: !12480, inlinedAt: !12478)
!12480 = distinct !DILexicalBlock(scope: !12481, file: !2243, line: 186, column: 2)
!12481 = distinct !DILexicalBlock(scope: !12470, file: !2243, line: 186, column: 2)
!12482 = !DILocation(line: 186, column: 2, scope: !12481, inlinedAt: !12478)
!12483 = !DILocation(line: 186, column: 2, scope: !12484, inlinedAt: !12478)
!12484 = distinct !DILexicalBlock(scope: !12480, file: !2243, line: 186, column: 2)
!12485 = !DILocation(line: 188, column: 2, scope: !12486, inlinedAt: !12478)
!12486 = distinct !DILexicalBlock(scope: !12470, file: !2243, line: 188, column: 2)
!12487 = !DILocation(line: 188, column: 2, scope: !12488, inlinedAt: !12478)
!12488 = distinct !DILexicalBlock(scope: !12486, file: !2243, line: 188, column: 2)
!12489 = !DILocation(line: 0, scope: !12486, inlinedAt: !12478)
!12490 = !DILocation(line: 189, column: 7, scope: !12491, inlinedAt: !12478)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !2243, line: 189, column: 7)
!12492 = distinct !DILexicalBlock(scope: !12488, file: !2243, line: 188, column: 56)
!12493 = !DILocation(line: 189, column: 35, scope: !12491, inlinedAt: !12478)
!12494 = !DILocation(line: 189, column: 7, scope: !12492, inlinedAt: !12478)
!12495 = !DILocation(line: 191, column: 21, scope: !12496, inlinedAt: !12478)
!12496 = distinct !DILexicalBlock(scope: !12491, file: !2243, line: 189, column: 40)
!12497 = !DILocation(line: 190, column: 4, scope: !12496, inlinedAt: !12478)
!12498 = !DILocation(line: 192, column: 4, scope: !12496, inlinedAt: !12478)
!12499 = distinct !{!12499, !12485, !12500}
!12500 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12478)
!12501 = !DILocation(line: 196, column: 37, scope: !12470, inlinedAt: !12478)
!12502 = !DILocation(line: 196, column: 2, scope: !12470, inlinedAt: !12478)
!12503 = !DILocation(line: 197, column: 1, scope: !12470, inlinedAt: !12478)
!12504 = !DILocation(line: 751, column: 1, scope: !12453)
!12505 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2243, file: !2243, line: 753, type: !12506, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12508)
!12506 = !DISubroutineType(types: !12507)
!12507 = !{null, !2134, !12396}
!12508 = !{!12509, !12510}
!12509 = !DILocalVariable(name: "thread", arg: 1, scope: !12505, file: !2243, line: 753, type: !2134)
!12510 = !DILocalVariable(name: "timeout", arg: 2, scope: !12505, file: !2243, line: 753, type: !12396)
!12511 = !DILocation(line: 0, scope: !12505)
!12512 = !DILocation(line: 755, column: 7, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12505, file: !2243, line: 755, column: 6)
!12514 = !DILocation(line: 755, column: 6, scope: !12505)
!12515 = !DILocation(line: 756, column: 3, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12513, file: !2243, line: 755, column: 41)
!12517 = !DILocation(line: 757, column: 2, scope: !12516)
!12518 = !DILocation(line: 758, column: 1, scope: !12505)
!12519 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10841, file: !10841, line: 47, type: !12506, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12520)
!12520 = !{!12521, !12522}
!12521 = !DILocalVariable(name: "thread", arg: 1, scope: !12519, file: !10841, line: 47, type: !2134)
!12522 = !DILocalVariable(name: "ticks", arg: 2, scope: !12519, file: !10841, line: 47, type: !12396)
!12523 = !DILocation(line: 0, scope: !12519)
!12524 = !DILocation(line: 49, column: 30, scope: !12519)
!12525 = !DILocation(line: 49, column: 2, scope: !12519)
!12526 = !DILocation(line: 50, column: 1, scope: !12519)
!12527 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2243, file: !2243, line: 795, type: !2191, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12528)
!12528 = !{!12529, !12530, !12531, !12533, !12534}
!12529 = !DILocalVariable(name: "timeout", arg: 1, scope: !12527, file: !2243, line: 795, type: !2193)
!12530 = !DILocalVariable(name: "thread", scope: !12527, file: !2243, line: 797, type: !2134)
!12531 = !DILocalVariable(name: "__i", scope: !12532, file: !2243, line: 800, type: !11570)
!12532 = distinct !DILexicalBlock(scope: !12527, file: !2243, line: 800, column: 2)
!12533 = !DILocalVariable(name: "__key", scope: !12532, file: !2243, line: 800, type: !11570)
!12534 = !DILocalVariable(name: "killed", scope: !12535, file: !2243, line: 801, type: !754)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !2243, line: 800, column: 26)
!12536 = distinct !DILexicalBlock(scope: !12532, file: !2243, line: 800, column: 2)
!12537 = !DILocation(line: 0, scope: !12527)
!12538 = !DILocation(line: 797, column: 28, scope: !12527)
!12539 = !DILocation(line: 0, scope: !12532)
!12540 = !DILocation(line: 0, scope: !11578, inlinedAt: !12541)
!12541 = distinct !DILocation(line: 800, column: 2, scope: !12532)
!12542 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12543)
!12543 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12541)
!12544 = !DILocation(line: 0, scope: !11587, inlinedAt: !12543)
!12545 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12541)
!12546 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12541)
!12547 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12541)
!12548 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12541)
!12549 = !DILocation(line: 801, column: 27, scope: !12535)
!12550 = !DILocation(line: 801, column: 32, scope: !12535)
!12551 = !DILocation(line: 801, column: 61, scope: !12535)
!12552 = !DILocation(line: 0, scope: !12535)
!12553 = !DILocation(line: 804, column: 7, scope: !12535)
!12554 = !DILocation(line: 805, column: 21, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12556, file: !2243, line: 805, column: 8)
!12556 = distinct !DILexicalBlock(scope: !12557, file: !2243, line: 804, column: 16)
!12557 = distinct !DILexicalBlock(scope: !12535, file: !2243, line: 804, column: 7)
!12558 = !DILocation(line: 805, column: 31, scope: !12555)
!12559 = !DILocation(line: 805, column: 8, scope: !12556)
!12560 = !DILocation(line: 806, column: 5, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12555, file: !2243, line: 805, column: 40)
!12562 = !DILocation(line: 807, column: 4, scope: !12561)
!12563 = !DILocation(line: 808, column: 4, scope: !12556)
!12564 = !DILocation(line: 809, column: 4, scope: !12556)
!12565 = !DILocation(line: 810, column: 4, scope: !12556)
!12566 = !DILocation(line: 811, column: 3, scope: !12556)
!12567 = !DILocation(line: 0, scope: !11612, inlinedAt: !12568)
!12568 = distinct !DILocation(line: 800, column: 2, scope: !12536)
!12569 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12568)
!12570 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12568)
!12571 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12568)
!12572 = !DILocation(line: 0, scope: !11626, inlinedAt: !12573)
!12573 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12568)
!12574 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12573)
!12575 = !DILocation(line: 813, column: 1, scope: !12527)
!12576 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2243, file: !2243, line: 779, type: !11536, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12577)
!12577 = !{!12578}
!12578 = !DILocalVariable(name: "thread", arg: 1, scope: !12576, file: !2243, line: 779, type: !2134)
!12579 = !DILocation(line: 0, scope: !12576)
!12580 = !DILocation(line: 781, column: 21, scope: !12576)
!12581 = !DILocation(line: 781, column: 2, scope: !12576)
!12582 = !DILocation(line: 782, column: 2, scope: !12576)
!12583 = !DILocation(line: 783, column: 15, scope: !12576)
!12584 = !DILocation(line: 783, column: 25, scope: !12576)
!12585 = !DILocation(line: 784, column: 1, scope: !12576)
!12586 = distinct !DISubprogram(name: "pended_on_thread", scope: !2243, file: !2243, line: 724, type: !12587, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12589)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{!2165, !2134}
!12589 = !{!12590}
!12590 = !DILocalVariable(name: "thread", arg: 1, scope: !12586, file: !2243, line: 724, type: !2134)
!12591 = !DILocation(line: 0, scope: !12586)
!12592 = !DILocation(line: 726, column: 2, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12594, file: !2243, line: 726, column: 2)
!12594 = distinct !DILexicalBlock(scope: !12586, file: !2243, line: 726, column: 2)
!12595 = !DILocation(line: 726, column: 2, scope: !12594)
!12596 = !DILocation(line: 726, column: 2, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12593, file: !2243, line: 726, column: 2)
!12598 = !DILocation(line: 728, column: 2, scope: !12586)
!12599 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2243, file: !2243, line: 1137, type: !12471, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12600)
!12600 = !{!12601, !12602}
!12601 = !DILocalVariable(name: "pq", arg: 1, scope: !12599, file: !2243, line: 1137, type: !12473)
!12602 = !DILocalVariable(name: "thread", arg: 2, scope: !12599, file: !2243, line: 1137, type: !2134)
!12603 = !DILocation(line: 0, scope: !12599)
!12604 = !DILocation(line: 1139, column: 2, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !2243, line: 1139, column: 2)
!12606 = distinct !DILexicalBlock(scope: !12599, file: !2243, line: 1139, column: 2)
!12607 = !DILocation(line: 1139, column: 2, scope: !12606)
!12608 = !DILocation(line: 1139, column: 2, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12605, file: !2243, line: 1139, column: 2)
!12610 = !DILocation(line: 1141, column: 33, scope: !12599)
!12611 = !DILocation(line: 1141, column: 2, scope: !12599)
!12612 = !DILocation(line: 1142, column: 1, scope: !12599)
!12613 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10191, file: !10191, line: 165, type: !11536, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12614)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "thread", arg: 1, scope: !12613, file: !10191, line: 165, type: !2134)
!12616 = !DILocation(line: 0, scope: !12613)
!12617 = !DILocation(line: 167, column: 15, scope: !12613)
!12618 = !DILocation(line: 167, column: 28, scope: !12613)
!12619 = !DILocation(line: 168, column: 1, scope: !12613)
!12620 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !12621, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12624)
!12621 = !DISubroutineType(types: !12622)
!12622 = !{null, !12623}
!12623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!12624 = !{!12625, !12626, !12628}
!12625 = !DILocalVariable(name: "node", arg: 1, scope: !12620, file: !128, line: 496, type: !12623)
!12626 = !DILocalVariable(name: "prev", scope: !12620, file: !128, line: 498, type: !12627)
!12627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12623)
!12628 = !DILocalVariable(name: "next", scope: !12620, file: !128, line: 499, type: !12627)
!12629 = !DILocation(line: 0, scope: !12620)
!12630 = !DILocation(line: 498, column: 34, scope: !12620)
!12631 = !DILocation(line: 499, column: 34, scope: !12620)
!12632 = !DILocation(line: 501, column: 8, scope: !12620)
!12633 = !DILocation(line: 501, column: 13, scope: !12620)
!12634 = !DILocation(line: 502, column: 8, scope: !12620)
!12635 = !DILocation(line: 502, column: 13, scope: !12620)
!12636 = !DILocation(line: 503, column: 2, scope: !12620)
!12637 = !DILocation(line: 504, column: 1, scope: !12620)
!12638 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !12621, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12639)
!12639 = !{!12640}
!12640 = !DILocalVariable(name: "node", arg: 1, scope: !12638, file: !128, line: 211, type: !12623)
!12641 = !DILocation(line: 0, scope: !12638)
!12642 = !DILocation(line: 213, column: 8, scope: !12638)
!12643 = !DILocation(line: 213, column: 13, scope: !12638)
!12644 = !DILocation(line: 214, column: 8, scope: !12638)
!12645 = !DILocation(line: 214, column: 13, scope: !12638)
!12646 = !DILocation(line: 215, column: 1, scope: !12638)
!12647 = distinct !DISubprogram(name: "unready_thread", scope: !2243, file: !2243, line: 731, type: !11536, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12648)
!12648 = !{!12649}
!12649 = !DILocalVariable(name: "thread", arg: 1, scope: !12647, file: !2243, line: 731, type: !2134)
!12650 = !DILocation(line: 0, scope: !12647)
!12651 = !DILocation(line: 733, column: 6, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12647, file: !2243, line: 733, column: 6)
!12653 = !DILocation(line: 733, column: 6, scope: !12647)
!12654 = !DILocation(line: 0, scope: !11772, inlinedAt: !12655)
!12655 = distinct !DILocation(line: 734, column: 3, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12652, file: !2243, line: 733, column: 34)
!12657 = !DILocation(line: 266, column: 15, scope: !11772, inlinedAt: !12655)
!12658 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !12655)
!12659 = !DILocation(line: 0, scope: !11780, inlinedAt: !12660)
!12660 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !12655)
!12661 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !12660)
!12662 = !DILocation(line: 735, column: 2, scope: !12656)
!12663 = !DILocation(line: 736, column: 25, scope: !12647)
!12664 = !DILocation(line: 736, column: 22, scope: !12647)
!12665 = !DILocation(line: 736, column: 2, scope: !12647)
!12666 = !DILocation(line: 737, column: 1, scope: !12647)
!12667 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10191, file: !10191, line: 160, type: !11536, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12668)
!12668 = !{!12669}
!12669 = !DILocalVariable(name: "thread", arg: 1, scope: !12667, file: !10191, line: 160, type: !2134)
!12670 = !DILocation(line: 0, scope: !12667)
!12671 = !DILocation(line: 162, column: 15, scope: !12667)
!12672 = !DILocation(line: 162, column: 28, scope: !12667)
!12673 = !DILocation(line: 163, column: 1, scope: !12667)
!12674 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !12675, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12677)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{!12623, !12473}
!12677 = !{!12678}
!12678 = !DILocalVariable(name: "list", arg: 1, scope: !12674, file: !128, line: 294, type: !12473)
!12679 = !DILocation(line: 0, scope: !12674)
!12680 = !DILocation(line: 296, column: 9, scope: !12674)
!12681 = !DILocation(line: 296, column: 49, scope: !12674)
!12682 = !DILocation(line: 296, column: 2, scope: !12674)
!12683 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !12684, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12686)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{null, !12623, !12623}
!12686 = !{!12687, !12688, !12689}
!12687 = !DILocalVariable(name: "successor", arg: 1, scope: !12683, file: !128, line: 443, type: !12623)
!12688 = !DILocalVariable(name: "node", arg: 2, scope: !12683, file: !128, line: 443, type: !12623)
!12689 = !DILocalVariable(name: "prev", scope: !12683, file: !128, line: 445, type: !12627)
!12690 = !DILocation(line: 0, scope: !12683)
!12691 = !DILocation(line: 445, column: 39, scope: !12683)
!12692 = !DILocation(line: 447, column: 8, scope: !12683)
!12693 = !DILocation(line: 447, column: 13, scope: !12683)
!12694 = !DILocation(line: 448, column: 8, scope: !12683)
!12695 = !DILocation(line: 448, column: 13, scope: !12683)
!12696 = !DILocation(line: 449, column: 8, scope: !12683)
!12697 = !DILocation(line: 449, column: 13, scope: !12683)
!12698 = !DILocation(line: 450, column: 18, scope: !12683)
!12699 = !DILocation(line: 451, column: 1, scope: !12683)
!12700 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !12701, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!12623, !12473, !12623}
!12703 = !{!12704, !12705}
!12704 = !DILocalVariable(name: "list", arg: 1, scope: !12700, file: !128, line: 341, type: !12473)
!12705 = !DILocalVariable(name: "node", arg: 2, scope: !12700, file: !128, line: 342, type: !12623)
!12706 = !DILocation(line: 0, scope: !12700)
!12707 = !DILocation(line: 344, column: 15, scope: !12700)
!12708 = !DILocation(line: 344, column: 9, scope: !12700)
!12709 = !DILocation(line: 344, column: 26, scope: !12700)
!12710 = !DILocation(line: 344, column: 2, scope: !12700)
!12711 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !12712, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12714)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{null, !12473, !12623}
!12714 = !{!12715, !12716, !12717}
!12715 = !DILocalVariable(name: "list", arg: 1, scope: !12711, file: !128, line: 404, type: !12473)
!12716 = !DILocalVariable(name: "node", arg: 2, scope: !12711, file: !128, line: 404, type: !12623)
!12717 = !DILocalVariable(name: "tail", scope: !12711, file: !128, line: 406, type: !12627)
!12718 = !DILocation(line: 0, scope: !12711)
!12719 = !DILocation(line: 406, column: 34, scope: !12711)
!12720 = !DILocation(line: 408, column: 8, scope: !12711)
!12721 = !DILocation(line: 408, column: 13, scope: !12711)
!12722 = !DILocation(line: 409, column: 8, scope: !12711)
!12723 = !DILocation(line: 409, column: 13, scope: !12711)
!12724 = !DILocation(line: 411, column: 8, scope: !12711)
!12725 = !DILocation(line: 411, column: 13, scope: !12711)
!12726 = !DILocation(line: 412, column: 13, scope: !12711)
!12727 = !DILocation(line: 413, column: 1, scope: !12711)
!12728 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !12701, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12729)
!12729 = !{!12730, !12731}
!12730 = !DILocalVariable(name: "list", arg: 1, scope: !12728, file: !128, line: 325, type: !12473)
!12731 = !DILocalVariable(name: "node", arg: 2, scope: !12728, file: !128, line: 326, type: !12623)
!12732 = !DILocation(line: 0, scope: !12728)
!12733 = !DILocation(line: 328, column: 24, scope: !12728)
!12734 = !DILocation(line: 328, column: 15, scope: !12728)
!12735 = !DILocation(line: 328, column: 9, scope: !12728)
!12736 = !DILocation(line: 328, column: 45, scope: !12728)
!12737 = !DILocation(line: 328, column: 2, scope: !12728)
!12738 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !12739, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12741)
!12739 = !DISubroutineType(types: !12740)
!12740 = !{!754, !12473}
!12741 = !{!12742}
!12742 = !DILocalVariable(name: "list", arg: 1, scope: !12738, file: !128, line: 266, type: !12473)
!12743 = !DILocation(line: 0, scope: !12738)
!12744 = !DILocation(line: 268, column: 15, scope: !12738)
!12745 = !DILocation(line: 268, column: 20, scope: !12738)
!12746 = !DILocation(line: 268, column: 2, scope: !12738)
!12747 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2243, file: !2243, line: 786, type: !11536, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12748)
!12748 = !{!12749, !12750, !12752}
!12749 = !DILocalVariable(name: "thread", arg: 1, scope: !12747, file: !2243, line: 786, type: !2134)
!12750 = !DILocalVariable(name: "__i", scope: !12751, file: !2243, line: 788, type: !11570)
!12751 = distinct !DILexicalBlock(scope: !12747, file: !2243, line: 788, column: 2)
!12752 = !DILocalVariable(name: "__key", scope: !12751, file: !2243, line: 788, type: !11570)
!12753 = !DILocation(line: 0, scope: !12747)
!12754 = !DILocation(line: 0, scope: !12751)
!12755 = !DILocation(line: 0, scope: !11578, inlinedAt: !12756)
!12756 = distinct !DILocation(line: 788, column: 2, scope: !12751)
!12757 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12756)
!12759 = !DILocation(line: 0, scope: !11587, inlinedAt: !12758)
!12760 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12756)
!12761 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12756)
!12762 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12756)
!12763 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12756)
!12764 = !DILocation(line: 789, column: 3, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !2243, line: 788, column: 26)
!12766 = distinct !DILexicalBlock(scope: !12751, file: !2243, line: 788, column: 2)
!12767 = !DILocation(line: 0, scope: !11612, inlinedAt: !12768)
!12768 = distinct !DILocation(line: 788, column: 2, scope: !12766)
!12769 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12768)
!12770 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12768)
!12771 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12768)
!12772 = !DILocation(line: 0, scope: !11626, inlinedAt: !12773)
!12773 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12768)
!12774 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12773)
!12775 = !DILocation(line: 791, column: 1, scope: !12747)
!12776 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2243, file: !2243, line: 816, type: !12777, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12779)
!12777 = !DISubroutineType(types: !12778)
!12778 = !{!109, !110, !2165, !12396}
!12779 = !{!12780, !12781, !12782, !12783, !12784, !12786}
!12780 = !DILocalVariable(name: "key", arg: 1, scope: !12776, file: !2243, line: 816, type: !110)
!12781 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12776, file: !2243, line: 816, type: !2165)
!12782 = !DILocalVariable(name: "timeout", arg: 3, scope: !12776, file: !2243, line: 816, type: !12396)
!12783 = !DILocalVariable(name: "ret", scope: !12776, file: !2243, line: 828, type: !109)
!12784 = !DILocalVariable(name: "__i", scope: !12785, file: !2243, line: 829, type: !11570)
!12785 = distinct !DILexicalBlock(scope: !12776, file: !2243, line: 829, column: 2)
!12786 = !DILocalVariable(name: "__key", scope: !12785, file: !2243, line: 829, type: !11570)
!12787 = !DILocation(line: 0, scope: !12776)
!12788 = !DILocation(line: 823, column: 14, scope: !12776)
!12789 = !DILocation(line: 823, column: 2, scope: !12776)
!12790 = !DILocation(line: 826, column: 20, scope: !12776)
!12791 = !DILocation(line: 826, column: 18, scope: !12776)
!12792 = !DILocation(line: 828, column: 12, scope: !12776)
!12793 = !DILocation(line: 0, scope: !12785)
!12794 = !DILocation(line: 0, scope: !11578, inlinedAt: !12795)
!12795 = distinct !DILocation(line: 829, column: 2, scope: !12785)
!12796 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12795)
!12798 = !DILocation(line: 0, scope: !11587, inlinedAt: !12797)
!12799 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12795)
!12800 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12795)
!12801 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12795)
!12802 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12795)
!12803 = !DILocation(line: 830, column: 7, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !2243, line: 830, column: 7)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !2243, line: 829, column: 26)
!12806 = distinct !DILexicalBlock(scope: !12785, file: !2243, line: 829, column: 2)
!12807 = !DILocation(line: 830, column: 26, scope: !12804)
!12808 = !DILocation(line: 830, column: 23, scope: !12804)
!12809 = !DILocation(line: 830, column: 7, scope: !12805)
!12810 = !DILocation(line: 831, column: 20, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12804, file: !2243, line: 830, column: 36)
!12812 = !DILocation(line: 832, column: 3, scope: !12811)
!12813 = !DILocation(line: 0, scope: !11612, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 829, column: 2, scope: !12806)
!12815 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12814)
!12816 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12814)
!12817 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12814)
!12818 = !DILocation(line: 0, scope: !11626, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12814)
!12820 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12819)
!12821 = !DILocation(line: 834, column: 2, scope: !12776)
!12822 = distinct !DISubprogram(name: "z_pend_curr", scope: !2243, file: !2243, line: 840, type: !12823, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!109, !11581, !11570, !2165, !12396}
!12825 = !{!12826, !12827, !12828, !12829}
!12826 = !DILocalVariable(name: "lock", arg: 1, scope: !12822, file: !2243, line: 840, type: !11581)
!12827 = !DILocalVariable(name: "key", arg: 2, scope: !12822, file: !2243, line: 840, type: !11570)
!12828 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12822, file: !2243, line: 841, type: !2165)
!12829 = !DILocalVariable(name: "timeout", arg: 4, scope: !12822, file: !2243, line: 841, type: !12396)
!12830 = !DILocation(line: 0, scope: !12822)
!12831 = !DILocation(line: 844, column: 20, scope: !12822)
!12832 = !DILocation(line: 844, column: 18, scope: !12822)
!12833 = !DILocation(line: 846, column: 2, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !2243, line: 846, column: 2)
!12835 = distinct !DILexicalBlock(scope: !12822, file: !2243, line: 846, column: 2)
!12836 = !DILocation(line: 846, column: 2, scope: !12835)
!12837 = !DILocation(line: 846, column: 2, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12834, file: !2243, line: 846, column: 2)
!12839 = !DILocation(line: 0, scope: !11578, inlinedAt: !12840)
!12840 = distinct !DILocation(line: 856, column: 9, scope: !12822)
!12841 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12842)
!12842 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12840)
!12843 = !DILocation(line: 0, scope: !11587, inlinedAt: !12842)
!12844 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12840)
!12845 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12840)
!12846 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12840)
!12847 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12840)
!12848 = !DILocation(line: 857, column: 14, scope: !12822)
!12849 = !DILocation(line: 857, column: 2, scope: !12822)
!12850 = !DILocation(line: 0, scope: !12195, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 858, column: 2, scope: !12822)
!12852 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !12851)
!12853 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !12851)
!12854 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !12851)
!12855 = !DILocation(line: 0, scope: !12186, inlinedAt: !12856)
!12856 = distinct !DILocation(line: 859, column: 9, scope: !12822)
!12857 = !DILocation(line: 0, scope: !12195, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !12856)
!12859 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !12858)
!12860 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !12858)
!12861 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !12858)
!12862 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !12856)
!12863 = !DILocation(line: 859, column: 2, scope: !12822)
!12864 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2243, file: !2243, line: 862, type: !12865, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12867)
!12865 = !DISubroutineType(types: !12866)
!12866 = !{!2134, !2165}
!12867 = !{!12868, !12869, !12870, !12872}
!12868 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12864, file: !2243, line: 862, type: !2165)
!12869 = !DILocalVariable(name: "thread", scope: !12864, file: !2243, line: 864, type: !2134)
!12870 = !DILocalVariable(name: "__i", scope: !12871, file: !2243, line: 866, type: !11570)
!12871 = distinct !DILexicalBlock(scope: !12864, file: !2243, line: 866, column: 2)
!12872 = !DILocalVariable(name: "__key", scope: !12871, file: !2243, line: 866, type: !11570)
!12873 = !DILocation(line: 0, scope: !12864)
!12874 = !DILocation(line: 0, scope: !12871)
!12875 = !DILocation(line: 0, scope: !11578, inlinedAt: !12876)
!12876 = distinct !DILocation(line: 866, column: 2, scope: !12871)
!12877 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12878)
!12878 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12876)
!12879 = !DILocation(line: 0, scope: !11587, inlinedAt: !12878)
!12880 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12876)
!12881 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12876)
!12882 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12876)
!12883 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12876)
!12884 = !DILocation(line: 867, column: 12, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !2243, line: 866, column: 26)
!12886 = distinct !DILexicalBlock(scope: !12871, file: !2243, line: 866, column: 2)
!12887 = !DILocation(line: 869, column: 14, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12885, file: !2243, line: 869, column: 7)
!12889 = !DILocation(line: 869, column: 7, scope: !12885)
!12890 = !DILocation(line: 870, column: 4, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12888, file: !2243, line: 869, column: 23)
!12892 = !DILocation(line: 871, column: 3, scope: !12891)
!12893 = !DILocation(line: 0, scope: !11612, inlinedAt: !12894)
!12894 = distinct !DILocation(line: 866, column: 2, scope: !12886)
!12895 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12894)
!12896 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12894)
!12897 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12894)
!12898 = !DILocation(line: 0, scope: !11626, inlinedAt: !12899)
!12899 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12894)
!12900 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12899)
!12901 = !DILocation(line: 874, column: 2, scope: !12864)
!12902 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2243, file: !2243, line: 1144, type: !12903, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12905)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{!2134, !12473}
!12905 = !{!12906, !12907, !12908}
!12906 = !DILocalVariable(name: "pq", arg: 1, scope: !12902, file: !2243, line: 1144, type: !12473)
!12907 = !DILocalVariable(name: "thread", scope: !12902, file: !2243, line: 1146, type: !2134)
!12908 = !DILocalVariable(name: "n", scope: !12902, file: !2243, line: 1147, type: !12623)
!12909 = !DILocation(line: 0, scope: !12902)
!12910 = !DILocation(line: 1147, column: 19, scope: !12902)
!12911 = !DILocation(line: 1152, column: 2, scope: !12902)
!12912 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2243, file: !2243, line: 877, type: !12865, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12913)
!12913 = !{!12914, !12915, !12916, !12918}
!12914 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12912, file: !2243, line: 877, type: !2165)
!12915 = !DILocalVariable(name: "thread", scope: !12912, file: !2243, line: 879, type: !2134)
!12916 = !DILocalVariable(name: "__i", scope: !12917, file: !2243, line: 881, type: !11570)
!12917 = distinct !DILexicalBlock(scope: !12912, file: !2243, line: 881, column: 2)
!12918 = !DILocalVariable(name: "__key", scope: !12917, file: !2243, line: 881, type: !11570)
!12919 = !DILocation(line: 0, scope: !12912)
!12920 = !DILocation(line: 0, scope: !12917)
!12921 = !DILocation(line: 0, scope: !11578, inlinedAt: !12922)
!12922 = distinct !DILocation(line: 881, column: 2, scope: !12917)
!12923 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12924)
!12924 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12922)
!12925 = !DILocation(line: 0, scope: !11587, inlinedAt: !12924)
!12926 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12922)
!12927 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12922)
!12928 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12922)
!12929 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12922)
!12930 = !DILocation(line: 882, column: 12, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12932, file: !2243, line: 881, column: 26)
!12932 = distinct !DILexicalBlock(scope: !12917, file: !2243, line: 881, column: 2)
!12933 = !DILocation(line: 884, column: 14, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12931, file: !2243, line: 884, column: 7)
!12935 = !DILocation(line: 884, column: 7, scope: !12931)
!12936 = !DILocation(line: 885, column: 4, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12934, file: !2243, line: 884, column: 23)
!12938 = !DILocation(line: 886, column: 10, scope: !12937)
!12939 = !DILocation(line: 887, column: 3, scope: !12937)
!12940 = !DILocation(line: 0, scope: !11612, inlinedAt: !12941)
!12941 = distinct !DILocation(line: 881, column: 2, scope: !12932)
!12942 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12941)
!12943 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12941)
!12944 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12941)
!12945 = !DILocation(line: 0, scope: !11626, inlinedAt: !12946)
!12946 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12941)
!12947 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12946)
!12948 = !DILocation(line: 890, column: 2, scope: !12912)
!12949 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2243, file: !2243, line: 893, type: !11536, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12950)
!12950 = !{!12951}
!12951 = !DILocalVariable(name: "thread", arg: 1, scope: !12949, file: !2243, line: 893, type: !2134)
!12952 = !DILocation(line: 0, scope: !12949)
!12953 = !DILocation(line: 0, scope: !12747, inlinedAt: !12954)
!12954 = distinct !DILocation(line: 895, column: 2, scope: !12949)
!12955 = !DILocation(line: 0, scope: !12751, inlinedAt: !12954)
!12956 = !DILocation(line: 0, scope: !11578, inlinedAt: !12957)
!12957 = distinct !DILocation(line: 788, column: 2, scope: !12751, inlinedAt: !12954)
!12958 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12959)
!12959 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12957)
!12960 = !DILocation(line: 0, scope: !11587, inlinedAt: !12959)
!12961 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12957)
!12962 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12957)
!12963 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12957)
!12964 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12957)
!12965 = !DILocation(line: 789, column: 3, scope: !12765, inlinedAt: !12954)
!12966 = !DILocation(line: 0, scope: !11612, inlinedAt: !12967)
!12967 = distinct !DILocation(line: 788, column: 2, scope: !12766, inlinedAt: !12954)
!12968 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !12967)
!12969 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !12967)
!12970 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !12967)
!12971 = !DILocation(line: 0, scope: !11626, inlinedAt: !12972)
!12972 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !12967)
!12973 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !12972)
!12974 = !DILocation(line: 896, column: 8, scope: !12949)
!12975 = !DILocation(line: 897, column: 1, scope: !12949)
!12976 = distinct !DISubprogram(name: "z_set_prio", scope: !2243, file: !2243, line: 902, type: !11917, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12977)
!12977 = !{!12978, !12979, !12980, !12981, !12983}
!12978 = !DILocalVariable(name: "thread", arg: 1, scope: !12976, file: !2243, line: 902, type: !2134)
!12979 = !DILocalVariable(name: "prio", arg: 2, scope: !12976, file: !2243, line: 902, type: !109)
!12980 = !DILocalVariable(name: "need_sched", scope: !12976, file: !2243, line: 904, type: !754)
!12981 = !DILocalVariable(name: "__i", scope: !12982, file: !2243, line: 906, type: !11570)
!12982 = distinct !DILexicalBlock(scope: !12976, file: !2243, line: 906, column: 2)
!12983 = !DILocalVariable(name: "__key", scope: !12982, file: !2243, line: 906, type: !11570)
!12984 = !DILocation(line: 0, scope: !12976)
!12985 = !DILocation(line: 0, scope: !12982)
!12986 = !DILocation(line: 0, scope: !11578, inlinedAt: !12987)
!12987 = distinct !DILocation(line: 906, column: 2, scope: !12982)
!12988 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !12989)
!12989 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !12987)
!12990 = !DILocation(line: 0, scope: !11587, inlinedAt: !12989)
!12991 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !12987)
!12992 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !12987)
!12993 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !12987)
!12994 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !12987)
!12995 = !DILocation(line: 907, column: 16, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !2243, line: 906, column: 26)
!12997 = distinct !DILexicalBlock(scope: !12982, file: !2243, line: 906, column: 2)
!12998 = !DILocation(line: 909, column: 7, scope: !12996)
!12999 = !DILocation(line: 0, scope: !11772, inlinedAt: !13000)
!13000 = distinct !DILocation(line: 912, column: 5, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !2243, line: 911, column: 63)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !2243, line: 911, column: 8)
!13003 = distinct !DILexicalBlock(scope: !13004, file: !2243, line: 909, column: 19)
!13004 = distinct !DILexicalBlock(scope: !12996, file: !2243, line: 909, column: 7)
!13005 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !13000)
!13006 = !DILocation(line: 0, scope: !11780, inlinedAt: !13007)
!13007 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !13000)
!13008 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !13007)
!13009 = !DILocation(line: 913, column: 23, scope: !13001)
!13010 = !DILocation(line: 0, scope: !11789, inlinedAt: !13011)
!13011 = distinct !DILocation(line: 914, column: 5, scope: !13001)
!13012 = !DILocation(line: 252, column: 28, scope: !11789, inlinedAt: !13011)
!13013 = !DILocation(line: 0, scope: !11796, inlinedAt: !13014)
!13014 = distinct !DILocation(line: 254, column: 3, scope: !11800, inlinedAt: !13011)
!13015 = !DILocation(line: 229, column: 2, scope: !11796, inlinedAt: !13014)
!13016 = !DILocation(line: 918, column: 4, scope: !13003)
!13017 = !DILocation(line: 919, column: 3, scope: !13003)
!13018 = !DILocation(line: 920, column: 22, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13004, file: !2243, line: 919, column: 10)
!13020 = !DILocation(line: 0, scope: !11612, inlinedAt: !13021)
!13021 = distinct !DILocation(line: 906, column: 2, scope: !12997)
!13022 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13021)
!13023 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13021)
!13024 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13021)
!13025 = !DILocation(line: 0, scope: !11626, inlinedAt: !13026)
!13026 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13021)
!13027 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13026)
!13028 = !DILocation(line: 926, column: 2, scope: !12976)
!13029 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2243, file: !2243, line: 929, type: !13030, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13032)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{null, !2134, !109}
!13032 = !{!13033, !13034, !13035}
!13033 = !DILocalVariable(name: "thread", arg: 1, scope: !13029, file: !2243, line: 929, type: !2134)
!13034 = !DILocalVariable(name: "prio", arg: 2, scope: !13029, file: !2243, line: 929, type: !109)
!13035 = !DILocalVariable(name: "need_sched", scope: !13029, file: !2243, line: 931, type: !754)
!13036 = !DILocation(line: 0, scope: !13029)
!13037 = !DILocation(line: 931, column: 20, scope: !13029)
!13038 = !DILocation(line: 935, column: 17, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13029, file: !2243, line: 935, column: 6)
!13040 = !DILocation(line: 935, column: 20, scope: !13039)
!13041 = !DILocation(line: 935, column: 35, scope: !13039)
!13042 = !DILocation(line: 935, column: 48, scope: !13039)
!13043 = !DILocation(line: 935, column: 6, scope: !13029)
!13044 = !DILocation(line: 936, column: 3, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13039, file: !2243, line: 935, column: 55)
!13046 = !DILocation(line: 937, column: 2, scope: !13045)
!13047 = !DILocation(line: 938, column: 1, scope: !13029)
!13048 = distinct !DISubprogram(name: "k_sched_lock", scope: !2243, file: !2243, line: 987, type: !2930, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13049)
!13049 = !{!13050, !13052}
!13050 = !DILocalVariable(name: "__i", scope: !13051, file: !2243, line: 989, type: !11570)
!13051 = distinct !DILexicalBlock(scope: !13048, file: !2243, line: 989, column: 2)
!13052 = !DILocalVariable(name: "__key", scope: !13051, file: !2243, line: 989, type: !11570)
!13053 = !DILocation(line: 0, scope: !13051)
!13054 = !DILocation(line: 0, scope: !11578, inlinedAt: !13055)
!13055 = distinct !DILocation(line: 989, column: 2, scope: !13051)
!13056 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13057)
!13057 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13055)
!13058 = !DILocation(line: 0, scope: !11587, inlinedAt: !13057)
!13059 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13055)
!13060 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13055)
!13061 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13055)
!13062 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13055)
!13063 = !DILocation(line: 992, column: 3, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13065, file: !2243, line: 989, column: 26)
!13065 = distinct !DILexicalBlock(scope: !13051, file: !2243, line: 989, column: 2)
!13066 = !DILocation(line: 0, scope: !11612, inlinedAt: !13067)
!13067 = distinct !DILocation(line: 989, column: 2, scope: !13065)
!13068 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13067)
!13069 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13067)
!13070 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13067)
!13071 = !DILocation(line: 0, scope: !11626, inlinedAt: !13072)
!13072 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13067)
!13073 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13072)
!13074 = !DILocation(line: 994, column: 1, scope: !13048)
!13075 = distinct !DISubprogram(name: "z_sched_lock", scope: !10191, file: !10191, line: 251, type: !2930, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13076 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13078)
!13078 = distinct !DILocation(line: 253, column: 2, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !10191, line: 253, column: 2)
!13080 = distinct !DILexicalBlock(scope: !13075, file: !10191, line: 253, column: 2)
!13081 = !DILocation(line: 0, scope: !12235, inlinedAt: !13077)
!13082 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13078)
!13083 = !DILocation(line: 253, column: 2, scope: !13080)
!13084 = !DILocation(line: 253, column: 2, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13079, file: !10191, line: 253, column: 2)
!13086 = !DILocation(line: 254, column: 2, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13088, file: !10191, line: 254, column: 2)
!13088 = distinct !DILexicalBlock(scope: !13075, file: !10191, line: 254, column: 2)
!13089 = !DILocation(line: 254, column: 2, scope: !13088)
!13090 = !DILocation(line: 254, column: 2, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13087, file: !10191, line: 254, column: 2)
!13092 = !DILocation(line: 256, column: 2, scope: !13075)
!13093 = !DILocation(line: 258, column: 2, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13075, file: !10191, line: 258, column: 2)
!13095 = !{i64 2154800570}
!13096 = !DILocation(line: 259, column: 1, scope: !13075)
!13097 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2243, file: !2243, line: 996, type: !2930, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13098)
!13098 = !{!13099, !13101}
!13099 = !DILocalVariable(name: "__i", scope: !13100, file: !2243, line: 998, type: !11570)
!13100 = distinct !DILexicalBlock(scope: !13097, file: !2243, line: 998, column: 2)
!13101 = !DILocalVariable(name: "__key", scope: !13100, file: !2243, line: 998, type: !11570)
!13102 = !DILocation(line: 0, scope: !13100)
!13103 = !DILocation(line: 0, scope: !11578, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 998, column: 2, scope: !13100)
!13105 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13106)
!13106 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13104)
!13107 = !DILocation(line: 0, scope: !11587, inlinedAt: !13106)
!13108 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13104)
!13109 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13104)
!13110 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13104)
!13111 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13104)
!13112 = !DILocation(line: 999, column: 3, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13114, file: !2243, line: 999, column: 3)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !2243, line: 999, column: 3)
!13115 = distinct !DILexicalBlock(scope: !13116, file: !2243, line: 998, column: 26)
!13116 = distinct !DILexicalBlock(scope: !13100, file: !2243, line: 998, column: 2)
!13117 = !DILocation(line: 999, column: 3, scope: !13114)
!13118 = !DILocation(line: 999, column: 3, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13113, file: !2243, line: 999, column: 3)
!13120 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13122)
!13122 = distinct !DILocation(line: 1000, column: 3, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13124, file: !2243, line: 1000, column: 3)
!13124 = distinct !DILexicalBlock(scope: !13115, file: !2243, line: 1000, column: 3)
!13125 = !DILocation(line: 0, scope: !12235, inlinedAt: !13121)
!13126 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13122)
!13127 = !DILocation(line: 1000, column: 3, scope: !13124)
!13128 = !DILocation(line: 1000, column: 3, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13123, file: !2243, line: 1000, column: 3)
!13130 = !DILocation(line: 1002, column: 5, scope: !13115)
!13131 = !DILocation(line: 1002, column: 20, scope: !13115)
!13132 = !DILocation(line: 1002, column: 3, scope: !13115)
!13133 = !DILocation(line: 1003, column: 3, scope: !13115)
!13134 = !DILocation(line: 0, scope: !11612, inlinedAt: !13135)
!13135 = distinct !DILocation(line: 998, column: 2, scope: !13116)
!13136 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13135)
!13137 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13135)
!13138 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13135)
!13139 = !DILocation(line: 0, scope: !11626, inlinedAt: !13140)
!13140 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13135)
!13141 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13140)
!13142 = !DILocation(line: 1011, column: 2, scope: !13097)
!13143 = !DILocation(line: 1012, column: 1, scope: !13097)
!13144 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2243, file: !2243, line: 1014, type: !11905, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13145 = !DILocation(line: 1028, column: 25, scope: !13144)
!13146 = !DILocation(line: 1028, column: 2, scope: !13144)
!13147 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2243, file: !2243, line: 1155, type: !11826, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13148)
!13148 = !{!13149, !13150, !13151, !13152, !13153}
!13149 = !DILocalVariable(name: "a", arg: 1, scope: !13147, file: !2243, line: 1155, type: !2163)
!13150 = !DILocalVariable(name: "b", arg: 2, scope: !13147, file: !2243, line: 1155, type: !2163)
!13151 = !DILocalVariable(name: "thread_a", scope: !13147, file: !2243, line: 1157, type: !2134)
!13152 = !DILocalVariable(name: "thread_b", scope: !13147, file: !2243, line: 1157, type: !2134)
!13153 = !DILocalVariable(name: "cmp", scope: !13147, file: !2243, line: 1158, type: !1011)
!13154 = !DILocation(line: 0, scope: !13147)
!13155 = !DILocation(line: 1160, column: 13, scope: !13147)
!13156 = !DILocation(line: 1161, column: 13, scope: !13147)
!13157 = !DILocation(line: 1163, column: 8, scope: !13147)
!13158 = !DILocation(line: 1165, column: 10, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13147, file: !2243, line: 1165, column: 6)
!13160 = !DILocation(line: 1165, column: 6, scope: !13147)
!13161 = !DILocation(line: 1167, column: 17, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13159, file: !2243, line: 1167, column: 13)
!13163 = !DILocation(line: 1167, column: 13, scope: !13159)
!13164 = !DILocation(line: 1170, column: 25, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13162, file: !2243, line: 1169, column: 9)
!13166 = !DILocation(line: 1170, column: 52, scope: !13165)
!13167 = !DILocation(line: 1170, column: 35, scope: !13165)
!13168 = !DILocation(line: 1170, column: 3, scope: !13165)
!13169 = !DILocation(line: 0, scope: !13159)
!13170 = !DILocation(line: 1173, column: 1, scope: !13147)
!13171 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2243, file: !2243, line: 1246, type: !13172, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13180)
!13172 = !DISubroutineType(types: !13173)
!13173 = !{!2134, !13174}
!13174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13175, size: 32)
!13175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !1824, line: 53, size: 2080, elements: !13176)
!13176 = !{!13177, !13179}
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13175, file: !1824, line: 54, baseType: !13178, size: 2048)
!13178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2170, size: 2048, elements: !227)
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13175, file: !1824, line: 55, baseType: !32, size: 32, offset: 2048)
!13180 = !{!13181, !13182, !13183, !13184}
!13181 = !DILocalVariable(name: "pq", arg: 1, scope: !13171, file: !2243, line: 1246, type: !13174)
!13182 = !DILocalVariable(name: "thread", scope: !13171, file: !2243, line: 1252, type: !2134)
!13183 = !DILocalVariable(name: "l", scope: !13171, file: !2243, line: 1253, type: !12473)
!13184 = !DILocalVariable(name: "n", scope: !13171, file: !2243, line: 1254, type: !12623)
!13185 = !DILocation(line: 0, scope: !13171)
!13186 = !DILocation(line: 1248, column: 11, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13171, file: !2243, line: 1248, column: 6)
!13188 = !DILocation(line: 1248, column: 7, scope: !13187)
!13189 = !DILocation(line: 1248, column: 6, scope: !13171)
!13190 = !DILocation(line: 1253, column: 31, scope: !13171)
!13191 = !{i32 0, i32 33}
!13192 = !DILocation(line: 1253, column: 20, scope: !13171)
!13193 = !DILocation(line: 1254, column: 19, scope: !13171)
!13194 = !DILocation(line: 1260, column: 1, scope: !13171)
!13195 = distinct !DISubprogram(name: "z_unpend_all", scope: !2243, file: !2243, line: 1262, type: !13196, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13198)
!13196 = !DISubroutineType(types: !13197)
!13197 = !{!109, !2165}
!13198 = !{!13199, !13200, !13201}
!13199 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13195, file: !2243, line: 1262, type: !2165)
!13200 = !DILocalVariable(name: "need_sched", scope: !13195, file: !2243, line: 1264, type: !109)
!13201 = !DILocalVariable(name: "thread", scope: !13195, file: !2243, line: 1265, type: !2134)
!13202 = !DILocation(line: 0, scope: !13195)
!13203 = !DILocation(line: 1267, column: 19, scope: !13195)
!13204 = !DILocation(line: 1267, column: 41, scope: !13195)
!13205 = !DILocation(line: 1267, column: 2, scope: !13195)
!13206 = !DILocation(line: 1268, column: 3, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13195, file: !2243, line: 1267, column: 50)
!13208 = !DILocation(line: 1269, column: 3, scope: !13207)
!13209 = distinct !{!13209, !13205, !13210}
!13210 = !DILocation(line: 1271, column: 2, scope: !13195)
!13211 = !DILocation(line: 1273, column: 2, scope: !13195)
!13212 = distinct !DISubprogram(name: "z_waitq_head", scope: !10789, file: !10789, line: 52, type: !12865, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13213)
!13213 = !{!13214}
!13214 = !DILocalVariable(name: "w", arg: 1, scope: !13212, file: !10789, line: 52, type: !2165)
!13215 = !DILocation(line: 0, scope: !13212)
!13216 = !DILocation(line: 54, column: 52, scope: !13212)
!13217 = !DILocation(line: 54, column: 28, scope: !13212)
!13218 = !DILocation(line: 54, column: 9, scope: !13212)
!13219 = !DILocation(line: 54, column: 2, scope: !13212)
!13220 = distinct !DISubprogram(name: "init_ready_q", scope: !2243, file: !2243, line: 1276, type: !13221, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13228)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{null, !13223}
!13223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13224, size: 32)
!13224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !13225)
!13225 = !{!13226, !13227}
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13224, file: !123, line: 86, baseType: !2134, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13224, file: !123, line: 92, baseType: !11817, size: 128, offset: 32)
!13228 = !{!13229}
!13229 = !DILocalVariable(name: "rq", arg: 1, scope: !13220, file: !2243, line: 1276, type: !13223)
!13230 = !DILocation(line: 0, scope: !13220)
!13231 = !DILocation(line: 1279, column: 13, scope: !13220)
!13232 = !DILocation(line: 1291, column: 1, scope: !13220)
!13233 = distinct !DISubprogram(name: "z_sched_init", scope: !2243, file: !2243, line: 1293, type: !2930, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13234 = !DILocation(line: 1302, column: 2, scope: !13233)
!13235 = !DILocation(line: 1306, column: 2, scope: !13233)
!13236 = !DILocation(line: 1309, column: 1, scope: !13233)
!13237 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2243, file: !2243, line: 1311, type: !13238, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13241)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!109, !13240}
!13240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2134)
!13241 = !{!13242}
!13242 = !DILocalVariable(name: "thread", arg: 1, scope: !13237, file: !2243, line: 1311, type: !13240)
!13243 = !DILocation(line: 0, scope: !13237)
!13244 = !DILocation(line: 1313, column: 22, scope: !13237)
!13245 = !DILocation(line: 1313, column: 9, scope: !13237)
!13246 = !DILocation(line: 1313, column: 2, scope: !13237)
!13247 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2243, file: !2243, line: 1325, type: !13248, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13250)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !13240, !109}
!13250 = !{!13251, !13252, !13253}
!13251 = !DILocalVariable(name: "thread", arg: 1, scope: !13247, file: !2243, line: 1325, type: !13240)
!13252 = !DILocalVariable(name: "prio", arg: 2, scope: !13247, file: !2243, line: 1325, type: !109)
!13253 = !DILocalVariable(name: "th", scope: !13247, file: !2243, line: 1334, type: !2134)
!13254 = !DILocation(line: 0, scope: !13247)
!13255 = !DILocation(line: 1331, column: 2, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !2243, line: 1331, column: 2)
!13257 = distinct !DILexicalBlock(scope: !13258, file: !2243, line: 1331, column: 2)
!13258 = distinct !DILexicalBlock(scope: !13247, file: !2243, line: 1331, column: 2)
!13259 = !DILocation(line: 1331, column: 2, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13256, file: !2243, line: 1331, column: 2)
!13261 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13262)
!13262 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13263)
!13263 = distinct !DILocation(line: 1332, column: 2, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13265, file: !2243, line: 1332, column: 2)
!13265 = distinct !DILexicalBlock(scope: !13247, file: !2243, line: 1332, column: 2)
!13266 = !DILocation(line: 0, scope: !12235, inlinedAt: !13262)
!13267 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13263)
!13268 = !DILocation(line: 1332, column: 2, scope: !13265)
!13269 = !DILocation(line: 1332, column: 2, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13264, file: !2243, line: 1332, column: 2)
!13271 = !DILocation(line: 1336, column: 2, scope: !13247)
!13272 = !DILocation(line: 1337, column: 1, scope: !13247)
!13273 = distinct !DISubprogram(name: "k_can_yield", scope: !2243, file: !2243, line: 1384, type: !6715, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13274 = !DILocation(line: 1386, column: 11, scope: !13273)
!13275 = !DILocation(line: 1386, column: 29, scope: !13273)
!13276 = !DILocation(line: 1386, column: 32, scope: !13273)
!13277 = !DILocation(line: 1386, column: 46, scope: !13273)
!13278 = !DILocation(line: 1387, column: 28, scope: !13273)
!13279 = !DILocation(line: 1387, column: 4, scope: !13273)
!13280 = !DILocation(line: 1386, column: 2, scope: !13273)
!13281 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !119, file: !119, line: 989, type: !6715, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13282 = !DILocation(line: 993, column: 10, scope: !13281)
!13283 = !DILocation(line: 993, column: 2, scope: !13281)
!13284 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2243, file: !2243, line: 1390, type: !2930, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13285)
!13285 = !{!13286}
!13286 = !DILocalVariable(name: "key", scope: !13284, file: !2243, line: 1396, type: !11570)
!13287 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13288)
!13288 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13289)
!13289 = distinct !DILocation(line: 1392, column: 2, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13291, file: !2243, line: 1392, column: 2)
!13291 = distinct !DILexicalBlock(scope: !13284, file: !2243, line: 1392, column: 2)
!13292 = !DILocation(line: 0, scope: !12235, inlinedAt: !13288)
!13293 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13289)
!13294 = !DILocation(line: 1392, column: 2, scope: !13291)
!13295 = !DILocation(line: 1392, column: 2, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13290, file: !2243, line: 1392, column: 2)
!13297 = !DILocation(line: 0, scope: !11578, inlinedAt: !13298)
!13298 = distinct !DILocation(line: 1396, column: 25, scope: !13284)
!13299 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13298)
!13301 = !DILocation(line: 0, scope: !11587, inlinedAt: !13300)
!13302 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13298)
!13303 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13298)
!13304 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13298)
!13305 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13298)
!13306 = !DILocation(line: 0, scope: !13284)
!13307 = !DILocation(line: 1400, column: 18, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !2243, line: 1399, column: 36)
!13309 = distinct !DILexicalBlock(scope: !13284, file: !2243, line: 1398, column: 6)
!13310 = !DILocation(line: 0, scope: !11772, inlinedAt: !13311)
!13311 = distinct !DILocation(line: 1400, column: 3, scope: !13308)
!13312 = !DILocation(line: 266, column: 15, scope: !11772, inlinedAt: !13311)
!13313 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !13311)
!13314 = !DILocation(line: 0, scope: !11780, inlinedAt: !13315)
!13315 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !13311)
!13316 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !13315)
!13317 = !DILocation(line: 1402, column: 15, scope: !13284)
!13318 = !DILocation(line: 0, scope: !11789, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 1402, column: 2, scope: !13284)
!13320 = !DILocation(line: 252, column: 15, scope: !11789, inlinedAt: !13319)
!13321 = !DILocation(line: 252, column: 28, scope: !11789, inlinedAt: !13319)
!13322 = !DILocation(line: 0, scope: !11796, inlinedAt: !13323)
!13323 = distinct !DILocation(line: 254, column: 3, scope: !11800, inlinedAt: !13319)
!13324 = !DILocation(line: 229, column: 2, scope: !11796, inlinedAt: !13323)
!13325 = !DILocation(line: 1403, column: 2, scope: !13284)
!13326 = !DILocation(line: 0, scope: !12186, inlinedAt: !13327)
!13327 = distinct !DILocation(line: 1404, column: 2, scope: !13284)
!13328 = !DILocation(line: 0, scope: !12195, inlinedAt: !13329)
!13329 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !13327)
!13330 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !13329)
!13331 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !13329)
!13332 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !13329)
!13333 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !13327)
!13334 = !DILocation(line: 1405, column: 1, scope: !13284)
!13335 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2243, file: !2243, line: 1459, type: !13336, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13338)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{!1011, !12396}
!13338 = !{!13339, !13340, !13341}
!13339 = !DILocalVariable(name: "timeout", arg: 1, scope: !13335, file: !2243, line: 1459, type: !12396)
!13340 = !DILocalVariable(name: "ticks", scope: !13335, file: !2243, line: 1461, type: !104)
!13341 = !DILocalVariable(name: "ret", scope: !13335, file: !2243, line: 1480, type: !1011)
!13342 = !DILocation(line: 0, scope: !13335)
!13343 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13345)
!13345 = distinct !DILocation(line: 1463, column: 2, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13347, file: !2243, line: 1463, column: 2)
!13347 = distinct !DILexicalBlock(scope: !13335, file: !2243, line: 1463, column: 2)
!13348 = !DILocation(line: 0, scope: !12235, inlinedAt: !13344)
!13349 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13345)
!13350 = !DILocation(line: 1463, column: 2, scope: !13347)
!13351 = !DILocation(line: 1463, column: 2, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13346, file: !2243, line: 1463, column: 2)
!13353 = !DILocation(line: 1468, column: 6, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13335, file: !2243, line: 1468, column: 6)
!13355 = !DILocation(line: 1468, column: 6, scope: !13335)
!13356 = !DILocation(line: 1469, column: 20, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13354, file: !2243, line: 1468, column: 40)
!13358 = !DILocation(line: 1469, column: 3, scope: !13357)
!13359 = !DILocation(line: 1473, column: 3, scope: !13357)
!13360 = !DILocation(line: 1478, column: 10, scope: !13335)
!13361 = !DILocation(line: 1480, column: 16, scope: !13335)
!13362 = !DILocation(line: 1485, column: 1, scope: !13335)
!13363 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3105, file: !3105, line: 310, type: !13364, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13366)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{null, !13240}
!13366 = !{!13367}
!13367 = !DILocalVariable(name: "thread", arg: 1, scope: !13363, file: !3105, line: 310, type: !13240)
!13368 = !DILocation(line: 0, scope: !13363)
!13369 = !DILocation(line: 319, column: 2, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13363, file: !3105, line: 319, column: 2)
!13371 = !{i64 2151087062}
!13372 = !DILocation(line: 320, column: 2, scope: !13363)
!13373 = !DILocation(line: 321, column: 1, scope: !13363)
!13374 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2243, file: !2243, line: 1415, type: !13375, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13377)
!13375 = !DISubroutineType(types: !13376)
!13376 = !{!1011, !104}
!13377 = !{!13378, !13379, !13380, !13381}
!13378 = !DILocalVariable(name: "ticks", arg: 1, scope: !13374, file: !2243, line: 1415, type: !104)
!13379 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13374, file: !2243, line: 1418, type: !110)
!13380 = !DILocalVariable(name: "timeout", scope: !13374, file: !2243, line: 1430, type: !12396)
!13381 = !DILocalVariable(name: "key", scope: !13374, file: !2243, line: 1437, type: !11570)
!13382 = !DILocation(line: 0, scope: !13374)
!13383 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13385)
!13385 = distinct !DILocation(line: 1420, column: 2, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !2243, line: 1420, column: 2)
!13387 = distinct !DILexicalBlock(scope: !13374, file: !2243, line: 1420, column: 2)
!13388 = !DILocation(line: 0, scope: !12235, inlinedAt: !13384)
!13389 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13385)
!13390 = !DILocation(line: 1420, column: 2, scope: !13387)
!13391 = !DILocation(line: 1420, column: 2, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13386, file: !2243, line: 1420, column: 2)
!13393 = !DILocation(line: 1425, column: 12, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13374, file: !2243, line: 1425, column: 6)
!13395 = !DILocation(line: 1425, column: 6, scope: !13374)
!13396 = !DILocation(line: 1426, column: 3, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13394, file: !2243, line: 1425, column: 18)
!13398 = !DILocation(line: 1427, column: 3, scope: !13397)
!13399 = !DILocation(line: 1431, column: 24, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13374, file: !2243, line: 1431, column: 6)
!13401 = !DILocation(line: 1431, column: 6, scope: !13374)
!13402 = !DILocation(line: 1432, column: 35, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13400, file: !2243, line: 1431, column: 30)
!13404 = !DILocation(line: 1432, column: 27, scope: !13403)
!13405 = !DILocation(line: 1433, column: 2, scope: !13403)
!13406 = !DILocation(line: 1434, column: 27, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13400, file: !2243, line: 1433, column: 9)
!13408 = !DILocation(line: 0, scope: !13400)
!13409 = !DILocation(line: 0, scope: !11578, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 1437, column: 25, scope: !13374)
!13411 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13412)
!13412 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13410)
!13413 = !DILocation(line: 0, scope: !11587, inlinedAt: !13412)
!13414 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13410)
!13415 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13410)
!13416 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13410)
!13417 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13410)
!13418 = !DILocation(line: 1440, column: 20, scope: !13374)
!13419 = !DILocation(line: 1440, column: 18, scope: !13374)
!13420 = !DILocation(line: 1442, column: 2, scope: !13374)
!13421 = !DILocation(line: 1443, column: 23, scope: !13374)
!13422 = !DILocation(line: 1443, column: 2, scope: !13374)
!13423 = !DILocation(line: 1444, column: 29, scope: !13374)
!13424 = !DILocation(line: 1444, column: 2, scope: !13374)
!13425 = !DILocation(line: 0, scope: !12186, inlinedAt: !13426)
!13426 = distinct !DILocation(line: 1446, column: 8, scope: !13374)
!13427 = !DILocation(line: 0, scope: !12195, inlinedAt: !13428)
!13428 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !13426)
!13429 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !13428)
!13430 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !13428)
!13431 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !13428)
!13432 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !13426)
!13433 = !DILocation(line: 1448, column: 2, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2243, line: 1448, column: 2)
!13435 = distinct !DILexicalBlock(scope: !13374, file: !2243, line: 1448, column: 2)
!13436 = !DILocation(line: 1448, column: 2, scope: !13435)
!13437 = !DILocation(line: 1448, column: 2, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !2243, line: 1448, column: 2)
!13439 = !DILocation(line: 1450, column: 10, scope: !13374)
!13440 = !DILocation(line: 1450, column: 45, scope: !13374)
!13441 = !DILocation(line: 1450, column: 43, scope: !13374)
!13442 = !DILocation(line: 1451, column: 6, scope: !13374)
!13443 = !DILocation(line: 1457, column: 1, scope: !13374)
!13444 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3158, file: !3158, line: 1103, type: !3159, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13445)
!13445 = !{!13446}
!13446 = !DILocalVariable(name: "t", arg: 1, scope: !13444, file: !3158, line: 1103, type: !111)
!13447 = !DILocation(line: 0, scope: !13444)
!13448 = !DILocation(line: 0, scope: !11640, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 1106, column: 9, scope: !13444)
!13450 = !DILocation(line: 139, column: 13, scope: !13451, inlinedAt: !13449)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3158, line: 138, column: 10)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !3158, line: 136, column: 7)
!13453 = distinct !DILexicalBlock(scope: !11661, file: !3158, line: 134, column: 17)
!13454 = !DILocation(line: 1106, column: 2, scope: !13444)
!13455 = distinct !DISubprogram(name: "k_yield", scope: !3105, file: !3105, line: 140, type: !2930, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13456 = !DILocation(line: 148, column: 2, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13455, file: !3105, line: 148, column: 2)
!13458 = !{i64 2151086382}
!13459 = !DILocation(line: 149, column: 2, scope: !13455)
!13460 = !DILocation(line: 150, column: 1, scope: !13455)
!13461 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2243, file: !2243, line: 1495, type: !13462, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13464)
!13462 = !DISubroutineType(types: !13463)
!13463 = !{!1011, !109}
!13464 = !{!13465, !13466}
!13465 = !DILocalVariable(name: "us", arg: 1, scope: !13461, file: !2243, line: 1495, type: !109)
!13466 = !DILocalVariable(name: "ticks", scope: !13461, file: !2243, line: 1497, type: !1011)
!13467 = !DILocation(line: 0, scope: !13461)
!13468 = !DILocation(line: 1501, column: 31, scope: !13461)
!13469 = !DILocation(line: 1501, column: 10, scope: !13461)
!13470 = !DILocation(line: 1502, column: 23, scope: !13461)
!13471 = !DILocation(line: 1502, column: 10, scope: !13461)
!13472 = !DILocation(line: 1506, column: 31, scope: !13461)
!13473 = !DILocation(line: 1506, column: 9, scope: !13461)
!13474 = !DILocation(line: 1506, column: 2, scope: !13461)
!13475 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3158, file: !3158, line: 571, type: !3159, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13476)
!13476 = !{!13477}
!13477 = !DILocalVariable(name: "t", arg: 1, scope: !13475, file: !3158, line: 571, type: !111)
!13478 = !DILocation(line: 0, scope: !13475)
!13479 = !DILocation(line: 0, scope: !11640, inlinedAt: !13480)
!13480 = distinct !DILocation(line: 574, column: 9, scope: !13475)
!13481 = !DILocation(line: 135, column: 5, scope: !13453, inlinedAt: !13480)
!13482 = !DILocation(line: 139, column: 13, scope: !13451, inlinedAt: !13480)
!13483 = !DILocation(line: 574, column: 2, scope: !13475)
!13484 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3158, file: !3158, line: 1187, type: !3159, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13485)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "t", arg: 1, scope: !13484, file: !3158, line: 1187, type: !111)
!13487 = !DILocation(line: 0, scope: !13484)
!13488 = !DILocation(line: 0, scope: !11640, inlinedAt: !13489)
!13489 = distinct !DILocation(line: 1190, column: 9, scope: !13484)
!13490 = !DILocation(line: 145, column: 13, scope: !13491, inlinedAt: !13489)
!13491 = distinct !DILexicalBlock(scope: !11658, file: !3158, line: 144, column: 10)
!13492 = !DILocation(line: 1190, column: 2, scope: !13484)
!13493 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2243, file: !2243, line: 1517, type: !13364, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13494)
!13494 = !{!13495}
!13495 = !DILocalVariable(name: "thread", arg: 1, scope: !13493, file: !2243, line: 1517, type: !13240)
!13496 = !DILocation(line: 0, scope: !13493)
!13497 = !DILocation(line: 1521, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13493, file: !2243, line: 1521, column: 6)
!13499 = !DILocation(line: 1521, column: 6, scope: !13493)
!13500 = !DILocation(line: 1525, column: 6, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13493, file: !2243, line: 1525, column: 6)
!13502 = !DILocation(line: 1525, column: 37, scope: !13501)
!13503 = !DILocation(line: 1525, column: 6, scope: !13493)
!13504 = !DILocation(line: 1527, column: 20, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !2243, line: 1527, column: 7)
!13506 = distinct !DILexicalBlock(scope: !13501, file: !2243, line: 1525, column: 42)
!13507 = !DILocation(line: 1527, column: 33, scope: !13505)
!13508 = !DILocation(line: 1527, column: 7, scope: !13506)
!13509 = !DILocation(line: 1532, column: 2, scope: !13493)
!13510 = !DILocation(line: 1533, column: 2, scope: !13493)
!13511 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 1537, column: 7, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13493, file: !2243, line: 1537, column: 6)
!13515 = !DILocation(line: 0, scope: !12235, inlinedAt: !13512)
!13516 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13513)
!13517 = !DILocation(line: 1537, column: 6, scope: !13493)
!13518 = !DILocation(line: 1538, column: 3, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13514, file: !2243, line: 1537, column: 25)
!13520 = !DILocation(line: 1539, column: 2, scope: !13519)
!13521 = !DILocation(line: 1540, column: 1, scope: !13493)
!13522 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10191, file: !10191, line: 101, type: !11721, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13523)
!13523 = !{!13524}
!13524 = !DILocalVariable(name: "thread", arg: 1, scope: !13522, file: !10191, line: 101, type: !2134)
!13525 = !DILocation(line: 0, scope: !13522)
!13526 = !DILocation(line: 103, column: 23, scope: !13522)
!13527 = !DILocation(line: 103, column: 36, scope: !13522)
!13528 = !DILocation(line: 103, column: 55, scope: !13522)
!13529 = !DILocation(line: 103, column: 2, scope: !13522)
!13530 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2243, file: !2243, line: 1567, type: !13531, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!13240}
!13533 = !{!13534}
!13534 = !DILocalVariable(name: "ret", scope: !13530, file: !2243, line: 1577, type: !13240)
!13535 = !DILocation(line: 1577, column: 30, scope: !13530)
!13536 = !DILocation(line: 0, scope: !13530)
!13537 = !DILocation(line: 1582, column: 2, scope: !13530)
!13538 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2243, file: !2243, line: 1593, type: !13539, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1817)
!13539 = !DISubroutineType(types: !13540)
!13540 = !{!109}
!13541 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13542)
!13542 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13543)
!13543 = distinct !DILocation(line: 1595, column: 10, scope: !13538)
!13544 = !DILocation(line: 0, scope: !12235, inlinedAt: !13542)
!13545 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13543)
!13546 = !DILocation(line: 1595, column: 27, scope: !13538)
!13547 = !DILocation(line: 1595, column: 41, scope: !13538)
!13548 = !DILocation(line: 1595, column: 30, scope: !13538)
!13549 = !DILocation(line: 1595, column: 2, scope: !13538)
!13550 = distinct !DISubprogram(name: "z_thread_abort", scope: !2243, file: !2243, line: 1725, type: !11536, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13551)
!13551 = !{!13552, !13553}
!13552 = !DILocalVariable(name: "thread", arg: 1, scope: !13550, file: !2243, line: 1725, type: !2134)
!13553 = !DILocalVariable(name: "key", scope: !13550, file: !2243, line: 1727, type: !11570)
!13554 = !DILocation(line: 0, scope: !13550)
!13555 = !DILocation(line: 0, scope: !11578, inlinedAt: !13556)
!13556 = distinct !DILocation(line: 1727, column: 25, scope: !13550)
!13557 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13558)
!13558 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13556)
!13559 = !DILocation(line: 0, scope: !11587, inlinedAt: !13558)
!13560 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13556)
!13561 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13556)
!13562 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13556)
!13563 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13556)
!13564 = !DILocation(line: 1729, column: 20, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13550, file: !2243, line: 1729, column: 6)
!13566 = !DILocation(line: 1729, column: 33, scope: !13565)
!13567 = !DILocation(line: 1729, column: 48, scope: !13565)
!13568 = !DILocation(line: 1729, column: 6, scope: !13550)
!13569 = !DILocation(line: 0, scope: !11612, inlinedAt: !13570)
!13570 = distinct !DILocation(line: 1730, column: 3, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13565, file: !2243, line: 1729, column: 54)
!13572 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13570)
!13573 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13570)
!13574 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13570)
!13575 = !DILocation(line: 0, scope: !11626, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13570)
!13577 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13576)
!13578 = !DILocation(line: 1731, column: 3, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !2243, line: 1731, column: 3)
!13580 = distinct !DILexicalBlock(scope: !13581, file: !2243, line: 1731, column: 3)
!13581 = distinct !DILexicalBlock(scope: !13571, file: !2243, line: 1731, column: 3)
!13582 = !DILocation(line: 1736, column: 20, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13550, file: !2243, line: 1736, column: 6)
!13584 = !DILocation(line: 1736, column: 33, scope: !13583)
!13585 = !DILocation(line: 1736, column: 49, scope: !13583)
!13586 = !DILocation(line: 1736, column: 6, scope: !13550)
!13587 = !DILocation(line: 0, scope: !11612, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 1737, column: 3, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13583, file: !2243, line: 1736, column: 56)
!13590 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13588)
!13591 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13588)
!13592 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13588)
!13593 = !DILocation(line: 0, scope: !11626, inlinedAt: !13594)
!13594 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13588)
!13595 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13594)
!13596 = !DILocation(line: 1738, column: 3, scope: !13589)
!13597 = !DILocation(line: 1775, column: 2, scope: !13550)
!13598 = !DILocation(line: 1776, column: 16, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13550, file: !2243, line: 1776, column: 6)
!13600 = !DILocation(line: 1776, column: 13, scope: !13599)
!13601 = !DILocation(line: 1776, column: 25, scope: !13599)
!13602 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13603)
!13603 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 1776, column: 29, scope: !13599)
!13605 = !DILocation(line: 0, scope: !12235, inlinedAt: !13603)
!13606 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13604)
!13607 = !DILocation(line: 1776, column: 6, scope: !13550)
!13608 = !DILocation(line: 0, scope: !12186, inlinedAt: !13609)
!13609 = distinct !DILocation(line: 1777, column: 3, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13599, file: !2243, line: 1776, column: 47)
!13611 = !DILocation(line: 0, scope: !12195, inlinedAt: !13612)
!13612 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !13609)
!13613 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !13612)
!13614 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !13612)
!13615 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !13612)
!13616 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !13609)
!13617 = !DILocation(line: 1778, column: 3, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !2243, line: 1778, column: 3)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !2243, line: 1778, column: 3)
!13620 = distinct !DILexicalBlock(scope: !13610, file: !2243, line: 1778, column: 3)
!13621 = !DILocation(line: 0, scope: !11612, inlinedAt: !13622)
!13622 = distinct !DILocation(line: 1780, column: 2, scope: !13550)
!13623 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13622)
!13624 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13622)
!13625 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13622)
!13626 = !DILocation(line: 0, scope: !11626, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13622)
!13628 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13627)
!13629 = !DILocation(line: 1781, column: 1, scope: !13550)
!13630 = distinct !DISubprogram(name: "end_thread", scope: !2243, file: !2243, line: 1690, type: !11536, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13631)
!13631 = !{!13632}
!13632 = !DILocalVariable(name: "thread", arg: 1, scope: !13630, file: !2243, line: 1690, type: !2134)
!13633 = !DILocation(line: 0, scope: !13630)
!13634 = !DILocation(line: 1695, column: 20, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !2243, line: 1695, column: 6)
!13636 = !DILocation(line: 1695, column: 33, scope: !13635)
!13637 = !DILocation(line: 1695, column: 49, scope: !13635)
!13638 = !DILocation(line: 1695, column: 6, scope: !13630)
!13639 = !DILocation(line: 1697, column: 29, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13635, file: !2243, line: 1695, column: 56)
!13641 = !DILocation(line: 1698, column: 7, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13640, file: !2243, line: 1698, column: 7)
!13643 = !DILocation(line: 1698, column: 7, scope: !13640)
!13644 = !DILocation(line: 0, scope: !11772, inlinedAt: !13645)
!13645 = distinct !DILocation(line: 1699, column: 4, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13642, file: !2243, line: 1698, column: 35)
!13647 = !DILocation(line: 266, column: 28, scope: !11772, inlinedAt: !13645)
!13648 = !DILocation(line: 0, scope: !11780, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 268, column: 3, scope: !11784, inlinedAt: !13645)
!13650 = !DILocation(line: 234, column: 2, scope: !11780, inlinedAt: !13649)
!13651 = !DILocation(line: 1700, column: 3, scope: !13646)
!13652 = !DILocation(line: 1701, column: 20, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13640, file: !2243, line: 1701, column: 7)
!13654 = !DILocation(line: 1701, column: 30, scope: !13653)
!13655 = !DILocation(line: 1701, column: 7, scope: !13640)
!13656 = !DILocation(line: 1702, column: 4, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13653, file: !2243, line: 1701, column: 39)
!13658 = !DILocation(line: 1703, column: 3, scope: !13657)
!13659 = !DILocation(line: 1704, column: 9, scope: !13640)
!13660 = !DILocation(line: 1705, column: 23, scope: !13640)
!13661 = !DILocation(line: 1705, column: 3, scope: !13640)
!13662 = !DILocation(line: 1706, column: 3, scope: !13640)
!13663 = !DILocation(line: 1710, column: 3, scope: !13640)
!13664 = !DILocation(line: 1722, column: 2, scope: !13640)
!13665 = !DILocation(line: 1723, column: 1, scope: !13630)
!13666 = distinct !DISubprogram(name: "unpend_all", scope: !2243, file: !2243, line: 1674, type: !13667, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13669)
!13667 = !DISubroutineType(types: !13668)
!13668 = !{null, !2165}
!13669 = !{!13670, !13671}
!13670 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13666, file: !2243, line: 1674, type: !2165)
!13671 = !DILocalVariable(name: "thread", scope: !13666, file: !2243, line: 1676, type: !2134)
!13672 = !DILocation(line: 0, scope: !13666)
!13673 = !DILocation(line: 1678, column: 19, scope: !13666)
!13674 = !DILocation(line: 1678, column: 41, scope: !13666)
!13675 = !DILocation(line: 1678, column: 2, scope: !13666)
!13676 = !DILocation(line: 1679, column: 3, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13666, file: !2243, line: 1678, column: 50)
!13678 = !DILocation(line: 1680, column: 9, scope: !13677)
!13679 = !DILocalVariable(name: "thread", arg: 1, scope: !13680, file: !10211, line: 65, type: !2134)
!13680 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10211, file: !10211, line: 65, type: !13681, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13683)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !2134, !32}
!13683 = !{!13679, !13684}
!13684 = !DILocalVariable(name: "value", arg: 2, scope: !13680, file: !10211, line: 65, type: !32)
!13685 = !DILocation(line: 0, scope: !13680, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 1681, column: 3, scope: !13677)
!13687 = !DILocation(line: 67, column: 15, scope: !13680, inlinedAt: !13686)
!13688 = !DILocation(line: 67, column: 33, scope: !13680, inlinedAt: !13686)
!13689 = !DILocation(line: 1682, column: 3, scope: !13677)
!13690 = distinct !{!13690, !13675, !13691}
!13691 = !DILocation(line: 1683, column: 2, scope: !13666)
!13692 = !DILocation(line: 1684, column: 1, scope: !13666)
!13693 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2243, file: !2243, line: 1794, type: !13694, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13696)
!13694 = !DISubroutineType(types: !13695)
!13695 = !{!109, !2134, !12396}
!13696 = !{!13697, !13698, !13699, !13700}
!13697 = !DILocalVariable(name: "thread", arg: 1, scope: !13693, file: !2243, line: 1794, type: !2134)
!13698 = !DILocalVariable(name: "timeout", arg: 2, scope: !13693, file: !2243, line: 1794, type: !12396)
!13699 = !DILocalVariable(name: "key", scope: !13693, file: !2243, line: 1796, type: !11570)
!13700 = !DILocalVariable(name: "ret", scope: !13693, file: !2243, line: 1797, type: !109)
!13701 = !DILocation(line: 0, scope: !13693)
!13702 = !DILocation(line: 0, scope: !11578, inlinedAt: !13703)
!13703 = distinct !DILocation(line: 1796, column: 25, scope: !13693)
!13704 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13705)
!13705 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13703)
!13706 = !DILocation(line: 0, scope: !11587, inlinedAt: !13705)
!13707 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13703)
!13708 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13703)
!13709 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13703)
!13710 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13703)
!13711 = !DILocation(line: 1801, column: 20, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13693, file: !2243, line: 1801, column: 6)
!13713 = !DILocation(line: 1801, column: 33, scope: !13712)
!13714 = !DILocation(line: 1801, column: 49, scope: !13712)
!13715 = !DILocation(line: 1801, column: 6, scope: !13693)
!13716 = !DILocation(line: 1803, column: 13, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13712, file: !2243, line: 1803, column: 13)
!13718 = !DILocation(line: 1803, column: 13, scope: !13712)
!13719 = !DILocation(line: 1805, column: 24, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13717, file: !2243, line: 1805, column: 13)
!13721 = !DILocation(line: 1805, column: 21, scope: !13720)
!13722 = !DILocation(line: 1805, column: 34, scope: !13720)
!13723 = !DILocation(line: 1806, column: 20, scope: !13720)
!13724 = !DILocation(line: 1806, column: 44, scope: !13720)
!13725 = !DILocation(line: 1806, column: 30, scope: !13720)
!13726 = !DILocation(line: 1805, column: 13, scope: !13717)
!13727 = !DILocation(line: 1031, column: 3, scope: !12235, inlinedAt: !13728)
!13728 = distinct !DILocation(line: 48, column: 10, scope: !12239, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 1809, column: 3, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !2243, line: 1809, column: 3)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !2243, line: 1809, column: 3)
!13732 = distinct !DILexicalBlock(scope: !13720, file: !2243, line: 1808, column: 9)
!13733 = !DILocation(line: 0, scope: !12235, inlinedAt: !13728)
!13734 = !DILocation(line: 48, column: 9, scope: !12239, inlinedAt: !13729)
!13735 = !DILocation(line: 1809, column: 3, scope: !13731)
!13736 = !DILocation(line: 1809, column: 3, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13730, file: !2243, line: 1809, column: 3)
!13738 = !DILocation(line: 1810, column: 23, scope: !13732)
!13739 = !DILocation(line: 1810, column: 42, scope: !13732)
!13740 = !DILocation(line: 1810, column: 3, scope: !13732)
!13741 = !DILocation(line: 1811, column: 22, scope: !13732)
!13742 = !DILocation(line: 1811, column: 3, scope: !13732)
!13743 = !DILocation(line: 0, scope: !12186, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 1814, column: 9, scope: !13732)
!13745 = !DILocation(line: 0, scope: !12195, inlinedAt: !13746)
!13746 = distinct !DILocation(line: 195, column: 2, scope: !12186, inlinedAt: !13744)
!13747 = !DILocation(line: 225, column: 2, scope: !12202, inlinedAt: !13746)
!13748 = !DILocation(line: 225, column: 2, scope: !12203, inlinedAt: !13746)
!13749 = !DILocation(line: 225, column: 2, scope: !12206, inlinedAt: !13746)
!13750 = !DILocation(line: 196, column: 9, scope: !12186, inlinedAt: !13744)
!13751 = !DILocation(line: 1817, column: 3, scope: !13732)
!13752 = !DILocation(line: 0, scope: !13712)
!13753 = !DILocation(line: 0, scope: !11612, inlinedAt: !13754)
!13754 = distinct !DILocation(line: 1822, column: 2, scope: !13693)
!13755 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13754)
!13756 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13754)
!13757 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13754)
!13758 = !DILocation(line: 0, scope: !11626, inlinedAt: !13759)
!13759 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13754)
!13760 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13759)
!13761 = !DILocation(line: 1823, column: 2, scope: !13693)
!13762 = !DILocation(line: 1824, column: 1, scope: !13693)
!13763 = distinct !DISubprogram(name: "z_sched_wake", scope: !2243, file: !2243, line: 1882, type: !13764, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13766)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!754, !2165, !109, !108}
!13766 = !{!13767, !13768, !13769, !13770, !13771, !13772, !13774}
!13767 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13763, file: !2243, line: 1882, type: !2165)
!13768 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13763, file: !2243, line: 1882, type: !109)
!13769 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13763, file: !2243, line: 1882, type: !108)
!13770 = !DILocalVariable(name: "thread", scope: !13763, file: !2243, line: 1884, type: !2134)
!13771 = !DILocalVariable(name: "ret", scope: !13763, file: !2243, line: 1885, type: !754)
!13772 = !DILocalVariable(name: "__i", scope: !13773, file: !2243, line: 1887, type: !11570)
!13773 = distinct !DILexicalBlock(scope: !13763, file: !2243, line: 1887, column: 2)
!13774 = !DILocalVariable(name: "__key", scope: !13773, file: !2243, line: 1887, type: !11570)
!13775 = !DILocation(line: 0, scope: !13763)
!13776 = !DILocation(line: 0, scope: !13773)
!13777 = !DILocation(line: 0, scope: !11578, inlinedAt: !13778)
!13778 = distinct !DILocation(line: 1887, column: 2, scope: !13773)
!13779 = !DILocation(line: 55, column: 2, scope: !11587, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 145, column: 10, scope: !11578, inlinedAt: !13778)
!13781 = !DILocation(line: 0, scope: !11587, inlinedAt: !13780)
!13782 = !DILocation(line: 148, column: 2, scope: !11595, inlinedAt: !13778)
!13783 = !DILocation(line: 148, column: 2, scope: !11596, inlinedAt: !13778)
!13784 = !DILocation(line: 148, column: 2, scope: !11599, inlinedAt: !13778)
!13785 = !DILocation(line: 160, column: 2, scope: !11578, inlinedAt: !13778)
!13786 = !DILocation(line: 1888, column: 12, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !2243, line: 1887, column: 26)
!13788 = distinct !DILexicalBlock(scope: !13773, file: !2243, line: 1887, column: 2)
!13789 = !DILocation(line: 1890, column: 14, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13787, file: !2243, line: 1890, column: 7)
!13791 = !DILocation(line: 1890, column: 7, scope: !13787)
!13792 = !DILocalVariable(name: "thread", arg: 1, scope: !13793, file: !13794, line: 134, type: !2134)
!13793 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13794, file: !13794, line: 134, type: !13795, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13797)
!13794 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13795 = !DISubroutineType(types: !13796)
!13796 = !{null, !2134, !32, !108}
!13797 = !{!13792, !13798, !13799}
!13798 = !DILocalVariable(name: "value", arg: 2, scope: !13793, file: !13794, line: 135, type: !32)
!13799 = !DILocalVariable(name: "data", arg: 3, scope: !13793, file: !13794, line: 136, type: !108)
!13800 = !DILocation(line: 0, scope: !13793, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 1891, column: 4, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13790, file: !2243, line: 1890, column: 23)
!13803 = !DILocation(line: 0, scope: !13680, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 138, column: 2, scope: !13793, inlinedAt: !13801)
!13805 = !DILocation(line: 67, column: 15, scope: !13680, inlinedAt: !13804)
!13806 = !DILocation(line: 67, column: 33, scope: !13680, inlinedAt: !13804)
!13807 = !DILocation(line: 139, column: 15, scope: !13793, inlinedAt: !13801)
!13808 = !DILocation(line: 139, column: 25, scope: !13793, inlinedAt: !13801)
!13809 = !DILocation(line: 1894, column: 4, scope: !13802)
!13810 = !DILocation(line: 1895, column: 10, scope: !13802)
!13811 = !DILocation(line: 1896, column: 4, scope: !13802)
!13812 = !DILocation(line: 1898, column: 3, scope: !13802)
!13813 = !DILocation(line: 0, scope: !11612, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 1887, column: 2, scope: !13788)
!13815 = !DILocation(line: 194, column: 2, scope: !11620, inlinedAt: !13814)
!13816 = !DILocation(line: 194, column: 2, scope: !11621, inlinedAt: !13814)
!13817 = !DILocation(line: 194, column: 2, scope: !11624, inlinedAt: !13814)
!13818 = !DILocation(line: 0, scope: !11626, inlinedAt: !13819)
!13819 = distinct !DILocation(line: 215, column: 2, scope: !11612, inlinedAt: !13814)
!13820 = !DILocation(line: 95, column: 2, scope: !11626, inlinedAt: !13819)
!13821 = !DILocation(line: 1901, column: 2, scope: !13763)
!13822 = distinct !DISubprogram(name: "z_sched_wait", scope: !2243, file: !2243, line: 1904, type: !13823, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13826)
!13823 = !DISubroutineType(types: !13824)
!13824 = !{!109, !11581, !11570, !2165, !12396, !13825}
!13825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!13826 = !{!13827, !13828, !13829, !13830, !13831, !13832}
!13827 = !DILocalVariable(name: "lock", arg: 1, scope: !13822, file: !2243, line: 1904, type: !11581)
!13828 = !DILocalVariable(name: "key", arg: 2, scope: !13822, file: !2243, line: 1904, type: !11570)
!13829 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13822, file: !2243, line: 1905, type: !2165)
!13830 = !DILocalVariable(name: "timeout", arg: 4, scope: !13822, file: !2243, line: 1905, type: !12396)
!13831 = !DILocalVariable(name: "data", arg: 5, scope: !13822, file: !2243, line: 1905, type: !13825)
!13832 = !DILocalVariable(name: "ret", scope: !13822, file: !2243, line: 1907, type: !109)
!13833 = !DILocation(line: 0, scope: !13822)
!13834 = !DILocation(line: 1907, column: 12, scope: !13822)
!13835 = !DILocation(line: 1909, column: 11, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13822, file: !2243, line: 1909, column: 6)
!13837 = !DILocation(line: 1909, column: 6, scope: !13822)
!13838 = !DILocation(line: 1910, column: 11, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13836, file: !2243, line: 1909, column: 20)
!13840 = !DILocation(line: 1910, column: 26, scope: !13839)
!13841 = !DILocation(line: 1910, column: 9, scope: !13839)
!13842 = !DILocation(line: 1911, column: 2, scope: !13839)
!13843 = !DILocation(line: 1912, column: 2, scope: !13822)
!13844 = distinct !DISubprogram(name: "z_data_copy", scope: !13845, file: !13845, line: 22, type: !2930, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2913, retainedNodes: !1817)
!13845 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13846 = !DILocation(line: 24, column: 2, scope: !13844)
!13847 = !DILocation(line: 27, column: 2, scope: !13844)
!13848 = !DILocation(line: 71, column: 1, scope: !13844)
!13849 = distinct !DISubprogram(name: "z_add_timeout", scope: !2280, file: !2280, line: 88, type: !13850, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13856)
!13850 = !DISubroutineType(types: !13851)
!13851 = !{null, !2253, !2272, !13852}
!13852 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13853)
!13853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13854)
!13854 = !{!13855}
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13853, file: !105, line: 66, baseType: !104, size: 64)
!13856 = !{!13857, !13858, !13859, !13860, !13866, !13867, !13870, !13873}
!13857 = !DILocalVariable(name: "to", arg: 1, scope: !13849, file: !2280, line: 88, type: !2253)
!13858 = !DILocalVariable(name: "fn", arg: 2, scope: !13849, file: !2280, line: 88, type: !2272)
!13859 = !DILocalVariable(name: "timeout", arg: 3, scope: !13849, file: !2280, line: 89, type: !13852)
!13860 = !DILocalVariable(name: "__i", scope: !13861, file: !2280, line: 102, type: !13862)
!13861 = distinct !DILexicalBlock(scope: !13849, file: !2280, line: 102, column: 2)
!13862 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !248, line: 106, baseType: !13863)
!13863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !248, line: 32, size: 32, elements: !13864)
!13864 = !{!13865}
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13863, file: !248, line: 33, baseType: !109, size: 32)
!13866 = !DILocalVariable(name: "__key", scope: !13861, file: !2280, line: 102, type: !13862)
!13867 = !DILocalVariable(name: "t", scope: !13868, file: !2280, line: 103, type: !2253)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !2280, line: 102, column: 24)
!13869 = distinct !DILexicalBlock(scope: !13861, file: !2280, line: 102, column: 2)
!13870 = !DILocalVariable(name: "ticks", scope: !13871, file: !2280, line: 107, type: !104)
!13871 = distinct !DILexicalBlock(scope: !13872, file: !2280, line: 106, column: 39)
!13872 = distinct !DILexicalBlock(scope: !13868, file: !2280, line: 105, column: 7)
!13873 = !DILocalVariable(name: "next_time", scope: !13874, file: !2280, line: 137, type: !1011)
!13874 = distinct !DILexicalBlock(scope: !13875, file: !2280, line: 127, column: 22)
!13875 = distinct !DILexicalBlock(scope: !13868, file: !2280, line: 127, column: 7)
!13876 = !DILocation(line: 0, scope: !13849)
!13877 = !DILocation(line: 91, column: 6, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13849, file: !2280, line: 91, column: 6)
!13879 = !DILocation(line: 91, column: 6, scope: !13849)
!13880 = !DILocation(line: 99, column: 2, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13882, file: !2280, line: 99, column: 2)
!13882 = distinct !DILexicalBlock(scope: !13849, file: !2280, line: 99, column: 2)
!13883 = !DILocation(line: 99, column: 2, scope: !13882)
!13884 = !DILocation(line: 99, column: 2, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13881, file: !2280, line: 99, column: 2)
!13886 = !DILocation(line: 100, column: 6, scope: !13849)
!13887 = !DILocation(line: 100, column: 9, scope: !13849)
!13888 = !DILocation(line: 0, scope: !13861)
!13889 = !DILocalVariable(name: "l", arg: 1, scope: !13890, file: !248, line: 136, type: !13893)
!13890 = distinct !DISubprogram(name: "k_spin_lock", scope: !248, file: !248, line: 136, type: !13891, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13894)
!13891 = !DISubroutineType(types: !13892)
!13892 = !{!13862, !13893}
!13893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!13894 = !{!13889, !13895}
!13895 = !DILocalVariable(name: "k", scope: !13890, file: !248, line: 139, type: !13862)
!13896 = !DILocation(line: 0, scope: !13890, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 102, column: 2, scope: !13861)
!13898 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !13903)
!13899 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6050, file: !6050, line: 42, type: !7411, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13900)
!13900 = !{!13901, !13902}
!13901 = !DILocalVariable(name: "key", scope: !13899, file: !6050, line: 44, type: !32)
!13902 = !DILocalVariable(name: "tmp", scope: !13899, file: !6050, line: 53, type: !32)
!13903 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !13897)
!13904 = !{i64 2848985}
!13905 = !DILocation(line: 0, scope: !13899, inlinedAt: !13903)
!13906 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !13897)
!13907 = distinct !DILexicalBlock(scope: !13908, file: !248, line: 148, column: 2)
!13908 = distinct !DILexicalBlock(scope: !13890, file: !248, line: 148, column: 2)
!13909 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !13897)
!13910 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !13897)
!13911 = distinct !DILexicalBlock(scope: !13907, file: !248, line: 148, column: 2)
!13912 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !13897)
!13913 = !DILocation(line: 106, column: 33, scope: !13872)
!13914 = !DILocation(line: 105, column: 7, scope: !13868)
!13915 = !DILocation(line: 107, column: 50, scope: !13871)
!13916 = !DILocation(line: 107, column: 48, scope: !13871)
!13917 = !DILocation(line: 0, scope: !13871)
!13918 = !DILocation(line: 109, column: 17, scope: !13871)
!13919 = !DILocation(line: 110, column: 3, scope: !13871)
!13920 = !DILocation(line: 111, column: 31, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13872, file: !2280, line: 110, column: 10)
!13922 = !DILocation(line: 111, column: 37, scope: !13921)
!13923 = !DILocation(line: 111, column: 35, scope: !13921)
!13924 = !DILocation(line: 0, scope: !13872)
!13925 = !DILocation(line: 109, column: 8, scope: !13871)
!13926 = !DILocation(line: 109, column: 15, scope: !13871)
!13927 = !DILocation(line: 114, column: 12, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13868, file: !2280, line: 114, column: 3)
!13929 = !DILocation(line: 0, scope: !13868)
!13930 = !DILocation(line: 114, column: 3, scope: !13928)
!13931 = !DILocation(line: 115, column: 24, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !2280, line: 115, column: 8)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !2280, line: 114, column: 45)
!13934 = distinct !DILexicalBlock(scope: !13928, file: !2280, line: 114, column: 3)
!13935 = !DILocation(line: 115, column: 11, scope: !13932)
!13936 = !DILocation(line: 115, column: 18, scope: !13932)
!13937 = !DILocation(line: 115, column: 8, scope: !13933)
!13938 = !DILocation(line: 116, column: 15, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13932, file: !2280, line: 115, column: 32)
!13940 = !DILocation(line: 117, column: 26, scope: !13939)
!13941 = !DILocation(line: 117, column: 5, scope: !13939)
!13942 = !DILocation(line: 123, column: 7, scope: !13868)
!13943 = !DILocation(line: 120, column: 15, scope: !13933)
!13944 = !DILocation(line: 114, column: 36, scope: !13934)
!13945 = distinct !{!13945, !13930, !13946}
!13946 = !DILocation(line: 121, column: 3, scope: !13928)
!13947 = !DILocation(line: 124, column: 4, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13949, file: !2280, line: 123, column: 18)
!13949 = distinct !DILexicalBlock(scope: !13868, file: !2280, line: 123, column: 7)
!13950 = !DILocation(line: 125, column: 3, scope: !13948)
!13951 = !DILocation(line: 127, column: 13, scope: !13875)
!13952 = !DILocation(line: 127, column: 10, scope: !13875)
!13953 = !DILocation(line: 127, column: 7, scope: !13868)
!13954 = !DILocation(line: 137, column: 24, scope: !13874)
!13955 = !DILocation(line: 0, scope: !13874)
!13956 = !DILocation(line: 139, column: 18, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13874, file: !2280, line: 139, column: 8)
!13958 = !DILocation(line: 139, column: 23, scope: !13957)
!13959 = !DILocation(line: 141, column: 5, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13957, file: !2280, line: 140, column: 48)
!13961 = !DILocation(line: 142, column: 4, scope: !13960)
!13962 = !DILocalVariable(name: "key", arg: 2, scope: !13963, file: !248, line: 190, type: !13862)
!13963 = distinct !DISubprogram(name: "k_spin_unlock", scope: !248, file: !248, line: 189, type: !13964, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13966)
!13964 = !DISubroutineType(types: !13965)
!13965 = !{null, !13893, !13862}
!13966 = !{!13967, !13962}
!13967 = !DILocalVariable(name: "l", arg: 1, scope: !13963, file: !248, line: 189, type: !13893)
!13968 = !DILocation(line: 0, scope: !13963, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 102, column: 2, scope: !13869)
!13970 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !13969)
!13971 = distinct !DILexicalBlock(scope: !13972, file: !248, line: 194, column: 2)
!13972 = distinct !DILexicalBlock(scope: !13963, file: !248, line: 194, column: 2)
!13973 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !13969)
!13974 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !13969)
!13975 = distinct !DILexicalBlock(scope: !13971, file: !248, line: 194, column: 2)
!13976 = !DILocalVariable(name: "key", arg: 1, scope: !13977, file: !6050, line: 84, type: !32)
!13977 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6050, file: !6050, line: 84, type: !5882, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13978)
!13978 = !{!13976}
!13979 = !DILocation(line: 0, scope: !13977, inlinedAt: !13980)
!13980 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !13969)
!13981 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !13980)
!13982 = !{i64 2849802}
!13983 = !DILocation(line: 148, column: 1, scope: !13849)
!13984 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !13985, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13989)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{!754, !13987}
!13987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13988, size: 32)
!13988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2257)
!13989 = !{!13990}
!13990 = !DILocalVariable(name: "node", arg: 1, scope: !13984, file: !128, line: 225, type: !13987)
!13991 = !DILocation(line: 0, scope: !13984)
!13992 = !DILocation(line: 227, column: 15, scope: !13984)
!13993 = !DILocation(line: 227, column: 20, scope: !13984)
!13994 = !DILocation(line: 227, column: 2, scope: !13984)
!13995 = distinct !DISubprogram(name: "elapsed", scope: !2280, file: !2280, line: 62, type: !13996, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !1817)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{!1011}
!13998 = !DILocation(line: 64, column: 9, scope: !13995)
!13999 = !DILocation(line: 64, column: 28, scope: !13995)
!14000 = !DILocation(line: 64, column: 35, scope: !13995)
!14001 = !DILocation(line: 64, column: 2, scope: !13995)
!14002 = distinct !DISubprogram(name: "first", scope: !2280, file: !2280, line: 39, type: !14003, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14005)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{!2253}
!14005 = !{!14006}
!14006 = !DILocalVariable(name: "t", scope: !14002, file: !2280, line: 41, type: !14007)
!14007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!14008 = !DILocation(line: 41, column: 19, scope: !14002)
!14009 = !DILocation(line: 0, scope: !14002)
!14010 = !DILocation(line: 43, column: 9, scope: !14002)
!14011 = !DILocation(line: 43, column: 2, scope: !14002)
!14012 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !14013, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{null, !14007, !14007}
!14015 = !{!14016, !14017, !14018}
!14016 = !DILocalVariable(name: "successor", arg: 1, scope: !14012, file: !128, line: 443, type: !14007)
!14017 = !DILocalVariable(name: "node", arg: 2, scope: !14012, file: !128, line: 443, type: !14007)
!14018 = !DILocalVariable(name: "prev", scope: !14012, file: !128, line: 445, type: !14019)
!14019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14007)
!14020 = !DILocation(line: 0, scope: !14012)
!14021 = !DILocation(line: 445, column: 39, scope: !14012)
!14022 = !DILocation(line: 447, column: 8, scope: !14012)
!14023 = !DILocation(line: 447, column: 13, scope: !14012)
!14024 = !DILocation(line: 448, column: 8, scope: !14012)
!14025 = !DILocation(line: 448, column: 13, scope: !14012)
!14026 = !DILocation(line: 449, column: 8, scope: !14012)
!14027 = !DILocation(line: 449, column: 13, scope: !14012)
!14028 = !DILocation(line: 450, column: 18, scope: !14012)
!14029 = !DILocation(line: 451, column: 1, scope: !14012)
!14030 = distinct !DISubprogram(name: "next", scope: !2280, file: !2280, line: 46, type: !14031, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14033)
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!2253, !2253}
!14033 = !{!14034, !14035}
!14034 = !DILocalVariable(name: "t", arg: 1, scope: !14030, file: !2280, line: 46, type: !2253)
!14035 = !DILocalVariable(name: "n", scope: !14030, file: !2280, line: 48, type: !14007)
!14036 = !DILocation(line: 0, scope: !14030)
!14037 = !DILocation(line: 48, column: 58, scope: !14030)
!14038 = !DILocation(line: 48, column: 19, scope: !14030)
!14039 = !DILocation(line: 50, column: 9, scope: !14030)
!14040 = !DILocation(line: 50, column: 2, scope: !14030)
!14041 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !14042, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14045)
!14042 = !DISubroutineType(types: !14043)
!14043 = !{null, !14044, !14007}
!14044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!14045 = !{!14046, !14047, !14048}
!14046 = !DILocalVariable(name: "list", arg: 1, scope: !14041, file: !128, line: 404, type: !14044)
!14047 = !DILocalVariable(name: "node", arg: 2, scope: !14041, file: !128, line: 404, type: !14007)
!14048 = !DILocalVariable(name: "tail", scope: !14041, file: !128, line: 406, type: !14019)
!14049 = !DILocation(line: 0, scope: !14041)
!14050 = !DILocation(line: 406, column: 34, scope: !14041)
!14051 = !DILocation(line: 408, column: 8, scope: !14041)
!14052 = !DILocation(line: 408, column: 13, scope: !14041)
!14053 = !DILocation(line: 409, column: 8, scope: !14041)
!14054 = !DILocation(line: 409, column: 13, scope: !14041)
!14055 = !DILocation(line: 411, column: 8, scope: !14041)
!14056 = !DILocation(line: 411, column: 13, scope: !14041)
!14057 = !DILocation(line: 412, column: 13, scope: !14041)
!14058 = !DILocation(line: 413, column: 1, scope: !14041)
!14059 = distinct !DISubprogram(name: "next_timeout", scope: !2280, file: !2280, line: 67, type: !13996, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14060)
!14060 = !{!14061, !14062, !14063}
!14061 = !DILocalVariable(name: "to", scope: !14059, file: !2280, line: 69, type: !2253)
!14062 = !DILocalVariable(name: "ticks_elapsed", scope: !14059, file: !2280, line: 70, type: !1011)
!14063 = !DILocalVariable(name: "ret", scope: !14059, file: !2280, line: 71, type: !1011)
!14064 = !DILocation(line: 69, column: 24, scope: !14059)
!14065 = !DILocation(line: 0, scope: !14059)
!14066 = !DILocation(line: 70, column: 26, scope: !14059)
!14067 = !DILocation(line: 73, column: 10, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14059, file: !2280, line: 73, column: 6)
!14069 = !DILocation(line: 73, column: 19, scope: !14068)
!14070 = !DILocation(line: 74, column: 21, scope: !14068)
!14071 = !DILocation(line: 74, column: 30, scope: !14068)
!14072 = !DILocation(line: 74, column: 28, scope: !14068)
!14073 = !DILocation(line: 74, column: 45, scope: !14068)
!14074 = !DILocation(line: 73, column: 6, scope: !14059)
!14075 = !DILocation(line: 77, column: 9, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14068, file: !2280, line: 76, column: 9)
!14077 = !DILocation(line: 0, scope: !14068)
!14078 = !DILocation(line: 81, column: 20, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14059, file: !2280, line: 81, column: 6)
!14080 = !DILocation(line: 81, column: 6, scope: !14079)
!14081 = !DILocation(line: 81, column: 32, scope: !14079)
!14082 = !DILocation(line: 85, column: 2, scope: !14059)
!14083 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !14084, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!14007, !14044, !14007}
!14086 = !{!14087, !14088}
!14087 = !DILocalVariable(name: "list", arg: 1, scope: !14083, file: !128, line: 341, type: !14044)
!14088 = !DILocalVariable(name: "node", arg: 2, scope: !14083, file: !128, line: 342, type: !14007)
!14089 = !DILocation(line: 0, scope: !14083)
!14090 = !DILocation(line: 344, column: 15, scope: !14083)
!14091 = !DILocation(line: 344, column: 9, scope: !14083)
!14092 = !DILocation(line: 344, column: 26, scope: !14083)
!14093 = !DILocation(line: 344, column: 2, scope: !14083)
!14094 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !14084, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14095)
!14095 = !{!14096, !14097}
!14096 = !DILocalVariable(name: "list", arg: 1, scope: !14094, file: !128, line: 325, type: !14044)
!14097 = !DILocalVariable(name: "node", arg: 2, scope: !14094, file: !128, line: 326, type: !14007)
!14098 = !DILocation(line: 0, scope: !14094)
!14099 = !DILocation(line: 328, column: 24, scope: !14094)
!14100 = !DILocation(line: 328, column: 15, scope: !14094)
!14101 = !DILocation(line: 328, column: 9, scope: !14094)
!14102 = !DILocation(line: 328, column: 45, scope: !14094)
!14103 = !DILocation(line: 328, column: 2, scope: !14094)
!14104 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !14105, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14107)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{!14007, !14044}
!14107 = !{!14108}
!14108 = !DILocalVariable(name: "list", arg: 1, scope: !14104, file: !128, line: 294, type: !14044)
!14109 = !DILocation(line: 0, scope: !14104)
!14110 = !DILocation(line: 296, column: 9, scope: !14104)
!14111 = !DILocation(line: 296, column: 2, scope: !14104)
!14112 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !14113, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14115)
!14113 = !DISubroutineType(types: !14114)
!14114 = !{!754, !14044}
!14115 = !{!14116}
!14116 = !DILocalVariable(name: "list", arg: 1, scope: !14112, file: !128, line: 266, type: !14044)
!14117 = !DILocation(line: 0, scope: !14112)
!14118 = !DILocation(line: 268, column: 15, scope: !14112)
!14119 = !DILocation(line: 268, column: 20, scope: !14112)
!14120 = !DILocation(line: 268, column: 2, scope: !14112)
!14121 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2280, file: !2280, line: 150, type: !14122, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{!109, !2253}
!14124 = !{!14125, !14126, !14127, !14129}
!14125 = !DILocalVariable(name: "to", arg: 1, scope: !14121, file: !2280, line: 150, type: !2253)
!14126 = !DILocalVariable(name: "ret", scope: !14121, file: !2280, line: 152, type: !109)
!14127 = !DILocalVariable(name: "__i", scope: !14128, file: !2280, line: 154, type: !13862)
!14128 = distinct !DILexicalBlock(scope: !14121, file: !2280, line: 154, column: 2)
!14129 = !DILocalVariable(name: "__key", scope: !14128, file: !2280, line: 154, type: !13862)
!14130 = !DILocation(line: 0, scope: !14121)
!14131 = !DILocation(line: 0, scope: !14128)
!14132 = !DILocation(line: 0, scope: !13890, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 154, column: 2, scope: !14128)
!14134 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14133)
!14136 = !DILocation(line: 0, scope: !13899, inlinedAt: !14135)
!14137 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14133)
!14138 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14133)
!14139 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14133)
!14140 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14133)
!14141 = !DILocation(line: 155, column: 7, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !2280, line: 155, column: 7)
!14143 = distinct !DILexicalBlock(scope: !14144, file: !2280, line: 154, column: 24)
!14144 = distinct !DILexicalBlock(scope: !14128, file: !2280, line: 154, column: 2)
!14145 = !DILocation(line: 155, column: 7, scope: !14143)
!14146 = !DILocation(line: 156, column: 4, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14142, file: !2280, line: 155, column: 39)
!14148 = !DILocation(line: 158, column: 3, scope: !14147)
!14149 = !DILocation(line: 0, scope: !13963, inlinedAt: !14150)
!14150 = distinct !DILocation(line: 154, column: 2, scope: !14144)
!14151 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14150)
!14152 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14150)
!14153 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14150)
!14154 = !DILocation(line: 0, scope: !13977, inlinedAt: !14155)
!14155 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14150)
!14156 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14155)
!14157 = !DILocation(line: 161, column: 2, scope: !14121)
!14158 = distinct !DISubprogram(name: "remove_timeout", scope: !2280, file: !2280, line: 53, type: !2274, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14159)
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "t", arg: 1, scope: !14158, file: !2280, line: 53, type: !2253)
!14161 = !DILocation(line: 0, scope: !14158)
!14162 = !DILocation(line: 55, column: 6, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14158, file: !2280, line: 55, column: 6)
!14164 = !DILocation(line: 55, column: 14, scope: !14163)
!14165 = !DILocation(line: 55, column: 6, scope: !14158)
!14166 = !DILocation(line: 56, column: 25, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14163, file: !2280, line: 55, column: 23)
!14168 = !DILocation(line: 56, column: 12, scope: !14167)
!14169 = !DILocation(line: 56, column: 19, scope: !14167)
!14170 = !DILocation(line: 57, column: 2, scope: !14167)
!14171 = !DILocation(line: 59, column: 23, scope: !14158)
!14172 = !DILocation(line: 59, column: 2, scope: !14158)
!14173 = !DILocation(line: 60, column: 1, scope: !14158)
!14174 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !14175, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14177)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{null, !14007}
!14177 = !{!14178, !14179, !14180}
!14178 = !DILocalVariable(name: "node", arg: 1, scope: !14174, file: !128, line: 496, type: !14007)
!14179 = !DILocalVariable(name: "prev", scope: !14174, file: !128, line: 498, type: !14019)
!14180 = !DILocalVariable(name: "next", scope: !14174, file: !128, line: 499, type: !14019)
!14181 = !DILocation(line: 0, scope: !14174)
!14182 = !DILocation(line: 498, column: 34, scope: !14174)
!14183 = !DILocation(line: 499, column: 34, scope: !14174)
!14184 = !DILocation(line: 501, column: 8, scope: !14174)
!14185 = !DILocation(line: 501, column: 13, scope: !14174)
!14186 = !DILocation(line: 502, column: 8, scope: !14174)
!14187 = !DILocation(line: 502, column: 13, scope: !14174)
!14188 = !DILocation(line: 503, column: 2, scope: !14174)
!14189 = !DILocation(line: 504, column: 1, scope: !14174)
!14190 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !14175, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14191)
!14191 = !{!14192}
!14192 = !DILocalVariable(name: "node", arg: 1, scope: !14190, file: !128, line: 211, type: !14007)
!14193 = !DILocation(line: 0, scope: !14190)
!14194 = !DILocation(line: 213, column: 8, scope: !14190)
!14195 = !DILocation(line: 213, column: 13, scope: !14190)
!14196 = !DILocation(line: 214, column: 8, scope: !14190)
!14197 = !DILocation(line: 214, column: 13, scope: !14190)
!14198 = !DILocation(line: 215, column: 1, scope: !14190)
!14199 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2280, file: !2280, line: 183, type: !14200, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14204)
!14200 = !DISubroutineType(types: !14201)
!14201 = !{!104, !14202}
!14202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14203, size: 32)
!14203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2254)
!14204 = !{!14205, !14206, !14207, !14209}
!14205 = !DILocalVariable(name: "timeout", arg: 1, scope: !14199, file: !2280, line: 183, type: !14202)
!14206 = !DILocalVariable(name: "ticks", scope: !14199, file: !2280, line: 185, type: !104)
!14207 = !DILocalVariable(name: "__i", scope: !14208, file: !2280, line: 187, type: !13862)
!14208 = distinct !DILexicalBlock(scope: !14199, file: !2280, line: 187, column: 2)
!14209 = !DILocalVariable(name: "__key", scope: !14208, file: !2280, line: 187, type: !13862)
!14210 = !DILocation(line: 0, scope: !14199)
!14211 = !DILocation(line: 0, scope: !14208)
!14212 = !DILocation(line: 0, scope: !13890, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 187, column: 2, scope: !14208)
!14214 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14213)
!14216 = !DILocation(line: 0, scope: !13899, inlinedAt: !14215)
!14217 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14213)
!14218 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14213)
!14219 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14213)
!14220 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14213)
!14221 = !DILocation(line: 188, column: 11, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !2280, line: 187, column: 24)
!14223 = distinct !DILexicalBlock(scope: !14208, file: !2280, line: 187, column: 2)
!14224 = !DILocation(line: 0, scope: !13963, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 187, column: 2, scope: !14223)
!14226 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14225)
!14227 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14225)
!14228 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14225)
!14229 = !DILocation(line: 0, scope: !13977, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14225)
!14231 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14230)
!14232 = !DILocation(line: 191, column: 2, scope: !14199)
!14233 = distinct !DISubprogram(name: "timeout_rem", scope: !2280, file: !2280, line: 165, type: !14200, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14234)
!14234 = !{!14235, !14236, !14237}
!14235 = !DILocalVariable(name: "timeout", arg: 1, scope: !14233, file: !2280, line: 165, type: !14202)
!14236 = !DILocalVariable(name: "ticks", scope: !14233, file: !2280, line: 167, type: !104)
!14237 = !DILocalVariable(name: "t", scope: !14238, file: !2280, line: 173, type: !2253)
!14238 = distinct !DILexicalBlock(scope: !14233, file: !2280, line: 173, column: 2)
!14239 = !DILocation(line: 0, scope: !14233)
!14240 = !DILocation(line: 169, column: 6, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14233, file: !2280, line: 169, column: 6)
!14242 = !DILocation(line: 169, column: 6, scope: !14233)
!14243 = !DILocation(line: 173, column: 28, scope: !14238)
!14244 = !DILocation(line: 0, scope: !14238)
!14245 = !DILocation(line: 173, column: 39, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14238, file: !2280, line: 173, column: 2)
!14247 = !DILocation(line: 173, column: 2, scope: !14238)
!14248 = !DILocation(line: 174, column: 15, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14246, file: !2280, line: 173, column: 61)
!14250 = !DILocation(line: 174, column: 9, scope: !14249)
!14251 = !DILocation(line: 175, column: 15, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14249, file: !2280, line: 175, column: 7)
!14253 = !DILocation(line: 175, column: 7, scope: !14249)
!14254 = !DILocation(line: 173, column: 52, scope: !14246)
!14255 = distinct !{!14255, !14247, !14256}
!14256 = !DILocation(line: 178, column: 2, scope: !14238)
!14257 = !DILocation(line: 180, column: 17, scope: !14233)
!14258 = !DILocation(line: 180, column: 15, scope: !14233)
!14259 = !DILocation(line: 180, column: 2, scope: !14233)
!14260 = !DILocation(line: 181, column: 1, scope: !14233)
!14261 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10841, file: !10841, line: 35, type: !14262, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14264)
!14262 = !DISubroutineType(types: !14263)
!14263 = !{!754, !14202}
!14264 = !{!14265}
!14265 = !DILocalVariable(name: "to", arg: 1, scope: !14261, file: !10841, line: 35, type: !14202)
!14266 = !DILocation(line: 0, scope: !14261)
!14267 = !DILocation(line: 37, column: 35, scope: !14261)
!14268 = !DILocation(line: 37, column: 10, scope: !14261)
!14269 = !DILocation(line: 37, column: 9, scope: !14261)
!14270 = !DILocation(line: 37, column: 2, scope: !14261)
!14271 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2280, file: !2280, line: 194, type: !14200, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14272)
!14272 = !{!14273, !14274, !14275, !14277}
!14273 = !DILocalVariable(name: "timeout", arg: 1, scope: !14271, file: !2280, line: 194, type: !14202)
!14274 = !DILocalVariable(name: "ticks", scope: !14271, file: !2280, line: 196, type: !104)
!14275 = !DILocalVariable(name: "__i", scope: !14276, file: !2280, line: 198, type: !13862)
!14276 = distinct !DILexicalBlock(scope: !14271, file: !2280, line: 198, column: 2)
!14277 = !DILocalVariable(name: "__key", scope: !14276, file: !2280, line: 198, type: !13862)
!14278 = !DILocation(line: 0, scope: !14271)
!14279 = !DILocation(line: 0, scope: !14276)
!14280 = !DILocation(line: 0, scope: !13890, inlinedAt: !14281)
!14281 = distinct !DILocation(line: 198, column: 2, scope: !14276)
!14282 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14283)
!14283 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14281)
!14284 = !DILocation(line: 0, scope: !13899, inlinedAt: !14283)
!14285 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14281)
!14286 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14281)
!14287 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14281)
!14288 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14281)
!14289 = !DILocation(line: 199, column: 11, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !2280, line: 198, column: 24)
!14291 = distinct !DILexicalBlock(scope: !14276, file: !2280, line: 198, column: 2)
!14292 = !DILocation(line: 199, column: 23, scope: !14290)
!14293 = !DILocation(line: 0, scope: !13963, inlinedAt: !14294)
!14294 = distinct !DILocation(line: 198, column: 2, scope: !14291)
!14295 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14294)
!14296 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14294)
!14297 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14294)
!14298 = !DILocation(line: 0, scope: !13977, inlinedAt: !14299)
!14299 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14294)
!14300 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14299)
!14301 = !DILocation(line: 199, column: 21, scope: !14290)
!14302 = !DILocation(line: 202, column: 2, scope: !14271)
!14303 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2280, file: !2280, line: 205, type: !13996, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14304)
!14304 = !{!14305, !14306, !14308}
!14305 = !DILocalVariable(name: "ret", scope: !14303, file: !2280, line: 207, type: !1011)
!14306 = !DILocalVariable(name: "__i", scope: !14307, file: !2280, line: 209, type: !13862)
!14307 = distinct !DILexicalBlock(scope: !14303, file: !2280, line: 209, column: 2)
!14308 = !DILocalVariable(name: "__key", scope: !14307, file: !2280, line: 209, type: !13862)
!14309 = !DILocation(line: 0, scope: !14303)
!14310 = !DILocation(line: 0, scope: !14307)
!14311 = !DILocation(line: 0, scope: !13890, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 209, column: 2, scope: !14307)
!14313 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14314)
!14314 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14312)
!14315 = !DILocation(line: 0, scope: !13899, inlinedAt: !14314)
!14316 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14312)
!14317 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14312)
!14318 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14312)
!14319 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14312)
!14320 = !DILocation(line: 210, column: 9, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14322, file: !2280, line: 209, column: 24)
!14322 = distinct !DILexicalBlock(scope: !14307, file: !2280, line: 209, column: 2)
!14323 = !DILocation(line: 0, scope: !13963, inlinedAt: !14324)
!14324 = distinct !DILocation(line: 209, column: 2, scope: !14322)
!14325 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14324)
!14326 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14324)
!14327 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14324)
!14328 = !DILocation(line: 0, scope: !13977, inlinedAt: !14329)
!14329 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14324)
!14330 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14329)
!14331 = !DILocation(line: 212, column: 2, scope: !14303)
!14332 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2280, file: !2280, line: 215, type: !8087, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14333)
!14333 = !{!14334, !14335, !14336, !14338, !14339, !14342, !14343}
!14334 = !DILocalVariable(name: "ticks", arg: 1, scope: !14332, file: !2280, line: 215, type: !1011)
!14335 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14332, file: !2280, line: 215, type: !754)
!14336 = !DILocalVariable(name: "__i", scope: !14337, file: !2280, line: 217, type: !13862)
!14337 = distinct !DILexicalBlock(scope: !14332, file: !2280, line: 217, column: 2)
!14338 = !DILocalVariable(name: "__key", scope: !14337, file: !2280, line: 217, type: !13862)
!14339 = !DILocalVariable(name: "next_to", scope: !14340, file: !2280, line: 218, type: !109)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !2280, line: 217, column: 24)
!14341 = distinct !DILexicalBlock(scope: !14337, file: !2280, line: 217, column: 2)
!14342 = !DILocalVariable(name: "sooner", scope: !14340, file: !2280, line: 219, type: !754)
!14343 = !DILocalVariable(name: "imminent", scope: !14340, file: !2280, line: 221, type: !754)
!14344 = !DILocation(line: 0, scope: !14332)
!14345 = !DILocation(line: 0, scope: !14337)
!14346 = !DILocation(line: 0, scope: !13890, inlinedAt: !14347)
!14347 = distinct !DILocation(line: 217, column: 2, scope: !14337)
!14348 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14349)
!14349 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14347)
!14350 = !DILocation(line: 0, scope: !13899, inlinedAt: !14349)
!14351 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14347)
!14352 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14347)
!14353 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14347)
!14354 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14347)
!14355 = !DILocation(line: 218, column: 17, scope: !14340)
!14356 = !DILocation(line: 0, scope: !14340)
!14357 = !DILocation(line: 221, column: 27, scope: !14340)
!14358 = !DILocation(line: 233, column: 17, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14340, file: !2280, line: 233, column: 7)
!14360 = !DILocation(line: 234, column: 26, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14359, file: !2280, line: 233, column: 56)
!14362 = !DILocation(line: 234, column: 4, scope: !14361)
!14363 = !DILocation(line: 235, column: 3, scope: !14361)
!14364 = !DILocation(line: 0, scope: !13963, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 217, column: 2, scope: !14341)
!14366 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14365)
!14367 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14365)
!14368 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14365)
!14369 = !DILocation(line: 0, scope: !13977, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14365)
!14371 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14370)
!14372 = !DILocation(line: 237, column: 1, scope: !14332)
!14373 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2280, file: !2280, line: 239, type: !14374, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14376)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !1011}
!14376 = !{!14377, !14378, !14379, !14381}
!14377 = !DILocalVariable(name: "ticks", arg: 1, scope: !14373, file: !2280, line: 239, type: !1011)
!14378 = !DILocalVariable(name: "key", scope: !14373, file: !2280, line: 245, type: !13862)
!14379 = !DILocalVariable(name: "t", scope: !14380, file: !2280, line: 262, type: !2253)
!14380 = distinct !DILexicalBlock(scope: !14373, file: !2280, line: 261, column: 67)
!14381 = !DILocalVariable(name: "dt", scope: !14380, file: !2280, line: 263, type: !109)
!14382 = !DILocation(line: 0, scope: !14373)
!14383 = !DILocation(line: 242, column: 2, scope: !14373)
!14384 = !DILocation(line: 0, scope: !13890, inlinedAt: !14385)
!14385 = distinct !DILocation(line: 245, column: 25, scope: !14373)
!14386 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14385)
!14388 = !DILocation(line: 0, scope: !13899, inlinedAt: !14387)
!14389 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14385)
!14390 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14385)
!14391 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14385)
!14392 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14385)
!14393 = !DILocation(line: 261, column: 9, scope: !14373)
!14394 = !DILocation(line: 261, column: 17, scope: !14373)
!14395 = !DILocation(line: 261, column: 25, scope: !14373)
!14396 = !DILocation(line: 261, column: 37, scope: !14373)
!14397 = !DILocation(line: 261, column: 47, scope: !14373)
!14398 = !DILocation(line: 261, column: 44, scope: !14373)
!14399 = !DILocation(line: 261, column: 2, scope: !14373)
!14400 = !DILocation(line: 0, scope: !14380)
!14401 = !DILocation(line: 263, column: 12, scope: !14380)
!14402 = !DILocation(line: 265, column: 16, scope: !14380)
!14403 = !DILocation(line: 265, column: 13, scope: !14380)
!14404 = !DILocation(line: 266, column: 13, scope: !14380)
!14405 = !DILocation(line: 267, column: 3, scope: !14380)
!14406 = !DILocation(line: 0, scope: !13963, inlinedAt: !14407)
!14407 = distinct !DILocation(line: 269, column: 3, scope: !14380)
!14408 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14407)
!14409 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14407)
!14410 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14407)
!14411 = !DILocation(line: 0, scope: !13977, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14407)
!14413 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14412)
!14414 = !DILocation(line: 270, column: 6, scope: !14380)
!14415 = !DILocation(line: 270, column: 3, scope: !14380)
!14416 = !DILocation(line: 0, scope: !13890, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 271, column: 9, scope: !14380)
!14418 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14419)
!14419 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14417)
!14420 = !DILocation(line: 0, scope: !13899, inlinedAt: !14419)
!14421 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14417)
!14422 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14417)
!14423 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14417)
!14424 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14417)
!14425 = !DILocation(line: 272, column: 22, scope: !14380)
!14426 = distinct !{!14426, !14399, !14427}
!14427 = !DILocation(line: 273, column: 2, scope: !14373)
!14428 = !DILocation(line: 276, column: 19, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !2280, line: 275, column: 23)
!14430 = distinct !DILexicalBlock(scope: !14373, file: !2280, line: 275, column: 6)
!14431 = !DILocation(line: 277, column: 2, scope: !14429)
!14432 = !DILocation(line: 279, column: 15, scope: !14373)
!14433 = !DILocation(line: 279, column: 12, scope: !14373)
!14434 = !DILocation(line: 280, column: 21, scope: !14373)
!14435 = !DILocation(line: 282, column: 24, scope: !14373)
!14436 = !DILocation(line: 282, column: 2, scope: !14373)
!14437 = !DILocation(line: 0, scope: !13963, inlinedAt: !14438)
!14438 = distinct !DILocation(line: 284, column: 2, scope: !14373)
!14439 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14438)
!14440 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14438)
!14441 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14438)
!14442 = !DILocation(line: 0, scope: !13977, inlinedAt: !14443)
!14443 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14438)
!14444 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14443)
!14445 = !DILocation(line: 285, column: 1, scope: !14373)
!14446 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2280, file: !2280, line: 287, type: !3208, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14447)
!14447 = !{!14448, !14449, !14451}
!14448 = !DILocalVariable(name: "t", scope: !14446, file: !2280, line: 289, type: !111)
!14449 = !DILocalVariable(name: "__i", scope: !14450, file: !2280, line: 291, type: !13862)
!14450 = distinct !DILexicalBlock(scope: !14446, file: !2280, line: 291, column: 2)
!14451 = !DILocalVariable(name: "__key", scope: !14450, file: !2280, line: 291, type: !13862)
!14452 = !DILocation(line: 0, scope: !14446)
!14453 = !DILocation(line: 0, scope: !14450)
!14454 = !DILocation(line: 0, scope: !13890, inlinedAt: !14455)
!14455 = distinct !DILocation(line: 291, column: 2, scope: !14450)
!14456 = !DILocation(line: 55, column: 2, scope: !13899, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 145, column: 10, scope: !13890, inlinedAt: !14455)
!14458 = !DILocation(line: 0, scope: !13899, inlinedAt: !14457)
!14459 = !DILocation(line: 148, column: 2, scope: !13907, inlinedAt: !14455)
!14460 = !DILocation(line: 148, column: 2, scope: !13908, inlinedAt: !14455)
!14461 = !DILocation(line: 148, column: 2, scope: !13911, inlinedAt: !14455)
!14462 = !DILocation(line: 160, column: 2, scope: !13890, inlinedAt: !14455)
!14463 = !DILocation(line: 292, column: 7, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !2280, line: 291, column: 24)
!14465 = distinct !DILexicalBlock(scope: !14450, file: !2280, line: 291, column: 2)
!14466 = !DILocation(line: 292, column: 19, scope: !14464)
!14467 = !DILocation(line: 0, scope: !13963, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 291, column: 2, scope: !14465)
!14469 = !DILocation(line: 194, column: 2, scope: !13971, inlinedAt: !14468)
!14470 = !DILocation(line: 194, column: 2, scope: !13972, inlinedAt: !14468)
!14471 = !DILocation(line: 194, column: 2, scope: !13975, inlinedAt: !14468)
!14472 = !DILocation(line: 0, scope: !13977, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 215, column: 2, scope: !13963, inlinedAt: !14468)
!14474 = !DILocation(line: 95, column: 2, scope: !13977, inlinedAt: !14473)
!14475 = !DILocation(line: 292, column: 17, scope: !14464)
!14476 = !DILocation(line: 294, column: 2, scope: !14446)
!14477 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2280, file: !2280, line: 297, type: !3202, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !1817)
!14478 = !DILocation(line: 300, column: 19, scope: !14477)
!14479 = !DILocation(line: 300, column: 9, scope: !14477)
!14480 = !DILocation(line: 300, column: 2, scope: !14477)
!14481 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2280, file: !2280, line: 306, type: !3208, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !1817)
!14482 = !DILocation(line: 308, column: 9, scope: !14481)
!14483 = !DILocation(line: 308, column: 2, scope: !14481)
!14484 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2280, file: !2280, line: 319, type: !6026, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14485)
!14485 = !{!14486, !14487, !14488, !14489}
!14486 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14484, file: !2280, line: 319, type: !110)
!14487 = !DILocalVariable(name: "start_cycles", scope: !14484, file: !2280, line: 328, type: !110)
!14488 = !DILocalVariable(name: "cycles_to_wait", scope: !14484, file: !2280, line: 331, type: !110)
!14489 = !DILocalVariable(name: "current_cycles", scope: !14490, file: !2280, line: 338, type: !110)
!14490 = distinct !DILexicalBlock(scope: !14491, file: !2280, line: 337, column: 11)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !2280, line: 337, column: 2)
!14492 = distinct !DILexicalBlock(scope: !14484, file: !2280, line: 337, column: 2)
!14493 = !DILocation(line: 0, scope: !14484)
!14494 = !DILocation(line: 322, column: 19, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14484, file: !2280, line: 322, column: 6)
!14496 = !DILocation(line: 322, column: 6, scope: !14484)
!14497 = !DILocation(line: 328, column: 26, scope: !14484)
!14498 = !DILocation(line: 333, column: 43, scope: !14484)
!14499 = !DILocation(line: 337, column: 2, scope: !14484)
!14500 = !DILocation(line: 338, column: 29, scope: !14490)
!14501 = !DILocation(line: 0, scope: !14490)
!14502 = !DILocation(line: 341, column: 23, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14490, file: !2280, line: 341, column: 7)
!14504 = !DILocation(line: 341, column: 39, scope: !14503)
!14505 = !DILocation(line: 349, column: 1, scope: !14484)
!14506 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !119, file: !119, line: 1675, type: !3202, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !1817)
!14507 = !DILocation(line: 1677, column: 9, scope: !14506)
!14508 = !DILocation(line: 1677, column: 2, scope: !14506)
!14509 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14510, file: !14510, line: 24, type: !3202, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !1817)
!14510 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14511 = !DILocation(line: 26, column: 9, scope: !14509)
!14512 = !DILocation(line: 26, column: 2, scope: !14509)
!14513 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2280, file: !2280, line: 364, type: !14514, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !14516)
!14514 = !DISubroutineType(types: !14515)
!14515 = !{!111, !13852}
!14516 = !{!14517, !14518}
!14517 = !DILocalVariable(name: "timeout", arg: 1, scope: !14513, file: !2280, line: 364, type: !13852)
!14518 = !DILocalVariable(name: "dt", scope: !14513, file: !2280, line: 366, type: !104)
!14519 = !DILocation(line: 0, scope: !14513)
!14520 = !DILocation(line: 368, column: 6, scope: !14513)
!14521 = !DILocation(line: 371, column: 10, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14523, file: !2280, line: 370, column: 47)
!14523 = distinct !DILexicalBlock(scope: !14524, file: !2280, line: 370, column: 13)
!14524 = distinct !DILexicalBlock(scope: !14513, file: !2280, line: 368, column: 6)
!14525 = !DILocation(line: 371, column: 3, scope: !14522)
!14526 = !DILocation(line: 376, column: 58, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14528, file: !2280, line: 376, column: 7)
!14528 = distinct !DILexicalBlock(scope: !14523, file: !2280, line: 372, column: 9)
!14529 = !DILocation(line: 376, column: 7, scope: !14528)
!14530 = !DILocation(line: 376, column: 43, scope: !14527)
!14531 = !DILocation(line: 377, column: 4, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14527, file: !2280, line: 376, column: 64)
!14533 = !DILocation(line: 379, column: 10, scope: !14528)
!14534 = !DILocation(line: 379, column: 33, scope: !14528)
!14535 = !DILocation(line: 379, column: 31, scope: !14528)
!14536 = !DILocation(line: 379, column: 3, scope: !14528)
!14537 = !DILocation(line: 0, scope: !14524)
!14538 = !DILocation(line: 381, column: 1, scope: !14513)
!14539 = distinct !DISubprogram(name: "boot_banner", scope: !14540, file: !14540, line: 26, type: !2930, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !1817)
!14540 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14541 = !DILocation(line: 34, column: 2, scope: !14539)
!14542 = !DILocation(line: 36, column: 1, scope: !14539)
