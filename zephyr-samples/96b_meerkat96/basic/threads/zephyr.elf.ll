; ModuleID = 'build/96b_meerkat96/threads/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct._sfnode, %struct._wait_q_t }
%struct._sflist = type { %struct._sfnode*, %struct._sfnode* }
%struct._sfnode = type { i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.led = type { %struct.gpio_dt_spec, i8 }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct._sfnode }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct._sfnode] }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct._sfnode, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct._sfnode, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.printk_data_t = type { i8*, i32, i32 }
%struct.__va_list = type { i8* }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct._sfnode, %struct._sfnode }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.17], [13808 x i8], [191 x %struct.anon.17], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.17 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.17] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, i32 }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.17], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536856844 to i8*), void (i8*)* inttoptr (i32 536855999 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536856820 to i8*), void (i8*)* inttoptr (i32 536844489 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536856820 to i8*), void (i8*)* inttoptr (i32 536844489 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [17 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink0_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_uart_out_id to i8*), i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@printk_fifo = dso_local global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct._sfnode zeroinitializer, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) } } } } }, section "._k_queue.static.printk_fifo", align 4, !dbg !25
@.str = private unnamed_addr constant [31 x i8] c"Error: %s device is not ready\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Error %d: failed to configure pin %d (LED '%d')\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"mem_ptr != 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@led0 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_25, i8 4, i16 1 }, i8 0 }, align 4, !dbg !389
@led1 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_25, i8 5, i16 1 }, i8 1 }, align 4, !dbg !402
@.str.5 = private unnamed_addr constant [27 x i8] c"Toggled led%d; counter=%d\0A\00", align 1
@_k_thread_obj_blink0_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !379
@_k_thread_stack_blink0_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !374
@.str.6 = private unnamed_addr constant [10 x i8] c"blink0_id\00", align 1
@_k_thread_data_blink0_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink0_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_blink0_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink0 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink0_id", align 4, !dbg !216
@blink0_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink0_id, align 4, !dbg !362
@_k_thread_obj_blink1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !383
@_k_thread_stack_blink1_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 8, !dbg !381
@.str.7 = private unnamed_addr constant [10 x i8] c"blink1_id\00", align 1
@_k_thread_data_blink1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_blink1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink1 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink1_id", align 4, !dbg !366
@blink1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink1_id, align 4, !dbg !368
@_k_thread_obj_uart_out_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !387
@_k_thread_stack_uart_out_id = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 8, !dbg !385
@.str.8 = private unnamed_addr constant [12 x i8] c"uart_out_id\00", align 1
@_k_thread_data_uart_out_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_uart_out_id, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_uart_out_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @uart_out to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_uart_out_id", align 4, !dbg !370
@uart_out_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_uart_out_id, align 4, !dbg !372
@.str.10 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.25 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.27 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !424
@.str.9 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.11 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.12 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.14 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.15 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.16 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.18 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.19 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !435
@.str.37 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.39 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.40 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.45 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.46 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.49 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.50 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.47 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.48 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !864
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !874
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !974
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1143
@.str.68 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct._sfnode { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1094
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1125
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1092
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1080
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1068
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1070
@.str.1.69 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.75 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.76 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.70 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.71 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.72 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.73 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.74 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1127
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1138
@.str.31.78 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1148
@.str.81 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1154
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1412
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1404
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.81, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1395
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1397
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1414
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1416
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1421
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1424
@overflow_cyc = internal global i32 0, align 4, !dbg !1435
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1693
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1695
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1691
@lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !1686
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1660
@.str.85 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.86 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.87 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.88 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.89 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.90 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1697
@.str.96 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.97 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.98 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.99 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.100 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.105 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.108 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.109 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.110 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.117 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.118 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.119 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.120 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.127 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.128 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.129 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1727
@.str.138 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.139 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.140 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.141 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1733
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1939
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1945
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1952
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1957
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.4.152 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.156, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.157, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.158, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.159, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.160, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.161, i32 0, i32 0)], align 4, !dbg !1983
@.str.155 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.156 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.157 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.158 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.159 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.160 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.154 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.161 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2091
@.str.8.153 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.164 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.165 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.166 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.167 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.168 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.180 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.181 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.182 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.185 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.186 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.187 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.188 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [24 x i8] c"(flags & ~0x3UL) == 0UL\00", align 1
@.str.5.192 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/include/zephyr/sys/sflist.h\00", align 1
@.str.6.193 = private unnamed_addr constant [18 x i8] c"\09flags too large\0A\00", align 1
@.str.7.189 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.190 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct._sfnode zeroinitializer, align 4, !dbg !2105
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2209
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2212
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2214
@.str.200 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.217 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.206 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.224 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.234 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.208 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.229 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.205 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.238 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.239 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.247 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.248 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.249 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.250 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.201 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.202 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.203 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.204 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.207 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.221 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.230 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.231 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1947
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1950
@.str.23.242 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.256 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.257 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.258 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.259 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !2216
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2246
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2251
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2249
@.str.4.260 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.261 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.262 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.266 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.267 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [256 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2257
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @kheap__system_heap, i32 0, i32 0), i32 256 }, %struct._wait_q_t zeroinitializer, %struct._sfnode zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2263
@.str.286 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.287 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.288 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.289 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.290 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.291 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1820
@.str.6.292 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.293 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@.str.304 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2300
@.str.306 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.317 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.308 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.318 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.307 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.309 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.314 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.315 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.316 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.319 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.320 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3028 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3038, !srcloc !3039
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3040, !srcloc !3041
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3042, !srcloc !3043
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3044, !srcloc !3045
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3046, !srcloc !3047
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3048, !srcloc !3049
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3050, !srcloc !3051
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3052, !srcloc !3053
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3054, !srcloc !3055
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3056, !srcloc !3057
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3058, !srcloc !3059
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3060, !srcloc !3061
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3070, !srcloc !3071
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3078, !srcloc !3081
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3124, !srcloc !3125
  ret void, !dbg !3126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink0() #1 !dbg !3129 {
  tail call void @blink(%struct.led* noundef nonnull @led0, i32 noundef 100, i32 noundef 0) #24, !dbg !3130
  ret void, !dbg !3131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink(%struct.led* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3132 {
  %4 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3137, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.value(metadata i32 %1, metadata !3138, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.value(metadata i32 %2, metadata !3139, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3140, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.value(metadata i32 0, metadata !3143, metadata !DIExpression()), !dbg !3154
  %5 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 0, !dbg !3155
  %6 = load %struct.device*, %struct.device** %5, align 4, !dbg !3155
  %7 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %6) #24, !dbg !3157
  br i1 %7, label %12, label %8, !dbg !3158

8:                                                ; preds = %3
  %9 = load %struct.device*, %struct.device** %5, align 4, !dbg !3159
  %10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !3161
  %11 = load i8*, i8** %10, align 4, !dbg !3161
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i8* noundef %11) #25, !dbg !3162
  br label %43, !dbg !3163

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, !dbg !3164
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %13, metadata !3140, metadata !DIExpression()), !dbg !3154
  %14 = tail call fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef %13) #24, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %14, metadata !3144, metadata !DIExpression()), !dbg !3154
  %15 = icmp eq i32 %14, 0, !dbg !3166
  %16 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 1
  br i1 %15, label %17, label %26, !dbg !3168

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 0, metadata !3143, metadata !DIExpression()), !dbg !3154
  %18 = load %struct.device*, %struct.device** %5, align 4, !dbg !3169
  %19 = load i8, i8* %16, align 4, !dbg !3170
  call fastcc void @gpio_pin_set(%struct.device* noundef %18, i8 noundef zeroext %19, i32 noundef 0) #24, !dbg !3171
  %20 = bitcast %struct.printk_data_t* %4 to i8*, !dbg !3172
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #23, !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3145, metadata !DIExpression()), !dbg !3173
  %21 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 0, !dbg !3174
  store i8* null, i8** %21, align 4, !dbg !3174
  %22 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 1, !dbg !3174
  store i32 %2, i32* %22, align 4, !dbg !3174
  %23 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 2, !dbg !3174
  store i32 0, i32* %23, align 4, !dbg !3174
  call void @llvm.dbg.value(metadata i32 12, metadata !3152, metadata !DIExpression()), !dbg !3175
  %24 = call i8* @k_malloc(i32 noundef 12) #25, !dbg !3176
  call void @llvm.dbg.value(metadata i8* %24, metadata !3153, metadata !DIExpression()), !dbg !3175
  %25 = icmp eq i8* %24, null, !dbg !3177
  br i1 %25, label %32, label %33, !dbg !3180

26:                                               ; preds = %12
  %27 = load i8, i8* %16, align 4, !dbg !3181
  %28 = zext i8 %27 to i32, !dbg !3183
  %29 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 1, !dbg !3184
  %30 = load i8, i8* %29, align 4, !dbg !3184
  %31 = zext i8 %30 to i32, !dbg !3185
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0), i32 noundef %14, i32 noundef %28, i32 noundef %31) #25, !dbg !3186
  br label %43, !dbg !3187

32:                                               ; preds = %33, %17
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #25, !dbg !3188
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #25, !dbg !3188
  unreachable, !dbg !3188

33:                                               ; preds = %17, %33
  %34 = phi i8* [ %41, %33 ], [ %24, %17 ]
  %35 = phi i32 [ %37, %33 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3143, metadata !DIExpression()), !dbg !3154
  %36 = call i8* @memcpy(i8* noundef nonnull %34, i8* noundef nonnull %20, i32 noundef 12) #25, !dbg !3190
  call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), i8* noundef nonnull %34) #25, !dbg !3191
  call fastcc void @k_msleep(i32 noundef %1) #24, !dbg !3193
  %37 = add nuw nsw i32 %35, 1, !dbg !3194
  call void @llvm.dbg.value(metadata i32 %37, metadata !3143, metadata !DIExpression()), !dbg !3154
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #23, !dbg !3195
  %38 = load %struct.device*, %struct.device** %5, align 4, !dbg !3169
  %39 = load i8, i8* %16, align 4, !dbg !3170
  %40 = and i32 %37, 1, !dbg !3196
  call fastcc void @gpio_pin_set(%struct.device* noundef %38, i8 noundef zeroext %39, i32 noundef %40) #24, !dbg !3171
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #23, !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3145, metadata !DIExpression()), !dbg !3173
  store i8* null, i8** %21, align 4, !dbg !3174
  store i32 %2, i32* %22, align 4, !dbg !3174
  store i32 %37, i32* %23, align 4, !dbg !3174
  call void @llvm.dbg.value(metadata i32 12, metadata !3152, metadata !DIExpression()), !dbg !3175
  %41 = call i8* @k_malloc(i32 noundef 12) #25, !dbg !3176
  call void @llvm.dbg.value(metadata i8* %41, metadata !3153, metadata !DIExpression()), !dbg !3175
  %42 = icmp eq i8* %41, null, !dbg !3177
  br i1 %42, label %32, label %33, !dbg !3180, !llvm.loop !3197

43:                                               ; preds = %26, %8
  ret void, !dbg !3199
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3205, metadata !DIExpression()), !dbg !3206
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3207, !srcloc !3209
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !3210
  ret i1 %2, !dbg !3211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3212 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !3216, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 131072, metadata !3217, metadata !DIExpression()), !dbg !3218
  %2 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !3219
  %3 = load %struct.device*, %struct.device** %2, align 4, !dbg !3219
  %4 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !3220
  %5 = load i8, i8* %4, align 4, !dbg !3220
  %6 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !3221
  %7 = load i16, i16* %6, align 2, !dbg !3221
  %8 = zext i16 %7 to i32, !dbg !3222
  %9 = or i32 %8, 131072, !dbg !3223
  %10 = tail call fastcc i32 @gpio_pin_configure(%struct.device* noundef %3, i8 noundef zeroext %5, i32 noundef %9) #24, !dbg !3224
  ret i32 %10, !dbg !3225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3230, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i8 %1, metadata !3231, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata i32 %2, metadata !3232, metadata !DIExpression()), !dbg !3237
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3238
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3238
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3238
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3233, metadata !DIExpression()), !dbg !3237
  call void @llvm.dbg.value(metadata %struct._sfnode* undef, metadata !3235, metadata !DIExpression()), !dbg !3237
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3239
  %8 = load i32, i32* %7, align 4, !dbg !3239
  %9 = zext i8 %1 to i32, !dbg !3239
  %10 = shl nuw i32 1, %9, !dbg !3239
  %11 = and i32 %8, %10, !dbg !3239
  %12 = icmp eq i32 %11, 0, !dbg !3239
  br i1 %12, label %13, label %14, !dbg !3242

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #25, !dbg !3243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #25, !dbg !3243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #25, !dbg !3243
  unreachable, !dbg !3243

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3245
  %16 = bitcast i8** %15 to %struct._sfnode**, !dbg !3245
  %17 = load %struct._sfnode*, %struct._sfnode** %16, align 4, !dbg !3245
  call void @llvm.dbg.value(metadata %struct._sfnode* %17, metadata !3235, metadata !DIExpression()), !dbg !3237
  %18 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %17, i32 0, i32 0, !dbg !3246
  %19 = load i32, i32* %18, align 4, !dbg !3246
  %20 = and i32 %19, %10, !dbg !3248
  %21 = icmp eq i32 %20, 0, !dbg !3248
  %22 = icmp eq i32 %2, 0, !dbg !3249
  %23 = zext i1 %22 to i32, !dbg !3249
  %24 = select i1 %21, i32 %2, i32 %23, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %24, metadata !3232, metadata !DIExpression()), !dbg !3237
  tail call fastcc void @gpio_pin_set_raw(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %24) #24, !dbg !3250
  ret void, !dbg !3251
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3256, metadata !DIExpression()), !dbg !3257
  %2 = icmp sgt i32 %0, 0, !dbg !3258
  %3 = select i1 %2, i32 %0, i32 0, !dbg !3258
  %4 = zext i32 %3 to i64, !dbg !3258
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #24, !dbg !3258
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3259
  tail call fastcc void @k_sleep([1 x i64] %6) #24, !dbg !3259
  ret void, !dbg !3260
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3261 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3266, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.value(metadata i64 %0, metadata !3268, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i32 1000, metadata !3273, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i32 10000, metadata !3274, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 1, metadata !3275, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 0, metadata !3276, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 1, metadata !3277, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 0, metadata !3278, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 1, metadata !3279, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i8 0, metadata !3280, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i64 0, metadata !3281, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i64 0, metadata !3281, metadata !DIExpression()), !dbg !3285
  %2 = mul i64 %0, 10, !dbg !3287
  ret i64 %2, !dbg !3293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3294 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3303, metadata !DIExpression()), !dbg !3304
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3305, !srcloc !3307
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3308
  ret void, !dbg !3309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set_raw(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3312, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata i8 %1, metadata !3313, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata i32 %2, metadata !3314, metadata !DIExpression()), !dbg !3317
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3318
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3318
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3318
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3315, metadata !DIExpression()), !dbg !3317
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3319
  %8 = load i32, i32* %7, align 4, !dbg !3319
  %9 = zext i8 %1 to i32, !dbg !3319
  %10 = shl nuw i32 1, %9, !dbg !3319
  %11 = and i32 %8, %10, !dbg !3319
  %12 = icmp eq i32 %11, 0, !dbg !3319
  br i1 %12, label %13, label %14, !dbg !3322

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #25, !dbg !3323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #25, !dbg !3323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #25, !dbg !3323
  unreachable, !dbg !3323

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !3325
  br i1 %15, label %18, label %16, !dbg !3327

16:                                               ; preds = %14
  %17 = tail call fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #24, !dbg !3328
  call void @llvm.dbg.value(metadata i32 %17, metadata !3316, metadata !DIExpression()), !dbg !3317
  br label %20, !dbg !3330

18:                                               ; preds = %14
  %19 = tail call fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #24, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %19, metadata !3316, metadata !DIExpression()), !dbg !3317
  br label %20

20:                                               ; preds = %18, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !3316, metadata !DIExpression()), !dbg !3317
  ret void, !dbg !3333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3337, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata i32 %1, metadata !3338, metadata !DIExpression()), !dbg !3339
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3340, !srcloc !3342
  %3 = tail call fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) #24, !dbg !3343
  ret i32 %3, !dbg !3344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3347, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.value(metadata i32 %1, metadata !3348, metadata !DIExpression()), !dbg !3349
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3350, !srcloc !3352
  %3 = tail call fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) #24, !dbg !3353
  ret i32 %3, !dbg !3354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3357, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.value(metadata i32 %1, metadata !3358, metadata !DIExpression()), !dbg !3360
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3361
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3361
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3361
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3359, metadata !DIExpression()), !dbg !3360
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 4, !dbg !3362
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3362
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #25, !dbg !3363
  ret i32 %8, !dbg !3364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3367, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i32 %1, metadata !3368, metadata !DIExpression()), !dbg !3370
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3371
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3371
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3371
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3369, metadata !DIExpression()), !dbg !3370
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 3, !dbg !3372
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3372
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #25, !dbg !3373
  ret i32 %8, !dbg !3374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3377, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.value(metadata i8 %1, metadata !3378, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.value(metadata i32 %2, metadata !3379, metadata !DIExpression()), !dbg !3380
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3381, !srcloc !3383
  %4 = tail call fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !3384
  ret i32 %4, !dbg !3385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3388, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i8 %1, metadata !3389, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i32 %2, metadata !3390, metadata !DIExpression()), !dbg !3394
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3395
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !3395
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !3395
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !3391, metadata !DIExpression()), !dbg !3394
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3396
  %8 = bitcast i8** %7 to %struct._sfnode**, !dbg !3396
  %9 = load %struct._sfnode*, %struct._sfnode** %8, align 4, !dbg !3396
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !3392, metadata !DIExpression()), !dbg !3394
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3397
  %11 = bitcast i8** %10 to %struct._sfnode**, !dbg !3397
  %12 = load %struct._sfnode*, %struct._sfnode** %11, align 4, !dbg !3397
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !3393, metadata !DIExpression()), !dbg !3394
  %13 = and i32 %2, 132120576, !dbg !3398
  %14 = icmp eq i32 %13, 0, !dbg !3398
  br i1 %14, label %16, label %15, !dbg !3401

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #25, !dbg !3402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !3402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #25, !dbg !3402
  unreachable, !dbg !3402

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !3404
  %18 = icmp eq i32 %17, 48, !dbg !3404
  br i1 %18, label %19, label %20, !dbg !3407

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #25, !dbg !3408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i32 0, i32 0)) #25, !dbg !3408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #25, !dbg !3408
  unreachable, !dbg !3408

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !3410
  %22 = icmp ne i32 %21, 0, !dbg !3410
  %23 = and i32 %2, 131074, !dbg !3410
  %24 = icmp eq i32 %23, 2, !dbg !3410
  br i1 %24, label %25, label %26, !dbg !3410

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #25, !dbg !3413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.25, i32 0, i32 0)) #25, !dbg !3413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #25, !dbg !3413
  unreachable, !dbg !3413

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !3415
  %28 = icmp eq i32 %27, 4, !dbg !3415
  br i1 %28, label %29, label %30, !dbg !3415

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #25, !dbg !3418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #25, !dbg !3418
  unreachable, !dbg !3418

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !3420
  %32 = icmp eq i32 %31, 0, !dbg !3420
  %33 = or i1 %32, %22, !dbg !3420
  br i1 %33, label %35, label %34, !dbg !3420

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #25, !dbg !3423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i32 0, i32 0)) #25, !dbg !3423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #25, !dbg !3423
  unreachable, !dbg !3423

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !3425
  br i1 %36, label %37, label %38, !dbg !3428

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #25, !dbg !3429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i32 0, i32 0)) #25, !dbg !3429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #25, !dbg !3429
  unreachable, !dbg !3429

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !3431
  %40 = icmp ne i32 %39, 1048577, !dbg !3431
  %41 = or i1 %40, %32, !dbg !3431
  %42 = xor i32 %2, 786432, !dbg !3431
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !3431
  call void @llvm.dbg.value(metadata i32 %43, metadata !3390, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i32 %43, metadata !3390, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !3394
  %44 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %9, i32 0, i32 0, !dbg !3433
  %45 = load i32, i32* %44, align 4, !dbg !3433
  %46 = zext i8 %1 to i32, !dbg !3433
  %47 = shl nuw i32 1, %46, !dbg !3433
  %48 = and i32 %45, %47, !dbg !3433
  %49 = icmp eq i32 %48, 0, !dbg !3433
  br i1 %49, label %50, label %51, !dbg !3436

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #25, !dbg !3437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #25, !dbg !3437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #25, !dbg !3437
  unreachable, !dbg !3437

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !3439
  %53 = icmp eq i32 %52, 0, !dbg !3441
  br i1 %53, label %58, label %54, !dbg !3442

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3443
  %56 = load i32, i32* %55, align 4, !dbg !3445
  %57 = or i32 %56, %47, !dbg !3445
  store i32 %57, i32* %55, align 4, !dbg !3445
  br label %63, !dbg !3446

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !3447
  %60 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3449
  %61 = load i32, i32* %60, align 4, !dbg !3450
  %62 = and i32 %61, %59, !dbg !3450
  store i32 %62, i32* %60, align 4, !dbg !3450
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %64, metadata !3390, metadata !DIExpression()), !dbg !3394
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !3452
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !3452
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #25, !dbg !3453
  ret i32 %67, !dbg !3454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3457, metadata !DIExpression()), !dbg !3458
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !3459
  ret i1 %2, !dbg !3460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink1() #1 !dbg !3461 {
  tail call void @blink(%struct.led* noundef nonnull @led1, i32 noundef 1000, i32 noundef 1) #24, !dbg !3462
  ret void, !dbg !3463
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @uart_out() #5 !dbg !3464 {
  br label %1, !dbg !3471

1:                                                ; preds = %0, %1
  %2 = tail call fastcc i8* @k_queue_get() #24, !dbg !3472
  call void @llvm.dbg.value(metadata i8* %2, metadata !3469, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i8* %2, metadata !3466, metadata !DIExpression()), !dbg !3474
  %3 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3475
  %4 = bitcast i8* %3 to i32*, !dbg !3475
  %5 = load i32, i32* %4, align 4, !dbg !3475
  %6 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3476
  %7 = bitcast i8* %6 to i32*, !dbg !3476
  %8 = load i32, i32* %7, align 4, !dbg !3476
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i32 noundef %5, i32 noundef %8) #25, !dbg !3477
  tail call void @k_free(i8* noundef %2) #25, !dbg !3478
  br label %1, !dbg !3471, !llvm.loop !3479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !3481 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), metadata !3486, metadata !DIExpression()), !dbg !3488
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3489, !srcloc !3491
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), [1 x i64] [i64 -1]) #25, !dbg !3492
  ret i8* %1, !dbg !3493
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3496, metadata !DIExpression()), !dbg !3497
  ret i32 0, !dbg !3498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !3499 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3503, metadata !DIExpression()), !dbg !3504
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3505
  ret void, !dbg !3506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #7 !dbg !3507 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3510
  ret i8* %1, !dbg !3511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3512 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3524, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %0, metadata !3523, metadata !DIExpression()), !dbg !3533
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3534
  ret void, !dbg !3536
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3541, metadata !DIExpression()), !dbg !3543
  call void @llvm.dbg.value(metadata i8* %1, metadata !3542, metadata !DIExpression()), !dbg !3543
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3544
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3544
  ret i32 %4, !dbg !3545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3546 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3555, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i8* %1, metadata !3556, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i8* %2, metadata !3557, metadata !DIExpression()), !dbg !3559
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3560
  ret void, !dbg !3561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3566, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %1, metadata !3567, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 0, metadata !3568, metadata !DIExpression()), !dbg !3569
  %3 = icmp eq i32 %1, 0, !dbg !3570
  br i1 %3, label %13, label %4, !dbg !3573

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3568, metadata !DIExpression()), !dbg !3569
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3574
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3576
  %8 = load i8, i8* %7, align 1, !dbg !3576
  %9 = zext i8 %8 to i32, !dbg !3576
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3574
  %11 = add nuw i32 %5, 1, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %11, metadata !3568, metadata !DIExpression()), !dbg !3569
  %12 = icmp eq i32 %11, %1, !dbg !3570
  br i1 %12, label %13, label %4, !dbg !3573, !llvm.loop !3578

13:                                               ; preds = %4, %2
  ret void, !dbg !3580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3581 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3585, metadata !DIExpression()), !dbg !3587
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3588
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3586, metadata !DIExpression()), !dbg !3589
  call void @llvm.va_start(i8* nonnull %3), !dbg !3590
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3591
  %5 = load i32, i32* %4, align 4, !dbg !3591
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3591
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3591
  call void @llvm.va_end(i8* nonnull %3), !dbg !3592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3593
  ret void, !dbg !3593
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3594 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3598, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i32 %1, metadata !3599, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i8* %2, metadata !3600, metadata !DIExpression()), !dbg !3603
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3604
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3601, metadata !DIExpression()), !dbg !3605
  call void @llvm.va_start(i8* nonnull %5), !dbg !3606
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3607
  %7 = load i32, i32* %6, align 4, !dbg !3607
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3607
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %9, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.va_end(i8* nonnull %5), !dbg !3608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3609
  ret i32 %9, !dbg !3610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3611 {
  %5 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3618, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %0, metadata !3615, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i32 %1, metadata !3616, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %2, metadata !3617, metadata !DIExpression()), !dbg !3625
  %6 = bitcast %struct.printk_data_t* %5 to i8*, !dbg !3626
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3626
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %5, metadata !3619, metadata !DIExpression()), !dbg !3627
  %7 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 0, !dbg !3628
  store i8* %0, i8** %7, align 4, !dbg !3628
  %8 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 1, !dbg !3628
  store i32 %1, i32* %8, align 4, !dbg !3628
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 2, !dbg !3628
  store i32 0, i32* %9, align 4, !dbg !3628
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.printk_data_t*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3629
  %10 = load i32, i32* %9, align 4, !dbg !3630
  %11 = load i32, i32* %8, align 4, !dbg !3632
  %12 = icmp slt i32 %10, %11, !dbg !3633
  br i1 %12, label %13, label %15, !dbg !3634

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3635
  store i8 0, i8* %14, align 1, !dbg !3637
  br label %15, !dbg !3638

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3639
  ret i32 %10, !dbg !3640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.printk_data_t* nocapture noundef %1) #9 !dbg !3641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3646, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata %struct.printk_data_t* %1, metadata !3647, metadata !DIExpression()), !dbg !3648
  %3 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 0, !dbg !3649
  %4 = load i8*, i8** %3, align 4, !dbg !3649
  %5 = icmp eq i8* %4, null, !dbg !3651
  %6 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3652
  br i1 %5, label %12, label %8, !dbg !3653

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 1, !dbg !3654
  %10 = load i32, i32* %9, align 4, !dbg !3654
  %11 = icmp slt i32 %7, %10, !dbg !3655
  br i1 %11, label %15, label %12, !dbg !3656

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2, !dbg !3657
  %14 = add nsw i32 %7, 1, !dbg !3659
  store i32 %14, i32* %13, align 4, !dbg !3659
  br label %25, !dbg !3660

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3661
  %17 = icmp eq i32 %7, %16, !dbg !3663
  br i1 %17, label %18, label %21, !dbg !3664

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3665
  store i32 %19, i32* %6, align 4, !dbg !3665
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3667
  store i8 0, i8* %20, align 1, !dbg !3668
  br label %25, !dbg !3669

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3670
  %23 = add nsw i32 %7, 1, !dbg !3672
  store i32 %23, i32* %6, align 4, !dbg !3672
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3673
  store i8 %22, i8* %24, align 1, !dbg !3674
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3675
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3676 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3681, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %1, metadata !3682, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %2, metadata !3683, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %3, metadata !3684, metadata !DIExpression()), !dbg !3685
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3686
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3687
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3688
  unreachable, !dbg !3689
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3690 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3790
  ret %struct.k_thread* %1, !dbg !3791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3796, metadata !DIExpression()), !dbg !3797
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3798, !srcloc !3800
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3801
  ret void, !dbg !3802
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !3803 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3804, !srcloc !3806
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3807
  ret %struct.k_thread* %1, !dbg !3808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !3809 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3820, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.value(metadata i8* %1, metadata !3821, metadata !DIExpression()), !dbg !3824
  %3 = icmp eq i8* %1, null, !dbg !3825
  br i1 %3, label %16, label %4, !dbg !3827

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3828
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3828
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3822, metadata !DIExpression()), !dbg !3824
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !3829, !range !3830
  call void @llvm.dbg.value(metadata i32 %7, metadata !3823, metadata !DIExpression()), !dbg !3824
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3831
  br i1 %8, label %10, label %9, !dbg !3834

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #25, !dbg !3835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.12, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !3835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #25, !dbg !3835
  unreachable, !dbg !3835

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3837
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #24, !dbg !3837
  %13 = icmp eq i32 %12, %7, !dbg !3837
  br i1 %13, label %15, label %14, !dbg !3840

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #25, !dbg !3841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.14, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !3841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #25, !dbg !3841
  unreachable, !dbg !3841

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #24, !dbg !3843
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #24, !dbg !3844
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !3845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !3846 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3850, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %1, metadata !3851, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %1, metadata !3852, metadata !DIExpression()), !dbg !3854
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3853, metadata !DIExpression()), !dbg !3854
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3856
  %5 = ptrtoint i8* %4 to i32, !dbg !3857
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3857
  %7 = sub i32 %5, %6, !dbg !3857
  %8 = lshr i32 %7, 3, !dbg !3858
  ret i32 %8, !dbg !3859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3860 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3864, metadata !DIExpression()), !dbg !3866
  call void @llvm.dbg.value(metadata i32 %1, metadata !3865, metadata !DIExpression()), !dbg !3866
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3867
  %4 = and i32 %3, 1, !dbg !3868
  %5 = icmp ne i32 %4, 0, !dbg !3867
  ret i1 %5, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3874, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 %1, metadata !3875, metadata !DIExpression()), !dbg !3876
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3877
  %4 = add i32 %3, %1, !dbg !3878
  ret i32 %4, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3882, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata i32 %1, metadata !3883, metadata !DIExpression()), !dbg !3884
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #24, !dbg !3885
  %4 = sub i32 %1, %3, !dbg !3886
  ret i32 %4, !dbg !3887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !3888 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3892, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3893, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i1 %2, metadata !3894, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3897
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !3898
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3895, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3896, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3897
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3899
  %6 = bitcast i8* %5 to i16*, !dbg !3899
  %7 = load i16, i16* %6, align 2, !dbg !3899
  %8 = and i16 %7, -2, !dbg !3903
  %9 = zext i1 %2 to i16, !dbg !3903
  %10 = or i16 %8, %9, !dbg !3903
  store i16 %10, i16* %6, align 2, !dbg !3899
  ret void, !dbg !3904
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !3905 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3909, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i32 %1, metadata !3910, metadata !DIExpression()), !dbg !3911
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3912
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3914
  br i1 %4, label %7, label %5, !dbg !3915

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3916
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3918
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3919
  br label %7, !dbg !3920

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3921
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3923
  br i1 %9, label %13, label %10, !dbg !3924

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #24, !dbg !3925
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3927
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #24, !dbg !3928
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %12, metadata !3910, metadata !DIExpression()), !dbg !3911
  br label %13, !dbg !3930

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3910, metadata !DIExpression()), !dbg !3911
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #24, !dbg !3931
  ret void, !dbg !3932
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !3933 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3935, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %1, metadata !3936, metadata !DIExpression()), !dbg !3940
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3941, !range !3942
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %4, metadata !3937, metadata !DIExpression()), !dbg !3944
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3945
  ret void, !dbg !3946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !3947 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3951, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 %1, metadata !3952, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 %2, metadata !3953, metadata !DIExpression()), !dbg !3956
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3957
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3958
  %6 = add i32 %5, %4, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %6, metadata !3954, metadata !DIExpression()), !dbg !3956
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #24, !dbg !3960
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !3961
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !3962
  ret void, !dbg !3963
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !3964 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3966, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 %1, metadata !3967, metadata !DIExpression()), !dbg !3971
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !3972, !range !3942
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #24, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %4, metadata !3968, metadata !DIExpression()), !dbg !3974
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #24, !dbg !3975
  ret void, !dbg !3976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3981, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3983
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #24, !dbg !3984
  %4 = lshr i32 %3, 1, !dbg !3985
  ret i32 %4, !dbg !3986
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #10 !dbg !3987 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3991, metadata !DIExpression()), !dbg !3994
  call void @llvm.dbg.value(metadata i32 %1, metadata !3992, metadata !DIExpression()), !dbg !3994
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #24, !dbg !3995
  %4 = add i32 %1, 1, !dbg !3996
  %5 = sub i32 %4, %3, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %5, metadata !3993, metadata !DIExpression()), !dbg !3994
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3998, !range !3999
  %7 = sub nsw i32 31, %6, !dbg !4000
  ret i32 %7, !dbg !4001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4002 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4006, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %1, metadata !4007, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %2, metadata !4008, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4009, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4015
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4016
  %5 = load i32, i32* %4, align 4, !dbg !4016
  %6 = icmp eq i32 %5, 0, !dbg !4017
  br i1 %6, label %7, label %12, !dbg !4018

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4019
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4021
  %10 = load i32, i32* %9, align 4, !dbg !4022
  %11 = or i32 %10, %8, !dbg !4022
  store i32 %11, i32* %9, align 4, !dbg !4022
  store i32 %1, i32* %4, align 4, !dbg !4023
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !4024
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #24, !dbg !4025
  br label %14, !dbg !4026

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4011, metadata !DIExpression()), !dbg !4027
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #24, !dbg !4028, !range !4029
  call void @llvm.dbg.value(metadata i32 %13, metadata !4014, metadata !DIExpression()), !dbg !4027
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #24, !dbg !4030
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #24, !dbg !4031
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #24, !dbg !4032
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #24, !dbg !4033
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4035 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4037, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %1, metadata !4038, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %2, metadata !4039, metadata !DIExpression()), !dbg !4040
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #24, !dbg !4041
  ret void, !dbg !4042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4043 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4045, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %1, metadata !4046, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i32 %2, metadata !4047, metadata !DIExpression()), !dbg !4048
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #24, !dbg !4049
  ret void, !dbg !4050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4051 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4053, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()), !dbg !4055
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #24, !dbg !4056
  ret i32 %3, !dbg !4057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4058 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4062, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %1, metadata !4063, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %2, metadata !4064, metadata !DIExpression()), !dbg !4067
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4068
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4065, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4067
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4067
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %5, metadata !4066, metadata !DIExpression()), !dbg !4067
  %6 = bitcast i8* %5 to i16*, !dbg !4070
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4073
  %8 = load i16, i16* %7, align 2, !dbg !4073
  %9 = zext i16 %8 to i32, !dbg !4073
  ret i32 %9, !dbg !4074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !4075 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4079, metadata !DIExpression()), !dbg !4080
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4081
  ret %struct.chunk_unit_t* %2, !dbg !4082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #6 !dbg !4083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4087, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 %1, metadata !4088, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 %2, metadata !4089, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 %3, metadata !4090, metadata !DIExpression()), !dbg !4093
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4091, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4092, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4093
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4095
  call void @llvm.dbg.value(metadata i8* %6, metadata !4092, metadata !DIExpression()), !dbg !4093
  %7 = trunc i32 %3 to i16, !dbg !4096
  %8 = bitcast i8* %6 to i16*, !dbg !4099
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4100
  store i16 %7, i16* %9, align 2, !dbg !4101
  ret void, !dbg !4102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !4103 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4107, metadata !DIExpression()), !dbg !4108
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #24, !dbg !4109
  ret i32 %2, !dbg !4110
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4111 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4115, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %1, metadata !4116, metadata !DIExpression()), !dbg !4117
  %3 = add i32 %1, 4, !dbg !4118
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #24, !dbg !4119
  ret i32 %4, !dbg !4120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !4121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4125, metadata !DIExpression()), !dbg !4126
  %2 = add i32 %0, 7, !dbg !4127
  %3 = lshr i32 %2, 3, !dbg !4128
  ret i32 %3, !dbg !4129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4130 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4134, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %1, metadata !4135, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %2, metadata !4136, metadata !DIExpression()), !dbg !4137
  %4 = shl i32 %2, 1, !dbg !4138
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #24, !dbg !4139
  ret void, !dbg !4140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4141 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4143, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata i32 %1, metadata !4144, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata i32 %2, metadata !4145, metadata !DIExpression()), !dbg !4146
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #24, !dbg !4147
  ret void, !dbg !4148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4149 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4151, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %1, metadata !4152, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %2, metadata !4153, metadata !DIExpression()), !dbg !4159
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4160
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !4154, metadata !DIExpression()), !dbg !4159
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4161
  %6 = icmp eq i32 %5, %1, !dbg !4162
  br i1 %6, label %7, label %14, !dbg !4163

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4164
  %9 = xor i32 %8, -1, !dbg !4166
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4167
  %11 = load i32, i32* %10, align 4, !dbg !4168
  %12 = and i32 %11, %9, !dbg !4168
  store i32 %12, i32* %10, align 4, !dbg !4168
  %13 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4169
  store i32 0, i32* %13, align 4, !dbg !4170
  br label %17, !dbg !4171

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %15, metadata !4155, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 %5, metadata !4158, metadata !DIExpression()), !dbg !4173
  %16 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4174
  store i32 %5, i32* %16, align 4, !dbg !4175
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #24, !dbg !4176
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #24, !dbg !4177
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4179 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4181, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 %1, metadata !4182, metadata !DIExpression()), !dbg !4183
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #24, !dbg !4184
  ret i32 %3, !dbg !4185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #7 !dbg !4186 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4190, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i8* %1, metadata !4191, metadata !DIExpression()), !dbg !4197
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4198
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4192, metadata !DIExpression()), !dbg !4197
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #24, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %5, metadata !4193, metadata !DIExpression()), !dbg !4197
  %6 = ptrtoint i8* %1 to i32, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %6, metadata !4194, metadata !DIExpression()), !dbg !4197
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #24, !dbg !4201
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4201
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %9, metadata !4195, metadata !DIExpression()), !dbg !4197
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #24, !dbg !4203
  %11 = shl i32 %10, 3, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %11, metadata !4196, metadata !DIExpression()), !dbg !4197
  %12 = sub i32 %9, %6, !dbg !4205
  %13 = add i32 %12, %11, !dbg !4206
  ret i32 %13, !dbg !4207
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4218
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4219
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4219
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4214, metadata !DIExpression()), !dbg !4218
  %5 = icmp eq i32 %1, 0, !dbg !4220
  br i1 %5, label %19, label %6, !dbg !4222

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !4223
  br i1 %7, label %19, label %8, !dbg !4224

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #24, !dbg !4225, !range !3830
  call void @llvm.dbg.value(metadata i32 %9, metadata !4216, metadata !DIExpression()), !dbg !4218
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #24, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %10, metadata !4217, metadata !DIExpression()), !dbg !4218
  %11 = icmp eq i32 %10, 0, !dbg !4227
  br i1 %11, label %19, label %12, !dbg !4229

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !4230
  %14 = icmp ugt i32 %13, %9, !dbg !4232
  br i1 %14, label %15, label %17, !dbg !4233

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4234
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #24, !dbg !4236
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #24, !dbg !4237
  br label %17, !dbg !4238

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #24, !dbg !4239
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #24, !dbg !4240
  call void @llvm.dbg.value(metadata i8* %18, metadata !4215, metadata !DIExpression()), !dbg !4218
  br label %19, !dbg !4241

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4218
  ret i8* %20, !dbg !4242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4243 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4247, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.value(metadata i32 %1, metadata !4248, metadata !DIExpression()), !dbg !4249
  %3 = lshr i32 %1, 3, !dbg !4250
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4251
  %5 = load i32, i32* %4, align 4, !dbg !4251
  %6 = icmp uge i32 %3, %5, !dbg !4252
  ret i1 %6, !dbg !4253
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4254 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4258, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata i32 %1, metadata !4259, metadata !DIExpression()), !dbg !4273
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %3, metadata !4260, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4261, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4273
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4275
  %5 = load i32, i32* %4, align 4, !dbg !4275
  %6 = icmp eq i32 %5, 0, !dbg !4276
  br i1 %6, label %19, label %7, !dbg !4277

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4278
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4279
  call void @llvm.dbg.value(metadata i32 %9, metadata !4265, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %8, metadata !4266, metadata !DIExpression()), !dbg !4280
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !4281
  %11 = icmp ult i32 %10, %1, !dbg !4283
  br i1 %11, label %13, label %12, !dbg !4284

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #24, !dbg !4285
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #24, !dbg !4287
  store i32 %14, i32* %4, align 4, !dbg !4288
  %15 = add nsw i32 %9, -1, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %15, metadata !4265, metadata !DIExpression()), !dbg !4279
  %16 = icmp eq i32 %15, 0, !dbg !4289
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4290
  br i1 %18, label %19, label %7, !dbg !4290, !llvm.loop !4291

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4294
  %21 = load i32, i32* %20, align 4, !dbg !4294
  %22 = add nsw i32 %3, 1, !dbg !4295
  %23 = shl nsw i32 -1, %22, !dbg !4295
  %24 = and i32 %21, %23, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %24, metadata !4268, metadata !DIExpression()), !dbg !4273
  %25 = icmp eq i32 %24, 0, !dbg !4297
  br i1 %25, label %30, label %26, !dbg !4298

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4299, !range !3999
  call void @llvm.dbg.value(metadata i32 %27, metadata !4269, metadata !DIExpression()), !dbg !4300
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4301
  %29 = load i32, i32* %28, align 4, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %29, metadata !4272, metadata !DIExpression()), !dbg !4300
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #24, !dbg !4302
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4273
  ret i32 %31, !dbg !4303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4304 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4306, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i32 %1, metadata !4307, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i32 %2, metadata !4308, metadata !DIExpression()), !dbg !4312
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #24, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %4, metadata !4309, metadata !DIExpression()), !dbg !4312
  %5 = sub i32 %2, %1, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %5, metadata !4310, metadata !DIExpression()), !dbg !4312
  %6 = sub i32 %4, %5, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %6, metadata !4311, metadata !DIExpression()), !dbg !4312
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #24, !dbg !4316
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #24, !dbg !4317
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #24, !dbg !4318
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #24, !dbg !4319
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #24, !dbg !4320
  ret void, !dbg !4321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4322 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4326, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.value(metadata i32 %1, metadata !4327, metadata !DIExpression()), !dbg !4330
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #24, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4328, metadata !DIExpression()), !dbg !4330
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4332
  call void @llvm.dbg.value(metadata i8* %4, metadata !4329, metadata !DIExpression()), !dbg !4330
  ret i8* %4, !dbg !4333
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4334 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4338, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i32 %1, metadata !4339, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i32 %2, metadata !4340, metadata !DIExpression()), !dbg !4350
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4351
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4341, metadata !DIExpression()), !dbg !4350
  %6 = sub i32 0, %1, !dbg !4352
  %7 = and i32 %6, %1, !dbg !4353
  call void @llvm.dbg.value(metadata i32 %7, metadata !4343, metadata !DIExpression()), !dbg !4350
  %8 = icmp eq i32 %7, %1, !dbg !4354
  br i1 %8, label %13, label %9, !dbg !4356

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4357
  call void @llvm.dbg.value(metadata i32 %10, metadata !4339, metadata !DIExpression()), !dbg !4350
  %11 = icmp ult i32 %7, 4, !dbg !4359
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4359
  br label %17, !dbg !4359

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4360
  br i1 %14, label %15, label %17, !dbg !4363

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #24, !dbg !4364
  br label %61, !dbg !4366

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4350
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4367
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4339, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i32 %19, metadata !4342, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i32 %18, metadata !4343, metadata !DIExpression()), !dbg !4350
  %21 = add i32 %20, -1, !dbg !4368
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !4368, !range !3999
  %23 = icmp ult i32 %22, 2, !dbg !4368
  br i1 %23, label %25, label %24, !dbg !4371

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #25, !dbg !4372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #25, !dbg !4372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #25, !dbg !4372
  unreachable, !dbg !4372

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !4374
  br i1 %26, label %61, label %27, !dbg !4376

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #24, !dbg !4377
  br i1 %28, label %61, label %29, !dbg !4378

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !4379
  %31 = add i32 %30, %20, !dbg !4380
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #24, !dbg !4381, !range !3830
  call void @llvm.dbg.value(metadata i32 %32, metadata !4344, metadata !DIExpression()), !dbg !4350
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #24, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %33, metadata !4345, metadata !DIExpression()), !dbg !4350
  %34 = icmp eq i32 %33, 0, !dbg !4383
  br i1 %34, label %61, label %35, !dbg !4385

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #24, !dbg !4386
  call void @llvm.dbg.value(metadata i8* %36, metadata !4346, metadata !DIExpression()), !dbg !4350
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !4387
  %38 = ptrtoint i8* %37 to i32, !dbg !4387
  %39 = add i32 %21, %38, !dbg !4387
  %40 = sub i32 0, %20, !dbg !4387
  %41 = and i32 %39, %40, !dbg !4387
  %42 = inttoptr i32 %41 to i8*, !dbg !4388
  %43 = sub i32 0, %18, !dbg !4389
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !4389
  call void @llvm.dbg.value(metadata i8* %44, metadata !4346, metadata !DIExpression()), !dbg !4350
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !4390
  %46 = ptrtoint i8* %45 to i32, !dbg !4390
  %47 = add i32 %46, 7, !dbg !4390
  %48 = and i32 %47, -8, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %48, metadata !4347, metadata !DIExpression()), !dbg !4350
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #24, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %49, metadata !4348, metadata !DIExpression()), !dbg !4350
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #24, !dbg !4392
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !4393
  %52 = sub i32 %48, %51, !dbg !4393
  %53 = ashr exact i32 %52, 3, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %53, metadata !4349, metadata !DIExpression()), !dbg !4350
  %54 = icmp ugt i32 %49, %33, !dbg !4394
  br i1 %54, label %55, label %56, !dbg !4396

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #24, !dbg !4397
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #24, !dbg !4399
  br label %56, !dbg !4400

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #24, !dbg !4401
  %58 = icmp ugt i32 %57, %53, !dbg !4403
  br i1 %58, label %59, label %60, !dbg !4404

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #24, !dbg !4405
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #24, !dbg !4407
  br label %60, !dbg !4408

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #24, !dbg !4409
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !4350
  ret i8* %62, !dbg !4410
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4411 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4415, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i8* %1, metadata !4416, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %2, metadata !4417, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %3, metadata !4418, metadata !DIExpression()), !dbg !4434
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4435
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4435
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4419, metadata !DIExpression()), !dbg !4434
  %7 = icmp eq i8* %1, null, !dbg !4436
  br i1 %7, label %8, label %10, !dbg !4438

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !4439
  br label %63, !dbg !4441

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4442
  br i1 %11, label %12, label %13, !dbg !4444

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !4445
  br label %63, !dbg !4447

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !4448
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !4448, !range !3999
  %16 = icmp ult i32 %15, 2, !dbg !4448
  br i1 %16, label %18, label %17, !dbg !4451

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #25, !dbg !4452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #25, !dbg !4452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #25, !dbg !4452
  unreachable, !dbg !4452

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #24, !dbg !4454
  br i1 %19, label %63, label %20, !dbg !4456

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #24, !dbg !4457, !range !3830
  call void @llvm.dbg.value(metadata i32 %21, metadata !4420, metadata !DIExpression()), !dbg !4434
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #24, !dbg !4458
  call void @llvm.dbg.value(metadata i32 %22, metadata !4421, metadata !DIExpression()), !dbg !4434
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #24, !dbg !4459
  %24 = ptrtoint i8* %1 to i32, !dbg !4460
  %25 = ptrtoint i8* %23 to i32, !dbg !4460
  %26 = sub i32 %24, %25, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %26, metadata !4422, metadata !DIExpression()), !dbg !4434
  %27 = add i32 %26, %3, !dbg !4461
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #24, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %28, metadata !4423, metadata !DIExpression()), !dbg !4434
  %29 = icmp eq i32 %2, 0, !dbg !4463
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !4464
  br i1 %32, label %33, label %53, !dbg !4464

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #24, !dbg !4465
  %35 = icmp eq i32 %28, %34, !dbg !4466
  br i1 %35, label %63, label %36, !dbg !4467

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !4468
  br i1 %37, label %38, label %40, !dbg !4469

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !4470
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #24, !dbg !4472
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #24, !dbg !4473
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #24, !dbg !4474
  br label %63, !dbg !4475

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !4476
  br i1 %41, label %53, label %42, !dbg !4477

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !4478
  %44 = add i32 %43, %34, !dbg !4479
  %45 = icmp ult i32 %44, %28, !dbg !4480
  br i1 %45, label %53, label %46, !dbg !4481

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !4482
  call void @llvm.dbg.value(metadata i32 %47, metadata !4424, metadata !DIExpression()), !dbg !4483
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !4484
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #24, !dbg !4485
  %49 = icmp ult i32 %47, %48, !dbg !4487
  br i1 %49, label %50, label %52, !dbg !4488

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !4489
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #24, !dbg !4491
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #24, !dbg !4492
  br label %52, !dbg !4493

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #24, !dbg !4494
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #24, !dbg !4495
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #24, !dbg !4496
  call void @llvm.dbg.value(metadata i8* %54, metadata !4430, metadata !DIExpression()), !dbg !4434
  %55 = icmp eq i8* %54, null, !dbg !4497
  br i1 %55, label %63, label %56, !dbg !4498

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #24, !dbg !4499, !range !3942
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #24, !dbg !4500
  %59 = sub i32 %58, %26, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %59, metadata !4431, metadata !DIExpression()), !dbg !4502
  %60 = icmp ult i32 %59, %3, !dbg !4503
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !4503
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #25, !dbg !4504
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #24, !dbg !4505
  br label %63, !dbg !4506

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !4434
  ret i8* %64, !dbg !4507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4508 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4512, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 %1, metadata !4513, metadata !DIExpression()), !dbg !4514
  %3 = shl i32 %1, 3, !dbg !4515
  %4 = add i32 %3, -4, !dbg !4516
  ret i32 %4, !dbg !4517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4518 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4522, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i8* %1, metadata !4523, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i32 %2, metadata !4524, metadata !DIExpression()), !dbg !4533
  %4 = icmp ult i32 %2, 262144, !dbg !4534
  br i1 %4, label %6, label %5, !dbg !4539

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #25, !dbg !4540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.18, i32 0, i32 0)) #25, !dbg !4540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #25, !dbg !4540
  unreachable, !dbg !4540

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !4542
  br i1 %7, label %9, label %8, !dbg !4545

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #25, !dbg !4546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #25, !dbg !4546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #25, !dbg !4546
  unreachable, !dbg !4546

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %10, metadata !4524, metadata !DIExpression()), !dbg !4533
  %11 = ptrtoint i8* %1 to i32, !dbg !4549
  %12 = add i32 %11, 7, !dbg !4549
  %13 = and i32 %12, -8, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %13, metadata !4525, metadata !DIExpression()), !dbg !4533
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !4550
  %15 = ptrtoint i8* %14 to i32, !dbg !4550
  %16 = and i32 %15, -8, !dbg !4550
  call void @llvm.dbg.value(metadata i32 %16, metadata !4526, metadata !DIExpression()), !dbg !4533
  %17 = sub i32 %16, %13, !dbg !4551
  %18 = lshr exact i32 %17, 3, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %18, metadata !4527, metadata !DIExpression()), !dbg !4533
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #24, !dbg !4553
  %20 = icmp ugt i32 %18, %19, !dbg !4553
  br i1 %20, label %22, label %21, !dbg !4556

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #25, !dbg !4557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #25, !dbg !4557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #25, !dbg !4557
  unreachable, !dbg !4557

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !4559
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !4528, metadata !DIExpression()), !dbg !4533
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4560
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !4561
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !4562
  store i32 %18, i32* %25, align 8, !dbg !4563
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !4564
  store i32 0, i32* %26, align 4, !dbg !4565
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #24, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %27, metadata !4529, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4533
  %28 = shl i32 %27, 2, !dbg !4567
  %29 = add i32 %28, 20, !dbg !4568
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #24, !dbg !4569
  call void @llvm.dbg.value(metadata i32 %30, metadata !4530, metadata !DIExpression()), !dbg !4533
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #24, !dbg !4570
  %32 = add i32 %31, %30, !dbg !4570
  %33 = icmp ugt i32 %32, %18, !dbg !4570
  br i1 %33, label %36, label %34, !dbg !4573

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !4531, metadata !DIExpression()), !dbg !4574
  %35 = icmp slt i32 %27, 0, !dbg !4575
  br i1 %35, label %37, label %39, !dbg !4577

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #25, !dbg !4578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #25, !dbg !4578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #25, !dbg !4578
  unreachable, !dbg !4578

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #24, !dbg !4580
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #24, !dbg !4581
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #24, !dbg !4582
  %38 = sub i32 %18, %30, !dbg !4583
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #24, !dbg !4584
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #24, !dbg !4585
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #24, !dbg !4586
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #24, !dbg !4587
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #24, !dbg !4588
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #24, !dbg !4589
  ret void, !dbg !4590

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !4531, metadata !DIExpression()), !dbg !4574
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !4591
  store i32 0, i32* %41, align 4, !dbg !4593
  %42 = add nuw i32 %40, 1, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %42, metadata !4531, metadata !DIExpression()), !dbg !4574
  %43 = icmp eq i32 %40, %27, !dbg !4575
  br i1 %43, label %37, label %39, !dbg !4577, !llvm.loop !4595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4597 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4607, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %1, metadata !4608, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %2, metadata !4609, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %4, metadata !4611, metadata !DIExpression()), !dbg !4738
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4739
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4739
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4612, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 0, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i1 undef, metadata !4618, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4738
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4741

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4741

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4742
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %30, metadata !4609, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %29, metadata !4616, metadata !DIExpression()), !dbg !4738
  %31 = load i8, i8* %30, align 1, !dbg !4743
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4741

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4743
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %34, metadata !4609, metadata !DIExpression()), !dbg !4738
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %35, metadata !4620, metadata !DIExpression()), !dbg !4745
  %36 = icmp slt i32 %35, 0, !dbg !4746
  %37 = add i32 %29, 1, !dbg !4744
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %36, label %365, label %28, !llvm.loop !4748

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4625, metadata !DIExpression()), !dbg !4751
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4751
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4670, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4673, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %30, metadata !4676, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 -1, metadata !4677, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 -1, metadata !4678, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* null, metadata !4679, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %14, metadata !4680, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 0, metadata !4681, metadata !DIExpression()), !dbg !4752
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4753
  call void @llvm.dbg.value(metadata i8* %39, metadata !4609, metadata !DIExpression()), !dbg !4738
  %40 = load i24, i24* %15, align 8, !dbg !4754
  %41 = and i24 %40, 256, !dbg !4754
  %42 = icmp eq i24 %41, 0, !dbg !4754
  br i1 %42, label %51, label %43, !dbg !4756

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4757
  call void @llvm.dbg.value(metadata i8* %44, metadata !4610, metadata !DIExpression()), !dbg !4738
  %45 = bitcast i8* %27 to i32*, !dbg !4757
  %46 = load i32, i32* %45, align 4, !dbg !4757
  call void @llvm.dbg.value(metadata i32 %46, metadata !4677, metadata !DIExpression()), !dbg !4752
  %47 = icmp slt i32 %46, 0, !dbg !4759
  br i1 %47, label %48, label %56, !dbg !4761

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4762
  store i24 %49, i24* %15, align 8, !dbg !4762
  %50 = sub nsw i32 0, %46, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %50, metadata !4677, metadata !DIExpression()), !dbg !4752
  br label %56, !dbg !4765

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4766
  %53 = icmp eq i24 %52, 0, !dbg !4766
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4768
  br label %56, !dbg !4768

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4769
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4752
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %58, metadata !4677, metadata !DIExpression()), !dbg !4752
  %60 = and i24 %57, 1024, !dbg !4769
  %61 = icmp eq i24 %60, 0, !dbg !4769
  br i1 %61, label %69, label %62, !dbg !4770

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %63, metadata !4610, metadata !DIExpression()), !dbg !4738
  %64 = bitcast i8* %59 to i32*, !dbg !4771
  %65 = load i32, i32* %64, align 4, !dbg !4771
  call void @llvm.dbg.value(metadata i32 %65, metadata !4682, metadata !DIExpression()), !dbg !4772
  %66 = icmp slt i32 %65, 0, !dbg !4773
  br i1 %66, label %67, label %74, !dbg !4775

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4776
  store i24 %68, i24* %15, align 8, !dbg !4776
  br label %74, !dbg !4778

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4779
  %71 = icmp eq i24 %70, 0, !dbg !4779
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4781
  br label %74, !dbg !4781

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4782
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4752
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4752
  call void @llvm.dbg.value(metadata i8* %77, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %76, metadata !4678, metadata !DIExpression()), !dbg !4752
  store i32 0, i32* %16, align 4, !dbg !4783
  store i32 0, i32* %17, align 8, !dbg !4784
  %78 = lshr i24 %75, 16, !dbg !4782
  call void @llvm.dbg.value(metadata i24 %78, metadata !4685, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4752
  %79 = lshr i24 %75, 11, !dbg !4785
  %80 = and i24 %79, 15, !dbg !4785
  %81 = zext i24 %80 to i32, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %81, metadata !4686, metadata !DIExpression()), !dbg !4752
  %82 = trunc i24 %78 to i3, !dbg !4786
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4786

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4787

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %85, metadata !4610, metadata !DIExpression()), !dbg !4738
  %86 = bitcast i8* %77 to i32*, !dbg !4790
  %87 = load i32, i32* %86, align 4, !dbg !4790
  %88 = sext i32 %87 to i64, !dbg !4790
  store i64 %88, i64* %20, align 8, !dbg !4792
  br label %115, !dbg !4793

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4794
  call void @llvm.dbg.value(metadata i8* %90, metadata !4610, metadata !DIExpression()), !dbg !4738
  %91 = bitcast i8* %77 to i32*, !dbg !4794
  %92 = load i32, i32* %91, align 4, !dbg !4794
  %93 = sext i32 %92 to i64, !dbg !4794
  store i64 %93, i64* %20, align 8, !dbg !4797
  br label %115, !dbg !4798

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4799
  %96 = add i32 %95, 7, !dbg !4799
  %97 = and i32 %96, -8, !dbg !4799
  %98 = inttoptr i32 %97 to i8*, !dbg !4799
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4799
  call void @llvm.dbg.value(metadata i8* %99, metadata !4610, metadata !DIExpression()), !dbg !4738
  %100 = inttoptr i32 %97 to i64*, !dbg !4799
  %101 = load i64, i64* %100, align 8, !dbg !4799
  store i64 %101, i64* %20, align 8, !dbg !4800
  br label %115, !dbg !4801

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4802
  %104 = add i32 %103, 7, !dbg !4802
  %105 = and i32 %104, -8, !dbg !4802
  %106 = inttoptr i32 %105 to i8*, !dbg !4802
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %107, metadata !4610, metadata !DIExpression()), !dbg !4738
  %108 = inttoptr i32 %105 to i64*, !dbg !4802
  %109 = load i64, i64* %108, align 8, !dbg !4802
  store i64 %109, i64* %20, align 8, !dbg !4803
  br label %115, !dbg !4804

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4805
  call void @llvm.dbg.value(metadata i8* %111, metadata !4610, metadata !DIExpression()), !dbg !4738
  %112 = bitcast i8* %77 to i32*, !dbg !4805
  %113 = load i32, i32* %112, align 4, !dbg !4805
  %114 = sext i32 %113 to i64, !dbg !4806
  store i64 %114, i64* %20, align 8, !dbg !4807
  br label %115, !dbg !4808

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4809
  call void @llvm.dbg.value(metadata i8* %117, metadata !4610, metadata !DIExpression()), !dbg !4738
  %118 = trunc i24 %79 to i4, !dbg !4810
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4810

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4811
  %121 = ashr exact i64 %120, 56, !dbg !4811
  store i64 %121, i64* %20, align 8, !dbg !4814
  br label %177, !dbg !4815

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4816
  %124 = ashr exact i64 %123, 48, !dbg !4816
  store i64 %124, i64* %20, align 8, !dbg !4819
  br label %177, !dbg !4820

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4821

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %127, metadata !4610, metadata !DIExpression()), !dbg !4738
  %128 = bitcast i8* %77 to i32*, !dbg !4824
  %129 = load i32, i32* %128, align 4, !dbg !4824
  %130 = zext i32 %129 to i64, !dbg !4824
  store i64 %130, i64* %20, align 8, !dbg !4826
  br label %157, !dbg !4827

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %132, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %132, metadata !4610, metadata !DIExpression()), !dbg !4738
  %133 = bitcast i8* %77 to i32*, !dbg !4828
  %134 = load i32, i32* %133, align 4, !dbg !4828
  %135 = zext i32 %134 to i64, !dbg !4828
  store i64 %135, i64* %20, align 8, !dbg !4828
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4830
  %138 = add i32 %137, 7, !dbg !4830
  %139 = and i32 %138, -8, !dbg !4830
  %140 = inttoptr i32 %139 to i8*, !dbg !4830
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %141, metadata !4610, metadata !DIExpression()), !dbg !4738
  %142 = inttoptr i32 %139 to i64*, !dbg !4830
  %143 = load i64, i64* %142, align 8, !dbg !4830
  store i64 %143, i64* %20, align 8, !dbg !4831
  br label %157, !dbg !4832

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4833
  %146 = add i32 %145, 7, !dbg !4833
  %147 = and i32 %146, -8, !dbg !4833
  %148 = inttoptr i32 %147 to i8*, !dbg !4833
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %149, metadata !4610, metadata !DIExpression()), !dbg !4738
  %150 = inttoptr i32 %147 to i64*, !dbg !4833
  %151 = load i64, i64* %150, align 8, !dbg !4833
  store i64 %151, i64* %20, align 8, !dbg !4834
  br label %157, !dbg !4835

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %153, metadata !4610, metadata !DIExpression()), !dbg !4738
  %154 = bitcast i8* %77 to i32*, !dbg !4836
  %155 = load i32, i32* %154, align 4, !dbg !4836
  %156 = zext i32 %155 to i64, !dbg !4837
  store i64 %156, i64* %20, align 8, !dbg !4838
  br label %157, !dbg !4839

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4840
  call void @llvm.dbg.value(metadata i8* %159, metadata !4610, metadata !DIExpression()), !dbg !4738
  %160 = trunc i24 %79 to i4, !dbg !4841
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4841

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4842
  store i64 %162, i64* %20, align 8, !dbg !4845
  br label %177, !dbg !4846

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4847
  store i64 %164, i64* %20, align 8, !dbg !4850
  br label %177, !dbg !4851

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4852
  %167 = add i32 %166, 7, !dbg !4852
  %168 = and i32 %167, -8, !dbg !4852
  %169 = inttoptr i32 %168 to i8*, !dbg !4852
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %170, metadata !4610, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %170, metadata !4610, metadata !DIExpression()), !dbg !4738
  %171 = inttoptr i32 %168 to double*, !dbg !4852
  %172 = load double, double* %171, align 8, !dbg !4852
  store double %172, double* %19, align 8, !dbg !4852
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4856
  call void @llvm.dbg.value(metadata i8* %174, metadata !4610, metadata !DIExpression()), !dbg !4738
  %175 = bitcast i8* %77 to i8**, !dbg !4856
  %176 = load i8*, i8** %175, align 4, !dbg !4856
  store i8* %176, i8** %18, align 8, !dbg !4859
  br label %177, !dbg !4860

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4752
  call void @llvm.dbg.value(metadata i8* %178, metadata !4610, metadata !DIExpression()), !dbg !4738
  %179 = and i24 %75, 3, !dbg !4861
  %180 = icmp eq i24 %179, 0, !dbg !4861
  br i1 %180, label %185, label %181, !dbg !4861

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %182, metadata !4687, metadata !DIExpression()), !dbg !4863
  %183 = icmp slt i32 %182, 0, !dbg !4864
  %184 = add i32 %182, %29, !dbg !4862
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4866
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4867

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %188, metadata !4691, metadata !DIExpression()), !dbg !4869
  %189 = icmp slt i32 %188, 0, !dbg !4870
  %190 = add i32 %29, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %192, metadata !4679, metadata !DIExpression()), !dbg !4752
  %193 = icmp sgt i32 %76, -1, !dbg !4873
  br i1 %193, label %194, label %196, !dbg !4875

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %195, metadata !4694, metadata !DIExpression()), !dbg !4878
  br label %241, !dbg !4879

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %197, metadata !4694, metadata !DIExpression()), !dbg !4878
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4679, metadata !DIExpression()), !dbg !4752
  %199 = load i64, i64* %20, align 8, !dbg !4882
  %200 = trunc i64 %199 to i8, !dbg !4883
  store i8 %200, i8* %10, align 1, !dbg !4884
  call void @llvm.dbg.value(metadata i8* %23, metadata !4680, metadata !DIExpression()), !dbg !4752
  br label %245, !dbg !4885

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4886
  %203 = icmp eq i24 %202, 0, !dbg !4886
  %204 = trunc i24 %75 to i8, !dbg !4888
  %205 = shl i8 %204, 1, !dbg !4888
  %206 = and i8 %205, 32, !dbg !4888
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4888
  call void @llvm.dbg.value(metadata i8 %207, metadata !4681, metadata !DIExpression()), !dbg !4752
  %208 = load i64, i64* %20, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata i64 %208, metadata !4617, metadata !DIExpression()), !dbg !4738
  %209 = icmp slt i64 %208, 0, !dbg !4890
  br i1 %209, label %210, label %212, !dbg !4892

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4681, metadata !DIExpression()), !dbg !4752
  %211 = sub nsw i64 0, %208, !dbg !4893
  store i64 %211, i64* %20, align 8, !dbg !4895
  br label %212, !dbg !4896

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4752
  call void @llvm.dbg.value(metadata i8 %213, metadata !4681, metadata !DIExpression()), !dbg !4752
  %214 = load i64, i64* %20, align 8, !dbg !4897
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4898
  call void @llvm.dbg.value(metadata i8* %215, metadata !4679, metadata !DIExpression()), !dbg !4752
  br label %216, !dbg !4899

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4900
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4901
  call void @llvm.dbg.value(metadata i8* %218, metadata !4679, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 %217, metadata !4681, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.label(metadata !4737), !dbg !4902
  %219 = icmp sgt i32 %76, -1, !dbg !4903
  br i1 %219, label %222, label %220, !dbg !4904

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4905
  br label %245, !dbg !4904

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4907
  %224 = sub i32 %22, %223, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %224, metadata !4696, metadata !DIExpression()), !dbg !4908
  %225 = load i24, i24* %15, align 8, !dbg !4909
  %226 = and i24 %225, -65, !dbg !4909
  store i24 %226, i24* %15, align 8, !dbg !4909
  %227 = icmp ugt i32 %76, %224, !dbg !4910
  br i1 %227, label %228, label %245, !dbg !4912

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4913
  store i32 %229, i32* %16, align 4, !dbg !4915
  br label %245, !dbg !4916

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4917
  %232 = icmp eq i8* %231, null, !dbg !4919
  br i1 %232, label %245, label %233, !dbg !4920

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4921
  %235 = zext i32 %234 to i64, !dbg !4921
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %236, metadata !4679, metadata !DIExpression()), !dbg !4752
  %237 = load i24, i24* %15, align 8, !dbg !4924
  %238 = or i24 %237, 1048576, !dbg !4924
  store i24 %238, i24* %15, align 8, !dbg !4924
  store i8 120, i8* %21, align 1, !dbg !4925
  br label %216, !dbg !4926

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4927
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4930
  br label %363, !dbg !4931

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4932
  call void @llvm.dbg.value(metadata i32 %242, metadata !4694, metadata !DIExpression()), !dbg !4878
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4933
  call void @llvm.dbg.value(metadata i32 -1, metadata !4678, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 %29, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8* %192, metadata !4679, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8* %243, metadata !4680, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 0, metadata !4681, metadata !DIExpression()), !dbg !4752
  %244 = icmp eq i8* %192, null, !dbg !4934
  br i1 %244, label %363, label %245, !dbg !4936, !llvm.loop !4748

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4905
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata i32 0, metadata !4700, metadata !DIExpression()), !dbg !4752
  %250 = zext i8 %249 to i32, !dbg !4937
  %251 = icmp eq i8 %249, 0, !dbg !4939
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata i32 undef, metadata !4699, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata i32 undef, metadata !4699, metadata !DIExpression()), !dbg !4752
  %252 = icmp sgt i32 %58, 0, !dbg !4940
  br i1 %252, label %253, label %302, !dbg !4941

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4905
  %255 = icmp eq i24 %254, 0, !dbg !4905
  %256 = ptrtoint i8* %248 to i32, !dbg !4942
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  %257 = ptrtoint i8* %247 to i32, !dbg !4942
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  %258 = xor i1 %251, true, !dbg !4943
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  %259 = sext i1 %258 to i32, !dbg !4943
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  %260 = lshr i24 %246, 19, !dbg !4944
  %261 = and i24 %260, 1, !dbg !4944
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4944
  %263 = zext i24 %262 to i32, !dbg !4944
  %264 = add i32 %257, %259, !dbg !4944
  %265 = add i32 %256, %263, !dbg !4944
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  %266 = and i24 %246, 4194304, !dbg !4945
  %267 = icmp eq i24 %266, 0, !dbg !4945
  %268 = load i32, i32* %16, align 4, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4699, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4752
  call void @llvm.dbg.value(metadata i32 undef, metadata !4699, metadata !DIExpression()), !dbg !4752
  %269 = load i32, i32* %17, align 8, !dbg !4948
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !4699, metadata !DIExpression()), !dbg !4752
  %271 = add i32 %264, %58, !dbg !4948
  %272 = add i32 %265, %268, !dbg !4948
  %273 = add i32 %272, %270, !dbg !4949
  %274 = sub i32 %271, %273, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %274, metadata !4677, metadata !DIExpression()), !dbg !4752
  %275 = and i24 %246, 4, !dbg !4950
  %276 = icmp eq i24 %275, 0, !dbg !4950
  br i1 %276, label %277, label %302, !dbg !4951

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4701, metadata !DIExpression()), !dbg !4952
  %278 = and i24 %246, 64, !dbg !4953
  %279 = icmp eq i24 %278, 0, !dbg !4953
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4954
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4954
  %282 = select i1 %279, i32 32, i32 48, !dbg !4954
  br i1 %280, label %287, label %283, !dbg !4954

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %284, metadata !4706, metadata !DIExpression()), !dbg !4956
  %285 = icmp slt i32 %284, 0, !dbg !4957
  %286 = add i32 %29, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4752
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %290, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i8 undef, metadata !4701, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i8 %288, metadata !4681, metadata !DIExpression()), !dbg !4752
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4959
  %292 = add i32 %291, -1, !dbg !4959
  br label %293, !dbg !4959

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4960
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %295, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %294, metadata !4677, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 %294, metadata !4677, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4752
  %296 = icmp sgt i32 %294, 0, !dbg !4961
  br i1 %296, label %297, label %302, !dbg !4959

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %298, metadata !4677, metadata !DIExpression()), !dbg !4752
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %299, metadata !4712, metadata !DIExpression()), !dbg !4964
  %300 = icmp slt i32 %299, 0, !dbg !4965
  %301 = add i32 %295, 1, !dbg !4963
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %300, label %361, label %293, !llvm.loop !4967

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4752
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4752
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %305, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %304, metadata !4677, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 %303, metadata !4681, metadata !DIExpression()), !dbg !4752
  %306 = icmp eq i8 %303, 0, !dbg !4969
  br i1 %306, label %312, label %307, !dbg !4970

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4971
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %309, metadata !4715, metadata !DIExpression()), !dbg !4973
  %310 = icmp slt i32 %309, 0, !dbg !4974
  %311 = add i32 %305, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %313, metadata !4616, metadata !DIExpression()), !dbg !4738
  %314 = lshr i24 %246, 20, !dbg !4976
  %315 = lshr i24 %246, 19, !dbg !4977
  %316 = or i24 %314, %315, !dbg !4978
  %317 = and i24 %316, 1, !dbg !4978
  %318 = icmp eq i24 %317, 0, !dbg !4978
  br i1 %318, label %323, label %319, !dbg !4979

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %320, metadata !4719, metadata !DIExpression()), !dbg !4981
  %321 = icmp slt i32 %320, 0, !dbg !4982
  %322 = add i32 %313, 1, !dbg !4980
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %324, metadata !4616, metadata !DIExpression()), !dbg !4738
  %325 = and i24 %246, 1048576, !dbg !4984
  %326 = icmp eq i24 %325, 0, !dbg !4984
  br i1 %326, label %333, label %327, !dbg !4985

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4986
  %329 = zext i8 %328 to i32, !dbg !4986
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %330, metadata !4725, metadata !DIExpression()), !dbg !4987
  %331 = icmp slt i32 %330, 0, !dbg !4988
  %332 = add i32 %324, 1, !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %334, metadata !4616, metadata !DIExpression()), !dbg !4738
  %335 = load i32, i32* %16, align 4, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %335, metadata !4700, metadata !DIExpression()), !dbg !4752
  br label %336, !dbg !4991

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4992
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %338, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %337, metadata !4700, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4752
  %339 = icmp sgt i32 %337, 0, !dbg !4993
  br i1 %339, label %340, label %345, !dbg !4991

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %341, metadata !4700, metadata !DIExpression()), !dbg !4752
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %342, metadata !4729, metadata !DIExpression()), !dbg !4996
  %343 = icmp slt i32 %342, 0, !dbg !4997
  %344 = add i32 %338, 1, !dbg !4995
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %343, label %361, label %336, !llvm.loop !4999

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %346, metadata !4732, metadata !DIExpression()), !dbg !5002
  %347 = icmp slt i32 %346, 0, !dbg !5003
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %349, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %304, metadata !4677, metadata !DIExpression()), !dbg !4752
  %350 = icmp sgt i32 %304, 0, !dbg !5005
  br i1 %350, label %351, label %363, !dbg !5006

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5006
  %353 = add i32 %352, %338, !dbg !5006
  br label %354, !dbg !5006

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %355, metadata !4677, metadata !DIExpression()), !dbg !4752
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5007
  call void @llvm.dbg.value(metadata i32 %356, metadata !4734, metadata !DIExpression()), !dbg !5008
  %357 = icmp slt i32 %356, 0, !dbg !5009
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4616, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4738
  call void @llvm.dbg.value(metadata i32 %359, metadata !4677, metadata !DIExpression()), !dbg !4752
  %360 = icmp sgt i32 %355, 1, !dbg !5005
  br i1 %360, label %354, label %363, !dbg !5006, !llvm.loop !5012

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4749
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4742
  call void @llvm.dbg.value(metadata i32 %364, metadata !4616, metadata !DIExpression()), !dbg !4738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4749
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4738
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5014
  ret i32 %366, !dbg !5014
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5015 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5019, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata i8* %1, metadata !5020, metadata !DIExpression()), !dbg !5021
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5022
  store i24 0, i24* %3, align 4, !dbg !5022
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5022
  store i8 0, i8* %4, align 1, !dbg !5022
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5022
  store i32 0, i32* %5, align 4, !dbg !5022
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5022
  store i32 0, i32* %6, align 4, !dbg !5022
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %7, metadata !5020, metadata !DIExpression()), !dbg !5021
  %8 = load i8, i8* %7, align 1, !dbg !5024
  %9 = icmp eq i8 %8, 37, !dbg !5026
  br i1 %9, label %10, label %12, !dbg !5027

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %11, metadata !5020, metadata !DIExpression()), !dbg !5021
  store i8 37, i8* %4, align 1, !dbg !5030
  br label %18, !dbg !5031

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5032
  call void @llvm.dbg.value(metadata i8* %13, metadata !5020, metadata !DIExpression()), !dbg !5021
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %14, metadata !5020, metadata !DIExpression()), !dbg !5021
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %15, metadata !5020, metadata !DIExpression()), !dbg !5021
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5035
  call void @llvm.dbg.value(metadata i8* %16, metadata !5020, metadata !DIExpression()), !dbg !5021
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %17, metadata !5020, metadata !DIExpression()), !dbg !5021
  br label %18, !dbg !5037

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5021
  ret i8* %19, !dbg !5038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5039 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5043, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %1, metadata !5044, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %2, metadata !5045, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %3, metadata !5046, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i32 0, metadata !5047, metadata !DIExpression()), !dbg !5050
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5051

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5052
  call void @llvm.dbg.value(metadata i32 %9, metadata !5047, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %8, metadata !5045, metadata !DIExpression()), !dbg !5050
  %10 = icmp ult i8* %8, %3, !dbg !5053
  br i1 %10, label %11, label %13, !dbg !5054

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5055
  br label %17, !dbg !5054

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5056

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5057
  %16 = icmp eq i8 %15, 0, !dbg !5056
  br i1 %16, label %24, label %17, !dbg !5051

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5055
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %19, metadata !5045, metadata !DIExpression()), !dbg !5050
  %20 = zext i8 %18 to i32, !dbg !5059
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %21, metadata !5048, metadata !DIExpression()), !dbg !5061
  %22 = icmp slt i32 %21, 0, !dbg !5062
  %23 = add i32 %9, 1, !dbg !5064
  call void @llvm.dbg.value(metadata i32 undef, metadata !5047, metadata !DIExpression()), !dbg !5050
  br i1 %22, label %24, label %7, !llvm.loop !5065

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5050
  ret i32 %25, !dbg !5067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5068 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5072, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5073, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %2, metadata !5074, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %3, metadata !5075, metadata !DIExpression()), !dbg !5082
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5083
  %6 = load i8, i8* %5, align 1, !dbg !5083
  %7 = zext i8 %6 to i32, !dbg !5084
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5085
  %9 = icmp eq i32 %8, 0, !dbg !5085
  call void @llvm.dbg.value(metadata i1 %9, metadata !5076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5082
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %10, metadata !5077, metadata !DIExpression()), !dbg !5082
  %11 = ptrtoint i8* %3 to i32, !dbg !5087
  %12 = ptrtoint i8* %2 to i32, !dbg !5087
  %13 = sub i32 %11, %12, !dbg !5087
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5088
  call void @llvm.dbg.value(metadata i8* %14, metadata !5079, metadata !DIExpression()), !dbg !5082
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5089

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5082
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5072, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %18, metadata !5079, metadata !DIExpression()), !dbg !5082
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5090
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %25, metadata !5080, metadata !DIExpression()), !dbg !5092
  %26 = icmp ult i32 %25, 10, !dbg !5093
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5094
  %28 = add i32 %27, %25, !dbg !5092
  %29 = trunc i32 %28 to i8, !dbg !5094
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %30, metadata !5079, metadata !DIExpression()), !dbg !5082
  store i8 %29, i8* %30, align 1, !dbg !5096
  call void @llvm.dbg.value(metadata i64 %22, metadata !5072, metadata !DIExpression()), !dbg !5082
  %31 = icmp uge i64 %19, %15, !dbg !5097
  %32 = icmp ugt i8* %30, %2, !dbg !5098
  %33 = and i1 %31, %32, !dbg !5098
  br i1 %33, label %17, label %34, !dbg !5099, !llvm.loop !5100

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5102
  %36 = load i24, i24* %35, align 4, !dbg !5102
  %37 = and i24 %36, 32, !dbg !5102
  %38 = icmp eq i24 %37, 0, !dbg !5102
  br i1 %38, label %44, label %39, !dbg !5104

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5105

40:                                               ; preds = %39
  br label %41, !dbg !5107

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5111
  store i24 %43, i24* %35, align 4, !dbg !5111
  br label %44, !dbg !5112

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5112
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5113 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5119, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i8* %1, metadata !5120, metadata !DIExpression()), !dbg !5122
  call void @llvm.dbg.value(metadata i32 %2, metadata !5121, metadata !DIExpression()), !dbg !5122
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5123
  %5 = load i24, i24* %4, align 4, !dbg !5123
  %6 = lshr i24 %5, 11, !dbg !5123
  %7 = and i24 %6, 15, !dbg !5123
  %8 = zext i24 %7 to i32, !dbg !5123
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5124

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5125
  store i32 %2, i32* %10, align 4, !dbg !5127
  br label %28, !dbg !5128

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5129
  store i8 %12, i8* %1, align 1, !dbg !5130
  br label %28, !dbg !5131

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5132
  %15 = bitcast i8* %1 to i16*, !dbg !5133
  store i16 %14, i16* %15, align 2, !dbg !5134
  br label %28, !dbg !5135

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5136
  store i32 %2, i32* %17, align 4, !dbg !5137
  br label %28, !dbg !5138

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5139
  %20 = bitcast i8* %1 to i64*, !dbg !5140
  store i64 %19, i64* %20, align 8, !dbg !5141
  br label %28, !dbg !5142

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5143
  %23 = bitcast i8* %1 to i64*, !dbg !5144
  store i64 %22, i64* %23, align 8, !dbg !5145
  br label %28, !dbg !5146

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5147
  store i32 %2, i32* %25, align 4, !dbg !5148
  br label %28, !dbg !5149

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5150
  store i32 %2, i32* %27, align 4, !dbg !5151
  br label %28, !dbg !5152

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5157, metadata !DIExpression()), !dbg !5158
  %2 = add i32 %0, -65, !dbg !5159
  %3 = icmp ult i32 %2, 26, !dbg !5160
  %4 = zext i1 %3 to i32, !dbg !5160
  ret i32 %4, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5162 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5166, metadata !DIExpression()), !dbg !5167
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5168

2:                                                ; preds = %1
  br label %4, !dbg !5169

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5171

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5172
  ret i32 %5, !dbg !5173
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5174 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5176, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8* %1, metadata !5177, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8 1, metadata !5178, metadata !DIExpression()), !dbg !5179
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5180

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5178, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8* %5, metadata !5177, metadata !DIExpression()), !dbg !5179
  %6 = load i8, i8* %5, align 1, !dbg !5181
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5183

7:                                                ; preds = %4
  br label %11, !dbg !5184

8:                                                ; preds = %4
  br label %11, !dbg !5186

9:                                                ; preds = %4
  br label %11, !dbg !5187

10:                                               ; preds = %4
  br label %11, !dbg !5188

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5189
  %14 = or i24 %13, %12, !dbg !5189
  store i24 %14, i24* %3, align 4, !dbg !5189
  call void @llvm.dbg.value(metadata i8 poison, metadata !5178, metadata !DIExpression()), !dbg !5179
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5177, metadata !DIExpression()), !dbg !5179
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5178, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8* %15, metadata !5177, metadata !DIExpression()), !dbg !5179
  %17 = load i24, i24* %3, align 4, !dbg !5190
  %18 = and i24 %17, 68, !dbg !5192
  %19 = icmp eq i24 %18, 68, !dbg !5192
  br i1 %19, label %20, label %22, !dbg !5192

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5193
  store i24 %21, i24* %3, align 4, !dbg !5193
  br label %22, !dbg !5195

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5197 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5199, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5203
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5204
  %5 = load i24, i24* %4, align 4, !dbg !5205
  %6 = or i24 %5, 128, !dbg !5205
  store i24 %6, i24* %4, align 4, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5203
  %7 = load i8, i8* %1, align 1, !dbg !5206
  %8 = icmp eq i8 %7, 42, !dbg !5208
  br i1 %8, label %9, label %12, !dbg !5209

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5210
  store i24 %10, i24* %4, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5203
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5212
  call void @llvm.dbg.value(metadata i8* %11, metadata !5200, metadata !DIExpression()), !dbg !5203
  store i8* %11, i8** %3, align 4, !dbg !5212
  br label %29, !dbg !5213

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5201, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i8** %3, metadata !5200, metadata !DIExpression(DW_OP_deref)), !dbg !5203
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5214
  call void @llvm.dbg.value(metadata i32 %13, metadata !5202, metadata !DIExpression()), !dbg !5203
  %14 = load i8*, i8** %3, align 4, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %14, metadata !5200, metadata !DIExpression()), !dbg !5203
  %15 = icmp eq i8* %14, %1, !dbg !5217
  br i1 %15, label %29, label %16, !dbg !5218

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5219
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5221
  store i32 %13, i32* %18, align 4, !dbg !5222
  %19 = lshr i32 %13, 31, !dbg !5223
  %20 = lshr i24 %17, 1, !dbg !5224
  %21 = and i24 %20, 1, !dbg !5224
  %22 = zext i24 %21 to i32, !dbg !5224
  %23 = or i32 %19, %22, !dbg !5224
  %24 = trunc i32 %23 to i24, !dbg !5224
  %25 = shl nuw nsw i24 %24, 1, !dbg !5224
  %26 = and i24 %17, -131, !dbg !5224
  %27 = or i24 %26, 128, !dbg !5224
  %28 = or i24 %25, %27, !dbg !5224
  store i24 %28, i24* %4, align 4, !dbg !5224
  br label %29, !dbg !5225

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5203
  ret i8* %30, !dbg !5226
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5227 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5229, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8* %1, metadata !5230, metadata !DIExpression()), !dbg !5232
  %4 = load i8, i8* %1, align 1, !dbg !5233
  %5 = icmp eq i8 %4, 46, !dbg !5234
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5235
  %7 = load i24, i24* %6, align 4, !dbg !5236
  %8 = select i1 %5, i24 512, i24 0, !dbg !5236
  %9 = and i24 %7, -513, !dbg !5236
  %10 = or i24 %9, %8, !dbg !5236
  store i24 %10, i24* %6, align 4, !dbg !5236
  br i1 %5, label %11, label %32, !dbg !5237

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5230, metadata !DIExpression()), !dbg !5232
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5238
  call void @llvm.dbg.value(metadata i8* %12, metadata !5230, metadata !DIExpression()), !dbg !5232
  store i8* %12, i8** %3, align 4, !dbg !5238
  %13 = load i8, i8* %12, align 1, !dbg !5239
  %14 = icmp eq i8 %13, 42, !dbg !5241
  br i1 %14, label %15, label %18, !dbg !5242

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5243
  store i24 %16, i24* %6, align 4, !dbg !5243
  call void @llvm.dbg.value(metadata i8* %12, metadata !5230, metadata !DIExpression()), !dbg !5232
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5245
  call void @llvm.dbg.value(metadata i8* %17, metadata !5230, metadata !DIExpression()), !dbg !5232
  store i8* %17, i8** %3, align 4, !dbg !5245
  br label %32, !dbg !5246

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5230, metadata !DIExpression(DW_OP_deref)), !dbg !5232
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %19, metadata !5231, metadata !DIExpression()), !dbg !5232
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5248
  store i32 %19, i32* %20, align 4, !dbg !5249
  %21 = lshr i32 %19, 31, !dbg !5250
  %22 = load i24, i24* %6, align 4, !dbg !5251
  %23 = lshr i24 %22, 1, !dbg !5251
  %24 = and i24 %23, 1, !dbg !5251
  %25 = zext i24 %24 to i32, !dbg !5251
  %26 = or i32 %21, %25, !dbg !5251
  %27 = trunc i32 %26 to i24, !dbg !5251
  %28 = shl nuw nsw i24 %27, 1, !dbg !5251
  %29 = and i24 %22, -3, !dbg !5251
  %30 = or i24 %28, %29, !dbg !5251
  store i24 %30, i24* %6, align 4, !dbg !5251
  %31 = load i8*, i8** %3, align 4, !dbg !5252
  call void @llvm.dbg.value(metadata i8* %31, metadata !5230, metadata !DIExpression()), !dbg !5232
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5232
  ret i8* %33, !dbg !5253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5254 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5256, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8* %1, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = load i8, i8* %1, align 1, !dbg !5259
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5260

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5261
  call void @llvm.dbg.value(metadata i8* %5, metadata !5257, metadata !DIExpression()), !dbg !5258
  %6 = load i8, i8* %5, align 1, !dbg !5264
  %7 = icmp eq i8 %6, 104, !dbg !5265
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %9 = load i24, i24* %8, align 4, !dbg !5266
  %10 = and i24 %9, -30721, !dbg !5266
  br i1 %7, label %11, label %14, !dbg !5267

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5268
  store i24 %12, i24* %8, align 4, !dbg !5268
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %13, metadata !5257, metadata !DIExpression()), !dbg !5258
  br label %56, !dbg !5271

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5272
  store i24 %15, i24* %8, align 4, !dbg !5272
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %17, metadata !5257, metadata !DIExpression()), !dbg !5258
  %18 = load i8, i8* %17, align 1, !dbg !5276
  %19 = icmp eq i8 %18, 108, !dbg !5277
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5278
  %21 = load i24, i24* %20, align 4, !dbg !5278
  %22 = and i24 %21, -30721, !dbg !5278
  br i1 %19, label %23, label %26, !dbg !5279

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5280
  store i24 %24, i24* %20, align 4, !dbg !5280
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5282
  call void @llvm.dbg.value(metadata i8* %25, metadata !5257, metadata !DIExpression()), !dbg !5258
  br label %56, !dbg !5283

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5284
  store i24 %27, i24* %20, align 4, !dbg !5284
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5286
  %30 = load i24, i24* %29, align 4, !dbg !5287
  %31 = and i24 %30, -30721, !dbg !5287
  %32 = or i24 %31, 10240, !dbg !5287
  store i24 %32, i24* %29, align 4, !dbg !5287
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5288
  call void @llvm.dbg.value(metadata i8* %33, metadata !5257, metadata !DIExpression()), !dbg !5258
  br label %56, !dbg !5289

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5290
  %36 = load i24, i24* %35, align 4, !dbg !5291
  %37 = and i24 %36, -30721, !dbg !5291
  %38 = or i24 %37, 12288, !dbg !5291
  store i24 %38, i24* %35, align 4, !dbg !5291
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %39, metadata !5257, metadata !DIExpression()), !dbg !5258
  br label %56, !dbg !5293

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5294
  %42 = load i24, i24* %41, align 4, !dbg !5295
  %43 = and i24 %42, -30721, !dbg !5295
  %44 = or i24 %43, 14336, !dbg !5295
  store i24 %44, i24* %41, align 4, !dbg !5295
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5296
  call void @llvm.dbg.value(metadata i8* %45, metadata !5257, metadata !DIExpression()), !dbg !5258
  br label %56, !dbg !5297

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5298
  %48 = load i24, i24* %47, align 4, !dbg !5299
  %49 = and i24 %48, -30723, !dbg !5299
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %50, metadata !5257, metadata !DIExpression()), !dbg !5258
  %51 = or i24 %49, 16386, !dbg !5301
  store i24 %51, i24* %47, align 4, !dbg !5301
  br label %56, !dbg !5302

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5303
  %54 = load i24, i24* %53, align 4, !dbg !5304
  %55 = and i24 %54, -30721, !dbg !5304
  store i24 %55, i24* %53, align 4, !dbg !5304
  br label %56, !dbg !5305

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5257, metadata !DIExpression()), !dbg !5258
  ret i8* %57, !dbg !5306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5307 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5309, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8* %1, metadata !5310, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8 0, metadata !5311, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8* %1, metadata !5310, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5314
  %3 = load i8, i8* %1, align 1, !dbg !5315
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5316
  store i8 %3, i8* %4, align 1, !dbg !5317
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5318

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5319

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5320
  %9 = load i24, i24* %8, align 4, !dbg !5320
  %10 = and i24 %9, -458753, !dbg !5320
  %11 = or i24 %10, %7, !dbg !5320
  call void @llvm.dbg.label(metadata !5312), !dbg !5321
  %12 = and i24 %9, 30720, !dbg !5322
  %13 = icmp eq i24 %12, 16384, !dbg !5322
  %14 = zext i1 %13 to i24, !dbg !5324
  %15 = or i24 %11, %14, !dbg !5324
  %16 = icmp eq i8 %3, 99, !dbg !5325
  br i1 %16, label %17, label %43, !dbg !5327

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5328
  %19 = icmp ne i24 %18, 0, !dbg !5328
  call void @llvm.dbg.value(metadata i1 %19, metadata !5311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5314
  br label %43, !dbg !5330

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5331
  %22 = load i24, i24* %21, align 4, !dbg !5332
  %23 = and i24 %22, -458753, !dbg !5332
  %24 = or i24 %23, 262144, !dbg !5332
  call void @llvm.dbg.value(metadata i8 1, metadata !5311, metadata !DIExpression()), !dbg !5314
  br label %43, !dbg !5333

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5336
  %27 = load i24, i24* %26, align 4, !dbg !5337
  %28 = and i24 %27, -458753, !dbg !5337
  %29 = or i24 %28, 196608, !dbg !5337
  %30 = and i24 %27, 30720, !dbg !5338
  %31 = icmp eq i24 %30, 16384, !dbg !5338
  br label %43, !dbg !5340

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %34 = load i24, i24* %33, align 4, !dbg !5342
  %35 = and i24 %34, -458753, !dbg !5342
  %36 = or i24 %35, 196608, !dbg !5342
  %37 = and i24 %34, 30720, !dbg !5343
  %38 = icmp ne i24 %37, 0, !dbg !5343
  br label %43, !dbg !5345

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5346
  %41 = load i24, i24* %40, align 4, !dbg !5347
  %42 = or i24 %41, 1, !dbg !5347
  br label %43, !dbg !5348

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5349
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5350
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5351
  call void @llvm.dbg.value(metadata i8* %48, metadata !5310, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8 poison, metadata !5311, metadata !DIExpression()), !dbg !5314
  %49 = lshr i24 %44, 1, !dbg !5349
  %50 = and i24 %49, 1, !dbg !5349
  %51 = zext i24 %50 to i32, !dbg !5349
  %52 = or i32 %51, %47, !dbg !5349
  %53 = trunc i32 %52 to i24, !dbg !5349
  %54 = shl nuw nsw i24 %53, 1, !dbg !5349
  %55 = and i24 %44, -3, !dbg !5349
  %56 = or i24 %54, %55, !dbg !5349
  store i24 %56, i24* %46, align 4, !dbg !5349
  ret i8* %48, !dbg !5352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5353 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5358, metadata !DIExpression()), !dbg !5361
  %2 = load i8*, i8** %0, align 4, !dbg !5362
  call void @llvm.dbg.value(metadata i8* %2, metadata !5359, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 0, metadata !5360, metadata !DIExpression()), !dbg !5361
  %3 = load i8, i8* %2, align 1, !dbg !5363
  %4 = zext i8 %3 to i32, !dbg !5364
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5365
  %6 = icmp eq i32 %5, 0, !dbg !5366
  br i1 %6, label %19, label %7, !dbg !5366

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5360, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %10, metadata !5359, metadata !DIExpression()), !dbg !5361
  %11 = mul i32 %9, 10, !dbg !5367
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5369
  call void @llvm.dbg.value(metadata i8* %12, metadata !5359, metadata !DIExpression()), !dbg !5361
  %13 = add i32 %11, -48, !dbg !5370
  %14 = add i32 %13, %8, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %14, metadata !5360, metadata !DIExpression()), !dbg !5361
  %15 = load i8, i8* %12, align 1, !dbg !5363
  %16 = zext i8 %15 to i32, !dbg !5364
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5365
  %18 = icmp eq i32 %17, 0, !dbg !5366
  br i1 %18, label %19, label %7, !dbg !5366, !llvm.loop !5372

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5361
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5361
  store i8* %20, i8** %0, align 4, !dbg !5374
  ret i32 %21, !dbg !5375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5378, metadata !DIExpression()), !dbg !5379
  %2 = add i32 %0, -48, !dbg !5380
  %3 = icmp ult i32 %2, 10, !dbg !5381
  %4 = zext i1 %3 to i32, !dbg !5381
  ret i32 %4, !dbg !5382
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5388, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata i32 %1, metadata !5389, metadata !DIExpression()), !dbg !5390
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5391, !srcloc !5393
  ret void, !dbg !5394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5395 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5397, metadata !DIExpression()), !dbg !5405
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5406
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5398, metadata !DIExpression()), !dbg !5407
  call void @llvm.va_start(i8* nonnull %3), !dbg !5408
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5409
  %5 = load i32, i32* %4, align 4, !dbg !5409
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5409
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5409
  call void @llvm.va_end(i8* nonnull %3), !dbg !5410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5411
  ret void, !dbg !5411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5412 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,256\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5876, !srcloc !5877
  ret void, !dbg !5878
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5881, metadata !DIExpression()), !dbg !5882
  tail call void @SOC_RdcInit() #24, !dbg !5883
  tail call void @SOC_ClockInit() #24, !dbg !5884
  tail call fastcc void @nxp_mcimx7_gpio_config() #24, !dbg !5885
  ret i32 0, !dbg !5886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #15 !dbg !5887 {
  tail call fastcc void @RDC_SetDomainID() #24, !dbg !5888
  ret void, !dbg !5889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5890 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #25, !dbg !5891
  tail call fastcc void @CCM_EnableRoot() #24, !dbg !5892
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #24, !dbg !5893
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #24, !dbg !5894
  tail call fastcc void @WDOG_DisablePowerdown() #24, !dbg !5895
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #24, !dbg !5896
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #24, !dbg !5897
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #24, !dbg !5898
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #24, !dbg !5899
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #24, !dbg !5900
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #24, !dbg !5901
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #24, !dbg !5902
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #24, !dbg !5903
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #24, !dbg !5904
  ret void, !dbg !5905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #15 !dbg !5906 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #24, !dbg !5907
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #24, !dbg !5908
  ret void, !dbg !5909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5910 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5915, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i32 %0, metadata !5916, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i8 %1, metadata !5917, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i8 0, metadata !5918, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i8 0, metadata !5919, metadata !DIExpression()), !dbg !5920
  %3 = zext i8 %1 to i32, !dbg !5921
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5922
  store volatile i32 %3, i32* %4, align 4, !dbg !5923
  ret void, !dbg !5924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5929, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata i32 %0, metadata !5930, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata i32 %1, metadata !5931, metadata !DIExpression()), !dbg !5932
  %3 = inttoptr i32 %0 to i32*, !dbg !5933
  store volatile i32 %1, i32* %3, align 4, !dbg !5934
  ret void, !dbg !5935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #15 !dbg !5936 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5940, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5941, metadata !DIExpression()), !dbg !5942
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5943
  ret void, !dbg !5944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #15 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5950, metadata !DIExpression()), !dbg !5951
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5952
  %2 = and i16 %1, -2, !dbg !5952
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5952
  ret void, !dbg !5953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #15 !dbg !5954 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5958, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata i32 1, metadata !5959, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata i32 1, metadata !5960, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata i8 0, metadata !5961, metadata !DIExpression()), !dbg !5962
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5963
  ret void, !dbg !5964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6014, metadata !DIExpression()), !dbg !6016
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6015, metadata !DIExpression()), !dbg !6016
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6017
  ret void, !dbg !6018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6019 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6036, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6037, metadata !DIExpression()), !dbg !6039
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6040
  %4 = load i32, i32* %3, align 4, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %4, metadata !6038, metadata !DIExpression()), !dbg !6039
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6041
  ret void, !dbg !6042
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !6043 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6047, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i8* %0, metadata !6048, metadata !DIExpression()), !dbg !6050
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6051
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6051
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6049, metadata !DIExpression()), !dbg !6052
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6052
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6053
  %5 = bitcast i8* %4 to i32*, !dbg !6053
  %6 = load i32, i32* %5, align 4, !dbg !6053
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6054
  store i32 %6, i32* %7, align 4, !dbg !6055
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6056
  unreachable, !dbg !6057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6063, metadata !DIExpression()), !dbg !6064
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6065
  ret void, !dbg !6066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6071, metadata !DIExpression()), !dbg !6072
  %2 = icmp sgt i32 %0, -1, !dbg !6073
  br i1 %2, label %3, label %8, !dbg !6075

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6076, !srcloc !6078
  %4 = and i32 %0, 31, !dbg !6079
  %5 = shl nuw i32 1, %4, !dbg !6080
  %6 = lshr i32 %0, 5, !dbg !6081
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6082
  store volatile i32 %5, i32* %7, align 4, !dbg !6083
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6084, !srcloc !6085
  br label %8, !dbg !6086

8:                                                ; preds = %3, %1
  ret void, !dbg !6087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6090, metadata !DIExpression()), !dbg !6091
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6092
  ret void, !dbg !6093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6096, metadata !DIExpression()), !dbg !6097
  %2 = icmp sgt i32 %0, -1, !dbg !6098
  br i1 %2, label %3, label %8, !dbg !6100

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6101
  %5 = shl nuw i32 1, %4, !dbg !6103
  %6 = lshr i32 %0, 5, !dbg !6104
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6105
  store volatile i32 %5, i32* %7, align 4, !dbg !6106
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6107, !srcloc !6111
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6112, !srcloc !6115
  br label %8, !dbg !6116

8:                                                ; preds = %3, %1
  ret void, !dbg !6117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6122, metadata !DIExpression()), !dbg !6123
  %2 = lshr i32 %0, 5, !dbg !6124
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6125
  %4 = load volatile i32, i32* %3, align 4, !dbg !6125
  %5 = and i32 %0, 31, !dbg !6126
  %6 = shl nuw i32 1, %5, !dbg !6126
  %7 = and i32 %4, %6, !dbg !6127
  ret i32 %7, !dbg !6128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6133, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %1, metadata !6134, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %2, metadata !6135, metadata !DIExpression()), !dbg !6136
  %4 = add i32 %1, 1, !dbg !6137
  call void @llvm.dbg.value(metadata i32 %4, metadata !6134, metadata !DIExpression()), !dbg !6136
  %5 = icmp ult i32 %4, 16, !dbg !6140
  br i1 %5, label %7, label %6, !dbg !6143

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 94) #25, !dbg !6144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.40, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 94) #25, !dbg !6144
  unreachable, !dbg !6144

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6146
  ret void, !dbg !6147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6152, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata i32 %1, metadata !6153, metadata !DIExpression()), !dbg !6154
  %3 = trunc i32 %1 to i8, !dbg !6155
  %4 = shl i8 %3, 4, !dbg !6155
  %5 = and i32 %0, 15, !dbg !6157
  %6 = add nsw i32 %5, -4, !dbg !6157
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6157
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6157
  %9 = icmp slt i32 %0, 0, !dbg !6157
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6157
  store volatile i8 %4, i8* %10, align 1, !dbg !6155
  ret void, !dbg !6158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6161, metadata !DIExpression()), !dbg !6162
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6163
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6165 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6167
  tail call void @z_arm_int_exit() #25, !dbg !6168
  ret void, !dbg !6169
}

; Function Attrs: optsize
declare !dbg !6170 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6171 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !6173 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6175
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6176
  tail call void @z_bss_zero() #25, !dbg !6177
  tail call void @z_data_copy() #25, !dbg !6178
  tail call void @z_arm_interrupt_init() #25, !dbg !6179
  tail call void @z_cstart() #27, !dbg !6180
  unreachable, !dbg !6180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6181 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6182
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6183, !srcloc !6186
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6187, !srcloc !6190
  ret void, !dbg !6191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6192 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6193
  %2 = and i32 %1, -15728641, !dbg !6193
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6193
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6194, !srcloc !6201
  call void @llvm.dbg.value(metadata i32 %3, metadata !6199, metadata !DIExpression()) #23, !dbg !6202
  %4 = and i32 %3, -5, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %4, metadata !6204, metadata !DIExpression()) #23, !dbg !6209
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6213, !srcloc !6190
  ret void, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6219, metadata !DIExpression()), !dbg !6220
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6221
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !6222
  store i32 %0, i32* %3, align 8, !dbg !6223
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6224
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !6225
  store i32 %4, i32* %5, align 4, !dbg !6226
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6227
  %7 = or i32 %6, 268435456, !dbg !6227
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6227
  call void @llvm.dbg.value(metadata i32 0, metadata !6228, metadata !DIExpression()) #23, !dbg !6232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6234, !srcloc !6235
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6236
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !6237
  %10 = load i32, i32* %9, align 4, !dbg !6237
  ret i32 %10, !dbg !6238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !6239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6345, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6346, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %2, metadata !6347, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6348, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %4, metadata !6349, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %5, metadata !6350, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %6, metadata !6351, metadata !DIExpression()), !dbg !6353
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6354
  call void @llvm.dbg.value(metadata i8* %8, metadata !6352, metadata !DIExpression()), !dbg !6353
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6355
  %10 = bitcast i8* %9 to i32*, !dbg !6355
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6356
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6357
  %12 = bitcast i8* %8 to i32*, !dbg !6358
  store i32 %11, i32* %12, align 4, !dbg !6359
  %13 = ptrtoint i8* %4 to i32, !dbg !6360
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6361
  %15 = bitcast i8* %14 to i32*, !dbg !6361
  store i32 %13, i32* %15, align 4, !dbg !6362
  %16 = ptrtoint i8* %5 to i32, !dbg !6363
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6364
  %18 = bitcast i8* %17 to i32*, !dbg !6364
  store i32 %16, i32* %18, align 4, !dbg !6365
  %19 = ptrtoint i8* %6 to i32, !dbg !6366
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6367
  %21 = bitcast i8* %20 to i32*, !dbg !6367
  store i32 %19, i32* %21, align 4, !dbg !6368
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6369
  %23 = bitcast i8* %22 to i32*, !dbg !6369
  store i32 16777216, i32* %23, align 4, !dbg !6370
  %24 = ptrtoint i8* %8 to i32, !dbg !6371
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6372
  store i32 %24, i32* %25, align 8, !dbg !6373
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !6374
  store i32 0, i32* %26, align 8, !dbg !6375
  ret void, !dbg !6376
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !6377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6381, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i8* %1, metadata !6382, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6383, metadata !DIExpression()), !dbg !6384
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6385
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6386, !srcloc !6387
  unreachable, !dbg !6388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6389 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i32 %1, metadata !6408, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i32 %2, metadata !6409, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6410, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i32 0, metadata !6411, metadata !DIExpression()), !dbg !6417
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6418
  call void @llvm.dbg.value(metadata i32 %8, metadata !6412, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6417
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6419
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6419
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6420
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6420
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6416, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 0, metadata !6422, metadata !DIExpression()) #23, !dbg !6425
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6427, !srcloc !6428
  call void @llvm.dbg.value(metadata i8* %6, metadata !6414, metadata !DIExpression(DW_OP_deref)), !dbg !6417
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6429
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6415, metadata !DIExpression()), !dbg !6417
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6430
  br i1 %11, label %12, label %13, !dbg !6433

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.46, i32 0, i32 0)) #25, !dbg !6434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6434
  unreachable, !dbg !6434

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6436
  call void @llvm.dbg.value(metadata i32 %14, metadata !6412, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata i8* %5, metadata !6413, metadata !DIExpression(DW_OP_deref)), !dbg !6417
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %15, metadata !6411, metadata !DIExpression()), !dbg !6417
  %16 = load i8, i8* %5, align 1, !dbg !6438, !range !6440
  call void @llvm.dbg.value(metadata i8 %16, metadata !6413, metadata !DIExpression()), !dbg !6417
  %17 = icmp eq i8 %16, 0, !dbg !6438
  br i1 %17, label %18, label %35, !dbg !6441

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6442
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6443
  %21 = load i8, i8* %6, align 1, !dbg !6444, !range !6440
  call void @llvm.dbg.value(metadata i8 %21, metadata !6414, metadata !DIExpression()), !dbg !6417
  %22 = icmp eq i8 %21, 0, !dbg !6444
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6446
  %24 = load i32, i32* %23, align 4, !dbg !6446
  br i1 %22, label %30, label %25, !dbg !6447

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6448
  %27 = icmp eq i32 %26, 0, !dbg !6451
  br i1 %27, label %28, label %34, !dbg !6452

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6453
  br label %32, !dbg !6455

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6456
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6446
  br label %34, !dbg !6458

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6458
  br label %35, !dbg !6459

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6459
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6459
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6459
  ret void, !dbg !6459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #6 !dbg !6460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %1, metadata !6466, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %2, metadata !6467, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %3, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8 0, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i8 0, i8* %3, align 1, !dbg !6472
  %5 = icmp ult i32 %2, -16777216, !dbg !6473
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6475
  br i1 %8, label %16, label %9, !dbg !6475

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6476
  %11 = icmp eq i32 %10, 0, !dbg !6476
  br i1 %11, label %12, label %13, !dbg !6478

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i8 1, i8* %3, align 1, !dbg !6481
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6470, metadata !DIExpression()), !dbg !6471
  br label %16, !dbg !6484

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6471
  ret %struct.__esf* %17, !dbg !6485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6486 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6490, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i32 %1, metadata !6491, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i8* %2, metadata !6492, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i32 0, metadata !6493, metadata !DIExpression()), !dbg !6494
  store i8 0, i8* %2, align 1, !dbg !6495
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6496

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %5, metadata !6493, metadata !DIExpression()), !dbg !6494
  br label %10, !dbg !6499

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6500
  call void @llvm.dbg.value(metadata i32 0, metadata !6493, metadata !DIExpression()), !dbg !6494
  br label %10, !dbg !6501

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6502
  call void @llvm.dbg.value(metadata i32 0, metadata !6493, metadata !DIExpression()), !dbg !6494
  br label %10, !dbg !6503

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6504
  call void @llvm.dbg.value(metadata i32 0, metadata !6493, metadata !DIExpression()), !dbg !6494
  br label %10, !dbg !6505

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6506
  br label %10, !dbg !6507

10:                                               ; preds = %4, %6, %7, %8, %9, %3
  %11 = phi i32 [ 0, %3 ], [ %5, %4 ], [ 0, %6 ], [ 0, %7 ], [ 0, %8 ], [ 0, %9 ]
  ret i32 %11, !dbg !6508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6509 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6513, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i8* %1, metadata !6514, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  store i8 0, i8* %1, align 1, !dbg !6517
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6518
  %4 = and i32 %3, 2, !dbg !6520
  %5 = icmp eq i32 %4, 0, !dbg !6521
  br i1 %5, label %6, label %34, !dbg !6522

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6523
  %8 = icmp sgt i32 %7, -1, !dbg !6525
  br i1 %8, label %9, label %34, !dbg !6526

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6527
  %11 = and i32 %10, 1073741824, !dbg !6529
  %12 = icmp eq i32 %11, 0, !dbg !6530
  br i1 %12, label %33, label %13, !dbg !6531

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6532
  br i1 %14, label %15, label %18, !dbg !6535

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6536
  %17 = load i32, i32* %16, align 4, !dbg !6536
  call void @llvm.dbg.value(metadata i32 %17, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %34, !dbg !6538

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %20 = and i32 %19, 255, !dbg !6541
  %21 = icmp eq i32 %20, 0, !dbg !6542
  br i1 %21, label %23, label %22, !dbg !6543

22:                                               ; preds = %18
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6544
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %34, !dbg !6546

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6547
  %25 = and i32 %24, 65280, !dbg !6549
  %26 = icmp eq i32 %25, 0, !dbg !6550
  br i1 %26, label %28, label %27, !dbg !6551

27:                                               ; preds = %23
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6552
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %34, !dbg !6554

28:                                               ; preds = %23
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6555
  %30 = icmp ult i32 %29, 65536, !dbg !6557
  br i1 %30, label %32, label %31, !dbg !6558

31:                                               ; preds = %28
  tail call fastcc void @usage_fault() #24, !dbg !6559
  call void @llvm.dbg.value(metadata i32 0, metadata !6515, metadata !DIExpression()), !dbg !6516
  br label %34

32:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 755) #25, !dbg !6561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.50, i32 0, i32 0)) #25, !dbg !6561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 755) #25, !dbg !6561
  unreachable, !dbg !6561

33:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 760) #25, !dbg !6566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.51, i32 0, i32 0)) #25, !dbg !6566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 760) #25, !dbg !6566
  unreachable, !dbg !6566

34:                                               ; preds = %6, %15, %27, %31, %22, %2
  %35 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], !dbg !6516
  call void @llvm.dbg.value(metadata i32 %35, metadata !6515, metadata !DIExpression()), !dbg !6516
  ret i32 %35, !dbg !6571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6572 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6574, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i32 %0, metadata !6575, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %1, metadata !6576, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i32 0, metadata !6577, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i32 -22, metadata !6578, metadata !DIExpression()), !dbg !6582
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6583
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6585
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6587
  %6 = and i32 %5, 2, !dbg !6588
  %7 = icmp eq i32 %6, 0, !dbg !6589
  br i1 %7, label %18, label %8, !dbg !6590

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %9, metadata !6579, metadata !DIExpression()), !dbg !6592
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6593
  %11 = and i32 %10, 128, !dbg !6595
  %12 = icmp eq i32 %11, 0, !dbg !6596
  %13 = icmp eq i32 %0, 0
  %14 = or i1 %13, %12, !dbg !6597
  call void @llvm.dbg.value(metadata i32 %9, metadata !6578, metadata !DIExpression()), !dbg !6582
  br i1 %14, label %18, label %15, !dbg !6597

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6598
  %17 = and i32 %16, -129, !dbg !6598
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6598
  br label %18, !dbg !6602

18:                                               ; preds = %8, %15, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !6578, metadata !DIExpression()), !dbg !6582
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6603
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6605
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6607
  %22 = and i32 %21, 16, !dbg !6609
  %23 = icmp eq i32 %22, 0, !dbg !6609
  br i1 %23, label %24, label %28, !dbg !6610

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6611
  %26 = and i32 %25, 2, !dbg !6612
  %27 = icmp eq i32 %26, 0, !dbg !6612
  br i1 %27, label %33, label %28, !dbg !6613

28:                                               ; preds = %24, %18
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6614
  %30 = and i32 %29, 16, !dbg !6614
  %31 = icmp eq i32 %30, 0, !dbg !6614
  br i1 %31, label %33, label %32, !dbg !6618

32:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 350) #25, !dbg !6619
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.8.48, i32 0, i32 0)) #25, !dbg !6619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 350) #25, !dbg !6619
  unreachable, !dbg !6619

33:                                               ; preds = %28, %24
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6621
  %35 = and i32 %34, 32, !dbg !6623
  %36 = icmp eq i32 %35, 0, !dbg !6624
  br i1 %36, label %40, label %37, !dbg !6625

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6626
  %39 = and i32 %38, -8193, !dbg !6626
  store volatile i32 %39, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6626
  br label %40, !dbg !6628

40:                                               ; preds = %37, %33
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6629
  %42 = or i32 %41, 255, !dbg !6629
  store volatile i32 %42, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6629
  store i8 0, i8* %1, align 1, !dbg !6630
  ret void, !dbg !6631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6632 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6636, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %0, metadata !6637, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8* %1, metadata !6638, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 0, metadata !6639, metadata !DIExpression()), !dbg !6643
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6644
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6646
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6648
  %6 = and i32 %5, 512, !dbg !6649
  %7 = icmp eq i32 %6, 0, !dbg !6649
  br i1 %7, label %18, label %8, !dbg !6650

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %9, metadata !6640, metadata !DIExpression()), !dbg !6652
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6653
  %11 = and i32 %10, 32768, !dbg !6655
  %12 = icmp ne i32 %11, 0, !dbg !6656
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6657
  br i1 %14, label %15, label %18, !dbg !6657

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6658
  %17 = and i32 %16, -32769, !dbg !6658
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6658
  br label %18, !dbg !6662

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6663
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6665
  %21 = and i32 %20, 256, !dbg !6667
  %22 = icmp eq i32 %21, 0, !dbg !6668
  br i1 %22, label %23, label %25, !dbg !6669

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6670
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  %27 = or i32 %26, 65280, !dbg !6672
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6672
  store i8 0, i8* %1, align 1, !dbg !6673
  ret void, !dbg !6674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6675 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 0, metadata !6682, metadata !DIExpression()), !dbg !6683
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6684
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6688
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6690
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6692
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6694
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  %8 = or i32 %7, -65536, !dbg !6696
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  ret void, !dbg !6697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !6698 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6702, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i8* %0, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i8 0, i8* %0, align 1, !dbg !6705
  ret void, !dbg !6706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6707 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6711, metadata !DIExpression()), !dbg !6714
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6715
  %3 = load i32, i32* %2, align 4, !dbg !6715
  %4 = inttoptr i32 %3 to i16*, !dbg !6716
  call void @llvm.dbg.value(metadata i16* %4, metadata !6712, metadata !DIExpression()), !dbg !6714
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6717
  %6 = or i32 %5, 256, !dbg !6717
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6717
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6718, !srcloc !6721
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6722, !srcloc !6725
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6726
  %8 = load i16, i16* %7, align 2, !dbg !6727
  call void @llvm.dbg.value(metadata i16 %8, metadata !6713, metadata !DIExpression()), !dbg !6714
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6728
  %10 = and i32 %9, -257, !dbg !6728
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6728
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6729, !srcloc !6721
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6731, !srcloc !6725
  %11 = icmp eq i16 %8, -8446, !dbg !6733
  ret i1 %11, !dbg !6735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6736 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6737
  %2 = or i32 %1, 16, !dbg !6737
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6737
  ret void, !dbg !6738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6739 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %1, !dbg !6744

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6742, metadata !DIExpression()), !dbg !6743
  tail call fastcc void @__NVIC_SetPriority.54(i32 noundef %2) #24, !dbg !6746
  %3 = add nuw nsw i32 %2, 1, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %3, metadata !6742, metadata !DIExpression()), !dbg !6743
  %4 = icmp eq i32 %3, 127, !dbg !6750
  br i1 %4, label %5, label %1, !dbg !6744, !llvm.loop !6751

5:                                                ; preds = %1
  ret void, !dbg !6753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.54(i32 noundef %0) unnamed_addr #15 !dbg !6754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6756, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 1, metadata !6757, metadata !DIExpression()), !dbg !6758
  %2 = and i32 %0, 15, !dbg !6759
  %3 = add nsw i32 %2, -4, !dbg !6759
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6759
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6759
  %6 = icmp slt i32 %0, 0, !dbg !6759
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6759
  store volatile i8 16, i8* %7, align 1, !dbg !6760
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6865, metadata !DIExpression()), !dbg !6866
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6867
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6869
  br i1 %3, label %4, label %12, !dbg !6870

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6871, !srcloc !6883
  call void @llvm.dbg.value(metadata i32 %5, metadata !6874, metadata !DIExpression()) #23, !dbg !6884
  %6 = icmp eq i32 %5, 0, !dbg !6885
  br i1 %6, label %12, label %7, !dbg !6886

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6887
  %9 = or i32 %8, 268435456, !dbg !6887
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6887
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6889
  %11 = and i32 %10, -32769, !dbg !6889
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6889
  br label %12, !dbg !6890

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !6891
  ret void, !dbg !6892
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6900, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i8* %1, metadata !6901, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i8* %0, metadata !6902, metadata !DIExpression()), !dbg !6903
  %3 = load i8, i8* %1, align 1, !dbg !6904
  %4 = icmp eq i8 %3, 0, !dbg !6905
  br i1 %4, label %13, label %5, !dbg !6906

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6900, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i8* %8, metadata !6901, metadata !DIExpression()), !dbg !6903
  store i8 %6, i8* %7, align 1, !dbg !6907
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6909
  call void @llvm.dbg.value(metadata i8* %9, metadata !6900, metadata !DIExpression()), !dbg !6903
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6910
  call void @llvm.dbg.value(metadata i8* %10, metadata !6901, metadata !DIExpression()), !dbg !6903
  %11 = load i8, i8* %10, align 1, !dbg !6904
  %12 = icmp eq i8 %11, 0, !dbg !6905
  br i1 %12, label %13, label %5, !dbg !6906, !llvm.loop !6911

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6913
  ret i8* %0, !dbg !6914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6919, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %1, metadata !6920, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 %2, metadata !6921, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %0, metadata !6922, metadata !DIExpression()), !dbg !6923
  %4 = icmp eq i32 %2, 0, !dbg !6924
  br i1 %4, label %22, label %5, !dbg !6925

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6919, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 %7, metadata !6921, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %8, metadata !6920, metadata !DIExpression()), !dbg !6923
  %9 = load i8, i8* %8, align 1, !dbg !6926
  %10 = icmp eq i8 %9, 0, !dbg !6927
  br i1 %10, label %16, label %11, !dbg !6928

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6929
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6931
  call void @llvm.dbg.value(metadata i8* %12, metadata !6920, metadata !DIExpression()), !dbg !6923
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6932
  call void @llvm.dbg.value(metadata i8* %13, metadata !6919, metadata !DIExpression()), !dbg !6923
  %14 = add i32 %7, -1, !dbg !6933
  call void @llvm.dbg.value(metadata i32 %14, metadata !6921, metadata !DIExpression()), !dbg !6923
  %15 = icmp eq i32 %14, 0, !dbg !6924
  br i1 %15, label %22, label %5, !dbg !6925, !llvm.loop !6934

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6919, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 %18, metadata !6921, metadata !DIExpression()), !dbg !6923
  store i8 0, i8* %17, align 1, !dbg !6936
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6938
  call void @llvm.dbg.value(metadata i8* %19, metadata !6919, metadata !DIExpression()), !dbg !6923
  %20 = add i32 %18, -1, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %20, metadata !6921, metadata !DIExpression()), !dbg !6923
  %21 = icmp eq i32 %20, 0, !dbg !6940
  br i1 %21, label %22, label %16, !dbg !6941, !llvm.loop !6942

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6949, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 %1, metadata !6950, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 %1, metadata !6951, metadata !DIExpression()), !dbg !6952
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6953

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6949, metadata !DIExpression()), !dbg !6952
  %6 = load i8, i8* %5, align 1, !dbg !6954
  %7 = icmp eq i8 %6, %3, !dbg !6955
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6956
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6957
  call void @llvm.dbg.value(metadata i8* %10, metadata !6949, metadata !DIExpression()), !dbg !6952
  br i1 %9, label %11, label %4, !dbg !6956, !llvm.loop !6959

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6961
  ret i8* %12, !dbg !6962
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6963 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6965, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 %1, metadata !6966, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* null, metadata !6967, metadata !DIExpression()), !dbg !6968
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6969

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6968
  call void @llvm.dbg.value(metadata i8* %6, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %5, metadata !6965, metadata !DIExpression()), !dbg !6968
  %7 = load i8, i8* %5, align 1, !dbg !6970
  %8 = icmp eq i8 %7, %3, !dbg !6973
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6974
  call void @llvm.dbg.value(metadata i8* %9, metadata !6967, metadata !DIExpression()), !dbg !6968
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6975
  call void @llvm.dbg.value(metadata i8* %10, metadata !6965, metadata !DIExpression()), !dbg !6968
  %11 = icmp eq i8 %7, 0, !dbg !6976
  br i1 %11, label %12, label %4, !dbg !6976, !llvm.loop !6977

12:                                               ; preds = %4
  ret i8* %9, !dbg !6979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #17 !dbg !6980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6984, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.value(metadata i32 0, metadata !6985, metadata !DIExpression()), !dbg !6986
  %2 = load i8, i8* %0, align 1, !dbg !6987
  %3 = icmp eq i8 %2, 0, !dbg !6988
  br i1 %3, label %11, label %4, !dbg !6989

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6985, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.value(metadata i8* %6, metadata !6984, metadata !DIExpression()), !dbg !6986
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6990
  call void @llvm.dbg.value(metadata i8* %7, metadata !6984, metadata !DIExpression()), !dbg !6986
  %8 = add i32 %5, 1, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %8, metadata !6985, metadata !DIExpression()), !dbg !6986
  %9 = load i8, i8* %7, align 1, !dbg !6987
  %10 = icmp eq i8 %9, 0, !dbg !6988
  br i1 %10, label %11, label %4, !dbg !6989, !llvm.loop !6993

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6986
  ret i32 %12, !dbg !6995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #17 !dbg !6996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7000, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i32 %1, metadata !7001, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i32 0, metadata !7002, metadata !DIExpression()), !dbg !7003
  %3 = load i8, i8* %0, align 1, !dbg !7004
  %4 = icmp ne i8 %3, 0, !dbg !7005
  %5 = icmp ne i32 %1, 0, !dbg !7006
  %6 = and i1 %4, %5, !dbg !7006
  br i1 %6, label %7, label %16, !dbg !7007

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7002, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i8* %9, metadata !7000, metadata !DIExpression()), !dbg !7003
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7008
  call void @llvm.dbg.value(metadata i8* %10, metadata !7000, metadata !DIExpression()), !dbg !7003
  %11 = add nuw i32 %8, 1, !dbg !7010
  call void @llvm.dbg.value(metadata i32 %11, metadata !7002, metadata !DIExpression()), !dbg !7003
  %12 = load i8, i8* %10, align 1, !dbg !7004
  %13 = icmp ne i8 %12, 0, !dbg !7005
  %14 = icmp ult i32 %11, %1, !dbg !7006
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7006
  br i1 %15, label %7, label %16, !dbg !7007, !llvm.loop !7011

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7003
  ret i32 %17, !dbg !7013
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !7014 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7018, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i8* %1, metadata !7019, metadata !DIExpression()), !dbg !7020
  %3 = load i8, i8* %0, align 1, !dbg !7021
  %4 = load i8, i8* %1, align 1, !dbg !7022
  %5 = icmp ne i8 %3, %4, !dbg !7023
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7024
  br i1 %7, label %18, label %8, !dbg !7024

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7019, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i8* %10, metadata !7018, metadata !DIExpression()), !dbg !7020
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7025
  call void @llvm.dbg.value(metadata i8* %11, metadata !7018, metadata !DIExpression()), !dbg !7020
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7027
  call void @llvm.dbg.value(metadata i8* %12, metadata !7019, metadata !DIExpression()), !dbg !7020
  %13 = load i8, i8* %11, align 1, !dbg !7021
  %14 = load i8, i8* %12, align 1, !dbg !7022
  %15 = icmp ne i8 %13, %14, !dbg !7023
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7024
  br i1 %17, label %18, label %8, !dbg !7024, !llvm.loop !7028

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7021
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7022
  %21 = zext i8 %19 to i32, !dbg !7031
  %22 = zext i8 %20 to i32, !dbg !7032
  %23 = sub nsw i32 %21, %22, !dbg !7033
  ret i32 %23, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7039, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %1, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %2, metadata !7041, metadata !DIExpression()), !dbg !7042
  %4 = icmp eq i32 %2, 0, !dbg !7043
  br i1 %4, label %23, label %5, !dbg !7043

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7041, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %7, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %8, metadata !7039, metadata !DIExpression()), !dbg !7042
  %9 = load i8, i8* %8, align 1, !dbg !7044
  %10 = load i8, i8* %7, align 1, !dbg !7045
  %11 = icmp ne i8 %9, %10, !dbg !7046
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7047
  br i1 %13, label %19, label %14, !dbg !7047

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7048
  call void @llvm.dbg.value(metadata i8* %15, metadata !7039, metadata !DIExpression()), !dbg !7042
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7050
  call void @llvm.dbg.value(metadata i8* %16, metadata !7040, metadata !DIExpression()), !dbg !7042
  %17 = add i32 %6, -1, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %17, metadata !7041, metadata !DIExpression()), !dbg !7042
  %18 = icmp eq i32 %17, 0, !dbg !7043
  br i1 %18, label %23, label %5, !dbg !7043, !llvm.loop !7052

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7055
  %21 = zext i8 %10 to i32, !dbg !7056
  %22 = sub nsw i32 %20, %21, !dbg !7057
  br label %23, !dbg !7058

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7058
  ret i32 %24, !dbg !7059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7065, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i8* %1, metadata !7066, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i8** %2, metadata !7067, metadata !DIExpression()), !dbg !7070
  %4 = icmp eq i8* %0, null, !dbg !7071
  br i1 %4, label %5, label %7, !dbg !7071

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7072
  br label %7, !dbg !7071

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7071
  call void @llvm.dbg.value(metadata i8* %8, metadata !7068, metadata !DIExpression()), !dbg !7070
  %9 = load i8, i8* %8, align 1, !dbg !7073
  %10 = icmp eq i8 %9, 0, !dbg !7073
  br i1 %10, label %33, label %11, !dbg !7074

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7068, metadata !DIExpression()), !dbg !7070
  %14 = zext i8 %12 to i32, !dbg !7073
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7075
  %16 = icmp eq i8* %15, null, !dbg !7074
  br i1 %16, label %21, label %17, !dbg !7076

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7077
  call void @llvm.dbg.value(metadata i8* %18, metadata !7068, metadata !DIExpression()), !dbg !7070
  %19 = load i8, i8* %18, align 1, !dbg !7073
  %20 = icmp eq i8 %19, 0, !dbg !7073
  br i1 %20, label %33, label %11, !dbg !7074, !llvm.loop !7079

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7069, metadata !DIExpression()), !dbg !7070
  %24 = zext i8 %22 to i32, !dbg !7081
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7082
  %26 = icmp eq i8* %25, null, !dbg !7083
  br i1 %26, label %27, label %31, !dbg !7084

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7085
  call void @llvm.dbg.value(metadata i8* %28, metadata !7069, metadata !DIExpression()), !dbg !7070
  %29 = load i8, i8* %28, align 1, !dbg !7081
  %30 = icmp eq i8 %29, 0, !dbg !7081
  br i1 %30, label %33, label %21, !dbg !7087, !llvm.loop !7088

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7090
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7093
  br label %33, !dbg !7094

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7070
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7070
  store i8* %34, i8** %2, align 4, !dbg !7070
  ret i8* %35, !dbg !7095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8* %1, metadata !7099, metadata !DIExpression()), !dbg !7100
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7101
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7102
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7103
  ret i8* %0, !dbg !7104
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7105 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7107, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %1, metadata !7108, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %2, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %0, metadata !7110, metadata !DIExpression()), !dbg !7112
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7113
  call void @llvm.dbg.value(metadata i32 %4, metadata !7111, metadata !DIExpression()), !dbg !7112
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7114
  call void @llvm.dbg.value(metadata i8* %5, metadata !7107, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %1, metadata !7108, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %2, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %2, metadata !7109, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7112
  %6 = icmp eq i32 %2, 0, !dbg !7115
  br i1 %6, label %18, label %7, !dbg !7116

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7117
  call void @llvm.dbg.value(metadata i8* %9, metadata !7107, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %10, metadata !7108, metadata !DIExpression()), !dbg !7112
  %12 = load i8, i8* %10, align 1, !dbg !7118
  %13 = icmp eq i8 %12, 0, !dbg !7119
  br i1 %13, label %18, label %14, !dbg !7120

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7121
  call void @llvm.dbg.value(metadata i8* %15, metadata !7108, metadata !DIExpression()), !dbg !7112
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7123
  call void @llvm.dbg.value(metadata i8* %16, metadata !7107, metadata !DIExpression()), !dbg !7112
  store i8 %12, i8* %9, align 1, !dbg !7124
  call void @llvm.dbg.value(metadata i32 %11, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %11, metadata !7109, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7112
  %17 = icmp eq i32 %11, 0, !dbg !7115
  br i1 %17, label %18, label %7, !dbg !7116, !llvm.loop !7125

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7112
  store i8 0, i8* %19, align 1, !dbg !7127
  ret i8* %0, !dbg !7128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7133, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %1, metadata !7134, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i32 %2, metadata !7135, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %0, metadata !7136, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %1, metadata !7137, metadata !DIExpression()), !dbg !7138
  %4 = icmp eq i32 %2, 0, !dbg !7139
  br i1 %4, label %31, label %5, !dbg !7141

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %0, metadata !7136, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i32 %2, metadata !7135, metadata !DIExpression()), !dbg !7138
  %6 = add i32 %2, -1, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %6, metadata !7135, metadata !DIExpression()), !dbg !7138
  %7 = icmp eq i32 %6, 0, !dbg !7143
  br i1 %7, label %23, label %8, !dbg !7144

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7145
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7145
  br label %11, !dbg !7145

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i8* %14, metadata !7136, metadata !DIExpression()), !dbg !7138
  %15 = load i8, i8* %14, align 1, !dbg !7146
  %16 = load i8, i8* %13, align 1, !dbg !7147
  %17 = icmp eq i8 %15, %16, !dbg !7148
  br i1 %17, label %18, label %23, !dbg !7145

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7149
  call void @llvm.dbg.value(metadata i8* %19, metadata !7136, metadata !DIExpression()), !dbg !7138
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7151
  call void @llvm.dbg.value(metadata i8* %20, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.value(metadata i32 %12, metadata !7135, metadata !DIExpression()), !dbg !7138
  %21 = add i32 %12, -1, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %21, metadata !7135, metadata !DIExpression()), !dbg !7138
  %22 = icmp eq i32 %21, 0, !dbg !7143
  br i1 %22, label %23, label %11, !dbg !7144, !llvm.loop !7152

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7138
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7138
  %26 = load i8, i8* %24, align 1, !dbg !7154
  %27 = zext i8 %26 to i32, !dbg !7154
  %28 = load i8, i8* %25, align 1, !dbg !7155
  %29 = zext i8 %28 to i32, !dbg !7155
  %30 = sub nsw i32 %27, %29, !dbg !7156
  br label %31, !dbg !7157

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7138
  ret i32 %32, !dbg !7158
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7163, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %1, metadata !7164, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 %2, metadata !7165, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %0, metadata !7166, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %1, metadata !7167, metadata !DIExpression()), !dbg !7168
  %4 = ptrtoint i8* %0 to i32, !dbg !7169
  %5 = ptrtoint i8* %1 to i32, !dbg !7169
  %6 = sub i32 %4, %5, !dbg !7169
  %7 = icmp ult i32 %6, %2, !dbg !7171
  br i1 %7, label %10, label %8, !dbg !7172

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7167, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %0, metadata !7166, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 %2, metadata !7165, metadata !DIExpression()), !dbg !7168
  %9 = icmp eq i32 %2, 0, !dbg !7173
  br i1 %9, label %26, label %17, !dbg !7175

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7165, metadata !DIExpression()), !dbg !7168
  %12 = add i32 %11, -1, !dbg !7176
  call void @llvm.dbg.value(metadata i32 %12, metadata !7165, metadata !DIExpression()), !dbg !7168
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7179
  %14 = load i8, i8* %13, align 1, !dbg !7179
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7180
  store i8 %14, i8* %15, align 1, !dbg !7181
  %16 = icmp eq i32 %12, 0, !dbg !7182
  br i1 %16, label %26, label %10, !dbg !7183, !llvm.loop !7184

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7167, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i8* %19, metadata !7166, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i32 %20, metadata !7165, metadata !DIExpression()), !dbg !7168
  %21 = load i8, i8* %18, align 1, !dbg !7186
  store i8 %21, i8* %19, align 1, !dbg !7188
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7189
  call void @llvm.dbg.value(metadata i8* %22, metadata !7166, metadata !DIExpression()), !dbg !7168
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7190
  call void @llvm.dbg.value(metadata i8* %23, metadata !7167, metadata !DIExpression()), !dbg !7168
  %24 = add i32 %20, -1, !dbg !7191
  call void @llvm.dbg.value(metadata i32 %24, metadata !7165, metadata !DIExpression()), !dbg !7168
  %25 = icmp eq i32 %24, 0, !dbg !7173
  br i1 %25, label %26, label %17, !dbg !7175, !llvm.loop !7192

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7194
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7201, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i8* %1, metadata !7202, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 %2, metadata !7203, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i8* %0, metadata !7204, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i8* %1, metadata !7205, metadata !DIExpression()), !dbg !7206
  %4 = icmp eq i32 %2, 0, !dbg !7207
  br i1 %4, label %14, label %5, !dbg !7208

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7205, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i8* %7, metadata !7204, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata i32 %8, metadata !7203, metadata !DIExpression()), !dbg !7206
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7209
  call void @llvm.dbg.value(metadata i8* %9, metadata !7205, metadata !DIExpression()), !dbg !7206
  %10 = load i8, i8* %6, align 1, !dbg !7211
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7212
  call void @llvm.dbg.value(metadata i8* %11, metadata !7204, metadata !DIExpression()), !dbg !7206
  store i8 %10, i8* %7, align 1, !dbg !7213
  %12 = add i32 %8, -1, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %12, metadata !7203, metadata !DIExpression()), !dbg !7206
  %13 = icmp eq i32 %12, 0, !dbg !7207
  br i1 %13, label %14, label %5, !dbg !7208, !llvm.loop !7215

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7222, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %1, metadata !7223, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %2, metadata !7224, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8* %0, metadata !7225, metadata !DIExpression()), !dbg !7227
  %4 = trunc i32 %1 to i8, !dbg !7228
  call void @llvm.dbg.value(metadata i8 %4, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %2, metadata !7224, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8* %0, metadata !7225, metadata !DIExpression()), !dbg !7227
  %5 = icmp eq i32 %2, 0, !dbg !7229
  br i1 %5, label %12, label %6, !dbg !7230

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7224, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i8* %8, metadata !7225, metadata !DIExpression()), !dbg !7227
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7231
  call void @llvm.dbg.value(metadata i8* %9, metadata !7225, metadata !DIExpression()), !dbg !7227
  store i8 %4, i8* %8, align 1, !dbg !7233
  %10 = add i32 %7, -1, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %10, metadata !7224, metadata !DIExpression()), !dbg !7227
  %11 = icmp eq i32 %10, 0, !dbg !7229
  br i1 %11, label %12, label %6, !dbg !7230, !llvm.loop !7235

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7237
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7242, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i32 %1, metadata !7243, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i32 %2, metadata !7244, metadata !DIExpression()), !dbg !7248
  %4 = icmp eq i32 %2, 0, !dbg !7249
  br i1 %4, label %17, label %5, !dbg !7250

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7251

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7252
  call void @llvm.dbg.value(metadata i8* %9, metadata !7245, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.value(metadata i32 %8, metadata !7244, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %9, metadata !7245, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7252
  %10 = load i8, i8* %9, align 1, !dbg !7253
  %11 = icmp eq i8 %10, %6, !dbg !7256
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7257
  call void @llvm.dbg.value(metadata i8* %12, metadata !7245, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.value(metadata i32 %13, metadata !7244, metadata !DIExpression()), !dbg !7248
  br i1 %15, label %16, label %7, !dbg !7257, !llvm.loop !7258

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7260

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7248
  ret i8* %19, !dbg !7261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !7262 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7264, metadata !DIExpression()), !dbg !7265
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7266
  ret void, !dbg !7267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7270, metadata !DIExpression()), !dbg !7271
  ret i32 -1, !dbg !7272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i32* %1, metadata !7278, metadata !DIExpression()), !dbg !7279
  %3 = ptrtoint i32* %1 to i32, !dbg !7280
  %4 = and i32 %3, -2, !dbg !7280
  %5 = icmp eq i32 %4, 2, !dbg !7280
  br i1 %5, label %6, label %9, !dbg !7280

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7281
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7281
  br label %9, !dbg !7282

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7282
  ret i32 %10, !dbg !7283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7286, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata i32* %1, metadata !7287, metadata !DIExpression()), !dbg !7288
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7289
  ret i32 %3, !dbg !7290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32* %1, metadata !7295, metadata !DIExpression()), !dbg !7296
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7297, !srcloc !7299
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7300
  ret i32 %3, !dbg !7301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7307, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i32* %1, metadata !7308, metadata !DIExpression()), !dbg !7311
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7312
  call void @llvm.dbg.value(metadata i32 %3, metadata !7309, metadata !DIExpression()), !dbg !7311
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %4, metadata !7310, metadata !DIExpression()), !dbg !7311
  %5 = icmp ne i32 %3, %4, !dbg !7314
  %6 = sext i1 %5 to i32, !dbg !7315
  ret i32 %6, !dbg !7316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7321, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 %1, metadata !7322, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 %2, metadata !7323, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32* %3, metadata !7324, metadata !DIExpression()), !dbg !7325
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7326
  ret i32 %5, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7330, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i32 %1, metadata !7331, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i32 %2, metadata !7332, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i32* %3, metadata !7333, metadata !DIExpression()), !dbg !7334
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7335, !srcloc !7337
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !7338
  ret i32 %5, !dbg !7339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7342, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %1, metadata !7343, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %2, metadata !7344, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32* %3, metadata !7345, metadata !DIExpression()), !dbg !7350
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7351
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7353
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7353
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7353
  br i1 %11, label %33, label %12, !dbg !7353

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7350
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7350
  call void @llvm.dbg.value(metadata i8* %14, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %13, metadata !7346, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %1, metadata !7347, metadata !DIExpression()), !dbg !7350
  br label %15, !dbg !7354

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7356
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7350
  call void @llvm.dbg.value(metadata i8* %17, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %16, metadata !7347, metadata !DIExpression()), !dbg !7350
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7357
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7360
  call void @llvm.dbg.value(metadata i8* %19, metadata !7348, metadata !DIExpression()), !dbg !7350
  %20 = load i8, i8* %17, align 1, !dbg !7361
  %21 = zext i8 %20 to i32, !dbg !7362
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7357
  %23 = icmp eq i32 %22, -1, !dbg !7363
  br i1 %23, label %30, label %24, !dbg !7364

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7365
  call void @llvm.dbg.value(metadata i32 %25, metadata !7347, metadata !DIExpression()), !dbg !7350
  %26 = icmp eq i32 %25, 0, !dbg !7366
  br i1 %26, label %27, label %15, !dbg !7367, !llvm.loop !7368

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7370
  call void @llvm.dbg.value(metadata i32 %28, metadata !7346, metadata !DIExpression()), !dbg !7350
  %29 = icmp eq i32 %28, 0, !dbg !7371
  br i1 %29, label %30, label %12, !dbg !7372, !llvm.loop !7373

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7350
  call void @llvm.dbg.value(metadata i32 %31, metadata !7346, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.label(metadata !7349), !dbg !7376
  %32 = sub i32 %2, %31, !dbg !7377
  br label %33, !dbg !7378

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7350
  ret i32 %34, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7384, metadata !DIExpression()), !dbg !7385
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7386
  %3 = icmp eq i32 %2, -1, !dbg !7388
  br i1 %3, label %8, label %4, !dbg !7389

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !7390
  %6 = icmp eq i32 %5, -1, !dbg !7391
  %7 = sext i1 %6 to i32, !dbg !7390
  br label %8, !dbg !7392

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7385
  ret i32 %9, !dbg !7393
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7396, metadata !DIExpression()), !dbg !7397
  %2 = tail call fastcc zeroext i1 @device_is_ready.64() #24, !dbg !7398
  br i1 %2, label %3, label %4, !dbg !7400

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7401
  br label %4, !dbg !7402

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7397
  ret i32 %5, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.64() unnamed_addr #1 !dbg !7404 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7408, metadata !DIExpression()), !dbg !7409
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7410, !srcloc !7412
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.65() #24, !dbg !7413
  ret i1 %1, !dbg !7414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7415 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7416
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7417
  ret void, !dbg !7418
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7421, metadata !DIExpression()), !dbg !7422
  %2 = icmp eq i32 %0, 10, !dbg !7423
  br i1 %2, label %3, label %4, !dbg !7425

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7426
  br label %4, !dbg !7428

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7429
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7430
  ret i32 %0, !dbg !7431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7432 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7435, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8 %0, metadata !7436, metadata !DIExpression()), !dbg !7437
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7438, !srcloc !7440
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7441
  ret void, !dbg !7442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7443 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8 %0, metadata !7446, metadata !DIExpression()), !dbg !7448
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7449
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7447, metadata !DIExpression()), !dbg !7448
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7450
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7450
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #25, !dbg !7451
  ret void, !dbg !7452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.65() unnamed_addr #1 !dbg !7453 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !7455, metadata !DIExpression()), !dbg !7456
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #25, !dbg !7457
  ret i1 %1, !dbg !7458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !7459 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7506, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7507, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7508, metadata !DIExpression()), !dbg !7509
  ret void, !dbg !7510
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7511 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7513, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i8 %1, metadata !7514, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i32 %2, metadata !7515, metadata !DIExpression()), !dbg !7526
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7527
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7527
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7527
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7516, metadata !DIExpression()), !dbg !7526
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7528
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7528
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7518, metadata !DIExpression()), !dbg !7526
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !7529
  %13 = icmp eq i32 %12, 196608, !dbg !7529
  br i1 %13, label %71, label %14, !dbg !7529

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !7531
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !7531
  %17 = load i8, i8* %16, align 4, !dbg !7531
  %18 = icmp ugt i8 %17, %1, !dbg !7531
  br i1 %18, label %20, label %19, !dbg !7534

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.75, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.76, i32 0, i32 0), i32 noundef 50) #25, !dbg !7535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.76, i32 0, i32 0), i32 noundef 50) #25, !dbg !7535
  unreachable, !dbg !7535

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !7537
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #23, !dbg !7537
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !7519, metadata !DIExpression()), !dbg !7538
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !7539
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !7539
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !7540
  %25 = load i32, i32* %24, align 4, !dbg !7540
  %26 = inttoptr i32 %25 to i32*, !dbg !7541
  call void @llvm.dbg.value(metadata i32* %26, metadata !7524, metadata !DIExpression()), !dbg !7526
  %27 = load volatile i32, i32* %26, align 4, !dbg !7542
  call void @llvm.dbg.value(metadata i32 %27, metadata !7525, metadata !DIExpression()), !dbg !7526
  %28 = and i32 %2, 2, !dbg !7543
  %29 = icmp eq i32 %28, 0, !dbg !7545
  br i1 %29, label %30, label %69, !dbg !7546

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !7547
  %32 = icmp eq i32 %31, 0, !dbg !7547
  br i1 %32, label %41, label %33, !dbg !7547

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !7549
  %35 = icmp eq i32 %34, 0, !dbg !7550
  call void @llvm.dbg.value(metadata i32 %27, metadata !7525, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7526
  br i1 %35, label %38, label %36, !dbg !7551

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %37, metadata !7525, metadata !DIExpression()), !dbg !7526
  br label %43, !dbg !7556

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !7525, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7526
  %39 = and i32 %27, -49, !dbg !7557
  %40 = or i32 %39, 16, !dbg !7557
  call void @llvm.dbg.value(metadata i32 %40, metadata !7525, metadata !DIExpression()), !dbg !7526
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !7559
  call void @llvm.dbg.value(metadata i32 %42, metadata !7525, metadata !DIExpression()), !dbg !7526
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !7561
  call void @llvm.dbg.value(metadata i32 %44, metadata !7525, metadata !DIExpression()), !dbg !7526
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !7562
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !7563
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #25, !dbg !7564
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !7565
  store i32 %44, i32* %48, align 4, !dbg !7566
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #25, !dbg !7567
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #25, !dbg !7568
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #25, !dbg !7569
  br i1 %11, label %63, label %50, !dbg !7570

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !7571
  %52 = icmp eq i32 %51, 0, !dbg !7575
  br i1 %52, label %53, label %56, !dbg !7576

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !7577
  %55 = icmp eq i32 %54, 0, !dbg !7579
  br i1 %55, label %58, label %56, !dbg !7580

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #25, !dbg !7581
  br label %58, !dbg !7582

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7582
  %60 = load volatile i32, i32* %59, align 4, !dbg !7582
  %61 = shl nuw i32 1, %15, !dbg !7582
  %62 = or i32 %60, %61, !dbg !7582
  store volatile i32 %62, i32* %59, align 4, !dbg !7582
  br label %69, !dbg !7583

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7584
  %65 = load volatile i32, i32* %64, align 4, !dbg !7584
  %66 = shl nuw i32 1, %15, !dbg !7584
  %67 = xor i32 %66, -1, !dbg !7584
  %68 = and i32 %65, %67, !dbg !7584
  store volatile i32 %68, i32* %64, align 4, !dbg !7584
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !7526
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #23, !dbg !7586
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !7526
  ret i32 %72, !dbg !7586
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !7587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7591, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i32* %1, metadata !7592, metadata !DIExpression()), !dbg !7595
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7596
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7596
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7596
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7593, metadata !DIExpression()), !dbg !7595
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7597
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7597
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7594, metadata !DIExpression()), !dbg !7595
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7598
  store i32 %8, i32* %1, align 4, !dbg !7599
  ret i32 0, !dbg !7600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !7601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7603, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %1, metadata !7604, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %2, metadata !7605, metadata !DIExpression()), !dbg !7608
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7609
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !7609
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7609
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !7606, metadata !DIExpression()), !dbg !7608
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !7610
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !7610
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !7607, metadata !DIExpression()), !dbg !7608
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #24, !dbg !7611
  %10 = xor i32 %1, -1, !dbg !7612
  %11 = and i32 %9, %10, !dbg !7613
  %12 = and i32 %2, %1, !dbg !7614
  %13 = or i32 %11, %12, !dbg !7615
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #24, !dbg !7616
  ret i32 0, !dbg !7617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7620, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 %1, metadata !7621, metadata !DIExpression()), !dbg !7624
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7625
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7625
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7625
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7622, metadata !DIExpression()), !dbg !7624
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7626
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7626
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7623, metadata !DIExpression()), !dbg !7624
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7627
  %9 = or i32 %8, %1, !dbg !7628
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !7629
  ret i32 0, !dbg !7630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7633, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %1, metadata !7634, metadata !DIExpression()), !dbg !7637
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7638
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7638
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7638
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7635, metadata !DIExpression()), !dbg !7637
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7639
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7639
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7636, metadata !DIExpression()), !dbg !7637
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7640
  %9 = xor i32 %1, -1, !dbg !7641
  %10 = and i32 %8, %9, !dbg !7642
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #24, !dbg !7643
  ret i32 0, !dbg !7644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7647, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %1, metadata !7648, metadata !DIExpression()), !dbg !7651
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7652
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !7652
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !7649, metadata !DIExpression()), !dbg !7651
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !7653
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !7650, metadata !DIExpression()), !dbg !7651
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #24, !dbg !7654
  %9 = xor i32 %8, %1, !dbg !7655
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #24, !dbg !7656
  ret i32 0, !dbg !7657
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7660, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8 %1, metadata !7661, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %2, metadata !7662, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %3, metadata !7663, metadata !DIExpression()), !dbg !7670
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7671
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !7671
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !7671
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !7664, metadata !DIExpression()), !dbg !7670
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !7672
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7672
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !7665, metadata !DIExpression()), !dbg !7670
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !7673
  %11 = load volatile i32, i32* %10, align 4, !dbg !7673
  %12 = zext i8 %1 to i32, !dbg !7675
  %13 = shl nuw i32 1, %12, !dbg !7675
  %14 = and i32 %11, %13, !dbg !7676
  %15 = icmp ne i32 %14, 0, !dbg !7677
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !7678
  br i1 %17, label %77, label %18, !dbg !7678

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !7679
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !7681
  br i1 %21, label %29, label %22, !dbg !7681

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !7682
  br i1 %24, label %29, label %25, !dbg !7682

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !7684
  %27 = and i1 %26, %23, !dbg !7686
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !7687
  call void @llvm.dbg.value(metadata i32 %30, metadata !7668, metadata !DIExpression()), !dbg !7670
  %31 = icmp ult i8 %1, 16, !dbg !7688
  br i1 %31, label %32, label %35, !dbg !7690

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !7691
  call void @llvm.dbg.value(metadata i8 %33, metadata !7669, metadata !DIExpression()), !dbg !7670
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !7693
  call void @llvm.dbg.value(metadata i32* %34, metadata !7666, metadata !DIExpression()), !dbg !7670
  br label %41, !dbg !7694

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !7695
  br i1 %36, label %37, label %77, !dbg !7697

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !7698
  %39 = add nsw i8 %38, -32, !dbg !7698
  call void @llvm.dbg.value(metadata i8 %39, metadata !7669, metadata !DIExpression()), !dbg !7670
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !7700
  call void @llvm.dbg.value(metadata i32* %40, metadata !7666, metadata !DIExpression()), !dbg !7670
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !7701
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !7701
  call void @llvm.dbg.value(metadata i8 %43, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32* %42, metadata !7666, metadata !DIExpression()), !dbg !7670
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7702, !srcloc !7710
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !7702
  call void @llvm.dbg.value(metadata i32 %45, metadata !7707, metadata !DIExpression()) #23, !dbg !7711
  call void @llvm.dbg.value(metadata i32 undef, metadata !7708, metadata !DIExpression()) #23, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %45, metadata !7667, metadata !DIExpression()), !dbg !7670
  %46 = load volatile i32, i32* %42, align 4, !dbg !7712
  %47 = zext i8 %43 to i32, !dbg !7713
  %48 = shl nuw i32 3, %47, !dbg !7714
  %49 = xor i32 %48, -1, !dbg !7715
  %50 = and i32 %46, %49, !dbg !7716
  %51 = shl nuw i32 %30, %47, !dbg !7717
  %52 = or i32 %50, %51, !dbg !7718
  store volatile i32 %52, i32* %42, align 4, !dbg !7719
  %53 = icmp eq i32 %3, 100663296, !dbg !7720
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7720
  %55 = load volatile i32, i32* %54, align 4, !dbg !7720
  %56 = or i32 %55, %13, !dbg !7720
  %57 = xor i32 %13, -1, !dbg !7720
  %58 = and i32 %55, %57, !dbg !7720
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !7720
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !7720
  store volatile i32 %59, i32* %60, align 4, !dbg !7720
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7721
  %62 = load volatile i32, i32* %61, align 4, !dbg !7721
  br i1 %16, label %63, label %68, !dbg !7721

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !7721
  store volatile i32 %64, i32* %61, align 4, !dbg !7721
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7722
  %66 = load volatile i32, i32* %65, align 4, !dbg !7722
  %67 = or i32 %66, %13, !dbg !7722
  br label %74, !dbg !7722

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !7721
  %70 = and i32 %62, %69, !dbg !7721
  store volatile i32 %70, i32* %61, align 4, !dbg !7721
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7722
  %72 = load volatile i32, i32* %71, align 4, !dbg !7722
  %73 = and i32 %72, %69, !dbg !7722
  br label %74, !dbg !7722

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !7722
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !7722
  store volatile i32 %75, i32* %76, align 4, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %45, metadata !7723, metadata !DIExpression()) #23, !dbg !7726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !7728, !srcloc !7729
  br label %77, !dbg !7730

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !7670
  ret i32 %78, !dbg !7731
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !7732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7734, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7735, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i1 %2, metadata !7736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7739
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7740
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !7740
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !7740
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !7737, metadata !DIExpression()), !dbg !7739
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !7741
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7742
  ret i32 %8, !dbg !7743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !7744 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7750, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7751, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i1 %2, metadata !7752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7753
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !7754
  br i1 %4, label %5, label %6, !dbg !7757

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 42) #25, !dbg !7758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.72, i32 0, i32 0)) #25, !dbg !7758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 42) #25, !dbg !7758
  unreachable, !dbg !7758

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !7760
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !7760
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !7760
  br i1 %9, label %10, label %11, !dbg !7763

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.73, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 43) #25, !dbg !7764
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.74, i32 0, i32 0)) #25, !dbg !7764
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 43) #25, !dbg !7764
  unreachable, !dbg !7764

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7766
  br i1 %12, label %18, label %13, !dbg !7768

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7769
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !7772
  %16 = or i1 %15, %2, !dbg !7773
  %17 = select i1 %16, i32 0, i32 -22, !dbg !7773
  br i1 %2, label %19, label %21, !dbg !7773

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !7774

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7775
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !7778
  br label %21, !dbg !7779

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !7753
  ret i32 %22, !dbg !7780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !7781 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7785, metadata !DIExpression()), !dbg !7786
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7787
  %3 = icmp eq %struct._snode* %2, null, !dbg !7787
  ret i1 %3, !dbg !7787
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !7788 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7792, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7793, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7794, metadata !DIExpression()), !dbg !7796
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7797
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7794, metadata !DIExpression()), !dbg !7796
  %4 = icmp eq %struct._snode* %3, null, !dbg !7799
  br i1 %4, label %15, label %5, !dbg !7797

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7794, metadata !DIExpression()), !dbg !7796
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7801
  br i1 %6, label %9, label %11, !dbg !7804

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7794, metadata !DIExpression()), !dbg !7796
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7801
  br i1 %8, label %9, label %11, !dbg !7804, !llvm.loop !7805

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7806
  br label %15, !dbg !7806

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7794, metadata !DIExpression()), !dbg !7796
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7799
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7795, metadata !DIExpression()), !dbg !7796
  %14 = icmp eq %struct._snode* %13, null, !dbg !7799
  br i1 %14, label %15, label %7, !dbg !7797, !llvm.loop !7805

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !7809 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7813, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7814, metadata !DIExpression()), !dbg !7815
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7816
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7816
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7816
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7817
  %5 = icmp eq %struct._snode* %4, null, !dbg !7817
  br i1 %5, label %6, label %8, !dbg !7816

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7819
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7819
  br label %8, !dbg !7819

8:                                                ; preds = %6, %2
  ret void, !dbg !7816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !7821 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7825, metadata !DIExpression()), !dbg !7826
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7827
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7827
  ret %struct._snode* %3, !dbg !7828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !7829 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7834, metadata !DIExpression()), !dbg !7835
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7836
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7841, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7842, metadata !DIExpression()), !dbg !7843
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7844
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !7847 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7849, metadata !DIExpression()), !dbg !7850
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7851
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7851
  ret %struct._snode* %3, !dbg !7852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !7853 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7855, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7856, metadata !DIExpression()), !dbg !7857
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7858
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !7861 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7865, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7866, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7867, metadata !DIExpression()), !dbg !7868
  %4 = icmp eq %struct._snode* %1, null, !dbg !7869
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7871
  br i1 %4, label %6, label %11, !dbg !7872

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7873
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7875
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7875
  br i1 %8, label %9, label %15, !dbg !7873

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7877
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7877
  br label %15, !dbg !7877

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7879
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7881
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7881
  br i1 %13, label %14, label %15, !dbg !7879

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7883
  br label %15, !dbg !7883

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7872
  ret void, !dbg !7872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #7 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7889, metadata !DIExpression()), !dbg !7890
  %2 = icmp eq %struct._snode* %0, null, !dbg !7891
  br i1 %2, label %5, label %3, !dbg !7891

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7891
  br label %5, !dbg !7891

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7891
  ret %struct._snode* %6, !dbg !7891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !7892 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7894, metadata !DIExpression()), !dbg !7895
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7896
  ret %struct._snode* %2, !dbg !7896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !7897 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7899, metadata !DIExpression()), !dbg !7900
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7901
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7901
  ret %struct._snode* %3, !dbg !7902
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #16 !dbg !7903 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7907, metadata !DIExpression()), !dbg !7908
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7909
  %3 = load volatile i32, i32* %2, align 4, !dbg !7909
  ret i32 %3, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7911 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !7915, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i32 %1, metadata !7916, metadata !DIExpression()), !dbg !7917
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !7918
  store volatile i32 %1, i32* %3, align 4, !dbg !7919
  ret void, !dbg !7920
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !7921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7925, metadata !DIExpression()), !dbg !7929
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7930
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !7930
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !7926, metadata !DIExpression()), !dbg !7929
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7931
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !7931
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !7931
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !7927, metadata !DIExpression()), !dbg !7929
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !7932
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7932
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !7933
  %11 = load volatile i32, i32* %10, align 4, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %11, metadata !7928, metadata !DIExpression()), !dbg !7929
  store volatile i32 %11, i32* %10, align 4, !dbg !7934
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !7935
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #24, !dbg !7936
  ret void, !dbg !7937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7938 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7942, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7944, metadata !DIExpression()), !dbg !7947
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7948
  %5 = icmp eq %struct._snode* %4, null, !dbg !7948
  br i1 %5, label %24, label %6, !dbg !7948

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7950
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !7945, metadata !DIExpression()), !dbg !7947
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7951
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !7951
  %12 = load i32, i32* %11, align 4, !dbg !7951
  %13 = and i32 %12, %2, !dbg !7955
  %14 = icmp eq i32 %13, 0, !dbg !7955
  br i1 %14, label %22, label %15, !dbg !7956

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7957
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7957
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7957
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !7957
  br i1 %19, label %20, label %21, !dbg !7961

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 77) #25, !dbg !7962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.74, i32 0, i32 0)) #25, !dbg !7962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.71, i32 0, i32 0), i32 noundef 77) #25, !dbg !7962
  unreachable, !dbg !7962

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !7964
  br label %22, !dbg !7965

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7945, metadata !DIExpression()), !dbg !7947
  %23 = icmp eq %struct._snode* %8, null, !dbg !7966
  br i1 %23, label %24, label %6, !dbg !7966

24:                                               ; preds = %22, %3
  ret void, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1129 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1131, metadata !DIExpression()), !dbg !7968
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #25, !dbg !7969
  tail call void @arch_irq_enable(i32 noundef 64) #25, !dbg !7971
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #25, !dbg !7972
  tail call void @arch_irq_enable(i32 noundef 65) #25, !dbg !7971
  ret i32 0, !dbg !7971
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !7974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7976, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7980
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7981
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !7981
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !7981
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !7981
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !7981
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7978, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i32 -1, metadata !7979, metadata !DIExpression()), !dbg !7980
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #24, !dbg !7982
  br i1 %8, label %9, label %13, !dbg !7984

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #24, !dbg !7985
  store i8 %10, i8* %1, align 1, !dbg !7987
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !7988
  br i1 %11, label %12, label %13, !dbg !7990

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !7991
  br label %13, !dbg !7993

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !7980
  call void @llvm.dbg.value(metadata i32 %14, metadata !7979, metadata !DIExpression()), !dbg !7980
  ret i32 %14, !dbg !7994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8 %1, metadata !7998, metadata !DIExpression()), !dbg !8000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8001
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8001
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8001
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8001
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8001
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !7999, metadata !DIExpression()), !dbg !8000
  br label %8, !dbg !8002

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #24, !dbg !8003
  br i1 %9, label %10, label %8, !dbg !8002, !llvm.loop !8004

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #24, !dbg !8006
  ret void, !dbg !8007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !8008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8010, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 %2, metadata !8012, metadata !DIExpression()), !dbg !8015
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8016
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !8016
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !8016
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !8016
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8016
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32 0, metadata !8014, metadata !DIExpression()), !dbg !8015
  %9 = icmp eq i32 %2, 0, !dbg !8017
  br i1 %9, label %18, label %10, !dbg !8018

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8014, metadata !DIExpression()), !dbg !8015
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #24, !dbg !8019
  br i1 %12, label %13, label %18, !dbg !8020

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8021
  %15 = load i8, i8* %14, align 1, !dbg !8021
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #24, !dbg !8023
  %16 = add nuw i32 %11, 1, !dbg !8024
  call void @llvm.dbg.value(metadata i32 %16, metadata !8014, metadata !DIExpression()), !dbg !8015
  %17 = icmp eq i32 %16, %2, !dbg !8017
  br i1 %17, label %18, label %10, !dbg !8018, !llvm.loop !8025

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8015
  ret i32 %19, !dbg !8027
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8030, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %2, metadata !8032, metadata !DIExpression()), !dbg !8035
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8036
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !8036
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !8036
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !8036
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8036
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !8033, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8034, metadata !DIExpression()), !dbg !8035
  %9 = icmp eq i32 %2, 0, !dbg !8037
  br i1 %9, label %18, label %10, !dbg !8038

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8034, metadata !DIExpression()), !dbg !8035
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #24, !dbg !8039
  br i1 %12, label %13, label %18, !dbg !8040

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #24, !dbg !8041
  %15 = add nuw i32 %11, 1, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %15, metadata !8034, metadata !DIExpression()), !dbg !8035
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8044
  store i8 %14, i8* %16, align 1, !dbg !8045
  %17 = icmp eq i32 %15, %2, !dbg !8037
  br i1 %17, label %18, label %10, !dbg !8038, !llvm.loop !8046

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !8035
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !8048
  br i1 %20, label %21, label %22, !dbg !8050

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !8051
  br label %22, !dbg !8053

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8060
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8060
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8060
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8060
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8060
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8058, metadata !DIExpression()), !dbg !8059
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #25, !dbg !8061
  ret void, !dbg !8062
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8065, metadata !DIExpression()), !dbg !8067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8068
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8068
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8068
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8068
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8068
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8066, metadata !DIExpression()), !dbg !8067
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #25, !dbg !8069
  ret void, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8073, metadata !DIExpression()), !dbg !8075
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8076
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8076
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8076
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8076
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8076
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8074, metadata !DIExpression()), !dbg !8075
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !8077
  %8 = zext i1 %7 to i32, !dbg !8077
  ret i32 %8, !dbg !8078
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8081, metadata !DIExpression()), !dbg !8083
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8084
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8084
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8084
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8084
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8084
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8082, metadata !DIExpression()), !dbg !8083
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #25, !dbg !8085
  ret void, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8089, metadata !DIExpression()), !dbg !8091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8092
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8092
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8092
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8092
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8092
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8090, metadata !DIExpression()), !dbg !8091
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #25, !dbg !8093
  ret void, !dbg !8094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8097, metadata !DIExpression()), !dbg !8099
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8100
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8100
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8100
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8100
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8100
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8098, metadata !DIExpression()), !dbg !8099
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !8101
  %8 = zext i1 %7 to i32, !dbg !8101
  ret i32 %8, !dbg !8102
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8105, metadata !DIExpression()), !dbg !8107
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8108
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8108
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8108
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8108
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8108
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8106, metadata !DIExpression()), !dbg !8107
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #25, !dbg !8109
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #25, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8114, metadata !DIExpression()), !dbg !8116
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8117
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8117
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8117
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8117
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8117
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8115, metadata !DIExpression()), !dbg !8116
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #25, !dbg !8118
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #25, !dbg !8119
  ret void, !dbg !8120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !8121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8126
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !8126
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !8126
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !8126
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8126
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !8124, metadata !DIExpression()), !dbg !8125
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #24, !dbg !8127
  br i1 %7, label %11, label %8, !dbg !8128

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #24, !dbg !8129
  %10 = zext i1 %9 to i32, !dbg !8128
  br label %11, !dbg !8128

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !8130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #4 !dbg !8131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8133, metadata !DIExpression()), !dbg !8134
  ret i32 1, !dbg !8135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #9 !dbg !8136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8138, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !8139, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i8* %2, metadata !8140, metadata !DIExpression()), !dbg !8143
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8144
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !8144
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !8144
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !8141, metadata !DIExpression()), !dbg !8143
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !8145
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !8146
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !8147
  store i8* %2, i8** %8, align 4, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8150 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8154, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %1, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32* null, metadata !8156, metadata !DIExpression()), !dbg !8157
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !8158
  %4 = lshr i32 %1, 16, !dbg !8159
  %5 = add i32 %4, %3, !dbg !8160
  %6 = inttoptr i32 %5 to i32*, !dbg !8161
  call void @llvm.dbg.value(metadata i32* %6, metadata !8156, metadata !DIExpression()), !dbg !8157
  %7 = load volatile i32, i32* %6, align 4, !dbg !8162
  %8 = and i32 %1, 65535, !dbg !8163
  %9 = shl nuw i32 1, %8, !dbg !8164
  %10 = and i32 %7, %9, !dbg !8164
  %11 = icmp ne i32 %10, 0, !dbg !8164
  ret i1 %11, !dbg !8165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !8166 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8170, metadata !DIExpression()), !dbg !8171
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !8172
  %3 = load volatile i32, i32* %2, align 4, !dbg !8172
  %4 = trunc i32 %3 to i8, !dbg !8173
  ret i8 %4, !dbg !8174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !8175 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8179, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8 %1, metadata !8180, metadata !DIExpression()), !dbg !8181
  %3 = zext i8 %1 to i32, !dbg !8182
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !8183
  store volatile i32 %3, i32* %4, align 4, !dbg !8184
  ret void, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1428, metadata !DIExpression()), !dbg !8186
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #25, !dbg !8187
  tail call void @arch_irq_enable(i32 noundef 26) #25, !dbg !8189
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8192, metadata !DIExpression()), !dbg !8194
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8195
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !8195
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8195
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !8193, metadata !DIExpression()), !dbg !8194
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !8196
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !8196
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !8198
  br i1 %7, label %11, label %8, !dbg !8199

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !8200
  %10 = load i8*, i8** %9, align 4, !dbg !8200
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !8202
  br label %11, !dbg !8203

11:                                               ; preds = %8, %1
  ret void, !dbg !8204
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !8205 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8207, metadata !DIExpression()), !dbg !8222
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8223
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !8223
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !8223
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !8223
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !8223
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !8208, metadata !DIExpression()), !dbg !8222
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !8209, metadata !DIExpression()), !dbg !8222
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8224, !srcloc !8230
  call void @llvm.dbg.value(metadata i32 undef, metadata !8227, metadata !DIExpression()) #23, !dbg !8231
  call void @llvm.dbg.value(metadata i32 undef, metadata !8228, metadata !DIExpression()) #23, !dbg !8231
  call void @llvm.dbg.value(metadata i32 undef, metadata !8210, metadata !DIExpression()), !dbg !8222
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !8232
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !8232
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !8212, metadata !DIExpression()), !dbg !8233
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !8234
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !8235
  %12 = load i32, i32* %11, align 4, !dbg !8235
  store i32 %12, i32* %10, align 4, !dbg !8234
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !8234
  store i32 32, i32* %13, align 4, !dbg !8234
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !8234
  store i32 0, i32* %14, align 4, !dbg !8234
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !8234
  store i32 0, i32* %15, align 4, !dbg !8234
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !8234
  store i32 6, i32* %16, align 4, !dbg !8234
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !8236
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !8236
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #24, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %19, metadata !8211, metadata !DIExpression()), !dbg !8222
  %20 = icmp eq i32 %19, 0, !dbg !8238
  br i1 %20, label %21, label %30, !dbg !8240

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !8234
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %23, metadata !8227, metadata !DIExpression()) #23, !dbg !8231
  call void @llvm.dbg.value(metadata i32 %23, metadata !8210, metadata !DIExpression()), !dbg !8222
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #25, !dbg !8241
  store i32 %24, i32* %22, align 4, !dbg !8242
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #25, !dbg !8243
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !8244
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #24, !dbg !8245
  call void @llvm.dbg.value(metadata i32 undef, metadata !8246, metadata !DIExpression()) #23, !dbg !8249
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !8251, !srcloc !8252
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !8253
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !8253
  call void %26(%struct.device* noundef nonnull %0) #25, !dbg !8254
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !8255
  %28 = load i8, i8* %27, align 4, !dbg !8255
  %29 = zext i8 %28 to i32, !dbg !8256
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #25, !dbg !8257
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #24, !dbg !8258
  br label %30, !dbg !8259

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !8260
  ret i32 %19, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8261 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8265, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i8 0, metadata !8266, metadata !DIExpression()), !dbg !8269
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8270
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8270
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8268, metadata !DIExpression(DW_OP_deref)), !dbg !8269
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %4, metadata !8267, metadata !DIExpression()), !dbg !8269
  %5 = icmp slt i32 %4, 0, !dbg !8272
  br i1 %5, label %9, label %6, !dbg !8274

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8275
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8268, metadata !DIExpression()), !dbg !8269
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8276
  br label %9, !dbg !8277

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8278
  ret i32 %10, !dbg !8278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8279 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8281, metadata !DIExpression()), !dbg !8283
  call void @llvm.dbg.value(metadata i8 2, metadata !8282, metadata !DIExpression()), !dbg !8283
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8284
  %3 = load volatile i32, i32* %2, align 4, !dbg !8284
  %4 = and i32 %3, -64513, !dbg !8285
  %5 = or i32 %4, 2048, !dbg !8286
  store volatile i32 %5, i32* %2, align 4, !dbg !8287
  ret void, !dbg !8288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8289 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8291, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i8 1, metadata !8292, metadata !DIExpression()), !dbg !8293
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !8294
  %3 = load volatile i32, i32* %2, align 4, !dbg !8294
  %4 = and i32 %3, -64, !dbg !8295
  %5 = or i32 %4, 1, !dbg !8296
  store volatile i32 %5, i32* %2, align 4, !dbg !8297
  ret void, !dbg !8298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !8299 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !8303, metadata !DIExpression()), !dbg !8304
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !8305
  %3 = load volatile i32, i32* %2, align 4, !dbg !8306
  %4 = or i32 %3, 1, !dbg !8306
  store volatile i32 %4, i32* %2, align 4, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8312, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8313, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 0, metadata !8314, metadata !DIExpression()), !dbg !8315
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8316
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !8316
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8317
  %5 = load i8, i8* %4, align 4, !dbg !8317
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8318
  ret i32 %6, !dbg !8319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !8320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8322, metadata !DIExpression()), !dbg !8323
  tail call fastcc void @__NVIC_SetPriority.84() #24, !dbg !8324
  store i32 19999, i32* @last_load, align 4, !dbg !8325
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8326
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8327
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8328
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8329
  %3 = or i32 %2, 7, !dbg !8329
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8329
  ret i32 0, !dbg !8330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.84() unnamed_addr #15 !dbg !8331 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 1, metadata !8334, metadata !DIExpression()), !dbg !8335
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8336
  ret void, !dbg !8339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8342, metadata !DIExpression()), !dbg !8344
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8345
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8346
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8347
  %5 = add i32 %4, %3, !dbg !8347
  store i32 %5, i32* @cycle_count, align 4, !dbg !8347
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8348
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8349
  %7 = sub i32 %5, %6, !dbg !8352
  %8 = udiv i32 %7, 20000, !dbg !8353
  call void @llvm.dbg.value(metadata i32 %8, metadata !8343, metadata !DIExpression()), !dbg !8344
  %9 = mul nuw i32 %8, 20000, !dbg !8354
  %10 = add i32 %9, %6, !dbg !8355
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8355
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8356
  tail call void @z_arm_int_exit() #25, !dbg !8357
  ret void, !dbg !8358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !8359 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %1, metadata !8361, metadata !DIExpression()), !dbg !8365
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %2, metadata !8362, metadata !DIExpression()), !dbg !8365
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %3, metadata !8363, metadata !DIExpression()), !dbg !8365
  %4 = and i32 %2, 65536, !dbg !8368
  %5 = icmp ne i32 %4, 0, !dbg !8368
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8370
  %8 = load i32, i32* @last_load, align 4, !dbg !8365
  br i1 %7, label %9, label %13, !dbg !8370

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8371
  %11 = add i32 %10, %8, !dbg !8371
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8371
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8373
  br label %13, !dbg !8374

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8375
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8376
  %16 = add i32 %14, %15, !dbg !8377
  ret i32 %16, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8383, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i1 %1, metadata !8384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8396
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8397
  br i1 %4, label %5, label %8, !dbg !8397

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8399
  %7 = and i32 %6, -2, !dbg !8399
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8399
  store i32 -16777216, i32* @last_load, align 4, !dbg !8401
  br label %60, !dbg !8402

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %9, metadata !8388, metadata !DIExpression()), !dbg !8396
  br i1 %3, label %18, label %10, !dbg !8404

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8404
  call void @llvm.dbg.value(metadata i32 undef, metadata !8383, metadata !DIExpression()), !dbg !8396
  %12 = icmp slt i32 %11, 1, !dbg !8405
  br i1 %12, label %18, label %13, !dbg !8405

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !8405
  %15 = select i1 %14, i32 %11, i32 837, !dbg !8405
  %16 = mul nuw nsw i32 %15, 20000, !dbg !8405
  %17 = add nuw nsw i32 %16, 19999, !dbg !8405
  br label %18, !dbg !8405

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8383, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8406, metadata !DIExpression()) #23, !dbg !8413
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8415, !srcloc !8421
  call void @llvm.dbg.value(metadata i32 undef, metadata !8418, metadata !DIExpression()) #23, !dbg !8422
  call void @llvm.dbg.value(metadata i32 undef, metadata !8419, metadata !DIExpression()) #23, !dbg !8422
  call void @llvm.dbg.value(metadata i32 undef, metadata !8412, metadata !DIExpression()) #23, !dbg !8413
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8423
  br i1 %21, label %23, label %22, !dbg !8426

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8427
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.88, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8427
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8427
  unreachable, !dbg !8427

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %24, metadata !8418, metadata !DIExpression()) #23, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %24, metadata !8412, metadata !DIExpression()) #23, !dbg !8413
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %24, metadata !8389, metadata !DIExpression()), !dbg !8396
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !8430
  call void @llvm.dbg.value(metadata i32 %25, metadata !8394, metadata !DIExpression()), !dbg !8396
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %26, metadata !8386, metadata !DIExpression()), !dbg !8396
  %27 = load i32, i32* @cycle_count, align 4, !dbg !8432
  %28 = add i32 %27, %25, !dbg !8432
  store i32 %28, i32* @cycle_count, align 4, !dbg !8432
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8433
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !8434
  %30 = sub i32 %28, %29, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %30, metadata !8395, metadata !DIExpression()), !dbg !8396
  %31 = icmp slt i32 %30, 0, !dbg !8436
  br i1 %31, label %41, label %32, !dbg !8438

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !8385, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 undef, metadata !8385, metadata !DIExpression()), !dbg !8396
  %33 = add nuw i32 %19, %30, !dbg !8439
  %34 = urem i32 %33, 20000, !dbg !8441
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !8385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8396
  %35 = sub nuw nsw i32 %19, %34, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %35, metadata !8385, metadata !DIExpression()), !dbg !8396
  %36 = icmp ugt i32 %35, 1250, !dbg !8443
  br i1 %36, label %37, label %39, !dbg !8443

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !8385, metadata !DIExpression()), !dbg !8396
  %38 = icmp ugt i32 %35, 16740000, !dbg !8444
  br i1 %38, label %41, label %39, !dbg !8446

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !8447
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8448
  call void @llvm.dbg.value(metadata i32 %43, metadata !8387, metadata !DIExpression()), !dbg !8396
  %44 = add nsw i32 %42, -1, !dbg !8449
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8450
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8451
  %45 = icmp ult i32 %26, %43, !dbg !8452
  br i1 %45, label %46, label %51, !dbg !8454

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !8455
  %48 = add i32 %26, %9, !dbg !8457
  %49 = sub i32 %48, %43, !dbg !8458
  %50 = add i32 %49, %47, !dbg !8455
  br label %55, !dbg !8459

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !8460
  %53 = load i32, i32* @cycle_count, align 4, !dbg !8462
  %54 = add i32 %52, %53, !dbg !8462
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !8463
  store i32 %56, i32* @cycle_count, align 4, !dbg !8463
  call void @llvm.dbg.value(metadata i32 undef, metadata !8464, metadata !DIExpression()) #23, !dbg !8470
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8469, metadata !DIExpression()) #23, !dbg !8470
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8472
  br i1 %57, label %59, label %58, !dbg !8475

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.89, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.90, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8476
  unreachable, !dbg !8476

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !8464, metadata !DIExpression()) #23, !dbg !8470
  call void @llvm.dbg.value(metadata i32 %24, metadata !8478, metadata !DIExpression()) #23, !dbg !8481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !8483, !srcloc !8484
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8406, metadata !DIExpression()) #23, !dbg !8490
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8492, !srcloc !8421
  call void @llvm.dbg.value(metadata i32 undef, metadata !8418, metadata !DIExpression()) #23, !dbg !8494
  call void @llvm.dbg.value(metadata i32 undef, metadata !8419, metadata !DIExpression()) #23, !dbg !8494
  call void @llvm.dbg.value(metadata i32 undef, metadata !8412, metadata !DIExpression()) #23, !dbg !8490
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8495
  br i1 %2, label %4, label %3, !dbg !8496

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.88, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8497
  unreachable, !dbg !8497

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !8418, metadata !DIExpression()) #23, !dbg !8494
  call void @llvm.dbg.value(metadata i32 undef, metadata !8412, metadata !DIExpression()) #23, !dbg !8490
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8498
  call void @llvm.dbg.value(metadata i32 undef, metadata !8488, metadata !DIExpression()), !dbg !8499
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !8500
  %6 = load i32, i32* @cycle_count, align 4, !dbg !8501
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !8502
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !8489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8499
  call void @llvm.dbg.value(metadata i32 undef, metadata !8464, metadata !DIExpression()) #23, !dbg !8503
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8469, metadata !DIExpression()) #23, !dbg !8503
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8505
  br i1 %8, label %10, label %9, !dbg !8506

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.89, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.90, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8507
  unreachable, !dbg !8507

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !8508
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !8489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8499
  %12 = sub i32 %11, %7, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %12, metadata !8489, metadata !DIExpression()), !dbg !8499
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !8492
  call void @llvm.dbg.value(metadata i32 %13, metadata !8418, metadata !DIExpression()) #23, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %13, metadata !8412, metadata !DIExpression()) #23, !dbg !8490
  call void @llvm.dbg.value(metadata i32 %13, metadata !8488, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 undef, metadata !8464, metadata !DIExpression()) #23, !dbg !8503
  call void @llvm.dbg.value(metadata i32 undef, metadata !8478, metadata !DIExpression()) #23, !dbg !8510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !8512, !srcloc !8484
  %14 = udiv i32 %12, 20000, !dbg !8513
  ret i32 %14, !dbg !8514
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8515 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8406, metadata !DIExpression()) #23, !dbg !8519
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8521, !srcloc !8421
  call void @llvm.dbg.value(metadata i32 undef, metadata !8418, metadata !DIExpression()) #23, !dbg !8523
  call void @llvm.dbg.value(metadata i32 undef, metadata !8419, metadata !DIExpression()) #23, !dbg !8523
  call void @llvm.dbg.value(metadata i32 undef, metadata !8412, metadata !DIExpression()) #23, !dbg !8519
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8524
  br i1 %2, label %4, label %3, !dbg !8525

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.88, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 148) #25, !dbg !8526
  unreachable, !dbg !8526

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !8418, metadata !DIExpression()) #23, !dbg !8523
  call void @llvm.dbg.value(metadata i32 undef, metadata !8412, metadata !DIExpression()) #23, !dbg !8519
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8527
  call void @llvm.dbg.value(metadata i32 undef, metadata !8517, metadata !DIExpression()), !dbg !8528
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !8529
  %6 = load i32, i32* @cycle_count, align 4, !dbg !8530
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !8518, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !8528
  call void @llvm.dbg.value(metadata i32 undef, metadata !8464, metadata !DIExpression()) #23, !dbg !8531
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !8469, metadata !DIExpression()) #23, !dbg !8531
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #25, !dbg !8533
  br i1 %7, label %9, label %8, !dbg !8534

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.89, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.90, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #25, !dbg !8535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 194) #25, !dbg !8535
  unreachable, !dbg !8535

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !8536
  call void @llvm.dbg.value(metadata i32 %10, metadata !8518, metadata !DIExpression()), !dbg !8528
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !8521
  call void @llvm.dbg.value(metadata i32 %11, metadata !8418, metadata !DIExpression()) #23, !dbg !8523
  call void @llvm.dbg.value(metadata i32 %11, metadata !8412, metadata !DIExpression()) #23, !dbg !8519
  call void @llvm.dbg.value(metadata i32 %11, metadata !8517, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.value(metadata i32 undef, metadata !8464, metadata !DIExpression()) #23, !dbg !8531
  call void @llvm.dbg.value(metadata i32 undef, metadata !8478, metadata !DIExpression()) #23, !dbg !8537
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !8539, !srcloc !8484
  ret i32 %10, !dbg !8540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !8541 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8542
  %2 = icmp eq i32 %1, -16777216, !dbg !8544
  br i1 %2, label %3, label %6, !dbg !8545

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8546
  %5 = or i32 %4, 1, !dbg !8546
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8546
  br label %6, !dbg !8548

6:                                                ; preds = %3, %0
  ret void, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !8550 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8551
  %2 = and i32 %1, -2, !dbg !8551
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8551
  ret void, !dbg !8552
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8586, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i8 %1, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8588, metadata !DIExpression()), !dbg !8589
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8590
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8590
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8589
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8591
  %8 = load i8, i8* %6, align 4, !dbg !8592
  %9 = zext i8 %8 to i32, !dbg !8593
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8593
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8594
  br i1 %11, label %18, label %24, !dbg !8595

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8589
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8591
  %14 = load i8, i8* %6, align 4, !dbg !8592
  %15 = zext i8 %14 to i32, !dbg !8593
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8593
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8594
  br i1 %17, label %18, label %24, !dbg !8595, !llvm.loop !8596

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8598
  %21 = load i8, i8* %20, align 1, !dbg !8598
  %22 = icmp eq i8 %21, %1, !dbg !8601
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8602
  br i1 %22, label %24, label %12, !dbg !8603

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8589
  ret i32 %25, !dbg !8604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #4 !dbg !8605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8607, metadata !DIExpression()), !dbg !8608
  ret i32 0, !dbg !8609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8610 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !8628, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8 %1, metadata !8629, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %2, metadata !8630, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8 0, metadata !8631, metadata !DIExpression()), !dbg !8642
  %4 = icmp eq i8 %1, 0, !dbg !8643
  br i1 %4, label %7, label %5, !dbg !8644

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8643
  br label %8, !dbg !8644

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !8645

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8631, metadata !DIExpression()), !dbg !8642
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !8646
  %11 = load i32, i32* %10, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %11, metadata !8633, metadata !DIExpression()), !dbg !8647
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !8648
  %13 = load i8, i8* %12, align 4, !dbg !8648
  call void @llvm.dbg.value(metadata i8 %13, metadata !8636, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8647
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !8649
  %15 = load i32, i32* %14, align 4, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %15, metadata !8637, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i8 %13, metadata !8638, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8647
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !8650
  %17 = load i32, i32* %16, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %17, metadata !8639, metadata !DIExpression()), !dbg !8647
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !8651
  %19 = load i32, i32* %18, align 4, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %19, metadata !8640, metadata !DIExpression()), !dbg !8647
  %20 = and i8 %13, 15, !dbg !8652
  %21 = zext i8 %20 to i32, !dbg !8652
  %22 = lshr i32 %19, 27, !dbg !8653
  %23 = and i32 %22, 16, !dbg !8653
  %24 = or i32 %23, %21, !dbg !8654
  %25 = inttoptr i32 %11 to i32*, !dbg !8655
  store volatile i32 %24, i32* %25, align 4, !dbg !8656
  %26 = icmp eq i32 %15, 0, !dbg !8657
  br i1 %26, label %32, label %27, !dbg !8659

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !8660
  call void @llvm.dbg.value(metadata i8 %28, metadata !8638, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8647
  %29 = and i8 %28, 7, !dbg !8661
  %30 = zext i8 %29 to i32, !dbg !8661
  %31 = inttoptr i32 %15 to i32*, !dbg !8663
  store volatile i32 %30, i32* %31, align 4, !dbg !8664
  br label %32, !dbg !8665

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !8666
  br i1 %33, label %37, label %34, !dbg !8668

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !8669
  %36 = inttoptr i32 %17 to i32*, !dbg !8671
  store volatile i32 %35, i32* %36, align 4, !dbg !8672
  br label %37, !dbg !8673

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %38, metadata !8631, metadata !DIExpression()), !dbg !8642
  %39 = icmp eq i32 %38, %6, !dbg !8643
  br i1 %39, label %7, label %8, !dbg !8644, !llvm.loop !8675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8677 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8734, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %1, metadata !8735, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %2, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %3, metadata !8737, metadata !DIExpression()), !dbg !8738
  %5 = icmp ult i32 %2, 8, !dbg !8739
  br i1 %5, label %7, label %6, !dbg !8742

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 45) #25, !dbg !8743
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 45) #25, !dbg !8743
  unreachable, !dbg !8743

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !8745
  br i1 %8, label %10, label %9, !dbg !8748

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 46) #25, !dbg !8749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 46) #25, !dbg !8749
  unreachable, !dbg !8749

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !8751
  %12 = load volatile i32, i32* %11, align 4, !dbg !8751
  %13 = and i32 %12, -458816, !dbg !8752
  %14 = shl nuw nsw i32 %2, 16, !dbg !8753
  %15 = and i32 %14, 458752, !dbg !8753
  %16 = or i32 %15, %3, !dbg !8754
  %17 = or i32 %16, %13, !dbg !8755
  store volatile i32 %17, i32* %11, align 4, !dbg !8756
  ret void, !dbg !8757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !8758 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8763, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32* %2, metadata !8764, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32* %3, metadata !8765, metadata !DIExpression()), !dbg !8766
  %5 = icmp ne i32* %2, null, !dbg !8767
  %6 = icmp ne i32* %3, null, !dbg !8767
  %7 = and i1 %5, %6, !dbg !8767
  br i1 %7, label %9, label %8, !dbg !8767

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 61) #25, !dbg !8770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 61) #25, !dbg !8770
  unreachable, !dbg !8770

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !8772
  %11 = load volatile i32, i32* %10, align 4, !dbg !8772
  %12 = lshr i32 %11, 16, !dbg !8773
  %13 = and i32 %12, 7, !dbg !8773
  store i32 %13, i32* %2, align 4, !dbg !8774
  %14 = load volatile i32, i32* %10, align 4, !dbg !8775
  %15 = and i32 %14, 63, !dbg !8776
  store i32 %15, i32* %3, align 4, !dbg !8777
  ret void, !dbg !8778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !8779 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !8783, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %1, metadata !8784, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %2, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %3, metadata !8786, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %4, metadata !8787, metadata !DIExpression()), !dbg !8788
  %6 = icmp ult i32 %3, 8, !dbg !8789
  br i1 %6, label %8, label %7, !dbg !8792

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 75) #25, !dbg !8793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 75) #25, !dbg !8793
  unreachable, !dbg !8793

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !8795
  br i1 %9, label %11, label %10, !dbg !8798

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 76) #25, !dbg !8799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.98, i32 0, i32 0), i32 noundef 76) #25, !dbg !8799
  unreachable, !dbg !8799

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !8801
  %13 = load volatile i32, i32* %12, align 4, !dbg !8801
  %14 = and i32 %13, -117899328, !dbg !8802
  %15 = shl i32 %2, 24, !dbg !8803
  %16 = and i32 %15, 117440512, !dbg !8803
  %17 = shl nuw nsw i32 %3, 16, !dbg !8804
  %18 = and i32 %17, 458752, !dbg !8804
  %19 = or i32 %16, %4, !dbg !8805
  %20 = or i32 %19, %18, !dbg !8806
  %21 = or i32 %20, %14, !dbg !8807
  store volatile i32 %21, i32* %12, align 4, !dbg !8808
  ret void, !dbg !8809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8815, metadata !DIExpression()), !dbg !8816
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #24, !dbg !8817
  br i1 %2, label %7, label %3, !dbg !8819

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !8820
  %5 = and i32 %4, 127, !dbg !8821
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !8822
  br label %7, !dbg !8823

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !8816
  ret i32 %8, !dbg !8824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8825 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8829, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i32 %1, metadata !8830, metadata !DIExpression()), !dbg !8831
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !8832
  %4 = and i32 %1, 65535, !dbg !8832
  %5 = add i32 %4, %3, !dbg !8832
  %6 = inttoptr i32 %5 to i32*, !dbg !8832
  %7 = load volatile i32, i32* %6, align 4, !dbg !8832
  %8 = and i32 %7, 65536, !dbg !8833
  %9 = icmp ne i32 %8, 0, !dbg !8834
  ret i1 %9, !dbg !8835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8836 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8838, metadata !DIExpression()), !dbg !8839
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #24, !dbg !8840
  br i1 %2, label %8, label %3, !dbg !8842

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !8843
  %5 = and i32 %4, 1, !dbg !8845
  %6 = icmp eq i32 %5, 0, !dbg !8845
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !8846
  br label %8, !dbg !8846

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !8839
  ret i32 %9, !dbg !8847
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8848 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8850, metadata !DIExpression()), !dbg !8854
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #24, !dbg !8855
  br i1 %2, label %40, label %3, !dbg !8857

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8858
  %5 = trunc i32 %4 to i8, !dbg !8858
  %6 = and i8 %5, 127, !dbg !8858
  call void @llvm.dbg.value(metadata i8 %6, metadata !8851, metadata !DIExpression()), !dbg !8854
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !8859
  %8 = lshr i32 %7, 21, !dbg !8860
  %9 = and i32 %8, 3, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %9, metadata !8852, metadata !DIExpression()), !dbg !8854
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !8862
  %11 = load i32, i32* %10, align 4, !dbg !8862
  call void @llvm.dbg.value(metadata i8 undef, metadata !8852, metadata !DIExpression()), !dbg !8854
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !8863
  %13 = load volatile i32, i32* %12, align 4, !dbg !8863
  %14 = and i32 %13, 32768, !dbg !8865
  %15 = icmp eq i32 %14, 0, !dbg !8865
  br i1 %15, label %36, label %16, !dbg !8866

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !8867
  %18 = and i32 %17, 32767, !dbg !8869
  %19 = uitofp i32 %18 to float, !dbg !8870
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !8871
  %21 = load volatile i32, i32* %20, align 4, !dbg !8871
  %22 = and i32 %21, 1073741823, !dbg !8872
  %23 = uitofp i32 %22 to float, !dbg !8873
  %24 = fdiv float %19, %23, !dbg !8874
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !8875
  %26 = load volatile i32, i32* %25, align 4, !dbg !8875
  %27 = and i32 %26, 1073741823, !dbg !8876
  %28 = uitofp i32 %27 to float, !dbg !8877
  %29 = fmul float %24, %28, !dbg !8878
  call void @llvm.dbg.value(metadata float %29, metadata !8853, metadata !DIExpression()), !dbg !8854
  %30 = lshr i32 24000000, %11, !dbg !8879
  %31 = uitofp i32 %30 to float, !dbg !8880
  %32 = uitofp i8 %6 to float, !dbg !8881
  %33 = fadd float %29, %32, !dbg !8882
  %34 = fmul float %33, %31, !dbg !8883
  %35 = fptoui float %34 to i32, !dbg !8884
  br label %40, !dbg !8885

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !8886
  %38 = zext i8 %6 to i32, !dbg !8888
  %39 = mul nuw i32 %37, %38, !dbg !8889
  br label %40, !dbg !8890

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !8854
  ret i32 %41, !dbg !8891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8892 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8894, metadata !DIExpression()), !dbg !8895
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #24, !dbg !8896
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !8895
  ret i32 %3, !dbg !8898
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8899 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8901, metadata !DIExpression()), !dbg !8906
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #24, !dbg !8907
  br i1 %2, label %47, label %3, !dbg !8909

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8910
  %5 = trunc i32 %4 to i8, !dbg !8910
  %6 = and i8 %5, 127, !dbg !8910
  call void @llvm.dbg.value(metadata i8 %6, metadata !8902, metadata !DIExpression()), !dbg !8906
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8911
  %8 = lshr i32 %7, 22, !dbg !8912
  %9 = and i32 %8, 3, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %8, metadata !8903, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8906
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !8914
  %11 = lshr i32 %10, 19, !dbg !8915
  %12 = and i32 %11, 3, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %11, metadata !8904, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8906
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8917
  %14 = load i32, i32* %13, align 4, !dbg !8917
  call void @llvm.dbg.value(metadata i8 undef, metadata !8903, metadata !DIExpression()), !dbg !8906
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !8918
  %16 = load i32, i32* %15, align 4, !dbg !8918
  call void @llvm.dbg.value(metadata i8 undef, metadata !8904, metadata !DIExpression()), !dbg !8906
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !8919
  %18 = load volatile i32, i32* %17, align 4, !dbg !8919
  %19 = and i32 %18, 32768, !dbg !8921
  %20 = icmp eq i32 %19, 0, !dbg !8921
  br i1 %20, label %42, label %21, !dbg !8922

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8923
  %23 = and i32 %22, 32767, !dbg !8925
  %24 = uitofp i32 %23 to float, !dbg !8926
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !8927
  %26 = load volatile i32, i32* %25, align 4, !dbg !8927
  %27 = and i32 %26, 1073741823, !dbg !8928
  %28 = uitofp i32 %27 to float, !dbg !8929
  %29 = fdiv float %24, %28, !dbg !8930
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !8931
  %31 = load volatile i32, i32* %30, align 4, !dbg !8931
  %32 = and i32 %31, 1073741823, !dbg !8932
  %33 = uitofp i32 %32 to float, !dbg !8933
  %34 = fmul float %29, %33, !dbg !8934
  call void @llvm.dbg.value(metadata float %34, metadata !8905, metadata !DIExpression()), !dbg !8906
  %35 = lshr i32 24000000, %16, !dbg !8935
  %36 = lshr i32 %35, %14, !dbg !8936
  %37 = uitofp i32 %36 to float, !dbg !8937
  %38 = uitofp i8 %6 to float, !dbg !8938
  %39 = fadd float %34, %38, !dbg !8939
  %40 = fmul float %39, %37, !dbg !8940
  %41 = fptoui float %40 to i32, !dbg !8941
  br label %47, !dbg !8942

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8943
  %44 = lshr i32 %43, %14, !dbg !8945
  %45 = zext i8 %6 to i32, !dbg !8946
  %46 = mul nuw i32 %44, %45, !dbg !8947
  br label %47, !dbg !8948

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8906
  ret i32 %48, !dbg !8949
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #16 !dbg !8950 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !8952, metadata !DIExpression()), !dbg !8957
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #24, !dbg !8958
  br i1 %2, label %47, label %3, !dbg !8960

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8961
  %5 = trunc i32 %4 to i8, !dbg !8961
  %6 = and i8 %5, 127, !dbg !8961
  call void @llvm.dbg.value(metadata i8 %6, metadata !8953, metadata !DIExpression()), !dbg !8957
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8962
  %8 = lshr i32 %7, 22, !dbg !8963
  %9 = and i32 %8, 3, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %8, metadata !8954, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8957
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !8965
  %11 = lshr i32 %10, 19, !dbg !8966
  %12 = and i32 %11, 3, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %11, metadata !8955, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !8957
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !8968
  %14 = load i32, i32* %13, align 4, !dbg !8968
  call void @llvm.dbg.value(metadata i8 undef, metadata !8954, metadata !DIExpression()), !dbg !8957
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !8969
  %16 = load i32, i32* %15, align 4, !dbg !8969
  call void @llvm.dbg.value(metadata i8 undef, metadata !8955, metadata !DIExpression()), !dbg !8957
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !8970
  %18 = load volatile i32, i32* %17, align 4, !dbg !8970
  %19 = and i32 %18, 32768, !dbg !8972
  %20 = icmp eq i32 %19, 0, !dbg !8972
  br i1 %20, label %42, label %21, !dbg !8973

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !8974
  %23 = and i32 %22, 32767, !dbg !8976
  %24 = uitofp i32 %23 to float, !dbg !8977
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !8978
  %26 = load volatile i32, i32* %25, align 4, !dbg !8978
  %27 = and i32 %26, 1073741823, !dbg !8979
  %28 = uitofp i32 %27 to float, !dbg !8980
  %29 = fdiv float %24, %28, !dbg !8981
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !8982
  %31 = load volatile i32, i32* %30, align 4, !dbg !8982
  %32 = and i32 %31, 1073741823, !dbg !8983
  %33 = uitofp i32 %32 to float, !dbg !8984
  %34 = fmul float %29, %33, !dbg !8985
  call void @llvm.dbg.value(metadata float %34, metadata !8956, metadata !DIExpression()), !dbg !8957
  %35 = lshr i32 24000000, %16, !dbg !8986
  %36 = lshr i32 %35, %14, !dbg !8987
  %37 = uitofp i32 %36 to float, !dbg !8988
  %38 = uitofp i8 %6 to float, !dbg !8989
  %39 = fadd float %34, %38, !dbg !8990
  %40 = fmul float %39, %37, !dbg !8991
  %41 = fptoui float %40 to i32, !dbg !8992
  br label %47, !dbg !8993

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !8994
  %44 = lshr i32 %43, %14, !dbg !8996
  %45 = zext i8 %6 to i32, !dbg !8997
  %46 = mul nuw i32 %44, %45, !dbg !8998
  br label %47, !dbg !8999

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !8957
  ret i32 %48, !dbg !9000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9005, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.value(metadata i32 %1, metadata !9006, metadata !DIExpression()), !dbg !9009
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #24, !dbg !9010
  br i1 %3, label %4, label %5, !dbg !9013

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 260) #25, !dbg !9014
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 260) #25, !dbg !9014
  unreachable, !dbg !9014

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #24, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %6, metadata !9007, metadata !DIExpression()), !dbg !9009
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #24, !dbg !9017
  call void @llvm.dbg.value(metadata i32 %7, metadata !9008, metadata !DIExpression()), !dbg !9009
  %8 = udiv i32 %6, %7, !dbg !9018
  %9 = mul i32 %8, 18, !dbg !9019
  ret i32 %9, !dbg !9020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9021 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9023, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata i32 %1, metadata !9024, metadata !DIExpression()), !dbg !9025
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9026
  %4 = and i32 %1, 65535, !dbg !9026
  %5 = add i32 %4, %3, !dbg !9026
  %6 = inttoptr i32 %5 to i32*, !dbg !9026
  %7 = load volatile i32, i32* %6, align 4, !dbg !9026
  %8 = lshr i32 %1, 16, !dbg !9027
  %9 = and i32 %8, 31, !dbg !9027
  %10 = lshr i32 %7, %9, !dbg !9028
  %11 = and i32 %10, 63, !dbg !9029
  ret i32 %11, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9031 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9058, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !9059, metadata !DIExpression()), !dbg !9062
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9063
  store volatile i32 0, i32* %3, align 4, !dbg !9064
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9065
  store volatile i32 0, i32* %4, align 4, !dbg !9066
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !9067
  %6 = load i32, i32* %5, align 4, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !9060, metadata !DIExpression()), !dbg !9062
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !9068
  %8 = load i32, i32* %7, align 4, !dbg !9068
  %9 = icmp eq i32 %8, 1, !dbg !9070
  %10 = shl nuw i32 1, %6, !dbg !9071
  br i1 %9, label %11, label %15, !dbg !9072

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9073
  %13 = load volatile i32, i32* %12, align 4, !dbg !9074
  %14 = or i32 %13, %10, !dbg !9074
  store volatile i32 %14, i32* %12, align 4, !dbg !9074
  br label %20, !dbg !9073

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !9075
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !9076
  %18 = load volatile i32, i32* %17, align 4, !dbg !9077
  %19 = and i32 %18, %16, !dbg !9077
  store volatile i32 %19, i32* %17, align 4, !dbg !9077
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !9078
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !9080
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !9080
  %24 = add i32 %6, -16, !dbg !9080
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !9080
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !9080
  call void @llvm.dbg.value(metadata i32* %26, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32 %25, metadata !9060, metadata !DIExpression()), !dbg !9062
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !9081
  %28 = load i32, i32* %27, align 4, !dbg !9081
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !9082

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !9083
  %31 = shl i32 3, %30, !dbg !9086
  %32 = xor i32 %31, -1, !dbg !9087
  %33 = load volatile i32, i32* %26, align 4, !dbg !9088
  %34 = and i32 %33, %32, !dbg !9088
  br label %56, !dbg !9089

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !9090
  %37 = shl i32 %25, 1, !dbg !9092
  %38 = shl i32 3, %37, !dbg !9093
  %39 = xor i32 %38, -1, !dbg !9094
  %40 = and i32 %36, %39, !dbg !9095
  %41 = shl nuw i32 1, %37, !dbg !9096
  %42 = or i32 %40, %41, !dbg !9097
  br label %56, !dbg !9098

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !9099
  %45 = shl i32 %25, 1, !dbg !9101
  %46 = shl i32 3, %45, !dbg !9102
  %47 = xor i32 %46, -1, !dbg !9103
  %48 = and i32 %44, %47, !dbg !9104
  %49 = shl i32 2, %45, !dbg !9105
  %50 = or i32 %48, %49, !dbg !9106
  br label %56, !dbg !9107

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !9108
  %53 = shl i32 3, %52, !dbg !9110
  %54 = load volatile i32, i32* %26, align 4, !dbg !9111
  %55 = or i32 %54, %53, !dbg !9111
  br label %56, !dbg !9112

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !9113
  br label %58, !dbg !9114

58:                                               ; preds = %56, %20
  ret void, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9120, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i32 %1, metadata !9121, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.value(metadata i32 %2, metadata !9122, metadata !DIExpression()), !dbg !9123
  %4 = icmp ult i32 %1, 32, !dbg !9124
  br i1 %4, label %6, label %5, !dbg !9127

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 113) #25, !dbg !9128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 113) #25, !dbg !9128
  unreachable, !dbg !9128

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !9130
  %8 = shl nuw i32 1, %1, !dbg !9132
  br i1 %7, label %9, label %13, !dbg !9133

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9134
  %11 = load volatile i32, i32* %10, align 4, !dbg !9136
  %12 = or i32 %11, %8, !dbg !9136
  store volatile i32 %12, i32* %10, align 4, !dbg !9136
  br label %18, !dbg !9137

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !9138
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9140
  %16 = load volatile i32, i32* %15, align 4, !dbg !9141
  %17 = and i32 %16, %14, !dbg !9141
  store volatile i32 %17, i32* %15, align 4, !dbg !9141
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %1, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i1 %2, metadata !9149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9150
  %4 = icmp ult i32 %1, 32, !dbg !9151
  br i1 %4, label %6, label %5, !dbg !9154

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 135) #25, !dbg !9155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 135) #25, !dbg !9155
  unreachable, !dbg !9155

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !9157
  br i1 %2, label %8, label %12, !dbg !9159

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9160
  %10 = load volatile i32, i32* %9, align 4, !dbg !9161
  %11 = or i32 %10, %7, !dbg !9161
  store volatile i32 %11, i32* %9, align 4, !dbg !9161
  br label %17, !dbg !9160

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !9162
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !9163
  %15 = load volatile i32, i32* %14, align 4, !dbg !9164
  %16 = and i32 %15, %13, !dbg !9164
  store volatile i32 %16, i32* %14, align 4, !dbg !9164
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9168, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i32 %1, metadata !9169, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i1 %2, metadata !9170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9171
  %4 = icmp ult i32 %1, 32, !dbg !9172
  br i1 %4, label %6, label %5, !dbg !9175

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 152) #25, !dbg !9176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.110, i32 0, i32 0), i32 noundef 152) #25, !dbg !9176
  unreachable, !dbg !9176

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !9178
  br i1 %2, label %8, label %12, !dbg !9180

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9181
  %10 = load volatile i32, i32* %9, align 4, !dbg !9182
  %11 = or i32 %10, %7, !dbg !9182
  store volatile i32 %11, i32* %9, align 4, !dbg !9182
  br label %17, !dbg !9181

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !9183
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !9184
  %15 = load volatile i32, i32* %14, align 4, !dbg !9185
  %16 = and i32 %15, %13, !dbg !9185
  store volatile i32 %16, i32* %14, align 4, !dbg !9185
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9226, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !9227, metadata !DIExpression()), !dbg !9228
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !9229
  br i1 %3, label %4, label %5, !dbg !9232

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 49) #25, !dbg !9233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 49) #25, !dbg !9233
  unreachable, !dbg !9233

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9235
  %7 = load volatile i32, i32* %6, align 4, !dbg !9236
  %8 = and i32 %7, -2, !dbg !9236
  store volatile i32 %8, i32* %6, align 4, !dbg !9236
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #24, !dbg !9237
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !9238
  %10 = load i32, i32* %9, align 4, !dbg !9238
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !9239
  %12 = load i32, i32* %11, align 4, !dbg !9239
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !9240
  %14 = load i32, i32* %13, align 4, !dbg !9240
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !9241
  %16 = load i32, i32* %15, align 4, !dbg !9241
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9242
  %18 = load volatile i32, i32* %17, align 4, !dbg !9243
  %19 = or i32 %10, %12, !dbg !9244
  %20 = or i32 %19, %14, !dbg !9245
  %21 = or i32 %20, %16, !dbg !9246
  %22 = or i32 %21, %18, !dbg !9243
  %23 = or i32 %22, 16384, !dbg !9243
  store volatile i32 %23, i32* %17, align 4, !dbg !9243
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9247
  %25 = load volatile i32, i32* %24, align 4, !dbg !9248
  %26 = or i32 %25, 4, !dbg !9248
  store volatile i32 %26, i32* %24, align 4, !dbg !9248
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !9249
  %28 = load i32, i32* %27, align 4, !dbg !9249
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !9250
  %30 = load i32, i32* %29, align 4, !dbg !9250
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #24, !dbg !9251
  ret void, !dbg !9252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !9253 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9257, metadata !DIExpression()), !dbg !9258
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9259
  %3 = load volatile i32, i32* %2, align 4, !dbg !9260
  %4 = and i32 %3, -2, !dbg !9260
  store volatile i32 %4, i32* %2, align 4, !dbg !9260
  store volatile i32 0, i32* %2, align 4, !dbg !9261
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9262
  store volatile i32 1, i32* %5, align 4, !dbg !9263
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9264
  store volatile i32 1792, i32* %6, align 4, !dbg !9265
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9266
  store volatile i32 32768, i32* %7, align 4, !dbg !9267
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9268
  store volatile i32 2049, i32* %8, align 4, !dbg !9269
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !9270
  store volatile i32 43, i32* %9, align 4, !dbg !9271
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !9272
  store volatile i32 0, i32* %10, align 4, !dbg !9273
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9274
  store volatile i32 0, i32* %11, align 4, !dbg !9275
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !9276
  store volatile i32 96, i32* %12, align 4, !dbg !9277
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9278
  store volatile i32 0, i32* %13, align 4, !dbg !9279
  %14 = load volatile i32, i32* %5, align 4, !dbg !9280
  %15 = and i32 %14, -2, !dbg !9280
  store volatile i32 %15, i32* %5, align 4, !dbg !9280
  br label %16, !dbg !9281

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !9282
  %18 = and i32 %17, 1, !dbg !9283
  %19 = icmp eq i32 %18, 0, !dbg !9284
  br i1 %19, label %16, label %20, !dbg !9281, !llvm.loop !9285

20:                                               ; preds = %16
  ret void, !dbg !9287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9292, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %2, metadata !9294, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 1, metadata !9299, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %1, metadata !9295, metadata !DIExpression()), !dbg !9305
  %4 = shl i32 %2, 4, !dbg !9306
  call void @llvm.dbg.value(metadata i32 %4, metadata !9296, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 1, metadata !9297, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %1, metadata !9295, metadata !DIExpression()), !dbg !9305
  %5 = icmp eq i32 %4, 0, !dbg !9307
  br i1 %5, label %11, label %6, !dbg !9308

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9295, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %8, metadata !9296, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %8, metadata !9297, metadata !DIExpression()), !dbg !9305
  %9 = urem i32 %7, %8, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %8, metadata !9295, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %9, metadata !9296, metadata !DIExpression()), !dbg !9305
  %10 = icmp eq i32 %9, 0, !dbg !9307
  br i1 %10, label %11, label %6, !dbg !9308, !llvm.loop !9311

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !9305
  %13 = udiv i32 %1, %12, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %13, metadata !9295, metadata !DIExpression()), !dbg !9305
  %14 = udiv i32 %4, %12, !dbg !9314
  call void @llvm.dbg.value(metadata i32 %14, metadata !9296, metadata !DIExpression()), !dbg !9305
  %15 = icmp ugt i32 %13, 458745, !dbg !9315
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !9316
  br i1 %17, label %18, label %33, !dbg !9316

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !9317
  %20 = udiv i32 %19, 458745, !dbg !9318
  %21 = add nuw nsw i32 %20, 1, !dbg !9319
  call void @llvm.dbg.value(metadata i32 %21, metadata !9300, metadata !DIExpression()), !dbg !9320
  %22 = add i32 %14, -1, !dbg !9321
  %23 = udiv i32 %22, 65535, !dbg !9322
  %24 = add nuw nsw i32 %23, 1, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %24, metadata !9303, metadata !DIExpression()), !dbg !9320
  %25 = icmp ugt i32 %21, %24, !dbg !9324
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !9325
  call void @llvm.dbg.value(metadata i32 %26, metadata !9304, metadata !DIExpression()), !dbg !9320
  %27 = udiv i32 %13, %26, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %27, metadata !9295, metadata !DIExpression()), !dbg !9305
  %28 = udiv i32 %14, %26, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %28, metadata !9296, metadata !DIExpression()), !dbg !9305
  %29 = icmp ugt i32 %26, %13, !dbg !9328
  %30 = select i1 %29, i32 1, i32 %27, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %30, metadata !9295, metadata !DIExpression()), !dbg !9305
  %31 = icmp ugt i32 %26, %14, !dbg !9331
  %32 = select i1 %31, i32 1, i32 %28, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %32, metadata !9296, metadata !DIExpression()), !dbg !9305
  br label %33, !dbg !9334

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !9305
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !9305
  call void @llvm.dbg.value(metadata i32 %35, metadata !9295, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata i32 %34, metadata !9296, metadata !DIExpression()), !dbg !9305
  %36 = add i32 %35, -1, !dbg !9335
  %37 = udiv i32 %36, 65535, !dbg !9336
  %38 = add nuw nsw i32 %37, 1, !dbg !9337
  call void @llvm.dbg.value(metadata i32 %38, metadata !9299, metadata !DIExpression()), !dbg !9305
  %39 = add nsw i32 %37, -1, !dbg !9338
  %40 = icmp ult i32 %39, 6, !dbg !9338
  br i1 %40, label %41, label %44, !dbg !9338

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !9338
  %43 = load i32, i32* %42, align 4, !dbg !9338
  br label %44, !dbg !9338

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !9339
  call void @llvm.dbg.value(metadata i32 %45, metadata !9298, metadata !DIExpression()), !dbg !9305
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9341
  %47 = load volatile i32, i32* %46, align 4, !dbg !9342
  %48 = and i32 %47, -897, !dbg !9342
  store volatile i32 %48, i32* %46, align 4, !dbg !9342
  %49 = load volatile i32, i32* %46, align 4, !dbg !9343
  %50 = or i32 %49, %45, !dbg !9343
  store volatile i32 %50, i32* %46, align 4, !dbg !9343
  %51 = add i32 %34, 65535, !dbg !9344
  %52 = and i32 %51, 65535, !dbg !9344
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !9345
  store volatile i32 %52, i32* %53, align 4, !dbg !9346
  %54 = udiv i32 %35, %38, !dbg !9347
  %55 = add i32 %54, 65535, !dbg !9347
  %56 = and i32 %55, 65535, !dbg !9347
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !9348
  store volatile i32 %56, i32* %57, align 4, !dbg !9349
  %58 = mul nuw nsw i32 %38, 1000, !dbg !9350
  %59 = udiv i32 %1, %58, !dbg !9350
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !9351
  store volatile i32 %59, i32* %60, align 4, !dbg !9352
  ret void, !dbg !9353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !9354 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9358, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 %1, metadata !9359, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i1 %2, metadata !9360, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9361
  %4 = and i32 %1, 4, !dbg !9362
  %5 = icmp eq i32 %4, 0, !dbg !9362
  %6 = and i32 %1, 2, !dbg !9362
  %7 = icmp eq i32 %6, 0, !dbg !9362
  %8 = and i32 %1, 6, !dbg !9362
  %9 = icmp eq i32 %8, 0, !dbg !9362
  br i1 %9, label %10, label %11, !dbg !9362

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 196) #25, !dbg !9365
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 196) #25, !dbg !9365
  unreachable, !dbg !9365

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !9367

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !9368

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9371
  %15 = load volatile i32, i32* %14, align 4, !dbg !9373
  %16 = or i32 %15, 512, !dbg !9373
  store volatile i32 %16, i32* %14, align 4, !dbg !9373
  br label %17, !dbg !9371

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !9374

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9375
  %20 = load volatile i32, i32* %19, align 4, !dbg !9377
  %21 = or i32 %20, 2, !dbg !9377
  store volatile i32 %21, i32* %19, align 4, !dbg !9377
  br label %32, !dbg !9375

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !9378

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9380
  %25 = load volatile i32, i32* %24, align 4, !dbg !9382
  %26 = and i32 %25, -513, !dbg !9382
  store volatile i32 %26, i32* %24, align 4, !dbg !9382
  br label %27, !dbg !9380

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !9383

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9384
  %30 = load volatile i32, i32* %29, align 4, !dbg !9386
  %31 = and i32 %30, -3, !dbg !9386
  store volatile i32 %31, i32* %29, align 4, !dbg !9386
  br label %32, !dbg !9384

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !9387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9388 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i1 %1, metadata !9393, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9394
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9395
  %4 = load volatile i32, i32* %3, align 4, !dbg !9395
  %5 = and i32 %4, 2, !dbg !9397
  %6 = select i1 %1, i32 0, i32 -3, !dbg !9397
  %7 = or i32 %5, %6, !dbg !9397
  store volatile i32 %7, i32* %3, align 4, !dbg !9395
  ret void, !dbg !9398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9401, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i1 %1, metadata !9402, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9403
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9404
  %4 = load volatile i32, i32* %3, align 4, !dbg !9404
  %5 = and i32 %4, -17, !dbg !9406
  %6 = select i1 %1, i32 0, i32 16, !dbg !9406
  %7 = or i32 %5, %6, !dbg !9406
  store volatile i32 %7, i32* %3, align 4, !dbg !9404
  ret void, !dbg !9407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9410, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 %1, metadata !9411, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i1 %2, metadata !9412, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9415
  call void @llvm.dbg.value(metadata i32* null, metadata !9413, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 0, metadata !9414, metadata !DIExpression()), !dbg !9415
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9416
  %5 = lshr i32 %1, 16, !dbg !9417
  %6 = add i32 %5, %4, !dbg !9418
  %7 = inttoptr i32 %6 to i32*, !dbg !9419
  call void @llvm.dbg.value(metadata i32* %7, metadata !9413, metadata !DIExpression()), !dbg !9415
  %8 = and i32 %1, 65535, !dbg !9420
  %9 = shl nuw i32 1, %8, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %9, metadata !9414, metadata !DIExpression()), !dbg !9415
  br i1 %2, label %10, label %13, !dbg !9422

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9423
  %12 = or i32 %11, %9, !dbg !9423
  br label %17, !dbg !9425

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9426
  %15 = load volatile i32, i32* %7, align 4, !dbg !9427
  %16 = and i32 %15, %14, !dbg !9427
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9428
  ret void, !dbg !9429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9430 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9434, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 %1, metadata !9435, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32* null, metadata !9436, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 0, metadata !9437, metadata !DIExpression()), !dbg !9438
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9439
  %4 = lshr i32 %1, 16, !dbg !9440
  %5 = add i32 %4, %3, !dbg !9441
  %6 = inttoptr i32 %5 to i32*, !dbg !9442
  call void @llvm.dbg.value(metadata i32* %6, metadata !9436, metadata !DIExpression()), !dbg !9438
  %7 = and i32 %1, 65535, !dbg !9443
  %8 = shl nuw i32 1, %7, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %8, metadata !9437, metadata !DIExpression()), !dbg !9438
  store volatile i32 %8, i32* %6, align 4, !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #15 !dbg !9447 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9449, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 %1, metadata !9450, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i1 %2, metadata !9451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9454
  call void @llvm.dbg.value(metadata i32* null, metadata !9452, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 0, metadata !9453, metadata !DIExpression()), !dbg !9454
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9455
  %5 = lshr i32 %1, 16, !dbg !9456
  %6 = add i32 %5, %4, !dbg !9457
  %7 = inttoptr i32 %6 to i32*, !dbg !9458
  call void @llvm.dbg.value(metadata i32* %7, metadata !9452, metadata !DIExpression()), !dbg !9454
  %8 = and i32 %1, 65535, !dbg !9459
  %9 = shl nuw i32 1, %8, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %9, metadata !9453, metadata !DIExpression()), !dbg !9454
  br i1 %2, label %10, label %13, !dbg !9461

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !9462
  %12 = or i32 %11, %9, !dbg !9462
  br label %17, !dbg !9464

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !9465
  %15 = load volatile i32, i32* %7, align 4, !dbg !9466
  %16 = and i32 %15, %14, !dbg !9466
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !9467
  ret void, !dbg !9468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9471, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i1 %1, metadata !9472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9473
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9474
  %4 = load volatile i32, i32* %3, align 4, !dbg !9474
  %5 = and i32 %4, -16385, !dbg !9476
  %6 = select i1 %1, i32 0, i32 16384, !dbg !9476
  %7 = or i32 %5, %6, !dbg !9476
  store volatile i32 %7, i32* %3, align 4, !dbg !9474
  ret void, !dbg !9477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9478 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i1 %1, metadata !9481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9482
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9483
  %4 = load volatile i32, i32* %3, align 4, !dbg !9483
  %5 = and i32 %4, -8193, !dbg !9485
  %6 = select i1 %1, i32 8192, i32 0, !dbg !9485
  %7 = or i32 %5, %6, !dbg !9485
  store volatile i32 %7, i32* %3, align 4, !dbg !9483
  ret void, !dbg !9486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9489, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata i1 %1, metadata !9490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9491
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9492
  %4 = load volatile i32, i32* %3, align 4, !dbg !9492
  %5 = and i32 %4, -4097, !dbg !9494
  %6 = select i1 %1, i32 4096, i32 0, !dbg !9494
  %7 = or i32 %5, %6, !dbg !9494
  store volatile i32 %7, i32* %3, align 4, !dbg !9492
  ret void, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %1, metadata !9499, metadata !DIExpression()), !dbg !9500
  %3 = and i32 %1, -65, !dbg !9501
  %4 = icmp eq i32 %3, 0, !dbg !9501
  br i1 %4, label %6, label %5, !dbg !9501

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 396) #25, !dbg !9504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 396) #25, !dbg !9504
  unreachable, !dbg !9504

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !9501
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9506
  %9 = load volatile i32, i32* %8, align 4, !dbg !9506
  %10 = and i32 %9, -65, !dbg !9508
  %11 = select i1 %7, i32 0, i32 64, !dbg !9508
  %12 = or i32 %10, %11, !dbg !9508
  store volatile i32 %12, i32* %8, align 4, !dbg !9506
  ret void, !dbg !9509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i1 %1, metadata !9513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9514
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9515
  %4 = load volatile i32, i32* %3, align 4, !dbg !9515
  %5 = and i32 %4, -1025, !dbg !9517
  %6 = select i1 %1, i32 1024, i32 0, !dbg !9517
  %7 = or i32 %5, %6, !dbg !9517
  store volatile i32 %7, i32* %3, align 4, !dbg !9515
  ret void, !dbg !9518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9519 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9521, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata i1 %1, metadata !9522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9523
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9524
  %4 = load volatile i32, i32* %3, align 4, !dbg !9524
  %5 = and i32 %4, -513, !dbg !9526
  %6 = select i1 %1, i32 512, i32 0, !dbg !9526
  %7 = or i32 %5, %6, !dbg !9526
  store volatile i32 %7, i32* %3, align 4, !dbg !9524
  ret void, !dbg !9527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9528 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9530, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i1 %1, metadata !9531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9532
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !9533
  %4 = load volatile i32, i32* %3, align 4, !dbg !9533
  %5 = and i32 %4, -257, !dbg !9535
  %6 = select i1 %1, i32 256, i32 0, !dbg !9535
  %7 = or i32 %5, %6, !dbg !9535
  store volatile i32 %7, i32* %3, align 4, !dbg !9533
  ret void, !dbg !9536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !9537 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i16 %1, metadata !9542, metadata !DIExpression()), !dbg !9543
  %3 = zext i16 %1 to i32, !dbg !9544
  %4 = icmp ult i16 %1, 512, !dbg !9544
  br i1 %4, label %6, label %5, !dbg !9547

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 462) #25, !dbg !9548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 462) #25, !dbg !9548
  unreachable, !dbg !9548

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9550
  %8 = load volatile i32, i32* %7, align 4, !dbg !9550
  %9 = and i32 %8, -5, !dbg !9552
  %10 = lshr i32 %3, 6, !dbg !9552
  %11 = and i32 %10, 4, !dbg !9552
  %12 = or i32 %9, %11, !dbg !9552
  store volatile i32 %12, i32* %7, align 4, !dbg !9550
  %13 = and i32 %3, 255, !dbg !9553
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9554
  store volatile i32 %13, i32* %14, align 4, !dbg !9555
  ret void, !dbg !9556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !9557 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9561, metadata !DIExpression()), !dbg !9563
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9564
  %3 = load volatile i32, i32* %2, align 4, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %3, metadata !9562, metadata !DIExpression()), !dbg !9563
  %4 = trunc i32 %3 to i16, !dbg !9565
  %5 = and i16 %4, 255, !dbg !9565
  %6 = lshr i16 %4, 2, !dbg !9565
  %7 = and i16 %6, 256, !dbg !9565
  %8 = or i16 %7, %5, !dbg !9565
  call void @llvm.dbg.value(metadata i16 %8, metadata !9562, metadata !DIExpression()), !dbg !9563
  ret i16 %8, !dbg !9566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i1 %1, metadata !9570, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9571
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9572
  %4 = load volatile i32, i32* %3, align 4, !dbg !9572
  %5 = and i32 %4, -2, !dbg !9574
  %6 = zext i1 %1 to i32, !dbg !9574
  %7 = or i32 %5, %6, !dbg !9574
  store volatile i32 %7, i32* %3, align 4, !dbg !9572
  ret void, !dbg !9575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9576 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9578, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.value(metadata i1 %1, metadata !9579, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9580
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !9581
  %4 = load volatile i32, i32* %3, align 4, !dbg !9581
  %5 = and i32 %4, -3, !dbg !9583
  %6 = select i1 %1, i32 2, i32 0, !dbg !9583
  %7 = or i32 %5, %6, !dbg !9583
  store volatile i32 %7, i32* %3, align 4, !dbg !9581
  ret void, !dbg !9584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9587, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i1 %1, metadata !9588, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9589
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9590
  %4 = load volatile i32, i32* %3, align 4, !dbg !9590
  %5 = and i32 %4, -129, !dbg !9592
  %6 = select i1 %1, i32 128, i32 0, !dbg !9592
  %7 = or i32 %5, %6, !dbg !9592
  store volatile i32 %7, i32* %3, align 4, !dbg !9590
  ret void, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32 %1, metadata !9597, metadata !DIExpression()), !dbg !9598
  %3 = and i32 %1, -33, !dbg !9599
  %4 = icmp eq i32 %3, 0, !dbg !9599
  br i1 %4, label %6, label %5, !dbg !9599

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 553) #25, !dbg !9602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 553) #25, !dbg !9602
  unreachable, !dbg !9602

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !9599
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !9604
  %9 = load volatile i32, i32* %8, align 4, !dbg !9604
  %10 = and i32 %9, -33, !dbg !9606
  %11 = select i1 %7, i32 32, i32 0, !dbg !9606
  %12 = or i32 %10, %11, !dbg !9606
  store volatile i32 %12, i32* %8, align 4, !dbg !9604
  ret void, !dbg !9607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9610, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i1 %1, metadata !9611, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9612
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9613
  %4 = load volatile i32, i32* %3, align 4, !dbg !9613
  %5 = and i32 %4, -16385, !dbg !9615
  %6 = select i1 %1, i32 16384, i32 0, !dbg !9615
  %7 = or i32 %5, %6, !dbg !9615
  store volatile i32 %7, i32* %3, align 4, !dbg !9613
  ret void, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9619, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i1 %1, metadata !9620, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9621
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9622
  %4 = load volatile i32, i32* %3, align 4, !dbg !9622
  %5 = and i32 %4, -17, !dbg !9624
  %6 = select i1 %1, i32 16, i32 0, !dbg !9624
  %7 = or i32 %5, %6, !dbg !9624
  store volatile i32 %7, i32* %3, align 4, !dbg !9622
  ret void, !dbg !9625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #15 !dbg !9626 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9628, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i1 %1, metadata !9629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9630
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !9631
  %4 = load volatile i32, i32* %3, align 4, !dbg !9631
  %5 = and i32 %4, -2049, !dbg !9633
  %6 = select i1 %1, i32 2048, i32 0, !dbg !9633
  %7 = or i32 %5, %6, !dbg !9633
  store volatile i32 %7, i32* %3, align 4, !dbg !9631
  ret void, !dbg !9634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !9635 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !9654, metadata !DIExpression()), !dbg !9659
  %4 = bitcast i32* %2 to i8*, !dbg !9660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9660
  %5 = bitcast i32* %3 to i8*, !dbg !9660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9660
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !9661
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !9662

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9655, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.value(metadata i32* %2, metadata !9657, metadata !DIExpression(DW_OP_deref)), !dbg !9659
  call void @llvm.dbg.value(metadata i32* %3, metadata !9658, metadata !DIExpression(DW_OP_deref)), !dbg !9659
  br label %8, !dbg !9663

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9665
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %10, metadata !9655, metadata !DIExpression()), !dbg !9659
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !9666

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #25, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %12, metadata !9656, metadata !DIExpression()), !dbg !9659
  br label %13, !dbg !9669

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9670
  call void @llvm.dbg.value(metadata i32 %14, metadata !9656, metadata !DIExpression()), !dbg !9659
  %15 = load i32, i32* %2, align 4, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %15, metadata !9657, metadata !DIExpression()), !dbg !9659
  %16 = add i32 %15, 1, !dbg !9672
  %17 = udiv i32 %14, %16, !dbg !9673
  %18 = load i32, i32* %3, align 4, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %18, metadata !9658, metadata !DIExpression()), !dbg !9659
  %19 = add i32 %18, 1, !dbg !9675
  %20 = udiv i32 %17, %19, !dbg !9676
  br label %21, !dbg !9677

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9678
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9678
  ret i32 %22, !dbg !9678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #16 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !9683, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i32 %0, metadata !9684, metadata !DIExpression()), !dbg !9685
  %2 = inttoptr i32 %0 to i32*, !dbg !9686
  %3 = load volatile i32, i32* %2, align 4, !dbg !9686
  %4 = lshr i32 %3, 24, !dbg !9687
  %5 = and i32 %4, 7, !dbg !9687
  ret i32 %5, !dbg !9688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !9689 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !9711, metadata !DIExpression()), !dbg !9716
  %4 = bitcast i32* %2 to i8*, !dbg !9717
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9717
  %5 = bitcast i32* %3 to i8*, !dbg !9717
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9717
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !9718
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !9719

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9712, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32* %2, metadata !9714, metadata !DIExpression(DW_OP_deref)), !dbg !9716
  call void @llvm.dbg.value(metadata i32* %3, metadata !9715, metadata !DIExpression(DW_OP_deref)), !dbg !9716
  br label %8, !dbg !9720

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9722
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !9722
  call void @llvm.dbg.value(metadata i32 %10, metadata !9712, metadata !DIExpression()), !dbg !9716
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !9723

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #25, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %12, metadata !9713, metadata !DIExpression()), !dbg !9716
  br label %13, !dbg !9726

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !9727
  call void @llvm.dbg.value(metadata i32 %14, metadata !9713, metadata !DIExpression()), !dbg !9716
  %15 = load i32, i32* %2, align 4, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %15, metadata !9714, metadata !DIExpression()), !dbg !9716
  %16 = add i32 %15, 1, !dbg !9729
  %17 = udiv i32 %14, %16, !dbg !9730
  %18 = load i32, i32* %3, align 4, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %18, metadata !9715, metadata !DIExpression()), !dbg !9716
  %19 = add i32 %18, 1, !dbg !9732
  %20 = udiv i32 %17, %19, !dbg !9733
  br label %21, !dbg !9734

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !9716
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9735
  ret i32 %22, !dbg !9735
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !9736 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !9782, metadata !DIExpression()), !dbg !9787
  %4 = bitcast i32* %2 to i8*, !dbg !9788
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9788
  %5 = bitcast i32* %3 to i8*, !dbg !9788
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9788
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !9789
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !9790

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !9783, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32* %2, metadata !9785, metadata !DIExpression(DW_OP_deref)), !dbg !9787
  call void @llvm.dbg.value(metadata i32* %3, metadata !9786, metadata !DIExpression(DW_OP_deref)), !dbg !9787
  br label %8, !dbg !9791

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #24, !dbg !9793
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %10, metadata !9783, metadata !DIExpression()), !dbg !9787
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !9794

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !9795
  %13 = lshr i32 %12, 2, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %13, metadata !9784, metadata !DIExpression()), !dbg !9787
  br label %16, !dbg !9798

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %15, metadata !9784, metadata !DIExpression()), !dbg !9787
  br label %16, !dbg !9800

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %17, metadata !9784, metadata !DIExpression()), !dbg !9787
  %18 = load i32, i32* %2, align 4, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %18, metadata !9785, metadata !DIExpression()), !dbg !9787
  %19 = add i32 %18, 1, !dbg !9803
  %20 = udiv i32 %17, %19, !dbg !9804
  %21 = load i32, i32* %3, align 4, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %21, metadata !9786, metadata !DIExpression()), !dbg !9787
  %22 = add i32 %21, 1, !dbg !9806
  %23 = udiv i32 %20, %22, !dbg !9807
  br label %24, !dbg !9808

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !9787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9809
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9809
  ret i32 %25, !dbg !9809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !9810 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !9828, metadata !DIExpression()), !dbg !9833
  %4 = bitcast i32* %2 to i8*, !dbg !9834
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9834
  %5 = bitcast i32* %3 to i8*, !dbg !9834
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9834
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !9835
  %7 = add i32 %6, -815923200, !dbg !9836
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !9836
  %9 = icmp ult i32 %8, 4, !dbg !9836
  br i1 %9, label %10, label %25, !dbg !9836

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !9836
  %12 = add i32 %11, 809020800, !dbg !9836
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #24, !dbg !9837
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %13, metadata !9829, metadata !DIExpression()), !dbg !9833
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !9839

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !9840
  %16 = lshr i32 %15, 2, !dbg !9842
  call void @llvm.dbg.value(metadata i32 %16, metadata !9830, metadata !DIExpression()), !dbg !9833
  br label %17, !dbg !9843

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %18, metadata !9830, metadata !DIExpression()), !dbg !9833
  %19 = load i32, i32* %2, align 4, !dbg !9845
  call void @llvm.dbg.value(metadata i32 %19, metadata !9831, metadata !DIExpression()), !dbg !9833
  %20 = add i32 %19, 1, !dbg !9846
  %21 = udiv i32 %18, %20, !dbg !9847
  %22 = load i32, i32* %3, align 4, !dbg !9848
  call void @llvm.dbg.value(metadata i32 %22, metadata !9832, metadata !DIExpression()), !dbg !9833
  %23 = add i32 %22, 1, !dbg !9849
  %24 = udiv i32 %21, %23, !dbg !9850
  br label %25, !dbg !9851

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !9833
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9852
  ret i32 %26, !dbg !9852
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !9853 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9880, metadata !DIExpression()), !dbg !9885
  %4 = bitcast i32* %2 to i8*, !dbg !9886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9886
  %5 = bitcast i32* %3 to i8*, !dbg !9886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9886
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9887
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !9888

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9889

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9891

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9892

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9893

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9894

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %2, metadata !9883, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  call void @llvm.dbg.value(metadata i32* %3, metadata !9884, metadata !DIExpression(DW_OP_deref)), !dbg !9885
  br label %13, !dbg !9895

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #24, !dbg !9896
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !9896
  call void @llvm.dbg.value(metadata i32 %15, metadata !9881, metadata !DIExpression()), !dbg !9885
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !9897

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !9898
  %18 = lshr i32 %17, 1, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %18, metadata !9882, metadata !DIExpression()), !dbg !9885
  br label %21, !dbg !9901

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %20, metadata !9882, metadata !DIExpression()), !dbg !9885
  br label %21, !dbg !9903

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !9904
  call void @llvm.dbg.value(metadata i32 %22, metadata !9882, metadata !DIExpression()), !dbg !9885
  %23 = load i32, i32* %2, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %23, metadata !9883, metadata !DIExpression()), !dbg !9885
  %24 = add i32 %23, 1, !dbg !9906
  %25 = udiv i32 %22, %24, !dbg !9907
  %26 = load i32, i32* %3, align 4, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %26, metadata !9884, metadata !DIExpression()), !dbg !9885
  %27 = add i32 %26, 1, !dbg !9909
  %28 = udiv i32 %25, %27, !dbg !9910
  br label %29, !dbg !9911

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !9885
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9912
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !9912
  ret i32 %30, !dbg !9912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9916, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.value(metadata i32 undef, metadata !9916, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.value(metadata i32 undef, metadata !9916, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !9932
  ret void, !dbg !9933
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !9934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9938, metadata !DIExpression()), !dbg !9940
  %2 = icmp eq i8* %0, null, !dbg !9941
  br i1 %2, label %29, label %3, !dbg !9943

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !9944
  %5 = icmp eq i8 %4, 0, !dbg !9945
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !9946
  br i1 %6, label %29, label %8, !dbg !9946

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !9939, metadata !DIExpression()), !dbg !9940
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !9947

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !9939, metadata !DIExpression()), !dbg !9940
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !9949
  br i1 %10, label %11, label %15, !dbg !9954

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !9955
  %13 = load i8*, i8** %12, align 4, !dbg !9955
  %14 = icmp eq i8* %13, %0, !dbg !9956
  br i1 %14, label %29, label %15, !dbg !9957

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !9958
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !9939, metadata !DIExpression()), !dbg !9940
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9959
  br i1 %17, label %7, label %8, !dbg !9960, !llvm.loop !9961

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !9939, metadata !DIExpression()), !dbg !9940
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !9963
  br i1 %20, label %21, label %26, !dbg !9967

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !9968
  %23 = load i8*, i8** %22, align 4, !dbg !9968
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !9969
  %25 = icmp eq i32 %24, 0, !dbg !9970
  br i1 %25, label %29, label %26, !dbg !9971

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !9972
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !9939, metadata !DIExpression()), !dbg !9940
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !9973
  br i1 %28, label %29, label %18, !dbg !9947, !llvm.loop !9974

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !9940
  ret %struct.device* %30, !dbg !9976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #7 !dbg !9977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = icmp eq %struct.device* %0, null, !dbg !9983
  br i1 %2, label %14, label %3, !dbg !9985

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9986
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !9986
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !9987
  %7 = load i8, i8* %6, align 1, !dbg !9987
  %8 = and i8 %7, 1, !dbg !9987
  %9 = icmp eq i8 %8, 0, !dbg !9987
  br i1 %9, label %14, label %10, !dbg !9988

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !9989
  %12 = load i8, i8* %11, align 1, !dbg !9989
  %13 = icmp eq i8 %12, 0, !dbg !9990
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !9982
  ret i1 %15, !dbg !9991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !9997, metadata !DIExpression()), !dbg !9998
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !9999
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10001 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10009, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10010, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i8* %2, metadata !10011, metadata !DIExpression()), !dbg !10014
  %5 = bitcast i32* %4 to i8*, !dbg !10015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10015
  call void @llvm.dbg.value(metadata i32 0, metadata !10012, metadata !DIExpression()), !dbg !10014
  store i32 0, i32* %4, align 4, !dbg !10016
  call void @llvm.dbg.value(metadata i32* %4, metadata !10012, metadata !DIExpression(DW_OP_deref)), !dbg !10014
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10017
  call void @llvm.dbg.value(metadata i16* %6, metadata !10013, metadata !DIExpression()), !dbg !10014
  %7 = load i32, i32* %4, align 4, !dbg !10018
  call void @llvm.dbg.value(metadata i32 %7, metadata !10012, metadata !DIExpression()), !dbg !10014
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10020
  ret i32 %8, !dbg !10021
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !10022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10032
  call void @llvm.dbg.value(metadata i32* %1, metadata !10027, metadata !DIExpression()), !dbg !10032
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10033
  %4 = load i16*, i16** %3, align 4, !dbg !10033
  call void @llvm.dbg.value(metadata i16* %4, metadata !10028, metadata !DIExpression()), !dbg !10032
  %5 = icmp eq i16* %4, null, !dbg !10034
  br i1 %5, label %14, label %6, !dbg !10035

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10036
  call void @llvm.dbg.value(metadata i32 %7, metadata !10029, metadata !DIExpression()), !dbg !10036
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10037
  %9 = load i16, i16* %8, align 2, !dbg !10037
  %10 = add i16 %9, -32767, !dbg !10038
  %11 = icmp ult i16 %10, 2, !dbg !10038
  %12 = add i32 %7, 1, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %12, metadata !10029, metadata !DIExpression()), !dbg !10036
  br i1 %11, label %13, label %6, !dbg !10038, !llvm.loop !10041

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10044
  br label %14, !dbg !10045

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10047 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10051, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %1, metadata !10052, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10053, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i8* %3, metadata !10054, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 0, metadata !10055, metadata !DIExpression()), !dbg !10063
  %5 = icmp eq i32 %1, 0, !dbg !10064
  br i1 %5, label %16, label %8, !dbg !10065

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10055, metadata !DIExpression()), !dbg !10063
  %7 = icmp eq i32 %15, %1, !dbg !10064
  br i1 %7, label %16, label %8, !dbg !10065, !llvm.loop !10066

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10055, metadata !DIExpression()), !dbg !10063
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10068
  %11 = load i16, i16* %10, align 2, !dbg !10068
  call void @llvm.dbg.value(metadata i16 %11, metadata !10057, metadata !DIExpression()), !dbg !10069
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10070
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10060, metadata !DIExpression()), !dbg !10069
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %13, metadata !10061, metadata !DIExpression()), !dbg !10069
  %14 = icmp slt i32 %13, 0, !dbg !10072
  %15 = add nuw i32 %9, 1, !dbg !10074
  call void @llvm.dbg.value(metadata i32 %15, metadata !10055, metadata !DIExpression()), !dbg !10063
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !10076 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10080, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = sext i16 %0 to i32, !dbg !10084
  %3 = icmp slt i16 %0, 1, !dbg !10086
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10087
  %6 = add nsw i32 %2, -1, !dbg !10087
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10087
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10087
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10081, metadata !DIExpression()), !dbg !10083
  ret %struct.device* %8, !dbg !10088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10089 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10091, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10092, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i8* %2, metadata !10093, metadata !DIExpression()), !dbg !10096
  %5 = bitcast i32* %4 to i8*, !dbg !10097
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10097
  call void @llvm.dbg.value(metadata i32 0, metadata !10094, metadata !DIExpression()), !dbg !10096
  store i32 0, i32* %4, align 4, !dbg !10098
  call void @llvm.dbg.value(metadata i32* %4, metadata !10094, metadata !DIExpression(DW_OP_deref)), !dbg !10096
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10099
  call void @llvm.dbg.value(metadata i16* %6, metadata !10095, metadata !DIExpression()), !dbg !10096
  %7 = load i32, i32* %4, align 4, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %7, metadata !10094, metadata !DIExpression()), !dbg !10096
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10101
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10102
  ret i32 %8, !dbg !10103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10106, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32* %1, metadata !10107, metadata !DIExpression()), !dbg !10111
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10112
  %4 = load i16*, i16** %3, align 4, !dbg !10112
  call void @llvm.dbg.value(metadata i16* %4, metadata !10108, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 0, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 0, metadata !10110, metadata !DIExpression()), !dbg !10111
  %5 = icmp eq i16* %4, null, !dbg !10113
  br i1 %5, label %22, label %6, !dbg !10115

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10109, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i16* %8, metadata !10108, metadata !DIExpression()), !dbg !10111
  %9 = load i16, i16* %8, align 2, !dbg !10116
  %10 = icmp eq i16 %9, -32768, !dbg !10120
  call void @llvm.dbg.value(metadata i32 undef, metadata !10109, metadata !DIExpression()), !dbg !10111
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10121
  call void @llvm.dbg.value(metadata i16* %11, metadata !10108, metadata !DIExpression()), !dbg !10111
  %12 = zext i1 %10 to i32, !dbg !10122
  %13 = add i32 %7, %12, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %13, metadata !10109, metadata !DIExpression()), !dbg !10111
  %14 = icmp eq i32 %13, 2, !dbg !10123
  br i1 %14, label %15, label %6, !dbg !10124

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10111
  call void @llvm.dbg.value(metadata i32 %16, metadata !10110, metadata !DIExpression()), !dbg !10111
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10125
  %18 = load i16, i16* %17, align 2, !dbg !10125
  %19 = icmp eq i16 %18, 32767, !dbg !10126
  %20 = add i32 %16, 1, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %20, metadata !10110, metadata !DIExpression()), !dbg !10111
  br i1 %19, label %21, label %15, !dbg !10129, !llvm.loop !10130

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10132
  br label %22, !dbg !10133

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10134
  call void @llvm.dbg.value(metadata i16* %23, metadata !10108, metadata !DIExpression()), !dbg !10111
  ret i16* %23, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #7 !dbg !10136 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10139
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10140
  ret i32* %2, !dbg !10141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !10142 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10286, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10287, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10288, metadata !DIExpression()), !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10295, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 %1, metadata !10296, metadata !DIExpression()), !dbg !10297
  ret void, !dbg !10298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10299 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10303, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.value(metadata i32 %1, metadata !10304, metadata !DIExpression()), !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !10307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10311, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i8* %1, metadata !10312, metadata !DIExpression()), !dbg !10313
  ret i32 -134, !dbg !10314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !10315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10319, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.value(metadata i8* %1, metadata !10320, metadata !DIExpression()), !dbg !10321
  ret i32 -134, !dbg !10322
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !10323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10326, metadata !DIExpression()), !dbg !10327
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10328, !srcloc !10334
  call void @llvm.dbg.value(metadata i32 undef, metadata !10331, metadata !DIExpression()) #23, !dbg !10335
  call void @llvm.dbg.value(metadata i32 undef, metadata !10332, metadata !DIExpression()) #23, !dbg !10335
  br label %3, !dbg !10336

3:                                                ; preds = %3, %1
  br label %3, !dbg !10337, !llvm.loop !10340
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10348, metadata !DIExpression()), !dbg !10349
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !10350
  unreachable, !dbg !10350
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !10351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10353, metadata !DIExpression()), !dbg !10354
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !10355
  unreachable, !dbg !10355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10358, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10359, metadata !DIExpression()), !dbg !10362
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10363, !srcloc !10334
  call void @llvm.dbg.value(metadata i32 undef, metadata !10331, metadata !DIExpression()) #23, !dbg !10365
  call void @llvm.dbg.value(metadata i32 undef, metadata !10332, metadata !DIExpression()) #23, !dbg !10365
  call void @llvm.dbg.value(metadata i32 undef, metadata !10360, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10361, metadata !DIExpression()), !dbg !10362
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !10366
  %4 = icmp eq i32 %0, 4, !dbg !10367
  br i1 %4, label %5, label %6, !dbg !10372

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #25, !dbg !10373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.141, i32 0, i32 0)) #25, !dbg !10373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef 148) #25, !dbg !10373
  unreachable, !dbg !10373

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !10363
  call void @llvm.dbg.value(metadata i32 %7, metadata !10331, metadata !DIExpression()) #23, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %7, metadata !10360, metadata !DIExpression()), !dbg !10362
  %8 = tail call fastcc %struct.k_thread* @k_current_get.142() #26, !dbg !10375
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.value(metadata i32 undef, metadata !10376, metadata !DIExpression()) #23, !dbg !10379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !10381, !srcloc !10382
  tail call fastcc void @k_thread_abort.143(%struct.k_thread* noundef %8) #24, !dbg !10383
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.142() unnamed_addr #10 !dbg !10387 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.144() #26, !dbg !10391
  ret %struct.k_thread* %1, !dbg !10392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.143(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10397, metadata !DIExpression()), !dbg !10398
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10399, !srcloc !10401
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !10402
  ret void, !dbg !10403
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.144() unnamed_addr #10 !dbg !10404 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10405, !srcloc !10407
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !10408
  ret %struct.k_thread* %1, !dbg !10409
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10410 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10414, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.value(metadata i32 %1, metadata !10415, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.value(metadata i32 %2, metadata !10416, metadata !DIExpression()), !dbg !10417
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !10418
  ret void, !dbg !10419
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10424, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i8* %1, metadata !10425, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 %2, metadata !10426, metadata !DIExpression()), !dbg !10427
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !10428
  ret void, !dbg !10429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10430 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !10431
  ret void, !dbg !10432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10437, metadata !DIExpression()), !dbg !10438
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !10439
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10440
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10441
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10442
  %4 = trunc i32 %0 to i8, !dbg !10443
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10444
  store i8 %4, i8* %5, align 4, !dbg !10445
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10446
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !10447
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10448
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10449
  store i8* %8, i8** %9, align 4, !dbg !10450
  ret void, !dbg !10451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10454, metadata !DIExpression()), !dbg !10460
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10461
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10455, metadata !DIExpression()), !dbg !10460
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10462
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10456, metadata !DIExpression()), !dbg !10460
  call void @llvm.dbg.value(metadata i8* null, metadata !10459, metadata !DIExpression()), !dbg !10460
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10463
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10464
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !10465
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !10466
  ret void, !dbg !10467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10472, metadata !DIExpression()), !dbg !10473
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !10474
  ret i8* %2, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10483
  %3 = load i8, i8* %2, align 1, !dbg !10484
  %4 = and i8 %3, -5, !dbg !10484
  store i8 %4, i8* %2, align 1, !dbg !10484
  ret void, !dbg !10485
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !10486 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !10489
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !10490
  %3 = ptrtoint i8* %2 to i32, !dbg !10499
  %4 = add i32 %3, 2048, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %4, metadata !10494, metadata !DIExpression()) #23, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %4, metadata !10502, metadata !DIExpression()) #23, !dbg !10505
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10507, !srcloc !10508
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10509
  %6 = or i32 %5, 512, !dbg !10509
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10509
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -2, i32 noundef 255) #25, !dbg !10510
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -5, i32 noundef 0) #25, !dbg !10513
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -12, i32 noundef 0) #25, !dbg !10514
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -11, i32 noundef 0) #25, !dbg !10515
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -10, i32 noundef 0) #25, !dbg !10516
  tail call fastcc void @__NVIC_SetPriority.151(i32 noundef -4, i32 noundef 0) #25, !dbg !10517
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10518
  %8 = or i32 %7, 458752, !dbg !10518
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10518
  tail call void @z_arm_fault_init() #25, !dbg !10519
  tail call void @z_arm_cpu_idle_init() #25, !dbg !10520
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10521
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10524
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !10525
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #23, !dbg !10525
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10488, metadata !DIExpression()), !dbg !10526
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !10527
  call void @z_device_state_init() #25, !dbg !10528
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !10529
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !10530
  %10 = call fastcc i8* @prepare_multithreading() #24, !dbg !10531
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !10532
  unreachable, !dbg !10532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1963, metadata !DIExpression()), !dbg !10533
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10534
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10534
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1964, metadata !DIExpression()), !dbg !10533
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1964, metadata !DIExpression()), !dbg !10533
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10535
  br i1 %7, label %8, label %35, !dbg !10536

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1964, metadata !DIExpression()), !dbg !10533
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10537
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10537
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1974, metadata !DIExpression()), !dbg !10538
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10539
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10539
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %14, metadata !1978, metadata !DIExpression()), !dbg !10538
  %15 = icmp eq %struct.device* %11, null, !dbg !10541
  br i1 %15, label %32, label %16, !dbg !10543

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10544
  br i1 %17, label %26, label %18, !dbg !10547

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10548
  call void @llvm.dbg.value(metadata i32 %19, metadata !1978, metadata !DIExpression()), !dbg !10538
  %20 = icmp ult i32 %19, 255, !dbg !10550
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %21, metadata !1978, metadata !DIExpression()), !dbg !10538
  %22 = trunc i32 %21 to i8, !dbg !10551
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10552
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10552
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10553
  store i8 %22, i8* %25, align 1, !dbg !10554
  br label %26, !dbg !10555

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10556
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10556
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10557
  %30 = load i8, i8* %29, align 1, !dbg !10558
  %31 = or i8 %30, 1, !dbg !10558
  store i8 %31, i8* %29, align 1, !dbg !10558
  br label %32, !dbg !10559

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10560
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1964, metadata !DIExpression()), !dbg !10533
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10535
  br i1 %34, label %8, label %35, !dbg !10536, !llvm.loop !10561

35:                                               ; preds = %32, %1
  ret void, !dbg !10563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.151(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10566, metadata !DIExpression()), !dbg !10568
  call void @llvm.dbg.value(metadata i32 %1, metadata !10567, metadata !DIExpression()), !dbg !10568
  %3 = trunc i32 %1 to i8, !dbg !10569
  %4 = shl i8 %3, 4, !dbg !10569
  %5 = and i32 %0, 15, !dbg !10572
  %6 = add nsw i32 %5, -4, !dbg !10573
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10574
  store volatile i8 %4, i8* %7, align 1, !dbg !10575
  ret void, !dbg !10576
}

; Function Attrs: optsize
declare !dbg !10577 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10578 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10581, metadata !DIExpression()), !dbg !10582
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10583
  store i8 1, i8* %2, align 1, !dbg !10584
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10585
  store i8 1, i8* %3, align 4, !dbg !10586
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #25, !dbg !10587
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10588
  ret void, !dbg !10589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10590 {
  tail call void @z_sched_init() #25, !dbg !10595
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10596
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.152, i32 0, i32 0)) #25, !dbg !10597
  call void @llvm.dbg.value(metadata i8* %1, metadata !10594, metadata !DIExpression()), !dbg !10598
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10599
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10600
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !10601
  ret i8* %1, !dbg !10602
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !10603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10607, metadata !DIExpression()), !dbg !10608
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !10609
  unreachable, !dbg !10610
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10613, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata i8* %1, metadata !10614, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata i8* %2, metadata !10615, metadata !DIExpression()), !dbg !10616
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10617
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !10618
  tail call void @boot_banner() #25, !dbg !10619
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !10620
  tail call void @z_init_static_threads() #25, !dbg !10621
  tail call void @main() #25, !dbg !10622
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10623
  %5 = and i8 %4, -2, !dbg !10623
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10623
  ret void, !dbg !10624
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !10625 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8* %1, metadata !10636, metadata !DIExpression()), !dbg !10637
  ret void, !dbg !10638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !10639 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i8* %1, metadata !10642, metadata !DIExpression()), !dbg !10643
  ret void, !dbg !10644
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10645 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10646, !srcloc !10653
  call void @llvm.dbg.value(metadata i32 %1, metadata !10649, metadata !DIExpression()) #23, !dbg !10654
  %2 = icmp ne i32 %1, 0, !dbg !10655
  ret i1 %2, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !10657 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10658
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10659
  %3 = load i8, i8* %2, align 4, !dbg !10660
  %4 = or i8 %3, 1, !dbg !10660
  store i8 %4, i8* %2, align 4, !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !10662 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10663
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10664
  %3 = load i8, i8* %2, align 4, !dbg !10665
  %4 = and i8 %3, -2, !dbg !10665
  store i8 %4, i8* %2, align 4, !dbg !10665
  ret void, !dbg !10666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #7 !dbg !10667 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10668
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10669
  %3 = load i8, i8* %2, align 4, !dbg !10669
  %4 = and i8 %3, 1, !dbg !10670
  %5 = icmp ne i8 %4, 0, !dbg !10671
  ret i1 %5, !dbg !10672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10677, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i8* %1, metadata !10678, metadata !DIExpression()), !dbg !10679
  ret i32 -88, !dbg !10680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !10681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10685, metadata !DIExpression()), !dbg !10686
  ret i8* null, !dbg !10687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10692, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i8* %1, metadata !10693, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %2, metadata !10694, metadata !DIExpression()), !dbg !10695
  ret i32 -88, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2096, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i8* %1, metadata !2097, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %2, metadata !2098, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 0, metadata !2099, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i8 undef, metadata !2101, metadata !DIExpression()), !dbg !10697
  %4 = icmp eq i8* %1, null, !dbg !10698
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10700
  br i1 %6, label %46, label %7, !dbg !10700

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10701
  %9 = load i8, i8* %8, align 1, !dbg !10701
  call void @llvm.dbg.value(metadata i8 %9, metadata !2101, metadata !DIExpression()), !dbg !10697
  %10 = add i32 %2, -1, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %10, metadata !2098, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i8 0, metadata !2102, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i8 %9, metadata !2101, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 0, metadata !2099, metadata !DIExpression()), !dbg !10697
  %11 = icmp eq i8 %9, 0, !dbg !10704
  br i1 %11, label %12, label %15, !dbg !10706

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10707
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10708
  store i8 0, i8* %14, align 1, !dbg !10709
  br label %46, !dbg !10710

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2102, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i8 %17, metadata !2101, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %18, metadata !2099, metadata !DIExpression()), !dbg !10697
  %19 = zext i8 %17 to i32, !dbg !10711
  %20 = zext i8 %16 to i32, !dbg !10712
  %21 = shl nuw i32 1, %20, !dbg !10712
  call void @llvm.dbg.value(metadata i32 %21, metadata !2100, metadata !DIExpression()), !dbg !10697
  %22 = and i32 %21, %19, !dbg !10714
  %23 = icmp eq i32 %22, 0, !dbg !10716
  br i1 %23, label %42, label %24, !dbg !10717

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10718
  %26 = sub i32 %10, %18, !dbg !10719
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10720
  %28 = load i8*, i8** %27, align 4, !dbg !10720
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10721
  %30 = load i32, i32* %29, align 4, !dbg !10721
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !10722
  %32 = add i32 %31, %18, !dbg !10723
  call void @llvm.dbg.value(metadata i32 %32, metadata !2099, metadata !DIExpression()), !dbg !10697
  %33 = trunc i32 %21 to i8, !dbg !10724
  %34 = xor i8 %33, -1, !dbg !10724
  %35 = and i8 %17, %34, !dbg !10724
  call void @llvm.dbg.value(metadata i8 %35, metadata !2101, metadata !DIExpression()), !dbg !10697
  %36 = icmp eq i8 %35, 0, !dbg !10725
  br i1 %36, label %12, label %37, !dbg !10727

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10728
  %39 = sub i32 %10, %32, !dbg !10730
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.153, i32 0, i32 0), i32 noundef 1) #24, !dbg !10731
  %41 = add i32 %40, %32, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %41, metadata !2099, metadata !DIExpression()), !dbg !10697
  br label %42, !dbg !10733

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10697
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10697
  call void @llvm.dbg.value(metadata i8 %44, metadata !2101, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %43, metadata !2099, metadata !DIExpression()), !dbg !10697
  %45 = add i8 %16, 1, !dbg !10734
  call void @llvm.dbg.value(metadata i8 %45, metadata !2102, metadata !DIExpression()), !dbg !10703
  br label %15, !dbg !10706

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.154, i32 0, i32 0), %3 ], !dbg !10697
  ret i8* %47, !dbg !10735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10740, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 %1, metadata !10741, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i8* %2, metadata !10742, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 %3, metadata !10743, metadata !DIExpression()), !dbg !10745
  %5 = icmp ult i32 %1, %3, !dbg !10746
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %6, metadata !10744, metadata !DIExpression()), !dbg !10745
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !10747
  ret i32 %6, !dbg !10748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10753, metadata !DIExpression()), !dbg !10754
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10766, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10767, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i32 %2, metadata !10768, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10769, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* %4, metadata !10770, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* %5, metadata !10771, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* %6, metadata !10772, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i32 %7, metadata !10773, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i32 %8, metadata !10774, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.value(metadata i8* undef, metadata !10775, metadata !DIExpression()), !dbg !10777
  %11 = icmp eq i32 %7, 15, !dbg !10778
  br i1 %11, label %12, label %15, !dbg !10778

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !10778
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !10778
  br i1 %14, label %19, label %18, !dbg !10778

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !10778
  %17 = icmp ult i32 %16, 31, !dbg !10778
  br i1 %17, label %19, label %18, !dbg !10778

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 536) #25, !dbg !10782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.167, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !10782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 536) #25, !dbg !10782
  unreachable, !dbg !10782

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10784
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !10785
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10786
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !10787
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !10788
  call void @llvm.dbg.value(metadata i8* %22, metadata !10776, metadata !DIExpression()), !dbg !10777
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !10789
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10790
  store i8* null, i8** %23, align 4, !dbg !10791
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10792
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !10792
  br i1 %25, label %29, label %26, !dbg !10794

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 5, !dbg !10795
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 4, !dbg !10795
  br label %29, !dbg !10796

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !10777
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !10797
  store %struct.k_heap* %30, %struct.k_heap** %31, align 4, !dbg !10799
  ret i8* %22, !dbg !10800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !10801 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10805, metadata !DIExpression()), !dbg !10806
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !10807
  ret i1 %2, !dbg !10808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !10814, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !10816
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !10817
  ret void, !dbg !10818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !10819 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10824, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %1, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %2, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %3, metadata !10827, metadata !DIExpression()), !dbg !10828
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !10829
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !10830
  %6 = trunc i32 %3 to i8, !dbg !10831
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !10832
  store i8 %6, i8* %7, align 4, !dbg !10833
  %8 = trunc i32 %2 to i8, !dbg !10834
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !10835
  store i8 %8, i8* %9, align 1, !dbg !10836
  %10 = trunc i32 %1 to i8, !dbg !10837
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !10838
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !10838
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !10838
  store i8 %10, i8* %13, align 2, !dbg !10839
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !10840
  store i8 0, i8* %14, align 1, !dbg !10841
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !10842
  ret void, !dbg !10843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !10844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10848, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10849, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i32 %1, metadata !10850, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i32 0, metadata !10855, metadata !DIExpression()), !dbg !10856
  %3 = add i32 %1, 7, !dbg !10857
  %4 = and i32 %3, -8, !dbg !10857
  call void @llvm.dbg.value(metadata i32 %4, metadata !10851, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i8* undef, metadata !10854, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i32 %4, metadata !10852, metadata !DIExpression()), !dbg !10856
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !10859
  call void @llvm.dbg.value(metadata i8* %5, metadata !10853, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i32 0, metadata !10855, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.value(metadata i8* %5, metadata !10853, metadata !DIExpression()), !dbg !10856
  ret i8* %5, !dbg !10860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !10861 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !10866, metadata !DIExpression()), !dbg !10867
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !10868
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !10869
  ret void, !dbg !10870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !10873, metadata !DIExpression()), !dbg !10874
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !10875
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !10876
  ret void, !dbg !10877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10882, metadata !DIExpression()), !dbg !10883
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10884
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !10885
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10886
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !10887
  ret void, !dbg !10888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !10889 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10894, metadata !DIExpression()), !dbg !10895
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10896
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !10897
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10898
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !10899
  ret void, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !10901 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10909, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10910, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i32 %2, metadata !10911, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10912, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i8* %4, metadata !10913, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i8* %5, metadata !10914, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i8* %6, metadata !10915, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i32 %7, metadata !10916, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.value(metadata i32 %8, metadata !10917, metadata !DIExpression()), !dbg !10919
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10920, !srcloc !10653
  call void @llvm.dbg.value(metadata i32 %11, metadata !10649, metadata !DIExpression()) #23, !dbg !10925
  %12 = icmp eq i32 %11, 0, !dbg !10926
  br i1 %12, label %14, label %13, !dbg !10927

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 647) #25, !dbg !10928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0)) #25, !dbg !10928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 647) #25, !dbg !10928
  unreachable, !dbg !10928

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !10918, metadata !DIExpression()), !dbg !10919
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !10930
  %17 = icmp eq i64 %15, -1, !dbg !10931
  br i1 %17, label %19, label %18, !dbg !10933

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !10934
  br label %19, !dbg !10936

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10938 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !10943, metadata !DIExpression()), !dbg !10944
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10942, metadata !DIExpression()), !dbg !10944
  %4 = icmp eq i64 %3, 0, !dbg !10945
  br i1 %4, label %5, label %6, !dbg !10947

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !10948
  br label %7, !dbg !10950

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !10951
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10958, metadata !DIExpression()), !dbg !10959
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10960, !srcloc !10962
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !10963
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10965 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10968, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10967, metadata !DIExpression()), !dbg !10969
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10970
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !10971
  ret void, !dbg !10972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10975, metadata !DIExpression()), !dbg !10994
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !10995

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 750) #25, !dbg !10999
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #25, !dbg !10999
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 750) #25, !dbg !10999
  unreachable, !dbg !10999

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !10975, metadata !DIExpression()), !dbg !10994
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11002
  br i1 %4, label %6, label %5, !dbg !11003

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11004
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !10992, metadata !DIExpression()), !dbg !11005
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !11006

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11010
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !11010
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11012
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !11012
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11013
  %12 = load i32, i32* %11, align 4, !dbg !11013
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11014
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !11014
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11015
  %16 = load i8*, i8** %15, align 4, !dbg !11015
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11016
  %18 = load i8*, i8** %17, align 4, !dbg !11016
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11017
  %20 = load i8*, i8** %19, align 4, !dbg !11017
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11018
  %22 = load i32, i32* %21, align 4, !dbg !11018
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11019
  %24 = load i32, i32* %23, align 4, !dbg !11019
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #24, !dbg !11020
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !11021
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !11022
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !11023
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !11023
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11024
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !10975, metadata !DIExpression()), !dbg !10994
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11025
  br i1 %30, label %1, label %2, !dbg !10995, !llvm.loop !11026

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 781) #25, !dbg !11028
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #25, !dbg !11028
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.166, i32 0, i32 0), i32 noundef 781) #25, !dbg !11028
  unreachable, !dbg !11028

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !10992, metadata !DIExpression()), !dbg !11005
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11031
  br i1 %34, label %36, label %35, !dbg !11032

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #25, !dbg !11033
  ret void, !dbg !11034

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !11035
  %38 = load i32, i32* %37, align 4, !dbg !11035
  %39 = icmp eq i32 %38, -1, !dbg !11038
  br i1 %39, label %48, label %40, !dbg !11039

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !11040
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !11040
  %43 = icmp sgt i32 %38, 0, !dbg !11042
  %44 = select i1 %43, i32 %38, i32 0, !dbg !11042
  %45 = zext i32 %44 to i64, !dbg !11042
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.171(i64 noundef %45) #24, !dbg !11042
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !11043
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #24, !dbg !11043
  br label %48, !dbg !11044

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !11045
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !10992, metadata !DIExpression()), !dbg !11005
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11046
  br i1 %50, label %31, label %32, !dbg !11006, !llvm.loop !11047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.171(i64 noundef %0) unnamed_addr #4 !dbg !11049 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.value(metadata i64 %0, metadata !11053, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 1000, metadata !11056, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 10000, metadata !11057, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 1, metadata !11058, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 0, metadata !11059, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 1, metadata !11060, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 0, metadata !11061, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 1, metadata !11062, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i8 0, metadata !11063, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i64 0, metadata !11064, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i64 0, metadata !11064, metadata !DIExpression()), !dbg !11068
  %2 = mul i64 %0, 10, !dbg !11070
  ret i64 %2, !dbg !11076
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !11077 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11079, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %1, metadata !11080, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %2, metadata !11081, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8* %3, metadata !11082, metadata !DIExpression()), !dbg !11083
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11084
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11085
  %7 = load i8, i8* %6, align 4, !dbg !11086
  %8 = or i8 %7, 4, !dbg !11086
  store i8 %8, i8* %6, align 4, !dbg !11086
  tail call void @z_thread_essential_clear() #24, !dbg !11087
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11088
  unreachable, !dbg !11088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct._sfnode* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11094, metadata !DIExpression()), !dbg !11096
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11097
  %3 = load i32, i32* %2, align 4, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %3, metadata !11095, metadata !DIExpression()), !dbg !11096
  %4 = icmp eq i32 %3, 0, !dbg !11098
  br i1 %4, label %10, label %5, !dbg !11100

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !11101
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !11104
  %8 = zext i8 %7 to i32, !dbg !11105
  %9 = icmp eq i32 %6, %8, !dbg !11106
  br i1 %9, label %11, label %10, !dbg !11107

10:                                               ; preds = %5, %1
  br label %11, !dbg !11108

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !11096
  ret i1 %12, !dbg !11109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct._sfnode* nocapture noundef %0) local_unnamed_addr #9 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11112, metadata !DIExpression()), !dbg !11113
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11114
  %3 = load i32, i32* %2, align 4, !dbg !11114
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !11116
  %5 = zext i8 %4 to i32, !dbg !11117
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11118
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !11119
  %8 = or i32 %7, %5, !dbg !11120
  %9 = icmp eq i32 %3, %8, !dbg !11121
  br i1 %9, label %10, label %11, !dbg !11122

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !11123
  br label %11, !dbg !11124

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !11125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct._sfnode* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !11126 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11130, metadata !DIExpression()), !dbg !11131
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !11132
  %3 = zext i8 %2 to i32, !dbg !11133
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11134
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !11135
  %6 = or i32 %5, %3, !dbg !11136
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11137
  store i32 %6, i32* %7, align 4, !dbg !11138
  ret void, !dbg !11139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !11140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11144, metadata !DIExpression()), !dbg !11145
  ret i32 -134, !dbg !11146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !11147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11151, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata i32 %1, metadata !11152, metadata !DIExpression()), !dbg !11153
  ret i32 -134, !dbg !11154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !11163, metadata !DIExpression()), !dbg !11164
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11165
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !11167
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11164
  ret i32 %6, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !11173, metadata !DIExpression()), !dbg !11174
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !11175
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11174
  ret i32 %3, !dbg !11177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11178 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11180
  ret void, !dbg !11181
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !11182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11184, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* %1, metadata !11185, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* %2, metadata !11186, metadata !DIExpression()), !dbg !11187
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11188
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !11188
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !11188
  %7 = load i8, i8* %6, align 2, !dbg !11188
  %8 = icmp sgt i8 %7, -1, !dbg !11188
  br i1 %8, label %10, label %9, !dbg !11191

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.182, i32 0, i32 0), i32 noundef 39) #25, !dbg !11192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.182, i32 0, i32 0), i32 noundef 39) #25, !dbg !11192
  unreachable, !dbg !11192

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11194, !srcloc !11201
  call void @llvm.dbg.value(metadata i32 undef, metadata !11197, metadata !DIExpression()) #23, !dbg !11202
  call void @llvm.dbg.value(metadata i32 undef, metadata !11198, metadata !DIExpression()) #23, !dbg !11202
  tail call fastcc void @k_cpu_idle() #24, !dbg !11203
  br label %10, !dbg !11204, !llvm.loop !11205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11207 {
  tail call void @arch_cpu_idle() #25, !dbg !11208
  ret void, !dbg !11209
}

; Function Attrs: optsize
declare !dbg !11210 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct._sfnode* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11211 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11215, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i1 %1, metadata !11216, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11221
  %3 = icmp eq %struct._sfnode* %0, null, !dbg !11222
  br i1 %3, label %13, label %4, !dbg !11223

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef nonnull %0) #24, !dbg !11224
  %6 = icmp eq i8 %5, 0, !dbg !11225
  br i1 %6, label %13, label %7, !dbg !11226

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11218, metadata !DIExpression()), !dbg !11227
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 1, !dbg !11228
  %9 = bitcast %struct._sfnode* %8 to i8**, !dbg !11228
  %10 = load i8*, i8** %9, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata i8* %10, metadata !11217, metadata !DIExpression()), !dbg !11221
  br i1 %1, label %11, label %15, !dbg !11229

11:                                               ; preds = %7
  %12 = bitcast %struct._sfnode* %0 to i8*, !dbg !11230
  tail call void @k_free(i8* noundef nonnull %12) #25, !dbg !11231
  br label %15, !dbg !11234

13:                                               ; preds = %4, %2
  %14 = bitcast %struct._sfnode* %0 to i8*, !dbg !11235
  call void @llvm.dbg.value(metadata i8* %14, metadata !11217, metadata !DIExpression()), !dbg !11221
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !11237
  call void @llvm.dbg.value(metadata i8* %16, metadata !11217, metadata !DIExpression()), !dbg !11221
  ret i8* %16, !dbg !11238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11239 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11243, metadata !DIExpression()), !dbg !11244
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11245
  %3 = load i32, i32* %2, align 4, !dbg !11245
  %4 = trunc i32 %3 to i8, !dbg !11246
  %5 = and i8 %4, 3, !dbg !11246
  ret i8 %5, !dbg !11247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #6 !dbg !11248 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11273
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #24, !dbg !11274
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, i32 0, !dbg !11275
  store i32 0, i32* %3, align 4, !dbg !11275
  %4 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11276
  tail call fastcc void @z_waitq_init.183(%struct._wait_q_t* noundef nonnull %4) #24, !dbg !11277
  ret void, !dbg !11278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !11279 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11284, metadata !DIExpression()), !dbg !11285
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11286
  store %struct._sfnode* null, %struct._sfnode** %2, align 4, !dbg !11287
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11288
  store %struct._sfnode* null, %struct._sfnode** %3, align 4, !dbg !11289
  ret void, !dbg !11290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.183(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !11291 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !11296, metadata !DIExpression()), !dbg !11297
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !11298
  tail call fastcc void @sys_dlist_init.184(%struct._dnode* noundef %2) #24, !dbg !11299
  ret void, !dbg !11300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.184(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !11301 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11306, metadata !DIExpression()), !dbg !11307
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11308
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11309
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11310
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11311
  ret void, !dbg !11312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11315, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11396
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !11397, metadata !DIExpression()) #23, !dbg !11404
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11406, !srcloc !11412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11410, metadata !DIExpression()) #23, !dbg !11413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11403, metadata !DIExpression()) #23, !dbg !11404
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %2) #25, !dbg !11414
  br i1 %4, label %6, label %5, !dbg !11417

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11418
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.188, i32 0, i32 0), %struct._sfnode* noundef nonnull %2) #25, !dbg !11418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11418
  unreachable, !dbg !11418

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11413
  call void @llvm.dbg.value(metadata i32 undef, metadata !11403, metadata !DIExpression()) #23, !dbg !11404
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %2) #25, !dbg !11420
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11395
  %7 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11421
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %7) #25, !dbg !11422
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !11321, metadata !DIExpression()), !dbg !11395
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !11423
  br i1 %9, label %11, label %10, !dbg !11425

10:                                               ; preds = %6
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %8, i8* noundef null) #24, !dbg !11426
  br label %11, !dbg !11428

11:                                               ; preds = %10, %6
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !11406
  call void @llvm.dbg.value(metadata i32 %12, metadata !11409, metadata !DIExpression()) #23, !dbg !11413
  call void @llvm.dbg.value(metadata i32 %12, metadata !11403, metadata !DIExpression()) #23, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %12, metadata !11316, metadata !DIExpression()), !dbg !11395
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !11429
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %2, [1 x i32] %13) #25, !dbg !11429
  ret void, !dbg !11430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11435, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i8* %1, metadata !11436, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11438, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata i32 0, metadata !11444, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata i8* %1, metadata !11445, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11448, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata i32 0, metadata !11453, metadata !DIExpression()), !dbg !11454
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !11456
  store i32 0, i32* %3, align 4, !dbg !11457
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !11458
  store i8* %1, i8** %4, align 4, !dbg !11459
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11466, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i8* %1, metadata !11467, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i8* %2, metadata !11468, metadata !DIExpression()), !dbg !11469
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #24, !dbg !11470
  ret void, !dbg !11471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !11472 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11476, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i8* %1, metadata !11477, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i8* %2, metadata !11478, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.value(metadata i1 %3, metadata !11479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11486
  call void @llvm.dbg.value(metadata i1 %4, metadata !11480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11486
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11487
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !11397, metadata !DIExpression()) #23, !dbg !11488
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11490, !srcloc !11412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11492
  call void @llvm.dbg.value(metadata i32 undef, metadata !11410, metadata !DIExpression()) #23, !dbg !11492
  call void @llvm.dbg.value(metadata i32 undef, metadata !11403, metadata !DIExpression()) #23, !dbg !11488
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %6) #25, !dbg !11493
  br i1 %8, label %10, label %9, !dbg !11494

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.188, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #25, !dbg !11495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11495
  unreachable, !dbg !11495

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %7, 0, !dbg !11490
  call void @llvm.dbg.value(metadata i32 %11, metadata !11409, metadata !DIExpression()) #23, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %11, metadata !11403, metadata !DIExpression()) #23, !dbg !11488
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %6) #25, !dbg !11496
  call void @llvm.dbg.value(metadata i32 %11, metadata !11482, metadata !DIExpression()), !dbg !11486
  br i1 %4, label %12, label %16, !dbg !11497

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11498
  %14 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %13) #24, !dbg !11501
  %15 = bitcast %struct._sfnode* %14 to i8*, !dbg !11501
  call void @llvm.dbg.value(metadata i8* %15, metadata !11477, metadata !DIExpression()), !dbg !11486
  br label %16, !dbg !11502

16:                                               ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ %1, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !11477, metadata !DIExpression()), !dbg !11486
  %18 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11503
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %18) #25, !dbg !11504
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11481, metadata !DIExpression()), !dbg !11486
  %20 = icmp eq %struct.k_thread* %19, null, !dbg !11505
  br i1 %20, label %23, label %21, !dbg !11507

21:                                               ; preds = %16
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %19, i8* noundef %2) #24, !dbg !11508
  %22 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !11510
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %22) #25, !dbg !11510
  br label %42, !dbg !11511

23:                                               ; preds = %16
  br i1 %3, label %24, label %35, !dbg !11512

24:                                               ; preds = %23
  %25 = tail call fastcc i8* @z_thread_malloc() #24, !dbg !11513
  call void @llvm.dbg.value(metadata i8* %25, metadata !11483, metadata !DIExpression()), !dbg !11514
  %26 = icmp eq i8* %25, null, !dbg !11515
  br i1 %26, label %27, label %31, !dbg !11517

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !11518, metadata !DIExpression()) #23, !dbg !11524
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !11523, metadata !DIExpression()) #23, !dbg !11524
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %6) #25, !dbg !11527
  br i1 %28, label %30, label %29, !dbg !11530

29:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.190, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #25, !dbg !11531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11531
  unreachable, !dbg !11531

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %11, metadata !11518, metadata !DIExpression()) #23, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %11, metadata !11533, metadata !DIExpression()) #23, !dbg !11536
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11538, !srcloc !11539
  call void @llvm.dbg.value(metadata i8* %25, metadata !11478, metadata !DIExpression()), !dbg !11486
  br label %42

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8* %25, metadata !11483, metadata !DIExpression()), !dbg !11514
  %32 = getelementptr inbounds i8, i8* %25, i32 4, !dbg !11540
  %33 = bitcast i8* %32 to i8**, !dbg !11540
  store i8* %2, i8** %33, align 4, !dbg !11541
  %34 = bitcast i8* %25 to %struct._sfnode*, !dbg !11542
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef nonnull %34, i8 noundef zeroext 1) #24, !dbg !11543
  call void @llvm.dbg.value(metadata i8* %25, metadata !11478, metadata !DIExpression()), !dbg !11486
  br label %37

35:                                               ; preds = %23
  %36 = bitcast i8* %2 to %struct._sfnode*, !dbg !11544
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef %36, i8 noundef zeroext 0) #24, !dbg !11546
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %struct._sfnode* [ %34, %31 ], [ %36, %35 ], !dbg !11547
  call void @llvm.dbg.value(metadata i8* undef, metadata !11478, metadata !DIExpression()), !dbg !11486
  %39 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11548
  %40 = bitcast i8* %17 to %struct._sfnode*, !dbg !11549
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %39, %struct._sfnode* noundef %40, %struct._sfnode* noundef %38) #24, !dbg !11550
  %41 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !11551
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %41) #25, !dbg !11551
  br label %42, !dbg !11552

42:                                               ; preds = %30, %37, %21
  %43 = phi i32 [ 0, %21 ], [ 0, %37 ], [ -12, %30 ], !dbg !11486
  ret i32 %43, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11554 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11558, metadata !DIExpression()), !dbg !11559
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11560
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !11560
  ret %struct._sfnode* %3, !dbg !11561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !11562 {
  call void @llvm.dbg.value(metadata i32 8, metadata !11565, metadata !DIExpression()), !dbg !11566
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #25, !dbg !11567
  ret i8* %1, !dbg !11568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_sfnode_init(%struct._sfnode* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11573, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata i8 %1, metadata !11574, metadata !DIExpression()), !dbg !11575
  %3 = zext i8 %1 to i32, !dbg !11576
  %4 = and i32 %3, 252, !dbg !11576
  %5 = icmp eq i32 %4, 0, !dbg !11576
  br i1 %5, label %7, label %6, !dbg !11579

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.192, i32 0, i32 0), i32 noundef 290) #25, !dbg !11580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.193, i32 0, i32 0)) #25, !dbg !11580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.192, i32 0, i32 0), i32 noundef 290) #25, !dbg !11580
  unreachable, !dbg !11580

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11582
  store i32 %3, i32* %8, align 4, !dbg !11583
  ret void, !dbg !11584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !11585 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11589, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11590, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !11591, metadata !DIExpression()), !dbg !11592
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !11593
  br i1 %4, label %5, label %6, !dbg !11595

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #24, !dbg !11596
  br label %11, !dbg !11596

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef nonnull %1) #24, !dbg !11598
  %8 = icmp eq %struct._sfnode* %7, null, !dbg !11598
  br i1 %8, label %9, label %10, !dbg !11593

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #24, !dbg !11600
  br label %11, !dbg !11600

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef nonnull %7) #24, !dbg !11602
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %2) #24, !dbg !11602
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !11604 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11608, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11609, metadata !DIExpression()), !dbg !11610
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11611
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef %3) #24, !dbg !11611
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #24, !dbg !11611
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11612
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !11612
  br i1 %5, label %6, label %8, !dbg !11611

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11614
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #24, !dbg !11614
  br label %8, !dbg !11614

8:                                                ; preds = %6, %2
  ret void, !dbg !11611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11616 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11620, metadata !DIExpression()), !dbg !11621
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11622
  %3 = load i32, i32* %2, align 4, !dbg !11622
  %4 = and i32 %3, -4, !dbg !11623
  %5 = inttoptr i32 %4 to %struct._sfnode*, !dbg !11624
  ret %struct._sfnode* %5, !dbg !11625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !11626 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11628, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11629, metadata !DIExpression()), !dbg !11630
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef null) #24, !dbg !11631
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11632
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !11632
  br i1 %4, label %5, label %6, !dbg !11631

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #24, !dbg !11634
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #24, !dbg !11634
  br label %7, !dbg !11634

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %3, %struct._sfnode* noundef %1) #24, !dbg !11636
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #24, !dbg !11636
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct._sfnode* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !11638 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11642, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11643, metadata !DIExpression()), !dbg !11645
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef %0) #24, !dbg !11646
  call void @llvm.dbg.value(metadata i8 %3, metadata !11644, metadata !DIExpression()), !dbg !11645
  %4 = zext i8 %3 to i32, !dbg !11647
  %5 = ptrtoint %struct._sfnode* %1 to i32, !dbg !11648
  %6 = or i32 %4, %5, !dbg !11649
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !11650
  store i32 %6, i32* %7, align 4, !dbg !11651
  ret void, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11655, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11656, metadata !DIExpression()), !dbg !11657
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !11658
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11663, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11664, metadata !DIExpression()), !dbg !11665
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11666
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !11667
  ret void, !dbg !11668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11669 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11671, metadata !DIExpression()), !dbg !11672
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !11673
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !11673
  ret %struct._sfnode* %3, !dbg !11674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11675 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i8* %1, metadata !11680, metadata !DIExpression()), !dbg !11681
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #24, !dbg !11682
  ret void, !dbg !11683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11684 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11686, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.value(metadata i8* %1, metadata !11687, metadata !DIExpression()), !dbg !11688
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #24, !dbg !11689
  ret void, !dbg !11690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11695, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8* %1, metadata !11696, metadata !DIExpression()), !dbg !11698
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #24, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %3, metadata !11697, metadata !DIExpression()), !dbg !11698
  ret i32 %3, !dbg !11700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11701 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11703, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.value(metadata i8* %1, metadata !11704, metadata !DIExpression()), !dbg !11706
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #24, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %3, metadata !11705, metadata !DIExpression()), !dbg !11706
  ret i32 %3, !dbg !11708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11713, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %1, metadata !11714, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %2, metadata !11715, metadata !DIExpression()), !dbg !11718
  %4 = icmp eq i8* %1, null, !dbg !11719
  %5 = icmp eq i8* %2, null, !dbg !11719
  %6 = or i1 %4, %5, !dbg !11719
  br i1 %6, label %32, label %7, !dbg !11719

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11721
  call void @llvm.dbg.value(metadata %struct._sfnode* %8, metadata !11397, metadata !DIExpression()) #23, !dbg !11722
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11724, !srcloc !11412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11410, metadata !DIExpression()) #23, !dbg !11726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11403, metadata !DIExpression()) #23, !dbg !11722
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %8) #25, !dbg !11727
  br i1 %10, label %12, label %11, !dbg !11728

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.188, i32 0, i32 0), %struct._sfnode* noundef nonnull %8) #25, !dbg !11729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11729
  unreachable, !dbg !11729

12:                                               ; preds = %7
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %13, metadata !11409, metadata !DIExpression()) #23, !dbg !11726
  call void @llvm.dbg.value(metadata i32 %13, metadata !11403, metadata !DIExpression()) #23, !dbg !11722
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %8) #25, !dbg !11730
  call void @llvm.dbg.value(metadata i32 %13, metadata !11716, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11717, metadata !DIExpression()), !dbg !11718
  %14 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11731
  %15 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #25, !dbg !11734
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %1, metadata !11714, metadata !DIExpression()), !dbg !11718
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11735
  br i1 %16, label %27, label %17, !dbg !11736

17:                                               ; preds = %12, %17
  %18 = phi %struct.k_thread* [ %22, %17 ], [ %15, %12 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %12 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %19, metadata !11714, metadata !DIExpression()), !dbg !11718
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %18, i8* noundef nonnull %19) #24, !dbg !11737
  %20 = bitcast i8* %19 to i8**, !dbg !11739
  %21 = load i8*, i8** %20, align 4, !dbg !11740
  call void @llvm.dbg.value(metadata i8* %21, metadata !11714, metadata !DIExpression()), !dbg !11718
  %22 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #25, !dbg !11741
  call void @llvm.dbg.value(metadata %struct.k_thread* %22, metadata !11717, metadata !DIExpression()), !dbg !11718
  %23 = icmp ne i8* %21, null, !dbg !11742
  %24 = icmp ne %struct.k_thread* %22, null, !dbg !11735
  %25 = select i1 %23, i1 %24, i1 false, !dbg !11735
  br i1 %25, label %17, label %26, !dbg !11736, !llvm.loop !11743

26:                                               ; preds = %17
  br i1 %23, label %27, label %30, !dbg !11745

27:                                               ; preds = %12, %26
  %28 = phi i8* [ %21, %26 ], [ %1, %12 ]
  %29 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11746
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %29, i8* noundef nonnull %28, i8* noundef %2) #24, !dbg !11749
  br label %30, !dbg !11750

30:                                               ; preds = %26, %27
  %31 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !11751
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %8, [1 x i32] %31) #25, !dbg !11751
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i32 [ 0, %30 ], [ -22, %3 ], !dbg !11718
  ret i32 %33, !dbg !11752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #9 !dbg !11753 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11757, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.value(metadata i8* %1, metadata !11758, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.value(metadata i8* %2, metadata !11759, metadata !DIExpression()), !dbg !11760
  %4 = icmp ne i8* %1, null, !dbg !11761
  %5 = icmp ne i8* %2, null, !dbg !11761
  %6 = and i1 %4, %5, !dbg !11761
  br i1 %6, label %7, label %15, !dbg !11761

7:                                                ; preds = %3
  %8 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11763
  %9 = icmp eq %struct._sfnode* %8, null, !dbg !11763
  %10 = bitcast i8* %1 to %struct._sfnode*, !dbg !11766
  br i1 %9, label %11, label %12, !dbg !11767

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %10) #24, !dbg !11768
  br label %13, !dbg !11768

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %10) #24, !dbg !11770
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct._sfnode*, !dbg !11767
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %14) #24, !dbg !11767
  br label %15, !dbg !11767

15:                                               ; preds = %13, %3
  ret void, !dbg !11772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !11773 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11789, metadata !DIExpression()), !dbg !11792
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !11790, metadata !DIExpression()), !dbg !11792
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.196(%struct._slist* noundef %1) #24, !dbg !11793
  br i1 %3, label %13, label %4, !dbg !11795

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !11796
  %6 = load i8*, i8** %5, align 4, !dbg !11796
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !11797
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !11797
  %9 = load i8*, i8** %8, align 4, !dbg !11797
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #24, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %10, metadata !11791, metadata !DIExpression()), !dbg !11792
  %11 = icmp eq i32 %10, 0, !dbg !11799
  br i1 %11, label %12, label %13, !dbg !11801

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #24, !dbg !11802
  br label %13, !dbg !11803

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !11792
  ret i32 %14, !dbg !11804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.196(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11809, metadata !DIExpression()), !dbg !11810
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.197(%struct._slist* noundef %0) #24, !dbg !11811
  %3 = icmp eq %struct._snode* %2, null, !dbg !11811
  ret i1 %3, !dbg !11811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !11812 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11816, metadata !DIExpression()), !dbg !11817
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11818
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !11819
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11820
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !11821
  ret void, !dbg !11822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.197(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11823 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11827, metadata !DIExpression()), !dbg !11828
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11829
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11829
  ret %struct._snode* %3, !dbg !11830
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !11831 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11840, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11839, metadata !DIExpression()), !dbg !11847
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !11848
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !11397, metadata !DIExpression()) #23, !dbg !11849
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11851, !srcloc !11412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11853
  call void @llvm.dbg.value(metadata i32 undef, metadata !11410, metadata !DIExpression()) #23, !dbg !11853
  call void @llvm.dbg.value(metadata i32 undef, metadata !11403, metadata !DIExpression()) #23, !dbg !11849
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #25, !dbg !11854
  br i1 %5, label %7, label %6, !dbg !11855

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.188, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #25, !dbg !11856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 148) #25, !dbg !11856
  unreachable, !dbg !11856

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %8, metadata !11409, metadata !DIExpression()) #23, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %8, metadata !11403, metadata !DIExpression()) #23, !dbg !11849
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #25, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %8, metadata !11841, metadata !DIExpression()), !dbg !11847
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11858
  %10 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %9) #24, !dbg !11858
  br i1 %10, label %17, label %11, !dbg !11859, !prof !11860

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* noundef %9) #24, !dbg !11861
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !11843, metadata !DIExpression()), !dbg !11862
  %13 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %12, i1 noundef zeroext true) #24, !dbg !11863
  call void @llvm.dbg.value(metadata i8* %13, metadata !11842, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i32 undef, metadata !11518, metadata !DIExpression()) #23, !dbg !11864
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !11523, metadata !DIExpression()) #23, !dbg !11864
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #25, !dbg !11866
  br i1 %14, label %16, label %15, !dbg !11867

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.190, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #25, !dbg !11868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11868
  unreachable, !dbg !11868

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %8, metadata !11518, metadata !DIExpression()) #23, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %8, metadata !11533, metadata !DIExpression()) #23, !dbg !11869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11871, !srcloc !11539
  br label %33

17:                                               ; preds = %7
  %18 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %18, metadata !11840, metadata !DIExpression()), !dbg !11847
  %19 = icmp eq i64 %18, 0, !dbg !11872
  br i1 %19, label %20, label %24, !dbg !11874

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !11518, metadata !DIExpression()) #23, !dbg !11875
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !11523, metadata !DIExpression()) #23, !dbg !11875
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #25, !dbg !11878
  br i1 %21, label %23, label %22, !dbg !11879

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.190, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #25, !dbg !11880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 194) #25, !dbg !11880
  unreachable, !dbg !11880

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %8, metadata !11518, metadata !DIExpression()) #23, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %8, metadata !11533, metadata !DIExpression()) #23, !dbg !11881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11883, !srcloc !11539
  br label %33, !dbg !11884

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !11885
  %26 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !11886
  %27 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %3, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] %1) #25, !dbg !11886
  call void @llvm.dbg.value(metadata i32 %27, metadata !11846, metadata !DIExpression()), !dbg !11847
  %28 = icmp eq i32 %27, 0, !dbg !11887
  br i1 %28, label %29, label %33, !dbg !11888

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11889
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !11890
  %32 = load i8*, i8** %31, align 4, !dbg !11890
  br label %33, !dbg !11888

33:                                               ; preds = %29, %24, %23, %16
  %34 = phi i8* [ %13, %16 ], [ null, %23 ], [ %32, %29 ], [ null, %24 ], !dbg !11847
  ret i8* %34, !dbg !11891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11892 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11896, metadata !DIExpression()), !dbg !11897
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11898
  %3 = icmp eq %struct._sfnode* %2, null, !dbg !11898
  ret i1 %3, !dbg !11898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #9 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11901, metadata !DIExpression()), !dbg !11903
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11904
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !11902, metadata !DIExpression()), !dbg !11903
  %3 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #24, !dbg !11904
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %3) #24, !dbg !11904
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11905
  %5 = icmp eq %struct._sfnode* %4, %2, !dbg !11905
  br i1 %5, label %6, label %8, !dbg !11904

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11907
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #24, !dbg !11907
  br label %8, !dbg !11907

8:                                                ; preds = %6, %1
  ret %struct._sfnode* %2, !dbg !11904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !11909 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11913, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.value(metadata i8* %1, metadata !11914, metadata !DIExpression()), !dbg !11916
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11917
  %4 = bitcast i8* %1 to %struct._sfnode*, !dbg !11918
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct._sfnode* noundef %4) #24, !dbg !11919
  call void @llvm.dbg.value(metadata i1 %5, metadata !11915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11916
  ret i1 %5, !dbg !11920
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #14 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11925, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11926, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !11927, metadata !DIExpression()), !dbg !11929
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11930
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !11928, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !11927, metadata !DIExpression()), !dbg !11929
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !11932
  br i1 %4, label %15, label %5, !dbg !11930

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !11928, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !11927, metadata !DIExpression()), !dbg !11929
  %6 = icmp eq %struct._sfnode* %3, %1, !dbg !11934
  br i1 %6, label %9, label %11, !dbg !11937

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !11928, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !11927, metadata !DIExpression()), !dbg !11929
  %8 = icmp eq %struct._sfnode* %13, %1, !dbg !11934
  br i1 %8, label %9, label %11, !dbg !11937, !llvm.loop !11938

9:                                                ; preds = %7, %5
  %10 = phi %struct._sfnode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct._sfnode* noundef %10, %struct._sfnode* noundef %1) #24, !dbg !11939
  br label %15, !dbg !11939

11:                                               ; preds = %5, %7
  %12 = phi %struct._sfnode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !11928, metadata !DIExpression()), !dbg !11929
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !11927, metadata !DIExpression()), !dbg !11929
  %13 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %12) #24, !dbg !11932
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !11928, metadata !DIExpression()), !dbg !11929
  %14 = icmp eq %struct._sfnode* %13, null, !dbg !11932
  br i1 %14, label %15, label %7, !dbg !11930, !llvm.loop !11938

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !11942 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !11944, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !11945, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !11946, metadata !DIExpression()), !dbg !11947
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !11948
  %5 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #24, !dbg !11950
  br i1 %4, label %6, label %11, !dbg !11951

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %5) #24, !dbg !11952
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11954
  %8 = icmp eq %struct._sfnode* %7, %2, !dbg !11954
  br i1 %8, label %9, label %15, !dbg !11952

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #24, !dbg !11956
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %10) #24, !dbg !11956
  br label %15, !dbg !11956

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %5) #24, !dbg !11958
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #24, !dbg !11960
  %13 = icmp eq %struct._sfnode* %12, %2, !dbg !11960
  br i1 %13, label %14, label %15, !dbg !11958

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %1) #24, !dbg !11962
  br label %15, !dbg !11962

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef null) #24, !dbg !11951
  ret void, !dbg !11951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef readonly %0) unnamed_addr #7 !dbg !11964 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = icmp eq %struct._sfnode* %0, null, !dbg !11968
  br i1 %2, label %5, label %3, !dbg !11968

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* noundef nonnull %0) #24, !dbg !11968
  br label %5, !dbg !11968

5:                                                ; preds = %1, %3
  %6 = phi %struct._sfnode* [ %4, %3 ], [ null, %1 ], !dbg !11968
  ret %struct._sfnode* %6, !dbg !11968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !11971, metadata !DIExpression()), !dbg !11972
  %2 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %0) #24, !dbg !11973
  ret %struct._sfnode* %2, !dbg !11973
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11974 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11976, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i8* %1, metadata !11977, metadata !DIExpression()), !dbg !11979
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !11980
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %3) #24, !dbg !11980
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !11978, metadata !DIExpression()), !dbg !11979
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !11982
  br i1 %5, label %14, label %6, !dbg !11980

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct._sfnode*
  br label %8, !dbg !11980

8:                                                ; preds = %6, %11
  %9 = phi %struct._sfnode* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !11978, metadata !DIExpression()), !dbg !11979
  %10 = icmp eq %struct._sfnode* %9, %7, !dbg !11984
  br i1 %10, label %15, label %11, !dbg !11987

11:                                               ; preds = %8
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %9) #24, !dbg !11982
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !11978, metadata !DIExpression()), !dbg !11979
  %13 = icmp eq %struct._sfnode* %12, null, !dbg !11982
  br i1 %13, label %14, label %8, !dbg !11980, !llvm.loop !11988

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #24, !dbg !11990
  br label %15, !dbg !11991

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !11992
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11993 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !11997, metadata !DIExpression()), !dbg !11999
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !12000
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %2) #24, !dbg !12001
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #24, !dbg !12002
  call void @llvm.dbg.value(metadata i8* %4, metadata !11998, metadata !DIExpression()), !dbg !11999
  ret i8* %4, !dbg !12003
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12004 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !12006, metadata !DIExpression()), !dbg !12008
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !12009
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #24, !dbg !12010
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #24, !dbg !12011
  call void @llvm.dbg.value(metadata i8* %4, metadata !12007, metadata !DIExpression()), !dbg !12008
  ret i8* %4, !dbg !12012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12017, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12018, metadata !DIExpression()), !dbg !12021
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12022
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12022
  %5 = load i8, i8* %4, align 2, !dbg !12022
  call void @llvm.dbg.value(metadata i8 %5, metadata !12019, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12021
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12023
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12023
  %8 = load i8, i8* %7, align 2, !dbg !12023
  call void @llvm.dbg.value(metadata i8 %8, metadata !12020, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12021
  %9 = icmp eq i8 %8, %5, !dbg !12024
  %10 = sext i8 %5 to i32, !dbg !12026
  %11 = sext i8 %8 to i32, !dbg !12026
  %12 = sub nsw i32 %11, %10, !dbg !12026
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12026
  ret i32 %13, !dbg !12027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12032, metadata !DIExpression()), !dbg !12033
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12034
  %3 = icmp eq i32 %2, 0, !dbg !12036
  br i1 %3, label %8, label %4, !dbg !12037

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12038
  %6 = add i32 %5, %2, !dbg !12040
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12041
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12042
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12043
  br label %8, !dbg !12044

8:                                                ; preds = %4, %1
  ret void, !dbg !12045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #7 !dbg !12046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12050, metadata !DIExpression()), !dbg !12052
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12053
  call void @llvm.dbg.value(metadata i32 %1, metadata !12051, metadata !DIExpression()), !dbg !12052
  ret i32 %1, !dbg !12054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12059, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata i32 %1, metadata !12060, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata i32 0, metadata !12061, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12077
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12079, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12077
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12087
  br i1 %4, label %6, label %5, !dbg !12090

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12091
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12091
  unreachable, !dbg !12091

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12077
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12067, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()), !dbg !12069
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12094
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12097
  %8 = icmp sgt i32 %0, 0, !dbg !12098
  %9 = icmp sgt i32 %7, 2, !dbg !12100
  %10 = select i1 %9, i32 %7, i32 2, !dbg !12100
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !12100
  store i32 %11, i32* @slice_ticks, align 4, !dbg !12101
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12102
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12103
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12110
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12110
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12112
  br i1 %12, label %14, label %13, !dbg !12115

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12116
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12116
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12116
  unreachable, !dbg !12116

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %15, metadata !12082, metadata !DIExpression()) #23, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %15, metadata !12076, metadata !DIExpression()) #23, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %15, metadata !12067, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12110
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !12121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !12123, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !12061, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i32 undef, metadata !12061, metadata !DIExpression()), !dbg !12069
  ret void, !dbg !12125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !12126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12130, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.value(metadata i32 %0, metadata !12132, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12147
  call void @llvm.dbg.value(metadata i32 1000, metadata !12135, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i32 10000, metadata !12136, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i8 1, metadata !12137, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i1 true, metadata !12138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12147
  call void @llvm.dbg.value(metadata i1 true, metadata !12139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12147
  call void @llvm.dbg.value(metadata i8 0, metadata !12140, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i1 true, metadata !12141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12147
  call void @llvm.dbg.value(metadata i1 false, metadata !12142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12147
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !12147
  %2 = mul i32 %0, 10, !dbg !12149
  ret i32 %2, !dbg !12155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12158, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12161
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12163, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12165
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12165
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12161
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12166
  br i1 %3, label %5, label %4, !dbg !12167

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12168
  unreachable, !dbg !12168

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %6, metadata !12082, metadata !DIExpression()) #23, !dbg !12165
  call void @llvm.dbg.value(metadata i32 %6, metadata !12076, metadata !DIExpression()) #23, !dbg !12161
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %6, metadata !12159, metadata !DIExpression()), !dbg !12160
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12170
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12172
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !12173
  br i1 %9, label %10, label %14, !dbg !12174

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12175
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12177
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12177
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12179
  br i1 %11, label %13, label %12, !dbg !12180

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12181
  unreachable, !dbg !12181

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !12182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !12184, !srcloc !12124
  br label %33, !dbg !12185

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12186
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !12187
  %16 = icmp eq i32 %15, 0, !dbg !12187
  br i1 %16, label %27, label %17, !dbg !12189

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !12190
  br i1 %18, label %19, label %27, !dbg !12191

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12192
  %21 = icmp sgt i32 %20, %0, !dbg !12195
  br i1 %21, label %25, label %22, !dbg !12196

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12197
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !12197
  call void @llvm.dbg.value(metadata i32 %24, metadata !12159, metadata !DIExpression()), !dbg !12160
  br label %28, !dbg !12199

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !12200
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12200
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12202
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !12160
  call void @llvm.dbg.value(metadata i32 %29, metadata !12159, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12204
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12204
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12206
  br i1 %30, label %32, label %31, !dbg !12207

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12208
  unreachable, !dbg !12208

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !12104, metadata !DIExpression()) #23, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %29, metadata !12118, metadata !DIExpression()) #23, !dbg !12209
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !12211, !srcloc !12124
  br label %33, !dbg !12212

33:                                               ; preds = %32, %13
  ret void, !dbg !12212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12217, metadata !DIExpression()), !dbg !12219
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12220
  %3 = icmp eq i32 %2, 0, !dbg !12220
  br i1 %3, label %16, label %4, !dbg !12221

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12222
  br i1 %5, label %16, label %6, !dbg !12223

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12224
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12224
  %9 = load i8, i8* %8, align 2, !dbg !12224
  %10 = sext i8 %9 to i32, !dbg !12225
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12226
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12227
  br i1 %12, label %16, label %13, !dbg !12228

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12229
  %15 = xor i1 %14, true, !dbg !12230
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12219
  call void @llvm.dbg.value(metadata i1 %17, metadata !12218, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12219
  ret i1 %17, !dbg !12231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12232 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12236, metadata !DIExpression()), !dbg !12238
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12239
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12237, metadata !DIExpression()), !dbg !12238
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12240
  br i1 %3, label %5, label %4, !dbg !12242

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12243
  br label %5, !dbg !12245

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12236, metadata !DIExpression()), !dbg !12238
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12246
  ret i32 %6, !dbg !12247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12250, metadata !DIExpression()), !dbg !12252
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12253
  %3 = load i8, i8* %2, align 1, !dbg !12253
  call void @llvm.dbg.value(metadata i8 %3, metadata !12251, metadata !DIExpression()), !dbg !12252
  %4 = and i8 %3, 31, !dbg !12254
  %5 = icmp ne i8 %4, 0, !dbg !12255
  ret i1 %5, !dbg !12256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12259, metadata !DIExpression()), !dbg !12260
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12261
  br i1 %2, label %3, label %7, !dbg !12263

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12264, metadata !DIExpression()) #23, !dbg !12267
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12270
  %5 = load i8, i8* %4, align 1, !dbg !12271
  %6 = and i8 %5, 127, !dbg !12271
  store i8 %6, i8* %4, align 1, !dbg !12271
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12272, metadata !DIExpression()) #23, !dbg !12275
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12279
  br label %7, !dbg !12280

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12281, metadata !DIExpression()) #23, !dbg !12284
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12286
  %9 = load i8, i8* %8, align 1, !dbg !12287
  %10 = or i8 %9, -128, !dbg !12287
  store i8 %10, i8* %8, align 1, !dbg !12287
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12288, metadata !DIExpression()) #23, !dbg !12291
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12295, metadata !DIExpression()) #23, !dbg !12303
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12301, metadata !DIExpression()) #23, !dbg !12303
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !12305
  br i1 %11, label %12, label %13, !dbg !12308

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !12309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !12309
  unreachable, !dbg !12309

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12311
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12302, metadata !DIExpression()) #23, !dbg !12303
  %15 = icmp eq %struct._dnode* %14, null, !dbg !12313
  br i1 %15, label %26, label %16, !dbg !12311

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12302, metadata !DIExpression()) #23, !dbg !12303
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !12315
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !12302, metadata !DIExpression()) #23, !dbg !12303
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !12316
  %20 = icmp sgt i32 %19, 0, !dbg !12319
  br i1 %20, label %21, label %23, !dbg !12320

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12321
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !12323
  br label %28, !dbg !12324

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !12313
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12302, metadata !DIExpression()) #23, !dbg !12303
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12313
  br i1 %25, label %26, label %16, !dbg !12311, !llvm.loop !12325

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12327
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !12328
  br label %28, !dbg !12329

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12330
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !12331
  %31 = zext i1 %30 to i32, !dbg !12331
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !12332
  ret void, !dbg !12333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12336, metadata !DIExpression()), !dbg !12337
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !12338
  ret i1 %2, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12340 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12342, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12343, metadata !DIExpression()), !dbg !12344
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !12345
  br i1 %3, label %4, label %5, !dbg !12348

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1139) #25, !dbg !12349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1139) #25, !dbg !12349
  unreachable, !dbg !12349

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12351
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !12352
  ret void, !dbg !12353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !12354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12356, metadata !DIExpression()), !dbg !12357
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12358
  ret i1 %2, !dbg !12359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12360 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12364, metadata !DIExpression()), !dbg !12365
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12366
  br i1 %2, label %6, label %3, !dbg !12366

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12367
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12367
  br label %6, !dbg !12366

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12366
  ret %struct._dnode* %7, !dbg !12368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12369 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12373, metadata !DIExpression()), !dbg !12377
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12374, metadata !DIExpression()), !dbg !12377
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12378
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12378
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12375, metadata !DIExpression()), !dbg !12377
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12379
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12380
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12381
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12382
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12383
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12384
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !12387 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12391, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12392, metadata !DIExpression()), !dbg !12393
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12394
  br i1 %3, label %6, label %4, !dbg !12395

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12396
  br label %6, !dbg !12395

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12395
  ret %struct._dnode* %7, !dbg !12397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12398 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12402, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12403, metadata !DIExpression()), !dbg !12405
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12406
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12406
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12404, metadata !DIExpression()), !dbg !12405
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12407
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12408
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12409
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12410
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12411
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12412
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12413
  ret void, !dbg !12414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12417, metadata !DIExpression()), !dbg !12419
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12427, metadata !DIExpression()) #23, !dbg !12429
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12430
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12431
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12431
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12418, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12432, metadata !DIExpression()) #23, !dbg !12438
  call void @llvm.dbg.value(metadata i32 %0, metadata !12437, metadata !DIExpression()) #23, !dbg !12438
  %6 = icmp eq i32 %0, 0, !dbg !12441
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12443
  br i1 %6, label %8, label %18, !dbg !12444

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !12445
  br i1 %9, label %10, label %11, !dbg !12448

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 137) #25, !dbg !12449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !12449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 137) #25, !dbg !12449
  unreachable, !dbg !12449

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !12451
  br i1 %12, label %18, label %13, !dbg !12453

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !12454
  br i1 %14, label %18, label %15, !dbg !12456

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !12457
  %17 = icmp eq i32 %16, 0, !dbg !12457
  br i1 %17, label %21, label %18, !dbg !12459

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !12460
  br i1 %19, label %21, label %20, !dbg !12463

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12464
  br label %21, !dbg !12466

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !12443
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12443
  ret void, !dbg !12467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #7 !dbg !12468 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12472, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12473, metadata !DIExpression()), !dbg !12475
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !12476
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12474, metadata !DIExpression()), !dbg !12475
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12473, metadata !DIExpression()), !dbg !12475
  ret %struct.k_thread* %3, !dbg !12477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12480, metadata !DIExpression()), !dbg !12481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12482
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12483
  %4 = xor i1 %3, true, !dbg !12484
  ret i1 %4, !dbg !12485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()), !dbg !12489
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12490
  %3 = load i16, i16* %2, align 2, !dbg !12490
  %4 = icmp ult i16 %3, 128, !dbg !12491
  %5 = zext i1 %4 to i32, !dbg !12491
  ret i32 %5, !dbg !12492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12493 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12499, metadata !DIExpression()), !dbg !12500
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12501
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !12502
  %4 = xor i1 %3, true, !dbg !12503
  ret i1 %4, !dbg !12504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12505 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12511, metadata !DIExpression()), !dbg !12512
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12513
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12513
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12514
  ret i1 %4, !dbg !12515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !12516 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12518, metadata !DIExpression()), !dbg !12520
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12519, metadata !DIExpression()), !dbg !12520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12521
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12521
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12522
  br i1 %5, label %9, label %6, !dbg !12523

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12524
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12524
  br label %9, !dbg !12523

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12523
  ret %struct._dnode* %10, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !12526 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12530, metadata !DIExpression()), !dbg !12531
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12532
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12532
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12533
  ret i1 %4, !dbg !12534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !12535 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12539, metadata !DIExpression()), !dbg !12542
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12543
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12543
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12540, metadata !DIExpression()), !dbg !12542
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12544
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12544
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12541, metadata !DIExpression()), !dbg !12542
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12545
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12546
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12547
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12548
  tail call fastcc void @sys_dnode_init.209(%struct._dnode* noundef %0) #24, !dbg !12549
  ret void, !dbg !12550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.209(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12551 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12553, metadata !DIExpression()), !dbg !12554
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12555
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12556
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12557
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12558
  ret void, !dbg !12559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !12560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12564, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.value(metadata i32 %1, metadata !12565, metadata !DIExpression()), !dbg !12566
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12567
  %4 = load i8, i8* %3, align 1, !dbg !12567
  %5 = zext i8 %4 to i32, !dbg !12568
  %6 = and i32 %5, %1, !dbg !12569
  %7 = icmp ne i32 %6, 0, !dbg !12570
  ret i1 %7, !dbg !12571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12576, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32 %1, metadata !12577, metadata !DIExpression()), !dbg !12578
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12579
  ret i1 %3, !dbg !12580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %1, metadata !12584, metadata !DIExpression()), !dbg !12585
  %3 = icmp slt i32 %0, %1, !dbg !12586
  ret i1 %3, !dbg !12587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12590, metadata !DIExpression()), !dbg !12594
  call void @llvm.dbg.value(metadata i32 0, metadata !12591, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12596
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12598, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12596
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12601
  br i1 %3, label %5, label %4, !dbg !12602

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12603
  unreachable, !dbg !12603

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12596
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12604
  call void @llvm.dbg.value(metadata i32 undef, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12591, metadata !DIExpression()), !dbg !12595
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12605
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12610
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12610
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12612
  br i1 %6, label %8, label %7, !dbg !12613

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12614
  unreachable, !dbg !12614

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %9, metadata !12082, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %9, metadata !12076, metadata !DIExpression()) #23, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %9, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !12615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12617, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !12591, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12591, metadata !DIExpression()), !dbg !12595
  ret void, !dbg !12618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12621, metadata !DIExpression()), !dbg !12622
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12623
  br i1 %2, label %27, label %3, !dbg !12625

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12626
  br i1 %4, label %5, label %27, !dbg !12627

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12281, metadata !DIExpression()) #23, !dbg !12628
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12631
  %7 = load i8, i8* %6, align 1, !dbg !12632
  %8 = or i8 %7, -128, !dbg !12632
  store i8 %8, i8* %6, align 1, !dbg !12632
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12288, metadata !DIExpression()) #23, !dbg !12633
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12295, metadata !DIExpression()) #23, !dbg !12635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12301, metadata !DIExpression()) #23, !dbg !12635
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !12637
  br i1 %9, label %10, label %11, !dbg !12638

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !12639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !12639
  unreachable, !dbg !12639

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12640
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12302, metadata !DIExpression()) #23, !dbg !12635
  %13 = icmp eq %struct._dnode* %12, null, !dbg !12641
  br i1 %13, label %24, label %14, !dbg !12640

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12302, metadata !DIExpression()) #23, !dbg !12635
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !12642
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !12302, metadata !DIExpression()) #23, !dbg !12635
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !12643
  %18 = icmp sgt i32 %17, 0, !dbg !12644
  br i1 %18, label %19, label %21, !dbg !12645

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12646
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !12647
  br label %26, !dbg !12648

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !12641
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !12302, metadata !DIExpression()) #23, !dbg !12635
  %23 = icmp eq %struct._dnode* %22, null, !dbg !12641
  br i1 %23, label %24, label %14, !dbg !12640, !llvm.loop !12649

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12651
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !12652
  br label %26, !dbg !12653

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12654
  br label %27, !dbg !12655

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12661
  br i1 %2, label %6, label %3, !dbg !12662

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12663
  %5 = xor i1 %4, true, !dbg !12662
  br label %6, !dbg !12662

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12667, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 0, metadata !12668, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12673
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12675, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12673
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12678
  br i1 %3, label %5, label %4, !dbg !12679

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12680
  unreachable, !dbg !12680

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12673
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12681
  call void @llvm.dbg.value(metadata i32 undef, metadata !12670, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12668, metadata !DIExpression()), !dbg !12672
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12685
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12685
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12687
  br i1 %6, label %8, label %7, !dbg !12688

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12689
  unreachable, !dbg !12689

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %9, metadata !12082, metadata !DIExpression()) #23, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %9, metadata !12076, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %9, metadata !12670, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12685
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !12690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12692, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !12668, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12668, metadata !DIExpression()), !dbg !12672
  ret void, !dbg !12693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12699
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12701, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12703
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12703
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12699
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12704
  br i1 %3, label %5, label %4, !dbg !12705

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12706
  unreachable, !dbg !12706

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %6, metadata !12082, metadata !DIExpression()) #23, !dbg !12703
  call void @llvm.dbg.value(metadata i32 %6, metadata !12076, metadata !DIExpression()) #23, !dbg !12699
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %6, metadata !12697, metadata !DIExpression()), !dbg !12698
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12708
  br i1 %7, label %8, label %12, !dbg !12710

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12711
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12711
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12714
  br i1 %9, label %11, label %10, !dbg !12715

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12716
  unreachable, !dbg !12716

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !12717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !12719, !srcloc !12124
  br label %14, !dbg !12720

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.214(%struct.k_thread* noundef %0) #24, !dbg !12721
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12722
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12723
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !12723
  br label %14, !dbg !12724

14:                                               ; preds = %12, %11
  ret void, !dbg !12724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12727, metadata !DIExpression()), !dbg !12728
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12729
  %3 = load i8, i8* %2, align 1, !dbg !12729
  %4 = and i8 %3, 4, !dbg !12730
  %5 = icmp eq i8 %4, 0, !dbg !12731
  ret i1 %5, !dbg !12732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.214(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12737
  %3 = load i8, i8* %2, align 1, !dbg !12738
  %4 = and i8 %3, -5, !dbg !12738
  store i8 %4, i8* %2, align 1, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct._sfnode* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12740 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12743, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12742, metadata !DIExpression()), !dbg !12744
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12745
  br i1 %4, label %5, label %12, !dbg !12747

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12748
  br i1 %6, label %7, label %12, !dbg !12749

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !12756
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12755, metadata !DIExpression()) #23, !dbg !12756
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12759, metadata !DIExpression()) #23, !dbg !12764
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #25, !dbg !12766
  br i1 %8, label %10, label %9, !dbg !12769

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !12770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef %0) #25, !dbg !12770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !12770
  unreachable, !dbg !12770

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !12750, metadata !DIExpression()) #23, !dbg !12756
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12772
  br label %16, !dbg !12773

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12774
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12109, metadata !DIExpression()) #23, !dbg !12774
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #25, !dbg !12777
  br i1 %13, label %15, label %14, !dbg !12778

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef %0) #25, !dbg !12779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12779
  unreachable, !dbg !12779

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !12104, metadata !DIExpression()) #23, !dbg !12774
  call void @llvm.dbg.value(metadata i32 %3, metadata !12118, metadata !DIExpression()) #23, !dbg !12780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12782, !srcloc !12124
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !12783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12788, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i32 %0, metadata !12790, metadata !DIExpression()), !dbg !12795
  %2 = icmp eq i32 %0, 0, !dbg !12797
  br i1 %2, label %3, label %6, !dbg !12798

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12799, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %4, metadata !12802, metadata !DIExpression()) #23, !dbg !12807
  %5 = icmp eq i32 %4, 0, !dbg !12808
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12789
  ret i1 %7, !dbg !12809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #7 !dbg !12810 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12813
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12812, metadata !DIExpression()), !dbg !12814
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12815
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12816
  ret i1 %3, !dbg !12817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12820, metadata !DIExpression()), !dbg !12822
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %2, metadata !12821, metadata !DIExpression()), !dbg !12822
  ret i32 %2, !dbg !12824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12827, metadata !DIExpression()), !dbg !12831
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12832
  call void @llvm.dbg.value(metadata i32 0, metadata !12828, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12834
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12836, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12838
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12838
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12834
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12839
  br i1 %4, label %6, label %5, !dbg !12840

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12841
  unreachable, !dbg !12841

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12836
  call void @llvm.dbg.value(metadata i32 %7, metadata !12082, metadata !DIExpression()) #23, !dbg !12838
  call void @llvm.dbg.value(metadata i32 %7, metadata !12076, metadata !DIExpression()) #23, !dbg !12834
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12842
  call void @llvm.dbg.value(metadata i32 %7, metadata !12830, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 undef, metadata !12828, metadata !DIExpression()), !dbg !12833
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12843
  br i1 %8, label %9, label %13, !dbg !12847

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12264, metadata !DIExpression()) #23, !dbg !12848
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12851
  %11 = load i8, i8* %10, align 1, !dbg !12852
  %12 = and i8 %11, 127, !dbg !12852
  store i8 %12, i8* %10, align 1, !dbg !12852
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12272, metadata !DIExpression()) #23, !dbg !12853
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12855
  br label %13, !dbg !12856

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12857
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12858
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12859
  %16 = zext i1 %15 to i32, !dbg !12859
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !12860
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12861
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12861
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12863
  br i1 %17, label %19, label %18, !dbg !12864

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12865
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12865
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12865
  unreachable, !dbg !12865

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !12104, metadata !DIExpression()) #23, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %7, metadata !12118, metadata !DIExpression()) #23, !dbg !12866
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !12868, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !12828, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 undef, metadata !12828, metadata !DIExpression()), !dbg !12833
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12869
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !12871
  br i1 %21, label %22, label %23, !dbg !12872

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12873
  br label %23, !dbg !12875

23:                                               ; preds = %22, %19
  ret void, !dbg !12876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12879, metadata !DIExpression()), !dbg !12880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12881
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12882
  ret i32 %3, !dbg !12883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12886, metadata !DIExpression()), !dbg !12887
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12888
  %3 = load i8, i8* %2, align 1, !dbg !12889
  %4 = or i8 %3, 16, !dbg !12889
  store i8 %4, i8* %2, align 1, !dbg !12889
  ret void, !dbg !12890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12891 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12892, !srcloc !12085
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %2, metadata !12082, metadata !DIExpression()) #23, !dbg !12894
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12894
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !12895
  ret void, !dbg !12896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12899, metadata !DIExpression()), !dbg !12900
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !12901
  br i1 %2, label %3, label %5, !dbg !12903

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12904
  br label %6, !dbg !12906

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12118, metadata !DIExpression()) #23, !dbg !12907
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12910, !srcloc !12124
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12914, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12917
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12919, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12921
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12921
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12917
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12922
  br i1 %3, label %5, label %4, !dbg !12923

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12924
  unreachable, !dbg !12924

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12919
  call void @llvm.dbg.value(metadata i32 %6, metadata !12082, metadata !DIExpression()) #23, !dbg !12921
  call void @llvm.dbg.value(metadata i32 %6, metadata !12076, metadata !DIExpression()) #23, !dbg !12917
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12925
  call void @llvm.dbg.value(metadata i32 %6, metadata !12915, metadata !DIExpression()), !dbg !12916
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !12926
  br i1 %7, label %12, label %8, !dbg !12928

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12929
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12929
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12932
  br i1 %9, label %11, label %10, !dbg !12933

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12934
  unreachable, !dbg !12934

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !12929
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !12935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !12937, !srcloc !12124
  br label %14, !dbg !12938

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12939
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12940
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12941
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !12941
  br label %14, !dbg !12942

14:                                               ; preds = %12, %11
  ret void, !dbg !12942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !12943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12945, metadata !DIExpression()), !dbg !12946
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12947
  %3 = load i8, i8* %2, align 1, !dbg !12947
  %4 = and i8 %3, 16, !dbg !12948
  %5 = icmp ne i8 %4, 0, !dbg !12949
  ret i1 %5, !dbg !12950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12953, metadata !DIExpression()), !dbg !12954
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12955
  %3 = load i8, i8* %2, align 1, !dbg !12956
  %4 = and i8 %3, -17, !dbg !12956
  store i8 %4, i8* %2, align 1, !dbg !12956
  ret void, !dbg !12957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12958 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12968, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12966, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !12967, metadata !DIExpression()), !dbg !12972
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12973
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !12973
  br i1 %5, label %9, label %6, !dbg !12973

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !12973
  br i1 %7, label %9, label %8, !dbg !12976

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 773) #25, !dbg !12977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 773) #25, !dbg !12977
  unreachable, !dbg !12977

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !12969, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !12980
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12982, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12980
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12985
  br i1 %11, label %13, label %12, !dbg !12986

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !12987
  unreachable, !dbg !12987

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12980
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12988
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12969, metadata !DIExpression()), !dbg !12979
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !12989
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12992
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !12992
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12994
  br i1 %14, label %16, label %15, !dbg !12995

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12996
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !12996
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !12996
  unreachable, !dbg !12996

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !12982
  call void @llvm.dbg.value(metadata i32 %17, metadata !12082, metadata !DIExpression()) #23, !dbg !12984
  call void @llvm.dbg.value(metadata i32 %17, metadata !12076, metadata !DIExpression()) #23, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %17, metadata !12971, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !12992
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !12997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !12999, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !12969, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata i32 undef, metadata !12969, metadata !DIExpression()), !dbg !12979
  ret void, !dbg !13000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13003, metadata !DIExpression()), !dbg !13004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13005
  %3 = load i8, i8* %2, align 1, !dbg !13005
  %4 = and i8 %3, 1, !dbg !13006
  %5 = icmp ne i8 %4, 0, !dbg !13007
  ret i1 %5, !dbg !13008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13009 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13013, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13011, metadata !DIExpression()), !dbg !13014
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13012, metadata !DIExpression()), !dbg !13014
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !13015
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !13016
  ret void, !dbg !13017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !13018 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13022, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13023, metadata !DIExpression()), !dbg !13024
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !13025
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !13026
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !13027
  br i1 %3, label %24, label %4, !dbg !13029

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13030
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !13032
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !13033
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12295, metadata !DIExpression()) #23, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12301, metadata !DIExpression()) #23, !dbg !13034
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !13036
  br i1 %7, label %8, label %9, !dbg !13037

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13038
  unreachable, !dbg !13038

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13039
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12302, metadata !DIExpression()) #23, !dbg !13034
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13040
  br i1 %11, label %22, label %12, !dbg !13039

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12302, metadata !DIExpression()) #23, !dbg !13034
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12302, metadata !DIExpression()) #23, !dbg !13034
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !13042
  %16 = icmp sgt i32 %15, 0, !dbg !13043
  br i1 %16, label %17, label %19, !dbg !13044

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13045
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13046
  br label %24, !dbg !13047

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !13040
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12302, metadata !DIExpression()) #23, !dbg !13034
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13040
  br i1 %21, label %22, label %12, !dbg !13039, !llvm.loop !13048

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13050
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !13051
  br label %24, !dbg !13052

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13054 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13059, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13058, metadata !DIExpression()), !dbg !13060
  %4 = icmp eq i64 %3, -1, !dbg !13061
  br i1 %4, label %6, label %5, !dbg !13063

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13064
  br label %6, !dbg !13066

6:                                                ; preds = %5, %2
  ret void, !dbg !13067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13068 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13071, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13070, metadata !DIExpression()), !dbg !13072
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13073
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13078, metadata !DIExpression()), !dbg !13086
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13087
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13087
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13079, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.value(metadata i32 0, metadata !13080, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13089
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13091, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13089
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13094
  br i1 %5, label %7, label %6, !dbg !13095

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13096
  unreachable, !dbg !13096

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13089
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13097
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 undef, metadata !13080, metadata !DIExpression()), !dbg !13088
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13098
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !13099
  %10 = load i8, i8* %9, align 1, !dbg !13099
  %11 = and i8 %10, 40, !dbg !13100
  %12 = icmp eq i8 %11, 0, !dbg !13100
  call void @llvm.dbg.value(metadata i1 %12, metadata !13083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13101
  br i1 %12, label %13, label %20, !dbg !13102

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13103
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !13103
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !13103
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !13107
  br i1 %17, label %19, label %18, !dbg !13108

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !13109
  br label %19, !dbg !13111

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.214(%struct.k_thread* noundef nonnull %3) #24, !dbg !13112
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !13113
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !13114
  br label %20, !dbg !13115

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13116
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13118
  br i1 %21, label %23, label %22, !dbg !13119

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13120
  unreachable, !dbg !13120

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %24, metadata !12082, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 %24, metadata !12076, metadata !DIExpression()) #23, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %24, metadata !13082, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !13123, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13080, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i32 undef, metadata !13080, metadata !DIExpression()), !dbg !13088
  ret void, !dbg !13124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13127, metadata !DIExpression()), !dbg !13128
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !13129
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13130
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !13131
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13132
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13139, metadata !DIExpression()), !dbg !13140
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13141
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !13141
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !13141
  br i1 %4, label %5, label %6, !dbg !13144

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 726) #25, !dbg !13145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 726) #25, !dbg !13145
  unreachable, !dbg !13145

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !13147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13150, metadata !DIExpression()), !dbg !13151
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13152
  %3 = load i8, i8* %2, align 1, !dbg !13153
  %4 = and i8 %3, -3, !dbg !13153
  store i8 %4, i8* %2, align 1, !dbg !13153
  ret void, !dbg !13154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13157, metadata !DIExpression()), !dbg !13158
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13159
  br i1 %2, label %3, label %7, !dbg !13161

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12264, metadata !DIExpression()) #23, !dbg !13162
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13165
  %5 = load i8, i8* %4, align 1, !dbg !13166
  %6 = and i8 %5, 127, !dbg !13166
  store i8 %6, i8* %4, align 1, !dbg !13166
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12272, metadata !DIExpression()) #23, !dbg !13167
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13169
  br label %7, !dbg !13170

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13171
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13172
  %10 = zext i1 %9 to i32, !dbg !13172
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13173
  ret void, !dbg !13174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13177, metadata !DIExpression()), !dbg !13178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13179
  %3 = load i8, i8* %2, align 1, !dbg !13180
  %4 = or i8 %3, 2, !dbg !13180
  store i8 %4, i8* %2, align 1, !dbg !13180
  ret void, !dbg !13181
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #20 !dbg !13182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13184, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32 0, metadata !13185, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13190
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13192, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13190
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13195
  br i1 %3, label %5, label %4, !dbg !13196

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13197
  unreachable, !dbg !13197

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13190
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13198
  call void @llvm.dbg.value(metadata i32 undef, metadata !13187, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression()), !dbg !13189
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13199
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13202
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13202
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13204
  br i1 %6, label %8, label %7, !dbg !13205

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13206
  unreachable, !dbg !13206

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13192
  call void @llvm.dbg.value(metadata i32 %9, metadata !12082, metadata !DIExpression()) #23, !dbg !13194
  call void @llvm.dbg.value(metadata i32 %9, metadata !12076, metadata !DIExpression()) #23, !dbg !13190
  call void @llvm.dbg.value(metadata i32 %9, metadata !13187, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13207
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13209, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13185, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression()), !dbg !13189
  ret void, !dbg !13210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13211 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13217, metadata !DIExpression()), !dbg !13222
  call void @llvm.dbg.value(metadata i32 %0, metadata !13215, metadata !DIExpression()), !dbg !13222
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !13216, metadata !DIExpression()), !dbg !13222
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13223
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !13224
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13225
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13226
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13227
  call void @llvm.dbg.value(metadata i32 %6, metadata !13218, metadata !DIExpression()), !dbg !13222
  call void @llvm.dbg.value(metadata i32 0, metadata !13219, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13229
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13231, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13229
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13234
  br i1 %8, label %10, label %9, !dbg !13235

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13236
  unreachable, !dbg !13236

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13229
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13237
  call void @llvm.dbg.value(metadata i32 undef, metadata !13221, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 undef, metadata !13219, metadata !DIExpression()), !dbg !13228
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13238
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13242
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13243
  br i1 %13, label %14, label %15, !dbg !13244

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13245
  br label %15, !dbg !13247

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13248
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13248
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13250
  br i1 %16, label %18, label %17, !dbg !13251

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13252
  unreachable, !dbg !13252

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %19, metadata !12082, metadata !DIExpression()) #23, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %19, metadata !12076, metadata !DIExpression()) #23, !dbg !13229
  call void @llvm.dbg.value(metadata i32 %19, metadata !13221, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13248
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !13255, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13219, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i32 undef, metadata !13219, metadata !DIExpression()), !dbg !13228
  ret i32 %6, !dbg !13256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13257 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata i64 undef, metadata !13264, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13261, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !13263, metadata !DIExpression()), !dbg !13265
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13266
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13267
  %6 = icmp eq %struct._sfnode* %0, @sched_spinlock, !dbg !13268
  br i1 %6, label %7, label %8, !dbg !13271

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 846) #25, !dbg !13272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 846) #25, !dbg !13272
  unreachable, !dbg !13272

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13274
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13276, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13274
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13279
  br i1 %10, label %12, label %11, !dbg !13280

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13281
  unreachable, !dbg !13281

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13274
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13282
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13283
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !13284
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12759, metadata !DIExpression()) #23, !dbg !13285
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #25, !dbg !13287
  br i1 %14, label %16, label %15, !dbg !13288

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef %0) #25, !dbg !13289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13289
  unreachable, !dbg !13289

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12755, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12759, metadata !DIExpression()) #23, !dbg !13292
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13294
  br i1 %17, label %19, label %18, !dbg !13295

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13296
  unreachable, !dbg !13296

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !12750, metadata !DIExpression()) #23, !dbg !13290
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !13297
  ret i32 %21, !dbg !13298
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13299 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13303, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 0, metadata !13305, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13310
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13312, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13310
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13315
  br i1 %3, label %5, label %4, !dbg !13316

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13317
  unreachable, !dbg !13317

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13314
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13310
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13318
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13305, metadata !DIExpression()), !dbg !13309
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13304, metadata !DIExpression()), !dbg !13308
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13322
  br i1 %8, label %10, label %9, !dbg !13324

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !13325
  br label %10, !dbg !13327

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13328
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13328
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13330
  br i1 %11, label %13, label %12, !dbg !13331

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13332
  unreachable, !dbg !13332

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !13312
  call void @llvm.dbg.value(metadata i32 %14, metadata !12082, metadata !DIExpression()) #23, !dbg !13314
  call void @llvm.dbg.value(metadata i32 %14, metadata !12076, metadata !DIExpression()) #23, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %14, metadata !13307, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13328
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13335, !srcloc !12124
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 undef, metadata !13305, metadata !DIExpression()), !dbg !13309
  ret %struct.k_thread* %7, !dbg !13336
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13337 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13339, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13340, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 0, metadata !13341, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13346
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13348, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13346
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13351
  br i1 %3, label %5, label %4, !dbg !13352

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13353
  unreachable, !dbg !13353

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13346
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13354
  call void @llvm.dbg.value(metadata i32 undef, metadata !13343, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13340, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()), !dbg !13345
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !13355
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13340, metadata !DIExpression()), !dbg !13344
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13358
  br i1 %8, label %11, label %9, !dbg !13360

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !13361
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !13363
  br label %11, !dbg !13364

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13365
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13365
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13367
  br i1 %12, label %14, label %13, !dbg !13368

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13369
  unreachable, !dbg !13369

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !13348
  call void @llvm.dbg.value(metadata i32 %15, metadata !12082, metadata !DIExpression()) #23, !dbg !13350
  call void @llvm.dbg.value(metadata i32 %15, metadata !12076, metadata !DIExpression()) #23, !dbg !13346
  call void @llvm.dbg.value(metadata i32 %15, metadata !13343, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13365
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13372, !srcloc !12124
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13340, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()), !dbg !13345
  ret %struct.k_thread* %7, !dbg !13373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13376, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13184, metadata !DIExpression()) #23, !dbg !13378
  call void @llvm.dbg.value(metadata i32 0, metadata !13185, metadata !DIExpression()) #23, !dbg !13380
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13381
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13383, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13381
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13386
  br i1 %3, label %5, label %4, !dbg !13387

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13388
  unreachable, !dbg !13388

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13381
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13389
  call void @llvm.dbg.value(metadata i32 undef, metadata !13187, metadata !DIExpression()) #23, !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression()) #23, !dbg !13380
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13390
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13391
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13391
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13393
  br i1 %6, label %8, label %7, !dbg !13394

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13395
  unreachable, !dbg !13395

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %9, metadata !12082, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %9, metadata !12076, metadata !DIExpression()) #23, !dbg !13381
  call void @llvm.dbg.value(metadata i32 %9, metadata !13187, metadata !DIExpression()) #23, !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13391
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13396
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13398, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13185, metadata !DIExpression()) #23, !dbg !13380
  call void @llvm.dbg.value(metadata i32 undef, metadata !13185, metadata !DIExpression()) #23, !dbg !13380
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13399
  ret void, !dbg !13400
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13403, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i32 %1, metadata !13404, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i8 0, metadata !13405, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i32 0, metadata !13406, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13411
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13413, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13411
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13416
  br i1 %4, label %6, label %5, !dbg !13417

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13418
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13418
  unreachable, !dbg !13418

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13411
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13408, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8 poison, metadata !13405, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression()), !dbg !13410
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13420
  call void @llvm.dbg.value(metadata i1 %9, metadata !13405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13409
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !13423

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12264, metadata !DIExpression()) #23, !dbg !13424
  %14 = load i8, i8* %7, align 1, !dbg !13430
  %15 = and i8 %14, 127, !dbg !13430
  store i8 %15, i8* %7, align 1, !dbg !13430
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12272, metadata !DIExpression()) #23, !dbg !13431
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13433
  store i8 %12, i8* %11, align 2, !dbg !13434
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12281, metadata !DIExpression()) #23, !dbg !13435
  %16 = load i8, i8* %7, align 1, !dbg !13437
  %17 = or i8 %16, -128, !dbg !13437
  store i8 %17, i8* %7, align 1, !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12288, metadata !DIExpression()) #23, !dbg !13438
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12295, metadata !DIExpression()) #23, !dbg !13440
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12301, metadata !DIExpression()) #23, !dbg !13440
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !13442
  br i1 %18, label %19, label %20, !dbg !13443

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13444
  unreachable, !dbg !13444

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13445
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12302, metadata !DIExpression()) #23, !dbg !13440
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13446
  br i1 %22, label %32, label %23, !dbg !13445

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12302, metadata !DIExpression()) #23, !dbg !13440
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !13447
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !12302, metadata !DIExpression()) #23, !dbg !13440
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !13448
  %27 = icmp sgt i32 %26, 0, !dbg !13449
  br i1 %27, label %28, label %29, !dbg !13450

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !13451
  br label %33, !dbg !13452

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !13446
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12302, metadata !DIExpression()) #23, !dbg !13440
  %31 = icmp eq %struct._dnode* %30, null, !dbg !13446
  br i1 %31, label %32, label %23, !dbg !13445, !llvm.loop !13453

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !13455
  br label %33, !dbg !13456

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13457
  br label %35, !dbg !13458

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !13459
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13461
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13461
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13463
  br i1 %36, label %38, label %37, !dbg !13464

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13465
  unreachable, !dbg !13465

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %39, metadata !12082, metadata !DIExpression()) #23, !dbg !13415
  call void @llvm.dbg.value(metadata i32 %39, metadata !12076, metadata !DIExpression()) #23, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %39, metadata !13408, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !13468, !srcloc !12124
  call void @llvm.dbg.value(metadata i8 poison, metadata !13405, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression()), !dbg !13410
  ret i1 %9, !dbg !13469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13474, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata i32 %1, metadata !13475, metadata !DIExpression()), !dbg !13477
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13478
  call void @llvm.dbg.value(metadata i1 %3, metadata !13476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13477
  br i1 %3, label %4, label %12, !dbg !13479

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13481
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13482
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13482
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13482
  %9 = load i8, i8* %8, align 1, !dbg !13482
  %10 = icmp eq i8 %9, 0, !dbg !13483
  br i1 %10, label %11, label %12, !dbg !13484

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13485
  br label %12, !dbg !13487

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13489 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13495
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13497, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13495
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13500
  br i1 %2, label %4, label %3, !dbg !13501

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13502
  unreachable, !dbg !13502

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13495
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13503
  call void @llvm.dbg.value(metadata i32 undef, metadata !13493, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()), !dbg !13494
  tail call fastcc void @z_sched_lock() #24, !dbg !13504
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13507
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13509
  br i1 %5, label %7, label %6, !dbg !13510

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13511
  unreachable, !dbg !13511

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %8, metadata !12082, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %8, metadata !12076, metadata !DIExpression()) #23, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %8, metadata !13493, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13514, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()), !dbg !13494
  ret void, !dbg !13515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13516 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13517, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %1, metadata !12802, metadata !DIExpression()) #23, !dbg !13522
  %2 = icmp eq i32 %1, 0, !dbg !13523
  br i1 %2, label %4, label %3, !dbg !13524

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.230, i32 0, i32 0), i32 noundef 253) #25, !dbg !13525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.230, i32 0, i32 0), i32 noundef 253) #25, !dbg !13525
  unreachable, !dbg !13525

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13527
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13527
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13527
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13527
  %9 = load i8, i8* %8, align 1, !dbg !13527
  %10 = icmp eq i8 %9, 1, !dbg !13527
  br i1 %10, label %11, label %12, !dbg !13530

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.230, i32 0, i32 0), i32 noundef 254) #25, !dbg !13531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.230, i32 0, i32 0), i32 noundef 254) #25, !dbg !13531
  unreachable, !dbg !13531

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !13533
  store i8 %13, i8* %8, align 1, !dbg !13533
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13534, !srcloc !13536
  ret void, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13538 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13540, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13544
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13546, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13544
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13549
  br i1 %2, label %4, label %3, !dbg !13550

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13551
  unreachable, !dbg !13551

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13548
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13544
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13552
  call void @llvm.dbg.value(metadata i32 undef, metadata !13542, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i32 undef, metadata !13540, metadata !DIExpression()), !dbg !13543
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13553
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13553
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13553
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13553
  %9 = load i8, i8* %8, align 1, !dbg !13553
  %10 = icmp eq i8 %9, 0, !dbg !13553
  br i1 %10, label %11, label %12, !dbg !13558

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 999) #25, !dbg !13559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 999) #25, !dbg !13559
  unreachable, !dbg !13559

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13561, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %13, metadata !12802, metadata !DIExpression()) #23, !dbg !13566
  %14 = icmp eq i32 %13, 0, !dbg !13567
  br i1 %14, label %16, label %15, !dbg !13568

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1000) #25, !dbg !13569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1000) #25, !dbg !13569
  unreachable, !dbg !13569

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13571
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !13572
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !13572
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !13572
  %21 = load i8, i8* %20, align 1, !dbg !13573
  %22 = add i8 %21, 1, !dbg !13573
  store i8 %22, i8* %20, align 1, !dbg !13573
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13575
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !13575
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13577
  br i1 %23, label %25, label %24, !dbg !13578

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !13579
  unreachable, !dbg !13579

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !13546
  call void @llvm.dbg.value(metadata i32 %26, metadata !12082, metadata !DIExpression()) #23, !dbg !13548
  call void @llvm.dbg.value(metadata i32 %26, metadata !12076, metadata !DIExpression()) #23, !dbg !13544
  call void @llvm.dbg.value(metadata i32 %26, metadata !13542, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !13575
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !13580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !13582, !srcloc !12124
  call void @llvm.dbg.value(metadata i32 1, metadata !13540, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i32 undef, metadata !13540, metadata !DIExpression()), !dbg !13543
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13583
  ret void, !dbg !13584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #7 !dbg !13585 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13586
  ret %struct.k_thread* %1, !dbg !13587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !13588 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13592, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13593, metadata !DIExpression()), !dbg !13597
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13598
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13594, metadata !DIExpression()), !dbg !13597
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13599
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13595, metadata !DIExpression()), !dbg !13597
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %5, metadata !13596, metadata !DIExpression()), !dbg !13597
  %6 = icmp sgt i32 %5, 0, !dbg !13601
  br i1 %6, label %17, label %7, !dbg !13603

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13604
  br i1 %8, label %17, label %9, !dbg !13606

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13607
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13607
  %12 = load i32, i32* %11, align 8, !dbg !13607
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13609
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13609
  %15 = load i32, i32* %14, align 8, !dbg !13609
  %16 = icmp ult i32 %12, %15, !dbg !13610
  br label %17, !dbg !13611

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13612
  ret i1 %18, !dbg !13613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13614 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13631, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13632, metadata !DIExpression()), !dbg !13646
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13647
  br i1 %4, label %5, label %6, !dbg !13650

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1179) #25, !dbg !13651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1179) #25, !dbg !13651
  unreachable, !dbg !13651

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13653
  %8 = load i32, i32* %7, align 4, !dbg !13654
  %9 = add nsw i32 %8, 1, !dbg !13654
  store i32 %9, i32* %7, align 4, !dbg !13654
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13655
  store i32 %8, i32* %10, align 8, !dbg !13656
  %11 = load i32, i32* %7, align 4, !dbg !13657
  %12 = icmp eq i32 %11, 0, !dbg !13658
  br i1 %12, label %13, label %35, !dbg !13659

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13660
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13660
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13634, metadata !DIExpression()), !dbg !13660
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13660
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13660
  %17 = load i32, i32* %16, align 4, !dbg !13660
  %18 = shl i32 %17, 2, !dbg !13660
  %19 = alloca i8, i32 %18, align 8, !dbg !13660
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13660
  store i8* %19, i8** %20, align 4, !dbg !13660
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13660
  %22 = alloca i8, i32 %17, align 8, !dbg !13660
  store i8* %22, i8** %21, align 4, !dbg !13660
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13660
  store i32 -1, i32* %23, align 4, !dbg !13660
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13661
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13643, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13633, metadata !DIExpression()), !dbg !13646
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !13663
  br i1 %25, label %26, label %27, !dbg !13660

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13663
  br label %35, !dbg !13664

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !13633, metadata !DIExpression()), !dbg !13646
  %29 = load i32, i32* %7, align 4, !dbg !13665
  %30 = add nsw i32 %29, 1, !dbg !13665
  store i32 %30, i32* %7, align 4, !dbg !13665
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !13667
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !13667
  store i32 %29, i32* %32, align 8, !dbg !13668
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13661
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13643, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13633, metadata !DIExpression()), !dbg !13646
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !13663
  br i1 %34, label %26, label %27, !dbg !13660, !llvm.loop !13669

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13671
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13672
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !13673
  ret void, !dbg !13674
}

; Function Attrs: optsize
declare !dbg !13675 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13680 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13683 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13685, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13686, metadata !DIExpression()), !dbg !13687
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13688
  br i1 %3, label %4, label %5, !dbg !13691

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1200) #25, !dbg !13692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1200) #25, !dbg !13692
  unreachable, !dbg !13692

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13694
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13695
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !13696
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13697
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !13697
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !13699
  br i1 %10, label %11, label %13, !dbg !13700

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13701
  store i32 0, i32* %12, align 4, !dbg !13703
  br label %13, !dbg !13704

13:                                               ; preds = %11, %5
  ret void, !dbg !13705
}

; Function Attrs: optsize
declare !dbg !13706 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13707 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13711, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13712, metadata !DIExpression()), !dbg !13714
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13715
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13716
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13713, metadata !DIExpression()), !dbg !13714
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13712, metadata !DIExpression()), !dbg !13714
  ret %struct.k_thread* %4, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13722, metadata !DIExpression()), !dbg !13723
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !13724
  ret %struct.rbnode* %2, !dbg !13725
}

; Function Attrs: optsize
declare !dbg !13726 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #21 !dbg !13729 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13739, metadata !DIExpression()), !dbg !13743
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13744
  %3 = load i32, i32* %2, align 4, !dbg !13744
  %4 = icmp eq i32 %3, 0, !dbg !13746
  br i1 %4, label %10, label %5, !dbg !13747

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13740, metadata !DIExpression()), !dbg !13743
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13748, !range !3999
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13749
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13741, metadata !DIExpression()), !dbg !13743
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13750
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13742, metadata !DIExpression()), !dbg !13743
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13740, metadata !DIExpression()), !dbg !13743
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13743
  ret %struct.k_thread* %11, !dbg !13751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !13752 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13756, metadata !DIExpression()), !dbg !13759
  call void @llvm.dbg.value(metadata i32 0, metadata !13757, metadata !DIExpression()), !dbg !13759
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !13760
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13758, metadata !DIExpression()), !dbg !13759
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13761
  br i1 %3, label %8, label %4, !dbg !13762

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13763
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13765
  call void @llvm.dbg.value(metadata i32 1, metadata !13757, metadata !DIExpression()), !dbg !13759
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !13760
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13758, metadata !DIExpression()), !dbg !13759
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13761
  br i1 %7, label %8, label %4, !dbg !13762, !llvm.loop !13766

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13759
  ret i32 %9, !dbg !13768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #7 !dbg !13769 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13771, metadata !DIExpression()), !dbg !13772
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13773
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13774
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13775
  ret %struct.k_thread* %4, !dbg !13776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !13777 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13786, metadata !DIExpression()), !dbg !13787
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13788
  tail call fastcc void @sys_dlist_init.235(%struct._dnode* noundef nonnull %2) #24, !dbg !13789
  ret void, !dbg !13790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.235(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13791 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13795, metadata !DIExpression()), !dbg !13796
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13797
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13798
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13799
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13800
  ret void, !dbg !13801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13802 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13803
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13804
  ret void, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !13806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13811, metadata !DIExpression()), !dbg !13812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13813
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13813
  %4 = load i8, i8* %3, align 2, !dbg !13813
  %5 = sext i8 %4 to i32, !dbg !13814
  ret i32 %5, !dbg !13815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13820, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata i32 %1, metadata !13821, metadata !DIExpression()), !dbg !13823
  %3 = add i32 %1, 16, !dbg !13824
  %4 = icmp ult i32 %3, 31, !dbg !13824
  br i1 %4, label %6, label %5, !dbg !13824

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1331) #25, !dbg !13828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.239, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !13828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1331) #25, !dbg !13828
  unreachable, !dbg !13828

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13830, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %7, metadata !12802, metadata !DIExpression()) #23, !dbg !13835
  %8 = icmp eq i32 %7, 0, !dbg !13836
  br i1 %8, label %10, label %9, !dbg !13837

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1332) #25, !dbg !13838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1332) #25, !dbg !13838
  unreachable, !dbg !13838

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13822, metadata !DIExpression()), !dbg !13823
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13840
  ret void, !dbg !13841
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13842 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13843
  br i1 %1, label %8, label %2, !dbg !13844

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13845
  br i1 %3, label %8, label %4, !dbg !13846

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13847
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13848
  %7 = xor i1 %6, true, !dbg !13846
  br label %8, !dbg !13846

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #7 !dbg !13850 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13851, !range !6440
  %2 = icmp eq i8 %1, 0, !dbg !13851
  ret i1 %2, !dbg !13852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13853 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13856, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %1, metadata !12802, metadata !DIExpression()) #23, !dbg !13861
  %2 = icmp eq i32 %1, 0, !dbg !13862
  br i1 %2, label %4, label %3, !dbg !13863

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1392) #25, !dbg !13864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1392) #25, !dbg !13864
  unreachable, !dbg !13864

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13866
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13868, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13866
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13871
  br i1 %6, label %8, label %7, !dbg !13872

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !13873
  unreachable, !dbg !13873

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13866
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13874
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()), !dbg !13875
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13876
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12264, metadata !DIExpression()) #23, !dbg !13879
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !13881
  %11 = load i8, i8* %10, align 1, !dbg !13882
  %12 = and i8 %11, 127, !dbg !13882
  store i8 %12, i8* %10, align 1, !dbg !13882
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12272, metadata !DIExpression()) #23, !dbg !13883
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !13885
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12281, metadata !DIExpression()) #23, !dbg !13887
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !13889
  %15 = load i8, i8* %14, align 1, !dbg !13890
  %16 = or i8 %15, -128, !dbg !13890
  store i8 %16, i8* %14, align 1, !dbg !13890
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12288, metadata !DIExpression()) #23, !dbg !13891
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12295, metadata !DIExpression()) #23, !dbg !13893
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12301, metadata !DIExpression()) #23, !dbg !13893
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !13895
  br i1 %17, label %18, label %19, !dbg !13896

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 186) #25, !dbg !13897
  unreachable, !dbg !13897

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13898
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12302, metadata !DIExpression()) #23, !dbg !13893
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13899
  br i1 %21, label %32, label %22, !dbg !13898

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !12302, metadata !DIExpression()) #23, !dbg !13893
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !13900
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12302, metadata !DIExpression()) #23, !dbg !13893
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !13901
  %26 = icmp sgt i32 %25, 0, !dbg !13902
  br i1 %26, label %27, label %29, !dbg !13903

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !13904
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !13905
  br label %34, !dbg !13906

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !13899
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12302, metadata !DIExpression()) #23, !dbg !13893
  %31 = icmp eq %struct._dnode* %30, null, !dbg !13899
  br i1 %31, label %32, label %22, !dbg !13898, !llvm.loop !13907

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !13909
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !13910
  br label %34, !dbg !13911

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13912
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12755, metadata !DIExpression()) #23, !dbg !13913
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12759, metadata !DIExpression()) #23, !dbg !13915
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13917
  br i1 %35, label %37, label %36, !dbg !13918

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !13919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !13919
  unreachable, !dbg !13919

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !13868
  call void @llvm.dbg.value(metadata i32 %38, metadata !12082, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata i32 %38, metadata !12076, metadata !DIExpression()) #23, !dbg !13866
  call void @llvm.dbg.value(metadata i32 %38, metadata !13855, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !13913
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13922 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13926, metadata !DIExpression()), !dbg !13929
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13930, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %3, metadata !12802, metadata !DIExpression()) #23, !dbg !13935
  %4 = icmp eq i32 %3, 0, !dbg !13936
  br i1 %4, label %6, label %5, !dbg !13937

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1463) #25, !dbg !13938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1463) #25, !dbg !13938
  unreachable, !dbg !13938

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !13940
  br i1 %7, label %8, label %10, !dbg !13942

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13943
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !13945
  br label %15, !dbg !13946

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !13927, metadata !DIExpression()), !dbg !13929
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13947
  %12 = sext i32 %11 to i64, !dbg !13947
  call void @llvm.dbg.value(metadata i64 %12, metadata !13927, metadata !DIExpression()), !dbg !13929
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !13948
  %14 = trunc i64 %13 to i32, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %14, metadata !13928, metadata !DIExpression()), !dbg !13929
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !13929
  ret i32 %16, !dbg !13949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13954, metadata !DIExpression()), !dbg !13955
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13956, !srcloc !13958
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13959
  ret void, !dbg !13960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13961 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13965, metadata !DIExpression()), !dbg !13969
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13970, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %2, metadata !12802, metadata !DIExpression()) #23, !dbg !13975
  %3 = icmp eq i32 %2, 0, !dbg !13976
  br i1 %3, label %5, label %4, !dbg !13977

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1420) #25, !dbg !13978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !13978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1420) #25, !dbg !13978
  unreachable, !dbg !13978

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !13980
  br i1 %6, label %7, label %8, !dbg !13982

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !13983
  br label %43, !dbg !13985

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !13967, metadata !DIExpression()), !dbg !13969
  %9 = icmp sgt i64 %0, -3, !dbg !13986
  br i1 %9, label %10, label %14, !dbg !13988

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13989
  %12 = trunc i64 %0 to i32, !dbg !13991
  %13 = add i32 %11, %12, !dbg !13991
  call void @llvm.dbg.value(metadata i32 %13, metadata !13966, metadata !DIExpression()), !dbg !13969
  br label %17, !dbg !13992

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !13993
  %16 = sub i32 -2, %15, !dbg !13993
  call void @llvm.dbg.value(metadata i32 %16, metadata !13966, metadata !DIExpression()), !dbg !13969
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !13995
  call void @llvm.dbg.value(metadata i32 %18, metadata !13966, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !13996
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13998, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13996
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14001
  br i1 %20, label %22, label %21, !dbg !14002

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14003
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14003
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14003
  unreachable, !dbg !14003

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !13996
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14004
  call void @llvm.dbg.value(metadata i32 undef, metadata !13968, metadata !DIExpression()), !dbg !13969
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14005
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !14006
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !14007
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14008
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14009
  tail call fastcc void @z_add_thread_timeout.218(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !14009
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14010
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !14012
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12755, metadata !DIExpression()) #23, !dbg !14012
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12759, metadata !DIExpression()) #23, !dbg !14014
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14016
  br i1 %27, label %29, label %28, !dbg !14017

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14018
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14018
  unreachable, !dbg !14018

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !13998
  call void @llvm.dbg.value(metadata i32 %30, metadata !12082, metadata !DIExpression()) #23, !dbg !14000
  call void @llvm.dbg.value(metadata i32 %30, metadata !12076, metadata !DIExpression()) #23, !dbg !13996
  call void @llvm.dbg.value(metadata i32 %30, metadata !13968, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !14012
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !14019
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14020
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !14020
  br i1 %33, label %34, label %35, !dbg !14023

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1448) #25, !dbg !14024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.208, i32 0, i32 0)) #25, !dbg !14024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1448) #25, !dbg !14024
  unreachable, !dbg !14024

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !14026
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14027
  %38 = zext i32 %37 to i64, !dbg !14027
  %39 = sub nsw i64 %36, %38, !dbg !14028
  call void @llvm.dbg.value(metadata i64 %39, metadata !13965, metadata !DIExpression()), !dbg !13969
  %40 = icmp sgt i64 %39, 0, !dbg !14029
  %41 = select i1 %40, i64 %39, i64 0, !dbg !14029
  %42 = trunc i64 %41 to i32, !dbg !14029
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !13969
  ret i32 %44, !dbg !14030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !14031 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i64 %0, metadata !12132, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 10000, metadata !12135, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 1000, metadata !12136, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i8 1, metadata !12137, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i1 false, metadata !12138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14035
  call void @llvm.dbg.value(metadata i1 false, metadata !12139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14035
  call void @llvm.dbg.value(metadata i8 0, metadata !12140, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i1 false, metadata !12141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14035
  call void @llvm.dbg.value(metadata i1 true, metadata !12142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14035
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i64 %0, metadata !12132, metadata !DIExpression()), !dbg !14035
  %2 = udiv i64 %0, 10, !dbg !14037
  ret i64 %2, !dbg !14041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14042 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14043, !srcloc !14045
  tail call void @z_impl_k_yield() #24, !dbg !14046
  ret void, !dbg !14047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14052, metadata !DIExpression()), !dbg !14054
  %2 = sext i32 %0 to i64, !dbg !14055
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !14056
  call void @llvm.dbg.value(metadata i64 %3, metadata !14053, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14054
  %4 = shl i64 %3, 32, !dbg !14057
  %5 = ashr exact i64 %4, 32, !dbg !14057
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()), !dbg !14054
  %7 = sext i32 %6 to i64, !dbg !14059
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !14060
  %9 = trunc i64 %8 to i32, !dbg !14060
  ret i32 %9, !dbg !14061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14062 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14064, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.value(metadata i64 %0, metadata !12132, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12135, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i32 10000, metadata !12136, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i8 1, metadata !12137, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i1 false, metadata !12138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14066
  call void @llvm.dbg.value(metadata i1 true, metadata !12139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14066
  call void @llvm.dbg.value(metadata i8 0, metadata !12140, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i1 false, metadata !12141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14066
  call void @llvm.dbg.value(metadata i1 true, metadata !12142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14066
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14066
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14066
  %2 = add i64 %0, 99, !dbg !14068
  call void @llvm.dbg.value(metadata i64 %2, metadata !12132, metadata !DIExpression()), !dbg !14066
  %3 = udiv i64 %2, 100, !dbg !14069
  ret i64 %3, !dbg !14070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !14071 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14073, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i64 %0, metadata !12132, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i32 10000, metadata !12135, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12136, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i8 1, metadata !12137, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i1 false, metadata !12138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14075
  call void @llvm.dbg.value(metadata i1 false, metadata !12139, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14075
  call void @llvm.dbg.value(metadata i8 0, metadata !12140, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i1 true, metadata !12141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14075
  call void @llvm.dbg.value(metadata i1 false, metadata !12142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14075
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14075
  call void @llvm.dbg.value(metadata i64 0, metadata !12143, metadata !DIExpression()), !dbg !14075
  %2 = mul i64 %0, 100, !dbg !14077
  ret i64 %2, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14083
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !14084
  br i1 %2, label %14, label %3, !dbg !14086

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14087
  %5 = icmp slt i32 %4, 0, !dbg !14089
  br i1 %5, label %6, label %10, !dbg !14090

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14091
  %8 = load i8, i8* %7, align 1, !dbg !14091
  %9 = icmp eq i8 %8, 16, !dbg !14094
  br i1 %9, label %10, label %14, !dbg !14095

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14096
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14097
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14098, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %11, metadata !12802, metadata !DIExpression()) #23, !dbg !14102
  %12 = icmp eq i32 %11, 0, !dbg !14103
  br i1 %12, label %13, label %14, !dbg !14104

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14105
  br label %14, !dbg !14107

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14111, metadata !DIExpression()), !dbg !14112
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14113
  %3 = load i8, i8* %2, align 1, !dbg !14113
  %4 = and i8 %3, 2, !dbg !14114
  %5 = icmp ne i8 %4, 0, !dbg !14115
  ret i1 %5, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #7 !dbg !14117 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14122
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14121, metadata !DIExpression()), !dbg !14123
  ret %struct.k_thread* %1, !dbg !14124
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14125 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14128, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %1, metadata !12802, metadata !DIExpression()) #23, !dbg !14131
  %2 = icmp eq i32 %1, 0, !dbg !14132
  br i1 %2, label %3, label %8, !dbg !14133

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14134
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !14135
  %6 = icmp ne i32 %5, 0, !dbg !14133
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14139, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !14142
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14144, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !14142
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14147
  br i1 %3, label %5, label %4, !dbg !14148

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14149
  unreachable, !dbg !14149

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %6, metadata !12082, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 %6, metadata !12076, metadata !DIExpression()) #23, !dbg !14142
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14150
  call void @llvm.dbg.value(metadata i32 %6, metadata !14140, metadata !DIExpression()), !dbg !14141
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14151
  %8 = load i8, i8* %7, align 4, !dbg !14151
  %9 = and i8 %8, 1, !dbg !14153
  %10 = icmp eq i8 %9, 0, !dbg !14154
  br i1 %10, label %15, label %11, !dbg !14155

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14156
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !14156
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14159
  br i1 %12, label %14, label %13, !dbg !14160

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14161
  unreachable, !dbg !14161

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !14156
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !14162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14164, !srcloc !12124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1731) #25, !dbg !14165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.248, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !14165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1731) #25, !dbg !14165
  unreachable, !dbg !14165

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14169
  %17 = load i8, i8* %16, align 1, !dbg !14169
  %18 = and i8 %17, 8, !dbg !14171
  %19 = icmp eq i8 %18, 0, !dbg !14172
  br i1 %19, label %24, label %20, !dbg !14173

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14174
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !14174
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14177
  br i1 %21, label %23, label %22, !dbg !14178

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14179
  unreachable, !dbg !14179

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !14180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14182, !srcloc !12124
  br label %39, !dbg !14183

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !14184
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14185
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !14187
  br i1 %26, label %27, label %35, !dbg !14188

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14189, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %28, metadata !12802, metadata !DIExpression()) #23, !dbg !14192
  %29 = icmp eq i32 %28, 0, !dbg !14193
  br i1 %29, label %30, label %35, !dbg !14194

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !14195
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12755, metadata !DIExpression()) #23, !dbg !14195
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12759, metadata !DIExpression()) #23, !dbg !14198
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14200
  br i1 %31, label %33, label %32, !dbg !14201

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14202
  unreachable, !dbg !14202

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !12750, metadata !DIExpression()) #23, !dbg !14195
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !14203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1778) #25, !dbg !14204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.249, i32 0, i32 0)) #25, !dbg !14204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1778) #25, !dbg !14204
  unreachable, !dbg !14204

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14208
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !14208
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14210
  br i1 %36, label %38, label %37, !dbg !14211

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14212
  unreachable, !dbg !14212

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !12104, metadata !DIExpression()) #23, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %6, metadata !12118, metadata !DIExpression()) #23, !dbg !14213
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14215, !srcloc !12124
  br label %39, !dbg !14216

39:                                               ; preds = %38, %23
  ret void, !dbg !14216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()), !dbg !14220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14221
  %3 = load i8, i8* %2, align 1, !dbg !14221
  %4 = and i8 %3, 8, !dbg !14223
  %5 = icmp eq i8 %4, 0, !dbg !14224
  br i1 %5, label %6, label %20, !dbg !14225

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14226
  %8 = or i8 %7, 8, !dbg !14226
  store i8 %8, i8* %2, align 1, !dbg !14226
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !14228
  br i1 %9, label %10, label %12, !dbg !14230

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12264, metadata !DIExpression()) #23, !dbg !14231
  %11 = and i8 %8, 95, !dbg !14234
  store i8 %11, i8* %2, align 1, !dbg !14234
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12272, metadata !DIExpression()) #23, !dbg !14235
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14237
  br label %12, !dbg !14238

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14239
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !14239
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !14241
  br i1 %15, label %17, label %16, !dbg !14242

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14243
  br label %17, !dbg !14245

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14246
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14247
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !14248
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14249
  br label %20, !dbg !14250

20:                                               ; preds = %17, %1
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !14252 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14256, metadata !DIExpression()), !dbg !14258
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14259
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14257, metadata !DIExpression()), !dbg !14258
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14260
  br i1 %3, label %10, label %4, !dbg !14261

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14262
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14264
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14265, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i32 0, metadata !14270, metadata !DIExpression()), !dbg !14271
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !14273
  store i32 0, i32* %7, align 4, !dbg !14274
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14275
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !14259
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14257, metadata !DIExpression()), !dbg !14258
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14260
  br i1 %9, label %10, label %4, !dbg !14261, !llvm.loop !14276

10:                                               ; preds = %4, %1
  ret void, !dbg !14278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14279 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14284, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14283, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !14288
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14290, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !14292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !14288
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14293
  br i1 %4, label %6, label %5, !dbg !14294

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14295
  unreachable, !dbg !14295

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14290
  call void @llvm.dbg.value(metadata i32 %7, metadata !12082, metadata !DIExpression()) #23, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %7, metadata !12076, metadata !DIExpression()) #23, !dbg !14288
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14296
  call void @llvm.dbg.value(metadata i32 %7, metadata !14285, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.value(metadata i32 0, metadata !14286, metadata !DIExpression()), !dbg !14287
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14297
  %9 = load i8, i8* %8, align 1, !dbg !14297
  %10 = and i8 %9, 8, !dbg !14299
  %11 = icmp eq i8 %10, 0, !dbg !14300
  br i1 %11, label %12, label %35, !dbg !14301

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !14284, metadata !DIExpression()), !dbg !14287
  %14 = icmp eq i64 %13, 0, !dbg !14302
  br i1 %14, label %35, label %15, !dbg !14304

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14305
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14307
  br i1 %17, label %35, label %18, !dbg !14308

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14309
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !14309
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !14310
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !14311
  br i1 %22, label %35, label %23, !dbg !14312

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14313, !srcloc !12806
  call void @llvm.dbg.value(metadata i32 %24, metadata !12802, metadata !DIExpression()) #23, !dbg !14319
  %25 = icmp eq i32 %24, 0, !dbg !14320
  br i1 %25, label %27, label %26, !dbg !14321

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1809) #25, !dbg !14322
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.250, i32 0, i32 0)) #25, !dbg !14322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.206, i32 0, i32 0), i32 noundef 1809) #25, !dbg !14322
  unreachable, !dbg !14322

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14324
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14325
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !14326
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14327
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #23, !dbg !14329
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12755, metadata !DIExpression()) #23, !dbg !14329
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12759, metadata !DIExpression()) #23, !dbg !14331
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14333
  br i1 %31, label %33, label %32, !dbg !14334

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 225) #25, !dbg !14335
  unreachable, !dbg !14335

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !12750, metadata !DIExpression()) #23, !dbg !14329
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %34, metadata !14286, metadata !DIExpression()), !dbg !14287
  br label %40, !dbg !14337

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !14338
  call void @llvm.dbg.value(metadata i32 %36, metadata !14286, metadata !DIExpression()), !dbg !14287
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14339
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !14339
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14341
  br i1 %37, label %39, label %38, !dbg !14342

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14343
  unreachable, !dbg !14343

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !12104, metadata !DIExpression()) #23, !dbg !14339
  call void @llvm.dbg.value(metadata i32 %7, metadata !12118, metadata !DIExpression()) #23, !dbg !14344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14346, !srcloc !12124
  br label %40, !dbg !14347

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !14287
  ret i32 %41, !dbg !14348
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14353, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 %1, metadata !14354, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i8* %2, metadata !14355, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i8 0, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 0, metadata !14358, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12070, metadata !DIExpression()) #23, !dbg !14363
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14365, !srcloc !12085
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !14363
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14368
  br i1 %5, label %7, label %6, !dbg !14369

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14370
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.203, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14370
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 148) #25, !dbg !14370
  unreachable, !dbg !14370

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #23, !dbg !14363
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i8 poison, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()), !dbg !14362
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14356, metadata !DIExpression()), !dbg !14361
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14375
  br i1 %10, label %15, label %11, !dbg !14377

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14378, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i32 %1, metadata !14383, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i8* %2, metadata !14384, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14265, metadata !DIExpression()), !dbg !14388
  call void @llvm.dbg.value(metadata i32 %1, metadata !14270, metadata !DIExpression()), !dbg !14388
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 6, i32 1, !dbg !14390
  store i32 %1, i32* %12, align 4, !dbg !14391
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14392
  store i8* %2, i8** %13, align 4, !dbg !14393
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !14394
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !14395
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !14396
  call void @llvm.dbg.value(metadata i8 1, metadata !14357, metadata !DIExpression()), !dbg !14361
  br label %15, !dbg !14397

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14398
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !12109, metadata !DIExpression()) #23, !dbg !14398
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14400
  br i1 %16, label %18, label %17, !dbg !14401

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.204, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #25, !dbg !14402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.202, i32 0, i32 0), i32 noundef 194) #25, !dbg !14402
  unreachable, !dbg !14402

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !14361
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !14365
  call void @llvm.dbg.value(metadata i32 %20, metadata !12082, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata i32 %20, metadata !12076, metadata !DIExpression()) #23, !dbg !14363
  call void @llvm.dbg.value(metadata i32 %20, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !12104, metadata !DIExpression()) #23, !dbg !14398
  call void @llvm.dbg.value(metadata i32 undef, metadata !12118, metadata !DIExpression()) #23, !dbg !14403
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !14405, !srcloc !12124
  call void @llvm.dbg.value(metadata i8 poison, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()), !dbg !14362
  ret i1 %19, !dbg !14406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14407 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14412, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i64 undef, metadata !14414, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14411, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14413, metadata !DIExpression()), !dbg !14417
  call void @llvm.dbg.value(metadata i8** %4, metadata !14415, metadata !DIExpression()), !dbg !14417
  %6 = tail call i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %6, metadata !14416, metadata !DIExpression()), !dbg !14417
  %7 = icmp eq i8** %4, null, !dbg !14419
  br i1 %7, label %12, label %8, !dbg !14421

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14422
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14424
  %11 = load i8*, i8** %10, align 4, !dbg !14424
  store i8* %11, i8** %4, align 4, !dbg !14425
  br label %12, !dbg !14426

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14428 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14430
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14431
  ret void, !dbg !14432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14433 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14443, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14441, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14442, metadata !DIExpression()), !dbg !14460
  %5 = icmp eq i64 %4, -1, !dbg !14461
  br i1 %5, label %63, label %6, !dbg !14463

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14464
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.255(%struct._dnode* noundef %7) #24, !dbg !14464
  br i1 %8, label %9, label %10, !dbg !14467

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 99) #25, !dbg !14468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.259, i32 0, i32 0)) #25, !dbg !14468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 99) #25, !dbg !14468
  unreachable, !dbg !14468

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14470
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !14471
  call void @llvm.dbg.value(metadata i32 0, metadata !14444, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14480
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14482, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14489
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14480
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14490
  br i1 %13, label %15, label %14, !dbg !14493

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14494
  unreachable, !dbg !14494

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %16, metadata !14485, metadata !DIExpression()) #23, !dbg !14489
  call void @llvm.dbg.value(metadata i32 %16, metadata !14479, metadata !DIExpression()) #23, !dbg !14480
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14496
  call void @llvm.dbg.value(metadata i32 %16, metadata !14450, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14444, metadata !DIExpression()), !dbg !14472
  %17 = icmp slt i64 %4, -1, !dbg !14497
  br i1 %17, label %18, label %24, !dbg !14498

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !14499
  %20 = add i64 %4, %19, !dbg !14500
  %21 = sub i64 -2, %20, !dbg !14500
  call void @llvm.dbg.value(metadata i64 %21, metadata !14454, metadata !DIExpression()), !dbg !14501
  %22 = icmp sgt i64 %21, 1, !dbg !14502
  %23 = select i1 %22, i64 %21, i64 1, !dbg !14502
  br label %29, !dbg !14503

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !14504
  %26 = tail call fastcc i32 @elapsed.263() #24, !dbg !14506
  %27 = sext i32 %26 to i64, !dbg !14506
  %28 = add nsw i64 %25, %27, !dbg !14507
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !14508
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14509
  store i64 %30, i64* %31, align 8, !dbg !14510
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !14511
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !14451, metadata !DIExpression()), !dbg !14513
  %33 = icmp eq %struct._timeout* %32, null, !dbg !14514
  br i1 %33, label %48, label %34, !dbg !14514

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !14515
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !14451, metadata !DIExpression()), !dbg !14513
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14519
  %38 = load i64, i64* %37, align 8, !dbg !14519
  %39 = icmp slt i64 %35, %38, !dbg !14520
  br i1 %39, label %40, label %44, !dbg !14521

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14519
  %42 = sub nsw i64 %38, %35, !dbg !14522
  store i64 %42, i64* %41, align 8, !dbg !14522
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !14524
  tail call fastcc void @sys_dlist_insert.264(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !14525
  br label %49, !dbg !14526

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !14527
  store i64 %45, i64* %31, align 8, !dbg !14527
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !14528
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !14451, metadata !DIExpression()), !dbg !14513
  %47 = icmp eq %struct._timeout* %46, null, !dbg !14514
  br i1 %47, label %48, label %34, !dbg !14514, !llvm.loop !14529

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.265(%struct._dnode* noundef nonnull %7) #24, !dbg !14531
  br label %49, !dbg !14534

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !14535
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !14536
  br i1 %51, label %52, label %59, !dbg !14537

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !14538
  call void @llvm.dbg.value(metadata i32 %53, metadata !14457, metadata !DIExpression()), !dbg !14539
  %54 = icmp ne i32 %53, 0, !dbg !14540
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !14542
  br i1 %57, label %59, label %58, !dbg !14542

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !14543
  br label %59, !dbg !14545

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14552
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14554
  br i1 %60, label %62, label %61, !dbg !14557

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14558
  unreachable, !dbg !14558

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !14546, metadata !DIExpression()) #23, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %16, metadata !14560, metadata !DIExpression()) #23, !dbg !14563
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !14565, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14444, metadata !DIExpression()), !dbg !14472
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !14567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.255(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14568 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14574, metadata !DIExpression()), !dbg !14575
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14576
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14576
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14577
  ret i1 %4, !dbg !14578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.263() unnamed_addr #1 !dbg !14579 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14582
  %2 = icmp eq i32 %1, 0, !dbg !14583
  br i1 %2, label %3, label %5, !dbg !14582

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !14584
  br label %5, !dbg !14582

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14582
  ret i32 %6, !dbg !14585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #7 !dbg !14586 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270() #24, !dbg !14592
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14590, metadata !DIExpression()), !dbg !14593
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14594
  ret %struct._timeout* %2, !dbg !14595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.264(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14596 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14600, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14601, metadata !DIExpression()), !dbg !14604
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14605
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14605
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14602, metadata !DIExpression()), !dbg !14604
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14606
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14607
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14608
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14609
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14610
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14611
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14612
  ret void, !dbg !14613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #7 !dbg !14614 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14618, metadata !DIExpression()), !dbg !14620
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14621
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.268(%struct._dnode* noundef %2) #24, !dbg !14622
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14619, metadata !DIExpression()), !dbg !14620
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14623
  ret %struct._timeout* %4, !dbg !14624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.265(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14625 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14630, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14631, metadata !DIExpression()), !dbg !14633
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14634
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14632, metadata !DIExpression()), !dbg !14633
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14635
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14636
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14637
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14638
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14639
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14640
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14641
  ret void, !dbg !14642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14643 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14648
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14645, metadata !DIExpression()), !dbg !14649
  %2 = tail call fastcc i32 @elapsed.263() #24, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %2, metadata !14646, metadata !DIExpression()), !dbg !14649
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14651
  br i1 %3, label %14, label %4, !dbg !14653

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14654
  %6 = load i64, i64* %5, align 8, !dbg !14654
  %7 = sext i32 %2 to i64, !dbg !14655
  %8 = sub nsw i64 %6, %7, !dbg !14656
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14657
  br i1 %9, label %14, label %10, !dbg !14658

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14659
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14659
  %13 = trunc i64 %12 to i32, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %13, metadata !14647, metadata !DIExpression()), !dbg !14649
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14661
  call void @llvm.dbg.value(metadata i32 %15, metadata !14647, metadata !DIExpression()), !dbg !14649
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14662
  %17 = icmp ne i32 %16, 0, !dbg !14664
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14665
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14665
  call void @llvm.dbg.value(metadata i32 %20, metadata !14647, metadata !DIExpression()), !dbg !14649
  ret i32 %20, !dbg !14666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.268(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !14667 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14671, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14674
  br i1 %2, label %5, label %3, !dbg !14675

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.269(%struct._dnode* noundef nonnull %0) #24, !dbg !14676
  br label %5, !dbg !14675

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14675
  ret %struct._dnode* %6, !dbg !14677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.269(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !14678 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14680, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14681, metadata !DIExpression()), !dbg !14682
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14683
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14684
  br i1 %3, label %7, label %4, !dbg !14685

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14686
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14686
  br label %7, !dbg !14685

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14685
  ret %struct._dnode* %8, !dbg !14687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.270() unnamed_addr #7 !dbg !14688 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14692, metadata !DIExpression()), !dbg !14693
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.271() #24, !dbg !14694
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14694
  ret %struct._dnode* %3, !dbg !14695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.271() unnamed_addr #7 !dbg !14696 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14700, metadata !DIExpression()), !dbg !14701
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14702
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14703
  ret i1 %2, !dbg !14704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14705 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14709, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 -22, metadata !14710, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 0, metadata !14711, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14716
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14718, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14716
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14721
  br i1 %3, label %5, label %4, !dbg !14722

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14723
  unreachable, !dbg !14723

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14716
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14713, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i32 -22, metadata !14710, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14715
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14710, metadata !DIExpression()), !dbg !14714
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.255(%struct._dnode* noundef %6) #24, !dbg !14725
  br i1 %7, label %8, label %9, !dbg !14729

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !14730
  call void @llvm.dbg.value(metadata i32 0, metadata !14710, metadata !DIExpression()), !dbg !14714
  br label %9, !dbg !14732

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !14714
  call void @llvm.dbg.value(metadata i32 %10, metadata !14710, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14733
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14735
  br i1 %11, label %13, label %12, !dbg !14736

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14737
  unreachable, !dbg !14737

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %14, metadata !14485, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %14, metadata !14479, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %14, metadata !14713, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !14738
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14740, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 %10, metadata !14710, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14715
  ret i32 %10, !dbg !14741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !14742 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14744, metadata !DIExpression()), !dbg !14745
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !14746
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14748
  br i1 %3, label %10, label %4, !dbg !14749

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14750
  %6 = load i64, i64* %5, align 8, !dbg !14750
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14752
  %8 = load i64, i64* %7, align 8, !dbg !14753
  %9 = add nsw i64 %8, %6, !dbg !14753
  store i64 %9, i64* %7, align 8, !dbg !14753
  br label %10, !dbg !14754

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14755
  tail call fastcc void @sys_dlist_remove.274(%struct._dnode* noundef %11) #24, !dbg !14756
  ret void, !dbg !14757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.274(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14758 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14762, metadata !DIExpression()), !dbg !14765
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14766
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14766
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14763, metadata !DIExpression()), !dbg !14765
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14767
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14767
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14764, metadata !DIExpression()), !dbg !14765
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14768
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14769
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14770
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14771
  tail call fastcc void @sys_dnode_init.275(%struct._dnode* noundef %0) #24, !dbg !14772
  ret void, !dbg !14773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.275(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14774 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14776, metadata !DIExpression()), !dbg !14777
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14778
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14779
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14780
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14781
  ret void, !dbg !14782
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14783 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14789, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i64 0, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 0, metadata !14791, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14796
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14798, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14796
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14801
  br i1 %3, label %5, label %4, !dbg !14802

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14803
  unreachable, !dbg !14803

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14796
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i64 0, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14795
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14805
  call void @llvm.dbg.value(metadata i64 %6, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14808
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14808
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14810
  br i1 %7, label %9, label %8, !dbg !14811

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14812
  unreachable, !dbg !14812

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !14798
  call void @llvm.dbg.value(metadata i32 %10, metadata !14485, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %10, metadata !14479, metadata !DIExpression()) #23, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %10, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !14813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !14815, !srcloc !14566
  call void @llvm.dbg.value(metadata i64 %6, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14795
  ret i64 %6, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14819, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.value(metadata i64 0, metadata !14820, metadata !DIExpression()), !dbg !14823
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.276(%struct._timeout* noundef %0) #24, !dbg !14824
  br i1 %2, label %21, label %3, !dbg !14826

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !14827
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14821, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i64 0, metadata !14820, metadata !DIExpression()), !dbg !14823
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14829
  br i1 %5, label %16, label %6, !dbg !14831

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14821, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i64 %8, metadata !14820, metadata !DIExpression()), !dbg !14823
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14832
  %10 = load i64, i64* %9, align 8, !dbg !14832
  %11 = add nsw i64 %10, %8, !dbg !14834
  call void @llvm.dbg.value(metadata i64 %11, metadata !14820, metadata !DIExpression()), !dbg !14823
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14835
  br i1 %12, label %16, label %13, !dbg !14837

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !14838
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14821, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i64 %11, metadata !14820, metadata !DIExpression()), !dbg !14823
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14829
  br i1 %15, label %16, label %6, !dbg !14831, !llvm.loop !14839

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14823
  call void @llvm.dbg.value(metadata i64 %17, metadata !14820, metadata !DIExpression()), !dbg !14823
  %18 = tail call fastcc i32 @elapsed.263() #24, !dbg !14841
  %19 = sext i32 %18 to i64, !dbg !14841
  %20 = sub nsw i64 %17, %19, !dbg !14842
  br label %21, !dbg !14843

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14823
  ret i64 %22, !dbg !14844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.276(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14845 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14849, metadata !DIExpression()), !dbg !14850
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14851
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.255(%struct._dnode* noundef %2) #24, !dbg !14852
  %4 = xor i1 %3, true, !dbg !14853
  ret i1 %4, !dbg !14854
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14855 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14857, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i64 0, metadata !14858, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 0, metadata !14859, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14864
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14866, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14864
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14869
  br i1 %3, label %5, label %4, !dbg !14870

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14871
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14871
  unreachable, !dbg !14871

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14864
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14872
  call void @llvm.dbg.value(metadata i32 undef, metadata !14861, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata i64 0, metadata !14858, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14863
  %6 = load i64, i64* @curr_tick, align 8, !dbg !14873
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14876
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !14858, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14877
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14877
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14879
  br i1 %8, label %10, label %9, !dbg !14880

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14881
  unreachable, !dbg !14881

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %11, metadata !14485, metadata !DIExpression()) #23, !dbg !14868
  call void @llvm.dbg.value(metadata i32 %11, metadata !14479, metadata !DIExpression()) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %11, metadata !14861, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !14858, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14877
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !14882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !14884, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14863
  %12 = add i64 %7, %6, !dbg !14885
  ret i64 %12, !dbg !14886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14887 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14889, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 0, metadata !14890, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14895
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14897, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14895
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14900
  br i1 %2, label %4, label %3, !dbg !14901

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14902
  unreachable, !dbg !14902

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14895
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14892, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i32 -1, metadata !14889, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()), !dbg !14894
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !14904
  call void @llvm.dbg.value(metadata i32 %5, metadata !14889, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14907
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14909
  br i1 %6, label %8, label %7, !dbg !14910

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14911
  unreachable, !dbg !14911

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !14897
  call void @llvm.dbg.value(metadata i32 %9, metadata !14485, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata i32 %9, metadata !14479, metadata !DIExpression()) #23, !dbg !14895
  call void @llvm.dbg.value(metadata i32 %9, metadata !14892, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !14912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14914, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 %5, metadata !14889, metadata !DIExpression()), !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14890, metadata !DIExpression()), !dbg !14894
  ret i32 %5, !dbg !14915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14918, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata i1 %1, metadata !14919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14928
  call void @llvm.dbg.value(metadata i32 0, metadata !14920, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14930
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14932, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14930
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14935
  br i1 %4, label %6, label %5, !dbg !14936

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14937
  unreachable, !dbg !14937

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14930
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14922, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14929
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %7, metadata !14923, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata i1 undef, metadata !14926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14940
  %8 = icmp slt i32 %7, 2, !dbg !14941
  call void @llvm.dbg.value(metadata i1 %8, metadata !14927, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14940
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !14942
  call void @llvm.dbg.value(metadata i1 %9, metadata !14926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14940
  br i1 %10, label %14, label %11, !dbg !14942

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !14944
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !14944
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !14946
  br label %14, !dbg !14947

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14948
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14950
  br i1 %15, label %17, label %16, !dbg !14951

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14952
  unreachable, !dbg !14952

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14932
  call void @llvm.dbg.value(metadata i32 %18, metadata !14485, metadata !DIExpression()) #23, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %18, metadata !14479, metadata !DIExpression()) #23, !dbg !14930
  call void @llvm.dbg.value(metadata i32 %18, metadata !14922, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !14953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14955, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 1, metadata !14920, metadata !DIExpression()), !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14929
  ret void, !dbg !14956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14961, metadata !DIExpression()), !dbg !14966
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !14967
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !14968
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14970, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14968
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14973
  br i1 %3, label %5, label %4, !dbg !14974

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14975
  unreachable, !dbg !14975

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !14968
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !14977
  %7 = icmp eq %struct._timeout* %6, null, !dbg !14978
  br i1 %7, label %37, label %8, !dbg !14979

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !14966
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !14980
  %14 = load i64, i64* %13, align 8, !dbg !14980
  %15 = sext i32 %11 to i64, !dbg !14981
  %16 = icmp sgt i64 %14, %15, !dbg !14982
  br i1 %16, label %35, label %17, !dbg !14983

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !14963, metadata !DIExpression()), !dbg !14984
  %18 = trunc i64 %14 to i32, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %18, metadata !14965, metadata !DIExpression()), !dbg !14984
  %19 = sext i32 %18 to i64, !dbg !14986
  %20 = load i64, i64* @curr_tick, align 8, !dbg !14987
  %21 = add i64 %20, %19, !dbg !14987
  store i64 %21, i64* @curr_tick, align 8, !dbg !14987
  store i64 0, i64* %13, align 8, !dbg !14988
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !14989
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !14990
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !14990
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14992
  br i1 %22, label %24, label %23, !dbg !14993

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !14994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14994
  unreachable, !dbg !14994

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !14546, metadata !DIExpression()) #23, !dbg !14990
  call void @llvm.dbg.value(metadata i32 %12, metadata !14560, metadata !DIExpression()) #23, !dbg !14995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14997, !srcloc !14566
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !14998
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !14998
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !14999
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !15000
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15002, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !15000
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15005
  br i1 %28, label %30, label %29, !dbg !15006

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15007
  unreachable, !dbg !15007

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !15000
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !15009
  %32 = sub nsw i32 %31, %18, !dbg !15009
  store i32 %32, i32* @announce_remaining, align 4, !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !14977
  %34 = icmp eq %struct._timeout* %33, null, !dbg !14978
  br i1 %34, label %37, label %8, !dbg !14979, !llvm.loop !15010

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !15012
  store i64 %36, i64* %13, align 8, !dbg !15012
  br label %41, !dbg !15015

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !14966
  %40 = sext i32 %39 to i64, !dbg !15016
  br label %41, !dbg !15016

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !15016
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !15017
  %45 = add i64 %44, %42, !dbg !15017
  store i64 %45, i64* @curr_tick, align 8, !dbg !15017
  store i32 0, i32* @announce_remaining, align 4, !dbg !15018
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !15019
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !15020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !15021
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15023
  br i1 %47, label %49, label %48, !dbg !15024

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15025
  unreachable, !dbg !15025

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %50, metadata !14546, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %50, metadata !14560, metadata !DIExpression()) #23, !dbg !15026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !15028, !srcloc !14566
  ret void, !dbg !15029
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15030 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15034, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 0, metadata !15035, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14473, metadata !DIExpression()) #23, !dbg !15040
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15042, !srcloc !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14486, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !15040
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15045
  br i1 %2, label %4, label %3, !dbg !15046

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.262, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15047
  unreachable, !dbg !15047

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14479, metadata !DIExpression()) #23, !dbg !15040
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i64 0, metadata !15034, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15039
  %5 = load i64, i64* @curr_tick, align 8, !dbg !15049
  %6 = tail call fastcc i32 @elapsed.263() #24, !dbg !15052
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15034, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !14551, metadata !DIExpression()) #23, !dbg !15053
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15055
  br i1 %7, label %9, label %8, !dbg !15056

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15057
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.267, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #25, !dbg !15057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15057
  unreachable, !dbg !15057

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %10, metadata !14485, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %10, metadata !14479, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %10, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15034, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15038
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !15034, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !14560, metadata !DIExpression()) #23, !dbg !15058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !15060, !srcloc !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15039
  %11 = sext i32 %6 to i64, !dbg !15052
  %12 = add i64 %5, %11, !dbg !15061
  ret i64 %12, !dbg !15062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15063 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15064
  %2 = trunc i64 %1 to i32, !dbg !15065
  ret i32 %2, !dbg !15066
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15067 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !15068
  ret i64 %1, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15072, metadata !DIExpression()), !dbg !15079
  %2 = icmp eq i32 %0, 0, !dbg !15080
  br i1 %2, label %10, label %3, !dbg !15082

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %4, metadata !15073, metadata !DIExpression()), !dbg !15079
  %5 = mul i32 %0, 200, !dbg !15084
  call void @llvm.dbg.value(metadata i32 %5, metadata !15074, metadata !DIExpression()), !dbg !15079
  br label %6, !dbg !15085

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !15086
  call void @llvm.dbg.value(metadata i32 %7, metadata !15075, metadata !DIExpression()), !dbg !15087
  %8 = sub i32 %7, %4, !dbg !15088
  %9 = icmp ult i32 %8, %5, !dbg !15090
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15092 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !15093
  ret i32 %1, !dbg !15094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15095 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15097
  ret i32 %1, !dbg !15098
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15099 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15103, metadata !DIExpression()), !dbg !15105
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15106

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !15107
  br label %14, !dbg !15111

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15104, metadata !DIExpression()), !dbg !15105
  %6 = icmp slt i64 %2, -1, !dbg !15112
  br i1 %6, label %7, label %9, !dbg !15115

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15116
  br label %14, !dbg !15117

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !15119
  %11 = icmp ugt i64 %2, 1, !dbg !15120
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15120
  %13 = add nsw i64 %10, %12, !dbg !15121
  br label %14, !dbg !15122

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15123
  ret i64 %15, !dbg !15124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !15125 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15127, metadata !DIExpression()), !dbg !15131
  %2 = icmp eq i8* %0, null, !dbg !15132
  br i1 %2, label %7, label %3, !dbg !15134

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !15128, metadata !DIExpression()), !dbg !15131
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !15135
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !15135
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !15128, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i8* %4, metadata !15127, metadata !DIExpression()), !dbg !15131
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !15137
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #25, !dbg !15138
  br label %7, !dbg !15139

7:                                                ; preds = %3, %1
  ret void, !dbg !15140
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15145, metadata !DIExpression()), !dbg !15148
  call void @llvm.dbg.value(metadata i32 %1, metadata !15146, metadata !DIExpression()), !dbg !15148
  %3 = icmp ugt i32 %0, 3, !dbg !15149
  %4 = and i32 %0, 3, !dbg !15149
  %5 = icmp eq i32 %4, 0, !dbg !15149
  %6 = and i1 %3, %5, !dbg !15149
  br i1 %6, label %8, label %7, !dbg !15149

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 68) #25, !dbg !15152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.289, i32 0, i32 0)) #25, !dbg !15152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 68) #25, !dbg !15152
  unreachable, !dbg !15152

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !15154, !range !3999
  %10 = icmp ult i32 %9, 2, !dbg !15154
  br i1 %10, label %12, label %11, !dbg !15157

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 71) #25, !dbg !15158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.291, i32 0, i32 0)) #25, !dbg !15158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 71) #25, !dbg !15158
  unreachable, !dbg !15158

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #24, !dbg !15160
  call void @llvm.dbg.value(metadata i8* %13, metadata !15147, metadata !DIExpression()), !dbg !15148
  ret i8* %13, !dbg !15161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !15162 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15166, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 %1, metadata !15167, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 %2, metadata !15168, metadata !DIExpression()), !dbg !15172
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !15168, metadata !DIExpression(DW_OP_deref)), !dbg !15172
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !15173
  br i1 %5, label %21, label %6, !dbg !15175

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %7, metadata !15171, metadata !DIExpression()), !dbg !15172
  %8 = load i32, i32* %4, align 4, !dbg !15177
  call void @llvm.dbg.value(metadata i32 %8, metadata !15168, metadata !DIExpression()), !dbg !15172
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #25, !dbg !15178
  call void @llvm.dbg.value(metadata i8* %9, metadata !15169, metadata !DIExpression()), !dbg !15172
  %10 = icmp eq i8* %9, null, !dbg !15179
  br i1 %10, label %21, label %11, !dbg !15181

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !15182
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !15170, metadata !DIExpression()), !dbg !15172
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !15183
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !15184
  call void @llvm.dbg.value(metadata i8* %13, metadata !15170, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i8* %13, metadata !15169, metadata !DIExpression()), !dbg !15172
  %14 = icmp eq i32 %1, 0, !dbg !15185
  br i1 %14, label %21, label %15, !dbg !15185

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !15185
  %17 = add i32 %1, -1, !dbg !15185
  %18 = and i32 %17, %16, !dbg !15185
  %19 = icmp eq i32 %18, 0, !dbg !15185
  br i1 %19, label %21, label %20, !dbg !15188

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 38) #25, !dbg !15189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #25, !dbg !15189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 38) #25, !dbg !15189
  unreachable, !dbg !15189

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !15172
  ret i8* %22, !dbg !15191
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #22 !dbg !15192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15197, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 4, metadata !15198, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32* %1, metadata !15199, metadata !DIExpression()), !dbg !15200
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !15201
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !15201
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !15201
  store i32 %5, i32* %1, align 4, !dbg !15201
  ret i1 %4, !dbg !15202
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !15203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15205, metadata !DIExpression()), !dbg !15207
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #24, !dbg !15208
  call void @llvm.dbg.value(metadata i8* %2, metadata !15206, metadata !DIExpression()), !dbg !15207
  ret i8* %2, !dbg !15209
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15210 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 %1, metadata !15213, metadata !DIExpression()), !dbg !15216
  %4 = bitcast i32* %3 to i8*, !dbg !15217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !15217
  call void @llvm.dbg.value(metadata i32* %3, metadata !15215, metadata !DIExpression(DW_OP_deref)), !dbg !15216
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #24, !dbg !15218
  br i1 %5, label %12, label %6, !dbg !15220

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %7, metadata !15215, metadata !DIExpression()), !dbg !15216
  %8 = tail call i8* @k_malloc(i32 noundef %7) #24, !dbg !15222
  call void @llvm.dbg.value(metadata i8* %8, metadata !15214, metadata !DIExpression()), !dbg !15216
  %9 = icmp eq i8* %8, null, !dbg !15223
  br i1 %9, label %12, label %10, !dbg !15225

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !15215, metadata !DIExpression()), !dbg !15216
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #25, !dbg !15226
  br label %12, !dbg !15228

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !15216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !15229
  ret i8* %13, !dbg !15229
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #22 !dbg !15230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15232, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 %1, metadata !15233, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32* %2, metadata !15234, metadata !DIExpression()), !dbg !15235
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15236
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15236
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15236
  store i32 %6, i32* %2, align 4, !dbg !15236
  ret i1 %5, !dbg !15237
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !15238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !15308
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 4, !dbg !15309
  ret void, !dbg !15310
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15313, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata i32 %1, metadata !15314, metadata !DIExpression()), !dbg !15317
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15318
  br i1 %3, label %9, label %4, !dbg !15320

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15321
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 5, !dbg !15323
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 4, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !15316, metadata !DIExpression()), !dbg !15317
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !15324
  br i1 %8, label %12, label %9, !dbg !15326

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i8* %11, metadata !15315, metadata !DIExpression()), !dbg !15317
  br label %12, !dbg !15329

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !15330
  call void @llvm.dbg.value(metadata i8* %13, metadata !15315, metadata !DIExpression()), !dbg !15317
  ret i8* %13, !dbg !15331
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !15332 {
  tail call void asm sideeffect "nop", ""() #23, !dbg !15334, !srcloc !15337
  ret void, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15339 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.304, i32 0, i32 0)) #25, !dbg !15341
  ret void, !dbg !15342
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !15343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15345, metadata !DIExpression()), !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !15346, metadata !DIExpression()), !dbg !15368
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !15369

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 24) #25, !dbg !15373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.309, i32 0, i32 0)) #25, !dbg !15373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 24) #25, !dbg !15373
  unreachable, !dbg !15373

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !15346, metadata !DIExpression()), !dbg !15368
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !15376
  br i1 %5, label %7, label %6, !dbg !15377

6:                                                ; preds = %3
  ret i32 0, !dbg !15378

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !15379
  %9 = load i8*, i8** %8, align 4, !dbg !15379
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !15382
  %11 = load i32, i32* %10, align 4, !dbg !15382
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #24, !dbg !15383
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !15346, metadata !DIExpression()), !dbg !15368
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !15385
  br i1 %13, label %2, label %3, !dbg !15369, !llvm.loop !15386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15392, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i8* %1, metadata !15393, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 %2, metadata !15394, metadata !DIExpression()), !dbg !15395
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !15396
  tail call fastcc void @z_waitq_init.310(%struct._wait_q_t* noundef nonnull %4) #24, !dbg !15397
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !15398
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !15399
  ret void, !dbg !15400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.310(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !15401 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15406, metadata !DIExpression()), !dbg !15407
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15408
  tail call fastcc void @sys_dlist_init.311(%struct._dnode* noundef %2) #24, !dbg !15409
  ret void, !dbg !15410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.311(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !15411 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15416, metadata !DIExpression()), !dbg !15417
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15418
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15419
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15420
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15421
  ret void, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15423 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !15434, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15431, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 %1, metadata !15432, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 %2, metadata !15433, metadata !DIExpression()), !dbg !15444
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !15445
  call void @llvm.dbg.value(metadata i64 %6, metadata !15436, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i8* null, metadata !15437, metadata !DIExpression()), !dbg !15444
  %7 = icmp eq i64 %5, -1, !dbg !15446
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !15446
  call void @llvm.dbg.value(metadata i64 %8, metadata !15436, metadata !DIExpression()), !dbg !15444
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !15447
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !15448, metadata !DIExpression()) #23, !dbg !15455
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15457, !srcloc !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #23, !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15461, metadata !DIExpression()) #23, !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15455
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #25, !dbg !15465
  br i1 %11, label %13, label %12, !dbg !15468

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.316, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #25, !dbg !15469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15469
  unreachable, !dbg !15469

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #23, !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15455
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #25, !dbg !15471
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15444
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15472, !srcloc !15481
  call void @llvm.dbg.value(metadata i32 %14, metadata !15475, metadata !DIExpression()) #23, !dbg !15482
  %15 = icmp eq i32 %14, 0, !dbg !15483
  %16 = icmp eq i64 %5, 0, !dbg !15484
  %17 = select i1 %15, i1 true, i1 %16, !dbg !15484
  br i1 %17, label %18, label %25, !dbg !15484

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !15437, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i8 0, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15444
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i8* %20, metadata !15437, metadata !DIExpression()), !dbg !15444
  %21 = tail call i64 @sys_clock_tick_get() #25, !dbg !15487
  call void @llvm.dbg.value(metadata i64 %21, metadata !15435, metadata !DIExpression()), !dbg !15444
  %22 = icmp eq i8* %20, null, !dbg !15488
  br i1 %22, label %23, label %43, !dbg !15490

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15444
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !15490

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 76) #25, !dbg !15491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.318, i32 0, i32 0)) #25, !dbg !15491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.308, i32 0, i32 0), i32 noundef 76) #25, !dbg !15491
  unreachable, !dbg !15491

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !15443, metadata !DIExpression()), !dbg !15444
  %29 = sub nsw i64 %8, %27, !dbg !15493
  %30 = icmp slt i64 %29, 1, !dbg !15494
  br i1 %30, label %43, label %31, !dbg !15495

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !15444
  call void @llvm.dbg.value(metadata i8 undef, metadata !15443, metadata !DIExpression()), !dbg !15444
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !15496
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !15496
  %35 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #25, !dbg !15496
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !15448, metadata !DIExpression()) #23, !dbg !15497
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15499, !srcloc !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15461, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15497
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #25, !dbg !15502
  br i1 %37, label %39, label %38, !dbg !15503

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.316, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #25, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15504
  unreachable, !dbg !15504

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15497
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i8* null, metadata !15437, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15444
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i8* %40, metadata !15437, metadata !DIExpression()), !dbg !15444
  %41 = tail call i64 @sys_clock_tick_get() #25, !dbg !15487
  call void @llvm.dbg.value(metadata i64 %41, metadata !15435, metadata !DIExpression()), !dbg !15444
  %42 = icmp eq i8* %40, null, !dbg !15488
  br i1 %42, label %26, label %43, !dbg !15490, !llvm.loop !15506

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !15485
  call void @llvm.dbg.value(metadata i8* %45, metadata !15437, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15509, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !15514, metadata !DIExpression()) #23, !dbg !15515
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %9) #25, !dbg !15517
  br i1 %46, label %48, label %47, !dbg !15520

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 194) #25, !dbg !15521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.320, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #25, !dbg !15521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 194) #25, !dbg !15521
  unreachable, !dbg !15521

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %49, metadata !15509, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 %49, metadata !15523, metadata !DIExpression()) #23, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #23, !dbg !15528, !srcloc !15529
  ret i8* %45, !dbg !15530
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15531 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15537, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15535, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i32 %1, metadata !15536, metadata !DIExpression()), !dbg !15539
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #24, !dbg !15540
  call void @llvm.dbg.value(metadata i8* %4, metadata !15538, metadata !DIExpression()), !dbg !15539
  ret i8* %4, !dbg !15541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15542 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15546, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.value(metadata i8* %1, metadata !15547, metadata !DIExpression()), !dbg !15549
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !15550
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !15448, metadata !DIExpression()) #23, !dbg !15551
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15553, !srcloc !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #23, !dbg !15555
  call void @llvm.dbg.value(metadata i32 undef, metadata !15461, metadata !DIExpression()) #23, !dbg !15555
  call void @llvm.dbg.value(metadata i32 undef, metadata !15454, metadata !DIExpression()) #23, !dbg !15551
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #25, !dbg !15556
  br i1 %5, label %7, label %6, !dbg !15557

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.316, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #25, !dbg !15558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 148) #25, !dbg !15558
  unreachable, !dbg !15558

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !15553
  call void @llvm.dbg.value(metadata i32 %8, metadata !15460, metadata !DIExpression()) #23, !dbg !15555
  call void @llvm.dbg.value(metadata i32 %8, metadata !15454, metadata !DIExpression()) #23, !dbg !15551
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #25, !dbg !15559
  call void @llvm.dbg.value(metadata i32 %8, metadata !15548, metadata !DIExpression()), !dbg !15549
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !15560
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #25, !dbg !15561
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !15562
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #25, !dbg !15564
  %12 = icmp eq i32 %11, 0, !dbg !15565
  br i1 %12, label %15, label %13, !dbg !15566

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !15567
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %3, [1 x i32] %14) #25, !dbg !15567
  br label %19, !dbg !15569

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15509, metadata !DIExpression()) #23, !dbg !15570
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !15514, metadata !DIExpression()) #23, !dbg !15570
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #25, !dbg !15573
  br i1 %16, label %18, label %17, !dbg !15574

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 194) #25, !dbg !15575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.320, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #25, !dbg !15575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.315, i32 0, i32 0), i32 noundef 194) #25, !dbg !15575
  unreachable, !dbg !15575

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !15509, metadata !DIExpression()) #23, !dbg !15570
  call void @llvm.dbg.value(metadata i32 %8, metadata !15523, metadata !DIExpression()) #23, !dbg !15576
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15578, !srcloc !15529
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !15579
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1145, !2, !2327, !27, !426, !2329, !2331, !2364, !2402, !2404, !437, !2406, !2417, !2464, !2466, !2494, !2522, !2565, !2636, !2681, !2709, !866, !876, !976, !1156, !1437, !2714, !1699, !2716, !2719, !2796, !2810, !2822, !2947, !1729, !2950, !1735, !2086, !2968, !2970, !2107, !3011, !2218, !2259, !3014, !3016, !2302}
!llvm.ident = !{!3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018, !3018}
!llvm.module.flags = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "printk_fifo", scope: !27, file: !218, line: 37, type: !404, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !112, globals: !215, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!29 = !{!30, !101, !107}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !102, line: 506, baseType: !32, size: 32, elements: !103)
!102 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!105 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!106 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !102, line: 512, baseType: !32, size: 32, elements: !108)
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!110 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!111 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!112 = !{!113, !117, !118, !119, !202, !207, !167, !107, !101, !212, !156, !213}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !114, line: 46, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !116)
!116 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!118 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !122)
!122 = !{!123, !157, !163, !168, !172, !173, !174, !178, !198}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !121, file: !102, line: 524, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!118, !127, !154, !155}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !131)
!130 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!131 = !{!132, !136, !137, !138, !147, !148}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !130, line: 380, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !129, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !129, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !129, file: !130, line: 386, baseType: !139, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !141)
!141 = !{!142, !145}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !140, file: !130, line: 359, baseType: !143, size: 8)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !140, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!146 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !129, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !130, line: 43, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !153)
!153 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !102, line: 237, baseType: !143)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !102, line: 257, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !121, file: !102, line: 530, baseType: !158, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DISubroutineType(types: !160)
!160 = !{!118, !127, !161}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !102, line: 229, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !121, file: !102, line: 532, baseType: !164, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!118, !127, !167, !162}
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !102, line: 216, baseType: !156)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !121, file: !102, line: 535, baseType: !169, size: 32, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!118, !127, !167}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !121, file: !102, line: 537, baseType: !169, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !121, file: !102, line: 539, baseType: !169, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !121, file: !102, line: 541, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!118, !127, !154, !101, !107}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !121, file: !102, line: 544, baseType: !179, size: 32, offset: 224)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!118, !127, !182, !146}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !184)
!184 = !{!185, !192, !197}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !183, file: !102, line: 482, baseType: !186, size: 32)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !188, file: !187, line: 30, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !183, file: !102, line: 485, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !127, !182, !167}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !183, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !121, file: !102, line: 547, baseType: !199, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!156, !127}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !204, file: !102, line: 434, baseType: !167, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !209, file: !102, line: 447, baseType: !167, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !214)
!214 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!215 = !{!25, !216, !362, !366, !368, !370, !372, !374, !379, !381, !383, !385, !387, !389, !402}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "_k_thread_data_blink0_id", scope: !27, file: !218, line: 111, type: !219, isLocal: false, isDefinition: true, align: 32)
!218 = !DIFile(filename: "zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !336, !344, !345, !350, !351, !352, !353, !354, !355, !357, !361}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !219, file: !220, line: 621, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !294, !307, !308, !309, !310, !331}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !224, file: !225, line: 247, baseType: !228, size: 384)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !229)
!229 = !{!230, !258, !266, !267, !268, !281, !282, !283}
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 60, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 60, size: 64, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !231, file: !225, line: 61, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !237)
!237 = !{!238, !244}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 38, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 38, size: 32, elements: !240)
!240 = !{!241, !243}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !239, file: !235, line: 39, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !235, line: 40, baseType: !242, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 42, baseType: !245, size: 32, offset: 32)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 42, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !245, file: !235, line: 43, baseType: !242, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !235, line: 44, baseType: !242, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !231, file: !225, line: 62, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !250, file: !251, line: 50, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 64, elements: !256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !228, file: !225, line: 68, baseType: !259, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !262)
!261 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !262, file: !261, line: 232, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !236)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !228, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !228, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 90, baseType: !269, size: 16, offset: 112)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 90, size: 16, elements: !270)
!270 = !{!271, !278}
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !225, line: 91, baseType: !272, size: 16)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !225, line: 91, size: 16, elements: !273)
!273 = !{!274, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !272, file: !225, line: 96, baseType: !275, size: 8)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !276)
!276 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !272, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !269, file: !225, line: 100, baseType: !279, size: 16)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !280)
!280 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !228, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !228, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !228, file: !225, line: 131, baseType: !284, size: 192, offset: 192)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !285)
!285 = !{!286, !287, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !284, file: !261, line: 245, baseType: !234, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !284, file: !261, line: 246, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !284, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !224, file: !225, line: 250, baseType: !295, size: 288, offset: 384)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !295, file: !296, line: 26, baseType: !156, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !295, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !295, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !295, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !295, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !295, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !295, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !295, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !295, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !224, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !224, file: !225, line: 256, baseType: !260, size: 64, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !224, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !224, file: !225, line: 325, baseType: !311, size: 32, offset: 800)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !313)
!313 = !{!314, !325, !326}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !312, file: !220, line: 5074, baseType: !315, size: 96)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318, !321, !322}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !315, file: !316, line: 57, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !316, line: 57, flags: DIFlagFwdDecl)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !315, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !315, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !324, line: 214, baseType: !32)
!324 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !312, file: !220, line: 5075, baseType: !260, size: 64, offset: 96)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !312, file: !220, line: 5076, baseType: !327, size: 32, offset: 160)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !329)
!328 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!329 = !{!330}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !327, file: !328, line: 52, baseType: !22, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !224, file: !225, line: 343, baseType: !332, size: 64, offset: 832)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !332, file: !296, line: 63, baseType: !156, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !332, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !219, file: !220, line: 622, baseType: !337, size: 32, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !339, line: 44, baseType: !340)
!339 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !341, line: 47, size: 8, elements: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = !{!343}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !340, file: !341, line: 48, baseType: !135, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !219, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !219, file: !220, line: 624, baseType: !346, size: 32, offset: 96)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !339, line: 46, baseType: !347)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 32)
!348 = !DISubroutineType(types: !349)
!349 = !{null, !117, !117, !117}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !219, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !219, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !219, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !219, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !219, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !219, file: !220, line: 630, baseType: !356, size: 32, offset: 288)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !118)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !219, file: !220, line: 631, baseType: !358, size: 32, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 32)
!359 = !DISubroutineType(types: !360)
!360 = !{null}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !219, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "blink0_id", scope: !27, file: !218, line: 111, type: !364, isLocal: false, isDefinition: true)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !223)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "_k_thread_data_blink1_id", scope: !27, file: !218, line: 113, type: !219, isLocal: false, isDefinition: true, align: 32)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "blink1_id", scope: !27, file: !218, line: 113, type: !364, isLocal: false, isDefinition: true)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(name: "_k_thread_data_uart_out_id", scope: !27, file: !218, line: 115, type: !219, isLocal: false, isDefinition: true, align: 32)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "uart_out_id", scope: !27, file: !218, line: 115, type: !364, isLocal: false, isDefinition: true)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink0_id", scope: !27, file: !218, line: 111, type: !376, isLocal: false, isDefinition: true, align: 64)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 8192, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 1024)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink0_id", scope: !27, file: !218, line: 111, type: !224, isLocal: false, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink1_id", scope: !27, file: !218, line: 113, type: !376, isLocal: false, isDefinition: true, align: 64)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink1_id", scope: !27, file: !218, line: 113, type: !224, isLocal: false, isDefinition: true)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_k_thread_stack_uart_out_id", scope: !27, file: !218, line: 115, type: !376, isLocal: false, isDefinition: true, align: 64)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_obj_uart_out_id", scope: !27, file: !218, line: 115, type: !224, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "led0", scope: !27, file: !218, line: 44, type: !391, isLocal: true, isDefinition: true)
!391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led", file: !218, line: 39, size: 96, elements: !393)
!393 = !{!394, !401}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !392, file: !218, line: 40, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !102, line: 271, size: 64, elements: !396)
!396 = !{!397, !398, !399}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !395, file: !102, line: 273, baseType: !127, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !395, file: !102, line: 275, baseType: !154, size: 8, offset: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !395, file: !102, line: 277, baseType: !400, size: 16, offset: 48)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !102, line: 249, baseType: !279)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !392, file: !218, line: 41, baseType: !143, size: 8, offset: 64)
!402 = !DIGlobalVariableExpression(var: !403, expr: !DIExpression())
!403 = distinct !DIGlobalVariable(name: "led1", scope: !27, file: !218, line: 49, type: !391, isLocal: true, isDefinition: true)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !404, file: !220, line: 2209, baseType: !407, size: 160)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !408)
!408 = !{!409, !422, !423}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !407, file: !220, line: 1710, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !411, line: 46, baseType: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !411, line: 41, size: 64, elements: !413)
!413 = !{!414, !421}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !412, file: !411, line: 42, baseType: !415, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !411, line: 39, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !411, line: 35, size: 32, elements: !418)
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !417, file: !411, line: 36, baseType: !420, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !411, line: 32, baseType: !156)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !412, file: !411, line: 43, baseType: !415, size: 32, offset: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !407, file: !220, line: 1711, baseType: !327, size: 32, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !407, file: !220, line: 1712, baseType: !260, size: 64, offset: 96)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "_char_out", scope: !426, file: !431, line: 54, type: !432, isLocal: false, isDefinition: true)
!426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !427, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, globals: !430, splitDebugInlining: false, nameTableKind: None)
!427 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!428 = !{!30}
!429 = !{!117, !118}
!430 = !{!424}
!431 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!433 = !DISubroutineType(types: !434)
!434 = !{!118, !118}
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !437, file: !851, line: 258, type: !852, isLocal: true, isDefinition: true, align: 32)
!437 = distinct !DICompileUnit(language: DW_LANG_C99, file: !438, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !439, retainedTypes: !722, globals: !850, splitDebugInlining: false, nameTableKind: None)
!438 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!439 = !{!440, !472, !482, !531, !537, !658, !693}
!440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !441, line: 54, baseType: !32, size: 32, elements: !442)
!441 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = !{!443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471}
!443 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!444 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!445 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!446 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!447 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!448 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!449 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!450 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!451 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!452 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!453 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!454 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!455 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!456 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!457 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!458 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!459 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!460 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!461 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!462 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!463 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!464 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!465 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!466 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!467 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!468 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!469 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!470 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!471 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!472 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !441, line: 224, baseType: !32, size: 32, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481}
!474 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!475 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!476 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!477 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!478 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!479 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!480 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!481 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !441, line: 275, baseType: !32, size: 32, elements: !483)
!483 = !{!484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530}
!484 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!485 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!486 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!487 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!488 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!489 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!490 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!491 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!492 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!493 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!494 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!495 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!496 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!497 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!498 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!499 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!500 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!501 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!502 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!503 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!504 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!505 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!506 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!507 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!508 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!509 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!510 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!511 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!512 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!513 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!514 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!515 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!516 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!517 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!518 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!519 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!520 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!521 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!522 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!523 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!524 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!525 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!526 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!527 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!528 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!529 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!530 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !441, line: 327, baseType: !32, size: 32, elements: !532)
!532 = !{!533, !534, !535, !536}
!533 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!534 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!535 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!536 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!537 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !538, line: 76, baseType: !32, size: 32, elements: !539)
!538 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!539 = !{!540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657}
!540 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!541 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!542 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!543 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!544 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!545 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!546 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!547 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!548 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!549 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!550 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!551 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!552 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!553 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!554 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!555 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!556 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!557 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!558 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!559 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!560 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!561 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!562 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!563 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!564 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!565 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!566 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!567 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!568 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!569 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!570 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!571 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!572 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!573 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!574 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!575 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!576 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!577 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!578 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!579 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!580 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!581 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!582 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!583 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!584 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!585 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!586 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!587 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!588 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!589 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!590 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!591 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!592 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!593 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!594 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!595 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!596 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!597 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!598 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!599 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!600 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!601 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!602 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!603 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!604 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!605 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!606 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!607 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!608 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!609 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!610 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!611 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!612 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!613 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!614 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!615 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!616 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!617 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!618 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!619 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!620 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!621 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!622 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!623 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!624 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!625 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!626 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!627 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!628 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!629 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!630 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!631 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!632 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!633 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!634 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!635 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!636 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!637 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!638 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!639 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!640 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!641 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!642 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!643 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!644 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!645 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!646 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!647 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!648 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!649 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!650 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!651 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!652 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!653 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!654 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!655 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!656 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!657 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !441, line: 237, baseType: !32, size: 32, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!660 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!661 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!662 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!663 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!664 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!665 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!666 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!667 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!668 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!669 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!670 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!671 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!672 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!673 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!674 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!675 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!676 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!677 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!678 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!679 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!680 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!681 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!682 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!683 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!684 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!685 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!686 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!687 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!688 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!689 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!690 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!691 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!692 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !538, line: 44, baseType: !32, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721}
!695 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!696 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!697 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!698 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!699 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!700 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!701 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!702 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!703 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!704 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!705 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!706 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!707 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!708 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!709 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!710 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!711 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!712 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!713 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!714 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!715 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!716 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!717 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!718 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!719 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!720 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!721 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!722 = !{!723, !795, !838, !849, !156}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !725, line: 4575, baseType: !726)
!725 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 4532, size: 390144, elements: !727)
!727 = !{!728, !730, !731, !732, !733, !737, !747, !751, !761, !765}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !726, file: !725, line: 4533, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !726, file: !725, line: 4534, baseType: !729, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !726, file: !725, line: 4535, baseType: !729, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !726, file: !725, line: 4536, baseType: !729, size: 32, offset: 96)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !726, file: !725, line: 4537, baseType: !734, size: 16256, offset: 128)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 16256, elements: !735)
!735 = !{!736}
!736 = !DISubrange(count: 2032)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !726, file: !725, line: 4543, baseType: !738, size: 4224, offset: 16384)
!738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !739, size: 4224, elements: !745)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !726, file: !725, line: 4538, size: 128, elements: !740)
!740 = !{!741, !742, !743, !744}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !739, file: !725, line: 4539, baseType: !729, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !739, file: !725, line: 4540, baseType: !729, size: 32, offset: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !739, file: !725, line: 4541, baseType: !729, size: 32, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !739, file: !725, line: 4542, baseType: !729, size: 32, offset: 96)
!745 = !{!746}
!746 = !DISubrange(count: 33)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !726, file: !725, line: 4544, baseType: !748, size: 110464, offset: 20608)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 110464, elements: !749)
!749 = !{!750}
!750 = !DISubrange(count: 13808)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !726, file: !725, line: 4550, baseType: !752, size: 24448, offset: 131072)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 24448, elements: !759)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !726, file: !725, line: 4545, size: 128, elements: !754)
!754 = !{!755, !756, !757, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !753, file: !725, line: 4546, baseType: !729, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !753, file: !725, line: 4547, baseType: !729, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !753, file: !725, line: 4548, baseType: !729, size: 32, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !753, file: !725, line: 4549, baseType: !729, size: 32, offset: 96)
!759 = !{!760}
!760 = !DISubrange(count: 191)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !726, file: !725, line: 4551, baseType: !762, size: 106624, offset: 155520)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 106624, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 13328)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !726, file: !725, line: 4574, baseType: !766, size: 128000, offset: 262144)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 128000, elements: !793)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !726, file: !725, line: 4552, size: 1024, elements: !768)
!768 = !{!769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !789, !790, !791, !792}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !767, file: !725, line: 4553, baseType: !729, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !767, file: !725, line: 4554, baseType: !729, size: 32, offset: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !767, file: !725, line: 4555, baseType: !729, size: 32, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !767, file: !725, line: 4556, baseType: !729, size: 32, offset: 96)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !767, file: !725, line: 4557, baseType: !729, size: 32, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !767, file: !725, line: 4558, baseType: !729, size: 32, offset: 160)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !767, file: !725, line: 4559, baseType: !729, size: 32, offset: 192)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !767, file: !725, line: 4560, baseType: !729, size: 32, offset: 224)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !767, file: !725, line: 4561, baseType: !729, size: 32, offset: 256)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !767, file: !725, line: 4562, baseType: !729, size: 32, offset: 288)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !767, file: !725, line: 4563, baseType: !729, size: 32, offset: 320)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !767, file: !725, line: 4564, baseType: !729, size: 32, offset: 352)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !767, file: !725, line: 4565, baseType: !729, size: 32, offset: 384)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !767, file: !725, line: 4566, baseType: !729, size: 32, offset: 416)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !767, file: !725, line: 4567, baseType: !729, size: 32, offset: 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !767, file: !725, line: 4568, baseType: !729, size: 32, offset: 480)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !767, file: !725, line: 4569, baseType: !786, size: 384, offset: 512)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 384, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 48)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !767, file: !725, line: 4570, baseType: !729, size: 32, offset: 896)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !767, file: !725, line: 4571, baseType: !729, size: 32, offset: 928)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !767, file: !725, line: 4572, baseType: !729, size: 32, offset: 960)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !767, file: !725, line: 4573, baseType: !729, size: 32, offset: 992)
!793 = !{!794}
!794 = !DISubrange(count: 125)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !725, line: 38320, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 38303, size: 23040, elements: !798)
!798 = !{!799, !801, !805, !806, !807, !808, !812, !816, !820, !824, !828}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !797, file: !725, line: 38304, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !797, file: !725, line: 38305, baseType: !802, size: 256, offset: 32)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 256, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !797, file: !725, line: 38306, baseType: !729, size: 32, offset: 288)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !797, file: !725, line: 38307, baseType: !729, size: 32, offset: 320)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !797, file: !725, line: 38308, baseType: !729, size: 32, offset: 352)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !797, file: !725, line: 38309, baseType: !809, size: 3712, offset: 384)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 3712, elements: !810)
!810 = !{!811}
!811 = !DISubrange(count: 464)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !797, file: !725, line: 38310, baseType: !813, size: 864, offset: 4096)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 864, elements: !814)
!814 = !{!815}
!815 = !DISubrange(count: 27)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !797, file: !725, line: 38311, baseType: !817, size: 3232, offset: 4960)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 3232, elements: !818)
!818 = !{!819}
!819 = !DISubrange(count: 404)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !797, file: !725, line: 38312, baseType: !821, size: 3776, offset: 8192)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 3776, elements: !822)
!822 = !{!823}
!823 = !DISubrange(count: 118)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !797, file: !725, line: 38313, baseType: !825, size: 4416, offset: 11968)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 4416, elements: !826)
!826 = !{!827}
!827 = !DISubrange(count: 552)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !797, file: !725, line: 38319, baseType: !829, size: 6656, offset: 16384)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 6656, elements: !836)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !797, file: !725, line: 38314, size: 128, elements: !831)
!831 = !{!832, !833, !834, !835}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !830, file: !725, line: 38315, baseType: !729, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !830, file: !725, line: 38316, baseType: !729, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !830, file: !725, line: 38317, baseType: !729, size: 32, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !830, file: !725, line: 38318, baseType: !729, size: 32, offset: 96)
!836 = !{!837}
!837 = !DISubrange(count: 52)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !725, line: 43319, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 43313, size: 80, elements: !841)
!841 = !{!842, !844, !845, !847, !848}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !840, file: !725, line: 43314, baseType: !843, size: 16)
!843 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !279)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !840, file: !725, line: 43315, baseType: !843, size: 16, offset: 16)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !840, file: !725, line: 43316, baseType: !846, size: 16, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !840, file: !725, line: 43317, baseType: !843, size: 16, offset: 48)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !840, file: !725, line: 43318, baseType: !843, size: 16, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!850 = !{!435}
!851 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !855)
!854 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!855 = !{!856, !863}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !853, file: !854, line: 60, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{!118, !860}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !854, line: 48, flags: DIFlagFwdDecl)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !853, file: !854, line: 65, baseType: !860, size: 32, offset: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !866, file: !873, line: 21, type: !432, isLocal: true, isDefinition: true)
!866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !868, globals: !872, splitDebugInlining: false, nameTableKind: None)
!867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!868 = !{!869, !118, !117}
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !871, line: 22, baseType: !118)
!871 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!864}
!873 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !876, file: !967, line: 603, type: !969, isLocal: true, isDefinition: true, align: 32)
!876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !878, globals: !964, splitDebugInlining: false, nameTableKind: None)
!877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!878 = !{!117, !118, !879}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !882, line: 336, size: 608, elements: !883)
!882 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!883 = !{!884, !904, !908, !912, !925, !930, !936, !942, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !881, file: !882, line: 365, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!118, !888, !903}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !891)
!891 = !{!892, !893, !894, !895, !901, !902}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !890, file: !130, line: 380, baseType: !133, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !890, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !890, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !890, file: !130, line: 386, baseType: !896, size: 32, offset: 96)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !897, file: !130, line: 359, baseType: !143, size: 8)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !897, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !890, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !890, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !881, file: !882, line: 366, baseType: !905, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{null, !888, !144}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !881, file: !882, line: 374, baseType: !909, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{!118, !888}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !881, file: !882, line: 377, baseType: !913, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!118, !888, !916}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !882, line: 122, size: 64, elements: !919)
!919 = !{!920, !921, !922, !923, !924}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !918, file: !882, line: 123, baseType: !156, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !918, file: !882, line: 124, baseType: !143, size: 8, offset: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !918, file: !882, line: 125, baseType: !143, size: 8, offset: 40)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !918, file: !882, line: 126, baseType: !143, size: 8, offset: 48)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !918, file: !882, line: 127, baseType: !143, size: 8, offset: 56)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !881, file: !882, line: 379, baseType: !926, size: 32, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!118, !888, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !881, file: !882, line: 384, baseType: !931, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!118, !888, !934, !118}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !881, file: !882, line: 393, baseType: !937, size: 32, offset: 192)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!118, !888, !940, !941}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !881, file: !882, line: 402, baseType: !943, size: 32, offset: 224)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{null, !888}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !881, file: !882, line: 405, baseType: !943, size: 32, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !881, file: !882, line: 408, baseType: !909, size: 32, offset: 288)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !881, file: !882, line: 411, baseType: !943, size: 32, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !881, file: !882, line: 414, baseType: !943, size: 32, offset: 352)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !881, file: !882, line: 417, baseType: !909, size: 32, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !881, file: !882, line: 420, baseType: !909, size: 32, offset: 416)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !881, file: !882, line: 423, baseType: !943, size: 32, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !881, file: !882, line: 426, baseType: !943, size: 32, offset: 480)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !881, file: !882, line: 429, baseType: !909, size: 32, offset: 512)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !881, file: !882, line: 432, baseType: !909, size: 32, offset: 544)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !881, file: !882, line: 435, baseType: !957, size: 32, offset: 576)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !888, !960, !117}
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !882, line: 142, baseType: !961)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DISubroutineType(types: !963)
!963 = !{null, !888, !117}
!964 = !{!874, !965}
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !876, file: !967, line: 38, type: !968, isLocal: true, isDefinition: true)
!967 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !970, file: !854, line: 60, baseType: !909, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !970, file: !854, line: 65, baseType: !888, size: 32, offset: 32)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !976, file: !1064, line: 318, type: !1140, isLocal: false, isDefinition: true)
!976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !978, retainedTypes: !984, globals: !1061, splitDebugInlining: false, nameTableKind: None)
!977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!978 = !{!101, !107, !979}
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !980, line: 66, baseType: !32, size: 32, elements: !981)
!980 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !{!982, !983}
!982 = !DIEnumerator(name: "gpioPinClear", value: 0)
!983 = !DIEnumerator(name: "gpioPinSet", value: 1)
!984 = !{!985, !1049, !1054, !167, !107, !101, !1059, !117, !849, !1030, !1060}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !988)
!988 = !{!989, !1008, !1012, !1016, !1020, !1021, !1022, !1026, !1045}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !987, file: !102, line: 524, baseType: !990, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!118, !993, !154, !155}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !996)
!996 = !{!997, !998, !999, !1000, !1006, !1007}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !995, file: !130, line: 380, baseType: !133, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !995, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !995, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !995, file: !130, line: 386, baseType: !1001, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1002, file: !130, line: 359, baseType: !143, size: 8)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1002, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !995, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !995, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !987, file: !102, line: 530, baseType: !1009, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!118, !993, !161}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !987, file: !102, line: 532, baseType: !1013, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!118, !993, !167, !162}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !987, file: !102, line: 535, baseType: !1017, size: 32, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!118, !993, !167}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !987, file: !102, line: 537, baseType: !1017, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !987, file: !102, line: 539, baseType: !1017, size: 32, offset: 160)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !987, file: !102, line: 541, baseType: !1023, size: 32, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!118, !993, !154, !101, !107}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !987, file: !102, line: 544, baseType: !1027, size: 32, offset: 224)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!118, !993, !1030, !146}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1032)
!1032 = !{!1033, !1039, !1044}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1031, file: !102, line: 482, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1035, file: !187, line: 30, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1031, file: !102, line: 485, baseType: !1040, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !993, !1030, !167}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1031, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !987, file: !102, line: 547, baseType: !1046, size: 32, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!156, !993}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1051, file: !102, line: 434, baseType: !167, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1056, file: !102, line: 447, baseType: !167, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!1061 = !{!974, !1062, !1068, !1070, !1080, !1092, !1094, !1125, !1127, !1138}
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !976, file: !1064, line: 318, type: !1065, isLocal: false, isDefinition: true, align: 16)
!1064 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !1066)
!1066 = !{!1067}
!1067 = !DISubrange(count: 25)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !976, file: !1064, line: 318, type: !994, isLocal: false, isDefinition: true, align: 32)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !976, file: !1064, line: 318, type: !1072, isLocal: true, isDefinition: true, align: 32)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !1074)
!1074 = !{!1075, !1079}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1073, file: !854, line: 60, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!118, !993}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1073, file: !854, line: 65, baseType: !993, size: 32, offset: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !976, file: !1064, line: 318, type: !1082, isLocal: true, isDefinition: true)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1064, line: 33, size: 96, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1082, file: !1064, line: 35, baseType: !1056, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1082, file: !1064, line: 37, baseType: !1086, size: 64, offset: 32)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !1088)
!1088 = !{!1089, !1091}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1087, file: !187, line: 36, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1087, file: !187, line: 37, baseType: !1090, size: 32, offset: 32)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !976, file: !1064, line: 318, type: !1002, isLocal: true, isDefinition: true, align: 8)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !976, file: !1064, line: 318, type: !1096, isLocal: true, isDefinition: true)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1064, line: 23, size: 128, elements: !1098)
!1098 = !{!1099, !1100, !1113, !1124}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1097, file: !1064, line: 25, baseType: !1051, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1097, file: !1064, line: 26, baseType: !1101, size: 32, offset: 32)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !725, line: 19729, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 19720, size: 256, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1103, file: !725, line: 19721, baseType: !729, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1103, file: !725, line: 19722, baseType: !729, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1103, file: !725, line: 19723, baseType: !800, size: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1103, file: !725, line: 19724, baseType: !729, size: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1103, file: !725, line: 19725, baseType: !729, size: 32, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1103, file: !725, line: 19726, baseType: !729, size: 32, offset: 160)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1103, file: !725, line: 19727, baseType: !729, size: 32, offset: 192)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1103, file: !725, line: 19728, baseType: !729, size: 32, offset: 224)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1097, file: !1064, line: 28, baseType: !1114, size: 32, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1117, line: 51, size: 128, elements: !1118)
!1117 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1118 = !{!1119, !1120, !1121, !1122, !1123}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1116, file: !1117, line: 52, baseType: !156, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1116, file: !1117, line: 53, baseType: !156, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1116, file: !1117, line: 54, baseType: !156, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1116, file: !1117, line: 55, baseType: !143, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1116, file: !1117, line: 56, baseType: !156, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1097, file: !1064, line: 29, baseType: !143, size: 8, offset: 96)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !976, file: !1064, line: 249, type: !986, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1129, file: !1064, line: 318, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1129 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1064, file: !1064, line: 318, type: !1077, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !1130)
!1130 = !{!1131}
!1131 = !DILocalVariable(name: "port", arg: 1, scope: !1129, file: !1064, line: 318, type: !993)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1132, file: !10, line: 55, baseType: !356, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1132, file: !10, line: 57, baseType: !356, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1132, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1132, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1129, file: !1064, line: 318, type: !1132, isLocal: true, isDefinition: true, align: 32)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1115, size: 2048, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 16)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1145, file: !1150, line: 7, type: !1151, isLocal: false, isDefinition: true, align: 16)
!1145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1147, splitDebugInlining: false, nameTableKind: None)
!1146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1147 = !{!1143, !1148}
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1145, file: !1150, line: 12, type: !1151, isLocal: false, isDefinition: true, align: 16)
!1150 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 48, elements: !1152)
!1152 = !{!1153}
!1153 = !DISubrange(count: 3)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1156, file: !1353, line: 339, type: !1351, isLocal: true, isDefinition: true)
!1156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1158, retainedTypes: !1244, globals: !1389, splitDebugInlining: false, nameTableKind: None)
!1157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1158 = !{!30, !1159, !1197, !1225, !1229, !1233, !1238}
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1160, line: 122, baseType: !32, size: 32, elements: !1161)
!1160 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1161 = !{!1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196}
!1162 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1163 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1164 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1165 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1166 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1167 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1168 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1169 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1170 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1171 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1172 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1173 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1174 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1175 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1176 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1177 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1178 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1179 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1180 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1181 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1182 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1183 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1184 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1185 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1186 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1187 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1188 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1189 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1190 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1191 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1192 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1193 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1194 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1195 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1196 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1160, line: 91, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!1199 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1200 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1201 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1202 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1203 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1204 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1205 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1206 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1207 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1208 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1209 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1210 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1211 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1212 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1213 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1214 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1215 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1216 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1217 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1218 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1219 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1220 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1221 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1222 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1223 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1224 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1160, line: 60, baseType: !32, size: 32, elements: !1226)
!1226 = !{!1227, !1228}
!1227 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1228 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1160, line: 67, baseType: !32, size: 32, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1232 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1160, line: 74, baseType: !32, size: 32, elements: !1234)
!1234 = !{!1235, !1236, !1237}
!1235 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1236 = !DIEnumerator(name: "uartParityEven", value: 256)
!1237 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1160, line: 82, baseType: !32, size: 32, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243}
!1240 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1241 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1242 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1243 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1244 = !{!117, !118, !1245, !1324, !1350, !1388, !156, !146, !143}
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !882, line: 336, size: 608, elements: !1248)
!1248 = !{!1249, !1268, !1272, !1276, !1289, !1294, !1298, !1302, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1247, file: !882, line: 365, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!118, !1253, !903}
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1266, !1267}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1255, file: !130, line: 380, baseType: !133, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1255, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1255, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1255, file: !130, line: 386, baseType: !1261, size: 32, offset: 96)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1263)
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1262, file: !130, line: 359, baseType: !143, size: 8)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1262, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1255, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1255, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1247, file: !882, line: 366, baseType: !1269, size: 32, offset: 32)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !1253, !144}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1247, file: !882, line: 374, baseType: !1273, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!118, !1253}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1247, file: !882, line: 377, baseType: !1277, size: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!118, !1253, !1280}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !882, line: 122, size: 64, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1282, file: !882, line: 123, baseType: !156, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1282, file: !882, line: 124, baseType: !143, size: 8, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1282, file: !882, line: 125, baseType: !143, size: 8, offset: 40)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1282, file: !882, line: 126, baseType: !143, size: 8, offset: 48)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1282, file: !882, line: 127, baseType: !143, size: 8, offset: 56)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1247, file: !882, line: 379, baseType: !1290, size: 32, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!118, !1253, !1293}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1247, file: !882, line: 384, baseType: !1295, size: 32, offset: 160)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!118, !1253, !934, !118}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1247, file: !882, line: 393, baseType: !1299, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!118, !1253, !940, !941}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1247, file: !882, line: 402, baseType: !1303, size: 32, offset: 224)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !1253}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1247, file: !882, line: 405, baseType: !1303, size: 32, offset: 256)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1247, file: !882, line: 408, baseType: !1273, size: 32, offset: 288)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1247, file: !882, line: 411, baseType: !1303, size: 32, offset: 320)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1247, file: !882, line: 414, baseType: !1303, size: 32, offset: 352)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1247, file: !882, line: 417, baseType: !1273, size: 32, offset: 384)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1247, file: !882, line: 420, baseType: !1273, size: 32, offset: 416)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1247, file: !882, line: 423, baseType: !1303, size: 32, offset: 448)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1247, file: !882, line: 426, baseType: !1303, size: 32, offset: 480)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1247, file: !882, line: 429, baseType: !1273, size: 32, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1247, file: !882, line: 432, baseType: !1273, size: 32, offset: 544)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1247, file: !882, line: 435, baseType: !1317, size: 32, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{null, !1253, !1320, !117}
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !882, line: 142, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1253, !117}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !725, line: 41342, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 41322, size: 1504, elements: !1327)
!1327 = !{!1328, !1329, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1326, file: !725, line: 41323, baseType: !800, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1326, file: !725, line: 41324, baseType: !1330, size: 480, offset: 32)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 480, elements: !1331)
!1331 = !{!1332}
!1332 = !DISubrange(count: 60)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1326, file: !725, line: 41325, baseType: !729, size: 32, offset: 512)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1326, file: !725, line: 41326, baseType: !1330, size: 480, offset: 544)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1326, file: !725, line: 41327, baseType: !729, size: 32, offset: 1024)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1326, file: !725, line: 41328, baseType: !729, size: 32, offset: 1056)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1326, file: !725, line: 41329, baseType: !729, size: 32, offset: 1088)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1326, file: !725, line: 41330, baseType: !729, size: 32, offset: 1120)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1326, file: !725, line: 41331, baseType: !729, size: 32, offset: 1152)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1326, file: !725, line: 41332, baseType: !729, size: 32, offset: 1184)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1326, file: !725, line: 41333, baseType: !729, size: 32, offset: 1216)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1326, file: !725, line: 41334, baseType: !729, size: 32, offset: 1248)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1326, file: !725, line: 41335, baseType: !729, size: 32, offset: 1280)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1326, file: !725, line: 41336, baseType: !729, size: 32, offset: 1312)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1326, file: !725, line: 41337, baseType: !729, size: 32, offset: 1344)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1326, file: !725, line: 41338, baseType: !800, size: 32, offset: 1376)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1326, file: !725, line: 41339, baseType: !729, size: 32, offset: 1408)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1326, file: !725, line: 41340, baseType: !729, size: 32, offset: 1440)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1326, file: !725, line: 41341, baseType: !729, size: 32, offset: 1472)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1353, line: 29, size: 160, elements: !1354)
!1353 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1354 = !{!1355, !1356, !1357, !1358, !1387}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1352, file: !1353, line: 30, baseType: !1324, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1352, file: !1353, line: 31, baseType: !156, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1352, file: !1353, line: 32, baseType: !143, size: 8, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1352, file: !1353, line: 33, baseType: !1359, size: 32, offset: 96)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1362, line: 60, size: 64, elements: !1363)
!1362 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1363 = !{!1364, !1386}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1361, file: !1362, line: 69, baseType: !1365, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1362, line: 50, size: 64, elements: !1368)
!1368 = !{!1369, !1384, !1385}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1367, file: !1362, line: 52, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1117, line: 64, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1117, line: 59, size: 160, elements: !1374)
!1374 = !{!1375, !1383}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1373, file: !1117, line: 60, baseType: !1376, size: 128)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1117, line: 51, size: 128, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1376, file: !1117, line: 52, baseType: !156, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1376, file: !1117, line: 53, baseType: !156, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1376, file: !1117, line: 54, baseType: !156, size: 32, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1376, file: !1117, line: 55, baseType: !143, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1376, file: !1117, line: 56, baseType: !156, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1373, file: !1117, line: 61, baseType: !156, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1367, file: !1362, line: 54, baseType: !143, size: 8, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1367, file: !1362, line: 56, baseType: !143, size: 8, offset: 40)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1361, file: !1362, line: 71, baseType: !143, size: 8, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1352, file: !1353, line: 35, baseType: !1303, size: 32, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1389 = !{!1390, !1395, !1397, !1404, !1410, !1412, !1154, !1414, !1416, !1421, !1424}
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1392, isLocal: false, isDefinition: true, align: 16)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !1393)
!1393 = !{!1394}
!1394 = !DISubrange(count: 6)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1254, isLocal: false, isDefinition: true, align: 32)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1399, isLocal: true, isDefinition: true, align: 32)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !1401)
!1401 = !{!1402, !1403}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1400, file: !854, line: 60, baseType: !1273, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1400, file: !854, line: 65, baseType: !1253, size: 32, offset: 32)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1156, file: !1353, line: 339, type: !1406, isLocal: true, isDefinition: true)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1353, line: 39, size: 64, elements: !1407)
!1407 = !{!1408, !1409}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1406, file: !1353, line: 41, baseType: !1320, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1406, file: !1353, line: 42, baseType: !117, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1262, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1156, file: !1353, line: 270, type: !1246, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1360, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1418, isLocal: true, isDefinition: true)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1366, size: 64, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 1)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1156, file: !1353, line: 339, type: !1423, isLocal: true, isDefinition: true)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 320, elements: !256)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1426, file: !1353, line: 339, type: !1429, isLocal: true, isDefinition: true, align: 32)
!1426 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1353, file: !1353, line: 339, type: !1304, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !1427)
!1427 = !{!1428}
!1428 = !DILocalVariable(name: "dev", arg: 1, scope: !1426, file: !1353, line: 339, type: !1253)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1429, file: !10, line: 55, baseType: !356, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1429, file: !10, line: 57, baseType: !356, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1429, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1429, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1437, file: !1662, line: 65, type: !729, isLocal: true, isDefinition: true)
!1437 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1438, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1439, retainedTypes: !1580, globals: !1659, splitDebugInlining: false, nameTableKind: None)
!1438 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1439 = !{!1440}
!1440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !725, line: 103, baseType: !118, size: 32, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1442 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1443 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1444 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1445 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1446 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1447 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1448 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1449 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1450 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1451 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1452 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1453 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1454 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1455 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1456 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1457 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1458 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1459 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1460 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1461 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1462 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1463 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1464 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1465 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1466 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1467 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1468 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1469 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1470 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1471 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1472 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1473 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1474 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1475 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1476 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1477 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1478 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1479 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1480 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1481 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1482 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1483 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1484 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1485 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1486 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1487 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1488 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1489 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1490 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1491 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1492 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1493 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1494 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1495 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1496 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1497 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1498 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1499 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1500 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1501 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1502 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1503 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1504 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1505 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1506 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1507 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1508 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1509 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1510 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1511 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1512 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1513 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1514 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1515 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1516 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1517 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1518 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1519 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1520 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1521 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1522 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1523 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1524 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1525 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1526 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1527 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1528 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1529 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1530 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1531 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1532 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1533 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1534 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1535 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1536 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1537 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1538 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1539 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1540 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1541 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1542 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1543 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1544 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1545 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1546 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1547 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1548 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1549 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1550 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1551 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1552 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1553 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1554 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1555 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1556 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1557 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1558 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1559 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1560 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1561 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1562 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1563 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1564 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1565 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1566 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1567 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1568 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1569 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1570 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1571 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1572 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1573 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1574 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1575 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1576 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1577 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1578 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1579 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1580 = !{!113, !1581, !356, !143, !156, !1590, !1623}
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1583, line: 770, baseType: !1584)
!1583 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 764, size: 128, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1584, file: !1583, line: 766, baseType: !729, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1584, file: !1583, line: 767, baseType: !729, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1584, file: !1583, line: 768, baseType: !729, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1584, file: !1583, line: 769, baseType: !800, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1583, line: 426, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 411, size: 28704, elements: !1593)
!1593 = !{!1594, !1598, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1613, !1618, !1622}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1592, file: !1583, line: 413, baseType: !1595, size: 256)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 256, elements: !1596)
!1596 = !{!1597}
!1597 = !DISubrange(count: 8)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1592, file: !1583, line: 414, baseType: !1599, size: 768, offset: 256)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 24)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1592, file: !1583, line: 415, baseType: !1595, size: 256, offset: 1024)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1592, file: !1583, line: 416, baseType: !1599, size: 768, offset: 1280)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1592, file: !1583, line: 417, baseType: !1595, size: 256, offset: 2048)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1592, file: !1583, line: 418, baseType: !1599, size: 768, offset: 2304)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1592, file: !1583, line: 419, baseType: !1595, size: 256, offset: 3072)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1592, file: !1583, line: 420, baseType: !1599, size: 768, offset: 3328)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1592, file: !1583, line: 421, baseType: !1595, size: 256, offset: 4096)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1592, file: !1583, line: 422, baseType: !1610, size: 1792, offset: 4352)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1792, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 56)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1592, file: !1583, line: 423, baseType: !1614, size: 1920, offset: 6144)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 1920, elements: !1616)
!1615 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1616 = !{!1617}
!1617 = !DISubrange(count: 240)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1592, file: !1583, line: 424, baseType: !1619, size: 20608, offset: 8064)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 20608, elements: !1620)
!1620 = !{!1621}
!1621 = !DISubrange(count: 644)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1592, file: !1583, line: 425, baseType: !729, size: 32, offset: 28672)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1646, !1647, !1648, !1652, !1656, !1658}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1625, file: !1583, line: 447, baseType: !800, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1625, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1625, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1625, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1625, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1625, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1625, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 96, elements: !1635)
!1635 = !{!1636}
!1636 = !DISubrange(count: 12)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1625, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1625, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1625, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1625, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1625, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1625, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1625, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1625, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!1645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 64, elements: !256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1625, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1625, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1625, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 128, elements: !1650)
!1650 = !{!1651}
!1651 = !DISubrange(count: 4)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1625, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !800, size: 160, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 5)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1625, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !1654)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1625, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!1659 = !{!1660, !1686, !1691, !1693, !1695, !1435}
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1437, file: !1662, line: 285, type: !1663, isLocal: true, isDefinition: true, align: 32)
!1662 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !1665)
!1665 = !{!1666, !1685}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1664, file: !854, line: 60, baseType: !1667, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!118, !1670}
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1683, !1684}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1672, file: !130, line: 380, baseType: !133, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1672, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1672, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1672, file: !130, line: 386, baseType: !1678, size: 32, offset: 96)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1679, file: !130, line: 359, baseType: !143, size: 8)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1679, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1672, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1672, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1664, file: !854, line: 65, baseType: !1670, size: 32, offset: 32)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "lock", scope: !1437, file: !1662, line: 34, type: !1688, isLocal: true, isDefinition: true)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !1689)
!1689 = !{!1690}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1688, file: !328, line: 52, baseType: !22, size: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "last_load", scope: !1437, file: !1662, line: 36, type: !156, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1437, file: !1662, line: 48, type: !156, isLocal: true, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1437, file: !1662, line: 54, type: !156, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1699, file: !1703, line: 69, type: !1704, isLocal: true, isDefinition: true, align: 32)
!1699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1701, globals: !1702, splitDebugInlining: false, nameTableKind: None)
!1700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1701 = !{!849, !22}
!1702 = !{!1697}
!1703 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !1706)
!1706 = !{!1707, !1726}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1705, file: !854, line: 60, baseType: !1708, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!118, !1711}
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1718, !1724, !1725}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1713, file: !130, line: 380, baseType: !133, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1713, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1713, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1713, file: !130, line: 386, baseType: !1719, size: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1720, file: !130, line: 359, baseType: !143, size: 8)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1720, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1713, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1713, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1705, file: !854, line: 65, baseType: !1711, size: 32, offset: 32)
!1727 = !DIGlobalVariableExpression(var: !1728, expr: !DIExpression())
!1728 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1729, file: !1732, line: 23, type: !941, isLocal: false, isDefinition: true)
!1729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, globals: !1731, splitDebugInlining: false, nameTableKind: None)
!1730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1731 = !{!1727}
!1732 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1735, file: !1739, line: 86, type: !1980, isLocal: false, isDefinition: true, align: 64)
!1735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1737, retainedTypes: !1746, globals: !1819, splitDebugInlining: false, nameTableKind: None)
!1736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!1737 = !{!1738, !30, !1440}
!1738 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1739, line: 63, baseType: !32, size: 32, elements: !1740)
!1739 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1740 = !{!1741, !1742, !1743, !1744, !1745}
!1741 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1742 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1743 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1744 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1745 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1746 = !{!323, !117, !118, !1747, !1060, !156, !1777, !356, !143, !1802}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1750, line: 51, size: 64, elements: !1751)
!1750 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1751 = !{!1752, !1772}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1749, file: !1750, line: 52, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1750, line: 38, baseType: !1754)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!118, !1757, !940, !279}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1770, !1771}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1759, file: !130, line: 380, baseType: !133, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1759, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1759, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1759, file: !130, line: 386, baseType: !1765, size: 32, offset: 96)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1766, file: !130, line: 359, baseType: !143, size: 8)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1766, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1759, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1759, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1749, file: !1750, line: 53, baseType: !1773, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1750, line: 47, baseType: !1774)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!118, !1757, !940, !279, !156}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !1780)
!1780 = !{!1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1779, file: !1583, line: 447, baseType: !800, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1779, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1779, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1779, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1779, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1779, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1779, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1779, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1779, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1779, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1779, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1779, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1779, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1779, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1779, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1779, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1779, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1779, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1779, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1779, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1779, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1583, line: 426, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 411, size: 28704, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1804, file: !1583, line: 413, baseType: !1595, size: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1804, file: !1583, line: 414, baseType: !1599, size: 768, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1804, file: !1583, line: 415, baseType: !1595, size: 256, offset: 1024)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1804, file: !1583, line: 416, baseType: !1599, size: 768, offset: 1280)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1804, file: !1583, line: 417, baseType: !1595, size: 256, offset: 2048)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1804, file: !1583, line: 418, baseType: !1599, size: 768, offset: 2304)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1804, file: !1583, line: 419, baseType: !1595, size: 256, offset: 3072)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1804, file: !1583, line: 420, baseType: !1599, size: 768, offset: 3328)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1804, file: !1583, line: 421, baseType: !1595, size: 256, offset: 4096)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1804, file: !1583, line: 422, baseType: !1610, size: 1792, offset: 4352)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1804, file: !1583, line: 423, baseType: !1614, size: 1920, offset: 6144)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1804, file: !1583, line: 424, baseType: !1619, size: 20608, offset: 8064)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1804, file: !1583, line: 425, baseType: !729, size: 32, offset: 28672)
!1819 = !{!1820, !1939, !1945, !1947, !1733, !1950, !1952, !1957}
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "_kernel", scope: !1735, file: !1739, line: 40, type: !1822, isLocal: false, isDefinition: true)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !261, line: 158, size: 288, elements: !1823)
!1823 = !{!1824, !1934}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1822, file: !261, line: 159, baseType: !1825, size: 192)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 192, elements: !1419)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !261, line: 100, size: 192, elements: !1827)
!1827 = !{!1828, !1829, !1830, !1927, !1928, !1929, !1930}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1826, file: !261, line: 102, baseType: !156, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1826, file: !261, line: 105, baseType: !1060, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1826, file: !261, line: 108, baseType: !1831, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !1833)
!1833 = !{!1834, !1892, !1904, !1905, !1906, !1907, !1922}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1832, file: !225, line: 247, baseType: !1835, size: 384)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !1836)
!1836 = !{!1837, !1861, !1868, !1869, !1870, !1879, !1880, !1881}
!1837 = !DIDerivedType(tag: DW_TAG_member, scope: !1835, file: !225, line: 60, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1835, file: !225, line: 60, size: 64, elements: !1839)
!1839 = !{!1840, !1855}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1838, file: !225, line: 61, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !1843)
!1843 = !{!1844, !1850}
!1844 = !DIDerivedType(tag: DW_TAG_member, scope: !1842, file: !235, line: 38, baseType: !1845, size: 32)
!1845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1842, file: !235, line: 38, size: 32, elements: !1846)
!1846 = !{!1847, !1849}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1845, file: !235, line: 39, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1845, file: !235, line: 40, baseType: !1848, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, scope: !1842, file: !235, line: 42, baseType: !1851, size: 32, offset: 32)
!1851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1842, file: !235, line: 42, size: 32, elements: !1852)
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1851, file: !235, line: 43, baseType: !1848, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1851, file: !235, line: 44, baseType: !1848, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1838, file: !225, line: 62, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1856, file: !251, line: 50, baseType: !1859, size: 64)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1860, size: 64, elements: !256)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1835, file: !225, line: 68, baseType: !1862, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1864, file: !261, line: 232, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !1842)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1835, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1835, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!1870 = !DIDerivedType(tag: DW_TAG_member, scope: !1835, file: !225, line: 90, baseType: !1871, size: 16, offset: 112)
!1871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1835, file: !225, line: 90, size: 16, elements: !1872)
!1872 = !{!1873, !1878}
!1873 = !DIDerivedType(tag: DW_TAG_member, scope: !1871, file: !225, line: 91, baseType: !1874, size: 16)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1871, file: !225, line: 91, size: 16, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1874, file: !225, line: 96, baseType: !275, size: 8)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1874, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1871, file: !225, line: 100, baseType: !279, size: 16)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1835, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1835, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1835, file: !225, line: 131, baseType: !1882, size: 192, offset: 192)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !1883)
!1883 = !{!1884, !1885, !1891}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1882, file: !261, line: 245, baseType: !1841, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1882, file: !261, line: 246, baseType: !1886, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !1887)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{null, !1890}
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1882, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1832, file: !225, line: 250, baseType: !1893, size: 288, offset: 384)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1893, file: !296, line: 26, baseType: !156, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1893, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1893, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1893, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1893, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1893, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1893, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1893, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1893, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1832, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1832, file: !225, line: 256, baseType: !1863, size: 64, offset: 704)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1832, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1832, file: !225, line: 325, baseType: !1908, size: 32, offset: 800)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !1910)
!1910 = !{!1911, !1917, !1918}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1909, file: !220, line: 5074, baseType: !1912, size: 96)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !1913)
!1913 = !{!1914, !1915, !1916}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1912, file: !316, line: 57, baseType: !319, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1912, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1912, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1909, file: !220, line: 5075, baseType: !1863, size: 64, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1909, file: !220, line: 5076, baseType: !1919, size: 32, offset: 160)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !1920)
!1920 = !{!1921}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1919, file: !328, line: 52, baseType: !22, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1832, file: !225, line: 343, baseType: !1923, size: 64, offset: 832)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1923, file: !296, line: 63, baseType: !156, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1923, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1826, file: !261, line: 111, baseType: !1831, size: 32, offset: 96)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1826, file: !261, line: 124, baseType: !118, size: 32, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1826, file: !261, line: 127, baseType: !143, size: 8, offset: 160)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1826, file: !261, line: 153, baseType: !1931, offset: 168)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1932, line: 33, elements: !1933)
!1932 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1933 = !{}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1822, file: !261, line: 170, baseType: !1935, size: 96, offset: 192)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !1936)
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1935, file: !261, line: 86, baseType: !1831, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1935, file: !261, line: 90, baseType: !1867, size: 64, offset: 32)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1735, file: !1739, line: 43, type: !1941, isLocal: false, isDefinition: true, align: 64)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 8192, elements: !377)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !341, line: 47, size: 8, elements: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1942, file: !341, line: 48, baseType: !135, size: 8)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1735, file: !1739, line: 44, type: !1832, isLocal: false, isDefinition: true)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1735, file: !1739, line: 48, type: !1949, isLocal: false, isDefinition: true)
!1949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 896, elements: !1419)
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1735, file: !1739, line: 217, type: !146, isLocal: false, isDefinition: true)
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1735, file: !1739, line: 50, type: !1954, isLocal: true, isDefinition: true, align: 64)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 2560, elements: !1955)
!1955 = !{!1420, !1956}
!1956 = !DISubrange(count: 320)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "levels", scope: !1959, file: !1739, line: 232, type: !1979, isLocal: true, isDefinition: true)
!1959 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1739, file: !1739, line: 230, type: !1960, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !1962)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{null, !1738}
!1962 = !{!1963, !1964, !1974, !1978}
!1963 = !DILocalVariable(name: "level", arg: 1, scope: !1959, file: !1739, line: 230, type: !1738)
!1964 = !DILocalVariable(name: "entry", scope: !1959, file: !1739, line: 244, type: !1965)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !1968)
!1968 = !{!1969, !1973}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1967, file: !854, line: 60, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!118, !1757}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1967, file: !854, line: 65, baseType: !1757, size: 32, offset: 32)
!1974 = !DILocalVariable(name: "dev", scope: !1975, file: !1739, line: 247, type: !1757)
!1975 = distinct !DILexicalBlock(scope: !1976, file: !1739, line: 246, column: 64)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !1739, line: 246, column: 2)
!1977 = distinct !DILexicalBlock(scope: !1959, file: !1739, line: 246, column: 2)
!1978 = !DILocalVariable(name: "rc", scope: !1975, file: !1739, line: 248, type: !118)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 192, elements: !1393)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 16384, elements: !1981)
!1981 = !{!1420, !1982}
!1982 = !DISubrange(count: 2048)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "states_str", scope: !1985, file: !1986, line: 276, type: !2104, isLocal: true, isDefinition: true)
!1985 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1986, file: !1986, line: 271, type: !1987, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !2095)
!1986 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!133, !1989, !1060, !323}
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !1992)
!1992 = !{!1993, !2051, !2063, !2064, !2065, !2066, !2081}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1991, file: !225, line: 247, baseType: !1994, size: 384)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !1995)
!1995 = !{!1996, !2020, !2027, !2028, !2029, !2038, !2039, !2040}
!1996 = !DIDerivedType(tag: DW_TAG_member, scope: !1994, file: !225, line: 60, baseType: !1997, size: 64)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !225, line: 60, size: 64, elements: !1998)
!1998 = !{!1999, !2014}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1997, file: !225, line: 61, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2002)
!2002 = !{!2003, !2009}
!2003 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !235, line: 38, baseType: !2004, size: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !235, line: 38, size: 32, elements: !2005)
!2005 = !{!2006, !2008}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2004, file: !235, line: 39, baseType: !2007, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2004, file: !235, line: 40, baseType: !2007, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !235, line: 42, baseType: !2010, size: 32, offset: 32)
!2010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !235, line: 42, size: 32, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2010, file: !235, line: 43, baseType: !2007, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2010, file: !235, line: 44, baseType: !2007, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1997, file: !225, line: 62, baseType: !2015, size: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2015, file: !251, line: 50, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 64, elements: !256)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1994, file: !225, line: 68, baseType: !2021, size: 32, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2024)
!2024 = !{!2025}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2023, file: !261, line: 232, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2001)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1994, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1994, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !1994, file: !225, line: 90, baseType: !2030, size: 16, offset: 112)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !225, line: 90, size: 16, elements: !2031)
!2031 = !{!2032, !2037}
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !2030, file: !225, line: 91, baseType: !2033, size: 16)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2030, file: !225, line: 91, size: 16, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2033, file: !225, line: 96, baseType: !275, size: 8)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2033, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2030, file: !225, line: 100, baseType: !279, size: 16)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1994, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1994, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1994, file: !225, line: 131, baseType: !2041, size: 192, offset: 192)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2042)
!2042 = !{!2043, !2044, !2050}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2041, file: !261, line: 245, baseType: !2000, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2041, file: !261, line: 246, baseType: !2045, size: 32, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2046)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{null, !2049}
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2041, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1991, file: !225, line: 250, baseType: !2052, size: 288, offset: 384)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2052, file: !296, line: 26, baseType: !156, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2052, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2052, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2052, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2052, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2052, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2052, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2052, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2052, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1991, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1991, file: !225, line: 256, baseType: !2022, size: 64, offset: 704)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1991, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1991, file: !225, line: 325, baseType: !2067, size: 32, offset: 800)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2069)
!2069 = !{!2070, !2076, !2077}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2068, file: !220, line: 5074, baseType: !2071, size: 96)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !2072)
!2072 = !{!2073, !2074, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2071, file: !316, line: 57, baseType: !319, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2071, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2071, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2068, file: !220, line: 5075, baseType: !2022, size: 64, offset: 96)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2068, file: !220, line: 5076, baseType: !2078, size: 32, offset: 160)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !2079)
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2078, file: !328, line: 52, baseType: !22, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1991, file: !225, line: 343, baseType: !2082, size: 64, offset: 832)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2083)
!2083 = !{!2084, !2085}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2082, file: !296, line: 63, baseType: !156, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2082, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2088, globals: !2090, splitDebugInlining: false, nameTableKind: None)
!2087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2088 = !{!117, !133, !113, !143, !22, !118, !2089, !24, !323, !1060, !156, !213}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2090 = !{!1983, !2091}
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "states_sz", scope: !1985, file: !1986, line: 279, type: !2093, isLocal: true, isDefinition: true)
!2093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 256, elements: !1596)
!2094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!2095 = !{!2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2096 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1985, file: !1986, line: 271, type: !1989)
!2097 = !DILocalVariable(name: "buf", arg: 2, scope: !1985, file: !1986, line: 271, type: !1060)
!2098 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1985, file: !1986, line: 271, type: !323)
!2099 = !DILocalVariable(name: "off", scope: !1985, file: !1986, line: 273, type: !323)
!2100 = !DILocalVariable(name: "bit", scope: !1985, file: !1986, line: 274, type: !143)
!2101 = !DILocalVariable(name: "thread_state", scope: !1985, file: !1986, line: 275, type: !143)
!2102 = !DILocalVariable(name: "index", scope: !2103, file: !1986, line: 293, type: !143)
!2103 = distinct !DILexicalBlock(scope: !1985, file: !1986, line: 293, column: 2)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !1596)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2107, file: !2211, line: 56, type: !2198, isLocal: false, isDefinition: true)
!2107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2109, globals: !2208, splitDebugInlining: false, nameTableKind: None)
!2108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2109 = !{!2110, !1060, !117, !2206, !940, !113, !356, !118, !156, !213, !2207}
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !2112)
!2112 = !{!2113, !2171, !2183, !2184, !2185, !2186, !2201}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2111, file: !225, line: 247, baseType: !2114, size: 384)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2115)
!2115 = !{!2116, !2140, !2147, !2148, !2149, !2158, !2159, !2160}
!2116 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !225, line: 60, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !225, line: 60, size: 64, elements: !2118)
!2118 = !{!2119, !2134}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2117, file: !225, line: 61, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2122)
!2122 = !{!2123, !2129}
!2123 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !235, line: 38, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !235, line: 38, size: 32, elements: !2125)
!2125 = !{!2126, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2124, file: !235, line: 39, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2124, file: !235, line: 40, baseType: !2127, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2121, file: !235, line: 42, baseType: !2130, size: 32, offset: 32)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !235, line: 42, size: 32, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2130, file: !235, line: 43, baseType: !2127, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2130, file: !235, line: 44, baseType: !2127, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2117, file: !225, line: 62, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2135, file: !251, line: 50, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 64, elements: !256)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2114, file: !225, line: 68, baseType: !2141, size: 32, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2143, file: !261, line: 232, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2121)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2114, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2114, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2114, file: !225, line: 90, baseType: !2150, size: 16, offset: 112)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2114, file: !225, line: 90, size: 16, elements: !2151)
!2151 = !{!2152, !2157}
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2150, file: !225, line: 91, baseType: !2153, size: 16)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2150, file: !225, line: 91, size: 16, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2153, file: !225, line: 96, baseType: !275, size: 8)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2153, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2150, file: !225, line: 100, baseType: !279, size: 16)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2114, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2114, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2114, file: !225, line: 131, baseType: !2161, size: 192, offset: 192)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2162)
!2162 = !{!2163, !2164, !2170}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2161, file: !261, line: 245, baseType: !2120, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2161, file: !261, line: 246, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !2169}
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2161, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2111, file: !225, line: 250, baseType: !2172, size: 288, offset: 384)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2172, file: !296, line: 26, baseType: !156, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2172, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2172, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2172, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2172, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2172, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2172, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2172, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2172, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2111, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2111, file: !225, line: 256, baseType: !2142, size: 64, offset: 704)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2111, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2111, file: !225, line: 325, baseType: !2187, size: 32, offset: 800)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2189)
!2189 = !{!2190, !2196, !2197}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2188, file: !220, line: 5074, baseType: !2191, size: 96)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !2192)
!2192 = !{!2193, !2194, !2195}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2191, file: !316, line: 57, baseType: !319, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2191, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2191, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2188, file: !220, line: 5075, baseType: !2142, size: 64, offset: 96)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2188, file: !220, line: 5076, baseType: !2198, size: 32, offset: 160)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2198, file: !328, line: 52, baseType: !22, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2111, file: !225, line: 343, baseType: !2202, size: 64, offset: 832)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2203)
!2203 = !{!2204, !2205}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2202, file: !296, line: 63, baseType: !156, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2202, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2208 = !{!2105, !2209, !2212, !2214}
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2107, file: !2211, line: 404, type: !118, isLocal: true, isDefinition: true)
!2211 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2107, file: !2211, line: 405, type: !118, isLocal: true, isDefinition: true)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "pending_current", scope: !2107, file: !2211, line: 425, type: !2110, isLocal: true, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2218, file: !2248, line: 19, type: !2254, isLocal: true, isDefinition: true)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2220, globals: !2245, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2220 = !{!113, !117, !356, !156, !213, !118, !2221, !1060, !115}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2223)
!2223 = !{!2224, !2239, !2244}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2222, file: !261, line: 245, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2227)
!2227 = !{!2228, !2234}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !235, line: 38, baseType: !2229, size: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !235, line: 38, size: 32, elements: !2230)
!2230 = !{!2231, !2233}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2229, file: !235, line: 39, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2229, file: !235, line: 40, baseType: !2232, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !235, line: 42, baseType: !2235, size: 32, offset: 32)
!2235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !235, line: 42, size: 32, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2235, file: !235, line: 43, baseType: !2232, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2235, file: !235, line: 44, baseType: !2232, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2222, file: !261, line: 246, baseType: !2240, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2241)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{null, !2221}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2222, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2245 = !{!2246, !2216, !2249, !2251}
!2246 = !DIGlobalVariableExpression(var: !2247, expr: !DIExpression())
!2247 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2218, file: !2248, line: 15, type: !213, isLocal: true, isDefinition: true)
!2248 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2218, file: !2248, line: 25, type: !118, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2218, file: !2248, line: 17, type: !2253, isLocal: true, isDefinition: true)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2226)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2254, file: !328, line: 52, baseType: !22, size: 32)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2259, file: !2265, line: 61, type: !2297, isLocal: false, isDefinition: true, align: 64)
!2259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2261, globals: !2262, splitDebugInlining: false, nameTableKind: None)
!2260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2261 = !{!117, !118, !22}
!2262 = !{!2263, !2257}
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2259, file: !2265, line: 61, type: !2266, isLocal: false, isDefinition: true, align: 32)
!2265 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2267)
!2267 = !{!2268, !2274, !2293}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2266, file: !220, line: 5074, baseType: !2269, size: 96)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !2270)
!2270 = !{!2271, !2272, !2273}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2269, file: !316, line: 57, baseType: !319, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2269, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2269, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2266, file: !220, line: 5075, baseType: !2275, size: 64, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2277)
!2277 = !{!2278}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2276, file: !261, line: 232, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2280)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2281)
!2281 = !{!2282, !2288}
!2282 = !DIDerivedType(tag: DW_TAG_member, scope: !2280, file: !235, line: 38, baseType: !2283, size: 32)
!2283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2280, file: !235, line: 38, size: 32, elements: !2284)
!2284 = !{!2285, !2287}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2283, file: !235, line: 39, baseType: !2286, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2283, file: !235, line: 40, baseType: !2286, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2280, file: !235, line: 42, baseType: !2289, size: 32, offset: 32)
!2289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2280, file: !235, line: 42, size: 32, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2289, file: !235, line: 43, baseType: !2286, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2289, file: !235, line: 44, baseType: !2286, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2266, file: !220, line: 5076, baseType: !2294, size: 32, offset: 160)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !2295)
!2295 = !{!2296}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2294, file: !328, line: 52, baseType: !22, size: 32)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2048, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 256)
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2302, file: !2321, line: 55, type: !2322, isLocal: true, isDefinition: true, align: 32)
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2304, globals: !2320, splitDebugInlining: false, nameTableKind: None)
!2303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2304 = !{!117, !113, !118, !2305}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2307)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2308)
!2308 = !{!2309, !2315}
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !235, line: 38, baseType: !2310, size: 32)
!2310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !235, line: 38, size: 32, elements: !2311)
!2311 = !{!2312, !2314}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2310, file: !235, line: 39, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2310, file: !235, line: 40, baseType: !2313, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !235, line: 42, baseType: !2316, size: 32, offset: 32)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !235, line: 42, size: 32, elements: !2317)
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2316, file: !235, line: 43, baseType: !2313, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2316, file: !235, line: 44, baseType: !2313, size: 32)
!2320 = !{!2300}
!2321 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2323)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !854, line: 51, size: 64, elements: !2324)
!2324 = !{!2325, !2326}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2323, file: !854, line: 60, baseType: !857, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2323, file: !854, line: 65, baseType: !860, size: 32, offset: 32)
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2329 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2330, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2330 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2333, retainedTypes: !2341, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2333 = !{!30, !2334}
!2334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2335, line: 54, baseType: !32, size: 32, elements: !2336)
!2335 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2336 = !{!2337, !2338, !2339, !2340}
!2337 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2338 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2339 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2340 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2341 = !{!117, !323, !940, !24, !2342, !22, !2348, !118, !1388, !2363}
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2335, line: 58, baseType: !2344)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2335, line: 58, size: 64, elements: !2345)
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2344, file: !2335, line: 58, baseType: !2347, size: 64)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1596)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2335, line: 68, size: 128, elements: !2350)
!2350 = !{!2351, !2354, !2355, !2356}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2349, file: !2335, line: 69, baseType: !2352, size: 64)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2353, size: 64, elements: !256)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2335, line: 61, baseType: !156)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2349, file: !2335, line: 70, baseType: !2353, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2349, file: !2335, line: 71, baseType: !156, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2349, file: !2335, line: 77, baseType: !2357, offset: 128)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2358, elements: !2361)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2335, line: 64, size: 32, elements: !2359)
!2359 = !{!2360}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2358, file: !2335, line: 65, baseType: !2353, size: 32)
!2361 = !{!2362}
!2362 = !DISubrange(count: 0)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!2364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2366, retainedTypes: !2386, splitDebugInlining: false, nameTableKind: None)
!2365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2366 = !{!2367, !2375}
!2367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2368, line: 69, baseType: !32, size: 32, elements: !2369)
!2368 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2369 = !{!2370, !2371, !2372, !2373, !2374}
!2370 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2371 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2372 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2373 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2374 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2368, line: 56, baseType: !32, size: 32, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385}
!2377 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2378 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2379 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2380 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2381 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2382 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2383 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2384 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2385 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2386 = !{!118, !2367, !2375, !2387, !276, !153, !2389, !2390, !144, !280, !133, !323, !117, !22, !32, !2392, !2393, !2394, !2395, !2396, !116, !2397, !2388, !2398, !2399, !2400, !2401}
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2368, line: 31, baseType: !2388)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !116)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !324, line: 329, baseType: !32)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2368, line: 32, baseType: !2391)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !214)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!2395 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !324, line: 145, baseType: !118)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2403, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2403 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2405, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2405 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2407, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2408, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2407 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2408 = !{!2409, !30}
!2409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2410, line: 27, baseType: !32, size: 32, elements: !2411)
!2410 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2411 = !{!2412, !2413, !2414, !2415, !2416}
!2412 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2413 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2414 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2415 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2416 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2418, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2419, retainedTypes: !2420, splitDebugInlining: false, nameTableKind: None)
!2418 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2419 = !{!1440, !2409, !30}
!2420 = !{!2421, !2422, !117, !118, !356, !156, !143, !2439}
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !725, line: 249, baseType: !1440)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1583, line: 426, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 411, size: 28704, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2424, file: !1583, line: 413, baseType: !1595, size: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2424, file: !1583, line: 414, baseType: !1599, size: 768, offset: 256)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2424, file: !1583, line: 415, baseType: !1595, size: 256, offset: 1024)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2424, file: !1583, line: 416, baseType: !1599, size: 768, offset: 1280)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2424, file: !1583, line: 417, baseType: !1595, size: 256, offset: 2048)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2424, file: !1583, line: 418, baseType: !1599, size: 768, offset: 2304)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2424, file: !1583, line: 419, baseType: !1595, size: 256, offset: 3072)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2424, file: !1583, line: 420, baseType: !1599, size: 768, offset: 3328)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2424, file: !1583, line: 421, baseType: !1595, size: 256, offset: 4096)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2424, file: !1583, line: 422, baseType: !1610, size: 1792, offset: 4352)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2424, file: !1583, line: 423, baseType: !1614, size: 1920, offset: 6144)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2424, file: !1583, line: 424, baseType: !1619, size: 20608, offset: 8064)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2424, file: !1583, line: 425, baseType: !729, size: 32, offset: 28672)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2441, file: !1583, line: 447, baseType: !800, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2441, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2441, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2441, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2441, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2441, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2441, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2441, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2441, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2441, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2441, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2441, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2441, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2441, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2441, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2441, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2441, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2441, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2441, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2441, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2441, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2465, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2465 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2468, splitDebugInlining: false, nameTableKind: None)
!2467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2468 = !{!117, !118, !22, !2469}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2471, file: !1583, line: 447, baseType: !800, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2471, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2471, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2471, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2471, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2471, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2471, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2471, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2471, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2471, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2471, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2471, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2471, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2471, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2471, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2471, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2471, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2471, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2471, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2471, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2471, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2496, splitDebugInlining: false, nameTableKind: None)
!2495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2496 = !{!2497, !117, !118}
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2500)
!2500 = !{!2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2499, file: !1583, line: 447, baseType: !800, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2499, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2499, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2499, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2499, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2499, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2499, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2499, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2499, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2499, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2499, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2499, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2499, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2499, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2499, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2499, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2499, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2499, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2499, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2499, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2499, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2524 = !{!2525, !156, !117, !118}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2527, line: 98, size: 256, elements: !2528)
!2527 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = !{!2529, !2534, !2539, !2544, !2549, !2554, !2559, !2564}
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 99, baseType: !2530, size: 32)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 99, size: 32, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2530, file: !2527, line: 99, baseType: !156, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2530, file: !2527, line: 99, baseType: !156, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 100, baseType: !2535, size: 32, offset: 32)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 100, size: 32, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2535, file: !2527, line: 100, baseType: !156, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2535, file: !2527, line: 100, baseType: !156, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 101, baseType: !2540, size: 32, offset: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 101, size: 32, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2540, file: !2527, line: 101, baseType: !156, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2540, file: !2527, line: 101, baseType: !156, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 102, baseType: !2545, size: 32, offset: 96)
!2545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 102, size: 32, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2545, file: !2527, line: 102, baseType: !156, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2545, file: !2527, line: 102, baseType: !156, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 103, baseType: !2550, size: 32, offset: 128)
!2550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 103, size: 32, elements: !2551)
!2551 = !{!2552, !2553}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2550, file: !2527, line: 103, baseType: !156, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2550, file: !2527, line: 103, baseType: !156, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 104, baseType: !2555, size: 32, offset: 160)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 104, size: 32, elements: !2556)
!2556 = !{!2557, !2558}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2555, file: !2527, line: 104, baseType: !156, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2555, file: !2527, line: 104, baseType: !156, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !2527, line: 105, baseType: !2560, size: 32, offset: 192)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !2527, line: 105, size: 32, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2560, file: !2527, line: 105, baseType: !156, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2560, file: !2527, line: 105, baseType: !156, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2526, file: !2527, line: 106, baseType: !156, size: 32, offset: 224)
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2408, retainedTypes: !2567, splitDebugInlining: false, nameTableKind: None)
!2566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2567 = !{!2568, !117, !118, !2593, !2363, !156}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2570)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2571)
!2571 = !{!2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2570, file: !1583, line: 447, baseType: !800, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2570, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2570, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2570, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2570, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2570, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2570, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2570, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2570, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2570, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2570, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2570, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2570, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2570, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2570, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2570, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2570, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2570, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2570, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2570, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2570, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2527, line: 141, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2527, line: 97, size: 256, elements: !2596)
!2596 = !{!2597}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2595, file: !2527, line: 107, baseType: !2598, size: 256)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2527, line: 98, size: 256, elements: !2599)
!2599 = !{!2600, !2605, !2610, !2615, !2620, !2625, !2630, !2635}
!2600 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 99, baseType: !2601, size: 32)
!2601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 99, size: 32, elements: !2602)
!2602 = !{!2603, !2604}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2601, file: !2527, line: 99, baseType: !156, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2601, file: !2527, line: 99, baseType: !156, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 100, baseType: !2606, size: 32, offset: 32)
!2606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 100, size: 32, elements: !2607)
!2607 = !{!2608, !2609}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2606, file: !2527, line: 100, baseType: !156, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2606, file: !2527, line: 100, baseType: !156, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 101, baseType: !2611, size: 32, offset: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 101, size: 32, elements: !2612)
!2612 = !{!2613, !2614}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2611, file: !2527, line: 101, baseType: !156, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2611, file: !2527, line: 101, baseType: !156, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 102, baseType: !2616, size: 32, offset: 96)
!2616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 102, size: 32, elements: !2617)
!2617 = !{!2618, !2619}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2616, file: !2527, line: 102, baseType: !156, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2616, file: !2527, line: 102, baseType: !156, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 103, baseType: !2621, size: 32, offset: 128)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 103, size: 32, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2621, file: !2527, line: 103, baseType: !156, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2621, file: !2527, line: 103, baseType: !156, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 104, baseType: !2626, size: 32, offset: 160)
!2626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 104, size: 32, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2626, file: !2527, line: 104, baseType: !156, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2626, file: !2527, line: 104, baseType: !156, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, scope: !2598, file: !2527, line: 105, baseType: !2631, size: 32, offset: 192)
!2631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2598, file: !2527, line: 105, size: 32, elements: !2632)
!2632 = !{!2633, !2634}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2631, file: !2527, line: 105, baseType: !156, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2631, file: !2527, line: 105, baseType: !156, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2598, file: !2527, line: 106, baseType: !156, size: 32, offset: 224)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1439, retainedTypes: !2638, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2638 = !{!2421, !356, !143, !156, !2639, !2656}
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1583, line: 426, baseType: !2641)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 411, size: 28704, elements: !2642)
!2642 = !{!2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2641, file: !1583, line: 413, baseType: !1595, size: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2641, file: !1583, line: 414, baseType: !1599, size: 768, offset: 256)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2641, file: !1583, line: 415, baseType: !1595, size: 256, offset: 1024)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2641, file: !1583, line: 416, baseType: !1599, size: 768, offset: 1280)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2641, file: !1583, line: 417, baseType: !1595, size: 256, offset: 2048)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2641, file: !1583, line: 418, baseType: !1599, size: 768, offset: 2304)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2641, file: !1583, line: 419, baseType: !1595, size: 256, offset: 3072)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2641, file: !1583, line: 420, baseType: !1599, size: 768, offset: 3328)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2641, file: !1583, line: 421, baseType: !1595, size: 256, offset: 4096)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2641, file: !1583, line: 422, baseType: !1610, size: 1792, offset: 4352)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2641, file: !1583, line: 423, baseType: !1614, size: 1920, offset: 6144)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2641, file: !1583, line: 424, baseType: !1619, size: 20608, offset: 8064)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2641, file: !1583, line: 425, baseType: !729, size: 32, offset: 28672)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2658, file: !1583, line: 447, baseType: !800, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2658, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2658, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2658, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2658, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2658, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2658, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2658, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2658, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2658, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2658, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2658, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2658, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2658, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2658, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2658, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2658, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2658, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2658, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2658, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2658, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2683, splitDebugInlining: false, nameTableKind: None)
!2682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2683 = !{!2684, !117, !118}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1583, line: 468, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1583, line: 445, size: 1120, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2686, file: !1583, line: 447, baseType: !800, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2686, file: !1583, line: 448, baseType: !729, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2686, file: !1583, line: 449, baseType: !729, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2686, file: !1583, line: 450, baseType: !729, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2686, file: !1583, line: 451, baseType: !729, size: 32, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2686, file: !1583, line: 452, baseType: !729, size: 32, offset: 160)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2686, file: !1583, line: 453, baseType: !1634, size: 96, offset: 192)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2686, file: !1583, line: 454, baseType: !729, size: 32, offset: 288)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2686, file: !1583, line: 455, baseType: !729, size: 32, offset: 320)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2686, file: !1583, line: 456, baseType: !729, size: 32, offset: 352)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2686, file: !1583, line: 457, baseType: !729, size: 32, offset: 384)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2686, file: !1583, line: 458, baseType: !729, size: 32, offset: 416)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2686, file: !1583, line: 459, baseType: !729, size: 32, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2686, file: !1583, line: 460, baseType: !729, size: 32, offset: 480)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2686, file: !1583, line: 461, baseType: !1645, size: 64, offset: 512)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2686, file: !1583, line: 462, baseType: !800, size: 32, offset: 576)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2686, file: !1583, line: 463, baseType: !800, size: 32, offset: 608)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2686, file: !1583, line: 464, baseType: !1649, size: 128, offset: 640)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2686, file: !1583, line: 465, baseType: !1653, size: 160, offset: 768)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2686, file: !1583, line: 466, baseType: !1657, size: 160, offset: 928)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2686, file: !1583, line: 467, baseType: !729, size: 32, offset: 1088)
!2709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2710, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2711, splitDebugInlining: false, nameTableKind: None)
!2710 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2711 = !{!135, !1060, !323, !903, !2712, !144, !117}
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2718, splitDebugInlining: false, nameTableKind: None)
!2717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2718 = !{!849, !156}
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2721, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2721 = !{!2722}
!2722 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2723, line: 62, baseType: !32, size: 32, elements: !2724)
!2723 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2724 = !{!2725, !2726, !2727, !2728, !2729, !2730}
!2725 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2726 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2727 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2728 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2729 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2730 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2731 = !{!2732, !2795, !156, !146, !849}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !725, line: 8619, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 8563, size: 3072, elements: !2735)
!2735 = !{!2736, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2734, file: !725, line: 8564, baseType: !2737, size: 768)
!2737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 768, elements: !2738)
!2738 = !{!2739}
!2739 = !DISubrange(count: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2734, file: !725, line: 8565, baseType: !729, size: 32, offset: 768)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2734, file: !725, line: 8566, baseType: !729, size: 32, offset: 800)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2734, file: !725, line: 8567, baseType: !729, size: 32, offset: 832)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2734, file: !725, line: 8568, baseType: !729, size: 32, offset: 864)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2734, file: !725, line: 8569, baseType: !729, size: 32, offset: 896)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2734, file: !725, line: 8570, baseType: !729, size: 32, offset: 928)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2734, file: !725, line: 8571, baseType: !729, size: 32, offset: 960)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2734, file: !725, line: 8572, baseType: !729, size: 32, offset: 992)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2734, file: !725, line: 8573, baseType: !729, size: 32, offset: 1024)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2734, file: !725, line: 8574, baseType: !2750, size: 96, offset: 1056)
!2750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 96, elements: !1635)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2734, file: !725, line: 8575, baseType: !729, size: 32, offset: 1152)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2734, file: !725, line: 8576, baseType: !2750, size: 96, offset: 1184)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2734, file: !725, line: 8577, baseType: !729, size: 32, offset: 1280)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2734, file: !725, line: 8578, baseType: !2750, size: 96, offset: 1312)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2734, file: !725, line: 8579, baseType: !729, size: 32, offset: 1408)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2734, file: !725, line: 8580, baseType: !729, size: 32, offset: 1440)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2734, file: !725, line: 8581, baseType: !729, size: 32, offset: 1472)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2734, file: !725, line: 8582, baseType: !729, size: 32, offset: 1504)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2734, file: !725, line: 8583, baseType: !729, size: 32, offset: 1536)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2734, file: !725, line: 8584, baseType: !729, size: 32, offset: 1568)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2734, file: !725, line: 8585, baseType: !729, size: 32, offset: 1600)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2734, file: !725, line: 8586, baseType: !729, size: 32, offset: 1632)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2734, file: !725, line: 8587, baseType: !729, size: 32, offset: 1664)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2734, file: !725, line: 8588, baseType: !729, size: 32, offset: 1696)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2734, file: !725, line: 8589, baseType: !729, size: 32, offset: 1728)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2734, file: !725, line: 8590, baseType: !729, size: 32, offset: 1760)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2734, file: !725, line: 8591, baseType: !729, size: 32, offset: 1792)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2734, file: !725, line: 8592, baseType: !729, size: 32, offset: 1824)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2734, file: !725, line: 8593, baseType: !729, size: 32, offset: 1856)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2734, file: !725, line: 8594, baseType: !729, size: 32, offset: 1888)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2734, file: !725, line: 8595, baseType: !729, size: 32, offset: 1920)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2734, file: !725, line: 8596, baseType: !729, size: 32, offset: 1952)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2734, file: !725, line: 8597, baseType: !729, size: 32, offset: 1984)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2734, file: !725, line: 8598, baseType: !729, size: 32, offset: 2016)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2734, file: !725, line: 8599, baseType: !729, size: 32, offset: 2048)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2734, file: !725, line: 8600, baseType: !2750, size: 96, offset: 2080)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2734, file: !725, line: 8601, baseType: !729, size: 32, offset: 2176)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2734, file: !725, line: 8602, baseType: !2750, size: 96, offset: 2208)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2734, file: !725, line: 8603, baseType: !729, size: 32, offset: 2304)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2734, file: !725, line: 8604, baseType: !2750, size: 96, offset: 2336)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2734, file: !725, line: 8605, baseType: !729, size: 32, offset: 2432)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2734, file: !725, line: 8606, baseType: !729, size: 32, offset: 2464)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2734, file: !725, line: 8607, baseType: !729, size: 32, offset: 2496)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2734, file: !725, line: 8608, baseType: !729, size: 32, offset: 2528)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2734, file: !725, line: 8609, baseType: !729, size: 32, offset: 2560)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2734, file: !725, line: 8610, baseType: !2750, size: 96, offset: 2592)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2734, file: !725, line: 8611, baseType: !729, size: 32, offset: 2688)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2734, file: !725, line: 8612, baseType: !2750, size: 96, offset: 2720)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2734, file: !725, line: 8613, baseType: !729, size: 32, offset: 2816)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2734, file: !725, line: 8614, baseType: !2750, size: 96, offset: 2848)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2734, file: !725, line: 8615, baseType: !729, size: 32, offset: 2944)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2734, file: !725, line: 8616, baseType: !729, size: 32, offset: 2976)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2734, file: !725, line: 8617, baseType: !729, size: 32, offset: 3008)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2734, file: !725, line: 8618, baseType: !729, size: 32, offset: 3040)
!2795 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2798, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2798 = !{!2799, !2803, !979}
!2799 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !980, line: 49, baseType: !32, size: 32, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2802 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !980, line: 56, baseType: !32, size: 32, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809}
!2805 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2806 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2807 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2808 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2809 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2812, retainedTypes: !2821, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2812 = !{!1238, !2813, !2817}
!2813 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1160, line: 179, baseType: !32, size: 32, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2816 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2817 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1160, line: 194, baseType: !32, size: 32, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2820 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2821 = !{!156, !1388}
!2822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2824, retainedTypes: !2835, splitDebugInlining: false, nameTableKind: None)
!2823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2824 = !{!440, !2825}
!2825 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2723, line: 128, baseType: !32, size: 32, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2827 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2828 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2829 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2830 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2831 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2832 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2833 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2834 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2835 = !{!156, !2836, !2888, !849}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !725, line: 4575, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 4532, size: 390144, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2853, !2854, !2862, !2863}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2838, file: !725, line: 4533, baseType: !729, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2838, file: !725, line: 4534, baseType: !729, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2838, file: !725, line: 4535, baseType: !729, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2838, file: !725, line: 4536, baseType: !729, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2838, file: !725, line: 4537, baseType: !734, size: 16256, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2838, file: !725, line: 4543, baseType: !2846, size: 4224, offset: 16384)
!2846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2847, size: 4224, elements: !745)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2838, file: !725, line: 4538, size: 128, elements: !2848)
!2848 = !{!2849, !2850, !2851, !2852}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2847, file: !725, line: 4539, baseType: !729, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2847, file: !725, line: 4540, baseType: !729, size: 32, offset: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2847, file: !725, line: 4541, baseType: !729, size: 32, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2847, file: !725, line: 4542, baseType: !729, size: 32, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2838, file: !725, line: 4544, baseType: !748, size: 110464, offset: 20608)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2838, file: !725, line: 4550, baseType: !2855, size: 24448, offset: 131072)
!2855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2856, size: 24448, elements: !759)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2838, file: !725, line: 4545, size: 128, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2856, file: !725, line: 4546, baseType: !729, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2856, file: !725, line: 4547, baseType: !729, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2856, file: !725, line: 4548, baseType: !729, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2856, file: !725, line: 4549, baseType: !729, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2838, file: !725, line: 4551, baseType: !762, size: 106624, offset: 155520)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2838, file: !725, line: 4574, baseType: !2864, size: 128000, offset: 262144)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2865, size: 128000, elements: !793)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2838, file: !725, line: 4552, size: 1024, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2865, file: !725, line: 4553, baseType: !729, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2865, file: !725, line: 4554, baseType: !729, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2865, file: !725, line: 4555, baseType: !729, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2865, file: !725, line: 4556, baseType: !729, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2865, file: !725, line: 4557, baseType: !729, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2865, file: !725, line: 4558, baseType: !729, size: 32, offset: 160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2865, file: !725, line: 4559, baseType: !729, size: 32, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2865, file: !725, line: 4560, baseType: !729, size: 32, offset: 224)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2865, file: !725, line: 4561, baseType: !729, size: 32, offset: 256)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2865, file: !725, line: 4562, baseType: !729, size: 32, offset: 288)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2865, file: !725, line: 4563, baseType: !729, size: 32, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2865, file: !725, line: 4564, baseType: !729, size: 32, offset: 352)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2865, file: !725, line: 4565, baseType: !729, size: 32, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2865, file: !725, line: 4566, baseType: !729, size: 32, offset: 416)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2865, file: !725, line: 4567, baseType: !729, size: 32, offset: 448)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2865, file: !725, line: 4568, baseType: !729, size: 32, offset: 480)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2865, file: !725, line: 4569, baseType: !786, size: 384, offset: 512)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2865, file: !725, line: 4570, baseType: !729, size: 32, offset: 896)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2865, file: !725, line: 4571, baseType: !729, size: 32, offset: 928)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2865, file: !725, line: 4572, baseType: !729, size: 32, offset: 960)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2865, file: !725, line: 4573, baseType: !729, size: 32, offset: 992)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !725, line: 8619, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 8563, size: 3072, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2890, file: !725, line: 8564, baseType: !2737, size: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2890, file: !725, line: 8565, baseType: !729, size: 32, offset: 768)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2890, file: !725, line: 8566, baseType: !729, size: 32, offset: 800)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2890, file: !725, line: 8567, baseType: !729, size: 32, offset: 832)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2890, file: !725, line: 8568, baseType: !729, size: 32, offset: 864)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2890, file: !725, line: 8569, baseType: !729, size: 32, offset: 896)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2890, file: !725, line: 8570, baseType: !729, size: 32, offset: 928)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2890, file: !725, line: 8571, baseType: !729, size: 32, offset: 960)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2890, file: !725, line: 8572, baseType: !729, size: 32, offset: 992)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2890, file: !725, line: 8573, baseType: !729, size: 32, offset: 1024)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2890, file: !725, line: 8574, baseType: !2750, size: 96, offset: 1056)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2890, file: !725, line: 8575, baseType: !729, size: 32, offset: 1152)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2890, file: !725, line: 8576, baseType: !2750, size: 96, offset: 1184)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2890, file: !725, line: 8577, baseType: !729, size: 32, offset: 1280)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2890, file: !725, line: 8578, baseType: !2750, size: 96, offset: 1312)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2890, file: !725, line: 8579, baseType: !729, size: 32, offset: 1408)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2890, file: !725, line: 8580, baseType: !729, size: 32, offset: 1440)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2890, file: !725, line: 8581, baseType: !729, size: 32, offset: 1472)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2890, file: !725, line: 8582, baseType: !729, size: 32, offset: 1504)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2890, file: !725, line: 8583, baseType: !729, size: 32, offset: 1536)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2890, file: !725, line: 8584, baseType: !729, size: 32, offset: 1568)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2890, file: !725, line: 8585, baseType: !729, size: 32, offset: 1600)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2890, file: !725, line: 8586, baseType: !729, size: 32, offset: 1632)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2890, file: !725, line: 8587, baseType: !729, size: 32, offset: 1664)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2890, file: !725, line: 8588, baseType: !729, size: 32, offset: 1696)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2890, file: !725, line: 8589, baseType: !729, size: 32, offset: 1728)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2890, file: !725, line: 8590, baseType: !729, size: 32, offset: 1760)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2890, file: !725, line: 8591, baseType: !729, size: 32, offset: 1792)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2890, file: !725, line: 8592, baseType: !729, size: 32, offset: 1824)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2890, file: !725, line: 8593, baseType: !729, size: 32, offset: 1856)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2890, file: !725, line: 8594, baseType: !729, size: 32, offset: 1888)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2890, file: !725, line: 8595, baseType: !729, size: 32, offset: 1920)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2890, file: !725, line: 8596, baseType: !729, size: 32, offset: 1952)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2890, file: !725, line: 8597, baseType: !729, size: 32, offset: 1984)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2890, file: !725, line: 8598, baseType: !729, size: 32, offset: 2016)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2890, file: !725, line: 8599, baseType: !729, size: 32, offset: 2048)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2890, file: !725, line: 8600, baseType: !2750, size: 96, offset: 2080)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2890, file: !725, line: 8601, baseType: !729, size: 32, offset: 2176)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2890, file: !725, line: 8602, baseType: !2750, size: 96, offset: 2208)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2890, file: !725, line: 8603, baseType: !729, size: 32, offset: 2304)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2890, file: !725, line: 8604, baseType: !2750, size: 96, offset: 2336)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2890, file: !725, line: 8605, baseType: !729, size: 32, offset: 2432)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2890, file: !725, line: 8606, baseType: !729, size: 32, offset: 2464)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2890, file: !725, line: 8607, baseType: !729, size: 32, offset: 2496)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2890, file: !725, line: 8608, baseType: !729, size: 32, offset: 2528)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2890, file: !725, line: 8609, baseType: !729, size: 32, offset: 2560)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2890, file: !725, line: 8610, baseType: !2750, size: 96, offset: 2592)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2890, file: !725, line: 8611, baseType: !729, size: 32, offset: 2688)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2890, file: !725, line: 8612, baseType: !2750, size: 96, offset: 2720)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2890, file: !725, line: 8613, baseType: !729, size: 32, offset: 2816)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2890, file: !725, line: 8614, baseType: !2750, size: 96, offset: 2848)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2890, file: !725, line: 8615, baseType: !729, size: 32, offset: 2944)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2890, file: !725, line: 8616, baseType: !729, size: 32, offset: 2976)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2890, file: !725, line: 8617, baseType: !729, size: 32, offset: 3008)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2890, file: !725, line: 8618, baseType: !729, size: 32, offset: 3040)
!2947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2948, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !2949, splitDebugInlining: false, nameTableKind: None)
!2948 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2949 = !{!117, !323}
!2950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2952, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2952 = !{!2953, !2960, !2409, !30}
!2953 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2954, line: 14, baseType: !32, size: 32, elements: !2955)
!2954 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2955 = !{!2956, !2957, !2958, !2959}
!2956 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2957 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2958 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2959 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2960 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2954, line: 42, baseType: !32, size: 32, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967}
!2962 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2963 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2964 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2965 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2966 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2967 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2972, retainedTypes: !2983, splitDebugInlining: false, nameTableKind: None)
!2971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!2972 = !{!2973, !30}
!2973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !220, line: 5323, baseType: !32, size: 32, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2975 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!2976 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!2977 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!2978 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!2979 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!2980 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!2981 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!2982 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!2983 = !{!117, !143, !2984, !1060, !2994, !146, !2995, !118, !2996, !420}
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !2986, line: 25, size: 64, elements: !2987)
!2986 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !{!2988, !2993}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2985, file: !2986, line: 26, baseType: !2989, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !411, line: 39, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !411, line: 35, size: 32, elements: !2991)
!2991 = !{!2992}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !2990, file: !411, line: 36, baseType: !420, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2985, file: !2986, line: 27, baseType: !117, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2999)
!2999 = !{!3000, !3006}
!3000 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !235, line: 38, baseType: !3001, size: 32)
!3001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !235, line: 38, size: 32, elements: !3002)
!3002 = !{!3003, !3005}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3001, file: !235, line: 39, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3001, file: !235, line: 40, baseType: !3004, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !235, line: 42, baseType: !3007, size: 32, offset: 32)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !235, line: 42, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3007, file: !235, line: 43, baseType: !3004, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3007, file: !235, line: 44, baseType: !3004, size: 32)
!3011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !3013, splitDebugInlining: false, nameTableKind: None)
!3012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3013 = !{!22, !117, !118}
!3014 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3015, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!3015 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3017, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !429, splitDebugInlining: false, nameTableKind: None)
!3017 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3018 = !{!"Ubuntu clang version 14.0.6"}
!3019 = !{i32 7, !"Dwarf Version", i32 4}
!3020 = !{i32 2, !"Debug Info Version", i32 3}
!3021 = !{i32 1, !"wchar_size", i32 4}
!3022 = !{i32 1, !"min_enum_size", i32 4}
!3023 = !{i32 1, !"branch-target-enforcement", i32 0}
!3024 = !{i32 1, !"sign-return-address", i32 0}
!3025 = !{i32 1, !"sign-return-address-all", i32 0}
!3026 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3027 = !{i32 7, !"frame-pointer", i32 2}
!3028 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3029, file: !3029, line: 26, type: !359, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !1933)
!3029 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3030 = !DILocation(line: 28, column: 1, scope: !3028)
!3031 = !{i64 2155082205, i64 2155082225, i64 2155082288}
!3032 = !DILocation(line: 29, column: 1, scope: !3028)
!3033 = !{i64 2155082620, i64 2155082640, i64 2155082703}
!3034 = !DILocation(line: 30, column: 1, scope: !3028)
!3035 = !{i64 2155083039, i64 2155083059, i64 2155083122}
!3036 = !DILocation(line: 31, column: 1, scope: !3028)
!3037 = !{i64 2155087519, i64 2155087539, i64 2155087602}
!3038 = !DILocation(line: 33, column: 1, scope: !3028)
!3039 = !{i64 2155087811, i64 2155087831, i64 2155087894}
!3040 = !DILocation(line: 35, column: 1, scope: !3028)
!3041 = !{i64 2155088136, i64 2155088156, i64 2155088219}
!3042 = !DILocation(line: 50, column: 1, scope: !3028)
!3043 = !{i64 2155088563, i64 2155088583, i64 2155088646}
!3044 = !DILocation(line: 54, column: 1, scope: !3028)
!3045 = !{i64 2155089002, i64 2155089022, i64 2155089085}
!3046 = !DILocation(line: 61, column: 1, scope: !3028)
!3047 = !{i64 2155089319, i64 2155089339, i64 2155089402}
!3048 = !DILocation(line: 63, column: 1, scope: !3028)
!3049 = !{i64 2155089699, i64 2155089719, i64 2155089782}
!3050 = !DILocation(line: 64, column: 1, scope: !3028)
!3051 = !{i64 2155090221, i64 2155090241, i64 2155090304}
!3052 = !DILocation(line: 65, column: 1, scope: !3028)
!3053 = !{i64 2155090719, i64 2155090739, i64 2155090802}
!3054 = !DILocation(line: 66, column: 1, scope: !3028)
!3055 = !{i64 2155091201, i64 2155091221, i64 2155091284}
!3056 = !DILocation(line: 67, column: 1, scope: !3028)
!3057 = !{i64 2155091708, i64 2155091728, i64 2155091791}
!3058 = !DILocation(line: 68, column: 1, scope: !3028)
!3059 = !{i64 2155092196, i64 2155092216, i64 2155092279}
!3060 = !DILocation(line: 70, column: 1, scope: !3028)
!3061 = !{i64 2155092664, i64 2155092684, i64 2155092747}
!3062 = !DILocation(line: 71, column: 1, scope: !3028)
!3063 = !{i64 2155093106, i64 2155093126, i64 2155093189}
!3064 = !DILocation(line: 72, column: 1, scope: !3028)
!3065 = !{i64 2155093564, i64 2155093584, i64 2155093647}
!3066 = !DILocation(line: 97, column: 1, scope: !3028)
!3067 = !{i64 2155093871, i64 2155093891, i64 2155093954}
!3068 = !DILocation(line: 99, column: 1, scope: !3028)
!3069 = !{i64 2155094089, i64 2155094109, i64 2155094172}
!3070 = !DILocation(line: 102, column: 1, scope: !3028)
!3071 = !{i64 2155094346, i64 2155094366, i64 2155094429}
!3072 = !DILocation(line: 105, column: 1, scope: !3028)
!3073 = !{i64 2155094586, i64 2155094606, i64 2155094669}
!3074 = !DILocation(line: 115, column: 1, scope: !3028)
!3075 = !{i64 2155094925, i64 2155094945, i64 2155095008}
!3076 = !DILocation(line: 118, column: 1, scope: !3028)
!3077 = !{i64 2155095269, i64 2155095289, i64 2155095352}
!3078 = !DILocation(line: 32, column: 1, scope: !3079)
!3079 = !DILexicalBlockFile(scope: !3028, file: !3080, discriminator: 0)
!3080 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3081 = !{i64 2155095625, i64 2155095645, i64 2155095708}
!3082 = !DILocation(line: 33, column: 1, scope: !3079)
!3083 = !{i64 2155096137, i64 2155096157, i64 2155096220}
!3084 = !DILocation(line: 53, column: 1, scope: !3079)
!3085 = !{i64 2155096645, i64 2155096665, i64 2155096728}
!3086 = !DILocation(line: 54, column: 1, scope: !3079)
!3087 = !{i64 2155101124, i64 2155101144, i64 2155101207}
!3088 = !DILocation(line: 55, column: 1, scope: !3079)
!3089 = !{i64 2155101542, i64 2155101562, i64 2155101625}
!3090 = !DILocation(line: 56, column: 1, scope: !3079)
!3091 = !{i64 2155101960, i64 2155101980, i64 2155102043}
!3092 = !DILocation(line: 57, column: 1, scope: !3079)
!3093 = !{i64 2155102378, i64 2155102398, i64 2155102461}
!3094 = !DILocation(line: 58, column: 1, scope: !3079)
!3095 = !{i64 2155102796, i64 2155102816, i64 2155102879}
!3096 = !DILocation(line: 59, column: 1, scope: !3079)
!3097 = !{i64 2155103214, i64 2155103234, i64 2155103297}
!3098 = !DILocation(line: 60, column: 1, scope: !3079)
!3099 = !{i64 2155103638, i64 2155103658, i64 2155103721}
!3100 = !DILocation(line: 61, column: 1, scope: !3079)
!3101 = !{i64 2155103955, i64 2155103975, i64 2155104038}
!3102 = !DILocation(line: 70, column: 1, scope: !3079)
!3103 = !{i64 2155104184, i64 2155104204, i64 2155104267}
!3104 = !DILocation(line: 72, column: 1, scope: !3079)
!3105 = !{i64 2155104516, i64 2155104536, i64 2155104599}
!3106 = !DILocation(line: 73, column: 1, scope: !3079)
!3107 = !{i64 2155104966, i64 2155104986, i64 2155105049}
!3108 = !DILocation(line: 74, column: 1, scope: !3079)
!3109 = !{i64 2155105416, i64 2155105436, i64 2155105499}
!3110 = !DILocation(line: 75, column: 1, scope: !3079)
!3111 = !{i64 2155105866, i64 2155105886, i64 2155105949}
!3112 = !DILocation(line: 76, column: 1, scope: !3079)
!3113 = !{i64 2155106316, i64 2155106336, i64 2155106399}
!3114 = !DILocation(line: 77, column: 1, scope: !3079)
!3115 = !{i64 2155106766, i64 2155106786, i64 2155106849}
!3116 = !DILocation(line: 78, column: 1, scope: !3079)
!3117 = !{i64 2155107216, i64 2155107236, i64 2155107299}
!3118 = !DILocation(line: 79, column: 1, scope: !3079)
!3119 = !{i64 2155107666, i64 2155107686, i64 2155107749}
!3120 = !DILocation(line: 80, column: 1, scope: !3079)
!3121 = !{i64 2155108119, i64 2155108139, i64 2155108202}
!3122 = !DILocation(line: 84, column: 1, scope: !3079)
!3123 = !{i64 2155108451, i64 2155108471, i64 2155108534}
!3124 = !DILocation(line: 106, column: 1, scope: !3079)
!3125 = !{i64 2155108701, i64 2155108721, i64 2155108784}
!3126 = !DILocation(line: 11, column: 1, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !3028, file: !3128, discriminator: 0)
!3128 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3129 = distinct !DISubprogram(name: "blink0", scope: !218, file: !218, line: 90, type: !359, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1933)
!3130 = !DILocation(line: 92, column: 2, scope: !3129)
!3131 = !DILocation(line: 93, column: 1, scope: !3129)
!3132 = distinct !DISubprogram(name: "blink", scope: !218, file: !218, line: 54, type: !3133, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3136)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{null, !3135, !156, !156}
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!3136 = !{!3137, !3138, !3139, !3140, !3143, !3144, !3145, !3152, !3153}
!3137 = !DILocalVariable(name: "led", arg: 1, scope: !3132, file: !218, line: 54, type: !3135)
!3138 = !DILocalVariable(name: "sleep_ms", arg: 2, scope: !3132, file: !218, line: 54, type: !156)
!3139 = !DILocalVariable(name: "id", arg: 3, scope: !3132, file: !218, line: 54, type: !156)
!3140 = !DILocalVariable(name: "spec", scope: !3132, file: !218, line: 56, type: !3141)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!3143 = !DILocalVariable(name: "cnt", scope: !3132, file: !218, line: 57, type: !118)
!3144 = !DILocalVariable(name: "ret", scope: !3132, file: !218, line: 58, type: !118)
!3145 = !DILocalVariable(name: "tx_data", scope: !3146, file: !218, line: 75, type: !3147)
!3146 = distinct !DILexicalBlock(scope: !3132, file: !218, line: 72, column: 12)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "printk_data_t", file: !218, line: 31, size: 96, elements: !3148)
!3148 = !{!3149, !3150, !3151}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reserved", scope: !3147, file: !218, line: 32, baseType: !117, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3147, file: !218, line: 33, baseType: !156, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3147, file: !218, line: 34, baseType: !156, size: 32, offset: 64)
!3152 = !DILocalVariable(name: "size", scope: !3146, file: !218, line: 77, type: !323)
!3153 = !DILocalVariable(name: "mem_ptr", scope: !3146, file: !218, line: 78, type: !1060)
!3154 = !DILocation(line: 0, scope: !3132)
!3155 = !DILocation(line: 60, column: 29, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3132, file: !218, line: 60, column: 6)
!3157 = !DILocation(line: 60, column: 7, scope: !3156)
!3158 = !DILocation(line: 60, column: 6, scope: !3132)
!3159 = !DILocation(line: 61, column: 51, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3156, file: !218, line: 60, column: 36)
!3161 = !DILocation(line: 61, column: 57, scope: !3160)
!3162 = !DILocation(line: 61, column: 3, scope: !3160)
!3163 = !DILocation(line: 62, column: 3, scope: !3160)
!3164 = !DILocation(line: 56, column: 42, scope: !3132)
!3165 = !DILocation(line: 65, column: 8, scope: !3132)
!3166 = !DILocation(line: 66, column: 10, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3132, file: !218, line: 66, column: 6)
!3168 = !DILocation(line: 66, column: 6, scope: !3132)
!3169 = !DILocation(line: 73, column: 22, scope: !3146)
!3170 = !DILocation(line: 73, column: 34, scope: !3146)
!3171 = !DILocation(line: 73, column: 3, scope: !3146)
!3172 = !DILocation(line: 75, column: 3, scope: !3146)
!3173 = !DILocation(line: 75, column: 24, scope: !3146)
!3174 = !DILocation(line: 75, column: 34, scope: !3146)
!3175 = !DILocation(line: 0, scope: !3146)
!3176 = !DILocation(line: 78, column: 19, scope: !3146)
!3177 = !DILocation(line: 79, column: 3, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !218, line: 79, column: 3)
!3179 = distinct !DILexicalBlock(scope: !3146, file: !218, line: 79, column: 3)
!3180 = !DILocation(line: 79, column: 3, scope: !3179)
!3181 = !DILocation(line: 68, column: 15, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3167, file: !218, line: 66, column: 16)
!3183 = !DILocation(line: 68, column: 9, scope: !3182)
!3184 = !DILocation(line: 68, column: 25, scope: !3182)
!3185 = !DILocation(line: 68, column: 20, scope: !3182)
!3186 = !DILocation(line: 67, column: 3, scope: !3182)
!3187 = !DILocation(line: 69, column: 3, scope: !3182)
!3188 = !DILocation(line: 79, column: 3, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3178, file: !218, line: 79, column: 3)
!3190 = !DILocation(line: 81, column: 3, scope: !3146)
!3191 = !DILocation(line: 83, column: 3, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3146, file: !218, line: 83, column: 3)
!3193 = !DILocation(line: 85, column: 3, scope: !3146)
!3194 = !DILocation(line: 86, column: 6, scope: !3146)
!3195 = !DILocation(line: 87, column: 2, scope: !3132)
!3196 = !DILocation(line: 73, column: 43, scope: !3146)
!3197 = distinct !{!3197, !3198, !3195}
!3198 = !DILocation(line: 72, column: 2, scope: !3132)
!3199 = !DILocation(line: 88, column: 1, scope: !3132)
!3200 = distinct !DISubprogram(name: "device_is_ready", scope: !3201, file: !3201, line: 47, type: !3202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3204)
!3201 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!146, !127}
!3204 = !{!3205}
!3205 = !DILocalVariable(name: "dev", arg: 1, scope: !3200, file: !3201, line: 47, type: !127)
!3206 = !DILocation(line: 0, scope: !3200)
!3207 = !DILocation(line: 55, column: 2, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3200, file: !3201, line: 55, column: 2)
!3209 = !{i64 2151351127}
!3210 = !DILocation(line: 56, column: 9, scope: !3200)
!3211 = !DILocation(line: 56, column: 2, scope: !3200)
!3212 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !102, file: !102, line: 731, type: !3213, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3215)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!118, !3141, !155}
!3215 = !{!3216, !3217}
!3216 = !DILocalVariable(name: "spec", arg: 1, scope: !3212, file: !102, line: 731, type: !3141)
!3217 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3212, file: !102, line: 732, type: !155)
!3218 = !DILocation(line: 0, scope: !3212)
!3219 = !DILocation(line: 734, column: 34, scope: !3212)
!3220 = !DILocation(line: 735, column: 13, scope: !3212)
!3221 = !DILocation(line: 736, column: 13, scope: !3212)
!3222 = !DILocation(line: 736, column: 7, scope: !3212)
!3223 = !DILocation(line: 736, column: 22, scope: !3212)
!3224 = !DILocation(line: 734, column: 9, scope: !3212)
!3225 = !DILocation(line: 734, column: 2, scope: !3212)
!3226 = distinct !DISubprogram(name: "gpio_pin_set", scope: !102, file: !102, line: 1287, type: !3227, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3229)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!118, !127, !154, !118}
!3229 = !{!3230, !3231, !3232, !3233, !3235}
!3230 = !DILocalVariable(name: "port", arg: 1, scope: !3226, file: !102, line: 1287, type: !127)
!3231 = !DILocalVariable(name: "pin", arg: 2, scope: !3226, file: !102, line: 1287, type: !154)
!3232 = !DILocalVariable(name: "value", arg: 3, scope: !3226, file: !102, line: 1288, type: !118)
!3233 = !DILocalVariable(name: "cfg", scope: !3226, file: !102, line: 1290, type: !3234)
!3234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!3235 = !DILocalVariable(name: "data", scope: !3226, file: !102, line: 1292, type: !3236)
!3236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3237 = !DILocation(line: 0, scope: !3226)
!3238 = !DILocation(line: 1291, column: 44, scope: !3226)
!3239 = !DILocation(line: 1295, column: 2, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !102, line: 1295, column: 2)
!3241 = distinct !DILexicalBlock(scope: !3226, file: !102, line: 1295, column: 2)
!3242 = !DILocation(line: 1295, column: 2, scope: !3241)
!3243 = !DILocation(line: 1295, column: 2, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3240, file: !102, line: 1295, column: 2)
!3245 = !DILocation(line: 1293, column: 43, scope: !3226)
!3246 = !DILocation(line: 1298, column: 12, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3226, file: !102, line: 1298, column: 6)
!3248 = !DILocation(line: 1298, column: 19, scope: !3247)
!3249 = !DILocation(line: 1298, column: 6, scope: !3226)
!3250 = !DILocation(line: 1302, column: 9, scope: !3226)
!3251 = !DILocation(line: 1302, column: 2, scope: !3226)
!3252 = distinct !DISubprogram(name: "k_msleep", scope: !220, file: !220, line: 439, type: !3253, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3255)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!356, !356}
!3255 = !{!3256}
!3256 = !DILocalVariable(name: "ms", arg: 1, scope: !3252, file: !220, line: 439, type: !356)
!3257 = !DILocation(line: 0, scope: !3252)
!3258 = !DILocation(line: 441, column: 17, scope: !3252)
!3259 = !DILocation(line: 441, column: 9, scope: !3252)
!3260 = !DILocation(line: 441, column: 2, scope: !3252)
!3261 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3262, file: !3262, line: 403, type: !3263, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3265)
!3262 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!213, !213}
!3265 = !{!3266}
!3266 = !DILocalVariable(name: "t", arg: 1, scope: !3261, file: !3262, line: 403, type: !213)
!3267 = !DILocation(line: 0, scope: !3261)
!3268 = !DILocalVariable(name: "t", arg: 1, scope: !3269, file: !3262, line: 102, type: !213)
!3269 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3270, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3272)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!213, !213, !156, !156, !146, !146, !146, !146}
!3272 = !{!3268, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282}
!3273 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3269, file: !3262, line: 102, type: !156)
!3274 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3269, file: !3262, line: 103, type: !156)
!3275 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3269, file: !3262, line: 103, type: !146)
!3276 = !DILocalVariable(name: "result32", arg: 5, scope: !3269, file: !3262, line: 104, type: !146)
!3277 = !DILocalVariable(name: "round_up", arg: 6, scope: !3269, file: !3262, line: 104, type: !146)
!3278 = !DILocalVariable(name: "round_off", arg: 7, scope: !3269, file: !3262, line: 105, type: !146)
!3279 = !DILocalVariable(name: "mul_ratio", scope: !3269, file: !3262, line: 107, type: !146)
!3280 = !DILocalVariable(name: "div_ratio", scope: !3269, file: !3262, line: 109, type: !146)
!3281 = !DILocalVariable(name: "off", scope: !3269, file: !3262, line: 116, type: !213)
!3282 = !DILocalVariable(name: "rdivisor", scope: !3283, file: !3262, line: 119, type: !156)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !3262, line: 118, column: 18)
!3284 = distinct !DILexicalBlock(scope: !3269, file: !3262, line: 118, column: 6)
!3285 = !DILocation(line: 0, scope: !3269, inlinedAt: !3286)
!3286 = distinct !DILocation(line: 406, column: 9, scope: !3261)
!3287 = !DILocation(line: 145, column: 13, scope: !3288, inlinedAt: !3286)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !3262, line: 144, column: 10)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !3262, line: 142, column: 7)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !3262, line: 141, column: 24)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !3262, line: 141, column: 13)
!3292 = distinct !DILexicalBlock(scope: !3269, file: !3262, line: 134, column: 6)
!3293 = !DILocation(line: 406, column: 2, scope: !3261)
!3294 = distinct !DISubprogram(name: "k_sleep", scope: !3295, file: !3295, line: 91, type: !3296, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3302)
!3295 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!356, !3298}
!3298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !3299)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !3300)
!3300 = !{!3301}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3299, file: !114, line: 66, baseType: !113, size: 64)
!3302 = !{!3303}
!3303 = !DILocalVariable(name: "timeout", arg: 1, scope: !3294, file: !3295, line: 91, type: !3298)
!3304 = !DILocation(line: 0, scope: !3294)
!3305 = !DILocation(line: 99, column: 2, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3294, file: !3295, line: 99, column: 2)
!3307 = !{i64 2151041326}
!3308 = !DILocation(line: 100, column: 9, scope: !3294)
!3309 = !DILocation(line: 100, column: 2, scope: !3294)
!3310 = distinct !DISubprogram(name: "gpio_pin_set_raw", scope: !102, file: !102, line: 1247, type: !3227, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3311)
!3311 = !{!3312, !3313, !3314, !3315, !3316}
!3312 = !DILocalVariable(name: "port", arg: 1, scope: !3310, file: !102, line: 1247, type: !127)
!3313 = !DILocalVariable(name: "pin", arg: 2, scope: !3310, file: !102, line: 1247, type: !154)
!3314 = !DILocalVariable(name: "value", arg: 3, scope: !3310, file: !102, line: 1248, type: !118)
!3315 = !DILocalVariable(name: "cfg", scope: !3310, file: !102, line: 1250, type: !3234)
!3316 = !DILocalVariable(name: "ret", scope: !3310, file: !102, line: 1252, type: !118)
!3317 = !DILocation(line: 0, scope: !3310)
!3318 = !DILocation(line: 1251, column: 44, scope: !3310)
!3319 = !DILocation(line: 1254, column: 2, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !102, line: 1254, column: 2)
!3321 = distinct !DILexicalBlock(scope: !3310, file: !102, line: 1254, column: 2)
!3322 = !DILocation(line: 1254, column: 2, scope: !3321)
!3323 = !DILocation(line: 1254, column: 2, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3320, file: !102, line: 1254, column: 2)
!3325 = !DILocation(line: 1257, column: 12, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3310, file: !102, line: 1257, column: 6)
!3327 = !DILocation(line: 1257, column: 6, scope: !3310)
!3328 = !DILocation(line: 1258, column: 9, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3326, file: !102, line: 1257, column: 18)
!3330 = !DILocation(line: 1259, column: 2, scope: !3329)
!3331 = !DILocation(line: 1260, column: 9, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3326, file: !102, line: 1259, column: 9)
!3333 = !DILocation(line: 1263, column: 2, scope: !3310)
!3334 = distinct !DISubprogram(name: "gpio_port_set_bits_raw", scope: !3335, file: !3335, line: 174, type: !170, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3336)
!3335 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!3336 = !{!3337, !3338}
!3337 = !DILocalVariable(name: "port", arg: 1, scope: !3334, file: !3335, line: 174, type: !127)
!3338 = !DILocalVariable(name: "pins", arg: 2, scope: !3334, file: !3335, line: 174, type: !167)
!3339 = !DILocation(line: 0, scope: !3334)
!3340 = !DILocation(line: 183, column: 2, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3334, file: !3335, line: 183, column: 2)
!3342 = !{i64 2151462236}
!3343 = !DILocation(line: 184, column: 9, scope: !3334)
!3344 = !DILocation(line: 184, column: 2, scope: !3334)
!3345 = distinct !DISubprogram(name: "gpio_port_clear_bits_raw", scope: !3335, file: !3335, line: 198, type: !170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3346)
!3346 = !{!3347, !3348}
!3347 = !DILocalVariable(name: "port", arg: 1, scope: !3345, file: !3335, line: 198, type: !127)
!3348 = !DILocalVariable(name: "pins", arg: 2, scope: !3345, file: !3335, line: 198, type: !167)
!3349 = !DILocation(line: 0, scope: !3345)
!3350 = !DILocation(line: 207, column: 2, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !3335, line: 207, column: 2)
!3352 = !{i64 2151462304}
!3353 = !DILocation(line: 208, column: 9, scope: !3345)
!3354 = !DILocation(line: 208, column: 2, scope: !3345)
!3355 = distinct !DISubprogram(name: "z_impl_gpio_port_clear_bits_raw", scope: !102, file: !102, line: 1060, type: !170, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3356)
!3356 = !{!3357, !3358, !3359}
!3357 = !DILocalVariable(name: "port", arg: 1, scope: !3355, file: !102, line: 1060, type: !127)
!3358 = !DILocalVariable(name: "pins", arg: 2, scope: !3355, file: !102, line: 1061, type: !167)
!3359 = !DILocalVariable(name: "api", scope: !3355, file: !102, line: 1063, type: !119)
!3360 = !DILocation(line: 0, scope: !3355)
!3361 = !DILocation(line: 1064, column: 41, scope: !3355)
!3362 = !DILocation(line: 1066, column: 14, scope: !3355)
!3363 = !DILocation(line: 1066, column: 9, scope: !3355)
!3364 = !DILocation(line: 1066, column: 2, scope: !3355)
!3365 = distinct !DISubprogram(name: "z_impl_gpio_port_set_bits_raw", scope: !102, file: !102, line: 1022, type: !170, scopeLine: 1024, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3366)
!3366 = !{!3367, !3368, !3369}
!3367 = !DILocalVariable(name: "port", arg: 1, scope: !3365, file: !102, line: 1022, type: !127)
!3368 = !DILocalVariable(name: "pins", arg: 2, scope: !3365, file: !102, line: 1023, type: !167)
!3369 = !DILocalVariable(name: "api", scope: !3365, file: !102, line: 1025, type: !119)
!3370 = !DILocation(line: 0, scope: !3365)
!3371 = !DILocation(line: 1026, column: 41, scope: !3365)
!3372 = !DILocation(line: 1028, column: 14, scope: !3365)
!3373 = !DILocation(line: 1028, column: 9, scope: !3365)
!3374 = !DILocation(line: 1028, column: 2, scope: !3365)
!3375 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3335, file: !3335, line: 49, type: !125, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3376)
!3376 = !{!3377, !3378, !3379}
!3377 = !DILocalVariable(name: "port", arg: 1, scope: !3375, file: !3335, line: 49, type: !127)
!3378 = !DILocalVariable(name: "pin", arg: 2, scope: !3375, file: !3335, line: 49, type: !154)
!3379 = !DILocalVariable(name: "flags", arg: 3, scope: !3375, file: !3335, line: 49, type: !155)
!3380 = !DILocation(line: 0, scope: !3375)
!3381 = !DILocation(line: 59, column: 2, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3375, file: !3335, line: 59, column: 2)
!3383 = !{i64 2151461896}
!3384 = !DILocation(line: 60, column: 9, scope: !3375)
!3385 = !DILocation(line: 60, column: 2, scope: !3375)
!3386 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !102, file: !102, line: 667, type: !125, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3387)
!3387 = !{!3388, !3389, !3390, !3391, !3392, !3393}
!3388 = !DILocalVariable(name: "port", arg: 1, scope: !3386, file: !102, line: 667, type: !127)
!3389 = !DILocalVariable(name: "pin", arg: 2, scope: !3386, file: !102, line: 668, type: !154)
!3390 = !DILocalVariable(name: "flags", arg: 3, scope: !3386, file: !102, line: 669, type: !155)
!3391 = !DILocalVariable(name: "api", scope: !3386, file: !102, line: 671, type: !119)
!3392 = !DILocalVariable(name: "cfg", scope: !3386, file: !102, line: 673, type: !3234)
!3393 = !DILocalVariable(name: "data", scope: !3386, file: !102, line: 675, type: !212)
!3394 = !DILocation(line: 0, scope: !3386)
!3395 = !DILocation(line: 672, column: 41, scope: !3386)
!3396 = !DILocation(line: 674, column: 44, scope: !3386)
!3397 = !DILocation(line: 676, column: 36, scope: !3386)
!3398 = !DILocation(line: 678, column: 2, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !102, line: 678, column: 2)
!3400 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 678, column: 2)
!3401 = !DILocation(line: 678, column: 2, scope: !3400)
!3402 = !DILocation(line: 678, column: 2, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !102, line: 678, column: 2)
!3404 = !DILocation(line: 681, column: 2, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !102, line: 681, column: 2)
!3406 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 681, column: 2)
!3407 = !DILocation(line: 681, column: 2, scope: !3406)
!3408 = !DILocation(line: 681, column: 2, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !102, line: 681, column: 2)
!3410 = !DILocation(line: 685, column: 2, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !102, line: 685, column: 2)
!3412 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 685, column: 2)
!3413 = !DILocation(line: 685, column: 2, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !102, line: 685, column: 2)
!3415 = !DILocation(line: 689, column: 2, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !102, line: 689, column: 2)
!3417 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 689, column: 2)
!3418 = !DILocation(line: 689, column: 2, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3416, file: !102, line: 689, column: 2)
!3420 = !DILocation(line: 692, column: 2, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !102, line: 692, column: 2)
!3422 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 692, column: 2)
!3423 = !DILocation(line: 692, column: 2, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !102, line: 692, column: 2)
!3425 = !DILocation(line: 696, column: 2, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !102, line: 696, column: 2)
!3427 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 696, column: 2)
!3428 = !DILocation(line: 696, column: 2, scope: !3427)
!3429 = !DILocation(line: 696, column: 2, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3426, file: !102, line: 696, column: 2)
!3431 = !DILocation(line: 701, column: 6, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 700, column: 6)
!3433 = !DILocation(line: 708, column: 2, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !102, line: 708, column: 2)
!3435 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 708, column: 2)
!3436 = !DILocation(line: 708, column: 2, scope: !3435)
!3437 = !DILocation(line: 708, column: 2, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !102, line: 708, column: 2)
!3439 = !DILocation(line: 711, column: 13, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3386, file: !102, line: 711, column: 6)
!3441 = !DILocation(line: 711, column: 32, scope: !3440)
!3442 = !DILocation(line: 711, column: 6, scope: !3386)
!3443 = !DILocation(line: 712, column: 9, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3440, file: !102, line: 711, column: 38)
!3445 = !DILocation(line: 712, column: 16, scope: !3444)
!3446 = !DILocation(line: 713, column: 2, scope: !3444)
!3447 = !DILocation(line: 714, column: 19, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3440, file: !102, line: 713, column: 9)
!3449 = !DILocation(line: 714, column: 9, scope: !3448)
!3450 = !DILocation(line: 714, column: 16, scope: !3448)
!3451 = !DILocation(line: 706, column: 8, scope: !3386)
!3452 = !DILocation(line: 717, column: 14, scope: !3386)
!3453 = !DILocation(line: 717, column: 9, scope: !3386)
!3454 = !DILocation(line: 717, column: 2, scope: !3386)
!3455 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !3202, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3456)
!3456 = !{!3457}
!3457 = !DILocalVariable(name: "dev", arg: 1, scope: !3455, file: !130, line: 730, type: !127)
!3458 = !DILocation(line: 0, scope: !3455)
!3459 = !DILocation(line: 732, column: 9, scope: !3455)
!3460 = !DILocation(line: 732, column: 2, scope: !3455)
!3461 = distinct !DISubprogram(name: "blink1", scope: !218, file: !218, line: 95, type: !359, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !1933)
!3462 = !DILocation(line: 97, column: 2, scope: !3461)
!3463 = !DILocation(line: 98, column: 1, scope: !3461)
!3464 = distinct !DISubprogram(name: "uart_out", scope: !218, file: !218, line: 100, type: !359, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3465 = !{!3466, !3469}
!3466 = !DILocalVariable(name: "rx_data", scope: !3467, file: !218, line: 103, type: !3468)
!3467 = distinct !DILexicalBlock(scope: !3464, file: !218, line: 102, column: 12)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!3469 = !DILocalVariable(name: "ret", scope: !3470, file: !218, line: 103, type: !117)
!3470 = distinct !DILexicalBlock(scope: !3467, file: !218, line: 103, column: 35)
!3471 = !DILocation(line: 102, column: 2, scope: !3464)
!3472 = !DILocation(line: 103, column: 35, scope: !3470)
!3473 = !DILocation(line: 0, scope: !3470)
!3474 = !DILocation(line: 0, scope: !3467)
!3475 = !DILocation(line: 106, column: 19, scope: !3467)
!3476 = !DILocation(line: 106, column: 33, scope: !3467)
!3477 = !DILocation(line: 105, column: 3, scope: !3467)
!3478 = !DILocation(line: 107, column: 3, scope: !3467)
!3479 = distinct !{!3479, !3471, !3480}
!3480 = !DILocation(line: 108, column: 2, scope: !3464)
!3481 = distinct !DISubprogram(name: "k_queue_get", scope: !3295, file: !3295, line: 649, type: !3482, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3485)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!117, !3484, !3298}
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 32)
!3485 = !{!3486, !3487}
!3486 = !DILocalVariable(name: "queue", arg: 1, scope: !3481, file: !3295, line: 649, type: !3484)
!3487 = !DILocalVariable(name: "timeout", arg: 2, scope: !3481, file: !3295, line: 649, type: !3298)
!3488 = !DILocation(line: 0, scope: !3481)
!3489 = !DILocation(line: 658, column: 2, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3481, file: !3295, line: 658, column: 2)
!3491 = !{i64 2151043570}
!3492 = !DILocation(line: 659, column: 9, scope: !3481)
!3493 = !DILocation(line: 659, column: 2, scope: !3481)
!3494 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !431, file: !431, line: 45, type: !433, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3495)
!3495 = !{!3496}
!3496 = !DILocalVariable(name: "c", arg: 1, scope: !3494, file: !431, line: 45, type: !118)
!3497 = !DILocation(line: 0, scope: !3494)
!3498 = !DILocation(line: 50, column: 2, scope: !3494)
!3499 = distinct !DISubprogram(name: "__printk_hook_install", scope: !431, file: !431, line: 63, type: !3500, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !432}
!3502 = !{!3503}
!3503 = !DILocalVariable(name: "fn", arg: 1, scope: !3499, file: !431, line: 63, type: !432)
!3504 = !DILocation(line: 0, scope: !3499)
!3505 = !DILocation(line: 65, column: 12, scope: !3499)
!3506 = !DILocation(line: 66, column: 1, scope: !3499)
!3507 = distinct !DISubprogram(name: "__printk_get_hook", scope: !431, file: !431, line: 76, type: !3508, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !1933)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{!117}
!3510 = !DILocation(line: 78, column: 9, scope: !3507)
!3511 = !DILocation(line: 78, column: 2, scope: !3507)
!3512 = distinct !DISubprogram(name: "vprintk", scope: !431, file: !431, line: 113, type: !3513, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3522)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{null, !133, !3515}
!3515 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3516, line: 99, baseType: !3517)
!3516 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3516, line: 40, baseType: !3518)
!3518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !431, baseType: !3519)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3520)
!3520 = !{!3521}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3519, file: !431, line: 79, baseType: !117, size: 32)
!3522 = !{!3523, !3524, !3525}
!3523 = !DILocalVariable(name: "fmt", arg: 1, scope: !3512, file: !431, line: 113, type: !133)
!3524 = !DILocalVariable(name: "ap", arg: 2, scope: !3512, file: !431, line: 113, type: !3515)
!3525 = !DILocalVariable(name: "ctx", scope: !3526, file: !431, line: 121, type: !3528)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !431, line: 120, column: 27)
!3527 = distinct !DILexicalBlock(scope: !3512, file: !431, line: 120, column: 6)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !431, line: 81, size: 32, elements: !3529)
!3529 = !{!3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3528, file: !431, line: 85, baseType: !32, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3528, file: !431, line: 86, baseType: !3532, offset: 32)
!3532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2361)
!3533 = !DILocation(line: 0, scope: !3512)
!3534 = !DILocation(line: 148, column: 3, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3527, file: !431, line: 138, column: 9)
!3536 = !DILocation(line: 155, column: 1, scope: !3512)
!3537 = distinct !DISubprogram(name: "char_out", scope: !431, file: !431, line: 107, type: !3538, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!118, !118, !117}
!3540 = !{!3541, !3542}
!3541 = !DILocalVariable(name: "c", arg: 1, scope: !3537, file: !431, line: 107, type: !118)
!3542 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3537, file: !431, line: 107, type: !117)
!3543 = !DILocation(line: 0, scope: !3537)
!3544 = !DILocation(line: 110, column: 9, scope: !3537)
!3545 = !DILocation(line: 110, column: 2, scope: !3537)
!3546 = distinct !DISubprogram(name: "cbvprintf", scope: !3547, file: !3547, line: 739, type: !3548, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3554)
!3547 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!118, !3550, !117, !133, !3515}
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3547, line: 297, baseType: !3551)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 32)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{!118, null}
!3554 = !{!3555, !3556, !3557, !3558}
!3555 = !DILocalVariable(name: "out", arg: 1, scope: !3546, file: !3547, line: 739, type: !3550)
!3556 = !DILocalVariable(name: "ctx", arg: 2, scope: !3546, file: !3547, line: 739, type: !117)
!3557 = !DILocalVariable(name: "format", arg: 3, scope: !3546, file: !3547, line: 739, type: !133)
!3558 = !DILocalVariable(name: "ap", arg: 4, scope: !3546, file: !3547, line: 739, type: !3515)
!3559 = !DILocation(line: 0, scope: !3546)
!3560 = !DILocation(line: 741, column: 9, scope: !3546)
!3561 = !DILocation(line: 741, column: 2, scope: !3546)
!3562 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !431, file: !431, line: 157, type: !3563, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3565)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{null, !1060, !323}
!3565 = !{!3566, !3567, !3568}
!3566 = !DILocalVariable(name: "c", arg: 1, scope: !3562, file: !431, line: 157, type: !1060)
!3567 = !DILocalVariable(name: "n", arg: 2, scope: !3562, file: !431, line: 157, type: !323)
!3568 = !DILocalVariable(name: "i", scope: !3562, file: !431, line: 159, type: !323)
!3569 = !DILocation(line: 0, scope: !3562)
!3570 = !DILocation(line: 164, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !431, line: 164, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3562, file: !431, line: 164, column: 2)
!3573 = !DILocation(line: 164, column: 2, scope: !3572)
!3574 = !DILocation(line: 165, column: 3, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !431, line: 164, column: 26)
!3576 = !DILocation(line: 165, column: 13, scope: !3575)
!3577 = !DILocation(line: 164, column: 22, scope: !3571)
!3578 = distinct !{!3578, !3573, !3579}
!3579 = !DILocation(line: 166, column: 2, scope: !3572)
!3580 = !DILocation(line: 171, column: 1, scope: !3562)
!3581 = distinct !DISubprogram(name: "printk", scope: !431, file: !431, line: 203, type: !3582, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3584)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{null, !133, null}
!3584 = !{!3585, !3586}
!3585 = !DILocalVariable(name: "fmt", arg: 1, scope: !3581, file: !431, line: 203, type: !133)
!3586 = !DILocalVariable(name: "ap", scope: !3581, file: !431, line: 205, type: !3515)
!3587 = !DILocation(line: 0, scope: !3581)
!3588 = !DILocation(line: 205, column: 2, scope: !3581)
!3589 = !DILocation(line: 205, column: 10, scope: !3581)
!3590 = !DILocation(line: 207, column: 2, scope: !3581)
!3591 = !DILocation(line: 209, column: 2, scope: !3581)
!3592 = !DILocation(line: 211, column: 2, scope: !3581)
!3593 = !DILocation(line: 212, column: 1, scope: !3581)
!3594 = distinct !DISubprogram(name: "snprintk", scope: !431, file: !431, line: 239, type: !3595, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3597)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!118, !1060, !323, !133, null}
!3597 = !{!3598, !3599, !3600, !3601, !3602}
!3598 = !DILocalVariable(name: "str", arg: 1, scope: !3594, file: !431, line: 239, type: !1060)
!3599 = !DILocalVariable(name: "size", arg: 2, scope: !3594, file: !431, line: 239, type: !323)
!3600 = !DILocalVariable(name: "fmt", arg: 3, scope: !3594, file: !431, line: 239, type: !133)
!3601 = !DILocalVariable(name: "ap", scope: !3594, file: !431, line: 241, type: !3515)
!3602 = !DILocalVariable(name: "ret", scope: !3594, file: !431, line: 242, type: !118)
!3603 = !DILocation(line: 0, scope: !3594)
!3604 = !DILocation(line: 241, column: 2, scope: !3594)
!3605 = !DILocation(line: 241, column: 10, scope: !3594)
!3606 = !DILocation(line: 244, column: 2, scope: !3594)
!3607 = !DILocation(line: 245, column: 8, scope: !3594)
!3608 = !DILocation(line: 246, column: 2, scope: !3594)
!3609 = !DILocation(line: 249, column: 1, scope: !3594)
!3610 = !DILocation(line: 248, column: 2, scope: !3594)
!3611 = distinct !DISubprogram(name: "vsnprintk", scope: !431, file: !431, line: 251, type: !3612, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3614)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!118, !1060, !323, !133, !3515}
!3614 = !{!3615, !3616, !3617, !3618, !3619}
!3615 = !DILocalVariable(name: "str", arg: 1, scope: !3611, file: !431, line: 251, type: !1060)
!3616 = !DILocalVariable(name: "size", arg: 2, scope: !3611, file: !431, line: 251, type: !323)
!3617 = !DILocalVariable(name: "fmt", arg: 3, scope: !3611, file: !431, line: 251, type: !133)
!3618 = !DILocalVariable(name: "ap", arg: 4, scope: !3611, file: !431, line: 251, type: !3515)
!3619 = !DILocalVariable(name: "ctx", scope: !3611, file: !431, line: 253, type: !3620)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !431, line: 217, size: 96, elements: !3621)
!3621 = !{!3622, !3623, !3624}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3620, file: !431, line: 218, baseType: !1060, size: 32)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3620, file: !431, line: 219, baseType: !118, size: 32, offset: 32)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3620, file: !431, line: 220, baseType: !118, size: 32, offset: 64)
!3625 = !DILocation(line: 0, scope: !3611)
!3626 = !DILocation(line: 253, column: 2, scope: !3611)
!3627 = !DILocation(line: 253, column: 21, scope: !3611)
!3628 = !DILocation(line: 253, column: 27, scope: !3611)
!3629 = !DILocation(line: 255, column: 2, scope: !3611)
!3630 = !DILocation(line: 257, column: 10, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3611, file: !431, line: 257, column: 6)
!3632 = !DILocation(line: 257, column: 22, scope: !3631)
!3633 = !DILocation(line: 257, column: 16, scope: !3631)
!3634 = !DILocation(line: 257, column: 6, scope: !3611)
!3635 = !DILocation(line: 258, column: 3, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3631, file: !431, line: 257, column: 27)
!3637 = !DILocation(line: 258, column: 18, scope: !3636)
!3638 = !DILocation(line: 259, column: 2, scope: !3636)
!3639 = !DILocation(line: 262, column: 1, scope: !3611)
!3640 = !DILocation(line: 261, column: 2, scope: !3611)
!3641 = distinct !DISubprogram(name: "str_out", scope: !431, file: !431, line: 223, type: !3642, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3645)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!118, !118, !3644}
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 32)
!3645 = !{!3646, !3647}
!3646 = !DILocalVariable(name: "c", arg: 1, scope: !3641, file: !431, line: 223, type: !118)
!3647 = !DILocalVariable(name: "ctx", arg: 2, scope: !3641, file: !431, line: 223, type: !3644)
!3648 = !DILocation(line: 0, scope: !3641)
!3649 = !DILocation(line: 225, column: 11, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3641, file: !431, line: 225, column: 6)
!3651 = !DILocation(line: 225, column: 15, scope: !3650)
!3652 = !DILocation(line: 0, scope: !3650)
!3653 = !DILocation(line: 225, column: 23, scope: !3650)
!3654 = !DILocation(line: 225, column: 45, scope: !3650)
!3655 = !DILocation(line: 225, column: 37, scope: !3650)
!3656 = !DILocation(line: 225, column: 6, scope: !3641)
!3657 = !DILocation(line: 226, column: 8, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3650, file: !431, line: 225, column: 50)
!3659 = !DILocation(line: 226, column: 13, scope: !3658)
!3660 = !DILocation(line: 227, column: 3, scope: !3658)
!3661 = !DILocation(line: 230, column: 29, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3641, file: !431, line: 230, column: 6)
!3663 = !DILocation(line: 230, column: 17, scope: !3662)
!3664 = !DILocation(line: 230, column: 6, scope: !3641)
!3665 = !DILocation(line: 231, column: 22, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3662, file: !431, line: 230, column: 34)
!3667 = !DILocation(line: 231, column: 3, scope: !3666)
!3668 = !DILocation(line: 231, column: 26, scope: !3666)
!3669 = !DILocation(line: 232, column: 2, scope: !3666)
!3670 = !DILocation(line: 233, column: 28, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3662, file: !431, line: 232, column: 9)
!3672 = !DILocation(line: 233, column: 22, scope: !3671)
!3673 = !DILocation(line: 233, column: 3, scope: !3671)
!3674 = !DILocation(line: 233, column: 26, scope: !3671)
!3675 = !DILocation(line: 237, column: 1, scope: !3641)
!3676 = distinct !DISubprogram(name: "z_thread_entry", scope: !3677, file: !3677, line: 30, type: !3678, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !3680)
!3677 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !346, !117, !117, !117}
!3680 = !{!3681, !3682, !3683, !3684}
!3681 = !DILocalVariable(name: "entry", arg: 1, scope: !3676, file: !3677, line: 30, type: !346)
!3682 = !DILocalVariable(name: "p1", arg: 2, scope: !3676, file: !3677, line: 31, type: !117)
!3683 = !DILocalVariable(name: "p2", arg: 3, scope: !3676, file: !3677, line: 31, type: !117)
!3684 = !DILocalVariable(name: "p3", arg: 4, scope: !3676, file: !3677, line: 31, type: !117)
!3685 = !DILocation(line: 0, scope: !3676)
!3686 = !DILocation(line: 36, column: 2, scope: !3676)
!3687 = !DILocation(line: 38, column: 17, scope: !3676)
!3688 = !DILocation(line: 38, column: 2, scope: !3676)
!3689 = !DILocation(line: 45, column: 2, scope: !3676)
!3690 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !3691, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !1933)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!3693}
!3693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !3694)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 32)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !3696)
!3696 = !{!3697, !3755, !3767, !3768, !3769, !3770, !3785}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3695, file: !225, line: 247, baseType: !3698, size: 384)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !3699)
!3699 = !{!3700, !3724, !3731, !3732, !3733, !3742, !3743, !3744}
!3700 = !DIDerivedType(tag: DW_TAG_member, scope: !3698, file: !225, line: 60, baseType: !3701, size: 64)
!3701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3698, file: !225, line: 60, size: 64, elements: !3702)
!3702 = !{!3703, !3718}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3701, file: !225, line: 61, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3705)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3706)
!3706 = !{!3707, !3713}
!3707 = !DIDerivedType(tag: DW_TAG_member, scope: !3705, file: !235, line: 38, baseType: !3708, size: 32)
!3708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3705, file: !235, line: 38, size: 32, elements: !3709)
!3709 = !{!3710, !3712}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3708, file: !235, line: 39, baseType: !3711, size: 32)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3708, file: !235, line: 40, baseType: !3711, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, scope: !3705, file: !235, line: 42, baseType: !3714, size: 32, offset: 32)
!3714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3705, file: !235, line: 42, size: 32, elements: !3715)
!3715 = !{!3716, !3717}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3714, file: !235, line: 43, baseType: !3711, size: 32)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3714, file: !235, line: 44, baseType: !3711, size: 32)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3701, file: !225, line: 62, baseType: !3719, size: 64)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !3720)
!3720 = !{!3721}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3719, file: !251, line: 50, baseType: !3722, size: 64)
!3722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, size: 64, elements: !256)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 32)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3698, file: !225, line: 68, baseType: !3725, size: 32, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !3727)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !3728)
!3728 = !{!3729}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3727, file: !261, line: 232, baseType: !3730, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3705)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3698, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3698, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!3733 = !DIDerivedType(tag: DW_TAG_member, scope: !3698, file: !225, line: 90, baseType: !3734, size: 16, offset: 112)
!3734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3698, file: !225, line: 90, size: 16, elements: !3735)
!3735 = !{!3736, !3741}
!3736 = !DIDerivedType(tag: DW_TAG_member, scope: !3734, file: !225, line: 91, baseType: !3737, size: 16)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3734, file: !225, line: 91, size: 16, elements: !3738)
!3738 = !{!3739, !3740}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3737, file: !225, line: 96, baseType: !275, size: 8)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3737, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3734, file: !225, line: 100, baseType: !279, size: 16)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3698, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3698, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3698, file: !225, line: 131, baseType: !3745, size: 192, offset: 192)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !3746)
!3746 = !{!3747, !3748, !3754}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3745, file: !261, line: 245, baseType: !3704, size: 64)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3745, file: !261, line: 246, baseType: !3749, size: 32, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !3750)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 32)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !3753}
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3745, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3695, file: !225, line: 250, baseType: !3756, size: 288, offset: 384)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !3757)
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3756, file: !296, line: 26, baseType: !156, size: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3756, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3756, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3756, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3756, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3756, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3756, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3756, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3756, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3695, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3695, file: !225, line: 256, baseType: !3726, size: 64, offset: 704)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3695, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3695, file: !225, line: 325, baseType: !3771, size: 32, offset: 800)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 32)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !3773)
!3773 = !{!3774, !3780, !3781}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3772, file: !220, line: 5074, baseType: !3775, size: 96)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !3776)
!3776 = !{!3777, !3778, !3779}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3775, file: !316, line: 57, baseType: !319, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3775, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3775, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3772, file: !220, line: 5075, baseType: !3726, size: 64, offset: 96)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3772, file: !220, line: 5076, baseType: !3782, size: 32, offset: 160)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !3783)
!3783 = !{!3784}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3782, file: !328, line: 52, baseType: !22, size: 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3695, file: !225, line: 343, baseType: !3786, size: 64, offset: 832)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !3787)
!3787 = !{!3788, !3789}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3786, file: !296, line: 63, baseType: !156, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3786, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!3790 = !DILocation(line: 535, column: 9, scope: !3690)
!3791 = !DILocation(line: 535, column: 2, scope: !3690)
!3792 = distinct !DISubprogram(name: "k_thread_abort", scope: !3295, file: !3295, line: 188, type: !3793, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !3693}
!3795 = !{!3796}
!3796 = !DILocalVariable(name: "thread", arg: 1, scope: !3792, file: !3295, line: 188, type: !3693)
!3797 = !DILocation(line: 0, scope: !3792)
!3798 = !DILocation(line: 197, column: 2, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !3295, line: 197, column: 2)
!3800 = !{i64 2151040427}
!3801 = !DILocation(line: 198, column: 2, scope: !3792)
!3802 = !DILocation(line: 199, column: 1, scope: !3792)
!3803 = distinct !DISubprogram(name: "z_current_get", scope: !3295, file: !3295, line: 173, type: !3691, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2329, retainedNodes: !1933)
!3804 = !DILocation(line: 180, column: 2, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3803, file: !3295, line: 180, column: 2)
!3806 = !{i64 2151040359}
!3807 = !DILocation(line: 181, column: 9, scope: !3803)
!3808 = !DILocation(line: 181, column: 2, scope: !3803)
!3809 = distinct !DISubprogram(name: "sys_heap_free", scope: !3810, file: !3810, line: 163, type: !3811, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3819)
!3810 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3811 = !DISubroutineType(types: !3812)
!3812 = !{null, !3813, !117}
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 32)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !3815)
!3815 = !{!3816, !3817, !3818}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3814, file: !316, line: 57, baseType: !2348, size: 32)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3814, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3814, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!3819 = !{!3820, !3821, !3822, !3823}
!3820 = !DILocalVariable(name: "heap", arg: 1, scope: !3809, file: !3810, line: 163, type: !3813)
!3821 = !DILocalVariable(name: "mem", arg: 2, scope: !3809, file: !3810, line: 163, type: !117)
!3822 = !DILocalVariable(name: "h", scope: !3809, file: !3810, line: 168, type: !2348)
!3823 = !DILocalVariable(name: "c", scope: !3809, file: !3810, line: 169, type: !2353)
!3824 = !DILocation(line: 0, scope: !3809)
!3825 = !DILocation(line: 165, column: 10, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3809, file: !3810, line: 165, column: 6)
!3827 = !DILocation(line: 165, column: 6, scope: !3809)
!3828 = !DILocation(line: 168, column: 27, scope: !3809)
!3829 = !DILocation(line: 169, column: 16, scope: !3809)
!3830 = !{i32 0, i32 536870912}
!3831 = !DILocation(line: 175, column: 2, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3810, line: 175, column: 2)
!3833 = distinct !DILexicalBlock(scope: !3809, file: !3810, line: 175, column: 2)
!3834 = !DILocation(line: 175, column: 2, scope: !3833)
!3835 = !DILocation(line: 175, column: 2, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3832, file: !3810, line: 175, column: 2)
!3837 = !DILocation(line: 183, column: 2, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3810, line: 183, column: 2)
!3839 = distinct !DILexicalBlock(scope: !3809, file: !3810, line: 183, column: 2)
!3840 = !DILocation(line: 183, column: 2, scope: !3839)
!3841 = !DILocation(line: 183, column: 2, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3810, line: 183, column: 2)
!3843 = !DILocation(line: 187, column: 2, scope: !3809)
!3844 = !DILocation(line: 197, column: 2, scope: !3809)
!3845 = !DILocation(line: 198, column: 1, scope: !3809)
!3846 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3810, file: !3810, line: 157, type: !3847, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!2353, !2348, !117}
!3849 = !{!3850, !3851, !3852, !3853}
!3850 = !DILocalVariable(name: "h", arg: 1, scope: !3846, file: !3810, line: 157, type: !2348)
!3851 = !DILocalVariable(name: "p", arg: 2, scope: !3846, file: !3810, line: 157, type: !117)
!3852 = !DILocalVariable(name: "mem", scope: !3846, file: !3810, line: 159, type: !940)
!3853 = !DILocalVariable(name: "base", scope: !3846, file: !3810, line: 159, type: !940)
!3854 = !DILocation(line: 0, scope: !3846)
!3855 = !DILocation(line: 159, column: 39, scope: !3846)
!3856 = !DILocation(line: 160, column: 14, scope: !3846)
!3857 = !DILocation(line: 160, column: 38, scope: !3846)
!3858 = !DILocation(line: 160, column: 46, scope: !3846)
!3859 = !DILocation(line: 160, column: 2, scope: !3846)
!3860 = distinct !DISubprogram(name: "chunk_used", scope: !2335, file: !2335, line: 137, type: !3861, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3863)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!146, !2348, !2353}
!3863 = !{!3864, !3865}
!3864 = !DILocalVariable(name: "h", arg: 1, scope: !3860, file: !2335, line: 137, type: !2348)
!3865 = !DILocalVariable(name: "c", arg: 2, scope: !3860, file: !2335, line: 137, type: !2353)
!3866 = !DILocation(line: 0, scope: !3860)
!3867 = !DILocation(line: 139, column: 9, scope: !3860)
!3868 = !DILocation(line: 139, column: 42, scope: !3860)
!3869 = !DILocation(line: 139, column: 2, scope: !3860)
!3870 = distinct !DISubprogram(name: "right_chunk", scope: !2335, file: !2335, line: 204, type: !3871, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!2353, !2348, !2353}
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "h", arg: 1, scope: !3870, file: !2335, line: 204, type: !2348)
!3875 = !DILocalVariable(name: "c", arg: 2, scope: !3870, file: !2335, line: 204, type: !2353)
!3876 = !DILocation(line: 0, scope: !3870)
!3877 = !DILocation(line: 206, column: 13, scope: !3870)
!3878 = !DILocation(line: 206, column: 11, scope: !3870)
!3879 = !DILocation(line: 206, column: 2, scope: !3870)
!3880 = distinct !DISubprogram(name: "left_chunk", scope: !2335, file: !2335, line: 199, type: !3871, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3881)
!3881 = !{!3882, !3883}
!3882 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !2335, line: 199, type: !2348)
!3883 = !DILocalVariable(name: "c", arg: 2, scope: !3880, file: !2335, line: 199, type: !2353)
!3884 = !DILocation(line: 0, scope: !3880)
!3885 = !DILocation(line: 201, column: 13, scope: !3880)
!3886 = !DILocation(line: 201, column: 11, scope: !3880)
!3887 = !DILocation(line: 201, column: 2, scope: !3880)
!3888 = distinct !DISubprogram(name: "set_chunk_used", scope: !2335, file: !2335, line: 147, type: !3889, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3891)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{null, !2348, !2353, !146}
!3891 = !{!3892, !3893, !3894, !3895, !3896}
!3892 = !DILocalVariable(name: "h", arg: 1, scope: !3888, file: !2335, line: 147, type: !2348)
!3893 = !DILocalVariable(name: "c", arg: 2, scope: !3888, file: !2335, line: 147, type: !2353)
!3894 = !DILocalVariable(name: "used", arg: 3, scope: !3888, file: !2335, line: 147, type: !146)
!3895 = !DILocalVariable(name: "buf", scope: !3888, file: !2335, line: 149, type: !2342)
!3896 = !DILocalVariable(name: "cmem", scope: !3888, file: !2335, line: 150, type: !117)
!3897 = !DILocation(line: 0, scope: !3888)
!3898 = !DILocation(line: 149, column: 22, scope: !3888)
!3899 = !DILocation(line: 0, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !2335, line: 159, column: 7)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !2335, line: 158, column: 9)
!3902 = distinct !DILexicalBlock(scope: !3888, file: !2335, line: 152, column: 6)
!3903 = !DILocation(line: 159, column: 7, scope: !3901)
!3904 = !DILocation(line: 165, column: 1, scope: !3888)
!3905 = distinct !DISubprogram(name: "free_chunk", scope: !3810, file: !3810, line: 133, type: !3906, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3908)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{null, !2348, !2353}
!3908 = !{!3909, !3910}
!3909 = !DILocalVariable(name: "h", arg: 1, scope: !3905, file: !3810, line: 133, type: !2348)
!3910 = !DILocalVariable(name: "c", arg: 2, scope: !3905, file: !3810, line: 133, type: !2353)
!3911 = !DILocation(line: 0, scope: !3905)
!3912 = !DILocation(line: 136, column: 21, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3905, file: !3810, line: 136, column: 6)
!3914 = !DILocation(line: 136, column: 7, scope: !3913)
!3915 = !DILocation(line: 136, column: 6, scope: !3905)
!3916 = !DILocation(line: 137, column: 3, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !3810, line: 136, column: 41)
!3918 = !DILocation(line: 138, column: 22, scope: !3917)
!3919 = !DILocation(line: 138, column: 3, scope: !3917)
!3920 = !DILocation(line: 139, column: 2, scope: !3917)
!3921 = !DILocation(line: 142, column: 21, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3905, file: !3810, line: 142, column: 6)
!3923 = !DILocation(line: 142, column: 7, scope: !3922)
!3924 = !DILocation(line: 142, column: 6, scope: !3905)
!3925 = !DILocation(line: 143, column: 3, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !3810, line: 142, column: 40)
!3927 = !DILocation(line: 144, column: 19, scope: !3926)
!3928 = !DILocation(line: 144, column: 3, scope: !3926)
!3929 = !DILocation(line: 145, column: 7, scope: !3926)
!3930 = !DILocation(line: 146, column: 2, scope: !3926)
!3931 = !DILocation(line: 148, column: 2, scope: !3905)
!3932 = !DILocation(line: 149, column: 1, scope: !3905)
!3933 = distinct !DISubprogram(name: "free_list_remove", scope: !3810, file: !3810, line: 60, type: !3906, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3934)
!3934 = !{!3935, !3936, !3937}
!3935 = !DILocalVariable(name: "h", arg: 1, scope: !3933, file: !3810, line: 60, type: !2348)
!3936 = !DILocalVariable(name: "c", arg: 2, scope: !3933, file: !3810, line: 60, type: !2353)
!3937 = !DILocalVariable(name: "bidx", scope: !3938, file: !3810, line: 63, type: !118)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !3810, line: 62, column: 31)
!3939 = distinct !DILexicalBlock(scope: !3933, file: !3810, line: 62, column: 6)
!3940 = !DILocation(line: 0, scope: !3933)
!3941 = !DILocation(line: 63, column: 28, scope: !3938)
!3942 = !{i32 0, i32 32768}
!3943 = !DILocation(line: 63, column: 14, scope: !3938)
!3944 = !DILocation(line: 0, scope: !3938)
!3945 = !DILocation(line: 64, column: 3, scope: !3938)
!3946 = !DILocation(line: 66, column: 1, scope: !3933)
!3947 = distinct !DISubprogram(name: "merge_chunks", scope: !3810, file: !3810, line: 125, type: !3948, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3950)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{null, !2348, !2353, !2353}
!3950 = !{!3951, !3952, !3953, !3954}
!3951 = !DILocalVariable(name: "h", arg: 1, scope: !3947, file: !3810, line: 125, type: !2348)
!3952 = !DILocalVariable(name: "lc", arg: 2, scope: !3947, file: !3810, line: 125, type: !2353)
!3953 = !DILocalVariable(name: "rc", arg: 3, scope: !3947, file: !3810, line: 125, type: !2353)
!3954 = !DILocalVariable(name: "newsz", scope: !3947, file: !3810, line: 127, type: !3955)
!3955 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2335, line: 62, baseType: !156)
!3956 = !DILocation(line: 0, scope: !3947)
!3957 = !DILocation(line: 127, column: 20, scope: !3947)
!3958 = !DILocation(line: 127, column: 40, scope: !3947)
!3959 = !DILocation(line: 127, column: 38, scope: !3947)
!3960 = !DILocation(line: 129, column: 2, scope: !3947)
!3961 = !DILocation(line: 130, column: 25, scope: !3947)
!3962 = !DILocation(line: 130, column: 2, scope: !3947)
!3963 = !DILocation(line: 131, column: 1, scope: !3947)
!3964 = distinct !DISubprogram(name: "free_list_add", scope: !3810, file: !3810, line: 98, type: !3906, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3965)
!3965 = !{!3966, !3967, !3968}
!3966 = !DILocalVariable(name: "h", arg: 1, scope: !3964, file: !3810, line: 98, type: !2348)
!3967 = !DILocalVariable(name: "c", arg: 2, scope: !3964, file: !3810, line: 98, type: !2353)
!3968 = !DILocalVariable(name: "bidx", scope: !3969, file: !3810, line: 101, type: !118)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3810, line: 100, column: 31)
!3970 = distinct !DILexicalBlock(scope: !3964, file: !3810, line: 100, column: 6)
!3971 = !DILocation(line: 0, scope: !3964)
!3972 = !DILocation(line: 101, column: 28, scope: !3969)
!3973 = !DILocation(line: 101, column: 14, scope: !3969)
!3974 = !DILocation(line: 0, scope: !3969)
!3975 = !DILocation(line: 102, column: 3, scope: !3969)
!3976 = !DILocation(line: 104, column: 1, scope: !3964)
!3977 = distinct !DISubprogram(name: "chunk_size", scope: !2335, file: !2335, line: 142, type: !3978, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!3955, !2348, !2353}
!3980 = !{!3981, !3982}
!3981 = !DILocalVariable(name: "h", arg: 1, scope: !3977, file: !2335, line: 142, type: !2348)
!3982 = !DILocalVariable(name: "c", arg: 2, scope: !3977, file: !2335, line: 142, type: !2353)
!3983 = !DILocation(line: 0, scope: !3977)
!3984 = !DILocation(line: 144, column: 9, scope: !3977)
!3985 = !DILocation(line: 144, column: 42, scope: !3977)
!3986 = !DILocation(line: 144, column: 2, scope: !3977)
!3987 = distinct !DISubprogram(name: "bucket_idx", scope: !2335, file: !2335, line: 250, type: !3988, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3990)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!118, !2348, !3955}
!3990 = !{!3991, !3992, !3993}
!3991 = !DILocalVariable(name: "h", arg: 1, scope: !3987, file: !2335, line: 250, type: !2348)
!3992 = !DILocalVariable(name: "sz", arg: 2, scope: !3987, file: !2335, line: 250, type: !3955)
!3993 = !DILocalVariable(name: "usable_sz", scope: !3987, file: !2335, line: 252, type: !32)
!3994 = !DILocation(line: 0, scope: !3987)
!3995 = !DILocation(line: 252, column: 32, scope: !3987)
!3996 = !DILocation(line: 252, column: 30, scope: !3987)
!3997 = !DILocation(line: 252, column: 50, scope: !3987)
!3998 = !DILocation(line: 253, column: 14, scope: !3987)
!3999 = !{i32 0, i32 33}
!4000 = !DILocation(line: 253, column: 12, scope: !3987)
!4001 = !DILocation(line: 253, column: 2, scope: !3987)
!4002 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3810, file: !3810, line: 68, type: !4003, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{null, !2348, !2353, !118}
!4005 = !{!4006, !4007, !4008, !4009, !4011, !4014}
!4006 = !DILocalVariable(name: "h", arg: 1, scope: !4002, file: !3810, line: 68, type: !2348)
!4007 = !DILocalVariable(name: "c", arg: 2, scope: !4002, file: !3810, line: 68, type: !2353)
!4008 = !DILocalVariable(name: "bidx", arg: 3, scope: !4002, file: !3810, line: 68, type: !118)
!4009 = !DILocalVariable(name: "b", scope: !4002, file: !3810, line: 70, type: !4010)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!4011 = !DILocalVariable(name: "second", scope: !4012, file: !3810, line: 84, type: !2353)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3810, line: 80, column: 9)
!4013 = distinct !DILexicalBlock(scope: !4002, file: !3810, line: 72, column: 6)
!4014 = !DILocalVariable(name: "first", scope: !4012, file: !3810, line: 85, type: !2353)
!4015 = !DILocation(line: 0, scope: !4002)
!4016 = !DILocation(line: 72, column: 9, scope: !4013)
!4017 = !DILocation(line: 72, column: 14, scope: !4013)
!4018 = !DILocation(line: 72, column: 6, scope: !4002)
!4019 = !DILocation(line: 76, column: 23, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4013, file: !3810, line: 72, column: 21)
!4021 = !DILocation(line: 76, column: 6, scope: !4020)
!4022 = !DILocation(line: 76, column: 20, scope: !4020)
!4023 = !DILocation(line: 77, column: 11, scope: !4020)
!4024 = !DILocation(line: 78, column: 3, scope: !4020)
!4025 = !DILocation(line: 79, column: 3, scope: !4020)
!4026 = !DILocation(line: 80, column: 2, scope: !4020)
!4027 = !DILocation(line: 0, scope: !4012)
!4028 = !DILocation(line: 85, column: 21, scope: !4012)
!4029 = !{i32 0, i32 65536}
!4030 = !DILocation(line: 87, column: 3, scope: !4012)
!4031 = !DILocation(line: 88, column: 3, scope: !4012)
!4032 = !DILocation(line: 89, column: 3, scope: !4012)
!4033 = !DILocation(line: 90, column: 3, scope: !4012)
!4034 = !DILocation(line: 96, column: 1, scope: !4002)
!4035 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2335, file: !2335, line: 187, type: !3948, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4036)
!4036 = !{!4037, !4038, !4039}
!4037 = !DILocalVariable(name: "h", arg: 1, scope: !4035, file: !2335, line: 187, type: !2348)
!4038 = !DILocalVariable(name: "c", arg: 2, scope: !4035, file: !2335, line: 187, type: !2353)
!4039 = !DILocalVariable(name: "prev", arg: 3, scope: !4035, file: !2335, line: 188, type: !2353)
!4040 = !DILocation(line: 0, scope: !4035)
!4041 = !DILocation(line: 190, column: 2, scope: !4035)
!4042 = !DILocation(line: 191, column: 1, scope: !4035)
!4043 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2335, file: !2335, line: 193, type: !3948, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4044)
!4044 = !{!4045, !4046, !4047}
!4045 = !DILocalVariable(name: "h", arg: 1, scope: !4043, file: !2335, line: 193, type: !2348)
!4046 = !DILocalVariable(name: "c", arg: 2, scope: !4043, file: !2335, line: 193, type: !2353)
!4047 = !DILocalVariable(name: "next", arg: 3, scope: !4043, file: !2335, line: 194, type: !2353)
!4048 = !DILocation(line: 0, scope: !4043)
!4049 = !DILocation(line: 196, column: 2, scope: !4043)
!4050 = !DILocation(line: 197, column: 1, scope: !4043)
!4051 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2335, file: !2335, line: 177, type: !3871, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4052)
!4052 = !{!4053, !4054}
!4053 = !DILocalVariable(name: "h", arg: 1, scope: !4051, file: !2335, line: 177, type: !2348)
!4054 = !DILocalVariable(name: "c", arg: 2, scope: !4051, file: !2335, line: 177, type: !2353)
!4055 = !DILocation(line: 0, scope: !4051)
!4056 = !DILocation(line: 179, column: 9, scope: !4051)
!4057 = !DILocation(line: 179, column: 2, scope: !4051)
!4058 = distinct !DISubprogram(name: "chunk_field", scope: !2335, file: !2335, line: 107, type: !4059, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4061)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!2353, !2348, !2353, !2334}
!4061 = !{!4062, !4063, !4064, !4065, !4066}
!4062 = !DILocalVariable(name: "h", arg: 1, scope: !4058, file: !2335, line: 107, type: !2348)
!4063 = !DILocalVariable(name: "c", arg: 2, scope: !4058, file: !2335, line: 107, type: !2353)
!4064 = !DILocalVariable(name: "f", arg: 3, scope: !4058, file: !2335, line: 108, type: !2334)
!4065 = !DILocalVariable(name: "buf", scope: !4058, file: !2335, line: 110, type: !2342)
!4066 = !DILocalVariable(name: "cmem", scope: !4058, file: !2335, line: 111, type: !117)
!4067 = !DILocation(line: 0, scope: !4058)
!4068 = !DILocation(line: 110, column: 22, scope: !4058)
!4069 = !DILocation(line: 111, column: 15, scope: !4058)
!4070 = !DILocation(line: 116, column: 11, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !2335, line: 115, column: 9)
!4072 = distinct !DILexicalBlock(scope: !4058, file: !2335, line: 113, column: 6)
!4073 = !DILocation(line: 116, column: 10, scope: !4071)
!4074 = !DILocation(line: 118, column: 1, scope: !4058)
!4075 = distinct !DISubprogram(name: "chunk_buf", scope: !2335, file: !2335, line: 101, type: !4076, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!2342, !2348}
!4078 = !{!4079}
!4079 = !DILocalVariable(name: "h", arg: 1, scope: !4075, file: !2335, line: 101, type: !2348)
!4080 = !DILocation(line: 0, scope: !4075)
!4081 = !DILocation(line: 104, column: 9, scope: !4075)
!4082 = !DILocation(line: 104, column: 2, scope: !4075)
!4083 = distinct !DISubprogram(name: "chunk_set", scope: !2335, file: !2335, line: 120, type: !4084, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4086)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{null, !2348, !2353, !2334, !2353}
!4086 = !{!4087, !4088, !4089, !4090, !4091, !4092}
!4087 = !DILocalVariable(name: "h", arg: 1, scope: !4083, file: !2335, line: 120, type: !2348)
!4088 = !DILocalVariable(name: "c", arg: 2, scope: !4083, file: !2335, line: 120, type: !2353)
!4089 = !DILocalVariable(name: "f", arg: 3, scope: !4083, file: !2335, line: 121, type: !2334)
!4090 = !DILocalVariable(name: "val", arg: 4, scope: !4083, file: !2335, line: 121, type: !2353)
!4091 = !DILocalVariable(name: "buf", scope: !4083, file: !2335, line: 125, type: !2342)
!4092 = !DILocalVariable(name: "cmem", scope: !4083, file: !2335, line: 126, type: !117)
!4093 = !DILocation(line: 0, scope: !4083)
!4094 = !DILocation(line: 125, column: 22, scope: !4083)
!4095 = !DILocation(line: 126, column: 15, scope: !4083)
!4096 = !DILocation(line: 133, column: 27, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !2335, line: 131, column: 9)
!4098 = distinct !DILexicalBlock(scope: !4083, file: !2335, line: 128, column: 6)
!4099 = !DILocation(line: 133, column: 4, scope: !4097)
!4100 = !DILocation(line: 133, column: 3, scope: !4097)
!4101 = !DILocation(line: 133, column: 25, scope: !4097)
!4102 = !DILocation(line: 135, column: 1, scope: !4083)
!4103 = distinct !DISubprogram(name: "min_chunk_size", scope: !2335, file: !2335, line: 240, type: !4104, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4106)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!3955, !2348}
!4106 = !{!4107}
!4107 = !DILocalVariable(name: "h", arg: 1, scope: !4103, file: !2335, line: 240, type: !2348)
!4108 = !DILocation(line: 0, scope: !4103)
!4109 = !DILocation(line: 242, column: 9, scope: !4103)
!4110 = !DILocation(line: 242, column: 2, scope: !4103)
!4111 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2335, file: !2335, line: 235, type: !4112, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4114)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!3955, !2348, !323}
!4114 = !{!4115, !4116}
!4115 = !DILocalVariable(name: "h", arg: 1, scope: !4111, file: !2335, line: 235, type: !2348)
!4116 = !DILocalVariable(name: "bytes", arg: 2, scope: !4111, file: !2335, line: 235, type: !323)
!4117 = !DILocation(line: 0, scope: !4111)
!4118 = !DILocation(line: 237, column: 39, scope: !4111)
!4119 = !DILocation(line: 237, column: 9, scope: !4111)
!4120 = !DILocation(line: 237, column: 2, scope: !4111)
!4121 = distinct !DISubprogram(name: "chunksz", scope: !2335, file: !2335, line: 230, type: !4122, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4124)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!3955, !323}
!4124 = !{!4125}
!4125 = !DILocalVariable(name: "bytes", arg: 1, scope: !4121, file: !2335, line: 230, type: !323)
!4126 = !DILocation(line: 0, scope: !4121)
!4127 = !DILocation(line: 232, column: 29, scope: !4121)
!4128 = !DILocation(line: 232, column: 35, scope: !4121)
!4129 = !DILocation(line: 232, column: 2, scope: !4121)
!4130 = distinct !DISubprogram(name: "set_chunk_size", scope: !2335, file: !2335, line: 172, type: !4131, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4133)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{null, !2348, !2353, !3955}
!4133 = !{!4134, !4135, !4136}
!4134 = !DILocalVariable(name: "h", arg: 1, scope: !4130, file: !2335, line: 172, type: !2348)
!4135 = !DILocalVariable(name: "c", arg: 2, scope: !4130, file: !2335, line: 172, type: !2353)
!4136 = !DILocalVariable(name: "size", arg: 3, scope: !4130, file: !2335, line: 172, type: !3955)
!4137 = !DILocation(line: 0, scope: !4130)
!4138 = !DILocation(line: 174, column: 38, scope: !4130)
!4139 = !DILocation(line: 174, column: 2, scope: !4130)
!4140 = !DILocation(line: 175, column: 1, scope: !4130)
!4141 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2335, file: !2335, line: 209, type: !4131, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4142)
!4142 = !{!4143, !4144, !4145}
!4143 = !DILocalVariable(name: "h", arg: 1, scope: !4141, file: !2335, line: 209, type: !2348)
!4144 = !DILocalVariable(name: "c", arg: 2, scope: !4141, file: !2335, line: 209, type: !2353)
!4145 = !DILocalVariable(name: "size", arg: 3, scope: !4141, file: !2335, line: 210, type: !3955)
!4146 = !DILocation(line: 0, scope: !4141)
!4147 = !DILocation(line: 212, column: 2, scope: !4141)
!4148 = !DILocation(line: 213, column: 1, scope: !4141)
!4149 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3810, file: !3810, line: 34, type: !4003, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4150)
!4150 = !{!4151, !4152, !4153, !4154, !4155, !4158}
!4151 = !DILocalVariable(name: "h", arg: 1, scope: !4149, file: !3810, line: 34, type: !2348)
!4152 = !DILocalVariable(name: "c", arg: 2, scope: !4149, file: !3810, line: 34, type: !2353)
!4153 = !DILocalVariable(name: "bidx", arg: 3, scope: !4149, file: !3810, line: 34, type: !118)
!4154 = !DILocalVariable(name: "b", scope: !4149, file: !3810, line: 36, type: !4010)
!4155 = !DILocalVariable(name: "first", scope: !4156, file: !3810, line: 47, type: !2353)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3810, line: 46, column: 9)
!4157 = distinct !DILexicalBlock(scope: !4149, file: !3810, line: 42, column: 6)
!4158 = !DILocalVariable(name: "second", scope: !4156, file: !3810, line: 48, type: !2353)
!4159 = !DILocation(line: 0, scope: !4149)
!4160 = !DILocation(line: 36, column: 29, scope: !4149)
!4161 = !DILocation(line: 42, column: 6, scope: !4157)
!4162 = !DILocation(line: 42, column: 28, scope: !4157)
!4163 = !DILocation(line: 42, column: 6, scope: !4149)
!4164 = !DILocation(line: 44, column: 24, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4157, file: !3810, line: 42, column: 34)
!4166 = !DILocation(line: 44, column: 23, scope: !4165)
!4167 = !DILocation(line: 44, column: 6, scope: !4165)
!4168 = !DILocation(line: 44, column: 20, scope: !4165)
!4169 = !DILocation(line: 45, column: 6, scope: !4165)
!4170 = !DILocation(line: 45, column: 11, scope: !4165)
!4171 = !DILocation(line: 46, column: 2, scope: !4165)
!4172 = !DILocation(line: 47, column: 21, scope: !4156)
!4173 = !DILocation(line: 0, scope: !4156)
!4174 = !DILocation(line: 50, column: 6, scope: !4156)
!4175 = !DILocation(line: 50, column: 11, scope: !4156)
!4176 = !DILocation(line: 51, column: 3, scope: !4156)
!4177 = !DILocation(line: 52, column: 3, scope: !4156)
!4178 = !DILocation(line: 58, column: 1, scope: !4149)
!4179 = distinct !DISubprogram(name: "next_free_chunk", scope: !2335, file: !2335, line: 182, type: !3871, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4180)
!4180 = !{!4181, !4182}
!4181 = !DILocalVariable(name: "h", arg: 1, scope: !4179, file: !2335, line: 182, type: !2348)
!4182 = !DILocalVariable(name: "c", arg: 2, scope: !4179, file: !2335, line: 182, type: !2353)
!4183 = !DILocation(line: 0, scope: !4179)
!4184 = !DILocation(line: 184, column: 9, scope: !4179)
!4185 = !DILocation(line: 184, column: 2, scope: !4179)
!4186 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3810, file: !3810, line: 200, type: !4187, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4189)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!323, !3813, !117}
!4189 = !{!4190, !4191, !4192, !4193, !4194, !4195, !4196}
!4190 = !DILocalVariable(name: "heap", arg: 1, scope: !4186, file: !3810, line: 200, type: !3813)
!4191 = !DILocalVariable(name: "mem", arg: 2, scope: !4186, file: !3810, line: 200, type: !117)
!4192 = !DILocalVariable(name: "h", scope: !4186, file: !3810, line: 202, type: !2348)
!4193 = !DILocalVariable(name: "c", scope: !4186, file: !3810, line: 203, type: !2353)
!4194 = !DILocalVariable(name: "addr", scope: !4186, file: !3810, line: 204, type: !323)
!4195 = !DILocalVariable(name: "chunk_base", scope: !4186, file: !3810, line: 205, type: !323)
!4196 = !DILocalVariable(name: "chunk_sz", scope: !4186, file: !3810, line: 206, type: !323)
!4197 = !DILocation(line: 0, scope: !4186)
!4198 = !DILocation(line: 202, column: 27, scope: !4186)
!4199 = !DILocation(line: 203, column: 16, scope: !4186)
!4200 = !DILocation(line: 204, column: 16, scope: !4186)
!4201 = !DILocation(line: 205, column: 31, scope: !4186)
!4202 = !DILocation(line: 205, column: 22, scope: !4186)
!4203 = !DILocation(line: 206, column: 20, scope: !4186)
!4204 = !DILocation(line: 206, column: 37, scope: !4186)
!4205 = !DILocation(line: 208, column: 26, scope: !4186)
!4206 = !DILocation(line: 208, column: 18, scope: !4186)
!4207 = !DILocation(line: 208, column: 2, scope: !4186)
!4208 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3810, file: !3810, line: 263, type: !4209, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!117, !3813, !323}
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217}
!4212 = !DILocalVariable(name: "heap", arg: 1, scope: !4208, file: !3810, line: 263, type: !3813)
!4213 = !DILocalVariable(name: "bytes", arg: 2, scope: !4208, file: !3810, line: 263, type: !323)
!4214 = !DILocalVariable(name: "h", scope: !4208, file: !3810, line: 265, type: !2348)
!4215 = !DILocalVariable(name: "mem", scope: !4208, file: !3810, line: 266, type: !117)
!4216 = !DILocalVariable(name: "chunk_sz", scope: !4208, file: !3810, line: 272, type: !3955)
!4217 = !DILocalVariable(name: "c", scope: !4208, file: !3810, line: 273, type: !2353)
!4218 = !DILocation(line: 0, scope: !4208)
!4219 = !DILocation(line: 265, column: 27, scope: !4208)
!4220 = !DILocation(line: 268, column: 12, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4208, file: !3810, line: 268, column: 6)
!4222 = !DILocation(line: 268, column: 18, scope: !4221)
!4223 = !DILocation(line: 268, column: 21, scope: !4221)
!4224 = !DILocation(line: 268, column: 6, scope: !4208)
!4225 = !DILocation(line: 272, column: 23, scope: !4208)
!4226 = !DILocation(line: 273, column: 16, scope: !4208)
!4227 = !DILocation(line: 274, column: 8, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4208, file: !3810, line: 274, column: 6)
!4229 = !DILocation(line: 274, column: 6, scope: !4208)
!4230 = !DILocation(line: 279, column: 6, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4208, file: !3810, line: 279, column: 6)
!4232 = !DILocation(line: 279, column: 23, scope: !4231)
!4233 = !DILocation(line: 279, column: 6, scope: !4208)
!4234 = !DILocation(line: 280, column: 24, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4231, file: !3810, line: 279, column: 35)
!4236 = !DILocation(line: 280, column: 3, scope: !4235)
!4237 = !DILocation(line: 281, column: 3, scope: !4235)
!4238 = !DILocation(line: 282, column: 2, scope: !4235)
!4239 = !DILocation(line: 284, column: 2, scope: !4208)
!4240 = !DILocation(line: 286, column: 8, scope: !4208)
!4241 = !DILocation(line: 298, column: 2, scope: !4208)
!4242 = !DILocation(line: 299, column: 1, scope: !4208)
!4243 = distinct !DISubprogram(name: "size_too_big", scope: !2335, file: !2335, line: 256, type: !4244, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!146, !2348, !323}
!4246 = !{!4247, !4248}
!4247 = !DILocalVariable(name: "h", arg: 1, scope: !4243, file: !2335, line: 256, type: !2348)
!4248 = !DILocalVariable(name: "bytes", arg: 2, scope: !4243, file: !2335, line: 256, type: !323)
!4249 = !DILocation(line: 0, scope: !4243)
!4250 = !DILocation(line: 262, column: 16, scope: !4243)
!4251 = !DILocation(line: 262, column: 36, scope: !4243)
!4252 = !DILocation(line: 262, column: 30, scope: !4243)
!4253 = !DILocation(line: 262, column: 2, scope: !4243)
!4254 = distinct !DISubprogram(name: "alloc_chunk", scope: !3810, file: !3810, line: 211, type: !4255, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4257)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!2353, !2348, !3955}
!4257 = !{!4258, !4259, !4260, !4261, !4262, !4265, !4266, !4268, !4269, !4272}
!4258 = !DILocalVariable(name: "h", arg: 1, scope: !4254, file: !3810, line: 211, type: !2348)
!4259 = !DILocalVariable(name: "sz", arg: 2, scope: !4254, file: !3810, line: 211, type: !3955)
!4260 = !DILocalVariable(name: "bi", scope: !4254, file: !3810, line: 213, type: !118)
!4261 = !DILocalVariable(name: "b", scope: !4254, file: !3810, line: 214, type: !4010)
!4262 = !DILocalVariable(name: "first", scope: !4263, file: !3810, line: 233, type: !2353)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !3810, line: 232, column: 15)
!4264 = distinct !DILexicalBlock(scope: !4254, file: !3810, line: 232, column: 6)
!4265 = !DILocalVariable(name: "i", scope: !4263, file: !3810, line: 234, type: !118)
!4266 = !DILocalVariable(name: "c", scope: !4267, file: !3810, line: 236, type: !2353)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !3810, line: 235, column: 6)
!4268 = !DILocalVariable(name: "bmask", scope: !4254, file: !3810, line: 249, type: !156)
!4269 = !DILocalVariable(name: "minbucket", scope: !4270, file: !3810, line: 252, type: !118)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !3810, line: 251, column: 19)
!4271 = distinct !DILexicalBlock(scope: !4254, file: !3810, line: 251, column: 6)
!4272 = !DILocalVariable(name: "c", scope: !4270, file: !3810, line: 253, type: !2353)
!4273 = !DILocation(line: 0, scope: !4254)
!4274 = !DILocation(line: 213, column: 11, scope: !4254)
!4275 = !DILocation(line: 232, column: 9, scope: !4264)
!4276 = !DILocation(line: 232, column: 6, scope: !4264)
!4277 = !DILocation(line: 232, column: 6, scope: !4254)
!4278 = !DILocation(line: 236, column: 21, scope: !4267)
!4279 = !DILocation(line: 0, scope: !4263)
!4280 = !DILocation(line: 0, scope: !4267)
!4281 = !DILocation(line: 237, column: 8, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4267, file: !3810, line: 237, column: 8)
!4283 = !DILocation(line: 237, column: 25, scope: !4282)
!4284 = !DILocation(line: 237, column: 8, scope: !4267)
!4285 = !DILocation(line: 238, column: 5, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !3810, line: 237, column: 32)
!4287 = !DILocation(line: 241, column: 14, scope: !4267)
!4288 = !DILocation(line: 241, column: 12, scope: !4267)
!4289 = !DILocation(line: 243, column: 12, scope: !4263)
!4290 = !DILocation(line: 243, column: 16, scope: !4263)
!4291 = distinct !{!4291, !4292, !4293}
!4292 = !DILocation(line: 235, column: 3, scope: !4263)
!4293 = !DILocation(line: 243, column: 35, scope: !4263)
!4294 = !DILocation(line: 249, column: 22, scope: !4254)
!4295 = !DILocation(line: 249, column: 39, scope: !4254)
!4296 = !DILocation(line: 249, column: 36, scope: !4254)
!4297 = !DILocation(line: 251, column: 12, scope: !4271)
!4298 = !DILocation(line: 251, column: 6, scope: !4254)
!4299 = !DILocation(line: 252, column: 19, scope: !4270)
!4300 = !DILocation(line: 0, scope: !4270)
!4301 = !DILocation(line: 253, column: 39, scope: !4270)
!4302 = !DILocation(line: 255, column: 3, scope: !4270)
!4303 = !DILocation(line: 261, column: 1, scope: !4254)
!4304 = distinct !DISubprogram(name: "split_chunks", scope: !3810, file: !3810, line: 109, type: !3948, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4305)
!4305 = !{!4306, !4307, !4308, !4309, !4310, !4311}
!4306 = !DILocalVariable(name: "h", arg: 1, scope: !4304, file: !3810, line: 109, type: !2348)
!4307 = !DILocalVariable(name: "lc", arg: 2, scope: !4304, file: !3810, line: 109, type: !2353)
!4308 = !DILocalVariable(name: "rc", arg: 3, scope: !4304, file: !3810, line: 109, type: !2353)
!4309 = !DILocalVariable(name: "sz0", scope: !4304, file: !3810, line: 114, type: !3955)
!4310 = !DILocalVariable(name: "lsz", scope: !4304, file: !3810, line: 115, type: !3955)
!4311 = !DILocalVariable(name: "rsz", scope: !4304, file: !3810, line: 116, type: !3955)
!4312 = !DILocation(line: 0, scope: !4304)
!4313 = !DILocation(line: 114, column: 18, scope: !4304)
!4314 = !DILocation(line: 115, column: 21, scope: !4304)
!4315 = !DILocation(line: 116, column: 22, scope: !4304)
!4316 = !DILocation(line: 118, column: 2, scope: !4304)
!4317 = !DILocation(line: 119, column: 2, scope: !4304)
!4318 = !DILocation(line: 120, column: 2, scope: !4304)
!4319 = !DILocation(line: 121, column: 25, scope: !4304)
!4320 = !DILocation(line: 121, column: 2, scope: !4304)
!4321 = !DILocation(line: 122, column: 1, scope: !4304)
!4322 = distinct !DISubprogram(name: "chunk_mem", scope: !3810, file: !3810, line: 24, type: !4323, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4325)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!117, !2348, !2353}
!4325 = !{!4326, !4327, !4328, !4329}
!4326 = !DILocalVariable(name: "h", arg: 1, scope: !4322, file: !3810, line: 24, type: !2348)
!4327 = !DILocalVariable(name: "c", arg: 2, scope: !4322, file: !3810, line: 24, type: !2353)
!4328 = !DILocalVariable(name: "buf", scope: !4322, file: !3810, line: 26, type: !2342)
!4329 = !DILocalVariable(name: "ret", scope: !4322, file: !3810, line: 27, type: !940)
!4330 = !DILocation(line: 0, scope: !4322)
!4331 = !DILocation(line: 26, column: 22, scope: !4322)
!4332 = !DILocation(line: 27, column: 38, scope: !4322)
!4333 = !DILocation(line: 31, column: 2, scope: !4322)
!4334 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3810, file: !3810, line: 301, type: !4335, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4337)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!117, !3813, !323, !323}
!4337 = !{!4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349}
!4338 = !DILocalVariable(name: "heap", arg: 1, scope: !4334, file: !3810, line: 301, type: !3813)
!4339 = !DILocalVariable(name: "align", arg: 2, scope: !4334, file: !3810, line: 301, type: !323)
!4340 = !DILocalVariable(name: "bytes", arg: 3, scope: !4334, file: !3810, line: 301, type: !323)
!4341 = !DILocalVariable(name: "h", scope: !4334, file: !3810, line: 303, type: !2348)
!4342 = !DILocalVariable(name: "gap", scope: !4334, file: !3810, line: 304, type: !323)
!4343 = !DILocalVariable(name: "rew", scope: !4334, file: !3810, line: 304, type: !323)
!4344 = !DILocalVariable(name: "padded_sz", scope: !4334, file: !3810, line: 335, type: !3955)
!4345 = !DILocalVariable(name: "c0", scope: !4334, file: !3810, line: 336, type: !2353)
!4346 = !DILocalVariable(name: "mem", scope: !4334, file: !3810, line: 341, type: !940)
!4347 = !DILocalVariable(name: "end", scope: !4334, file: !3810, line: 345, type: !2342)
!4348 = !DILocalVariable(name: "c", scope: !4334, file: !3810, line: 348, type: !2353)
!4349 = !DILocalVariable(name: "c_end", scope: !4334, file: !3810, line: 349, type: !2353)
!4350 = !DILocation(line: 0, scope: !4334)
!4351 = !DILocation(line: 303, column: 27, scope: !4334)
!4352 = !DILocation(line: 313, column: 16, scope: !4334)
!4353 = !DILocation(line: 313, column: 14, scope: !4334)
!4354 = !DILocation(line: 314, column: 12, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 314, column: 6)
!4356 = !DILocation(line: 314, column: 6, scope: !4334)
!4357 = !DILocation(line: 315, column: 9, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4355, file: !3810, line: 314, column: 20)
!4359 = !DILocation(line: 316, column: 9, scope: !4358)
!4360 = !DILocation(line: 318, column: 13, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !3810, line: 318, column: 7)
!4362 = distinct !DILexicalBlock(scope: !4355, file: !3810, line: 317, column: 9)
!4363 = !DILocation(line: 318, column: 7, scope: !4362)
!4364 = !DILocation(line: 319, column: 11, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4361, file: !3810, line: 318, column: 39)
!4366 = !DILocation(line: 319, column: 4, scope: !4365)
!4367 = !DILocation(line: 0, scope: !4355)
!4368 = !DILocation(line: 324, column: 2, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3810, line: 324, column: 2)
!4370 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 324, column: 2)
!4371 = !DILocation(line: 324, column: 2, scope: !4370)
!4372 = !DILocation(line: 324, column: 2, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4369, file: !3810, line: 324, column: 2)
!4374 = !DILocation(line: 326, column: 12, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 326, column: 6)
!4376 = !DILocation(line: 326, column: 17, scope: !4375)
!4377 = !DILocation(line: 326, column: 20, scope: !4375)
!4378 = !DILocation(line: 326, column: 6, scope: !4334)
!4379 = !DILocation(line: 335, column: 50, scope: !4334)
!4380 = !DILocation(line: 335, column: 58, scope: !4334)
!4381 = !DILocation(line: 335, column: 24, scope: !4334)
!4382 = !DILocation(line: 336, column: 17, scope: !4334)
!4383 = !DILocation(line: 338, column: 9, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 338, column: 6)
!4385 = !DILocation(line: 338, column: 6, scope: !4334)
!4386 = !DILocation(line: 341, column: 17, scope: !4334)
!4387 = !DILocation(line: 344, column: 20, scope: !4334)
!4388 = !DILocation(line: 344, column: 8, scope: !4334)
!4389 = !DILocation(line: 344, column: 47, scope: !4334)
!4390 = !DILocation(line: 345, column: 39, scope: !4334)
!4391 = !DILocation(line: 348, column: 16, scope: !4334)
!4392 = !DILocation(line: 349, column: 26, scope: !4334)
!4393 = !DILocation(line: 349, column: 24, scope: !4334)
!4394 = !DILocation(line: 353, column: 8, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 353, column: 6)
!4396 = !DILocation(line: 353, column: 6, scope: !4334)
!4397 = !DILocation(line: 354, column: 3, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4395, file: !3810, line: 353, column: 14)
!4399 = !DILocation(line: 355, column: 3, scope: !4398)
!4400 = !DILocation(line: 356, column: 2, scope: !4398)
!4401 = !DILocation(line: 359, column: 6, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4334, file: !3810, line: 359, column: 6)
!4403 = !DILocation(line: 359, column: 24, scope: !4402)
!4404 = !DILocation(line: 359, column: 6, scope: !4334)
!4405 = !DILocation(line: 360, column: 3, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !3810, line: 359, column: 33)
!4407 = !DILocation(line: 361, column: 3, scope: !4406)
!4408 = !DILocation(line: 362, column: 2, scope: !4406)
!4409 = !DILocation(line: 364, column: 2, scope: !4334)
!4410 = !DILocation(line: 377, column: 1, scope: !4334)
!4411 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3810, file: !3810, line: 379, type: !4412, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4414)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!117, !3813, !117, !323, !323}
!4414 = !{!4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4430, !4431}
!4415 = !DILocalVariable(name: "heap", arg: 1, scope: !4411, file: !3810, line: 379, type: !3813)
!4416 = !DILocalVariable(name: "ptr", arg: 2, scope: !4411, file: !3810, line: 379, type: !117)
!4417 = !DILocalVariable(name: "align", arg: 3, scope: !4411, file: !3810, line: 380, type: !323)
!4418 = !DILocalVariable(name: "bytes", arg: 4, scope: !4411, file: !3810, line: 380, type: !323)
!4419 = !DILocalVariable(name: "h", scope: !4411, file: !3810, line: 382, type: !2348)
!4420 = !DILocalVariable(name: "c", scope: !4411, file: !3810, line: 399, type: !2353)
!4421 = !DILocalVariable(name: "rc", scope: !4411, file: !3810, line: 400, type: !2353)
!4422 = !DILocalVariable(name: "align_gap", scope: !4411, file: !3810, line: 401, type: !323)
!4423 = !DILocalVariable(name: "chunks_need", scope: !4411, file: !3810, line: 402, type: !3955)
!4424 = !DILocalVariable(name: "split_size", scope: !4425, file: !3810, line: 435, type: !3955)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !3810, line: 433, column: 61)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !3810, line: 432, column: 13)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !3810, line: 409, column: 13)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !3810, line: 406, column: 13)
!4429 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 404, column: 6)
!4430 = !DILocalVariable(name: "ptr2", scope: !4411, file: !3810, line: 474, type: !117)
!4431 = !DILocalVariable(name: "prev_size", scope: !4432, file: !3810, line: 477, type: !323)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !3810, line: 476, column: 20)
!4433 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 476, column: 6)
!4434 = !DILocation(line: 0, scope: !4411)
!4435 = !DILocation(line: 382, column: 27, scope: !4411)
!4436 = !DILocation(line: 385, column: 10, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 385, column: 6)
!4438 = !DILocation(line: 385, column: 6, scope: !4411)
!4439 = !DILocation(line: 386, column: 10, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4437, file: !3810, line: 385, column: 19)
!4441 = !DILocation(line: 386, column: 3, scope: !4440)
!4442 = !DILocation(line: 388, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 388, column: 6)
!4444 = !DILocation(line: 388, column: 6, scope: !4411)
!4445 = !DILocation(line: 389, column: 3, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4443, file: !3810, line: 388, column: 18)
!4447 = !DILocation(line: 390, column: 3, scope: !4446)
!4448 = !DILocation(line: 393, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !3810, line: 393, column: 2)
!4450 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 393, column: 2)
!4451 = !DILocation(line: 393, column: 2, scope: !4450)
!4452 = !DILocation(line: 393, column: 2, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !3810, line: 393, column: 2)
!4454 = !DILocation(line: 395, column: 6, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4411, file: !3810, line: 395, column: 6)
!4456 = !DILocation(line: 395, column: 6, scope: !4411)
!4457 = !DILocation(line: 399, column: 16, scope: !4411)
!4458 = !DILocation(line: 400, column: 17, scope: !4411)
!4459 = !DILocation(line: 401, column: 49, scope: !4411)
!4460 = !DILocation(line: 401, column: 36, scope: !4411)
!4461 = !DILocation(line: 402, column: 52, scope: !4411)
!4462 = !DILocation(line: 402, column: 26, scope: !4411)
!4463 = !DILocation(line: 404, column: 6, scope: !4429)
!4464 = !DILocation(line: 404, column: 12, scope: !4429)
!4465 = !DILocation(line: 406, column: 13, scope: !4428)
!4466 = !DILocation(line: 406, column: 30, scope: !4428)
!4467 = !DILocation(line: 406, column: 13, scope: !4429)
!4468 = !DILocation(line: 409, column: 30, scope: !4427)
!4469 = !DILocation(line: 409, column: 13, scope: !4428)
!4470 = !DILocation(line: 420, column: 24, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4427, file: !3810, line: 409, column: 45)
!4472 = !DILocation(line: 420, column: 3, scope: !4471)
!4473 = !DILocation(line: 421, column: 3, scope: !4471)
!4474 = !DILocation(line: 422, column: 3, scope: !4471)
!4475 = !DILocation(line: 431, column: 3, scope: !4471)
!4476 = !DILocation(line: 432, column: 14, scope: !4426)
!4477 = !DILocation(line: 432, column: 32, scope: !4426)
!4478 = !DILocation(line: 433, column: 26, scope: !4426)
!4479 = !DILocation(line: 433, column: 24, scope: !4426)
!4480 = !DILocation(line: 433, column: 44, scope: !4426)
!4481 = !DILocation(line: 432, column: 13, scope: !4427)
!4482 = !DILocation(line: 435, column: 38, scope: !4425)
!4483 = !DILocation(line: 0, scope: !4425)
!4484 = !DILocation(line: 445, column: 3, scope: !4425)
!4485 = !DILocation(line: 447, column: 20, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4425, file: !3810, line: 447, column: 7)
!4487 = !DILocation(line: 447, column: 18, scope: !4486)
!4488 = !DILocation(line: 447, column: 7, scope: !4425)
!4489 = !DILocation(line: 448, column: 27, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !3810, line: 447, column: 39)
!4491 = !DILocation(line: 448, column: 4, scope: !4490)
!4492 = !DILocation(line: 449, column: 4, scope: !4490)
!4493 = !DILocation(line: 450, column: 3, scope: !4490)
!4494 = !DILocation(line: 452, column: 3, scope: !4425)
!4495 = !DILocation(line: 453, column: 3, scope: !4425)
!4496 = !DILocation(line: 474, column: 15, scope: !4411)
!4497 = !DILocation(line: 476, column: 11, scope: !4433)
!4498 = !DILocation(line: 476, column: 6, scope: !4411)
!4499 = !DILocation(line: 477, column: 42, scope: !4432)
!4500 = !DILocation(line: 477, column: 22, scope: !4432)
!4501 = !DILocation(line: 477, column: 60, scope: !4432)
!4502 = !DILocation(line: 0, scope: !4432)
!4503 = !DILocation(line: 479, column: 21, scope: !4432)
!4504 = !DILocation(line: 479, column: 3, scope: !4432)
!4505 = !DILocation(line: 480, column: 3, scope: !4432)
!4506 = !DILocation(line: 481, column: 2, scope: !4432)
!4507 = !DILocation(line: 483, column: 1, scope: !4411)
!4508 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2335, file: !2335, line: 245, type: !4509, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4511)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!323, !2348, !3955}
!4511 = !{!4512, !4513}
!4512 = !DILocalVariable(name: "h", arg: 1, scope: !4508, file: !2335, line: 245, type: !2348)
!4513 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4508, file: !2335, line: 245, type: !3955)
!4514 = !DILocation(line: 0, scope: !4508)
!4515 = !DILocation(line: 247, column: 20, scope: !4508)
!4516 = !DILocation(line: 247, column: 33, scope: !4508)
!4517 = !DILocation(line: 247, column: 2, scope: !4508)
!4518 = distinct !DISubprogram(name: "sys_heap_init", scope: !3810, file: !3810, line: 485, type: !4519, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !4521)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{null, !3813, !117, !323}
!4521 = !{!4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531}
!4522 = !DILocalVariable(name: "heap", arg: 1, scope: !4518, file: !3810, line: 485, type: !3813)
!4523 = !DILocalVariable(name: "mem", arg: 2, scope: !4518, file: !3810, line: 485, type: !117)
!4524 = !DILocalVariable(name: "bytes", arg: 3, scope: !4518, file: !3810, line: 485, type: !323)
!4525 = !DILocalVariable(name: "addr", scope: !4518, file: !3810, line: 502, type: !22)
!4526 = !DILocalVariable(name: "end", scope: !4518, file: !3810, line: 503, type: !22)
!4527 = !DILocalVariable(name: "heap_sz", scope: !4518, file: !3810, line: 504, type: !3955)
!4528 = !DILocalVariable(name: "h", scope: !4518, file: !3810, line: 509, type: !2348)
!4529 = !DILocalVariable(name: "nb_buckets", scope: !4518, file: !3810, line: 520, type: !118)
!4530 = !DILocalVariable(name: "chunk0_size", scope: !4518, file: !3810, line: 521, type: !3955)
!4531 = !DILocalVariable(name: "i", scope: !4532, file: !3810, line: 526, type: !118)
!4532 = distinct !DILexicalBlock(scope: !4518, file: !3810, line: 526, column: 2)
!4533 = !DILocation(line: 0, scope: !4518)
!4534 = !DILocation(line: 491, column: 3, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !3810, line: 491, column: 3)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !3810, line: 491, column: 3)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3810, line: 489, column: 46)
!4538 = distinct !DILexicalBlock(scope: !4518, file: !3810, line: 489, column: 6)
!4539 = !DILocation(line: 491, column: 3, scope: !4536)
!4540 = !DILocation(line: 491, column: 3, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4535, file: !3810, line: 491, column: 3)
!4542 = !DILocation(line: 498, column: 2, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !3810, line: 498, column: 2)
!4544 = distinct !DILexicalBlock(scope: !4518, file: !3810, line: 498, column: 2)
!4545 = !DILocation(line: 498, column: 2, scope: !4544)
!4546 = !DILocation(line: 498, column: 2, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4543, file: !3810, line: 498, column: 2)
!4548 = !DILocation(line: 499, column: 8, scope: !4518)
!4549 = !DILocation(line: 502, column: 19, scope: !4518)
!4550 = !DILocation(line: 503, column: 18, scope: !4518)
!4551 = !DILocation(line: 504, column: 27, scope: !4518)
!4552 = !DILocation(line: 504, column: 35, scope: !4518)
!4553 = !DILocation(line: 507, column: 2, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3810, line: 507, column: 2)
!4555 = distinct !DILexicalBlock(scope: !4518, file: !3810, line: 507, column: 2)
!4556 = !DILocation(line: 507, column: 2, scope: !4555)
!4557 = !DILocation(line: 507, column: 2, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !3810, line: 507, column: 2)
!4559 = !DILocation(line: 509, column: 21, scope: !4518)
!4560 = !DILocation(line: 510, column: 8, scope: !4518)
!4561 = !DILocation(line: 510, column: 13, scope: !4518)
!4562 = !DILocation(line: 511, column: 5, scope: !4518)
!4563 = !DILocation(line: 511, column: 15, scope: !4518)
!4564 = !DILocation(line: 512, column: 5, scope: !4518)
!4565 = !DILocation(line: 512, column: 19, scope: !4518)
!4566 = !DILocation(line: 520, column: 19, scope: !4518)
!4567 = !DILocation(line: 522, column: 21, scope: !4518)
!4568 = !DILocation(line: 521, column: 56, scope: !4518)
!4569 = !DILocation(line: 521, column: 26, scope: !4518)
!4570 = !DILocation(line: 524, column: 2, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !3810, line: 524, column: 2)
!4572 = distinct !DILexicalBlock(scope: !4518, file: !3810, line: 524, column: 2)
!4573 = !DILocation(line: 524, column: 2, scope: !4572)
!4574 = !DILocation(line: 0, scope: !4532)
!4575 = !DILocation(line: 526, column: 20, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4532, file: !3810, line: 526, column: 2)
!4577 = !DILocation(line: 526, column: 2, scope: !4532)
!4578 = !DILocation(line: 524, column: 2, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4571, file: !3810, line: 524, column: 2)
!4580 = !DILocation(line: 531, column: 2, scope: !4518)
!4581 = !DILocation(line: 532, column: 2, scope: !4518)
!4582 = !DILocation(line: 533, column: 2, scope: !4518)
!4583 = !DILocation(line: 536, column: 41, scope: !4518)
!4584 = !DILocation(line: 536, column: 2, scope: !4518)
!4585 = !DILocation(line: 537, column: 2, scope: !4518)
!4586 = !DILocation(line: 540, column: 2, scope: !4518)
!4587 = !DILocation(line: 541, column: 2, scope: !4518)
!4588 = !DILocation(line: 542, column: 2, scope: !4518)
!4589 = !DILocation(line: 544, column: 2, scope: !4518)
!4590 = !DILocation(line: 545, column: 1, scope: !4518)
!4591 = !DILocation(line: 527, column: 17, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4576, file: !3810, line: 526, column: 39)
!4593 = !DILocation(line: 527, column: 22, scope: !4592)
!4594 = !DILocation(line: 526, column: 35, scope: !4576)
!4595 = distinct !{!4595, !4577, !4596}
!4596 = !DILocation(line: 528, column: 2, scope: !4532)
!4597 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2368, file: !2368, line: 1338, type: !4598, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !4606)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!118, !3550, !117, !133, !4600, !156}
!4600 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3516, line: 99, baseType: !4601)
!4601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3516, line: 40, baseType: !4602)
!4602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2368, baseType: !4603)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4604)
!4604 = !{!4605}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4603, file: !2368, baseType: !117, size: 32)
!4606 = !{!4607, !4608, !4609, !4610, !4611, !4612, !4616, !4617, !4618, !4620, !4625, !4670, !4673, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4685, !4686, !4687, !4691, !4694, !4696, !4699, !4700, !4701, !4706, !4712, !4715, !4719, !4725, !4729, !4732, !4734, !4737}
!4607 = !DILocalVariable(name: "out", arg: 1, scope: !4597, file: !2368, line: 1338, type: !3550)
!4608 = !DILocalVariable(name: "ctx", arg: 2, scope: !4597, file: !2368, line: 1338, type: !117)
!4609 = !DILocalVariable(name: "fp", arg: 3, scope: !4597, file: !2368, line: 1338, type: !133)
!4610 = !DILocalVariable(name: "ap", arg: 4, scope: !4597, file: !2368, line: 1339, type: !4600)
!4611 = !DILocalVariable(name: "flags", arg: 5, scope: !4597, file: !2368, line: 1339, type: !156)
!4612 = !DILocalVariable(name: "buf", scope: !4597, file: !2368, line: 1341, type: !4613)
!4613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 176, elements: !4614)
!4614 = !{!4615}
!4615 = !DISubrange(count: 22)
!4616 = !DILocalVariable(name: "count", scope: !4597, file: !2368, line: 1342, type: !323)
!4617 = !DILocalVariable(name: "sint", scope: !4597, file: !2368, line: 1343, type: !2387)
!4618 = !DILocalVariable(name: "tagged_ap", scope: !4597, file: !2368, line: 1345, type: !4619)
!4619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4620 = !DILocalVariable(name: "rc", scope: !4621, file: !2368, line: 1377, type: !118)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2368, line: 1377, column: 4)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2368, line: 1376, column: 19)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1376, column: 7)
!4624 = distinct !DILexicalBlock(scope: !4597, file: !2368, line: 1375, column: 19)
!4625 = !DILocalVariable(name: "state", scope: !4624, file: !2368, line: 1395, type: !4626)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4597, file: !2368, line: 1392, size: 192, elements: !4627)
!4627 = !{!4628, !4638}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4626, file: !2368, line: 1393, baseType: !4629, size: 64)
!4629 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2368, line: 166, size: 64, elements: !4630)
!4630 = !{!4631, !4632, !4633, !4635, !4637}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4629, file: !2368, line: 168, baseType: !2387, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4629, file: !2368, line: 171, baseType: !2390, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4629, file: !2368, line: 174, baseType: !4634, size: 64)
!4634 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4629, file: !2368, line: 177, baseType: !4636, size: 64)
!4636 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4629, file: !2368, line: 180, baseType: !117, size: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4626, file: !2368, line: 1394, baseType: !4639, size: 96, offset: 64)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2368, line: 189, size: 96, elements: !4640)
!4640 = !{!4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4665}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4639, file: !2368, line: 191, baseType: !146, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4639, file: !2368, line: 194, baseType: !146, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4639, file: !2368, line: 197, baseType: !146, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4639, file: !2368, line: 200, baseType: !146, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4639, file: !2368, line: 203, baseType: !146, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4639, file: !2368, line: 206, baseType: !146, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4639, file: !2368, line: 209, baseType: !146, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4639, file: !2368, line: 212, baseType: !146, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4639, file: !2368, line: 219, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4639, file: !2368, line: 222, baseType: !146, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4639, file: !2368, line: 229, baseType: !146, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4639, file: !2368, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4639, file: !2368, line: 238, baseType: !146, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4639, file: !2368, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4639, file: !2368, line: 244, baseType: !146, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4639, file: !2368, line: 247, baseType: !146, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4639, file: !2368, line: 252, baseType: !146, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4639, file: !2368, line: 257, baseType: !146, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4639, file: !2368, line: 260, baseType: !144, size: 8, offset: 24)
!4660 = !DIDerivedType(tag: DW_TAG_member, scope: !4639, file: !2368, line: 262, baseType: !4661, size: 32, offset: 32)
!4661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4639, file: !2368, line: 262, size: 32, elements: !4662)
!4662 = !{!4663, !4664}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4661, file: !2368, line: 267, baseType: !118, size: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4661, file: !2368, line: 289, baseType: !118, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, scope: !4639, file: !2368, line: 292, baseType: !4666, size: 32, offset: 64)
!4666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4639, file: !2368, line: 292, size: 32, elements: !4667)
!4667 = !{!4668, !4669}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4666, file: !2368, line: 297, baseType: !118, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4666, file: !2368, line: 306, baseType: !118, size: 32)
!4670 = !DILocalVariable(name: "conv", scope: !4624, file: !2368, line: 1400, type: !4671)
!4671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4672)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 32)
!4673 = !DILocalVariable(name: "value", scope: !4624, file: !2368, line: 1401, type: !4674)
!4674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4675)
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 32)
!4676 = !DILocalVariable(name: "sp", scope: !4624, file: !2368, line: 1402, type: !133)
!4677 = !DILocalVariable(name: "width", scope: !4624, file: !2368, line: 1403, type: !118)
!4678 = !DILocalVariable(name: "precision", scope: !4624, file: !2368, line: 1404, type: !118)
!4679 = !DILocalVariable(name: "bps", scope: !4624, file: !2368, line: 1405, type: !133)
!4680 = !DILocalVariable(name: "bpe", scope: !4624, file: !2368, line: 1406, type: !133)
!4681 = !DILocalVariable(name: "sign", scope: !4624, file: !2368, line: 1407, type: !135)
!4682 = !DILocalVariable(name: "arg", scope: !4683, file: !2368, line: 1432, type: !118)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2368, line: 1431, column: 24)
!4684 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1431, column: 7)
!4685 = !DILocalVariable(name: "specifier_cat", scope: !4624, file: !2368, line: 1468, type: !2367)
!4686 = !DILocalVariable(name: "length_mod", scope: !4624, file: !2368, line: 1470, type: !2375)
!4687 = !DILocalVariable(name: "rc", scope: !4688, file: !2368, line: 1575, type: !118)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2368, line: 1575, column: 4)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2368, line: 1574, column: 43)
!4690 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1574, column: 7)
!4691 = !DILocalVariable(name: "rc", scope: !4692, file: !2368, line: 1584, type: !118)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1584, column: 4)
!4693 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1582, column: 28)
!4694 = !DILocalVariable(name: "len", scope: !4695, file: !2368, line: 1589, type: !323)
!4695 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1586, column: 13)
!4696 = !DILocalVariable(name: "len", scope: !4697, file: !2368, line: 1641, type: !323)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2368, line: 1640, column: 24)
!4698 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1640, column: 8)
!4699 = !DILocalVariable(name: "nj_len", scope: !4624, file: !2368, line: 1722, type: !323)
!4700 = !DILocalVariable(name: "pad_len", scope: !4624, file: !2368, line: 1723, type: !118)
!4701 = !DILocalVariable(name: "pad", scope: !4702, file: !2368, line: 1751, type: !135)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2368, line: 1750, column: 26)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2368, line: 1750, column: 8)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2368, line: 1747, column: 18)
!4705 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1747, column: 7)
!4706 = !DILocalVariable(name: "rc", scope: !4707, file: !2368, line: 1758, type: !118)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2368, line: 1758, column: 7)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2368, line: 1757, column: 21)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2368, line: 1757, column: 10)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2368, line: 1756, column: 26)
!4711 = distinct !DILexicalBlock(scope: !4702, file: !2368, line: 1756, column: 9)
!4712 = !DILocalVariable(name: "rc", scope: !4713, file: !2368, line: 1765, type: !118)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2368, line: 1765, column: 6)
!4714 = distinct !DILexicalBlock(scope: !4702, file: !2368, line: 1764, column: 25)
!4715 = !DILocalVariable(name: "rc", scope: !4716, file: !2368, line: 1774, type: !118)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !2368, line: 1774, column: 4)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2368, line: 1773, column: 18)
!4718 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1773, column: 7)
!4719 = !DILocalVariable(name: "rc", scope: !4720, file: !2368, line: 1819, type: !118)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !2368, line: 1819, column: 5)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2368, line: 1818, column: 44)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2368, line: 1818, column: 8)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !2368, line: 1817, column: 10)
!4724 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1777, column: 7)
!4725 = !DILocalVariable(name: "rc", scope: !4726, file: !2368, line: 1823, type: !118)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2368, line: 1823, column: 5)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2368, line: 1822, column: 26)
!4728 = distinct !DILexicalBlock(scope: !4723, file: !2368, line: 1822, column: 8)
!4729 = !DILocalVariable(name: "rc", scope: !4730, file: !2368, line: 1828, type: !118)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2368, line: 1828, column: 5)
!4731 = distinct !DILexicalBlock(scope: !4723, file: !2368, line: 1827, column: 26)
!4732 = !DILocalVariable(name: "rc", scope: !4733, file: !2368, line: 1831, type: !118)
!4733 = distinct !DILexicalBlock(scope: !4723, file: !2368, line: 1831, column: 4)
!4734 = !DILocalVariable(name: "rc", scope: !4735, file: !2368, line: 1836, type: !118)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2368, line: 1836, column: 4)
!4736 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1835, column: 21)
!4737 = !DILabel(scope: !4693, name: "prec_int_pad0", file: !2368, line: 1634)
!4738 = !DILocation(line: 0, scope: !4597)
!4739 = !DILocation(line: 1341, column: 2, scope: !4597)
!4740 = !DILocation(line: 1341, column: 7, scope: !4597)
!4741 = !DILocation(line: 1375, column: 2, scope: !4597)
!4742 = !DILocation(line: 1342, column: 9, scope: !4597)
!4743 = !DILocation(line: 1375, column: 9, scope: !4597)
!4744 = !DILocation(line: 1377, column: 4, scope: !4621)
!4745 = !DILocation(line: 0, scope: !4621)
!4746 = !DILocation(line: 1377, column: 4, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4621, file: !2368, line: 1377, column: 4)
!4748 = distinct !{!4748, !4741, !4749}
!4749 = !DILocation(line: 1839, column: 2, scope: !4597)
!4750 = !DILocation(line: 1392, column: 3, scope: !4624)
!4751 = !DILocation(line: 1395, column: 5, scope: !4624)
!4752 = !DILocation(line: 0, scope: !4624)
!4753 = !DILocation(line: 1409, column: 8, scope: !4624)
!4754 = !DILocation(line: 1414, column: 13, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1414, column: 7)
!4756 = !DILocation(line: 1414, column: 7, scope: !4624)
!4757 = !DILocation(line: 1415, column: 12, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !2368, line: 1414, column: 25)
!4759 = !DILocation(line: 1417, column: 14, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4758, file: !2368, line: 1417, column: 8)
!4761 = !DILocation(line: 1417, column: 8, scope: !4758)
!4762 = !DILocation(line: 1418, column: 21, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4760, file: !2368, line: 1417, column: 19)
!4764 = !DILocation(line: 1419, column: 13, scope: !4763)
!4765 = !DILocation(line: 1420, column: 4, scope: !4763)
!4766 = !DILocation(line: 1421, column: 20, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4755, file: !2368, line: 1421, column: 14)
!4768 = !DILocation(line: 1421, column: 14, scope: !4755)
!4769 = !DILocation(line: 1431, column: 13, scope: !4684)
!4770 = !DILocation(line: 1431, column: 7, scope: !4624)
!4771 = !DILocation(line: 1432, column: 14, scope: !4683)
!4772 = !DILocation(line: 0, scope: !4683)
!4773 = !DILocation(line: 1434, column: 12, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4683, file: !2368, line: 1434, column: 8)
!4775 = !DILocation(line: 1434, column: 8, scope: !4683)
!4776 = !DILocation(line: 1435, column: 24, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4774, file: !2368, line: 1434, column: 17)
!4778 = !DILocation(line: 1436, column: 4, scope: !4777)
!4779 = !DILocation(line: 1439, column: 20, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4684, file: !2368, line: 1439, column: 14)
!4781 = !DILocation(line: 1439, column: 14, scope: !4684)
!4782 = !DILocation(line: 1469, column: 37, scope: !4624)
!4783 = !DILocation(line: 1448, column: 20, scope: !4624)
!4784 = !DILocation(line: 1449, column: 22, scope: !4624)
!4785 = !DILocation(line: 1471, column: 34, scope: !4624)
!4786 = !DILocation(line: 1478, column: 7, scope: !4624)
!4787 = !DILocation(line: 1479, column: 4, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2368, line: 1478, column: 40)
!4789 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1478, column: 7)
!4790 = !DILocation(line: 1484, column: 19, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4788, file: !2368, line: 1479, column: 24)
!4792 = !DILocation(line: 1484, column: 17, scope: !4791)
!4793 = !DILocation(line: 1485, column: 5, scope: !4791)
!4794 = !DILocation(line: 1492, column: 20, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !2368, line: 1491, column: 12)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !2368, line: 1487, column: 9)
!4797 = !DILocation(line: 1492, column: 18, scope: !4795)
!4798 = !DILocation(line: 1494, column: 5, scope: !4791)
!4799 = !DILocation(line: 1497, column: 23, scope: !4791)
!4800 = !DILocation(line: 1496, column: 17, scope: !4791)
!4801 = !DILocation(line: 1498, column: 5, scope: !4791)
!4802 = !DILocation(line: 1501, column: 23, scope: !4791)
!4803 = !DILocation(line: 1500, column: 17, scope: !4791)
!4804 = !DILocation(line: 1502, column: 5, scope: !4791)
!4805 = !DILocation(line: 1513, column: 23, scope: !4791)
!4806 = !DILocation(line: 1513, column: 6, scope: !4791)
!4807 = !DILocation(line: 1512, column: 17, scope: !4791)
!4808 = !DILocation(line: 1514, column: 5, scope: !4791)
!4809 = !DILocation(line: 0, scope: !4791)
!4810 = !DILocation(line: 1516, column: 8, scope: !4788)
!4811 = !DILocation(line: 1517, column: 19, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !2368, line: 1516, column: 33)
!4813 = distinct !DILexicalBlock(scope: !4788, file: !2368, line: 1516, column: 8)
!4814 = !DILocation(line: 1517, column: 17, scope: !4812)
!4815 = !DILocation(line: 1518, column: 4, scope: !4812)
!4816 = !DILocation(line: 1519, column: 19, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2368, line: 1518, column: 39)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !2368, line: 1518, column: 15)
!4819 = !DILocation(line: 1519, column: 17, scope: !4817)
!4820 = !DILocation(line: 1520, column: 4, scope: !4817)
!4821 = !DILocation(line: 1522, column: 4, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !2368, line: 1521, column: 47)
!4823 = distinct !DILexicalBlock(scope: !4789, file: !2368, line: 1521, column: 14)
!4824 = !DILocation(line: 1527, column: 19, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !2368, line: 1522, column: 24)
!4826 = !DILocation(line: 1527, column: 17, scope: !4825)
!4827 = !DILocation(line: 1528, column: 5, scope: !4825)
!4828 = !DILocation(line: 0, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4825, file: !2368, line: 1530, column: 9)
!4830 = !DILocation(line: 1540, column: 23, scope: !4825)
!4831 = !DILocation(line: 1539, column: 17, scope: !4825)
!4832 = !DILocation(line: 1542, column: 5, scope: !4825)
!4833 = !DILocation(line: 1545, column: 23, scope: !4825)
!4834 = !DILocation(line: 1544, column: 17, scope: !4825)
!4835 = !DILocation(line: 1547, column: 5, scope: !4825)
!4836 = !DILocation(line: 1551, column: 23, scope: !4825)
!4837 = !DILocation(line: 1551, column: 6, scope: !4825)
!4838 = !DILocation(line: 1550, column: 17, scope: !4825)
!4839 = !DILocation(line: 1552, column: 5, scope: !4825)
!4840 = !DILocation(line: 0, scope: !4825)
!4841 = !DILocation(line: 1554, column: 8, scope: !4822)
!4842 = !DILocation(line: 1555, column: 19, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !2368, line: 1554, column: 33)
!4844 = distinct !DILexicalBlock(scope: !4822, file: !2368, line: 1554, column: 8)
!4845 = !DILocation(line: 1555, column: 17, scope: !4843)
!4846 = !DILocation(line: 1556, column: 4, scope: !4843)
!4847 = !DILocation(line: 1557, column: 19, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2368, line: 1556, column: 39)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !2368, line: 1556, column: 15)
!4850 = !DILocation(line: 1557, column: 17, scope: !4848)
!4851 = !DILocation(line: 1558, column: 4, scope: !4848)
!4852 = !DILocation(line: 0, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2368, line: 1560, column: 8)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !2368, line: 1559, column: 45)
!4855 = distinct !DILexicalBlock(scope: !4823, file: !2368, line: 1559, column: 14)
!4856 = !DILocation(line: 1566, column: 17, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !2368, line: 1565, column: 46)
!4858 = distinct !DILexicalBlock(scope: !4855, file: !2368, line: 1565, column: 14)
!4859 = !DILocation(line: 1566, column: 15, scope: !4857)
!4860 = !DILocation(line: 1567, column: 3, scope: !4857)
!4861 = !DILocation(line: 1574, column: 21, scope: !4690)
!4862 = !DILocation(line: 1575, column: 4, scope: !4688)
!4863 = !DILocation(line: 0, scope: !4688)
!4864 = !DILocation(line: 1575, column: 4, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4688, file: !2368, line: 1575, column: 4)
!4866 = !DILocation(line: 1582, column: 17, scope: !4624)
!4867 = !DILocation(line: 1582, column: 3, scope: !4624)
!4868 = !DILocation(line: 1584, column: 4, scope: !4692)
!4869 = !DILocation(line: 0, scope: !4692)
!4870 = !DILocation(line: 1584, column: 4, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4692, file: !2368, line: 1584, column: 4)
!4872 = !DILocation(line: 1587, column: 31, scope: !4695)
!4873 = !DILocation(line: 1591, column: 18, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4695, file: !2368, line: 1591, column: 8)
!4875 = !DILocation(line: 1591, column: 8, scope: !4695)
!4876 = !DILocation(line: 1592, column: 11, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4874, file: !2368, line: 1591, column: 24)
!4878 = !DILocation(line: 0, scope: !4695)
!4879 = !DILocation(line: 1593, column: 4, scope: !4877)
!4880 = !DILocation(line: 1594, column: 11, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4874, file: !2368, line: 1593, column: 11)
!4882 = !DILocation(line: 1604, column: 51, scope: !4693)
!4883 = !DILocation(line: 1604, column: 13, scope: !4693)
!4884 = !DILocation(line: 1604, column: 11, scope: !4693)
!4885 = !DILocation(line: 1606, column: 4, scope: !4693)
!4886 = !DILocation(line: 1609, column: 14, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1609, column: 8)
!4888 = !DILocation(line: 1609, column: 8, scope: !4693)
!4889 = !DILocation(line: 1619, column: 18, scope: !4693)
!4890 = !DILocation(line: 1620, column: 13, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1620, column: 8)
!4892 = !DILocation(line: 1620, column: 8, scope: !4693)
!4893 = !DILocation(line: 1622, column: 36, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !2368, line: 1620, column: 18)
!4895 = !DILocation(line: 1622, column: 17, scope: !4894)
!4896 = !DILocation(line: 1623, column: 4, scope: !4894)
!4897 = !DILocation(line: 1632, column: 29, scope: !4693)
!4898 = !DILocation(line: 1632, column: 10, scope: !4693)
!4899 = !DILocation(line: 1632, column: 4, scope: !4693)
!4900 = !DILocation(line: 1407, column: 8, scope: !4624)
!4901 = !DILocation(line: 0, scope: !4693)
!4902 = !DILocation(line: 1634, column: 3, scope: !4693)
!4903 = !DILocation(line: 1640, column: 18, scope: !4698)
!4904 = !DILocation(line: 1640, column: 8, scope: !4693)
!4905 = !DILocation(line: 1729, column: 13, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1729, column: 7)
!4907 = !DILocation(line: 1641, column: 22, scope: !4697)
!4908 = !DILocation(line: 0, scope: !4697)
!4909 = !DILocation(line: 1646, column: 21, scope: !4697)
!4910 = !DILocation(line: 1649, column: 13, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4697, file: !2368, line: 1649, column: 9)
!4912 = !DILocation(line: 1649, column: 9, scope: !4697)
!4913 = !DILocation(line: 1650, column: 35, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4911, file: !2368, line: 1649, column: 34)
!4915 = !DILocation(line: 1650, column: 23, scope: !4914)
!4916 = !DILocation(line: 1651, column: 5, scope: !4914)
!4917 = !DILocation(line: 1660, column: 15, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1660, column: 8)
!4919 = !DILocation(line: 1660, column: 19, scope: !4918)
!4920 = !DILocation(line: 1660, column: 8, scope: !4693)
!4921 = !DILocation(line: 1661, column: 23, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !2368, line: 1660, column: 28)
!4923 = !DILocation(line: 1661, column: 11, scope: !4922)
!4924 = !DILocation(line: 1665, column: 22, scope: !4922)
!4925 = !DILocation(line: 1666, column: 21, scope: !4922)
!4926 = !DILocation(line: 1668, column: 5, scope: !4922)
!4927 = !DILocation(line: 1677, column: 30, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !2368, line: 1676, column: 49)
!4929 = distinct !DILexicalBlock(scope: !4693, file: !2368, line: 1676, column: 8)
!4930 = !DILocation(line: 1677, column: 5, scope: !4928)
!4931 = !DILocation(line: 1680, column: 4, scope: !4693)
!4932 = !DILocation(line: 0, scope: !4874)
!4933 = !DILocation(line: 1597, column: 14, scope: !4695)
!4934 = !DILocation(line: 1699, column: 11, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1699, column: 7)
!4936 = !DILocation(line: 1699, column: 7, scope: !4624)
!4937 = !DILocation(line: 1725, column: 7, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1725, column: 7)
!4939 = !DILocation(line: 1725, column: 12, scope: !4938)
!4940 = !DILocation(line: 1747, column: 13, scope: !4705)
!4941 = !DILocation(line: 1747, column: 7, scope: !4624)
!4942 = !DILocation(line: 1722, column: 24, scope: !4624)
!4943 = !DILocation(line: 1725, column: 7, scope: !4624)
!4944 = !DILocation(line: 1729, column: 7, scope: !4624)
!4945 = !DILocation(line: 1736, column: 13, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4624, file: !2368, line: 1736, column: 7)
!4947 = !DILocation(line: 1735, column: 19, scope: !4624)
!4948 = !DILocation(line: 1736, column: 7, scope: !4624)
!4949 = !DILocation(line: 1748, column: 10, scope: !4704)
!4950 = !DILocation(line: 1750, column: 15, scope: !4703)
!4951 = !DILocation(line: 1750, column: 8, scope: !4704)
!4952 = !DILocation(line: 0, scope: !4702)
!4953 = !DILocation(line: 1756, column: 15, scope: !4711)
!4954 = !DILocation(line: 1756, column: 9, scope: !4702)
!4955 = !DILocation(line: 1758, column: 7, scope: !4707)
!4956 = !DILocation(line: 0, scope: !4707)
!4957 = !DILocation(line: 1758, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4707, file: !2368, line: 1758, column: 7)
!4959 = !DILocation(line: 1764, column: 5, scope: !4702)
!4960 = !DILocation(line: 0, scope: !4704)
!4961 = !DILocation(line: 1764, column: 20, scope: !4702)
!4962 = !DILocation(line: 1764, column: 17, scope: !4702)
!4963 = !DILocation(line: 1765, column: 6, scope: !4713)
!4964 = !DILocation(line: 0, scope: !4713)
!4965 = !DILocation(line: 1765, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4713, file: !2368, line: 1765, column: 6)
!4967 = distinct !{!4967, !4959, !4968}
!4968 = !DILocation(line: 1766, column: 5, scope: !4702)
!4969 = !DILocation(line: 1773, column: 12, scope: !4718)
!4970 = !DILocation(line: 1773, column: 7, scope: !4624)
!4971 = !DILocation(line: 1773, column: 7, scope: !4718)
!4972 = !DILocation(line: 1774, column: 4, scope: !4716)
!4973 = !DILocation(line: 0, scope: !4716)
!4974 = !DILocation(line: 1774, column: 4, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4716, file: !2368, line: 1774, column: 4)
!4976 = !DILocation(line: 1818, column: 8, scope: !4722)
!4977 = !DILocation(line: 1818, column: 27, scope: !4722)
!4978 = !DILocation(line: 1818, column: 25, scope: !4722)
!4979 = !DILocation(line: 1818, column: 8, scope: !4723)
!4980 = !DILocation(line: 1819, column: 5, scope: !4720)
!4981 = !DILocation(line: 0, scope: !4720)
!4982 = !DILocation(line: 1819, column: 5, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4720, file: !2368, line: 1819, column: 5)
!4984 = !DILocation(line: 1822, column: 14, scope: !4728)
!4985 = !DILocation(line: 1822, column: 8, scope: !4723)
!4986 = !DILocation(line: 1823, column: 5, scope: !4726)
!4987 = !DILocation(line: 0, scope: !4726)
!4988 = !DILocation(line: 1823, column: 5, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4726, file: !2368, line: 1823, column: 5)
!4990 = !DILocation(line: 1826, column: 20, scope: !4723)
!4991 = !DILocation(line: 1827, column: 4, scope: !4723)
!4992 = !DILocation(line: 0, scope: !4723)
!4993 = !DILocation(line: 1827, column: 21, scope: !4723)
!4994 = !DILocation(line: 1827, column: 18, scope: !4723)
!4995 = !DILocation(line: 1828, column: 5, scope: !4730)
!4996 = !DILocation(line: 0, scope: !4730)
!4997 = !DILocation(line: 1828, column: 5, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4730, file: !2368, line: 1828, column: 5)
!4999 = distinct !{!4999, !4991, !5000}
!5000 = !DILocation(line: 1829, column: 4, scope: !4723)
!5001 = !DILocation(line: 1831, column: 4, scope: !4733)
!5002 = !DILocation(line: 0, scope: !4733)
!5003 = !DILocation(line: 1831, column: 4, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4733, file: !2368, line: 1831, column: 4)
!5005 = !DILocation(line: 1835, column: 16, scope: !4624)
!5006 = !DILocation(line: 1835, column: 3, scope: !4624)
!5007 = !DILocation(line: 1836, column: 4, scope: !4735)
!5008 = !DILocation(line: 0, scope: !4735)
!5009 = !DILocation(line: 1836, column: 4, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4735, file: !2368, line: 1836, column: 4)
!5011 = !DILocation(line: 1837, column: 4, scope: !4736)
!5012 = distinct !{!5012, !5006, !5013}
!5013 = !DILocation(line: 1838, column: 3, scope: !4624)
!5014 = !DILocation(line: 1844, column: 1, scope: !4597)
!5015 = distinct !DISubprogram(name: "extract_conversion", scope: !2368, file: !2368, line: 642, type: !5016, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5018)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!133, !4672, !133}
!5018 = !{!5019, !5020}
!5019 = !DILocalVariable(name: "conv", arg: 1, scope: !5015, file: !2368, line: 642, type: !4672)
!5020 = !DILocalVariable(name: "sp", arg: 2, scope: !5015, file: !2368, line: 643, type: !133)
!5021 = !DILocation(line: 0, scope: !5015)
!5022 = !DILocation(line: 645, column: 10, scope: !5015)
!5023 = !DILocation(line: 653, column: 2, scope: !5015)
!5024 = !DILocation(line: 654, column: 6, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5015, file: !2368, line: 654, column: 6)
!5026 = !DILocation(line: 654, column: 10, scope: !5025)
!5027 = !DILocation(line: 654, column: 6, scope: !5015)
!5028 = !DILocation(line: 655, column: 24, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !2368, line: 654, column: 18)
!5030 = !DILocation(line: 655, column: 19, scope: !5029)
!5031 = !DILocation(line: 656, column: 3, scope: !5029)
!5032 = !DILocation(line: 659, column: 7, scope: !5015)
!5033 = !DILocation(line: 660, column: 7, scope: !5015)
!5034 = !DILocation(line: 661, column: 7, scope: !5015)
!5035 = !DILocation(line: 662, column: 7, scope: !5015)
!5036 = !DILocation(line: 663, column: 7, scope: !5015)
!5037 = !DILocation(line: 665, column: 2, scope: !5015)
!5038 = !DILocation(line: 666, column: 1, scope: !5015)
!5039 = distinct !DISubprogram(name: "outs", scope: !2368, file: !2368, line: 1319, type: !5040, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5042)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{!118, !3550, !117, !133, !133}
!5042 = !{!5043, !5044, !5045, !5046, !5047, !5048}
!5043 = !DILocalVariable(name: "out", arg: 1, scope: !5039, file: !2368, line: 1319, type: !3550)
!5044 = !DILocalVariable(name: "ctx", arg: 2, scope: !5039, file: !2368, line: 1320, type: !117)
!5045 = !DILocalVariable(name: "sp", arg: 3, scope: !5039, file: !2368, line: 1321, type: !133)
!5046 = !DILocalVariable(name: "ep", arg: 4, scope: !5039, file: !2368, line: 1322, type: !133)
!5047 = !DILocalVariable(name: "count", scope: !5039, file: !2368, line: 1324, type: !323)
!5048 = !DILocalVariable(name: "rc", scope: !5049, file: !2368, line: 1327, type: !118)
!5049 = distinct !DILexicalBlock(scope: !5039, file: !2368, line: 1326, column: 45)
!5050 = !DILocation(line: 0, scope: !5039)
!5051 = !DILocation(line: 1326, column: 2, scope: !5039)
!5052 = !DILocation(line: 1324, column: 9, scope: !5039)
!5053 = !DILocation(line: 1326, column: 13, scope: !5039)
!5054 = !DILocation(line: 1326, column: 19, scope: !5039)
!5055 = !DILocation(line: 1327, column: 21, scope: !5049)
!5056 = !DILocation(line: 1326, column: 36, scope: !5039)
!5057 = !DILocation(line: 1326, column: 39, scope: !5039)
!5058 = !DILocation(line: 1327, column: 24, scope: !5049)
!5059 = !DILocation(line: 1327, column: 16, scope: !5049)
!5060 = !DILocation(line: 1327, column: 12, scope: !5049)
!5061 = !DILocation(line: 0, scope: !5049)
!5062 = !DILocation(line: 1329, column: 10, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5049, file: !2368, line: 1329, column: 7)
!5064 = !DILocation(line: 1329, column: 7, scope: !5049)
!5065 = distinct !{!5065, !5051, !5066}
!5066 = !DILocation(line: 1333, column: 2, scope: !5039)
!5067 = !DILocation(line: 1336, column: 1, scope: !5039)
!5068 = distinct !DISubprogram(name: "encode_uint", scope: !2368, file: !2368, line: 788, type: !5069, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!1060, !2390, !4672, !1060, !133}
!5071 = !{!5072, !5073, !5074, !5075, !5076, !5077, !5079, !5080}
!5072 = !DILocalVariable(name: "value", arg: 1, scope: !5068, file: !2368, line: 788, type: !2390)
!5073 = !DILocalVariable(name: "conv", arg: 2, scope: !5068, file: !2368, line: 789, type: !4672)
!5074 = !DILocalVariable(name: "bps", arg: 3, scope: !5068, file: !2368, line: 790, type: !1060)
!5075 = !DILocalVariable(name: "bpe", arg: 4, scope: !5068, file: !2368, line: 791, type: !133)
!5076 = !DILocalVariable(name: "upcase", scope: !5068, file: !2368, line: 793, type: !146)
!5077 = !DILocalVariable(name: "radix", scope: !5068, file: !2368, line: 794, type: !5078)
!5078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5079 = !DILocalVariable(name: "bp", scope: !5068, file: !2368, line: 795, type: !1060)
!5080 = !DILocalVariable(name: "lsv", scope: !5081, file: !2368, line: 798, type: !32)
!5081 = distinct !DILexicalBlock(scope: !5068, file: !2368, line: 797, column: 5)
!5082 = !DILocation(line: 0, scope: !5068)
!5083 = !DILocation(line: 793, column: 35, scope: !5068)
!5084 = !DILocation(line: 793, column: 24, scope: !5068)
!5085 = !DILocation(line: 793, column: 16, scope: !5068)
!5086 = !DILocation(line: 794, column: 29, scope: !5068)
!5087 = !DILocation(line: 795, column: 24, scope: !5068)
!5088 = !DILocation(line: 795, column: 17, scope: !5068)
!5089 = !DILocation(line: 797, column: 2, scope: !5068)
!5090 = !DILocation(line: 802, column: 9, scope: !5081)
!5091 = !DILocation(line: 798, column: 22, scope: !5081)
!5092 = !DILocation(line: 0, scope: !5081)
!5093 = !DILocation(line: 800, column: 16, scope: !5081)
!5094 = !DILocation(line: 800, column: 11, scope: !5081)
!5095 = !DILocation(line: 800, column: 4, scope: !5081)
!5096 = !DILocation(line: 800, column: 9, scope: !5081)
!5097 = !DILocation(line: 803, column: 18, scope: !5068)
!5098 = !DILocation(line: 803, column: 24, scope: !5068)
!5099 = !DILocation(line: 803, column: 2, scope: !5081)
!5100 = distinct !{!5100, !5089, !5101}
!5101 = !DILocation(line: 803, column: 37, scope: !5068)
!5102 = !DILocation(line: 808, column: 12, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5068, file: !2368, line: 808, column: 6)
!5104 = !DILocation(line: 808, column: 6, scope: !5068)
!5105 = !DILocation(line: 809, column: 7, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !2368, line: 808, column: 23)
!5107 = !DILocation(line: 813, column: 3, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !2368, line: 811, column: 27)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !2368, line: 811, column: 14)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !2368, line: 809, column: 7)
!5111 = !DILocation(line: 0, scope: !5110)
!5112 = !DILocation(line: 818, column: 2, scope: !5068)
!5113 = distinct !DISubprogram(name: "store_count", scope: !2368, file: !2368, line: 1280, type: !5114, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5118)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{null, !5116, !117, !118}
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 32)
!5117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4639)
!5118 = !{!5119, !5120, !5121}
!5119 = !DILocalVariable(name: "conv", arg: 1, scope: !5113, file: !2368, line: 1280, type: !5116)
!5120 = !DILocalVariable(name: "dp", arg: 2, scope: !5113, file: !2368, line: 1281, type: !117)
!5121 = !DILocalVariable(name: "count", arg: 3, scope: !5113, file: !2368, line: 1282, type: !118)
!5122 = !DILocation(line: 0, scope: !5113)
!5123 = !DILocation(line: 1284, column: 38, scope: !5113)
!5124 = !DILocation(line: 1284, column: 2, scope: !5113)
!5125 = !DILocation(line: 1286, column: 4, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5113, file: !2368, line: 1284, column: 50)
!5127 = !DILocation(line: 1286, column: 14, scope: !5126)
!5128 = !DILocation(line: 1287, column: 3, scope: !5126)
!5129 = !DILocation(line: 1289, column: 24, scope: !5126)
!5130 = !DILocation(line: 1289, column: 22, scope: !5126)
!5131 = !DILocation(line: 1290, column: 3, scope: !5126)
!5132 = !DILocation(line: 1292, column: 18, scope: !5126)
!5133 = !DILocation(line: 1292, column: 4, scope: !5126)
!5134 = !DILocation(line: 1292, column: 16, scope: !5126)
!5135 = !DILocation(line: 1293, column: 3, scope: !5126)
!5136 = !DILocation(line: 1295, column: 4, scope: !5126)
!5137 = !DILocation(line: 1295, column: 15, scope: !5126)
!5138 = !DILocation(line: 1296, column: 3, scope: !5126)
!5139 = !DILocation(line: 1298, column: 22, scope: !5126)
!5140 = !DILocation(line: 1298, column: 4, scope: !5126)
!5141 = !DILocation(line: 1298, column: 20, scope: !5126)
!5142 = !DILocation(line: 1299, column: 3, scope: !5126)
!5143 = !DILocation(line: 1301, column: 21, scope: !5126)
!5144 = !DILocation(line: 1301, column: 4, scope: !5126)
!5145 = !DILocation(line: 1301, column: 19, scope: !5126)
!5146 = !DILocation(line: 1302, column: 3, scope: !5126)
!5147 = !DILocation(line: 1304, column: 4, scope: !5126)
!5148 = !DILocation(line: 1304, column: 17, scope: !5126)
!5149 = !DILocation(line: 1305, column: 3, scope: !5126)
!5150 = !DILocation(line: 1307, column: 4, scope: !5126)
!5151 = !DILocation(line: 1307, column: 20, scope: !5126)
!5152 = !DILocation(line: 1308, column: 3, scope: !5126)
!5153 = !DILocation(line: 1316, column: 1, scope: !5113)
!5154 = distinct !DISubprogram(name: "isupper", scope: !5155, file: !5155, line: 16, type: !433, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5156)
!5155 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5156 = !{!5157}
!5157 = !DILocalVariable(name: "a", arg: 1, scope: !5154, file: !5155, line: 16, type: !118)
!5158 = !DILocation(line: 0, scope: !5154)
!5159 = !DILocation(line: 18, column: 29, scope: !5154)
!5160 = !DILocation(line: 18, column: 45, scope: !5154)
!5161 = !DILocation(line: 18, column: 2, scope: !5154)
!5162 = distinct !DISubprogram(name: "conversion_radix", scope: !2368, file: !2368, line: 761, type: !5163, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5165)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!323, !135}
!5165 = !{!5166}
!5166 = !DILocalVariable(name: "specifier", arg: 1, scope: !5162, file: !2368, line: 761, type: !135)
!5167 = !DILocation(line: 0, scope: !5162)
!5168 = !DILocation(line: 763, column: 2, scope: !5162)
!5169 = !DILocation(line: 770, column: 3, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5162, file: !2368, line: 763, column: 21)
!5171 = !DILocation(line: 774, column: 3, scope: !5170)
!5172 = !DILocation(line: 0, scope: !5170)
!5173 = !DILocation(line: 776, column: 1, scope: !5162)
!5174 = distinct !DISubprogram(name: "extract_flags", scope: !2368, file: !2368, line: 339, type: !5016, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5175)
!5175 = !{!5176, !5177, !5178}
!5176 = !DILocalVariable(name: "conv", arg: 1, scope: !5174, file: !2368, line: 339, type: !4672)
!5177 = !DILocalVariable(name: "sp", arg: 2, scope: !5174, file: !2368, line: 340, type: !133)
!5178 = !DILocalVariable(name: "loop", scope: !5174, file: !2368, line: 342, type: !146)
!5179 = !DILocation(line: 0, scope: !5174)
!5180 = !DILocation(line: 344, column: 2, scope: !5174)
!5181 = !DILocation(line: 345, column: 11, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5174, file: !2368, line: 344, column: 5)
!5183 = !DILocation(line: 345, column: 3, scope: !5182)
!5184 = !DILocation(line: 351, column: 4, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5182, file: !2368, line: 345, column: 16)
!5186 = !DILocation(line: 354, column: 4, scope: !5185)
!5187 = !DILocation(line: 357, column: 4, scope: !5185)
!5188 = !DILocation(line: 360, column: 4, scope: !5185)
!5189 = !DILocation(line: 0, scope: !5185)
!5190 = !DILocation(line: 370, column: 12, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5174, file: !2368, line: 370, column: 6)
!5192 = !DILocation(line: 370, column: 22, scope: !5191)
!5193 = !DILocation(line: 371, column: 19, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5191, file: !2368, line: 370, column: 42)
!5195 = !DILocation(line: 372, column: 2, scope: !5194)
!5196 = !DILocation(line: 376, column: 2, scope: !5174)
!5197 = distinct !DISubprogram(name: "extract_width", scope: !2368, file: !2368, line: 388, type: !5016, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5198)
!5198 = !{!5199, !5200, !5201, !5202}
!5199 = !DILocalVariable(name: "conv", arg: 1, scope: !5197, file: !2368, line: 388, type: !4672)
!5200 = !DILocalVariable(name: "sp", arg: 2, scope: !5197, file: !2368, line: 389, type: !133)
!5201 = !DILocalVariable(name: "wp", scope: !5197, file: !2368, line: 398, type: !133)
!5202 = !DILocalVariable(name: "width", scope: !5197, file: !2368, line: 399, type: !323)
!5203 = !DILocation(line: 0, scope: !5197)
!5204 = !DILocation(line: 391, column: 8, scope: !5197)
!5205 = !DILocation(line: 391, column: 22, scope: !5197)
!5206 = !DILocation(line: 393, column: 6, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5197, file: !2368, line: 393, column: 6)
!5208 = !DILocation(line: 393, column: 10, scope: !5207)
!5209 = !DILocation(line: 393, column: 6, scope: !5197)
!5210 = !DILocation(line: 394, column: 20, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !2368, line: 393, column: 18)
!5212 = !DILocation(line: 395, column: 10, scope: !5211)
!5213 = !DILocation(line: 395, column: 3, scope: !5211)
!5214 = !DILocation(line: 399, column: 17, scope: !5197)
!5215 = !DILocation(line: 401, column: 6, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5197, file: !2368, line: 401, column: 6)
!5217 = !DILocation(line: 401, column: 9, scope: !5216)
!5218 = !DILocation(line: 401, column: 6, scope: !5197)
!5219 = !DILocation(line: 402, column: 23, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !2368, line: 401, column: 16)
!5221 = !DILocation(line: 403, column: 9, scope: !5220)
!5222 = !DILocation(line: 403, column: 21, scope: !5220)
!5223 = !DILocation(line: 405, column: 11, scope: !5220)
!5224 = !DILocation(line: 404, column: 21, scope: !5220)
!5225 = !DILocation(line: 406, column: 2, scope: !5220)
!5226 = !DILocation(line: 409, column: 1, scope: !5197)
!5227 = distinct !DISubprogram(name: "extract_prec", scope: !2368, file: !2368, line: 420, type: !5016, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5228)
!5228 = !{!5229, !5230, !5231}
!5229 = !DILocalVariable(name: "conv", arg: 1, scope: !5227, file: !2368, line: 420, type: !4672)
!5230 = !DILocalVariable(name: "sp", arg: 2, scope: !5227, file: !2368, line: 421, type: !133)
!5231 = !DILocalVariable(name: "prec", scope: !5227, file: !2368, line: 435, type: !323)
!5232 = !DILocation(line: 0, scope: !5227)
!5233 = !DILocation(line: 423, column: 24, scope: !5227)
!5234 = !DILocation(line: 423, column: 28, scope: !5227)
!5235 = !DILocation(line: 423, column: 8, scope: !5227)
!5236 = !DILocation(line: 423, column: 21, scope: !5227)
!5237 = !DILocation(line: 425, column: 6, scope: !5227)
!5238 = !DILocation(line: 428, column: 2, scope: !5227)
!5239 = !DILocation(line: 430, column: 6, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5227, file: !2368, line: 430, column: 6)
!5241 = !DILocation(line: 430, column: 10, scope: !5240)
!5242 = !DILocation(line: 430, column: 6, scope: !5227)
!5243 = !DILocation(line: 431, column: 19, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !2368, line: 430, column: 18)
!5245 = !DILocation(line: 432, column: 10, scope: !5244)
!5246 = !DILocation(line: 432, column: 3, scope: !5244)
!5247 = !DILocation(line: 435, column: 16, scope: !5227)
!5248 = !DILocation(line: 437, column: 8, scope: !5227)
!5249 = !DILocation(line: 437, column: 19, scope: !5227)
!5250 = !DILocation(line: 439, column: 10, scope: !5227)
!5251 = !DILocation(line: 438, column: 20, scope: !5227)
!5252 = !DILocation(line: 441, column: 9, scope: !5227)
!5253 = !DILocation(line: 442, column: 1, scope: !5227)
!5254 = distinct !DISubprogram(name: "extract_length", scope: !2368, file: !2368, line: 453, type: !5016, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5255)
!5255 = !{!5256, !5257}
!5256 = !DILocalVariable(name: "conv", arg: 1, scope: !5254, file: !2368, line: 453, type: !4672)
!5257 = !DILocalVariable(name: "sp", arg: 2, scope: !5254, file: !2368, line: 454, type: !133)
!5258 = !DILocation(line: 0, scope: !5254)
!5259 = !DILocation(line: 456, column: 10, scope: !5254)
!5260 = !DILocation(line: 456, column: 2, scope: !5254)
!5261 = !DILocation(line: 458, column: 8, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !2368, line: 458, column: 7)
!5263 = distinct !DILexicalBlock(scope: !5254, file: !2368, line: 456, column: 15)
!5264 = !DILocation(line: 458, column: 7, scope: !5262)
!5265 = !DILocation(line: 458, column: 13, scope: !5262)
!5266 = !DILocation(line: 0, scope: !5262)
!5267 = !DILocation(line: 458, column: 7, scope: !5263)
!5268 = !DILocation(line: 459, column: 21, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5262, file: !2368, line: 458, column: 21)
!5270 = !DILocation(line: 460, column: 4, scope: !5269)
!5271 = !DILocation(line: 461, column: 3, scope: !5269)
!5272 = !DILocation(line: 462, column: 21, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5262, file: !2368, line: 461, column: 10)
!5274 = !DILocation(line: 466, column: 8, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5263, file: !2368, line: 466, column: 7)
!5276 = !DILocation(line: 466, column: 7, scope: !5275)
!5277 = !DILocation(line: 466, column: 13, scope: !5275)
!5278 = !DILocation(line: 0, scope: !5275)
!5279 = !DILocation(line: 466, column: 7, scope: !5263)
!5280 = !DILocation(line: 467, column: 21, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5275, file: !2368, line: 466, column: 21)
!5282 = !DILocation(line: 468, column: 4, scope: !5281)
!5283 = !DILocation(line: 469, column: 3, scope: !5281)
!5284 = !DILocation(line: 470, column: 21, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5275, file: !2368, line: 469, column: 10)
!5286 = !DILocation(line: 474, column: 9, scope: !5263)
!5287 = !DILocation(line: 474, column: 20, scope: !5263)
!5288 = !DILocation(line: 475, column: 3, scope: !5263)
!5289 = !DILocation(line: 476, column: 3, scope: !5263)
!5290 = !DILocation(line: 478, column: 9, scope: !5263)
!5291 = !DILocation(line: 478, column: 20, scope: !5263)
!5292 = !DILocation(line: 479, column: 3, scope: !5263)
!5293 = !DILocation(line: 480, column: 3, scope: !5263)
!5294 = !DILocation(line: 482, column: 9, scope: !5263)
!5295 = !DILocation(line: 482, column: 20, scope: !5263)
!5296 = !DILocation(line: 483, column: 3, scope: !5263)
!5297 = !DILocation(line: 484, column: 3, scope: !5263)
!5298 = !DILocation(line: 486, column: 9, scope: !5263)
!5299 = !DILocation(line: 486, column: 20, scope: !5263)
!5300 = !DILocation(line: 487, column: 3, scope: !5263)
!5301 = !DILocation(line: 492, column: 21, scope: !5263)
!5302 = !DILocation(line: 493, column: 3, scope: !5263)
!5303 = !DILocation(line: 495, column: 9, scope: !5263)
!5304 = !DILocation(line: 495, column: 20, scope: !5263)
!5305 = !DILocation(line: 496, column: 3, scope: !5263)
!5306 = !DILocation(line: 498, column: 2, scope: !5254)
!5307 = distinct !DISubprogram(name: "extract_specifier", scope: !2368, file: !2368, line: 513, type: !5016, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5308)
!5308 = !{!5309, !5310, !5311, !5312}
!5309 = !DILocalVariable(name: "conv", arg: 1, scope: !5307, file: !2368, line: 513, type: !4672)
!5310 = !DILocalVariable(name: "sp", arg: 2, scope: !5307, file: !2368, line: 514, type: !133)
!5311 = !DILocalVariable(name: "unsupported", scope: !5307, file: !2368, line: 516, type: !146)
!5312 = !DILabel(scope: !5313, name: "int_conv", file: !2368, line: 526)
!5313 = distinct !DILexicalBlock(scope: !5307, file: !2368, line: 520, column: 27)
!5314 = !DILocation(line: 0, scope: !5307)
!5315 = !DILocation(line: 518, column: 20, scope: !5307)
!5316 = !DILocation(line: 518, column: 8, scope: !5307)
!5317 = !DILocation(line: 518, column: 18, scope: !5307)
!5318 = !DILocation(line: 520, column: 2, scope: !5307)
!5319 = !DILocation(line: 525, column: 3, scope: !5313)
!5320 = !DILocation(line: 0, scope: !5313)
!5321 = !DILocation(line: 526, column: 1, scope: !5313)
!5322 = !DILocation(line: 528, column: 24, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5313, file: !2368, line: 528, column: 7)
!5324 = !DILocation(line: 528, column: 7, scope: !5313)
!5325 = !DILocation(line: 535, column: 23, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5313, file: !2368, line: 535, column: 7)
!5327 = !DILocation(line: 535, column: 7, scope: !5313)
!5328 = !DILocation(line: 536, column: 36, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5326, file: !2368, line: 535, column: 31)
!5330 = !DILocation(line: 537, column: 3, scope: !5329)
!5331 = !DILocation(line: 570, column: 9, scope: !5313)
!5332 = !DILocation(line: 570, column: 23, scope: !5313)
!5333 = !DILocation(line: 575, column: 4, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !2368, line: 573, column: 48)
!5335 = distinct !DILexicalBlock(scope: !5313, file: !2368, line: 573, column: 7)
!5336 = !DILocation(line: 603, column: 9, scope: !5313)
!5337 = !DILocation(line: 603, column: 23, scope: !5313)
!5338 = !DILocation(line: 605, column: 24, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5313, file: !2368, line: 605, column: 7)
!5340 = !DILocation(line: 605, column: 7, scope: !5313)
!5341 = !DILocation(line: 612, column: 9, scope: !5313)
!5342 = !DILocation(line: 612, column: 23, scope: !5313)
!5343 = !DILocation(line: 619, column: 24, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5313, file: !2368, line: 619, column: 7)
!5345 = !DILocation(line: 619, column: 7, scope: !5313)
!5346 = !DILocation(line: 625, column: 9, scope: !5313)
!5347 = !DILocation(line: 625, column: 17, scope: !5313)
!5348 = !DILocation(line: 626, column: 3, scope: !5313)
!5349 = !DILocation(line: 629, column: 20, scope: !5307)
!5350 = !DILocation(line: 629, column: 8, scope: !5307)
!5351 = !DILocation(line: 518, column: 23, scope: !5307)
!5352 = !DILocation(line: 631, column: 2, scope: !5307)
!5353 = distinct !DISubprogram(name: "extract_decimal", scope: !2368, file: !2368, line: 318, type: !5354, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5357)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!323, !5356}
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!5357 = !{!5358, !5359, !5360}
!5358 = !DILocalVariable(name: "str", arg: 1, scope: !5353, file: !2368, line: 318, type: !5356)
!5359 = !DILocalVariable(name: "sp", scope: !5353, file: !2368, line: 320, type: !133)
!5360 = !DILocalVariable(name: "val", scope: !5353, file: !2368, line: 321, type: !323)
!5361 = !DILocation(line: 0, scope: !5353)
!5362 = !DILocation(line: 320, column: 19, scope: !5353)
!5363 = !DILocation(line: 323, column: 37, scope: !5353)
!5364 = !DILocation(line: 323, column: 17, scope: !5353)
!5365 = !DILocation(line: 323, column: 9, scope: !5353)
!5366 = !DILocation(line: 323, column: 2, scope: !5353)
!5367 = !DILocation(line: 324, column: 13, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5353, file: !2368, line: 323, column: 43)
!5369 = !DILocation(line: 324, column: 24, scope: !5368)
!5370 = !DILocation(line: 324, column: 19, scope: !5368)
!5371 = !DILocation(line: 324, column: 27, scope: !5368)
!5372 = distinct !{!5372, !5366, !5373}
!5373 = !DILocation(line: 325, column: 2, scope: !5353)
!5374 = !DILocation(line: 326, column: 7, scope: !5353)
!5375 = !DILocation(line: 327, column: 2, scope: !5353)
!5376 = distinct !DISubprogram(name: "isdigit", scope: !5155, file: !5155, line: 43, type: !433, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !5377)
!5377 = !{!5378}
!5378 = !DILocalVariable(name: "a", arg: 1, scope: !5376, file: !5155, line: 43, type: !118)
!5379 = !DILocation(line: 0, scope: !5376)
!5380 = !DILocation(line: 45, column: 29, scope: !5376)
!5381 = !DILocation(line: 45, column: 45, scope: !5376)
!5382 = !DILocation(line: 45, column: 2, scope: !5376)
!5383 = distinct !DISubprogram(name: "assert_post_action", scope: !5384, file: !5384, line: 26, type: !5385, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5387)
!5384 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5385 = !DISubroutineType(types: !5386)
!5386 = !{null, !133, !32}
!5387 = !{!5388, !5389}
!5388 = !DILocalVariable(name: "file", arg: 1, scope: !5383, file: !5384, line: 26, type: !133)
!5389 = !DILocalVariable(name: "line", arg: 2, scope: !5383, file: !5384, line: 26, type: !32)
!5390 = !DILocation(line: 0, scope: !5383)
!5391 = !DILocation(line: 43, column: 2, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5383, file: !5384, line: 43, column: 2)
!5393 = !{i64 2151045771, i64 2151045787, i64 2151045813, i64 2151045841, i64 2151045861}
!5394 = !DILocation(line: 44, column: 1, scope: !5383)
!5395 = distinct !DISubprogram(name: "assert_print", scope: !5384, file: !5384, line: 46, type: !3582, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5396)
!5396 = !{!5397, !5398}
!5397 = !DILocalVariable(name: "fmt", arg: 1, scope: !5395, file: !5384, line: 46, type: !133)
!5398 = !DILocalVariable(name: "ap", scope: !5395, file: !5384, line: 48, type: !5399)
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3516, line: 99, baseType: !5400)
!5400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3516, line: 40, baseType: !5401)
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5384, baseType: !5402)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5403)
!5403 = !{!5404}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5402, file: !5384, line: 48, baseType: !117, size: 32)
!5405 = !DILocation(line: 0, scope: !5395)
!5406 = !DILocation(line: 48, column: 2, scope: !5395)
!5407 = !DILocation(line: 48, column: 10, scope: !5395)
!5408 = !DILocation(line: 50, column: 2, scope: !5395)
!5409 = !DILocation(line: 52, column: 2, scope: !5395)
!5410 = !DILocation(line: 54, column: 2, scope: !5395)
!5411 = !DILocation(line: 55, column: 1, scope: !5395)
!5412 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5413, file: !5413, line: 9, type: !359, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !1933)
!5413 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!5414 = !DILocation(line: 11, column: 1, scope: !5412)
!5415 = !{i64 2147556035, i64 2147556078, i64 2147556118}
!5416 = !DILocation(line: 12, column: 1, scope: !5412)
!5417 = !{i64 2147560262, i64 2147560305, i64 2147560345}
!5418 = !DILocation(line: 13, column: 1, scope: !5412)
!5419 = !{i64 2147560471, i64 2147560514, i64 2147560554}
!5420 = !DILocation(line: 14, column: 1, scope: !5412)
!5421 = !{i64 2147560688, i64 2147560731, i64 2147560771}
!5422 = !DILocation(line: 15, column: 1, scope: !5412)
!5423 = !{i64 2147560857, i64 2147560900, i64 2147560940}
!5424 = !DILocation(line: 16, column: 1, scope: !5412)
!5425 = !{i64 2147561042, i64 2147561085, i64 2147561125}
!5426 = !DILocation(line: 17, column: 1, scope: !5412)
!5427 = !{i64 2147561259, i64 2147561302, i64 2147561342}
!5428 = !DILocation(line: 18, column: 1, scope: !5412)
!5429 = !{i64 2147561422, i64 2147561465, i64 2147561505}
!5430 = !DILocation(line: 19, column: 1, scope: !5412)
!5431 = !{i64 2147561606, i64 2147561649, i64 2147561689}
!5432 = !DILocation(line: 20, column: 1, scope: !5412)
!5433 = !{i64 2147561786, i64 2147561829, i64 2147561869}
!5434 = !DILocation(line: 21, column: 1, scope: !5412)
!5435 = !{i64 2147562029, i64 2147562072, i64 2147562112}
!5436 = !DILocation(line: 22, column: 1, scope: !5412)
!5437 = !{i64 2147562265, i64 2147562308, i64 2147562348}
!5438 = !DILocation(line: 23, column: 1, scope: !5412)
!5439 = !{i64 2147562468, i64 2147562511, i64 2147562551}
!5440 = !DILocation(line: 24, column: 1, scope: !5412)
!5441 = !{i64 2147562671, i64 2147562714, i64 2147562754}
!5442 = !DILocation(line: 25, column: 1, scope: !5412)
!5443 = !{i64 2147562870, i64 2147562913, i64 2147562953}
!5444 = !DILocation(line: 26, column: 1, scope: !5412)
!5445 = !{i64 2147563045, i64 2147563088, i64 2147563128}
!5446 = !DILocation(line: 27, column: 1, scope: !5412)
!5447 = !{i64 2147563255, i64 2147563298, i64 2147563338}
!5448 = !DILocation(line: 28, column: 1, scope: !5412)
!5449 = !{i64 2147563459, i64 2147563502, i64 2147563542}
!5450 = !DILocation(line: 29, column: 1, scope: !5412)
!5451 = !{i64 2147563652, i64 2147563695, i64 2147563735}
!5452 = !DILocation(line: 30, column: 1, scope: !5412)
!5453 = !{i64 2147563854, i64 2147563897, i64 2147563937}
!5454 = !DILocation(line: 31, column: 1, scope: !5412)
!5455 = !{i64 2147564081, i64 2147564124, i64 2147564164}
!5456 = !DILocation(line: 32, column: 1, scope: !5412)
!5457 = !{i64 2147564296, i64 2147564339, i64 2147564379}
!5458 = !DILocation(line: 33, column: 1, scope: !5412)
!5459 = !{i64 2147564483, i64 2147564526, i64 2147564566}
!5460 = !DILocation(line: 34, column: 1, scope: !5412)
!5461 = !{i64 2147564655, i64 2147564698, i64 2147564738}
!5462 = !DILocation(line: 35, column: 1, scope: !5412)
!5463 = !{i64 2147564857, i64 2147564900, i64 2147564940}
!5464 = !DILocation(line: 36, column: 1, scope: !5412)
!5465 = !{i64 2147565056, i64 2147565099, i64 2147565139}
!5466 = !DILocation(line: 37, column: 1, scope: !5412)
!5467 = !{i64 2147565231, i64 2147565274, i64 2147565314}
!5468 = !DILocation(line: 38, column: 1, scope: !5412)
!5469 = !{i64 2147565484, i64 2147565527, i64 2147565567}
!5470 = !DILocation(line: 39, column: 1, scope: !5412)
!5471 = !{i64 2147565722, i64 2147565765, i64 2147565805}
!5472 = !DILocation(line: 40, column: 1, scope: !5412)
!5473 = !{i64 2147565957, i64 2147566000, i64 2147566040}
!5474 = !DILocation(line: 41, column: 1, scope: !5412)
!5475 = !{i64 2147566183, i64 2147566226, i64 2147566266}
!5476 = !DILocation(line: 42, column: 1, scope: !5412)
!5477 = !{i64 2147566418, i64 2147566461, i64 2147566501}
!5478 = !DILocation(line: 43, column: 1, scope: !5412)
!5479 = !{i64 2147566653, i64 2147566696, i64 2147566736}
!5480 = !DILocation(line: 44, column: 1, scope: !5412)
!5481 = !{i64 2147566894, i64 2147566937, i64 2147566977}
!5482 = !DILocation(line: 45, column: 1, scope: !5412)
!5483 = !{i64 2147567129, i64 2147567172, i64 2147567212}
!5484 = !DILocation(line: 46, column: 1, scope: !5412)
!5485 = !{i64 2147567358, i64 2147567401, i64 2147567441}
!5486 = !DILocation(line: 47, column: 1, scope: !5412)
!5487 = !{i64 2147567593, i64 2147567636, i64 2147567676}
!5488 = !DILocation(line: 48, column: 1, scope: !5412)
!5489 = !{i64 2147567843, i64 2147567886, i64 2147567926}
!5490 = !DILocation(line: 49, column: 1, scope: !5412)
!5491 = !{i64 2147568072, i64 2147568115, i64 2147568155}
!5492 = !DILocation(line: 50, column: 1, scope: !5412)
!5493 = !{i64 2147568280, i64 2147568323, i64 2147568363}
!5494 = !DILocation(line: 51, column: 1, scope: !5412)
!5495 = !{i64 2147568491, i64 2147568534, i64 2147568574}
!5496 = !DILocation(line: 52, column: 1, scope: !5412)
!5497 = !{i64 2147568726, i64 2147568769, i64 2147568809}
!5498 = !DILocation(line: 53, column: 1, scope: !5412)
!5499 = !{i64 2147568955, i64 2147568998, i64 2147569038}
!5500 = !DILocation(line: 54, column: 1, scope: !5412)
!5501 = !{i64 2147573254, i64 2147573297, i64 2147573337}
!5502 = !DILocation(line: 55, column: 1, scope: !5412)
!5503 = !{i64 2147573486, i64 2147573529, i64 2147573569}
!5504 = !DILocation(line: 56, column: 1, scope: !5412)
!5505 = !{i64 2147573712, i64 2147573755, i64 2147573795}
!5506 = !DILocation(line: 57, column: 1, scope: !5412)
!5507 = !{i64 2147573929, i64 2147573972, i64 2147574012}
!5508 = !DILocation(line: 58, column: 1, scope: !5412)
!5509 = !{i64 2147574161, i64 2147574204, i64 2147574244}
!5510 = !DILocation(line: 59, column: 1, scope: !5412)
!5511 = !{i64 2147574387, i64 2147574430, i64 2147574470}
!5512 = !DILocation(line: 60, column: 1, scope: !5412)
!5513 = !{i64 2147574601, i64 2147574644, i64 2147574684}
!5514 = !DILocation(line: 61, column: 1, scope: !5412)
!5515 = !{i64 2147574821, i64 2147574864, i64 2147574904}
!5516 = !DILocation(line: 62, column: 1, scope: !5412)
!5517 = !{i64 2147575053, i64 2147575096, i64 2147575136}
!5518 = !DILocation(line: 63, column: 1, scope: !5412)
!5519 = !{i64 2147575261, i64 2147575304, i64 2147575344}
!5520 = !DILocation(line: 64, column: 1, scope: !5412)
!5521 = !{i64 2147575466, i64 2147575509, i64 2147575549}
!5522 = !DILocation(line: 65, column: 1, scope: !5412)
!5523 = !{i64 2147575683, i64 2147575726, i64 2147575766}
!5524 = !DILocation(line: 66, column: 1, scope: !5412)
!5525 = !{i64 2147575897, i64 2147575940, i64 2147575980}
!5526 = !DILocation(line: 67, column: 1, scope: !5412)
!5527 = !{i64 2147576123, i64 2147576166, i64 2147576206}
!5528 = !DILocation(line: 68, column: 1, scope: !5412)
!5529 = !{i64 2147576343, i64 2147576386, i64 2147576426}
!5530 = !DILocation(line: 69, column: 1, scope: !5412)
!5531 = !{i64 2147576548, i64 2147576591, i64 2147576631}
!5532 = !DILocation(line: 70, column: 1, scope: !5412)
!5533 = !{i64 2147576780, i64 2147576823, i64 2147576863}
!5534 = !DILocation(line: 71, column: 1, scope: !5412)
!5535 = !{i64 2147577015, i64 2147577058, i64 2147577098}
!5536 = !DILocation(line: 72, column: 1, scope: !5412)
!5537 = !{i64 2147577265, i64 2147577308, i64 2147577348}
!5538 = !DILocation(line: 73, column: 1, scope: !5412)
!5539 = !{i64 2147577515, i64 2147577558, i64 2147577598}
!5540 = !DILocation(line: 74, column: 1, scope: !5412)
!5541 = !{i64 2147577753, i64 2147577796, i64 2147577836}
!5542 = !DILocation(line: 75, column: 1, scope: !5412)
!5543 = !{i64 2147577964, i64 2147578007, i64 2147578047}
!5544 = !DILocation(line: 76, column: 1, scope: !5412)
!5545 = !{i64 2147578181, i64 2147578224, i64 2147578264}
!5546 = !DILocation(line: 77, column: 1, scope: !5412)
!5547 = !{i64 2147578377, i64 2147578420, i64 2147578460}
!5548 = !DILocation(line: 78, column: 1, scope: !5412)
!5549 = !{i64 2147578579, i64 2147578622, i64 2147578662}
!5550 = !DILocation(line: 79, column: 1, scope: !5412)
!5551 = !{i64 2147578766, i64 2147578809, i64 2147578849}
!5552 = !DILocation(line: 80, column: 1, scope: !5412)
!5553 = !{i64 2147578956, i64 2147578999, i64 2147579039}
!5554 = !DILocation(line: 81, column: 1, scope: !5412)
!5555 = !{i64 2147579143, i64 2147579186, i64 2147579226}
!5556 = !DILocation(line: 82, column: 1, scope: !5412)
!5557 = !{i64 2147579339, i64 2147579382, i64 2147579422}
!5558 = !DILocation(line: 83, column: 1, scope: !5412)
!5559 = !{i64 2147579535, i64 2147579578, i64 2147579618}
!5560 = !DILocation(line: 84, column: 1, scope: !5412)
!5561 = !{i64 2147579746, i64 2147579789, i64 2147579829}
!5562 = !DILocation(line: 85, column: 1, scope: !5412)
!5563 = !{i64 2147579954, i64 2147579997, i64 2147580037}
!5564 = !DILocation(line: 86, column: 1, scope: !5412)
!5565 = !{i64 2147580138, i64 2147580181, i64 2147580221}
!5566 = !DILocation(line: 87, column: 1, scope: !5412)
!5567 = !{i64 2147580334, i64 2147580377, i64 2147580417}
!5568 = !DILocation(line: 88, column: 1, scope: !5412)
!5569 = !{i64 2147580527, i64 2147580570, i64 2147580610}
!5570 = !DILocation(line: 89, column: 1, scope: !5412)
!5571 = !{i64 2147580774, i64 2147580817, i64 2147580857}
!5572 = !DILocation(line: 90, column: 1, scope: !5412)
!5573 = !{i64 2147580997, i64 2147581040, i64 2147581080}
!5574 = !DILocation(line: 91, column: 1, scope: !5412)
!5575 = !{i64 2147581163, i64 2147581206, i64 2147581246}
!5576 = !DILocation(line: 92, column: 1, scope: !5412)
!5577 = !{i64 2147581347, i64 2147581390, i64 2147581430}
!5578 = !DILocation(line: 93, column: 1, scope: !5412)
!5579 = !{i64 2147581537, i64 2147581580, i64 2147581620}
!5580 = !DILocation(line: 94, column: 1, scope: !5412)
!5581 = !{i64 2147581721, i64 2147581764, i64 2147581804}
!5582 = !DILocation(line: 95, column: 1, scope: !5412)
!5583 = !{i64 2147581935, i64 2147581978, i64 2147582018}
!5584 = !DILocation(line: 96, column: 1, scope: !5412)
!5585 = !{i64 2147586207, i64 2147586250, i64 2147586290}
!5586 = !DILocation(line: 97, column: 1, scope: !5412)
!5587 = !{i64 2147586430, i64 2147586473, i64 2147586513}
!5588 = !DILocation(line: 98, column: 1, scope: !5412)
!5589 = !{i64 2147586614, i64 2147586657, i64 2147586697}
!5590 = !DILocation(line: 99, column: 1, scope: !5412)
!5591 = !{i64 2147586780, i64 2147586823, i64 2147586863}
!5592 = !DILocation(line: 100, column: 1, scope: !5412)
!5593 = !{i64 2147586961, i64 2147587004, i64 2147587044}
!5594 = !DILocation(line: 101, column: 1, scope: !5412)
!5595 = !{i64 2147587154, i64 2147587197, i64 2147587237}
!5596 = !DILocation(line: 102, column: 1, scope: !5412)
!5597 = !{i64 2147587380, i64 2147587423, i64 2147587463}
!5598 = !DILocation(line: 103, column: 1, scope: !5412)
!5599 = !{i64 2147587594, i64 2147587637, i64 2147587677}
!5600 = !DILocation(line: 104, column: 1, scope: !5412)
!5601 = !{i64 2147587820, i64 2147587863, i64 2147587903}
!5602 = !DILocation(line: 105, column: 1, scope: !5412)
!5603 = !{i64 2147588037, i64 2147588080, i64 2147588120}
!5604 = !DILocation(line: 106, column: 1, scope: !5412)
!5605 = !{i64 2147588314, i64 2147588357, i64 2147588397}
!5606 = !DILocation(line: 107, column: 1, scope: !5412)
!5607 = !{i64 2147588540, i64 2147588583, i64 2147588623}
!5608 = !DILocation(line: 108, column: 1, scope: !5412)
!5609 = !{i64 2147588748, i64 2147588791, i64 2147588831}
!5610 = !DILocation(line: 109, column: 1, scope: !5412)
!5611 = !{i64 2147588944, i64 2147588987, i64 2147589027}
!5612 = !DILocation(line: 110, column: 1, scope: !5412)
!5613 = !{i64 2147589209, i64 2147589252, i64 2147589292}
!5614 = !DILocation(line: 111, column: 1, scope: !5412)
!5615 = !{i64 2147589423, i64 2147589466, i64 2147589506}
!5616 = !DILocation(line: 112, column: 1, scope: !5412)
!5617 = !{i64 2147589586, i64 2147589629, i64 2147589669}
!5618 = !DILocation(line: 113, column: 1, scope: !5412)
!5619 = !{i64 2147589773, i64 2147589816, i64 2147589856}
!5620 = !DILocation(line: 114, column: 1, scope: !5412)
!5621 = !{i64 2147589966, i64 2147590009, i64 2147590049}
!5622 = !DILocation(line: 115, column: 1, scope: !5412)
!5623 = !{i64 2147590148, i64 2147590191, i64 2147590231}
!5624 = !DILocation(line: 116, column: 1, scope: !5412)
!5625 = !{i64 2147590362, i64 2147590405, i64 2147590445}
!5626 = !DILocation(line: 117, column: 1, scope: !5412)
!5627 = !{i64 2147590561, i64 2147590604, i64 2147590644}
!5628 = !DILocation(line: 118, column: 1, scope: !5412)
!5629 = !{i64 2147590796, i64 2147590839, i64 2147590879}
!5630 = !DILocation(line: 119, column: 1, scope: !5412)
!5631 = !{i64 2147591046, i64 2147591089, i64 2147591129}
!5632 = !DILocation(line: 120, column: 1, scope: !5412)
!5633 = !{i64 2147591248, i64 2147591291, i64 2147591331}
!5634 = !DILocation(line: 121, column: 1, scope: !5412)
!5635 = !{i64 2147591471, i64 2147591514, i64 2147591554}
!5636 = !DILocation(line: 122, column: 1, scope: !5412)
!5637 = !{i64 2147591685, i64 2147591728, i64 2147591768}
!5638 = !DILocation(line: 123, column: 1, scope: !5412)
!5639 = !{i64 2147591929, i64 2147591972, i64 2147592012}
!5640 = !DILocation(line: 124, column: 1, scope: !5412)
!5641 = !{i64 2147592158, i64 2147592201, i64 2147592241}
!5642 = !DILocation(line: 125, column: 1, scope: !5412)
!5643 = !{i64 2147592384, i64 2147592427, i64 2147592467}
!5644 = !DILocation(line: 126, column: 1, scope: !5412)
!5645 = !{i64 2147592643, i64 2147592686, i64 2147592726}
!5646 = !DILocation(line: 127, column: 1, scope: !5412)
!5647 = !{i64 2147592863, i64 2147592906, i64 2147592946}
!5648 = !DILocation(line: 128, column: 1, scope: !5412)
!5649 = !{i64 2147593095, i64 2147593138, i64 2147593178}
!5650 = !DILocation(line: 129, column: 1, scope: !5412)
!5651 = !{i64 2147593336, i64 2147593379, i64 2147593419}
!5652 = !DILocation(line: 130, column: 1, scope: !5412)
!5653 = !{i64 2147593577, i64 2147593620, i64 2147593660}
!5654 = !DILocation(line: 131, column: 1, scope: !5412)
!5655 = !{i64 2147593800, i64 2147593843, i64 2147593883}
!5656 = !DILocation(line: 132, column: 1, scope: !5412)
!5657 = !{i64 2147594017, i64 2147594060, i64 2147594100}
!5658 = !DILocation(line: 133, column: 1, scope: !5412)
!5659 = !{i64 2147594258, i64 2147594301, i64 2147594341}
!5660 = !DILocation(line: 134, column: 1, scope: !5412)
!5661 = !{i64 2147594445, i64 2147594488, i64 2147594528}
!5662 = !DILocation(line: 135, column: 1, scope: !5412)
!5663 = !{i64 2147594674, i64 2147594717, i64 2147594757}
!5664 = !DILocation(line: 136, column: 1, scope: !5412)
!5665 = !{i64 2147598931, i64 2147598974, i64 2147599014}
!5666 = !DILocation(line: 137, column: 1, scope: !5412)
!5667 = !{i64 2147599143, i64 2147599186, i64 2147599226}
!5668 = !DILocation(line: 138, column: 1, scope: !5412)
!5669 = !{i64 2147599364, i64 2147599407, i64 2147599447}
!5670 = !DILocation(line: 139, column: 1, scope: !5412)
!5671 = !{i64 2147599578, i64 2147599621, i64 2147599661}
!5672 = !DILocation(line: 140, column: 1, scope: !5412)
!5673 = !{i64 2147599768, i64 2147599811, i64 2147599851}
!5674 = !DILocation(line: 141, column: 1, scope: !5412)
!5675 = !{i64 2147599967, i64 2147600010, i64 2147600050}
!5676 = !DILocation(line: 142, column: 1, scope: !5412)
!5677 = !{i64 2147600172, i64 2147600215, i64 2147600255}
!5678 = !DILocation(line: 143, column: 1, scope: !5412)
!5679 = !{i64 2147600392, i64 2147600435, i64 2147600475}
!5680 = !DILocation(line: 144, column: 1, scope: !5412)
!5681 = !{i64 2147600593, i64 2147600636, i64 2147600676}
!5682 = !DILocation(line: 145, column: 1, scope: !5412)
!5683 = !{i64 2147600792, i64 2147600835, i64 2147600875}
!5684 = !DILocation(line: 146, column: 1, scope: !5412)
!5685 = !{i64 2147600961, i64 2147601004, i64 2147601044}
!5686 = !DILocation(line: 147, column: 1, scope: !5412)
!5687 = !{i64 2147601145, i64 2147601188, i64 2147601228}
!5688 = !DILocation(line: 148, column: 1, scope: !5412)
!5689 = !{i64 2147601329, i64 2147601372, i64 2147601412}
!5690 = !DILocation(line: 149, column: 1, scope: !5412)
!5691 = !{i64 2147601516, i64 2147601559, i64 2147601599}
!5692 = !DILocation(line: 150, column: 1, scope: !5412)
!5693 = !{i64 2147601700, i64 2147601743, i64 2147601783}
!5694 = !DILocation(line: 151, column: 1, scope: !5412)
!5695 = !{i64 2147601938, i64 2147601981, i64 2147602021}
!5696 = !DILocation(line: 152, column: 1, scope: !5412)
!5697 = !{i64 2147602168, i64 2147602211, i64 2147602251}
!5698 = !DILocation(line: 153, column: 1, scope: !5412)
!5699 = !{i64 2147602397, i64 2147602440, i64 2147602480}
!5700 = !DILocation(line: 154, column: 1, scope: !5412)
!5701 = !{i64 2147602584, i64 2147602627, i64 2147602667}
!5702 = !DILocation(line: 155, column: 1, scope: !5412)
!5703 = !{i64 2147602780, i64 2147602823, i64 2147602863}
!5704 = !DILocation(line: 156, column: 1, scope: !5412)
!5705 = !{i64 2147602988, i64 2147603031, i64 2147603071}
!5706 = !DILocation(line: 157, column: 1, scope: !5412)
!5707 = !{i64 2147603200, i64 2147603243, i64 2147603283}
!5708 = !DILocation(line: 158, column: 1, scope: !5412)
!5709 = !{i64 2147603399, i64 2147603442, i64 2147603482}
!5710 = !DILocation(line: 159, column: 1, scope: !5412)
!5711 = !{i64 2147603637, i64 2147603680, i64 2147603720}
!5712 = !DILocation(line: 160, column: 1, scope: !5412)
!5713 = !{i64 2147603833, i64 2147603876, i64 2147603916}
!5714 = !DILocation(line: 161, column: 1, scope: !5412)
!5715 = !{i64 2147604035, i64 2147604078, i64 2147604118}
!5716 = !DILocation(line: 162, column: 1, scope: !5412)
!5717 = !{i64 2147604228, i64 2147604271, i64 2147604311}
!5718 = !DILocation(line: 163, column: 1, scope: !5412)
!5719 = !{i64 2147604462, i64 2147604505, i64 2147604545}
!5720 = !DILocation(line: 164, column: 1, scope: !5412)
!5721 = !{i64 2147604625, i64 2147604668, i64 2147604708}
!5722 = !DILocation(line: 165, column: 1, scope: !5412)
!5723 = !{i64 2147604864, i64 2147604907, i64 2147604947}
!5724 = !DILocation(line: 166, column: 1, scope: !5412)
!5725 = !{i64 2147605103, i64 2147605146, i64 2147605186}
!5726 = !DILocation(line: 167, column: 1, scope: !5412)
!5727 = !{i64 2147605339, i64 2147605382, i64 2147605422}
!5728 = !DILocation(line: 168, column: 1, scope: !5412)
!5729 = !{i64 2147605569, i64 2147605612, i64 2147605652}
!5730 = !DILocation(line: 169, column: 1, scope: !5412)
!5731 = !{i64 2147605756, i64 2147605799, i64 2147605839}
!5732 = !DILocation(line: 170, column: 1, scope: !5412)
!5733 = !{i64 2147605955, i64 2147605998, i64 2147606038}
!5734 = !DILocation(line: 171, column: 1, scope: !5412)
!5735 = !{i64 2147606226, i64 2147606269, i64 2147606309}
!5736 = !DILocation(line: 172, column: 1, scope: !5412)
!5737 = !{i64 2147606401, i64 2147606444, i64 2147606484}
!5738 = !DILocation(line: 173, column: 1, scope: !5412)
!5739 = !{i64 2147606635, i64 2147606678, i64 2147606718}
!5740 = !DILocation(line: 174, column: 1, scope: !5412)
!5741 = !{i64 2147606843, i64 2147606886, i64 2147606926}
!5742 = !DILocation(line: 175, column: 1, scope: !5412)
!5743 = !{i64 2147607061, i64 2147607104, i64 2147607144}
!5744 = !DILocation(line: 176, column: 1, scope: !5412)
!5745 = !{i64 2147607251, i64 2147607294, i64 2147607334}
!5746 = !DILocation(line: 177, column: 1, scope: !5412)
!5747 = !{i64 2147607447, i64 2147607490, i64 2147607530}
!5748 = !DILocation(line: 178, column: 1, scope: !5412)
!5749 = !{i64 2147607653, i64 2147607696, i64 2147607736}
!5750 = !DILocation(line: 179, column: 1, scope: !5412)
!5751 = !{i64 2147607858, i64 2147607901, i64 2147607941}
!5752 = !DILocation(line: 180, column: 1, scope: !5412)
!5753 = !{i64 2147612145, i64 2147612188, i64 2147612228}
!5754 = !DILocation(line: 181, column: 1, scope: !5412)
!5755 = !{i64 2147612377, i64 2147612420, i64 2147612460}
!5756 = !DILocation(line: 182, column: 1, scope: !5412)
!5757 = !{i64 2147612555, i64 2147612598, i64 2147612638}
!5758 = !DILocation(line: 183, column: 1, scope: !5412)
!5759 = !{i64 2147612764, i64 2147612807, i64 2147612847}
!5760 = !DILocation(line: 184, column: 1, scope: !5412)
!5761 = !{i64 2147612996, i64 2147613039, i64 2147613079}
!5762 = !DILocation(line: 185, column: 1, scope: !5412)
!5763 = !{i64 2147613198, i64 2147613241, i64 2147613281}
!5764 = !DILocation(line: 186, column: 1, scope: !5412)
!5765 = !{i64 2147613448, i64 2147613491, i64 2147613531}
!5766 = !DILocation(line: 187, column: 1, scope: !5412)
!5767 = !{i64 2147613686, i64 2147613729, i64 2147613769}
!5768 = !DILocation(line: 188, column: 1, scope: !5412)
!5769 = !{i64 2147613864, i64 2147613907, i64 2147613947}
!5770 = !DILocation(line: 189, column: 1, scope: !5412)
!5771 = !{i64 2147614078, i64 2147614121, i64 2147614161}
!5772 = !DILocation(line: 190, column: 1, scope: !5412)
!5773 = !{i64 2147614286, i64 2147614329, i64 2147614369}
!5774 = !DILocation(line: 191, column: 1, scope: !5412)
!5775 = !{i64 2147614476, i64 2147614519, i64 2147614559}
!5776 = !DILocation(line: 192, column: 1, scope: !5412)
!5777 = !{i64 2147614690, i64 2147614733, i64 2147614773}
!5778 = !DILocation(line: 193, column: 1, scope: !5412)
!5779 = !{i64 2147614952, i64 2147614995, i64 2147615035}
!5780 = !DILocation(line: 194, column: 1, scope: !5412)
!5781 = !{i64 2147615163, i64 2147615206, i64 2147615246}
!5782 = !DILocation(line: 195, column: 1, scope: !5412)
!5783 = !{i64 2147615407, i64 2147615450, i64 2147615490}
!5784 = !DILocation(line: 196, column: 1, scope: !5412)
!5785 = !{i64 2147615618, i64 2147615661, i64 2147615701}
!5786 = !DILocation(line: 197, column: 1, scope: !5412)
!5787 = !{i64 2147615847, i64 2147615890, i64 2147615930}
!5788 = !DILocation(line: 198, column: 1, scope: !5412)
!5789 = !{i64 2147616112, i64 2147616155, i64 2147616195}
!5790 = !DILocation(line: 199, column: 1, scope: !5412)
!5791 = !{i64 2147616317, i64 2147616360, i64 2147616400}
!5792 = !DILocation(line: 200, column: 1, scope: !5412)
!5793 = !{i64 2147616513, i64 2147616556, i64 2147616596}
!5794 = !DILocation(line: 201, column: 1, scope: !5412)
!5795 = !{i64 2147616736, i64 2147616779, i64 2147616819}
!5796 = !DILocation(line: 202, column: 1, scope: !5412)
!5797 = !{i64 2147616899, i64 2147616942, i64 2147616982}
!5798 = !DILocation(line: 203, column: 1, scope: !5412)
!5799 = !{i64 2147617104, i64 2147617147, i64 2147617187}
!5800 = !DILocation(line: 204, column: 1, scope: !5412)
!5801 = !{i64 2147617324, i64 2147617367, i64 2147617407}
!5802 = !DILocation(line: 205, column: 1, scope: !5412)
!5803 = !{i64 2147617538, i64 2147617581, i64 2147617621}
!5804 = !DILocation(line: 206, column: 1, scope: !5412)
!5805 = !{i64 2147617752, i64 2147617795, i64 2147617835}
!5806 = !DILocation(line: 207, column: 1, scope: !5412)
!5807 = !{i64 2147617963, i64 2147618006, i64 2147618046}
!5808 = !DILocation(line: 208, column: 1, scope: !5412)
!5809 = !{i64 2147618156, i64 2147618199, i64 2147618239}
!5810 = !DILocation(line: 209, column: 1, scope: !5412)
!5811 = !{i64 2147618355, i64 2147618398, i64 2147618438}
!5812 = !DILocation(line: 210, column: 1, scope: !5412)
!5813 = !{i64 2147618527, i64 2147618570, i64 2147618610}
!5814 = !DILocation(line: 211, column: 1, scope: !5412)
!5815 = !{i64 2147618720, i64 2147618763, i64 2147618803}
!5816 = !DILocation(line: 212, column: 1, scope: !5412)
!5817 = !{i64 2147618892, i64 2147618935, i64 2147618975}
!5818 = !DILocation(line: 213, column: 1, scope: !5412)
!5819 = !{i64 2147619082, i64 2147619125, i64 2147619165}
!5820 = !DILocation(line: 214, column: 1, scope: !5412)
!5821 = !{i64 2147619275, i64 2147619318, i64 2147619358}
!5822 = !DILocation(line: 215, column: 1, scope: !5412)
!5823 = !{i64 2147619471, i64 2147619514, i64 2147619554}
!5824 = !DILocation(line: 216, column: 1, scope: !5412)
!5825 = !{i64 2147619698, i64 2147619741, i64 2147619781}
!5826 = !DILocation(line: 217, column: 1, scope: !5412)
!5827 = !{i64 2147619915, i64 2147619958, i64 2147619998}
!5828 = !DILocation(line: 218, column: 1, scope: !5412)
!5829 = !{i64 2147620207, i64 2147620250, i64 2147620290}
!5830 = !DILocation(line: 219, column: 1, scope: !5412)
!5831 = !{i64 2147620439, i64 2147620482, i64 2147620522}
!5832 = !DILocation(line: 220, column: 1, scope: !5412)
!5833 = !{i64 2147620656, i64 2147620699, i64 2147620739}
!5834 = !DILocation(line: 221, column: 1, scope: !5412)
!5835 = !{i64 2147620863, i64 2147620906, i64 2147620946}
!5836 = !DILocation(line: 222, column: 1, scope: !5412)
!5837 = !{i64 2147625125, i64 2147625168, i64 2147625208}
!5838 = !DILocation(line: 223, column: 1, scope: !5412)
!5839 = !{i64 2147625357, i64 2147625400, i64 2147625440}
!5840 = !DILocation(line: 224, column: 1, scope: !5412)
!5841 = !{i64 2147625565, i64 2147625608, i64 2147625648}
!5842 = !DILocation(line: 225, column: 1, scope: !5412)
!5843 = !{i64 2147625755, i64 2147625798, i64 2147625838}
!5844 = !DILocation(line: 226, column: 1, scope: !5412)
!5845 = !{i64 2147625981, i64 2147626024, i64 2147626064}
!5846 = !DILocation(line: 227, column: 1, scope: !5412)
!5847 = !{i64 2147626170, i64 2147626213, i64 2147626253}
!5848 = !DILocation(line: 228, column: 1, scope: !5412)
!5849 = !{i64 2147626441, i64 2147626484, i64 2147626524}
!5850 = !DILocation(line: 229, column: 1, scope: !5412)
!5851 = !{i64 2147626661, i64 2147626704, i64 2147626744}
!5852 = !DILocation(line: 230, column: 1, scope: !5412)
!5853 = !{i64 2147626914, i64 2147626957, i64 2147626997}
!5854 = !DILocation(line: 231, column: 1, scope: !5412)
!5855 = !{i64 2147627122, i64 2147627165, i64 2147627205}
!5856 = !DILocation(line: 232, column: 1, scope: !5412)
!5857 = !{i64 2147627354, i64 2147627397, i64 2147627437}
!5858 = !DILocation(line: 233, column: 1, scope: !5412)
!5859 = !{i64 2147627565, i64 2147627608, i64 2147627648}
!5860 = !DILocation(line: 234, column: 1, scope: !5412)
!5861 = !{i64 2147627755, i64 2147627798, i64 2147627838}
!5862 = !DILocation(line: 235, column: 1, scope: !5412)
!5863 = !{i64 2147627969, i64 2147628012, i64 2147628052}
!5864 = !DILocation(line: 236, column: 1, scope: !5412)
!5865 = !{i64 2147628168, i64 2147628211, i64 2147628251}
!5866 = !DILocation(line: 237, column: 1, scope: !5412)
!5867 = !{i64 2147628355, i64 2147628398, i64 2147628438}
!5868 = !DILocation(line: 238, column: 1, scope: !5412)
!5869 = !{i64 2147628563, i64 2147628606, i64 2147628646}
!5870 = !DILocation(line: 239, column: 1, scope: !5412)
!5871 = !{i64 2147628792, i64 2147628835, i64 2147628875}
!5872 = !DILocation(line: 240, column: 1, scope: !5412)
!5873 = !{i64 2147628994, i64 2147629037, i64 2147629077}
!5874 = !DILocation(line: 241, column: 1, scope: !5412)
!5875 = !{i64 2147629193, i64 2147629236, i64 2147629276}
!5876 = !DILocation(line: 242, column: 1, scope: !5412)
!5877 = !{i64 2147629410, i64 2147629453, i64 2147629493}
!5878 = !DILocation(line: 244, column: 1, scope: !5412)
!5879 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !851, file: !851, line: 225, type: !858, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5880)
!5880 = !{!5881}
!5881 = !DILocalVariable(name: "arg", arg: 1, scope: !5879, file: !851, line: 225, type: !860)
!5882 = !DILocation(line: 0, scope: !5879)
!5883 = !DILocation(line: 230, column: 2, scope: !5879)
!5884 = !DILocation(line: 233, column: 2, scope: !5879)
!5885 = !DILocation(line: 236, column: 2, scope: !5879)
!5886 = !DILocation(line: 255, column: 2, scope: !5879)
!5887 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !851, file: !851, line: 50, type: !359, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !1933)
!5888 = !DILocation(line: 53, column: 2, scope: !5887)
!5889 = !DILocation(line: 54, column: 1, scope: !5887)
!5890 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !851, file: !851, line: 14, type: !359, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !1933)
!5891 = !DILocation(line: 23, column: 2, scope: !5890)
!5892 = !DILocation(line: 24, column: 2, scope: !5890)
!5893 = !DILocation(line: 25, column: 2, scope: !5890)
!5894 = !DILocation(line: 27, column: 2, scope: !5890)
!5895 = !DILocation(line: 31, column: 2, scope: !5890)
!5896 = !DILocation(line: 33, column: 2, scope: !5890)
!5897 = !DILocation(line: 36, column: 2, scope: !5890)
!5898 = !DILocation(line: 37, column: 2, scope: !5890)
!5899 = !DILocation(line: 40, column: 2, scope: !5890)
!5900 = !DILocation(line: 41, column: 2, scope: !5890)
!5901 = !DILocation(line: 42, column: 2, scope: !5890)
!5902 = !DILocation(line: 43, column: 2, scope: !5890)
!5903 = !DILocation(line: 44, column: 2, scope: !5890)
!5904 = !DILocation(line: 47, column: 2, scope: !5890)
!5905 = !DILocation(line: 48, column: 1, scope: !5890)
!5906 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !851, file: !851, line: 57, type: !359, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !1933)
!5907 = !DILocation(line: 61, column: 2, scope: !5906)
!5908 = !DILocation(line: 63, column: 2, scope: !5906)
!5909 = !DILocation(line: 80, column: 1, scope: !5906)
!5910 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5911, file: !5911, line: 164, type: !5912, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5914)
!5911 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5912 = !DISubroutineType(types: !5913)
!5913 = !{null, !795, !156, !143, !146, !146}
!5914 = !{!5915, !5916, !5917, !5918, !5919}
!5915 = !DILocalVariable(name: "base", arg: 1, scope: !5910, file: !5911, line: 164, type: !795)
!5916 = !DILocalVariable(name: "pdap", arg: 2, scope: !5910, file: !5911, line: 164, type: !156)
!5917 = !DILocalVariable(name: "perm", arg: 3, scope: !5910, file: !5911, line: 164, type: !143)
!5918 = !DILocalVariable(name: "sreq", arg: 4, scope: !5910, file: !5911, line: 164, type: !146)
!5919 = !DILocalVariable(name: "lock", arg: 5, scope: !5910, file: !5911, line: 164, type: !146)
!5920 = !DILocation(line: 0, scope: !5910)
!5921 = !DILocation(line: 166, column: 24, scope: !5910)
!5922 = !DILocation(line: 166, column: 5, scope: !5910)
!5923 = !DILocation(line: 166, column: 22, scope: !5910)
!5924 = !DILocation(line: 167, column: 1, scope: !5910)
!5925 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !441, file: !441, line: 454, type: !5926, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5928)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !723, !156, !156}
!5928 = !{!5929, !5930, !5931}
!5929 = !DILocalVariable(name: "base", arg: 1, scope: !5925, file: !441, line: 454, type: !723)
!5930 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5925, file: !441, line: 454, type: !156)
!5931 = !DILocalVariable(name: "control", arg: 3, scope: !5925, file: !441, line: 454, type: !156)
!5932 = !DILocation(line: 0, scope: !5925)
!5933 = !DILocation(line: 456, column: 5, scope: !5925)
!5934 = !DILocation(line: 456, column: 22, scope: !5925)
!5935 = !DILocation(line: 457, column: 1, scope: !5925)
!5936 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !441, file: !441, line: 379, type: !5937, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5939)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{null, !723, !156}
!5939 = !{!5940, !5941}
!5940 = !DILocalVariable(name: "base", arg: 1, scope: !5936, file: !441, line: 379, type: !723)
!5941 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5936, file: !441, line: 379, type: !156)
!5942 = !DILocation(line: 0, scope: !5936)
!5943 = !DILocation(line: 381, column: 26, scope: !5936)
!5944 = !DILocation(line: 382, column: 1, scope: !5936)
!5945 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5946, file: !5946, line: 136, type: !5947, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5949)
!5946 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5947 = !DISubroutineType(types: !5948)
!5948 = !{null, !838}
!5949 = !{!5950}
!5950 = !DILocalVariable(name: "base", arg: 1, scope: !5945, file: !5946, line: 136, type: !838)
!5951 = !DILocation(line: 0, scope: !5945)
!5952 = !DILocation(line: 138, column: 16, scope: !5945)
!5953 = !DILocation(line: 139, column: 1, scope: !5945)
!5954 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5911, file: !5911, line: 136, type: !5955, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !437, retainedNodes: !5957)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{null, !795, !156, !156, !146}
!5957 = !{!5958, !5959, !5960, !5961}
!5958 = !DILocalVariable(name: "base", arg: 1, scope: !5954, file: !5911, line: 136, type: !795)
!5959 = !DILocalVariable(name: "mda", arg: 2, scope: !5954, file: !5911, line: 136, type: !156)
!5960 = !DILocalVariable(name: "domainId", arg: 3, scope: !5954, file: !5911, line: 136, type: !156)
!5961 = !DILocalVariable(name: "lock", arg: 4, scope: !5954, file: !5911, line: 136, type: !146)
!5962 = !DILocation(line: 0, scope: !5954)
!5963 = !DILocation(line: 140, column: 20, scope: !5954)
!5964 = !DILocation(line: 141, column: 1, scope: !5954)
!5965 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5966, file: !5966, line: 57, type: !5967, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !6013)
!5966 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5967 = !DISubroutineType(types: !5968)
!5968 = !{null, !32, !5969}
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 32)
!5970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5971)
!5971 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2527, line: 141, baseType: !5972)
!5972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2527, line: 97, size: 256, elements: !5973)
!5973 = !{!5974}
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5972, file: !2527, line: 107, baseType: !5975, size: 256)
!5975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2527, line: 98, size: 256, elements: !5976)
!5976 = !{!5977, !5982, !5987, !5992, !5997, !6002, !6007, !6012}
!5977 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 99, baseType: !5978, size: 32)
!5978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 99, size: 32, elements: !5979)
!5979 = !{!5980, !5981}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5978, file: !2527, line: 99, baseType: !156, size: 32)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5978, file: !2527, line: 99, baseType: !156, size: 32)
!5982 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 100, baseType: !5983, size: 32, offset: 32)
!5983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 100, size: 32, elements: !5984)
!5984 = !{!5985, !5986}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5983, file: !2527, line: 100, baseType: !156, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5983, file: !2527, line: 100, baseType: !156, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 101, baseType: !5988, size: 32, offset: 64)
!5988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 101, size: 32, elements: !5989)
!5989 = !{!5990, !5991}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5988, file: !2527, line: 101, baseType: !156, size: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5988, file: !2527, line: 101, baseType: !156, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 102, baseType: !5993, size: 32, offset: 96)
!5993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 102, size: 32, elements: !5994)
!5994 = !{!5995, !5996}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5993, file: !2527, line: 102, baseType: !156, size: 32)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5993, file: !2527, line: 102, baseType: !156, size: 32)
!5997 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 103, baseType: !5998, size: 32, offset: 128)
!5998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 103, size: 32, elements: !5999)
!5999 = !{!6000, !6001}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5998, file: !2527, line: 103, baseType: !156, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5998, file: !2527, line: 103, baseType: !156, size: 32)
!6002 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 104, baseType: !6003, size: 32, offset: 160)
!6003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 104, size: 32, elements: !6004)
!6004 = !{!6005, !6006}
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6003, file: !2527, line: 104, baseType: !156, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6003, file: !2527, line: 104, baseType: !156, size: 32)
!6007 = !DIDerivedType(tag: DW_TAG_member, scope: !5975, file: !2527, line: 105, baseType: !6008, size: 32, offset: 192)
!6008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5975, file: !2527, line: 105, size: 32, elements: !6009)
!6009 = !{!6010, !6011}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6008, file: !2527, line: 105, baseType: !156, size: 32)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6008, file: !2527, line: 105, baseType: !156, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5975, file: !2527, line: 106, baseType: !156, size: 32, offset: 224)
!6013 = !{!6014, !6015}
!6014 = !DILocalVariable(name: "reason", arg: 1, scope: !5965, file: !5966, line: 57, type: !32)
!6015 = !DILocalVariable(name: "esf", arg: 2, scope: !5965, file: !5966, line: 57, type: !5969)
!6016 = !DILocation(line: 0, scope: !5965)
!6017 = !DILocation(line: 63, column: 2, scope: !5965)
!6018 = !DILocation(line: 64, column: 1, scope: !5965)
!6019 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5966, file: !5966, line: 82, type: !6020, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !6035)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{null, !5969, !6022}
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 32)
!6023 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6024)
!6024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6025)
!6025 = !{!6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034}
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6024, file: !296, line: 26, baseType: !156, size: 32)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6024, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6024, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6024, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6024, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6024, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6024, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6024, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6024, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6035 = !{!6036, !6037, !6038}
!6036 = !DILocalVariable(name: "esf", arg: 1, scope: !6019, file: !5966, line: 82, type: !5969)
!6037 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6019, file: !5966, line: 82, type: !6022)
!6038 = !DILocalVariable(name: "reason", scope: !6019, file: !5966, line: 88, type: !32)
!6039 = !DILocation(line: 0, scope: !6019)
!6040 = !DILocation(line: 88, column: 35, scope: !6019)
!6041 = !DILocation(line: 108, column: 2, scope: !6019)
!6042 = !DILocation(line: 131, column: 1, scope: !6019)
!6043 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5966, file: !5966, line: 133, type: !6044, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !117}
!6046 = !{!6047, !6048, !6049}
!6047 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6043, file: !5966, line: 133, type: !117)
!6048 = !DILocalVariable(name: "ssf_contents", scope: !6043, file: !5966, line: 135, type: !1388)
!6049 = !DILocalVariable(name: "oops_esf", scope: !6043, file: !5966, line: 136, type: !5971)
!6050 = !DILocation(line: 0, scope: !6043)
!6051 = !DILocation(line: 136, column: 2, scope: !6043)
!6052 = !DILocation(line: 136, column: 15, scope: !6043)
!6053 = !DILocation(line: 139, column: 22, scope: !6043)
!6054 = !DILocation(line: 139, column: 17, scope: !6043)
!6055 = !DILocation(line: 139, column: 20, scope: !6043)
!6056 = !DILocation(line: 141, column: 2, scope: !6043)
!6057 = !DILocation(line: 142, column: 2, scope: !6043)
!6058 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6059, file: !6059, line: 40, type: !6060, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6062)
!6059 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6060 = !DISubroutineType(types: !6061)
!6061 = !{null, !32}
!6062 = !{!6063}
!6063 = !DILocalVariable(name: "irq", arg: 1, scope: !6058, file: !6059, line: 40, type: !32)
!6064 = !DILocation(line: 0, scope: !6058)
!6065 = !DILocation(line: 42, column: 2, scope: !6058)
!6066 = !DILocation(line: 43, column: 1, scope: !6058)
!6067 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1583, file: !1583, line: 1684, type: !6068, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6070)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{null, !2421}
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6067, file: !1583, line: 1684, type: !2421)
!6072 = !DILocation(line: 0, scope: !6067)
!6073 = !DILocation(line: 1686, column: 23, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6067, file: !1583, line: 1686, column: 7)
!6075 = !DILocation(line: 1686, column: 7, scope: !6067)
!6076 = !DILocation(line: 1688, column: 5, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6074, file: !1583, line: 1687, column: 3)
!6078 = !{i64 2154450762}
!6079 = !DILocation(line: 1689, column: 81, scope: !6077)
!6080 = !DILocation(line: 1689, column: 60, scope: !6077)
!6081 = !DILocation(line: 1689, column: 34, scope: !6077)
!6082 = !DILocation(line: 1689, column: 5, scope: !6077)
!6083 = !DILocation(line: 1689, column: 43, scope: !6077)
!6084 = !DILocation(line: 1690, column: 5, scope: !6077)
!6085 = !{i64 2154450876}
!6086 = !DILocation(line: 1691, column: 3, scope: !6077)
!6087 = !DILocation(line: 1692, column: 1, scope: !6067)
!6088 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6059, file: !6059, line: 45, type: !6060, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6089)
!6089 = !{!6090}
!6090 = !DILocalVariable(name: "irq", arg: 1, scope: !6088, file: !6059, line: 45, type: !32)
!6091 = !DILocation(line: 0, scope: !6088)
!6092 = !DILocation(line: 47, column: 2, scope: !6088)
!6093 = !DILocation(line: 48, column: 1, scope: !6088)
!6094 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1583, file: !1583, line: 1722, type: !6068, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6095)
!6095 = !{!6096}
!6096 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6094, file: !1583, line: 1722, type: !2421)
!6097 = !DILocation(line: 0, scope: !6094)
!6098 = !DILocation(line: 1724, column: 23, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6094, file: !1583, line: 1724, column: 7)
!6100 = !DILocation(line: 1724, column: 7, scope: !6094)
!6101 = !DILocation(line: 1726, column: 81, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6099, file: !1583, line: 1725, column: 3)
!6103 = !DILocation(line: 1726, column: 60, scope: !6102)
!6104 = !DILocation(line: 1726, column: 34, scope: !6102)
!6105 = !DILocation(line: 1726, column: 5, scope: !6102)
!6106 = !DILocation(line: 1726, column: 43, scope: !6102)
!6107 = !DILocation(line: 271, column: 3, scope: !6108, inlinedAt: !6110)
!6108 = distinct !DISubprogram(name: "__DSB", scope: !6109, file: !6109, line: 269, type: !359, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !1933)
!6109 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6110 = distinct !DILocation(line: 1727, column: 5, scope: !6102)
!6111 = !{i64 6905149}
!6112 = !DILocation(line: 260, column: 3, scope: !6113, inlinedAt: !6114)
!6113 = distinct !DISubprogram(name: "__ISB", scope: !6109, file: !6109, line: 258, type: !359, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !1933)
!6114 = distinct !DILocation(line: 1728, column: 5, scope: !6102)
!6115 = !{i64 6904866}
!6116 = !DILocation(line: 1729, column: 3, scope: !6102)
!6117 = !DILocation(line: 1730, column: 1, scope: !6094)
!6118 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6059, file: !6059, line: 50, type: !6119, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!118, !32}
!6121 = !{!6122}
!6122 = !DILocalVariable(name: "irq", arg: 1, scope: !6118, file: !6059, line: 50, type: !32)
!6123 = !DILocation(line: 0, scope: !6118)
!6124 = !DILocation(line: 52, column: 20, scope: !6118)
!6125 = !DILocation(line: 52, column: 9, scope: !6118)
!6126 = !DILocation(line: 52, column: 41, scope: !6118)
!6127 = !DILocation(line: 52, column: 39, scope: !6118)
!6128 = !DILocation(line: 52, column: 2, scope: !6118)
!6129 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6059, file: !6059, line: 64, type: !6130, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6132)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{null, !32, !32, !156}
!6132 = !{!6133, !6134, !6135}
!6133 = !DILocalVariable(name: "irq", arg: 1, scope: !6129, file: !6059, line: 64, type: !32)
!6134 = !DILocalVariable(name: "prio", arg: 2, scope: !6129, file: !6059, line: 64, type: !32)
!6135 = !DILocalVariable(name: "flags", arg: 3, scope: !6129, file: !6059, line: 64, type: !156)
!6136 = !DILocation(line: 0, scope: !6129)
!6137 = !DILocation(line: 83, column: 8, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !6059, line: 82, column: 9)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !6059, line: 76, column: 6)
!6140 = !DILocation(line: 91, column: 2, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !6059, line: 91, column: 2)
!6142 = distinct !DILexicalBlock(scope: !6129, file: !6059, line: 91, column: 2)
!6143 = !DILocation(line: 91, column: 2, scope: !6142)
!6144 = !DILocation(line: 91, column: 2, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6141, file: !6059, line: 91, column: 2)
!6146 = !DILocation(line: 95, column: 2, scope: !6129)
!6147 = !DILocation(line: 96, column: 1, scope: !6129)
!6148 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1583, file: !1583, line: 1814, type: !6149, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6151)
!6149 = !DISubroutineType(types: !6150)
!6150 = !{null, !2421, !156}
!6151 = !{!6152, !6153}
!6152 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6148, file: !1583, line: 1814, type: !2421)
!6153 = !DILocalVariable(name: "priority", arg: 2, scope: !6148, file: !1583, line: 1814, type: !156)
!6154 = !DILocation(line: 0, scope: !6148)
!6155 = !DILocation(line: 0, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6148, file: !1583, line: 1816, column: 7)
!6157 = !DILocation(line: 1816, column: 7, scope: !6148)
!6158 = !DILocation(line: 1824, column: 1, scope: !6148)
!6159 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6059, file: !6059, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !6160)
!6160 = !{!6161}
!6161 = !DILocalVariable(name: "unused", arg: 1, scope: !6159, file: !6059, line: 155, type: !13)
!6162 = !DILocation(line: 0, scope: !6159)
!6163 = !DILocation(line: 159, column: 2, scope: !6159)
!6164 = !DILocation(line: 160, column: 1, scope: !6159)
!6165 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6166, file: !6166, line: 87, type: !359, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !1933)
!6166 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6167 = !DILocation(line: 89, column: 2, scope: !6165)
!6168 = !DILocation(line: 90, column: 2, scope: !6165)
!6169 = !DILocation(line: 91, column: 1, scope: !6165)
!6170 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6166, file: !6166, line: 23, type: !359, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!6171 = !DISubprogram(name: "z_arm_int_exit", scope: !6172, file: !6172, line: 153, type: !359, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!6172 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6173 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6174, file: !6174, line: 256, type: !359, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !1933)
!6174 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6175 = !DILocation(line: 258, column: 2, scope: !6173)
!6176 = !DILocation(line: 260, column: 2, scope: !6173)
!6177 = !DILocation(line: 262, column: 2, scope: !6173)
!6178 = !DILocation(line: 263, column: 2, scope: !6173)
!6179 = !DILocation(line: 267, column: 2, scope: !6173)
!6180 = !DILocation(line: 268, column: 2, scope: !6173)
!6181 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6174, file: !6174, line: 53, type: !359, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !1933)
!6182 = !DILocation(line: 55, column: 12, scope: !6181)
!6183 = !DILocation(line: 271, column: 3, scope: !6184, inlinedAt: !6185)
!6184 = distinct !DISubprogram(name: "__DSB", scope: !6109, file: !6109, line: 269, type: !359, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !1933)
!6185 = distinct !DILocation(line: 56, column: 2, scope: !6181)
!6186 = !{i64 6940923}
!6187 = !DILocation(line: 260, column: 3, scope: !6188, inlinedAt: !6189)
!6188 = distinct !DISubprogram(name: "__ISB", scope: !6109, file: !6109, line: 258, type: !359, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !1933)
!6189 = distinct !DILocation(line: 57, column: 2, scope: !6181)
!6190 = !{i64 6940640}
!6191 = !DILocation(line: 58, column: 1, scope: !6181)
!6192 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6174, file: !6174, line: 96, type: !359, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !1933)
!6193 = !DILocation(line: 103, column: 13, scope: !6192)
!6194 = !DILocation(line: 975, column: 3, scope: !6195, inlinedAt: !6200)
!6195 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6109, file: !6109, line: 971, type: !6196, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !6198)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!156}
!6198 = !{!6199}
!6199 = !DILocalVariable(name: "result", scope: !6195, file: !6109, line: 973, type: !156)
!6200 = distinct !DILocation(line: 189, column: 16, scope: !6192)
!6201 = !{i64 6961753}
!6202 = !DILocation(line: 0, scope: !6195, inlinedAt: !6200)
!6203 = !DILocation(line: 189, column: 32, scope: !6192)
!6204 = !DILocalVariable(name: "control", arg: 1, scope: !6205, file: !6109, line: 1001, type: !156)
!6205 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6109, file: !6109, line: 1001, type: !6206, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !6208)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !156}
!6208 = !{!6204}
!6209 = !DILocation(line: 0, scope: !6205, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 189, column: 2, scope: !6192)
!6211 = !DILocation(line: 1003, column: 3, scope: !6205, inlinedAt: !6210)
!6212 = !{i64 6962473}
!6213 = !DILocation(line: 260, column: 3, scope: !6188, inlinedAt: !6214)
!6214 = distinct !DILocation(line: 1004, column: 3, scope: !6205, inlinedAt: !6210)
!6215 = !DILocation(line: 191, column: 1, scope: !6192)
!6216 = distinct !DISubprogram(name: "arch_swap", scope: !6217, file: !6217, line: 33, type: !6119, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !6218)
!6217 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6218 = !{!6219}
!6219 = !DILocalVariable(name: "key", arg: 1, scope: !6216, file: !6217, line: 33, type: !32)
!6220 = !DILocation(line: 0, scope: !6216)
!6221 = !DILocation(line: 36, column: 2, scope: !6216)
!6222 = !DILocation(line: 36, column: 17, scope: !6216)
!6223 = !DILocation(line: 36, column: 25, scope: !6216)
!6224 = !DILocation(line: 37, column: 37, scope: !6216)
!6225 = !DILocation(line: 37, column: 17, scope: !6216)
!6226 = !DILocation(line: 37, column: 35, scope: !6216)
!6227 = !DILocation(line: 41, column: 12, scope: !6216)
!6228 = !DILocalVariable(name: "key", arg: 1, scope: !6229, file: !6230, line: 84, type: !32)
!6229 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2494, retainedNodes: !6231)
!6230 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6231 = !{!6228}
!6232 = !DILocation(line: 0, scope: !6229, inlinedAt: !6233)
!6233 = distinct !DILocation(line: 44, column: 2, scope: !6216)
!6234 = !DILocation(line: 95, column: 2, scope: !6229, inlinedAt: !6233)
!6235 = !{i64 2842829}
!6236 = !DILocation(line: 53, column: 9, scope: !6216)
!6237 = !DILocation(line: 53, column: 24, scope: !6216)
!6238 = !DILocation(line: 53, column: 2, scope: !6216)
!6239 = distinct !DISubprogram(name: "arch_new_thread", scope: !6240, file: !6240, line: 56, type: !6241, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6344)
!6240 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6241 = !DISubroutineType(types: !6242)
!6242 = !{null, !6243, !6339, !1060, !346, !117, !117, !117}
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 32)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !6245)
!6245 = !{!6246, !6304, !6316, !6317, !6318, !6319, !6334}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6244, file: !225, line: 247, baseType: !6247, size: 384)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6248)
!6248 = !{!6249, !6273, !6280, !6281, !6282, !6291, !6292, !6293}
!6249 = !DIDerivedType(tag: DW_TAG_member, scope: !6247, file: !225, line: 60, baseType: !6250, size: 64)
!6250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6247, file: !225, line: 60, size: 64, elements: !6251)
!6251 = !{!6252, !6267}
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6250, file: !225, line: 61, baseType: !6253, size: 64)
!6253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6254)
!6254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6255)
!6255 = !{!6256, !6262}
!6256 = !DIDerivedType(tag: DW_TAG_member, scope: !6254, file: !235, line: 38, baseType: !6257, size: 32)
!6257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6254, file: !235, line: 38, size: 32, elements: !6258)
!6258 = !{!6259, !6261}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6257, file: !235, line: 39, baseType: !6260, size: 32)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6254, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6257, file: !235, line: 40, baseType: !6260, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, scope: !6254, file: !235, line: 42, baseType: !6263, size: 32, offset: 32)
!6263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6254, file: !235, line: 42, size: 32, elements: !6264)
!6264 = !{!6265, !6266}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6263, file: !235, line: 43, baseType: !6260, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6263, file: !235, line: 44, baseType: !6260, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6250, file: !225, line: 62, baseType: !6268, size: 64)
!6268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6269)
!6269 = !{!6270}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6268, file: !251, line: 50, baseType: !6271, size: 64)
!6271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6272, size: 64, elements: !256)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6247, file: !225, line: 68, baseType: !6274, size: 32, offset: 64)
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6275, size: 32)
!6275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6276)
!6276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6277)
!6277 = !{!6278}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6276, file: !261, line: 232, baseType: !6279, size: 64)
!6279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6254)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6247, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6247, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6282 = !DIDerivedType(tag: DW_TAG_member, scope: !6247, file: !225, line: 90, baseType: !6283, size: 16, offset: 112)
!6283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6247, file: !225, line: 90, size: 16, elements: !6284)
!6284 = !{!6285, !6290}
!6285 = !DIDerivedType(tag: DW_TAG_member, scope: !6283, file: !225, line: 91, baseType: !6286, size: 16)
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6283, file: !225, line: 91, size: 16, elements: !6287)
!6287 = !{!6288, !6289}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6286, file: !225, line: 96, baseType: !275, size: 8)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6286, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6283, file: !225, line: 100, baseType: !279, size: 16)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6247, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6247, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6247, file: !225, line: 131, baseType: !6294, size: 192, offset: 192)
!6294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6295)
!6295 = !{!6296, !6297, !6303}
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6294, file: !261, line: 245, baseType: !6253, size: 64)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6294, file: !261, line: 246, baseType: !6298, size: 32, offset: 64)
!6298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6299)
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 32)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !6302}
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6294, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6294, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6244, file: !225, line: 250, baseType: !6305, size: 288, offset: 384)
!6305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6306)
!6306 = !{!6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6305, file: !296, line: 26, baseType: !156, size: 32)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6305, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6305, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6305, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6305, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6305, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6305, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6305, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6305, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6244, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6244, file: !225, line: 256, baseType: !6275, size: 64, offset: 704)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6244, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6244, file: !225, line: 325, baseType: !6320, size: 32, offset: 800)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 32)
!6321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6322)
!6322 = !{!6323, !6329, !6330}
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6321, file: !220, line: 5074, baseType: !6324, size: 96)
!6324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !6325)
!6325 = !{!6326, !6327, !6328}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6324, file: !316, line: 57, baseType: !319, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6324, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6324, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6321, file: !220, line: 5075, baseType: !6275, size: 64, offset: 96)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6321, file: !220, line: 5076, baseType: !6331, size: 32, offset: 160)
!6331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !6332)
!6332 = !{!6333}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6331, file: !328, line: 52, baseType: !22, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6244, file: !225, line: 343, baseType: !6335, size: 64, offset: 832)
!6335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6336)
!6336 = !{!6337, !6338}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6335, file: !296, line: 63, baseType: !156, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6335, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !339, line: 44, baseType: !6341)
!6341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !341, line: 47, size: 8, elements: !6342)
!6342 = !{!6343}
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6341, file: !341, line: 48, baseType: !135, size: 8)
!6344 = !{!6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352}
!6345 = !DILocalVariable(name: "thread", arg: 1, scope: !6239, file: !6240, line: 56, type: !6243)
!6346 = !DILocalVariable(name: "stack", arg: 2, scope: !6239, file: !6240, line: 56, type: !6339)
!6347 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6239, file: !6240, line: 57, type: !1060)
!6348 = !DILocalVariable(name: "entry", arg: 4, scope: !6239, file: !6240, line: 57, type: !346)
!6349 = !DILocalVariable(name: "p1", arg: 5, scope: !6239, file: !6240, line: 58, type: !117)
!6350 = !DILocalVariable(name: "p2", arg: 6, scope: !6239, file: !6240, line: 58, type: !117)
!6351 = !DILocalVariable(name: "p3", arg: 7, scope: !6239, file: !6240, line: 58, type: !117)
!6352 = !DILocalVariable(name: "iframe", scope: !6239, file: !6240, line: 60, type: !2525)
!6353 = !DILocation(line: 0, scope: !6239)
!6354 = !DILocation(line: 85, column: 11, scope: !6239)
!6355 = !DILocation(line: 93, column: 10, scope: !6239)
!6356 = !DILocation(line: 98, column: 13, scope: !6239)
!6357 = !DILocation(line: 100, column: 15, scope: !6239)
!6358 = !DILocation(line: 100, column: 10, scope: !6239)
!6359 = !DILocation(line: 100, column: 13, scope: !6239)
!6360 = !DILocation(line: 101, column: 15, scope: !6239)
!6361 = !DILocation(line: 101, column: 10, scope: !6239)
!6362 = !DILocation(line: 101, column: 13, scope: !6239)
!6363 = !DILocation(line: 102, column: 15, scope: !6239)
!6364 = !DILocation(line: 102, column: 10, scope: !6239)
!6365 = !DILocation(line: 102, column: 13, scope: !6239)
!6366 = !DILocation(line: 103, column: 15, scope: !6239)
!6367 = !DILocation(line: 103, column: 10, scope: !6239)
!6368 = !DILocation(line: 103, column: 13, scope: !6239)
!6369 = !DILocation(line: 106, column: 10, scope: !6239)
!6370 = !DILocation(line: 106, column: 15, scope: !6239)
!6371 = !DILocation(line: 122, column: 29, scope: !6239)
!6372 = !DILocation(line: 122, column: 23, scope: !6239)
!6373 = !DILocation(line: 122, column: 27, scope: !6239)
!6374 = !DILocation(line: 123, column: 15, scope: !6239)
!6375 = !DILocation(line: 123, column: 23, scope: !6239)
!6376 = !DILocation(line: 143, column: 1, scope: !6239)
!6377 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6240, file: !6240, line: 530, type: !6378, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6380)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{null, !6243, !1060, !346}
!6380 = !{!6381, !6382, !6383}
!6381 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6377, file: !6240, line: 530, type: !6243)
!6382 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6377, file: !6240, line: 530, type: !1060)
!6383 = !DILocalVariable(name: "_main", arg: 3, scope: !6377, file: !6240, line: 531, type: !346)
!6384 = !DILocation(line: 0, scope: !6377)
!6385 = !DILocation(line: 535, column: 11, scope: !6377)
!6386 = !DILocation(line: 576, column: 2, scope: !6377)
!6387 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6388 = !DILocation(line: 603, column: 2, scope: !6377)
!6389 = distinct !DISubprogram(name: "z_arm_fault", scope: !6390, file: !6390, line: 1036, type: !6391, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6406)
!6390 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6391 = !DISubroutineType(types: !6392)
!6392 = !{null, !156, !156, !156, !6393}
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 32)
!6394 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6395)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6396)
!6396 = !{!6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6395, file: !296, line: 26, baseType: !156, size: 32)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6395, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6395, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6395, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6395, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6395, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6395, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6395, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6395, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6406 = !{!6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415, !6416}
!6407 = !DILocalVariable(name: "msp", arg: 1, scope: !6389, file: !6390, line: 1036, type: !156)
!6408 = !DILocalVariable(name: "psp", arg: 2, scope: !6389, file: !6390, line: 1036, type: !156)
!6409 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6389, file: !6390, line: 1036, type: !156)
!6410 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6389, file: !6390, line: 1037, type: !6393)
!6411 = !DILocalVariable(name: "reason", scope: !6389, file: !6390, line: 1039, type: !156)
!6412 = !DILocalVariable(name: "fault", scope: !6389, file: !6390, line: 1040, type: !118)
!6413 = !DILocalVariable(name: "recoverable", scope: !6389, file: !6390, line: 1041, type: !146)
!6414 = !DILocalVariable(name: "nested_exc", scope: !6389, file: !6390, line: 1041, type: !146)
!6415 = !DILocalVariable(name: "esf", scope: !6389, file: !6390, line: 1042, type: !2593)
!6416 = !DILocalVariable(name: "esf_copy", scope: !6389, file: !6390, line: 1047, type: !2594)
!6417 = !DILocation(line: 0, scope: !6389)
!6418 = !DILocation(line: 1040, column: 19, scope: !6389)
!6419 = !DILocation(line: 1041, column: 2, scope: !6389)
!6420 = !DILocation(line: 1047, column: 2, scope: !6389)
!6421 = !DILocation(line: 1047, column: 15, scope: !6389)
!6422 = !DILocalVariable(name: "key", arg: 1, scope: !6423, file: !6230, line: 84, type: !32)
!6423 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6424)
!6424 = !{!6422}
!6425 = !DILocation(line: 0, scope: !6423, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 1050, column: 2, scope: !6389)
!6427 = !DILocation(line: 95, column: 2, scope: !6423, inlinedAt: !6426)
!6428 = !{i64 2876073}
!6429 = !DILocation(line: 1055, column: 9, scope: !6389)
!6430 = !DILocation(line: 1056, column: 2, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !6390, line: 1056, column: 2)
!6432 = distinct !DILexicalBlock(scope: !6389, file: !6390, line: 1056, column: 2)
!6433 = !DILocation(line: 1056, column: 2, scope: !6432)
!6434 = !DILocation(line: 1056, column: 2, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !6390, line: 1056, column: 2)
!6436 = !DILocation(line: 1040, column: 24, scope: !6389)
!6437 = !DILocation(line: 1063, column: 11, scope: !6389)
!6438 = !DILocation(line: 1064, column: 6, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6389, file: !6390, line: 1064, column: 6)
!6440 = !{i8 0, i8 2}
!6441 = !DILocation(line: 1064, column: 6, scope: !6389)
!6442 = !DILocation(line: 1070, column: 20, scope: !6389)
!6443 = !DILocation(line: 1070, column: 2, scope: !6389)
!6444 = !DILocation(line: 1089, column: 6, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6389, file: !6390, line: 1089, column: 6)
!6446 = !DILocation(line: 0, scope: !6445)
!6447 = !DILocation(line: 1089, column: 6, scope: !6389)
!6448 = !DILocation(line: 1090, column: 28, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !6390, line: 1090, column: 7)
!6450 = distinct !DILexicalBlock(scope: !6445, file: !6390, line: 1089, column: 18)
!6451 = !DILocation(line: 1090, column: 44, scope: !6449)
!6452 = !DILocation(line: 1090, column: 7, scope: !6450)
!6453 = !DILocation(line: 1091, column: 24, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6449, file: !6390, line: 1090, column: 50)
!6455 = !DILocation(line: 1092, column: 3, scope: !6454)
!6456 = !DILocation(line: 1094, column: 23, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6445, file: !6390, line: 1093, column: 9)
!6458 = !DILocation(line: 1097, column: 2, scope: !6389)
!6459 = !DILocation(line: 1098, column: 1, scope: !6389)
!6460 = distinct !DISubprogram(name: "get_esf", scope: !6390, file: !6390, line: 894, type: !6461, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6464)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!2593, !156, !156, !156, !6463}
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!6464 = !{!6465, !6466, !6467, !6468, !6469, !6470}
!6465 = !DILocalVariable(name: "msp", arg: 1, scope: !6460, file: !6390, line: 894, type: !156)
!6466 = !DILocalVariable(name: "psp", arg: 2, scope: !6460, file: !6390, line: 894, type: !156)
!6467 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6460, file: !6390, line: 894, type: !156)
!6468 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6460, file: !6390, line: 895, type: !6463)
!6469 = !DILocalVariable(name: "alternative_state_exc", scope: !6460, file: !6390, line: 897, type: !146)
!6470 = !DILocalVariable(name: "ptr_esf", scope: !6460, file: !6390, line: 898, type: !2593)
!6471 = !DILocation(line: 0, scope: !6460)
!6472 = !DILocation(line: 900, column: 14, scope: !6460)
!6473 = !DILocation(line: 902, column: 49, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6460, file: !6390, line: 902, column: 6)
!6475 = !DILocation(line: 902, column: 6, scope: !6460)
!6476 = !DILocation(line: 983, column: 18, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6460, file: !6390, line: 983, column: 6)
!6478 = !DILocation(line: 991, column: 7, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !6390, line: 990, column: 30)
!6480 = distinct !DILexicalBlock(scope: !6460, file: !6390, line: 990, column: 6)
!6481 = !DILocation(line: 998, column: 16, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !6390, line: 995, column: 10)
!6483 = distinct !DILexicalBlock(scope: !6479, file: !6390, line: 991, column: 7)
!6484 = !DILocation(line: 1002, column: 2, scope: !6460)
!6485 = !DILocation(line: 1003, column: 1, scope: !6460)
!6486 = distinct !DISubprogram(name: "fault_handle", scope: !6390, file: !6390, line: 786, type: !6487, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6489)
!6487 = !DISubroutineType(types: !6488)
!6488 = !{!156, !2593, !118, !6463}
!6489 = !{!6490, !6491, !6492, !6493}
!6490 = !DILocalVariable(name: "esf", arg: 1, scope: !6486, file: !6390, line: 786, type: !2593)
!6491 = !DILocalVariable(name: "fault", arg: 2, scope: !6486, file: !6390, line: 786, type: !118)
!6492 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6486, file: !6390, line: 786, type: !6463)
!6493 = !DILocalVariable(name: "reason", scope: !6486, file: !6390, line: 788, type: !156)
!6494 = !DILocation(line: 0, scope: !6486)
!6495 = !DILocation(line: 790, column: 15, scope: !6486)
!6496 = !DILocation(line: 792, column: 2, scope: !6486)
!6497 = !DILocation(line: 794, column: 12, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6486, file: !6390, line: 792, column: 17)
!6499 = !DILocation(line: 795, column: 3, scope: !6498)
!6500 = !DILocation(line: 800, column: 12, scope: !6498)
!6501 = !DILocation(line: 801, column: 3, scope: !6498)
!6502 = !DILocation(line: 803, column: 12, scope: !6498)
!6503 = !DILocation(line: 804, column: 3, scope: !6498)
!6504 = !DILocation(line: 806, column: 12, scope: !6498)
!6505 = !DILocation(line: 807, column: 3, scope: !6498)
!6506 = !DILocation(line: 814, column: 3, scope: !6498)
!6507 = !DILocation(line: 815, column: 3, scope: !6498)
!6508 = !DILocation(line: 829, column: 2, scope: !6486)
!6509 = distinct !DISubprogram(name: "hard_fault", scope: !6390, file: !6390, line: 709, type: !6510, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6512)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{!156, !2593, !6463}
!6512 = !{!6513, !6514, !6515}
!6513 = !DILocalVariable(name: "esf", arg: 1, scope: !6509, file: !6390, line: 709, type: !2593)
!6514 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6509, file: !6390, line: 709, type: !6463)
!6515 = !DILocalVariable(name: "reason", scope: !6509, file: !6390, line: 711, type: !156)
!6516 = !DILocation(line: 0, scope: !6509)
!6517 = !DILocation(line: 732, column: 15, scope: !6509)
!6518 = !DILocation(line: 734, column: 12, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6509, file: !6390, line: 734, column: 6)
!6520 = !DILocation(line: 734, column: 17, scope: !6519)
!6521 = !DILocation(line: 734, column: 41, scope: !6519)
!6522 = !DILocation(line: 734, column: 6, scope: !6509)
!6523 = !DILocation(line: 736, column: 19, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6519, file: !6390, line: 736, column: 13)
!6525 = !DILocation(line: 736, column: 49, scope: !6524)
!6526 = !DILocation(line: 736, column: 13, scope: !6519)
!6527 = !DILocation(line: 738, column: 19, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6524, file: !6390, line: 738, column: 13)
!6529 = !DILocation(line: 738, column: 24, scope: !6528)
!6530 = !DILocation(line: 738, column: 47, scope: !6528)
!6531 = !DILocation(line: 738, column: 13, scope: !6524)
!6532 = !DILocation(line: 740, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !6390, line: 740, column: 7)
!6534 = distinct !DILexicalBlock(scope: !6528, file: !6390, line: 738, column: 53)
!6535 = !DILocation(line: 740, column: 7, scope: !6534)
!6536 = !DILocation(line: 742, column: 24, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !6390, line: 740, column: 38)
!6538 = !DILocation(line: 743, column: 3, scope: !6537)
!6539 = !DILocation(line: 743, column: 20, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6533, file: !6390, line: 743, column: 14)
!6541 = !DILocation(line: 743, column: 25, scope: !6540)
!6542 = !DILocation(line: 743, column: 52, scope: !6540)
!6543 = !DILocation(line: 743, column: 14, scope: !6533)
!6544 = !DILocation(line: 744, column: 13, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6540, file: !6390, line: 743, column: 58)
!6546 = !DILocation(line: 745, column: 3, scope: !6545)
!6547 = !DILocation(line: 745, column: 20, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6540, file: !6390, line: 745, column: 14)
!6549 = !DILocation(line: 745, column: 25, scope: !6548)
!6550 = !DILocation(line: 745, column: 52, scope: !6548)
!6551 = !DILocation(line: 745, column: 14, scope: !6540)
!6552 = !DILocation(line: 746, column: 13, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6548, file: !6390, line: 745, column: 58)
!6554 = !DILocation(line: 747, column: 3, scope: !6553)
!6555 = !DILocation(line: 747, column: 20, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6548, file: !6390, line: 747, column: 14)
!6557 = !DILocation(line: 747, column: 52, scope: !6556)
!6558 = !DILocation(line: 747, column: 14, scope: !6548)
!6559 = !DILocation(line: 748, column: 13, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6556, file: !6390, line: 747, column: 58)
!6561 = !DILocation(line: 754, column: 4, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !6390, line: 754, column: 4)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !6390, line: 754, column: 4)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !6390, line: 754, column: 4)
!6565 = distinct !DILexicalBlock(scope: !6556, file: !6390, line: 753, column: 10)
!6566 = !DILocation(line: 758, column: 3, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !6390, line: 758, column: 3)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !6390, line: 758, column: 3)
!6569 = distinct !DILexicalBlock(scope: !6570, file: !6390, line: 758, column: 3)
!6570 = distinct !DILexicalBlock(scope: !6528, file: !6390, line: 757, column: 9)
!6571 = !DILocation(line: 766, column: 2, scope: !6509)
!6572 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6390, file: !6390, line: 229, type: !6487, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6573)
!6573 = !{!6574, !6575, !6576, !6577, !6578, !6579}
!6574 = !DILocalVariable(name: "esf", arg: 1, scope: !6572, file: !6390, line: 229, type: !2593)
!6575 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6572, file: !6390, line: 229, type: !118)
!6576 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6572, file: !6390, line: 230, type: !6463)
!6577 = !DILocalVariable(name: "reason", scope: !6572, file: !6390, line: 232, type: !156)
!6578 = !DILocalVariable(name: "mmfar", scope: !6572, file: !6390, line: 233, type: !156)
!6579 = !DILocalVariable(name: "temp", scope: !6580, file: !6390, line: 254, type: !156)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !6390, line: 244, column: 48)
!6581 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 244, column: 6)
!6582 = !DILocation(line: 0, scope: !6572)
!6583 = !DILocation(line: 237, column: 12, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 237, column: 6)
!6585 = !DILocation(line: 241, column: 12, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 241, column: 6)
!6587 = !DILocation(line: 244, column: 12, scope: !6581)
!6588 = !DILocation(line: 244, column: 17, scope: !6581)
!6589 = !DILocation(line: 244, column: 42, scope: !6581)
!6590 = !DILocation(line: 244, column: 6, scope: !6572)
!6591 = !DILocation(line: 254, column: 24, scope: !6580)
!6592 = !DILocation(line: 0, scope: !6580)
!6593 = !DILocation(line: 256, column: 13, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6580, file: !6390, line: 256, column: 7)
!6595 = !DILocation(line: 256, column: 18, scope: !6594)
!6596 = !DILocation(line: 256, column: 44, scope: !6594)
!6597 = !DILocation(line: 256, column: 7, scope: !6580)
!6598 = !DILocation(line: 261, column: 15, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !6390, line: 259, column: 30)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !6390, line: 259, column: 8)
!6601 = distinct !DILexicalBlock(scope: !6594, file: !6390, line: 256, column: 50)
!6602 = !DILocation(line: 262, column: 4, scope: !6599)
!6603 = !DILocation(line: 265, column: 12, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 265, column: 6)
!6605 = !DILocation(line: 269, column: 12, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 269, column: 6)
!6607 = !DILocation(line: 288, column: 12, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 288, column: 6)
!6609 = !DILocation(line: 288, column: 17, scope: !6608)
!6610 = !DILocation(line: 288, column: 41, scope: !6608)
!6611 = !DILocation(line: 289, column: 9, scope: !6608)
!6612 = !DILocation(line: 289, column: 14, scope: !6608)
!6613 = !DILocation(line: 288, column: 6, scope: !6572)
!6614 = !DILocation(line: 348, column: 2, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !6390, line: 348, column: 2)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !6390, line: 348, column: 2)
!6617 = distinct !DILexicalBlock(scope: !6608, file: !6390, line: 289, column: 40)
!6618 = !DILocation(line: 348, column: 2, scope: !6616)
!6619 = !DILocation(line: 348, column: 2, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6615, file: !6390, line: 348, column: 2)
!6621 = !DILocation(line: 360, column: 12, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6572, file: !6390, line: 360, column: 6)
!6623 = !DILocation(line: 360, column: 17, scope: !6622)
!6624 = !DILocation(line: 360, column: 41, scope: !6622)
!6625 = !DILocation(line: 360, column: 6, scope: !6572)
!6626 = !DILocation(line: 361, column: 14, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !6390, line: 360, column: 47)
!6628 = !DILocation(line: 362, column: 2, scope: !6627)
!6629 = !DILocation(line: 366, column: 12, scope: !6572)
!6630 = !DILocation(line: 369, column: 15, scope: !6572)
!6631 = !DILocation(line: 371, column: 2, scope: !6572)
!6632 = distinct !DISubprogram(name: "bus_fault", scope: !6390, file: !6390, line: 383, type: !6633, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!118, !2593, !118, !6463}
!6635 = !{!6636, !6637, !6638, !6639, !6640}
!6636 = !DILocalVariable(name: "esf", arg: 1, scope: !6632, file: !6390, line: 383, type: !2593)
!6637 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6632, file: !6390, line: 383, type: !118)
!6638 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6632, file: !6390, line: 383, type: !6463)
!6639 = !DILocalVariable(name: "reason", scope: !6632, file: !6390, line: 385, type: !156)
!6640 = !DILocalVariable(name: "bfar", scope: !6641, file: !6390, line: 405, type: !156)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !6390, line: 395, column: 42)
!6642 = distinct !DILexicalBlock(scope: !6632, file: !6390, line: 395, column: 6)
!6643 = !DILocation(line: 0, scope: !6632)
!6644 = !DILocation(line: 389, column: 11, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6632, file: !6390, line: 389, column: 6)
!6646 = !DILocation(line: 392, column: 11, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6632, file: !6390, line: 392, column: 6)
!6648 = !DILocation(line: 395, column: 11, scope: !6642)
!6649 = !DILocation(line: 395, column: 16, scope: !6642)
!6650 = !DILocation(line: 395, column: 6, scope: !6632)
!6651 = !DILocation(line: 405, column: 3, scope: !6641)
!6652 = !DILocation(line: 0, scope: !6641)
!6653 = !DILocation(line: 407, column: 13, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6641, file: !6390, line: 407, column: 7)
!6655 = !DILocation(line: 407, column: 18, scope: !6654)
!6656 = !DILocation(line: 407, column: 44, scope: !6654)
!6657 = !DILocation(line: 407, column: 7, scope: !6641)
!6658 = !DILocation(line: 411, column: 15, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !6390, line: 409, column: 30)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !6390, line: 409, column: 8)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !6390, line: 407, column: 50)
!6662 = !DILocation(line: 412, column: 4, scope: !6659)
!6663 = !DILocation(line: 415, column: 11, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6632, file: !6390, line: 415, column: 6)
!6665 = !DILocation(line: 418, column: 12, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6632, file: !6390, line: 418, column: 6)
!6667 = !DILocation(line: 418, column: 17, scope: !6666)
!6668 = !DILocation(line: 418, column: 41, scope: !6666)
!6669 = !DILocation(line: 418, column: 6, scope: !6632)
!6670 = !DILocation(line: 423, column: 18, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6666, file: !6390, line: 423, column: 13)
!6672 = !DILocation(line: 524, column: 12, scope: !6632)
!6673 = !DILocation(line: 526, column: 15, scope: !6632)
!6674 = !DILocation(line: 528, column: 2, scope: !6632)
!6675 = distinct !DISubprogram(name: "usage_fault", scope: !6390, file: !6390, line: 539, type: !6676, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6680)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!156, !6678}
!6678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6679, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2594)
!6680 = !{!6681, !6682}
!6681 = !DILocalVariable(name: "esf", arg: 1, scope: !6675, file: !6390, line: 539, type: !6678)
!6682 = !DILocalVariable(name: "reason", scope: !6675, file: !6390, line: 541, type: !156)
!6683 = !DILocation(line: 0, scope: !6675)
!6684 = !DILocation(line: 546, column: 12, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 546, column: 6)
!6686 = !DILocation(line: 549, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 549, column: 6)
!6688 = !DILocation(line: 567, column: 12, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 567, column: 6)
!6690 = !DILocation(line: 570, column: 12, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 570, column: 6)
!6692 = !DILocation(line: 573, column: 12, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 573, column: 6)
!6694 = !DILocation(line: 576, column: 12, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6675, file: !6390, line: 576, column: 6)
!6696 = !DILocation(line: 581, column: 12, scope: !6675)
!6697 = !DILocation(line: 583, column: 2, scope: !6675)
!6698 = distinct !DISubprogram(name: "debug_monitor", scope: !6390, file: !6390, line: 632, type: !6699, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6701)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{null, !2593, !6463}
!6701 = !{!6702, !6703}
!6702 = !DILocalVariable(name: "esf", arg: 1, scope: !6698, file: !6390, line: 632, type: !2593)
!6703 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6698, file: !6390, line: 632, type: !6463)
!6704 = !DILocation(line: 0, scope: !6698)
!6705 = !DILocation(line: 634, column: 15, scope: !6698)
!6706 = !DILocation(line: 652, column: 1, scope: !6698)
!6707 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6390, file: !6390, line: 658, type: !6708, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !6710)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!146, !2593}
!6710 = !{!6711, !6712, !6713}
!6711 = !DILocalVariable(name: "esf", arg: 1, scope: !6707, file: !6390, line: 658, type: !2593)
!6712 = !DILocalVariable(name: "ret_addr", scope: !6707, file: !6390, line: 660, type: !2363)
!6713 = !DILocalVariable(name: "fault_insn", scope: !6707, file: !6390, line: 686, type: !279)
!6714 = !DILocation(line: 0, scope: !6707)
!6715 = !DILocation(line: 660, column: 46, scope: !6707)
!6716 = !DILocation(line: 660, column: 23, scope: !6707)
!6717 = !DILocation(line: 682, column: 11, scope: !6707)
!6718 = !DILocation(line: 271, column: 3, scope: !6719, inlinedAt: !6720)
!6719 = distinct !DISubprogram(name: "__DSB", scope: !6109, file: !6109, line: 269, type: !359, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !1933)
!6720 = distinct !DILocation(line: 683, column: 2, scope: !6707)
!6721 = !{i64 6968027}
!6722 = !DILocation(line: 260, column: 3, scope: !6723, inlinedAt: !6724)
!6723 = distinct !DISubprogram(name: "__ISB", scope: !6109, file: !6109, line: 258, type: !359, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !1933)
!6724 = distinct !DILocation(line: 684, column: 2, scope: !6707)
!6725 = !{i64 6967744}
!6726 = !DILocation(line: 686, column: 35, scope: !6707)
!6727 = !DILocation(line: 686, column: 24, scope: !6707)
!6728 = !DILocation(line: 688, column: 11, scope: !6707)
!6729 = !DILocation(line: 271, column: 3, scope: !6719, inlinedAt: !6730)
!6730 = distinct !DILocation(line: 689, column: 2, scope: !6707)
!6731 = !DILocation(line: 260, column: 3, scope: !6723, inlinedAt: !6732)
!6732 = distinct !DILocation(line: 690, column: 2, scope: !6707)
!6733 = !DILocation(line: 693, column: 45, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6707, file: !6390, line: 693, column: 6)
!6735 = !DILocation(line: 699, column: 1, scope: !6707)
!6736 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6390, file: !6390, line: 1107, type: !359, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !1933)
!6737 = !DILocation(line: 1111, column: 11, scope: !6736)
!6738 = !DILocation(line: 1136, column: 1, scope: !6736)
!6739 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6740, file: !6740, line: 26, type: !359, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6741)
!6740 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6741 = !{!6742}
!6742 = !DILocalVariable(name: "irq", scope: !6739, file: !6740, line: 28, type: !118)
!6743 = !DILocation(line: 0, scope: !6739)
!6744 = !DILocation(line: 30, column: 2, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6739, file: !6740, line: 30, column: 2)
!6746 = !DILocation(line: 31, column: 3, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6740, line: 30, column: 39)
!6748 = distinct !DILexicalBlock(scope: !6745, file: !6740, line: 30, column: 2)
!6749 = !DILocation(line: 30, column: 35, scope: !6748)
!6750 = !DILocation(line: 30, column: 13, scope: !6748)
!6751 = distinct !{!6751, !6744, !6752}
!6752 = !DILocation(line: 32, column: 2, scope: !6745)
!6753 = !DILocation(line: 33, column: 1, scope: !6739)
!6754 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1583, file: !1583, line: 1814, type: !6149, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6755)
!6755 = !{!6756, !6757}
!6756 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6754, file: !1583, line: 1814, type: !2421)
!6757 = !DILocalVariable(name: "priority", arg: 2, scope: !6754, file: !1583, line: 1814, type: !156)
!6758 = !DILocation(line: 0, scope: !6754)
!6759 = !DILocation(line: 1816, column: 7, scope: !6754)
!6760 = !DILocation(line: 0, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6754, file: !1583, line: 1816, column: 7)
!6762 = !DILocation(line: 1824, column: 1, scope: !6754)
!6763 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6764, file: !6764, line: 27, type: !6765, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6864)
!6764 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !6767}
!6767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !6768)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 32)
!6769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !6770)
!6770 = !{!6771, !6829, !6841, !6842, !6843, !6844, !6859}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6769, file: !225, line: 247, baseType: !6772, size: 384)
!6772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6773)
!6773 = !{!6774, !6798, !6805, !6806, !6807, !6816, !6817, !6818}
!6774 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !225, line: 60, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !225, line: 60, size: 64, elements: !6776)
!6776 = !{!6777, !6792}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6775, file: !225, line: 61, baseType: !6778, size: 64)
!6778 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6779)
!6779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6780)
!6780 = !{!6781, !6787}
!6781 = !DIDerivedType(tag: DW_TAG_member, scope: !6779, file: !235, line: 38, baseType: !6782, size: 32)
!6782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6779, file: !235, line: 38, size: 32, elements: !6783)
!6783 = !{!6784, !6786}
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6782, file: !235, line: 39, baseType: !6785, size: 32)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6779, size: 32)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6782, file: !235, line: 40, baseType: !6785, size: 32)
!6787 = !DIDerivedType(tag: DW_TAG_member, scope: !6779, file: !235, line: 42, baseType: !6788, size: 32, offset: 32)
!6788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6779, file: !235, line: 42, size: 32, elements: !6789)
!6789 = !{!6790, !6791}
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6788, file: !235, line: 43, baseType: !6785, size: 32)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6788, file: !235, line: 44, baseType: !6785, size: 32)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6775, file: !225, line: 62, baseType: !6793, size: 64)
!6793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6794)
!6794 = !{!6795}
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6793, file: !251, line: 50, baseType: !6796, size: 64)
!6796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6797, size: 64, elements: !256)
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6793, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6772, file: !225, line: 68, baseType: !6799, size: 32, offset: 64)
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6801)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6802)
!6802 = !{!6803}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6801, file: !261, line: 232, baseType: !6804, size: 64)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6779)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6772, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6772, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6807 = !DIDerivedType(tag: DW_TAG_member, scope: !6772, file: !225, line: 90, baseType: !6808, size: 16, offset: 112)
!6808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6772, file: !225, line: 90, size: 16, elements: !6809)
!6809 = !{!6810, !6815}
!6810 = !DIDerivedType(tag: DW_TAG_member, scope: !6808, file: !225, line: 91, baseType: !6811, size: 16)
!6811 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6808, file: !225, line: 91, size: 16, elements: !6812)
!6812 = !{!6813, !6814}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6811, file: !225, line: 96, baseType: !275, size: 8)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6811, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6808, file: !225, line: 100, baseType: !279, size: 16)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6772, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6772, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6772, file: !225, line: 131, baseType: !6819, size: 192, offset: 192)
!6819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6820)
!6820 = !{!6821, !6822, !6828}
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6819, file: !261, line: 245, baseType: !6778, size: 64)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6819, file: !261, line: 246, baseType: !6823, size: 32, offset: 64)
!6823 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6824)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 32)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{null, !6827}
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 32)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6819, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6769, file: !225, line: 250, baseType: !6830, size: 288, offset: 384)
!6830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6831)
!6831 = !{!6832, !6833, !6834, !6835, !6836, !6837, !6838, !6839, !6840}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6830, file: !296, line: 26, baseType: !156, size: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6830, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6830, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6830, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6830, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6830, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6830, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6830, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6830, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6769, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6769, file: !225, line: 256, baseType: !6800, size: 64, offset: 704)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6769, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6769, file: !225, line: 325, baseType: !6845, size: 32, offset: 800)
!6845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6846, size: 32)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6847)
!6847 = !{!6848, !6854, !6855}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6846, file: !220, line: 5074, baseType: !6849, size: 96)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !6850)
!6850 = !{!6851, !6852, !6853}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6849, file: !316, line: 57, baseType: !319, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6849, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6849, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6846, file: !220, line: 5075, baseType: !6800, size: 64, offset: 96)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6846, file: !220, line: 5076, baseType: !6856, size: 32, offset: 160)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !6857)
!6857 = !{!6858}
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6856, file: !328, line: 52, baseType: !22, size: 32)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6769, file: !225, line: 343, baseType: !6860, size: 64, offset: 832)
!6860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6861)
!6861 = !{!6862, !6863}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6860, file: !296, line: 63, baseType: !156, size: 32)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6860, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6864 = !{!6865}
!6865 = !DILocalVariable(name: "thread", arg: 1, scope: !6763, file: !6764, line: 27, type: !6767)
!6866 = !DILocation(line: 0, scope: !6763)
!6867 = !DILocation(line: 29, column: 6, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6763, file: !6764, line: 29, column: 6)
!6869 = !DILocation(line: 29, column: 15, scope: !6868)
!6870 = !DILocation(line: 29, column: 6, scope: !6763)
!6871 = !DILocation(line: 1031, column: 3, scope: !6872, inlinedAt: !6875)
!6872 = distinct !DISubprogram(name: "__get_IPSR", scope: !6109, file: !6109, line: 1027, type: !6196, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6873)
!6873 = !{!6874}
!6874 = !DILocalVariable(name: "result", scope: !6872, file: !6109, line: 1029, type: !156)
!6875 = distinct !DILocation(line: 48, column: 10, scope: !6876, inlinedAt: !6880)
!6876 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6877, file: !6877, line: 46, type: !6878, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !1933)
!6877 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!146}
!6880 = distinct !DILocation(line: 30, column: 7, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6764, line: 30, column: 7)
!6882 = distinct !DILexicalBlock(scope: !6868, file: !6764, line: 29, column: 26)
!6883 = !{i64 6969251}
!6884 = !DILocation(line: 0, scope: !6872, inlinedAt: !6875)
!6885 = !DILocation(line: 48, column: 9, scope: !6876, inlinedAt: !6880)
!6886 = !DILocation(line: 30, column: 7, scope: !6882)
!6887 = !DILocation(line: 42, column: 14, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6881, file: !6764, line: 30, column: 25)
!6889 = !DILocation(line: 48, column: 15, scope: !6888)
!6890 = !DILocation(line: 49, column: 3, scope: !6888)
!6891 = !DILocation(line: 52, column: 2, scope: !6763)
!6892 = !DILocation(line: 53, column: 1, scope: !6763)
!6893 = distinct !DISubprogram(name: "strcpy", scope: !6894, file: !6894, line: 20, type: !6895, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6899)
!6894 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!1060, !6897, !6898}
!6897 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1060)
!6898 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!6899 = !{!6900, !6901, !6902}
!6900 = !DILocalVariable(name: "d", arg: 1, scope: !6893, file: !6894, line: 20, type: !6897)
!6901 = !DILocalVariable(name: "s", arg: 2, scope: !6893, file: !6894, line: 20, type: !6898)
!6902 = !DILocalVariable(name: "dest", scope: !6893, file: !6894, line: 22, type: !1060)
!6903 = !DILocation(line: 0, scope: !6893)
!6904 = !DILocation(line: 24, column: 9, scope: !6893)
!6905 = !DILocation(line: 24, column: 12, scope: !6893)
!6906 = !DILocation(line: 24, column: 2, scope: !6893)
!6907 = !DILocation(line: 25, column: 6, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6893, file: !6894, line: 24, column: 21)
!6909 = !DILocation(line: 26, column: 4, scope: !6908)
!6910 = !DILocation(line: 27, column: 4, scope: !6908)
!6911 = distinct !{!6911, !6906, !6912}
!6912 = !DILocation(line: 28, column: 2, scope: !6893)
!6913 = !DILocation(line: 30, column: 5, scope: !6893)
!6914 = !DILocation(line: 32, column: 2, scope: !6893)
!6915 = distinct !DISubprogram(name: "strncpy", scope: !6894, file: !6894, line: 42, type: !6916, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6918)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!1060, !6897, !6898, !323}
!6918 = !{!6919, !6920, !6921, !6922}
!6919 = !DILocalVariable(name: "d", arg: 1, scope: !6915, file: !6894, line: 42, type: !6897)
!6920 = !DILocalVariable(name: "s", arg: 2, scope: !6915, file: !6894, line: 42, type: !6898)
!6921 = !DILocalVariable(name: "n", arg: 3, scope: !6915, file: !6894, line: 42, type: !323)
!6922 = !DILocalVariable(name: "dest", scope: !6915, file: !6894, line: 44, type: !1060)
!6923 = !DILocation(line: 0, scope: !6915)
!6924 = !DILocation(line: 46, column: 12, scope: !6915)
!6925 = !DILocation(line: 46, column: 17, scope: !6915)
!6926 = !DILocation(line: 46, column: 20, scope: !6915)
!6927 = !DILocation(line: 46, column: 23, scope: !6915)
!6928 = !DILocation(line: 46, column: 2, scope: !6915)
!6929 = !DILocation(line: 47, column: 6, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6915, file: !6894, line: 46, column: 32)
!6931 = !DILocation(line: 48, column: 4, scope: !6930)
!6932 = !DILocation(line: 49, column: 4, scope: !6930)
!6933 = !DILocation(line: 50, column: 4, scope: !6930)
!6934 = distinct !{!6934, !6928, !6935}
!6935 = !DILocation(line: 51, column: 2, scope: !6915)
!6936 = !DILocation(line: 54, column: 6, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6915, file: !6894, line: 53, column: 16)
!6938 = !DILocation(line: 55, column: 4, scope: !6937)
!6939 = !DILocation(line: 56, column: 4, scope: !6937)
!6940 = !DILocation(line: 53, column: 11, scope: !6915)
!6941 = !DILocation(line: 53, column: 2, scope: !6915)
!6942 = distinct !{!6942, !6941, !6943}
!6943 = !DILocation(line: 57, column: 2, scope: !6915)
!6944 = !DILocation(line: 59, column: 2, scope: !6915)
!6945 = distinct !DISubprogram(name: "strchr", scope: !6894, file: !6894, line: 69, type: !6946, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6948)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{!1060, !133, !118}
!6948 = !{!6949, !6950, !6951}
!6949 = !DILocalVariable(name: "s", arg: 1, scope: !6945, file: !6894, line: 69, type: !133)
!6950 = !DILocalVariable(name: "c", arg: 2, scope: !6945, file: !6894, line: 69, type: !118)
!6951 = !DILocalVariable(name: "tmp", scope: !6945, file: !6894, line: 71, type: !135)
!6952 = !DILocation(line: 0, scope: !6945)
!6953 = !DILocation(line: 73, column: 2, scope: !6945)
!6954 = !DILocation(line: 73, column: 10, scope: !6945)
!6955 = !DILocation(line: 73, column: 13, scope: !6945)
!6956 = !DILocation(line: 73, column: 21, scope: !6945)
!6957 = !DILocation(line: 74, column: 4, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6945, file: !6894, line: 73, column: 38)
!6959 = distinct !{!6959, !6953, !6960}
!6960 = !DILocation(line: 75, column: 2, scope: !6945)
!6961 = !DILocation(line: 77, column: 9, scope: !6945)
!6962 = !DILocation(line: 77, column: 2, scope: !6945)
!6963 = distinct !DISubprogram(name: "strrchr", scope: !6894, file: !6894, line: 87, type: !6946, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6964)
!6964 = !{!6965, !6966, !6967}
!6965 = !DILocalVariable(name: "s", arg: 1, scope: !6963, file: !6894, line: 87, type: !133)
!6966 = !DILocalVariable(name: "c", arg: 2, scope: !6963, file: !6894, line: 87, type: !118)
!6967 = !DILocalVariable(name: "match", scope: !6963, file: !6894, line: 89, type: !1060)
!6968 = !DILocation(line: 0, scope: !6963)
!6969 = !DILocation(line: 91, column: 2, scope: !6963)
!6970 = !DILocation(line: 92, column: 7, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6894, line: 92, column: 7)
!6972 = distinct !DILexicalBlock(scope: !6963, file: !6894, line: 91, column: 5)
!6973 = !DILocation(line: 92, column: 10, scope: !6971)
!6974 = !DILocation(line: 92, column: 7, scope: !6972)
!6975 = !DILocation(line: 95, column: 13, scope: !6963)
!6976 = !DILocation(line: 95, column: 2, scope: !6972)
!6977 = distinct !{!6977, !6969, !6978}
!6978 = !DILocation(line: 95, column: 15, scope: !6963)
!6979 = !DILocation(line: 97, column: 2, scope: !6963)
!6980 = distinct !DISubprogram(name: "strlen", scope: !6894, file: !6894, line: 107, type: !6981, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6983)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!323, !133}
!6983 = !{!6984, !6985}
!6984 = !DILocalVariable(name: "s", arg: 1, scope: !6980, file: !6894, line: 107, type: !133)
!6985 = !DILocalVariable(name: "n", scope: !6980, file: !6894, line: 109, type: !323)
!6986 = !DILocation(line: 0, scope: !6980)
!6987 = !DILocation(line: 111, column: 9, scope: !6980)
!6988 = !DILocation(line: 111, column: 12, scope: !6980)
!6989 = !DILocation(line: 111, column: 2, scope: !6980)
!6990 = !DILocation(line: 112, column: 4, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6980, file: !6894, line: 111, column: 21)
!6992 = !DILocation(line: 113, column: 4, scope: !6991)
!6993 = distinct !{!6993, !6989, !6994}
!6994 = !DILocation(line: 114, column: 2, scope: !6980)
!6995 = !DILocation(line: 116, column: 2, scope: !6980)
!6996 = distinct !DISubprogram(name: "strnlen", scope: !6894, file: !6894, line: 126, type: !6997, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !6999)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!323, !133, !323}
!6999 = !{!7000, !7001, !7002}
!7000 = !DILocalVariable(name: "s", arg: 1, scope: !6996, file: !6894, line: 126, type: !133)
!7001 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6996, file: !6894, line: 126, type: !323)
!7002 = !DILocalVariable(name: "n", scope: !6996, file: !6894, line: 128, type: !323)
!7003 = !DILocation(line: 0, scope: !6996)
!7004 = !DILocation(line: 130, column: 9, scope: !6996)
!7005 = !DILocation(line: 130, column: 12, scope: !6996)
!7006 = !DILocation(line: 130, column: 20, scope: !6996)
!7007 = !DILocation(line: 130, column: 2, scope: !6996)
!7008 = !DILocation(line: 131, column: 4, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6996, file: !6894, line: 130, column: 35)
!7010 = !DILocation(line: 132, column: 4, scope: !7009)
!7011 = distinct !{!7011, !7007, !7012}
!7012 = !DILocation(line: 133, column: 2, scope: !6996)
!7013 = !DILocation(line: 135, column: 2, scope: !6996)
!7014 = distinct !DISubprogram(name: "strcmp", scope: !6894, file: !6894, line: 145, type: !7015, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7017)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!118, !133, !133}
!7017 = !{!7018, !7019}
!7018 = !DILocalVariable(name: "s1", arg: 1, scope: !7014, file: !6894, line: 145, type: !133)
!7019 = !DILocalVariable(name: "s2", arg: 2, scope: !7014, file: !6894, line: 145, type: !133)
!7020 = !DILocation(line: 0, scope: !7014)
!7021 = !DILocation(line: 147, column: 10, scope: !7014)
!7022 = !DILocation(line: 147, column: 17, scope: !7014)
!7023 = !DILocation(line: 147, column: 14, scope: !7014)
!7024 = !DILocation(line: 147, column: 22, scope: !7014)
!7025 = !DILocation(line: 148, column: 5, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7014, file: !6894, line: 147, column: 40)
!7027 = !DILocation(line: 149, column: 5, scope: !7026)
!7028 = distinct !{!7028, !7029, !7030}
!7029 = !DILocation(line: 147, column: 2, scope: !7014)
!7030 = !DILocation(line: 150, column: 2, scope: !7014)
!7031 = !DILocation(line: 152, column: 9, scope: !7014)
!7032 = !DILocation(line: 152, column: 15, scope: !7014)
!7033 = !DILocation(line: 152, column: 13, scope: !7014)
!7034 = !DILocation(line: 152, column: 2, scope: !7014)
!7035 = distinct !DISubprogram(name: "strncmp", scope: !6894, file: !6894, line: 162, type: !7036, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7038)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!118, !133, !133, !323}
!7038 = !{!7039, !7040, !7041}
!7039 = !DILocalVariable(name: "s1", arg: 1, scope: !7035, file: !6894, line: 162, type: !133)
!7040 = !DILocalVariable(name: "s2", arg: 2, scope: !7035, file: !6894, line: 162, type: !133)
!7041 = !DILocalVariable(name: "n", arg: 3, scope: !7035, file: !6894, line: 162, type: !323)
!7042 = !DILocation(line: 0, scope: !7035)
!7043 = !DILocation(line: 164, column: 17, scope: !7035)
!7044 = !DILocation(line: 164, column: 21, scope: !7035)
!7045 = !DILocation(line: 164, column: 28, scope: !7035)
!7046 = !DILocation(line: 164, column: 25, scope: !7035)
!7047 = !DILocation(line: 164, column: 33, scope: !7035)
!7048 = !DILocation(line: 165, column: 5, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7035, file: !6894, line: 164, column: 51)
!7050 = !DILocation(line: 166, column: 5, scope: !7049)
!7051 = !DILocation(line: 167, column: 4, scope: !7049)
!7052 = distinct !{!7052, !7053, !7054}
!7053 = !DILocation(line: 164, column: 2, scope: !7035)
!7054 = !DILocation(line: 168, column: 2, scope: !7035)
!7055 = !DILocation(line: 170, column: 25, scope: !7035)
!7056 = !DILocation(line: 170, column: 31, scope: !7035)
!7057 = !DILocation(line: 170, column: 29, scope: !7035)
!7058 = !DILocation(line: 170, column: 9, scope: !7035)
!7059 = !DILocation(line: 170, column: 2, scope: !7035)
!7060 = distinct !DISubprogram(name: "strtok_r", scope: !6894, file: !6894, line: 180, type: !7061, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7064)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!1060, !1060, !133, !7063}
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!7064 = !{!7065, !7066, !7067, !7068, !7069}
!7065 = !DILocalVariable(name: "str", arg: 1, scope: !7060, file: !6894, line: 180, type: !1060)
!7066 = !DILocalVariable(name: "sep", arg: 2, scope: !7060, file: !6894, line: 180, type: !133)
!7067 = !DILocalVariable(name: "state", arg: 3, scope: !7060, file: !6894, line: 180, type: !7063)
!7068 = !DILocalVariable(name: "start", scope: !7060, file: !6894, line: 182, type: !1060)
!7069 = !DILocalVariable(name: "end", scope: !7060, file: !6894, line: 182, type: !1060)
!7070 = !DILocation(line: 0, scope: !7060)
!7071 = !DILocation(line: 184, column: 10, scope: !7060)
!7072 = !DILocation(line: 184, column: 22, scope: !7060)
!7073 = !DILocation(line: 187, column: 9, scope: !7060)
!7074 = !DILocation(line: 187, column: 16, scope: !7060)
!7075 = !DILocation(line: 187, column: 19, scope: !7060)
!7076 = !DILocation(line: 187, column: 2, scope: !7060)
!7077 = !DILocation(line: 188, column: 8, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7060, file: !6894, line: 187, column: 40)
!7079 = distinct !{!7079, !7076, !7080}
!7080 = !DILocation(line: 189, column: 2, scope: !7060)
!7081 = !DILocation(line: 198, column: 9, scope: !7060)
!7082 = !DILocation(line: 198, column: 18, scope: !7060)
!7083 = !DILocation(line: 198, column: 17, scope: !7060)
!7084 = !DILocation(line: 198, column: 2, scope: !7060)
!7085 = !DILocation(line: 199, column: 6, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7060, file: !6894, line: 198, column: 37)
!7087 = !DILocation(line: 198, column: 14, scope: !7060)
!7088 = distinct !{!7088, !7084, !7089}
!7089 = !DILocation(line: 200, column: 2, scope: !7060)
!7090 = !DILocation(line: 203, column: 8, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6894, line: 202, column: 20)
!7092 = distinct !DILexicalBlock(scope: !7060, file: !6894, line: 202, column: 6)
!7093 = !DILocation(line: 204, column: 16, scope: !7091)
!7094 = !DILocation(line: 205, column: 2, scope: !7091)
!7095 = !DILocation(line: 210, column: 1, scope: !7060)
!7096 = distinct !DISubprogram(name: "strcat", scope: !6894, file: !6894, line: 212, type: !6895, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7097)
!7097 = !{!7098, !7099}
!7098 = !DILocalVariable(name: "dest", arg: 1, scope: !7096, file: !6894, line: 212, type: !6897)
!7099 = !DILocalVariable(name: "src", arg: 2, scope: !7096, file: !6894, line: 212, type: !6898)
!7100 = !DILocation(line: 0, scope: !7096)
!7101 = !DILocation(line: 214, column: 16, scope: !7096)
!7102 = !DILocation(line: 214, column: 14, scope: !7096)
!7103 = !DILocation(line: 214, column: 2, scope: !7096)
!7104 = !DILocation(line: 215, column: 2, scope: !7096)
!7105 = distinct !DISubprogram(name: "strncat", scope: !6894, file: !6894, line: 218, type: !6916, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7106)
!7106 = !{!7107, !7108, !7109, !7110, !7111}
!7107 = !DILocalVariable(name: "dest", arg: 1, scope: !7105, file: !6894, line: 218, type: !6897)
!7108 = !DILocalVariable(name: "src", arg: 2, scope: !7105, file: !6894, line: 218, type: !6898)
!7109 = !DILocalVariable(name: "n", arg: 3, scope: !7105, file: !6894, line: 219, type: !323)
!7110 = !DILocalVariable(name: "orig_dest", scope: !7105, file: !6894, line: 221, type: !1060)
!7111 = !DILocalVariable(name: "len", scope: !7105, file: !6894, line: 222, type: !323)
!7112 = !DILocation(line: 0, scope: !7105)
!7113 = !DILocation(line: 222, column: 15, scope: !7105)
!7114 = !DILocation(line: 224, column: 7, scope: !7105)
!7115 = !DILocation(line: 225, column: 14, scope: !7105)
!7116 = !DILocation(line: 225, column: 19, scope: !7105)
!7117 = !DILocation(line: 225, column: 11, scope: !7105)
!7118 = !DILocation(line: 225, column: 23, scope: !7105)
!7119 = !DILocation(line: 225, column: 28, scope: !7105)
!7120 = !DILocation(line: 225, column: 2, scope: !7105)
!7121 = !DILocation(line: 226, column: 17, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7105, file: !6894, line: 225, column: 38)
!7123 = !DILocation(line: 226, column: 8, scope: !7122)
!7124 = !DILocation(line: 226, column: 11, scope: !7122)
!7125 = distinct !{!7125, !7120, !7126}
!7126 = !DILocation(line: 227, column: 2, scope: !7105)
!7127 = !DILocation(line: 228, column: 8, scope: !7105)
!7128 = !DILocation(line: 230, column: 2, scope: !7105)
!7129 = distinct !DISubprogram(name: "memcmp", scope: !6894, file: !6894, line: 239, type: !7130, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!118, !13, !13, !323}
!7132 = !{!7133, !7134, !7135, !7136, !7137}
!7133 = !DILocalVariable(name: "m1", arg: 1, scope: !7129, file: !6894, line: 239, type: !13)
!7134 = !DILocalVariable(name: "m2", arg: 2, scope: !7129, file: !6894, line: 239, type: !13)
!7135 = !DILocalVariable(name: "n", arg: 3, scope: !7129, file: !6894, line: 239, type: !323)
!7136 = !DILocalVariable(name: "c1", scope: !7129, file: !6894, line: 241, type: !133)
!7137 = !DILocalVariable(name: "c2", scope: !7129, file: !6894, line: 242, type: !133)
!7138 = !DILocation(line: 0, scope: !7129)
!7139 = !DILocation(line: 244, column: 7, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7129, file: !6894, line: 244, column: 6)
!7141 = !DILocation(line: 244, column: 6, scope: !7129)
!7142 = !DILocation(line: 248, column: 10, scope: !7129)
!7143 = !DILocation(line: 248, column: 14, scope: !7129)
!7144 = !DILocation(line: 248, column: 19, scope: !7129)
!7145 = !DILocation(line: 248, column: 2, scope: !7129)
!7146 = !DILocation(line: 248, column: 23, scope: !7129)
!7147 = !DILocation(line: 248, column: 30, scope: !7129)
!7148 = !DILocation(line: 248, column: 27, scope: !7129)
!7149 = !DILocation(line: 249, column: 5, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7129, file: !6894, line: 248, column: 36)
!7151 = !DILocation(line: 250, column: 5, scope: !7150)
!7152 = distinct !{!7152, !7145, !7153}
!7153 = !DILocation(line: 251, column: 2, scope: !7129)
!7154 = !DILocation(line: 253, column: 9, scope: !7129)
!7155 = !DILocation(line: 253, column: 15, scope: !7129)
!7156 = !DILocation(line: 253, column: 13, scope: !7129)
!7157 = !DILocation(line: 253, column: 2, scope: !7129)
!7158 = !DILocation(line: 254, column: 1, scope: !7129)
!7159 = distinct !DISubprogram(name: "memmove", scope: !6894, file: !6894, line: 263, type: !7160, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7162)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!117, !117, !13, !323}
!7162 = !{!7163, !7164, !7165, !7166, !7167}
!7163 = !DILocalVariable(name: "d", arg: 1, scope: !7159, file: !6894, line: 263, type: !117)
!7164 = !DILocalVariable(name: "s", arg: 2, scope: !7159, file: !6894, line: 263, type: !13)
!7165 = !DILocalVariable(name: "n", arg: 3, scope: !7159, file: !6894, line: 263, type: !323)
!7166 = !DILocalVariable(name: "dest", scope: !7159, file: !6894, line: 265, type: !1060)
!7167 = !DILocalVariable(name: "src", scope: !7159, file: !6894, line: 266, type: !133)
!7168 = !DILocation(line: 0, scope: !7159)
!7169 = !DILocation(line: 268, column: 21, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7159, file: !6894, line: 268, column: 6)
!7171 = !DILocation(line: 268, column: 28, scope: !7170)
!7172 = !DILocation(line: 268, column: 6, scope: !7159)
!7173 = !DILocation(line: 280, column: 12, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7170, file: !6894, line: 278, column: 9)
!7175 = !DILocation(line: 280, column: 3, scope: !7174)
!7176 = !DILocation(line: 275, column: 5, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6894, line: 274, column: 17)
!7178 = distinct !DILexicalBlock(scope: !7170, file: !6894, line: 268, column: 33)
!7179 = !DILocation(line: 276, column: 14, scope: !7177)
!7180 = !DILocation(line: 276, column: 4, scope: !7177)
!7181 = !DILocation(line: 276, column: 12, scope: !7177)
!7182 = !DILocation(line: 274, column: 12, scope: !7178)
!7183 = !DILocation(line: 274, column: 3, scope: !7178)
!7184 = distinct !{!7184, !7183, !7185}
!7185 = !DILocation(line: 277, column: 3, scope: !7178)
!7186 = !DILocation(line: 281, column: 12, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7174, file: !6894, line: 280, column: 17)
!7188 = !DILocation(line: 281, column: 10, scope: !7187)
!7189 = !DILocation(line: 282, column: 8, scope: !7187)
!7190 = !DILocation(line: 283, column: 7, scope: !7187)
!7191 = !DILocation(line: 284, column: 5, scope: !7187)
!7192 = distinct !{!7192, !7175, !7193}
!7193 = !DILocation(line: 285, column: 3, scope: !7174)
!7194 = !DILocation(line: 288, column: 2, scope: !7159)
!7195 = distinct !DISubprogram(name: "memcpy", scope: !6894, file: !6894, line: 298, type: !7196, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7200)
!7196 = !DISubroutineType(types: !7197)
!7197 = !{!117, !7198, !7199, !323}
!7198 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !117)
!7199 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7200 = !{!7201, !7202, !7203, !7204, !7205}
!7201 = !DILocalVariable(name: "d", arg: 1, scope: !7195, file: !6894, line: 298, type: !7198)
!7202 = !DILocalVariable(name: "s", arg: 2, scope: !7195, file: !6894, line: 298, type: !7199)
!7203 = !DILocalVariable(name: "n", arg: 3, scope: !7195, file: !6894, line: 298, type: !323)
!7204 = !DILocalVariable(name: "d_byte", scope: !7195, file: !6894, line: 302, type: !903)
!7205 = !DILocalVariable(name: "s_byte", scope: !7195, file: !6894, line: 303, type: !2712)
!7206 = !DILocation(line: 0, scope: !7195)
!7207 = !DILocation(line: 337, column: 11, scope: !7195)
!7208 = !DILocation(line: 337, column: 2, scope: !7195)
!7209 = !DILocation(line: 338, column: 25, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7195, file: !6894, line: 337, column: 16)
!7211 = !DILocation(line: 338, column: 17, scope: !7210)
!7212 = !DILocation(line: 338, column: 11, scope: !7210)
!7213 = !DILocation(line: 338, column: 15, scope: !7210)
!7214 = !DILocation(line: 339, column: 4, scope: !7210)
!7215 = distinct !{!7215, !7208, !7216}
!7216 = !DILocation(line: 340, column: 2, scope: !7195)
!7217 = !DILocation(line: 342, column: 2, scope: !7195)
!7218 = distinct !DISubprogram(name: "memset", scope: !6894, file: !6894, line: 352, type: !7219, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7221)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{!117, !117, !118, !323}
!7221 = !{!7222, !7223, !7224, !7225, !7226}
!7222 = !DILocalVariable(name: "buf", arg: 1, scope: !7218, file: !6894, line: 352, type: !117)
!7223 = !DILocalVariable(name: "c", arg: 2, scope: !7218, file: !6894, line: 352, type: !118)
!7224 = !DILocalVariable(name: "n", arg: 3, scope: !7218, file: !6894, line: 352, type: !323)
!7225 = !DILocalVariable(name: "d_byte", scope: !7218, file: !6894, line: 356, type: !903)
!7226 = !DILocalVariable(name: "c_byte", scope: !7218, file: !6894, line: 357, type: !144)
!7227 = !DILocation(line: 0, scope: !7218)
!7228 = !DILocation(line: 357, column: 25, scope: !7218)
!7229 = !DILocation(line: 389, column: 11, scope: !7218)
!7230 = !DILocation(line: 389, column: 2, scope: !7218)
!7231 = !DILocation(line: 390, column: 11, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7218, file: !6894, line: 389, column: 16)
!7233 = !DILocation(line: 390, column: 15, scope: !7232)
!7234 = !DILocation(line: 391, column: 4, scope: !7232)
!7235 = distinct !{!7235, !7230, !7236}
!7236 = !DILocation(line: 392, column: 2, scope: !7218)
!7237 = !DILocation(line: 394, column: 2, scope: !7218)
!7238 = distinct !DISubprogram(name: "memchr", scope: !6894, file: !6894, line: 404, type: !7239, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2709, retainedNodes: !7241)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!117, !13, !118, !323}
!7241 = !{!7242, !7243, !7244, !7245}
!7242 = !DILocalVariable(name: "s", arg: 1, scope: !7238, file: !6894, line: 404, type: !13)
!7243 = !DILocalVariable(name: "c", arg: 2, scope: !7238, file: !6894, line: 404, type: !118)
!7244 = !DILocalVariable(name: "n", arg: 3, scope: !7238, file: !6894, line: 404, type: !323)
!7245 = !DILocalVariable(name: "p", scope: !7246, file: !6894, line: 407, type: !2712)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !6894, line: 406, column: 14)
!7247 = distinct !DILexicalBlock(scope: !7238, file: !6894, line: 406, column: 6)
!7248 = !DILocation(line: 0, scope: !7238)
!7249 = !DILocation(line: 406, column: 8, scope: !7247)
!7250 = !DILocation(line: 406, column: 6, scope: !7238)
!7251 = !DILocation(line: 409, column: 3, scope: !7246)
!7252 = !DILocation(line: 0, scope: !7246)
!7253 = !DILocation(line: 410, column: 8, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !6894, line: 410, column: 8)
!7255 = distinct !DILexicalBlock(scope: !7246, file: !6894, line: 409, column: 6)
!7256 = !DILocation(line: 410, column: 13, scope: !7254)
!7257 = !DILocation(line: 410, column: 8, scope: !7255)
!7258 = distinct !{!7258, !7251, !7259}
!7259 = !DILocation(line: 414, column: 20, scope: !7246)
!7260 = !DILocation(line: 417, column: 2, scope: !7238)
!7261 = !DILocation(line: 418, column: 1, scope: !7238)
!7262 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !873, file: !873, line: 23, type: !3500, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7263)
!7263 = !{!7264}
!7264 = !DILocalVariable(name: "hook", arg: 1, scope: !7262, file: !873, line: 23, type: !432)
!7265 = !DILocation(line: 0, scope: !7262)
!7266 = !DILocation(line: 25, column: 15, scope: !7262)
!7267 = !DILocation(line: 26, column: 1, scope: !7262)
!7268 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !873, file: !873, line: 14, type: !433, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7269)
!7269 = !{!7270}
!7270 = !DILocalVariable(name: "c", arg: 1, scope: !7268, file: !873, line: 14, type: !118)
!7271 = !DILocation(line: 0, scope: !7268)
!7272 = !DILocation(line: 18, column: 2, scope: !7268)
!7273 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !873, file: !873, line: 28, type: !7274, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7276)
!7274 = !DISubroutineType(types: !7275)
!7275 = !{!118, !118, !869}
!7276 = !{!7277, !7278}
!7277 = !DILocalVariable(name: "c", arg: 1, scope: !7273, file: !873, line: 28, type: !118)
!7278 = !DILocalVariable(name: "stream", arg: 2, scope: !7273, file: !873, line: 28, type: !869)
!7279 = !DILocation(line: 0, scope: !7273)
!7280 = !DILocation(line: 30, column: 27, scope: !7273)
!7281 = !DILocation(line: 30, column: 50, scope: !7273)
!7282 = !DILocation(line: 30, column: 9, scope: !7273)
!7283 = !DILocation(line: 30, column: 2, scope: !7273)
!7284 = distinct !DISubprogram(name: "fputc", scope: !873, file: !873, line: 41, type: !7274, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7285)
!7285 = !{!7286, !7287}
!7286 = !DILocalVariable(name: "c", arg: 1, scope: !7284, file: !873, line: 41, type: !118)
!7287 = !DILocalVariable(name: "stream", arg: 2, scope: !7284, file: !873, line: 41, type: !869)
!7288 = !DILocation(line: 0, scope: !7284)
!7289 = !DILocation(line: 43, column: 9, scope: !7284)
!7290 = !DILocation(line: 43, column: 2, scope: !7284)
!7291 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7292, file: !7292, line: 72, type: !7274, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7293)
!7292 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!7293 = !{!7294, !7295}
!7294 = !DILocalVariable(name: "c", arg: 1, scope: !7291, file: !7292, line: 72, type: !118)
!7295 = !DILocalVariable(name: "stream", arg: 2, scope: !7291, file: !7292, line: 72, type: !869)
!7296 = !DILocation(line: 0, scope: !7291)
!7297 = !DILocation(line: 81, column: 2, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7291, file: !7292, line: 81, column: 2)
!7299 = !{i64 2151105796}
!7300 = !DILocation(line: 82, column: 9, scope: !7291)
!7301 = !DILocation(line: 82, column: 2, scope: !7291)
!7302 = distinct !DISubprogram(name: "fputs", scope: !873, file: !873, line: 46, type: !7303, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7306)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!118, !6898, !7305}
!7305 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !869)
!7306 = !{!7307, !7308, !7309, !7310}
!7307 = !DILocalVariable(name: "s", arg: 1, scope: !7302, file: !873, line: 46, type: !6898)
!7308 = !DILocalVariable(name: "stream", arg: 2, scope: !7302, file: !873, line: 46, type: !7305)
!7309 = !DILocalVariable(name: "len", scope: !7302, file: !873, line: 48, type: !118)
!7310 = !DILocalVariable(name: "ret", scope: !7302, file: !873, line: 49, type: !118)
!7311 = !DILocation(line: 0, scope: !7302)
!7312 = !DILocation(line: 48, column: 12, scope: !7302)
!7313 = !DILocation(line: 51, column: 8, scope: !7302)
!7314 = !DILocation(line: 53, column: 13, scope: !7302)
!7315 = !DILocation(line: 53, column: 9, scope: !7302)
!7316 = !DILocation(line: 53, column: 2, scope: !7302)
!7317 = distinct !DISubprogram(name: "fwrite", scope: !873, file: !873, line: 99, type: !7318, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7320)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{!323, !7199, !323, !323, !7305}
!7320 = !{!7321, !7322, !7323, !7324}
!7321 = !DILocalVariable(name: "ptr", arg: 1, scope: !7317, file: !873, line: 99, type: !7199)
!7322 = !DILocalVariable(name: "size", arg: 2, scope: !7317, file: !873, line: 99, type: !323)
!7323 = !DILocalVariable(name: "nitems", arg: 3, scope: !7317, file: !873, line: 99, type: !323)
!7324 = !DILocalVariable(name: "stream", arg: 4, scope: !7317, file: !873, line: 100, type: !7305)
!7325 = !DILocation(line: 0, scope: !7317)
!7326 = !DILocation(line: 102, column: 9, scope: !7317)
!7327 = !DILocation(line: 102, column: 2, scope: !7317)
!7328 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7292, file: !7292, line: 96, type: !7318, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7329)
!7329 = !{!7330, !7331, !7332, !7333}
!7330 = !DILocalVariable(name: "ptr", arg: 1, scope: !7328, file: !7292, line: 96, type: !7199)
!7331 = !DILocalVariable(name: "size", arg: 2, scope: !7328, file: !7292, line: 96, type: !323)
!7332 = !DILocalVariable(name: "nitems", arg: 3, scope: !7328, file: !7292, line: 96, type: !323)
!7333 = !DILocalVariable(name: "stream", arg: 4, scope: !7328, file: !7292, line: 96, type: !7305)
!7334 = !DILocation(line: 0, scope: !7328)
!7335 = !DILocation(line: 107, column: 2, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7328, file: !7292, line: 107, column: 2)
!7337 = !{i64 2151105900}
!7338 = !DILocation(line: 108, column: 9, scope: !7328)
!7339 = !DILocation(line: 108, column: 2, scope: !7328)
!7340 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !873, file: !873, line: 56, type: !7318, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7341)
!7341 = !{!7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349}
!7342 = !DILocalVariable(name: "ptr", arg: 1, scope: !7340, file: !873, line: 56, type: !7199)
!7343 = !DILocalVariable(name: "size", arg: 2, scope: !7340, file: !873, line: 56, type: !323)
!7344 = !DILocalVariable(name: "nitems", arg: 3, scope: !7340, file: !873, line: 57, type: !323)
!7345 = !DILocalVariable(name: "stream", arg: 4, scope: !7340, file: !873, line: 57, type: !7305)
!7346 = !DILocalVariable(name: "i", scope: !7340, file: !873, line: 59, type: !323)
!7347 = !DILocalVariable(name: "j", scope: !7340, file: !873, line: 60, type: !323)
!7348 = !DILocalVariable(name: "p", scope: !7340, file: !873, line: 61, type: !2712)
!7349 = !DILabel(scope: !7340, name: "done", file: !873, line: 82)
!7350 = !DILocation(line: 0, scope: !7340)
!7351 = !DILocation(line: 63, column: 14, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7340, file: !873, line: 63, column: 6)
!7353 = !DILocation(line: 63, column: 24, scope: !7352)
!7354 = !DILocation(line: 72, column: 3, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7340, file: !873, line: 70, column: 5)
!7356 = !DILocation(line: 0, scope: !7355)
!7357 = !DILocation(line: 73, column: 8, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !873, line: 73, column: 8)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !873, line: 72, column: 6)
!7360 = !DILocation(line: 73, column: 29, scope: !7358)
!7361 = !DILocation(line: 73, column: 27, scope: !7358)
!7362 = !DILocation(line: 73, column: 21, scope: !7358)
!7363 = !DILocation(line: 73, column: 33, scope: !7358)
!7364 = !DILocation(line: 73, column: 8, scope: !7359)
!7365 = !DILocation(line: 76, column: 5, scope: !7359)
!7366 = !DILocation(line: 77, column: 14, scope: !7355)
!7367 = !DILocation(line: 77, column: 3, scope: !7359)
!7368 = distinct !{!7368, !7354, !7369}
!7369 = !DILocation(line: 77, column: 17, scope: !7355)
!7370 = !DILocation(line: 79, column: 4, scope: !7355)
!7371 = !DILocation(line: 80, column: 13, scope: !7340)
!7372 = !DILocation(line: 80, column: 2, scope: !7355)
!7373 = distinct !{!7373, !7374, !7375}
!7374 = !DILocation(line: 70, column: 2, scope: !7340)
!7375 = !DILocation(line: 80, column: 16, scope: !7340)
!7376 = !DILocation(line: 82, column: 1, scope: !7340)
!7377 = !DILocation(line: 83, column: 17, scope: !7340)
!7378 = !DILocation(line: 83, column: 2, scope: !7340)
!7379 = !DILocation(line: 84, column: 1, scope: !7340)
!7380 = distinct !DISubprogram(name: "puts", scope: !873, file: !873, line: 106, type: !7381, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !866, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!118, !133}
!7383 = !{!7384}
!7384 = !DILocalVariable(name: "s", arg: 1, scope: !7380, file: !873, line: 106, type: !133)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 108, column: 6, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7380, file: !873, line: 108, column: 6)
!7388 = !DILocation(line: 108, column: 23, scope: !7387)
!7389 = !DILocation(line: 108, column: 6, scope: !7380)
!7390 = !DILocation(line: 112, column: 9, scope: !7380)
!7391 = !DILocation(line: 112, column: 29, scope: !7380)
!7392 = !DILocation(line: 112, column: 2, scope: !7380)
!7393 = !DILocation(line: 113, column: 1, scope: !7380)
!7394 = distinct !DISubprogram(name: "uart_console_init", scope: !967, file: !967, line: 588, type: !910, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7395)
!7395 = !{!7396}
!7396 = !DILocalVariable(name: "arg", arg: 1, scope: !7394, file: !967, line: 588, type: !888)
!7397 = !DILocation(line: 0, scope: !7394)
!7398 = !DILocation(line: 593, column: 7, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7394, file: !967, line: 593, column: 6)
!7400 = !DILocation(line: 593, column: 6, scope: !7394)
!7401 = !DILocation(line: 597, column: 2, scope: !7394)
!7402 = !DILocation(line: 599, column: 2, scope: !7394)
!7403 = !DILocation(line: 600, column: 1, scope: !7394)
!7404 = distinct !DISubprogram(name: "device_is_ready", scope: !3201, file: !3201, line: 47, type: !7405, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7407)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!146, !888}
!7407 = !{!7408}
!7408 = !DILocalVariable(name: "dev", arg: 1, scope: !7404, file: !3201, line: 47, type: !888)
!7409 = !DILocation(line: 0, scope: !7404)
!7410 = !DILocation(line: 55, column: 2, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7404, file: !3201, line: 55, column: 2)
!7412 = !{i64 2151378446}
!7413 = !DILocation(line: 56, column: 9, scope: !7404)
!7414 = !DILocation(line: 56, column: 2, scope: !7404)
!7415 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !967, file: !967, line: 573, type: !359, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !1933)
!7416 = !DILocation(line: 576, column: 2, scope: !7415)
!7417 = !DILocation(line: 579, column: 2, scope: !7415)
!7418 = !DILocation(line: 581, column: 1, scope: !7415)
!7419 = distinct !DISubprogram(name: "console_out", scope: !967, file: !967, line: 77, type: !433, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7420)
!7420 = !{!7421}
!7421 = !DILocalVariable(name: "c", arg: 1, scope: !7419, file: !967, line: 77, type: !118)
!7422 = !DILocation(line: 0, scope: !7419)
!7423 = !DILocation(line: 89, column: 11, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7419, file: !967, line: 89, column: 6)
!7425 = !DILocation(line: 89, column: 6, scope: !7419)
!7426 = !DILocation(line: 90, column: 3, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7424, file: !967, line: 89, column: 17)
!7428 = !DILocation(line: 91, column: 2, scope: !7427)
!7429 = !DILocation(line: 92, column: 34, scope: !7419)
!7430 = !DILocation(line: 92, column: 2, scope: !7419)
!7431 = !DILocation(line: 94, column: 2, scope: !7419)
!7432 = distinct !DISubprogram(name: "uart_poll_out", scope: !7433, file: !7433, line: 95, type: !906, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7434)
!7433 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/threads")
!7434 = !{!7435, !7436}
!7435 = !DILocalVariable(name: "dev", arg: 1, scope: !7432, file: !7433, line: 95, type: !888)
!7436 = !DILocalVariable(name: "out_char", arg: 2, scope: !7432, file: !7433, line: 95, type: !144)
!7437 = !DILocation(line: 0, scope: !7432)
!7438 = !DILocation(line: 105, column: 2, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7432, file: !7433, line: 105, column: 2)
!7440 = !{i64 2151461691}
!7441 = !DILocation(line: 106, column: 2, scope: !7432)
!7442 = !DILocation(line: 107, column: 1, scope: !7432)
!7443 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !882, file: !882, line: 574, type: !906, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7444)
!7444 = !{!7445, !7446, !7447}
!7445 = !DILocalVariable(name: "dev", arg: 1, scope: !7443, file: !882, line: 574, type: !888)
!7446 = !DILocalVariable(name: "out_char", arg: 2, scope: !7443, file: !882, line: 575, type: !144)
!7447 = !DILocalVariable(name: "api", scope: !7443, file: !882, line: 577, type: !879)
!7448 = !DILocation(line: 0, scope: !7443)
!7449 = !DILocation(line: 578, column: 40, scope: !7443)
!7450 = !DILocation(line: 580, column: 7, scope: !7443)
!7451 = !DILocation(line: 580, column: 2, scope: !7443)
!7452 = !DILocation(line: 581, column: 1, scope: !7443)
!7453 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !7405, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7454)
!7454 = !{!7455}
!7455 = !DILocalVariable(name: "dev", arg: 1, scope: !7453, file: !130, line: 730, type: !888)
!7456 = !DILocation(line: 0, scope: !7453)
!7457 = !DILocation(line: 732, column: 9, scope: !7453)
!7458 = !DILocation(line: 732, column: 2, scope: !7453)
!7459 = distinct !DISubprogram(name: "uart_register_input", scope: !967, file: !967, line: 560, type: !7460, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !876, retainedNodes: !7505)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{null, !7462, !7462, !7502}
!7462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7463, size: 32)
!7463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !7464)
!7464 = !{!7465}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7463, file: !220, line: 2209, baseType: !7466, size: 160)
!7466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !7467)
!7467 = !{!7468, !7479, !7483}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7466, file: !220, line: 1710, baseType: !7469, size: 64)
!7469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !411, line: 46, baseType: !7470)
!7470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !411, line: 41, size: 64, elements: !7471)
!7471 = !{!7472, !7478}
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7470, file: !411, line: 42, baseType: !7473, size: 32)
!7473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7474, size: 32)
!7474 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !411, line: 39, baseType: !7475)
!7475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !411, line: 35, size: 32, elements: !7476)
!7476 = !{!7477}
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7475, file: !411, line: 36, baseType: !420, size: 32)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7470, file: !411, line: 43, baseType: !7473, size: 32, offset: 32)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7466, file: !220, line: 1711, baseType: !7480, size: 32, offset: 64)
!7480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !7481)
!7481 = !{!7482}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7480, file: !328, line: 52, baseType: !22, size: 32)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7466, file: !220, line: 1712, baseType: !7484, size: 64, offset: 96)
!7484 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !7485)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !7486)
!7486 = !{!7487}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7485, file: !261, line: 232, baseType: !7488, size: 64)
!7488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !7489)
!7489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !7490)
!7490 = !{!7491, !7497}
!7491 = !DIDerivedType(tag: DW_TAG_member, scope: !7489, file: !235, line: 38, baseType: !7492, size: 32)
!7492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7489, file: !235, line: 38, size: 32, elements: !7493)
!7493 = !{!7494, !7496}
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7492, file: !235, line: 39, baseType: !7495, size: 32)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 32)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7492, file: !235, line: 40, baseType: !7495, size: 32)
!7497 = !DIDerivedType(tag: DW_TAG_member, scope: !7489, file: !235, line: 42, baseType: !7498, size: 32, offset: 32)
!7498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7489, file: !235, line: 42, size: 32, elements: !7499)
!7499 = !{!7500, !7501}
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7498, file: !235, line: 43, baseType: !7495, size: 32)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7498, file: !235, line: 44, baseType: !7495, size: 32)
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 32)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{!143, !1060, !143}
!7505 = !{!7506, !7507, !7508}
!7506 = !DILocalVariable(name: "avail", arg: 1, scope: !7459, file: !967, line: 560, type: !7462)
!7507 = !DILocalVariable(name: "lines", arg: 2, scope: !7459, file: !967, line: 560, type: !7462)
!7508 = !DILocalVariable(name: "completion", arg: 3, scope: !7459, file: !967, line: 561, type: !7502)
!7509 = !DILocation(line: 0, scope: !7459)
!7510 = !DILocation(line: 566, column: 1, scope: !7459)
!7511 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1064, file: !1064, line: 40, type: !991, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7512)
!7512 = !{!7513, !7514, !7515, !7516, !7518, !7519, !7524, !7525}
!7513 = !DILocalVariable(name: "port", arg: 1, scope: !7511, file: !1064, line: 40, type: !993)
!7514 = !DILocalVariable(name: "pin", arg: 2, scope: !7511, file: !1064, line: 40, type: !154)
!7515 = !DILocalVariable(name: "flags", arg: 3, scope: !7511, file: !1064, line: 41, type: !155)
!7516 = !DILocalVariable(name: "config", scope: !7511, file: !1064, line: 43, type: !7517)
!7517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!7518 = !DILocalVariable(name: "base", scope: !7511, file: !1064, line: 44, type: !1101)
!7519 = !DILocalVariable(name: "pin_cfg", scope: !7511, file: !1064, line: 52, type: !7520)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1117, line: 59, size: 160, elements: !7521)
!7521 = !{!7522, !7523}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !7520, file: !1117, line: 60, baseType: !1116, size: 128)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !7520, file: !1117, line: 61, baseType: !156, size: 32, offset: 128)
!7524 = !DILocalVariable(name: "gpio_cfg_reg", scope: !7511, file: !1064, line: 54, type: !849)
!7525 = !DILocalVariable(name: "reg", scope: !7511, file: !1064, line: 56, type: !156)
!7526 = !DILocation(line: 0, scope: !7511)
!7527 = !DILocation(line: 43, column: 47, scope: !7511)
!7528 = !DILocation(line: 44, column: 28, scope: !7511)
!7529 = !DILocation(line: 46, column: 35, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7511, file: !1064, line: 46, column: 6)
!7531 = !DILocation(line: 50, column: 2, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !1064, line: 50, column: 2)
!7533 = distinct !DILexicalBlock(scope: !7511, file: !1064, line: 50, column: 2)
!7534 = !DILocation(line: 50, column: 2, scope: !7533)
!7535 = !DILocation(line: 50, column: 2, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7532, file: !1064, line: 50, column: 2)
!7537 = !DILocation(line: 52, column: 2, scope: !7511)
!7538 = !DILocation(line: 52, column: 25, scope: !7511)
!7539 = !DILocation(line: 55, column: 32, scope: !7511)
!7540 = !DILocation(line: 55, column: 47, scope: !7511)
!7541 = !DILocation(line: 55, column: 3, scope: !7511)
!7542 = !DILocation(line: 56, column: 17, scope: !7511)
!7543 = !DILocation(line: 66, column: 13, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7511, file: !1064, line: 66, column: 6)
!7545 = !DILocation(line: 66, column: 34, scope: !7544)
!7546 = !DILocation(line: 66, column: 6, scope: !7511)
!7547 = !DILocation(line: 70, column: 36, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7511, file: !1064, line: 70, column: 6)
!7549 = !DILocation(line: 70, column: 14, scope: !7548)
!7550 = !DILocation(line: 70, column: 30, scope: !7548)
!7551 = !DILocation(line: 72, column: 7, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7548, file: !1064, line: 70, column: 72)
!7553 = !DILocation(line: 73, column: 8, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !1064, line: 72, column: 38)
!7555 = distinct !DILexicalBlock(scope: !7552, file: !1064, line: 72, column: 7)
!7556 = !DILocation(line: 74, column: 3, scope: !7554)
!7557 = !DILocation(line: 75, column: 8, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7555, file: !1064, line: 74, column: 10)
!7559 = !DILocation(line: 79, column: 7, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7548, file: !1064, line: 77, column: 9)
!7561 = !DILocation(line: 0, scope: !7548)
!7562 = !DILocation(line: 84, column: 27, scope: !7511)
!7563 = !DILocation(line: 84, column: 26, scope: !7511)
!7564 = !DILocation(line: 84, column: 2, scope: !7511)
!7565 = !DILocation(line: 86, column: 10, scope: !7511)
!7566 = !DILocation(line: 86, column: 25, scope: !7511)
!7567 = !DILocation(line: 87, column: 2, scope: !7511)
!7568 = !DILocation(line: 98, column: 2, scope: !7511)
!7569 = !DILocation(line: 99, column: 2, scope: !7511)
!7570 = !DILocation(line: 101, column: 6, scope: !7511)
!7571 = !DILocation(line: 103, column: 14, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !1064, line: 103, column: 7)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !1064, line: 101, column: 35)
!7574 = distinct !DILexicalBlock(scope: !7511, file: !1064, line: 101, column: 6)
!7575 = !DILocation(line: 103, column: 38, scope: !7572)
!7576 = !DILocation(line: 103, column: 7, scope: !7573)
!7577 = !DILocation(line: 105, column: 21, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7572, file: !1064, line: 105, column: 14)
!7579 = !DILocation(line: 105, column: 46, scope: !7578)
!7580 = !DILocation(line: 105, column: 14, scope: !7572)
!7581 = !DILocation(line: 0, scope: !7572)
!7582 = !DILocation(line: 110, column: 3, scope: !7573)
!7583 = !DILocation(line: 111, column: 2, scope: !7573)
!7584 = !DILocation(line: 113, column: 3, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7574, file: !1064, line: 111, column: 9)
!7586 = !DILocation(line: 117, column: 1, scope: !7511)
!7587 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1064, file: !1064, line: 119, type: !7588, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!118, !993, !1388}
!7590 = !{!7591, !7592, !7593, !7594}
!7591 = !DILocalVariable(name: "port", arg: 1, scope: !7587, file: !1064, line: 119, type: !993)
!7592 = !DILocalVariable(name: "value", arg: 2, scope: !7587, file: !1064, line: 119, type: !1388)
!7593 = !DILocalVariable(name: "config", scope: !7587, file: !1064, line: 121, type: !7517)
!7594 = !DILocalVariable(name: "base", scope: !7587, file: !1064, line: 122, type: !1101)
!7595 = !DILocation(line: 0, scope: !7587)
!7596 = !DILocation(line: 121, column: 47, scope: !7587)
!7597 = !DILocation(line: 122, column: 28, scope: !7587)
!7598 = !DILocation(line: 124, column: 11, scope: !7587)
!7599 = !DILocation(line: 124, column: 9, scope: !7587)
!7600 = !DILocation(line: 126, column: 2, scope: !7587)
!7601 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1064, file: !1064, line: 129, type: !1014, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7602)
!7602 = !{!7603, !7604, !7605, !7606, !7607}
!7603 = !DILocalVariable(name: "port", arg: 1, scope: !7601, file: !1064, line: 129, type: !993)
!7604 = !DILocalVariable(name: "mask", arg: 2, scope: !7601, file: !1064, line: 130, type: !167)
!7605 = !DILocalVariable(name: "value", arg: 3, scope: !7601, file: !1064, line: 131, type: !162)
!7606 = !DILocalVariable(name: "config", scope: !7601, file: !1064, line: 133, type: !7517)
!7607 = !DILocalVariable(name: "base", scope: !7601, file: !1064, line: 134, type: !1101)
!7608 = !DILocation(line: 0, scope: !7601)
!7609 = !DILocation(line: 133, column: 47, scope: !7601)
!7610 = !DILocation(line: 134, column: 28, scope: !7601)
!7611 = !DILocation(line: 137, column: 5, scope: !7601)
!7612 = !DILocation(line: 137, column: 32, scope: !7601)
!7613 = !DILocation(line: 137, column: 30, scope: !7601)
!7614 = !DILocation(line: 137, column: 48, scope: !7601)
!7615 = !DILocation(line: 137, column: 39, scope: !7601)
!7616 = !DILocation(line: 136, column: 2, scope: !7601)
!7617 = !DILocation(line: 139, column: 2, scope: !7601)
!7618 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1064, file: !1064, line: 142, type: !1018, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7619)
!7619 = !{!7620, !7621, !7622, !7623}
!7620 = !DILocalVariable(name: "port", arg: 1, scope: !7618, file: !1064, line: 142, type: !993)
!7621 = !DILocalVariable(name: "pins", arg: 2, scope: !7618, file: !1064, line: 143, type: !167)
!7622 = !DILocalVariable(name: "config", scope: !7618, file: !1064, line: 145, type: !7517)
!7623 = !DILocalVariable(name: "base", scope: !7618, file: !1064, line: 146, type: !1101)
!7624 = !DILocation(line: 0, scope: !7618)
!7625 = !DILocation(line: 145, column: 47, scope: !7618)
!7626 = !DILocation(line: 146, column: 28, scope: !7618)
!7627 = !DILocation(line: 148, column: 29, scope: !7618)
!7628 = !DILocation(line: 148, column: 54, scope: !7618)
!7629 = !DILocation(line: 148, column: 2, scope: !7618)
!7630 = !DILocation(line: 150, column: 2, scope: !7618)
!7631 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1064, file: !1064, line: 153, type: !1018, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7632)
!7632 = !{!7633, !7634, !7635, !7636}
!7633 = !DILocalVariable(name: "port", arg: 1, scope: !7631, file: !1064, line: 153, type: !993)
!7634 = !DILocalVariable(name: "pins", arg: 2, scope: !7631, file: !1064, line: 154, type: !167)
!7635 = !DILocalVariable(name: "config", scope: !7631, file: !1064, line: 156, type: !7517)
!7636 = !DILocalVariable(name: "base", scope: !7631, file: !1064, line: 157, type: !1101)
!7637 = !DILocation(line: 0, scope: !7631)
!7638 = !DILocation(line: 156, column: 47, scope: !7631)
!7639 = !DILocation(line: 157, column: 28, scope: !7631)
!7640 = !DILocation(line: 159, column: 29, scope: !7631)
!7641 = !DILocation(line: 159, column: 56, scope: !7631)
!7642 = !DILocation(line: 159, column: 54, scope: !7631)
!7643 = !DILocation(line: 159, column: 2, scope: !7631)
!7644 = !DILocation(line: 161, column: 2, scope: !7631)
!7645 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1064, file: !1064, line: 164, type: !1018, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7646)
!7646 = !{!7647, !7648, !7649, !7650}
!7647 = !DILocalVariable(name: "port", arg: 1, scope: !7645, file: !1064, line: 164, type: !993)
!7648 = !DILocalVariable(name: "pins", arg: 2, scope: !7645, file: !1064, line: 165, type: !167)
!7649 = !DILocalVariable(name: "config", scope: !7645, file: !1064, line: 167, type: !7517)
!7650 = !DILocalVariable(name: "base", scope: !7645, file: !1064, line: 168, type: !1101)
!7651 = !DILocation(line: 0, scope: !7645)
!7652 = !DILocation(line: 167, column: 47, scope: !7645)
!7653 = !DILocation(line: 168, column: 28, scope: !7645)
!7654 = !DILocation(line: 170, column: 29, scope: !7645)
!7655 = !DILocation(line: 170, column: 54, scope: !7645)
!7656 = !DILocation(line: 170, column: 2, scope: !7645)
!7657 = !DILocation(line: 172, column: 2, scope: !7645)
!7658 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1064, file: !1064, line: 175, type: !1024, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7659)
!7659 = !{!7660, !7661, !7662, !7663, !7664, !7665, !7666, !7667, !7668, !7669}
!7660 = !DILocalVariable(name: "port", arg: 1, scope: !7658, file: !1064, line: 175, type: !993)
!7661 = !DILocalVariable(name: "pin", arg: 2, scope: !7658, file: !1064, line: 176, type: !154)
!7662 = !DILocalVariable(name: "mode", arg: 3, scope: !7658, file: !1064, line: 177, type: !101)
!7663 = !DILocalVariable(name: "trig", arg: 4, scope: !7658, file: !1064, line: 178, type: !107)
!7664 = !DILocalVariable(name: "config", scope: !7658, file: !1064, line: 180, type: !7517)
!7665 = !DILocalVariable(name: "base", scope: !7658, file: !1064, line: 181, type: !1101)
!7666 = !DILocalVariable(name: "icr_reg", scope: !7658, file: !1064, line: 182, type: !849)
!7667 = !DILocalVariable(name: "key", scope: !7658, file: !1064, line: 183, type: !32)
!7668 = !DILocalVariable(name: "icr_val", scope: !7658, file: !1064, line: 184, type: !156)
!7669 = !DILocalVariable(name: "shift", scope: !7658, file: !1064, line: 185, type: !143)
!7670 = !DILocation(line: 0, scope: !7658)
!7671 = !DILocation(line: 180, column: 47, scope: !7658)
!7672 = !DILocation(line: 181, column: 28, scope: !7658)
!7673 = !DILocation(line: 187, column: 14, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7658, file: !1064, line: 187, column: 6)
!7675 = !DILocation(line: 187, column: 21, scope: !7674)
!7676 = !DILocation(line: 187, column: 19, scope: !7674)
!7677 = !DILocation(line: 187, column: 31, scope: !7674)
!7678 = !DILocation(line: 188, column: 6, scope: !7674)
!7679 = !DILocation(line: 193, column: 12, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7658, file: !1064, line: 193, column: 6)
!7681 = !DILocation(line: 193, column: 35, scope: !7680)
!7682 = !DILocation(line: 195, column: 42, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !1064, line: 195, column: 13)
!7684 = !DILocation(line: 198, column: 19, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7683, file: !1064, line: 198, column: 13)
!7686 = !DILocation(line: 198, column: 43, scope: !7685)
!7687 = !DILocation(line: 0, scope: !7680)
!7688 = !DILocation(line: 205, column: 10, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7658, file: !1064, line: 205, column: 6)
!7690 = !DILocation(line: 205, column: 6, scope: !7658)
!7691 = !DILocation(line: 206, column: 14, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7689, file: !1064, line: 205, column: 17)
!7693 = !DILocation(line: 207, column: 21, scope: !7692)
!7694 = !DILocation(line: 208, column: 2, scope: !7692)
!7695 = !DILocation(line: 208, column: 17, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7689, file: !1064, line: 208, column: 13)
!7697 = !DILocation(line: 208, column: 13, scope: !7689)
!7698 = !DILocation(line: 209, column: 14, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7696, file: !1064, line: 208, column: 24)
!7700 = !DILocation(line: 210, column: 21, scope: !7699)
!7701 = !DILocation(line: 0, scope: !7689)
!7702 = !DILocation(line: 55, column: 2, scope: !7703, inlinedAt: !7709)
!7703 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7706)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!32}
!7706 = !{!7707, !7708}
!7707 = !DILocalVariable(name: "key", scope: !7703, file: !6230, line: 44, type: !32)
!7708 = !DILocalVariable(name: "tmp", scope: !7703, file: !6230, line: 53, type: !32)
!7709 = distinct !DILocation(line: 215, column: 8, scope: !7658)
!7710 = !{i64 3053868}
!7711 = !DILocation(line: 0, scope: !7703, inlinedAt: !7709)
!7712 = !DILocation(line: 217, column: 14, scope: !7658)
!7713 = !DILocation(line: 217, column: 33, scope: !7658)
!7714 = !DILocation(line: 217, column: 30, scope: !7658)
!7715 = !DILocation(line: 217, column: 25, scope: !7658)
!7716 = !DILocation(line: 217, column: 23, scope: !7658)
!7717 = !DILocation(line: 217, column: 52, scope: !7658)
!7718 = !DILocation(line: 217, column: 41, scope: !7658)
!7719 = !DILocation(line: 217, column: 11, scope: !7658)
!7720 = !DILocation(line: 219, column: 2, scope: !7658)
!7721 = !DILocation(line: 220, column: 2, scope: !7658)
!7722 = !DILocation(line: 221, column: 2, scope: !7658)
!7723 = !DILocalVariable(name: "key", arg: 1, scope: !7724, file: !6230, line: 84, type: !32)
!7724 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7725)
!7725 = !{!7723}
!7726 = !DILocation(line: 0, scope: !7724, inlinedAt: !7727)
!7727 = distinct !DILocation(line: 223, column: 2, scope: !7658)
!7728 = !DILocation(line: 95, column: 2, scope: !7724, inlinedAt: !7727)
!7729 = !{i64 3054685}
!7730 = !DILocation(line: 225, column: 2, scope: !7658)
!7731 = !DILocation(line: 226, column: 1, scope: !7658)
!7732 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1064, file: !1064, line: 228, type: !1028, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7733)
!7733 = !{!7734, !7735, !7736, !7737}
!7734 = !DILocalVariable(name: "port", arg: 1, scope: !7732, file: !1064, line: 228, type: !993)
!7735 = !DILocalVariable(name: "cb", arg: 2, scope: !7732, file: !1064, line: 229, type: !1030)
!7736 = !DILocalVariable(name: "set", arg: 3, scope: !7732, file: !1064, line: 229, type: !146)
!7737 = !DILocalVariable(name: "data", scope: !7732, file: !1064, line: 231, type: !7738)
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!7739 = !DILocation(line: 0, scope: !7732)
!7740 = !DILocation(line: 231, column: 37, scope: !7732)
!7741 = !DILocation(line: 233, column: 37, scope: !7732)
!7742 = !DILocation(line: 233, column: 9, scope: !7732)
!7743 = !DILocation(line: 233, column: 2, scope: !7732)
!7744 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7745, file: !7745, line: 38, type: !7746, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7749)
!7745 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!118, !7748, !1030, !146}
!7748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!7749 = !{!7750, !7751, !7752}
!7750 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7744, file: !7745, line: 38, type: !7748)
!7751 = !DILocalVariable(name: "callback", arg: 2, scope: !7744, file: !7745, line: 39, type: !1030)
!7752 = !DILocalVariable(name: "set", arg: 3, scope: !7744, file: !7745, line: 40, type: !146)
!7753 = !DILocation(line: 0, scope: !7744)
!7754 = !DILocation(line: 42, column: 2, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !7745, line: 42, column: 2)
!7756 = distinct !DILexicalBlock(scope: !7744, file: !7745, line: 42, column: 2)
!7757 = !DILocation(line: 42, column: 2, scope: !7756)
!7758 = !DILocation(line: 42, column: 2, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7755, file: !7745, line: 42, column: 2)
!7760 = !DILocation(line: 43, column: 2, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7745, line: 43, column: 2)
!7762 = distinct !DILexicalBlock(scope: !7744, file: !7745, line: 43, column: 2)
!7763 = !DILocation(line: 43, column: 2, scope: !7762)
!7764 = !DILocation(line: 43, column: 2, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7761, file: !7745, line: 43, column: 2)
!7766 = !DILocation(line: 45, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7744, file: !7745, line: 45, column: 6)
!7768 = !DILocation(line: 45, column: 6, scope: !7744)
!7769 = !DILocation(line: 46, column: 56, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7745, line: 46, column: 7)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !7745, line: 45, column: 38)
!7772 = !DILocation(line: 46, column: 8, scope: !7770)
!7773 = !DILocation(line: 46, column: 7, scope: !7771)
!7774 = !DILocation(line: 51, column: 13, scope: !7767)
!7775 = !DILocation(line: 56, column: 43, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7745, line: 55, column: 11)
!7777 = distinct !DILexicalBlock(scope: !7744, file: !7745, line: 55, column: 6)
!7778 = !DILocation(line: 56, column: 3, scope: !7776)
!7779 = !DILocation(line: 57, column: 2, scope: !7776)
!7780 = !DILocation(line: 60, column: 1, scope: !7744)
!7781 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !7782, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7784)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!146, !7748}
!7784 = !{!7785}
!7785 = !DILocalVariable(name: "list", arg: 1, scope: !7781, file: !187, line: 261, type: !7748)
!7786 = !DILocation(line: 0, scope: !7781)
!7787 = !DILocation(line: 261, column: 1, scope: !7781)
!7788 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !187, file: !187, line: 417, type: !7789, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7791)
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!146, !7748, !1090}
!7791 = !{!7792, !7793, !7794, !7795}
!7792 = !DILocalVariable(name: "list", arg: 1, scope: !7788, file: !187, line: 417, type: !7748)
!7793 = !DILocalVariable(name: "node", arg: 2, scope: !7788, file: !187, line: 417, type: !1090)
!7794 = !DILocalVariable(name: "prev", scope: !7788, file: !187, line: 417, type: !1090)
!7795 = !DILocalVariable(name: "test", scope: !7788, file: !187, line: 417, type: !1090)
!7796 = !DILocation(line: 0, scope: !7788)
!7797 = !DILocation(line: 417, column: 1, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7788, file: !187, line: 417, column: 1)
!7799 = !DILocation(line: 417, column: 1, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7798, file: !187, line: 417, column: 1)
!7801 = !DILocation(line: 417, column: 1, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !187, line: 417, column: 1)
!7803 = distinct !DILexicalBlock(scope: !7800, file: !187, line: 417, column: 1)
!7804 = !DILocation(line: 417, column: 1, scope: !7803)
!7805 = distinct !{!7805, !7797, !7797}
!7806 = !DILocation(line: 417, column: 1, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !187, line: 417, column: 1)
!7808 = !DILocation(line: 417, column: 1, scope: !7788)
!7809 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !187, file: !187, line: 298, type: !7810, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7812)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{null, !7748, !1090}
!7812 = !{!7813, !7814}
!7813 = !DILocalVariable(name: "list", arg: 1, scope: !7809, file: !187, line: 298, type: !7748)
!7814 = !DILocalVariable(name: "node", arg: 2, scope: !7809, file: !187, line: 298, type: !1090)
!7815 = !DILocation(line: 0, scope: !7809)
!7816 = !DILocation(line: 298, column: 1, scope: !7809)
!7817 = !DILocation(line: 298, column: 1, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7809, file: !187, line: 298, column: 1)
!7819 = !DILocation(line: 298, column: 1, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7818, file: !187, line: 298, column: 1)
!7821 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !7822, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7824)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!1090, !7748}
!7824 = !{!7825}
!7825 = !DILocalVariable(name: "list", arg: 1, scope: !7821, file: !187, line: 231, type: !7748)
!7826 = !DILocation(line: 0, scope: !7821)
!7827 = !DILocation(line: 233, column: 15, scope: !7821)
!7828 = !DILocation(line: 233, column: 2, scope: !7821)
!7829 = distinct !DISubprogram(name: "z_snode_next_set", scope: !187, file: !187, line: 209, type: !7830, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7832)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{null, !1090, !1090}
!7832 = !{!7833, !7834}
!7833 = !DILocalVariable(name: "parent", arg: 1, scope: !7829, file: !187, line: 209, type: !1090)
!7834 = !DILocalVariable(name: "child", arg: 2, scope: !7829, file: !187, line: 209, type: !1090)
!7835 = !DILocation(line: 0, scope: !7829)
!7836 = !DILocation(line: 211, column: 10, scope: !7829)
!7837 = !DILocation(line: 211, column: 15, scope: !7829)
!7838 = !DILocation(line: 212, column: 1, scope: !7829)
!7839 = distinct !DISubprogram(name: "z_slist_head_set", scope: !187, file: !187, line: 214, type: !7810, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7840)
!7840 = !{!7841, !7842}
!7841 = !DILocalVariable(name: "list", arg: 1, scope: !7839, file: !187, line: 214, type: !7748)
!7842 = !DILocalVariable(name: "node", arg: 2, scope: !7839, file: !187, line: 214, type: !1090)
!7843 = !DILocation(line: 0, scope: !7839)
!7844 = !DILocation(line: 216, column: 8, scope: !7839)
!7845 = !DILocation(line: 216, column: 13, scope: !7839)
!7846 = !DILocation(line: 217, column: 1, scope: !7839)
!7847 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !187, file: !187, line: 243, type: !7822, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7848)
!7848 = !{!7849}
!7849 = !DILocalVariable(name: "list", arg: 1, scope: !7847, file: !187, line: 243, type: !7748)
!7850 = !DILocation(line: 0, scope: !7847)
!7851 = !DILocation(line: 245, column: 15, scope: !7847)
!7852 = !DILocation(line: 245, column: 2, scope: !7847)
!7853 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !187, file: !187, line: 219, type: !7810, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7854)
!7854 = !{!7855, !7856}
!7855 = !DILocalVariable(name: "list", arg: 1, scope: !7853, file: !187, line: 219, type: !7748)
!7856 = !DILocalVariable(name: "node", arg: 2, scope: !7853, file: !187, line: 219, type: !1090)
!7857 = !DILocation(line: 0, scope: !7853)
!7858 = !DILocation(line: 221, column: 8, scope: !7853)
!7859 = !DILocation(line: 221, column: 13, scope: !7853)
!7860 = !DILocation(line: 222, column: 1, scope: !7853)
!7861 = distinct !DISubprogram(name: "sys_slist_remove", scope: !187, file: !187, line: 401, type: !7862, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7864)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{null, !7748, !1090, !1090}
!7864 = !{!7865, !7866, !7867}
!7865 = !DILocalVariable(name: "list", arg: 1, scope: !7861, file: !187, line: 401, type: !7748)
!7866 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7861, file: !187, line: 401, type: !1090)
!7867 = !DILocalVariable(name: "node", arg: 3, scope: !7861, file: !187, line: 401, type: !1090)
!7868 = !DILocation(line: 0, scope: !7861)
!7869 = !DILocation(line: 401, column: 1, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7861, file: !187, line: 401, column: 1)
!7871 = !DILocation(line: 0, scope: !7870)
!7872 = !DILocation(line: 401, column: 1, scope: !7861)
!7873 = !DILocation(line: 401, column: 1, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7870, file: !187, line: 401, column: 1)
!7875 = !DILocation(line: 401, column: 1, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7874, file: !187, line: 401, column: 1)
!7877 = !DILocation(line: 401, column: 1, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7876, file: !187, line: 401, column: 1)
!7879 = !DILocation(line: 401, column: 1, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7870, file: !187, line: 401, column: 1)
!7881 = !DILocation(line: 401, column: 1, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7880, file: !187, line: 401, column: 1)
!7883 = !DILocation(line: 401, column: 1, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7882, file: !187, line: 401, column: 1)
!7885 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !187, file: !187, line: 285, type: !7886, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!1090, !1090}
!7888 = !{!7889}
!7889 = !DILocalVariable(name: "node", arg: 1, scope: !7885, file: !187, line: 285, type: !1090)
!7890 = !DILocation(line: 0, scope: !7885)
!7891 = !DILocation(line: 285, column: 1, scope: !7885)
!7892 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !187, file: !187, line: 274, type: !7886, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7893)
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "node", arg: 1, scope: !7892, file: !187, line: 274, type: !1090)
!7895 = !DILocation(line: 0, scope: !7892)
!7896 = !DILocation(line: 274, column: 1, scope: !7892)
!7897 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !187, file: !187, line: 204, type: !7886, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7898)
!7898 = !{!7899}
!7899 = !DILocalVariable(name: "node", arg: 1, scope: !7897, file: !187, line: 204, type: !1090)
!7900 = !DILocation(line: 0, scope: !7897)
!7901 = !DILocation(line: 206, column: 15, scope: !7897)
!7902 = !DILocation(line: 206, column: 2, scope: !7897)
!7903 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !980, file: !980, line: 131, type: !7904, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7906)
!7904 = !DISubroutineType(types: !7905)
!7905 = !{!156, !1101}
!7906 = !{!7907}
!7907 = !DILocalVariable(name: "base", arg: 1, scope: !7903, file: !980, line: 131, type: !1101)
!7908 = !DILocation(line: 0, scope: !7903)
!7909 = !DILocation(line: 133, column: 12, scope: !7903)
!7910 = !DILocation(line: 133, column: 5, scope: !7903)
!7911 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !980, file: !980, line: 178, type: !7912, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{null, !1101, !156}
!7914 = !{!7915, !7916}
!7915 = !DILocalVariable(name: "base", arg: 1, scope: !7911, file: !980, line: 178, type: !1101)
!7916 = !DILocalVariable(name: "portVal", arg: 2, scope: !7911, file: !980, line: 178, type: !156)
!7917 = !DILocation(line: 0, scope: !7911)
!7918 = !DILocation(line: 180, column: 5, scope: !7911)
!7919 = !DILocation(line: 180, column: 23, scope: !7911)
!7920 = !DILocation(line: 181, column: 1, scope: !7911)
!7921 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1064, file: !1064, line: 236, type: !7922, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7924)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{null, !993}
!7924 = !{!7925, !7926, !7927, !7928}
!7925 = !DILocalVariable(name: "port", arg: 1, scope: !7921, file: !1064, line: 236, type: !993)
!7926 = !DILocalVariable(name: "config", scope: !7921, file: !1064, line: 238, type: !7517)
!7927 = !DILocalVariable(name: "data", scope: !7921, file: !1064, line: 239, type: !7738)
!7928 = !DILocalVariable(name: "int_status", scope: !7921, file: !1064, line: 240, type: !156)
!7929 = !DILocation(line: 0, scope: !7921)
!7930 = !DILocation(line: 238, column: 47, scope: !7921)
!7931 = !DILocation(line: 239, column: 37, scope: !7921)
!7932 = !DILocation(line: 242, column: 23, scope: !7921)
!7933 = !DILocation(line: 242, column: 29, scope: !7921)
!7934 = !DILocation(line: 244, column: 20, scope: !7921)
!7935 = !DILocation(line: 246, column: 29, scope: !7921)
!7936 = !DILocation(line: 246, column: 2, scope: !7921)
!7937 = !DILocation(line: 247, column: 1, scope: !7921)
!7938 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7745, file: !7745, line: 69, type: !7939, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !976, retainedNodes: !7941)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{null, !7748, !993, !156}
!7941 = !{!7942, !7943, !7944, !7945, !7946}
!7942 = !DILocalVariable(name: "list", arg: 1, scope: !7938, file: !7745, line: 69, type: !7748)
!7943 = !DILocalVariable(name: "port", arg: 2, scope: !7938, file: !7745, line: 70, type: !993)
!7944 = !DILocalVariable(name: "pins", arg: 3, scope: !7938, file: !7745, line: 71, type: !156)
!7945 = !DILocalVariable(name: "cb", scope: !7938, file: !7745, line: 73, type: !1030)
!7946 = !DILocalVariable(name: "tmp", scope: !7938, file: !7745, line: 73, type: !1030)
!7947 = !DILocation(line: 0, scope: !7938)
!7948 = !DILocation(line: 75, column: 2, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7938, file: !7745, line: 75, column: 2)
!7950 = !DILocation(line: 0, scope: !7949)
!7951 = !DILocation(line: 76, column: 11, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !7745, line: 76, column: 7)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !7745, line: 75, column: 57)
!7954 = distinct !DILexicalBlock(scope: !7949, file: !7745, line: 75, column: 2)
!7955 = !DILocation(line: 76, column: 20, scope: !7952)
!7956 = !DILocation(line: 76, column: 7, scope: !7953)
!7957 = !DILocation(line: 77, column: 4, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7745, line: 77, column: 4)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7745, line: 77, column: 4)
!7960 = distinct !DILexicalBlock(scope: !7952, file: !7745, line: 76, column: 28)
!7961 = !DILocation(line: 77, column: 4, scope: !7959)
!7962 = !DILocation(line: 77, column: 4, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7958, file: !7745, line: 77, column: 4)
!7964 = !DILocation(line: 78, column: 4, scope: !7960)
!7965 = !DILocation(line: 79, column: 3, scope: !7960)
!7966 = !DILocation(line: 75, column: 2, scope: !7954)
!7967 = !DILocation(line: 81, column: 1, scope: !7938)
!7968 = !DILocation(line: 0, scope: !1129)
!7969 = !DILocation(line: 318, column: 1, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !1129, file: !1064, line: 318, column: 1)
!7971 = !DILocation(line: 318, column: 1, scope: !1129)
!7972 = !DILocation(line: 318, column: 1, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !1129, file: !1064, line: 318, column: 1)
!7974 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1353, file: !1353, line: 114, type: !1251, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !7975)
!7975 = !{!7976, !7977, !7978, !7979}
!7976 = !DILocalVariable(name: "dev", arg: 1, scope: !7974, file: !1353, line: 114, type: !1253)
!7977 = !DILocalVariable(name: "c", arg: 2, scope: !7974, file: !1353, line: 114, type: !903)
!7978 = !DILocalVariable(name: "uart", scope: !7974, file: !1353, line: 116, type: !1324)
!7979 = !DILocalVariable(name: "ret", scope: !7974, file: !1353, line: 117, type: !118)
!7980 = !DILocation(line: 0, scope: !7974)
!7981 = !DILocation(line: 116, column: 20, scope: !7974)
!7982 = !DILocation(line: 119, column: 6, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7974, file: !1353, line: 119, column: 6)
!7984 = !DILocation(line: 119, column: 6, scope: !7974)
!7985 = !DILocation(line: 120, column: 8, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7983, file: !1353, line: 119, column: 55)
!7987 = !DILocation(line: 120, column: 6, scope: !7986)
!7988 = !DILocation(line: 122, column: 7, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7986, file: !1353, line: 122, column: 7)
!7990 = !DILocation(line: 122, column: 7, scope: !7986)
!7991 = !DILocation(line: 123, column: 4, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7989, file: !1353, line: 122, column: 54)
!7993 = !DILocation(line: 124, column: 3, scope: !7992)
!7994 = !DILocation(line: 128, column: 2, scope: !7974)
!7995 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1353, file: !1353, line: 105, type: !1270, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !7996)
!7996 = !{!7997, !7998, !7999}
!7997 = !DILocalVariable(name: "dev", arg: 1, scope: !7995, file: !1353, line: 105, type: !1253)
!7998 = !DILocalVariable(name: "c", arg: 2, scope: !7995, file: !1353, line: 105, type: !144)
!7999 = !DILocalVariable(name: "uart", scope: !7995, file: !1353, line: 107, type: !1324)
!8000 = !DILocation(line: 0, scope: !7995)
!8001 = !DILocation(line: 107, column: 20, scope: !7995)
!8002 = !DILocation(line: 109, column: 2, scope: !7995)
!8003 = !DILocation(line: 109, column: 10, scope: !7995)
!8004 = distinct !{!8004, !8002, !8005}
!8005 = !DILocation(line: 110, column: 2, scope: !7995)
!8006 = !DILocation(line: 111, column: 2, scope: !7995)
!8007 = !DILocation(line: 112, column: 1, scope: !7995)
!8008 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1353, file: !1353, line: 133, type: !1296, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8009)
!8009 = !{!8010, !8011, !8012, !8013, !8014}
!8010 = !DILocalVariable(name: "dev", arg: 1, scope: !8008, file: !1353, line: 133, type: !1253)
!8011 = !DILocalVariable(name: "tx_data", arg: 2, scope: !8008, file: !1353, line: 134, type: !934)
!8012 = !DILocalVariable(name: "size", arg: 3, scope: !8008, file: !1353, line: 135, type: !118)
!8013 = !DILocalVariable(name: "uart", scope: !8008, file: !1353, line: 137, type: !1324)
!8014 = !DILocalVariable(name: "num_tx", scope: !8008, file: !1353, line: 138, type: !32)
!8015 = !DILocation(line: 0, scope: !8008)
!8016 = !DILocation(line: 137, column: 20, scope: !8008)
!8017 = !DILocation(line: 140, column: 26, scope: !8008)
!8018 = !DILocation(line: 140, column: 31, scope: !8008)
!8019 = !DILocation(line: 141, column: 6, scope: !8008)
!8020 = !DILocation(line: 140, column: 2, scope: !8008)
!8021 = !DILocation(line: 143, column: 22, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8008, file: !1353, line: 141, column: 51)
!8023 = !DILocation(line: 143, column: 3, scope: !8022)
!8024 = !DILocation(line: 144, column: 9, scope: !8022)
!8025 = distinct !{!8025, !8020, !8026}
!8026 = !DILocation(line: 145, column: 2, scope: !8008)
!8027 = !DILocation(line: 147, column: 2, scope: !8008)
!8028 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1353, file: !1353, line: 150, type: !1300, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8029)
!8029 = !{!8030, !8031, !8032, !8033, !8034}
!8030 = !DILocalVariable(name: "dev", arg: 1, scope: !8028, file: !1353, line: 150, type: !1253)
!8031 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8028, file: !1353, line: 150, type: !940)
!8032 = !DILocalVariable(name: "size", arg: 3, scope: !8028, file: !1353, line: 151, type: !941)
!8033 = !DILocalVariable(name: "uart", scope: !8028, file: !1353, line: 153, type: !1324)
!8034 = !DILocalVariable(name: "num_rx", scope: !8028, file: !1353, line: 154, type: !32)
!8035 = !DILocation(line: 0, scope: !8028)
!8036 = !DILocation(line: 153, column: 20, scope: !8028)
!8037 = !DILocation(line: 156, column: 26, scope: !8028)
!8038 = !DILocation(line: 156, column: 31, scope: !8028)
!8039 = !DILocation(line: 157, column: 6, scope: !8028)
!8040 = !DILocation(line: 156, column: 2, scope: !8028)
!8041 = !DILocation(line: 159, column: 23, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8028, file: !1353, line: 157, column: 51)
!8043 = !DILocation(line: 159, column: 17, scope: !8042)
!8044 = !DILocation(line: 159, column: 3, scope: !8042)
!8045 = !DILocation(line: 159, column: 21, scope: !8042)
!8046 = distinct !{!8046, !8040, !8047}
!8047 = !DILocation(line: 160, column: 2, scope: !8028)
!8048 = !DILocation(line: 162, column: 6, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8028, file: !1353, line: 162, column: 6)
!8050 = !DILocation(line: 162, column: 6, scope: !8028)
!8051 = !DILocation(line: 163, column: 3, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8049, file: !1353, line: 162, column: 53)
!8053 = !DILocation(line: 164, column: 2, scope: !8052)
!8054 = !DILocation(line: 166, column: 2, scope: !8028)
!8055 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1353, file: !1353, line: 169, type: !1304, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8056)
!8056 = !{!8057, !8058}
!8057 = !DILocalVariable(name: "dev", arg: 1, scope: !8055, file: !1353, line: 169, type: !1253)
!8058 = !DILocalVariable(name: "uart", scope: !8055, file: !1353, line: 171, type: !1324)
!8059 = !DILocation(line: 0, scope: !8055)
!8060 = !DILocation(line: 171, column: 20, scope: !8055)
!8061 = !DILocation(line: 173, column: 2, scope: !8055)
!8062 = !DILocation(line: 174, column: 1, scope: !8055)
!8063 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1353, file: !1353, line: 176, type: !1304, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8064)
!8064 = !{!8065, !8066}
!8065 = !DILocalVariable(name: "dev", arg: 1, scope: !8063, file: !1353, line: 176, type: !1253)
!8066 = !DILocalVariable(name: "uart", scope: !8063, file: !1353, line: 178, type: !1324)
!8067 = !DILocation(line: 0, scope: !8063)
!8068 = !DILocation(line: 178, column: 20, scope: !8063)
!8069 = !DILocation(line: 180, column: 2, scope: !8063)
!8070 = !DILocation(line: 181, column: 1, scope: !8063)
!8071 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1353, file: !1353, line: 183, type: !1274, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8072)
!8072 = !{!8073, !8074}
!8073 = !DILocalVariable(name: "dev", arg: 1, scope: !8071, file: !1353, line: 183, type: !1253)
!8074 = !DILocalVariable(name: "uart", scope: !8071, file: !1353, line: 185, type: !1324)
!8075 = !DILocation(line: 0, scope: !8071)
!8076 = !DILocation(line: 185, column: 20, scope: !8071)
!8077 = !DILocation(line: 187, column: 9, scope: !8071)
!8078 = !DILocation(line: 187, column: 2, scope: !8071)
!8079 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1353, file: !1353, line: 190, type: !1304, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8080)
!8080 = !{!8081, !8082}
!8081 = !DILocalVariable(name: "dev", arg: 1, scope: !8079, file: !1353, line: 190, type: !1253)
!8082 = !DILocalVariable(name: "uart", scope: !8079, file: !1353, line: 192, type: !1324)
!8083 = !DILocation(line: 0, scope: !8079)
!8084 = !DILocation(line: 192, column: 20, scope: !8079)
!8085 = !DILocation(line: 194, column: 2, scope: !8079)
!8086 = !DILocation(line: 195, column: 1, scope: !8079)
!8087 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1353, file: !1353, line: 197, type: !1304, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8088)
!8088 = !{!8089, !8090}
!8089 = !DILocalVariable(name: "dev", arg: 1, scope: !8087, file: !1353, line: 197, type: !1253)
!8090 = !DILocalVariable(name: "uart", scope: !8087, file: !1353, line: 199, type: !1324)
!8091 = !DILocation(line: 0, scope: !8087)
!8092 = !DILocation(line: 199, column: 20, scope: !8087)
!8093 = !DILocation(line: 201, column: 2, scope: !8087)
!8094 = !DILocation(line: 202, column: 1, scope: !8087)
!8095 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1353, file: !1353, line: 204, type: !1274, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8096)
!8096 = !{!8097, !8098}
!8097 = !DILocalVariable(name: "dev", arg: 1, scope: !8095, file: !1353, line: 204, type: !1253)
!8098 = !DILocalVariable(name: "uart", scope: !8095, file: !1353, line: 206, type: !1324)
!8099 = !DILocation(line: 0, scope: !8095)
!8100 = !DILocation(line: 206, column: 20, scope: !8095)
!8101 = !DILocation(line: 208, column: 9, scope: !8095)
!8102 = !DILocation(line: 208, column: 2, scope: !8095)
!8103 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1353, file: !1353, line: 211, type: !1304, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8104)
!8104 = !{!8105, !8106}
!8105 = !DILocalVariable(name: "dev", arg: 1, scope: !8103, file: !1353, line: 211, type: !1253)
!8106 = !DILocalVariable(name: "uart", scope: !8103, file: !1353, line: 213, type: !1324)
!8107 = !DILocation(line: 0, scope: !8103)
!8108 = !DILocation(line: 213, column: 20, scope: !8103)
!8109 = !DILocation(line: 215, column: 2, scope: !8103)
!8110 = !DILocation(line: 216, column: 2, scope: !8103)
!8111 = !DILocation(line: 217, column: 1, scope: !8103)
!8112 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1353, file: !1353, line: 219, type: !1304, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8113)
!8113 = !{!8114, !8115}
!8114 = !DILocalVariable(name: "dev", arg: 1, scope: !8112, file: !1353, line: 219, type: !1253)
!8115 = !DILocalVariable(name: "uart", scope: !8112, file: !1353, line: 221, type: !1324)
!8116 = !DILocation(line: 0, scope: !8112)
!8117 = !DILocation(line: 221, column: 20, scope: !8112)
!8118 = !DILocation(line: 223, column: 2, scope: !8112)
!8119 = !DILocation(line: 224, column: 2, scope: !8112)
!8120 = !DILocation(line: 225, column: 1, scope: !8112)
!8121 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1353, file: !1353, line: 227, type: !1274, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8122)
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "dev", arg: 1, scope: !8121, file: !1353, line: 227, type: !1253)
!8124 = !DILocalVariable(name: "uart", scope: !8121, file: !1353, line: 229, type: !1324)
!8125 = !DILocation(line: 0, scope: !8121)
!8126 = !DILocation(line: 229, column: 20, scope: !8121)
!8127 = !DILocation(line: 231, column: 9, scope: !8121)
!8128 = !DILocation(line: 231, column: 53, scope: !8121)
!8129 = !DILocation(line: 232, column: 3, scope: !8121)
!8130 = !DILocation(line: 231, column: 2, scope: !8121)
!8131 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1353, file: !1353, line: 235, type: !1274, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8132)
!8132 = !{!8133}
!8133 = !DILocalVariable(name: "dev", arg: 1, scope: !8131, file: !1353, line: 235, type: !1253)
!8134 = !DILocation(line: 0, scope: !8131)
!8135 = !DILocation(line: 237, column: 2, scope: !8131)
!8136 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1353, file: !1353, line: 240, type: !1318, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8137)
!8137 = !{!8138, !8139, !8140, !8141}
!8138 = !DILocalVariable(name: "dev", arg: 1, scope: !8136, file: !1353, line: 240, type: !1253)
!8139 = !DILocalVariable(name: "cb", arg: 2, scope: !8136, file: !1353, line: 241, type: !1320)
!8140 = !DILocalVariable(name: "cb_data", arg: 3, scope: !8136, file: !1353, line: 242, type: !117)
!8141 = !DILocalVariable(name: "data", scope: !8136, file: !1353, line: 244, type: !8142)
!8142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!8143 = !DILocation(line: 0, scope: !8136)
!8144 = !DILocation(line: 244, column: 36, scope: !8136)
!8145 = !DILocation(line: 246, column: 8, scope: !8136)
!8146 = !DILocation(line: 246, column: 17, scope: !8136)
!8147 = !DILocation(line: 247, column: 8, scope: !8136)
!8148 = !DILocation(line: 247, column: 16, scope: !8136)
!8149 = !DILocation(line: 248, column: 1, scope: !8136)
!8150 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1160, file: !1160, line: 392, type: !8151, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!146, !1324, !156}
!8153 = !{!8154, !8155, !8156}
!8154 = !DILocalVariable(name: "base", arg: 1, scope: !8150, file: !1160, line: 392, type: !1324)
!8155 = !DILocalVariable(name: "flag", arg: 2, scope: !8150, file: !1160, line: 392, type: !156)
!8156 = !DILocalVariable(name: "uart_reg", scope: !8150, file: !1160, line: 393, type: !849)
!8157 = !DILocation(line: 0, scope: !8150)
!8158 = !DILocation(line: 395, column: 29, scope: !8150)
!8159 = !DILocation(line: 395, column: 52, scope: !8150)
!8160 = !DILocation(line: 395, column: 44, scope: !8150)
!8161 = !DILocation(line: 395, column: 16, scope: !8150)
!8162 = !DILocation(line: 396, column: 20, scope: !8150)
!8163 = !DILocation(line: 396, column: 39, scope: !8150)
!8164 = !DILocation(line: 396, column: 12, scope: !8150)
!8165 = !DILocation(line: 396, column: 5, scope: !8150)
!8166 = distinct !DISubprogram(name: "UART_Getchar", scope: !1160, file: !1160, line: 358, type: !8167, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8169)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{!143, !1324}
!8169 = !{!8170}
!8170 = !DILocalVariable(name: "base", arg: 1, scope: !8166, file: !1160, line: 358, type: !1324)
!8171 = !DILocation(line: 0, scope: !8166)
!8172 = !DILocation(line: 360, column: 22, scope: !8166)
!8173 = !DILocation(line: 360, column: 12, scope: !8166)
!8174 = !DILocation(line: 360, column: 5, scope: !8166)
!8175 = distinct !DISubprogram(name: "UART_Putchar", scope: !1160, file: !1160, line: 346, type: !8176, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8178)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{null, !1324, !143}
!8178 = !{!8179, !8180}
!8179 = !DILocalVariable(name: "base", arg: 1, scope: !8175, file: !1160, line: 346, type: !1324)
!8180 = !DILocalVariable(name: "data", arg: 2, scope: !8175, file: !1160, line: 346, type: !143)
!8181 = !DILocation(line: 0, scope: !8175)
!8182 = !DILocation(line: 348, column: 28, scope: !8175)
!8183 = !DILocation(line: 348, column: 5, scope: !8175)
!8184 = !DILocation(line: 348, column: 25, scope: !8175)
!8185 = !DILocation(line: 349, column: 1, scope: !8175)
!8186 = !DILocation(line: 0, scope: !1426)
!8187 = !DILocation(line: 339, column: 1, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !1426, file: !1353, line: 339, column: 1)
!8189 = !DILocation(line: 339, column: 1, scope: !1426)
!8190 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1353, file: !1353, line: 260, type: !1304, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8191)
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "dev", arg: 1, scope: !8190, file: !1353, line: 260, type: !1253)
!8193 = !DILocalVariable(name: "data", scope: !8190, file: !1353, line: 262, type: !8142)
!8194 = !DILocation(line: 0, scope: !8190)
!8195 = !DILocation(line: 262, column: 36, scope: !8190)
!8196 = !DILocation(line: 264, column: 12, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8190, file: !1353, line: 264, column: 6)
!8198 = !DILocation(line: 264, column: 6, scope: !8197)
!8199 = !DILocation(line: 264, column: 6, scope: !8190)
!8200 = !DILocation(line: 265, column: 29, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !1353, line: 264, column: 22)
!8202 = !DILocation(line: 265, column: 3, scope: !8201)
!8203 = !DILocation(line: 266, column: 2, scope: !8201)
!8204 = !DILocation(line: 267, column: 1, scope: !8190)
!8205 = distinct !DISubprogram(name: "uart_imx_init", scope: !1353, file: !1353, line: 56, type: !1274, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8206)
!8206 = !{!8207, !8208, !8209, !8210, !8211, !8212}
!8207 = !DILocalVariable(name: "dev", arg: 1, scope: !8205, file: !1353, line: 56, type: !1253)
!8208 = !DILocalVariable(name: "uart", scope: !8205, file: !1353, line: 58, type: !1324)
!8209 = !DILocalVariable(name: "config", scope: !8205, file: !1353, line: 59, type: !1350)
!8210 = !DILocalVariable(name: "old_level", scope: !8205, file: !1353, line: 60, type: !32)
!8211 = !DILocalVariable(name: "err", scope: !8205, file: !1353, line: 61, type: !118)
!8212 = !DILocalVariable(name: "initConfig", scope: !8205, file: !1353, line: 67, type: !8213)
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1160, line: 57, baseType: !8214)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1160, line: 49, size: 192, elements: !8215)
!8215 = !{!8216, !8217, !8218, !8219, !8220, !8221}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !8214, file: !1160, line: 51, baseType: !156, size: 32)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !8214, file: !1160, line: 52, baseType: !156, size: 32, offset: 32)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !8214, file: !1160, line: 53, baseType: !156, size: 32, offset: 64)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !8214, file: !1160, line: 54, baseType: !156, size: 32, offset: 96)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8214, file: !1160, line: 55, baseType: !156, size: 32, offset: 128)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8214, file: !1160, line: 56, baseType: !156, size: 32, offset: 160)
!8222 = !DILocation(line: 0, scope: !8205)
!8223 = !DILocation(line: 58, column: 20, scope: !8205)
!8224 = !DILocation(line: 55, column: 2, scope: !8225, inlinedAt: !8229)
!8225 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8226)
!8226 = !{!8227, !8228}
!8227 = !DILocalVariable(name: "key", scope: !8225, file: !6230, line: 44, type: !32)
!8228 = !DILocalVariable(name: "tmp", scope: !8225, file: !6230, line: 53, type: !32)
!8229 = distinct !DILocation(line: 64, column: 14, scope: !8205)
!8230 = !{i64 2848439}
!8231 = !DILocation(line: 0, scope: !8225, inlinedAt: !8229)
!8232 = !DILocation(line: 67, column: 2, scope: !8205)
!8233 = !DILocation(line: 67, column: 21, scope: !8205)
!8234 = !DILocation(line: 67, column: 34, scope: !8205)
!8235 = !DILocation(line: 68, column: 23, scope: !8205)
!8236 = !DILocation(line: 75, column: 36, scope: !8205)
!8237 = !DILocation(line: 75, column: 8, scope: !8205)
!8238 = !DILocation(line: 76, column: 6, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8205, file: !1353, line: 76, column: 6)
!8240 = !DILocation(line: 76, column: 6, scope: !8205)
!8241 = !DILocation(line: 81, column: 26, scope: !8205)
!8242 = !DILocation(line: 81, column: 24, scope: !8205)
!8243 = !DILocation(line: 83, column: 2, scope: !8205)
!8244 = !DILocation(line: 86, column: 2, scope: !8205)
!8245 = !DILocation(line: 87, column: 2, scope: !8205)
!8246 = !DILocalVariable(name: "key", arg: 1, scope: !8247, file: !6230, line: 84, type: !32)
!8247 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8248)
!8248 = !{!8246}
!8249 = !DILocation(line: 0, scope: !8247, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 90, column: 2, scope: !8205)
!8251 = !DILocation(line: 95, column: 2, scope: !8247, inlinedAt: !8250)
!8252 = !{i64 2849256}
!8253 = !DILocation(line: 93, column: 10, scope: !8205)
!8254 = !DILocation(line: 93, column: 2, scope: !8205)
!8255 = !DILocation(line: 97, column: 34, scope: !8205)
!8256 = !DILocation(line: 97, column: 26, scope: !8205)
!8257 = !DILocation(line: 97, column: 2, scope: !8205)
!8258 = !DILocation(line: 100, column: 2, scope: !8205)
!8259 = !DILocation(line: 102, column: 2, scope: !8205)
!8260 = !DILocation(line: 103, column: 1, scope: !8205)
!8261 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1362, file: !1362, line: 342, type: !8262, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8264)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!118, !1359, !143}
!8264 = !{!8265, !8266, !8267, !8268}
!8265 = !DILocalVariable(name: "config", arg: 1, scope: !8261, file: !1362, line: 342, type: !1359)
!8266 = !DILocalVariable(name: "id", arg: 2, scope: !8261, file: !1362, line: 343, type: !143)
!8267 = !DILocalVariable(name: "ret", scope: !8261, file: !1362, line: 345, type: !118)
!8268 = !DILocalVariable(name: "state", scope: !8261, file: !1362, line: 346, type: !1365)
!8269 = !DILocation(line: 0, scope: !8261)
!8270 = !DILocation(line: 346, column: 2, scope: !8261)
!8271 = !DILocation(line: 348, column: 8, scope: !8261)
!8272 = !DILocation(line: 349, column: 10, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8261, file: !1362, line: 349, column: 6)
!8274 = !DILocation(line: 349, column: 6, scope: !8261)
!8275 = !DILocation(line: 353, column: 44, scope: !8261)
!8276 = !DILocation(line: 353, column: 9, scope: !8261)
!8277 = !DILocation(line: 353, column: 2, scope: !8261)
!8278 = !DILocation(line: 354, column: 1, scope: !8261)
!8279 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1160, file: !1160, line: 444, type: !8176, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8280)
!8280 = !{!8281, !8282}
!8281 = !DILocalVariable(name: "base", arg: 1, scope: !8279, file: !1160, line: 444, type: !1324)
!8282 = !DILocalVariable(name: "watermark", arg: 2, scope: !8279, file: !1160, line: 444, type: !143)
!8283 = !DILocation(line: 0, scope: !8279)
!8284 = !DILocation(line: 447, column: 28, scope: !8279)
!8285 = !DILocation(line: 447, column: 48, scope: !8279)
!8286 = !DILocation(line: 447, column: 72, scope: !8279)
!8287 = !DILocation(line: 447, column: 25, scope: !8279)
!8288 = !DILocation(line: 448, column: 1, scope: !8279)
!8289 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1160, file: !1160, line: 458, type: !8176, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8290)
!8290 = !{!8291, !8292}
!8291 = !DILocalVariable(name: "base", arg: 1, scope: !8289, file: !1160, line: 458, type: !1324)
!8292 = !DILocalVariable(name: "watermark", arg: 2, scope: !8289, file: !1160, line: 458, type: !143)
!8293 = !DILocation(line: 0, scope: !8289)
!8294 = !DILocation(line: 461, column: 28, scope: !8289)
!8295 = !DILocation(line: 461, column: 48, scope: !8289)
!8296 = !DILocation(line: 461, column: 72, scope: !8289)
!8297 = !DILocation(line: 461, column: 25, scope: !8289)
!8298 = !DILocation(line: 462, column: 1, scope: !8289)
!8299 = distinct !DISubprogram(name: "UART_Enable", scope: !1160, file: !1160, line: 242, type: !8300, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8302)
!8300 = !DISubroutineType(types: !8301)
!8301 = !{null, !1324}
!8302 = !{!8303}
!8303 = !DILocalVariable(name: "base", arg: 1, scope: !8299, file: !1160, line: 242, type: !1324)
!8304 = !DILocation(line: 0, scope: !8299)
!8305 = !DILocation(line: 244, column: 5, scope: !8299)
!8306 = !DILocation(line: 244, column: 25, scope: !8299)
!8307 = !DILocation(line: 245, column: 1, scope: !8299)
!8308 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1362, file: !1362, line: 316, type: !8309, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1156, retainedNodes: !8311)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!118, !1359, !1365}
!8311 = !{!8312, !8313, !8314}
!8312 = !DILocalVariable(name: "config", arg: 1, scope: !8308, file: !1362, line: 317, type: !1359)
!8313 = !DILocalVariable(name: "state", arg: 2, scope: !8308, file: !1362, line: 318, type: !1365)
!8314 = !DILocalVariable(name: "reg", scope: !8308, file: !1362, line: 320, type: !22)
!8315 = !DILocation(line: 0, scope: !8308)
!8316 = !DILocation(line: 329, column: 39, scope: !8308)
!8317 = !DILocation(line: 329, column: 52, scope: !8308)
!8318 = !DILocation(line: 329, column: 9, scope: !8308)
!8319 = !DILocation(line: 329, column: 2, scope: !8308)
!8320 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1662, file: !1662, line: 270, type: !1668, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8321)
!8321 = !{!8322}
!8322 = !DILocalVariable(name: "dev", arg: 1, scope: !8320, file: !1662, line: 270, type: !1670)
!8323 = !DILocation(line: 0, scope: !8320)
!8324 = !DILocation(line: 274, column: 2, scope: !8320)
!8325 = !DILocation(line: 275, column: 12, scope: !8320)
!8326 = !DILocation(line: 276, column: 15, scope: !8320)
!8327 = !DILocation(line: 277, column: 16, scope: !8320)
!8328 = !DILocation(line: 278, column: 15, scope: !8320)
!8329 = !DILocation(line: 279, column: 16, scope: !8320)
!8330 = !DILocation(line: 282, column: 2, scope: !8320)
!8331 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1583, file: !1583, line: 1814, type: !6149, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8332)
!8332 = !{!8333, !8334}
!8333 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8331, file: !1583, line: 1814, type: !2421)
!8334 = !DILocalVariable(name: "priority", arg: 2, scope: !8331, file: !1583, line: 1814, type: !156)
!8335 = !DILocation(line: 0, scope: !8331)
!8336 = !DILocation(line: 1822, column: 46, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !1583, line: 1821, column: 3)
!8338 = distinct !DILexicalBlock(scope: !8331, file: !1583, line: 1816, column: 7)
!8339 = !DILocation(line: 1824, column: 1, scope: !8331)
!8340 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1662, file: !1662, line: 118, type: !6044, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8341)
!8341 = !{!8342, !8343}
!8342 = !DILocalVariable(name: "arg", arg: 1, scope: !8340, file: !1662, line: 118, type: !117)
!8343 = !DILocalVariable(name: "dticks", scope: !8340, file: !1662, line: 121, type: !156)
!8344 = !DILocation(line: 0, scope: !8340)
!8345 = !DILocation(line: 124, column: 2, scope: !8340)
!8346 = !DILocation(line: 129, column: 17, scope: !8340)
!8347 = !DILocation(line: 129, column: 14, scope: !8340)
!8348 = !DILocation(line: 130, column: 15, scope: !8340)
!8349 = !DILocation(line: 145, column: 27, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !1662, line: 132, column: 16)
!8351 = distinct !DILexicalBlock(scope: !8340, file: !1662, line: 132, column: 6)
!8352 = !DILocation(line: 145, column: 25, scope: !8350)
!8353 = !DILocation(line: 145, column: 45, scope: !8350)
!8354 = !DILocation(line: 146, column: 30, scope: !8350)
!8355 = !DILocation(line: 146, column: 20, scope: !8350)
!8356 = !DILocation(line: 147, column: 3, scope: !8350)
!8357 = !DILocation(line: 151, column: 2, scope: !8340)
!8358 = !DILocation(line: 152, column: 1, scope: !8340)
!8359 = distinct !DISubprogram(name: "elapsed", scope: !1662, file: !1662, line: 85, type: !6196, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8360)
!8360 = !{!8361, !8362, !8363}
!8361 = !DILocalVariable(name: "val1", scope: !8359, file: !1662, line: 87, type: !156)
!8362 = !DILocalVariable(name: "ctrl", scope: !8359, file: !1662, line: 88, type: !156)
!8363 = !DILocalVariable(name: "val2", scope: !8359, file: !1662, line: 89, type: !156)
!8364 = !DILocation(line: 87, column: 27, scope: !8359)
!8365 = !DILocation(line: 0, scope: !8359)
!8366 = !DILocation(line: 88, column: 27, scope: !8359)
!8367 = !DILocation(line: 89, column: 27, scope: !8359)
!8368 = !DILocation(line: 105, column: 12, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8359, file: !1662, line: 105, column: 6)
!8370 = !DILocation(line: 106, column: 6, scope: !8369)
!8371 = !DILocation(line: 107, column: 16, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8369, file: !1662, line: 106, column: 24)
!8373 = !DILocation(line: 111, column: 18, scope: !8372)
!8374 = !DILocation(line: 112, column: 2, scope: !8372)
!8375 = !DILocation(line: 114, column: 20, scope: !8359)
!8376 = !DILocation(line: 114, column: 30, scope: !8359)
!8377 = !DILocation(line: 114, column: 28, scope: !8359)
!8378 = !DILocation(line: 114, column: 2, scope: !8359)
!8379 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1662, file: !1662, line: 154, type: !8380, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !356, !146}
!8382 = !{!8383, !8384, !8385, !8386, !8387, !8388, !8389, !8394, !8395}
!8383 = !DILocalVariable(name: "ticks", arg: 1, scope: !8379, file: !1662, line: 154, type: !356)
!8384 = !DILocalVariable(name: "idle", arg: 2, scope: !8379, file: !1662, line: 154, type: !146)
!8385 = !DILocalVariable(name: "delay", scope: !8379, file: !1662, line: 169, type: !156)
!8386 = !DILocalVariable(name: "val1", scope: !8379, file: !1662, line: 170, type: !156)
!8387 = !DILocalVariable(name: "val2", scope: !8379, file: !1662, line: 170, type: !156)
!8388 = !DILocalVariable(name: "last_load_", scope: !8379, file: !1662, line: 171, type: !156)
!8389 = !DILocalVariable(name: "key", scope: !8379, file: !1662, line: 176, type: !8390)
!8390 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !328, line: 106, baseType: !8391)
!8391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !328, line: 32, size: 32, elements: !8392)
!8392 = !{!8393}
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8391, file: !328, line: 33, baseType: !118, size: 32)
!8394 = !DILocalVariable(name: "pending", scope: !8379, file: !1662, line: 178, type: !156)
!8395 = !DILocalVariable(name: "unannounced", scope: !8379, file: !1662, line: 185, type: !156)
!8396 = !DILocation(line: 0, scope: !8379)
!8397 = !DILocation(line: 162, column: 49, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8379, file: !1662, line: 162, column: 6)
!8399 = !DILocation(line: 163, column: 17, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8398, file: !1662, line: 162, column: 78)
!8401 = !DILocation(line: 164, column: 13, scope: !8400)
!8402 = !DILocation(line: 165, column: 3, scope: !8400)
!8403 = !DILocation(line: 171, column: 24, scope: !8379)
!8404 = !DILocation(line: 173, column: 10, scope: !8379)
!8405 = !DILocation(line: 174, column: 10, scope: !8379)
!8406 = !DILocalVariable(name: "l", arg: 1, scope: !8407, file: !328, line: 136, type: !8410)
!8407 = distinct !DISubprogram(name: "k_spin_lock", scope: !328, file: !328, line: 136, type: !8408, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8411)
!8408 = !DISubroutineType(types: !8409)
!8409 = !{!8390, !8410}
!8410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!8411 = !{!8406, !8412}
!8412 = !DILocalVariable(name: "k", scope: !8407, file: !328, line: 139, type: !8390)
!8413 = !DILocation(line: 0, scope: !8407, inlinedAt: !8414)
!8414 = distinct !DILocation(line: 176, column: 25, scope: !8379)
!8415 = !DILocation(line: 55, column: 2, scope: !8416, inlinedAt: !8420)
!8416 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8417)
!8417 = !{!8418, !8419}
!8418 = !DILocalVariable(name: "key", scope: !8416, file: !6230, line: 44, type: !32)
!8419 = !DILocalVariable(name: "tmp", scope: !8416, file: !6230, line: 53, type: !32)
!8420 = distinct !DILocation(line: 145, column: 10, scope: !8407, inlinedAt: !8414)
!8421 = !{i64 2951177}
!8422 = !DILocation(line: 0, scope: !8416, inlinedAt: !8420)
!8423 = !DILocation(line: 148, column: 2, scope: !8424, inlinedAt: !8414)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !328, line: 148, column: 2)
!8425 = distinct !DILexicalBlock(scope: !8407, file: !328, line: 148, column: 2)
!8426 = !DILocation(line: 148, column: 2, scope: !8425, inlinedAt: !8414)
!8427 = !DILocation(line: 148, column: 2, scope: !8428, inlinedAt: !8414)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !328, line: 148, column: 2)
!8429 = !DILocation(line: 160, column: 2, scope: !8407, inlinedAt: !8414)
!8430 = !DILocation(line: 178, column: 21, scope: !8379)
!8431 = !DILocation(line: 180, column: 18, scope: !8379)
!8432 = !DILocation(line: 182, column: 14, scope: !8379)
!8433 = !DILocation(line: 183, column: 15, scope: !8379)
!8434 = !DILocation(line: 185, column: 39, scope: !8379)
!8435 = !DILocation(line: 185, column: 37, scope: !8379)
!8436 = !DILocation(line: 187, column: 27, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8379, file: !1662, line: 187, column: 6)
!8438 = !DILocation(line: 187, column: 6, scope: !8379)
!8439 = !DILocation(line: 202, column: 27, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8437, file: !1662, line: 195, column: 9)
!8441 = !DILocation(line: 202, column: 48, scope: !8440)
!8442 = !DILocation(line: 203, column: 9, scope: !8440)
!8443 = !DILocation(line: 204, column: 11, scope: !8440)
!8444 = !DILocation(line: 205, column: 13, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8440, file: !1662, line: 205, column: 7)
!8446 = !DILocation(line: 205, column: 7, scope: !8440)
!8447 = !DILocation(line: 0, scope: !8437)
!8448 = !DILocation(line: 212, column: 18, scope: !8379)
!8449 = !DILocation(line: 214, column: 28, scope: !8379)
!8450 = !DILocation(line: 214, column: 16, scope: !8379)
!8451 = !DILocation(line: 215, column: 15, scope: !8379)
!8452 = !DILocation(line: 227, column: 11, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8379, file: !1662, line: 227, column: 6)
!8454 = !DILocation(line: 227, column: 6, scope: !8379)
!8455 = !DILocation(line: 228, column: 15, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8453, file: !1662, line: 227, column: 19)
!8457 = !DILocation(line: 228, column: 38, scope: !8456)
!8458 = !DILocation(line: 228, column: 24, scope: !8456)
!8459 = !DILocation(line: 229, column: 2, scope: !8456)
!8460 = !DILocation(line: 230, column: 24, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8453, file: !1662, line: 229, column: 9)
!8462 = !DILocation(line: 230, column: 15, scope: !8461)
!8463 = !DILocation(line: 0, scope: !8453)
!8464 = !DILocalVariable(name: "key", arg: 2, scope: !8465, file: !328, line: 190, type: !8390)
!8465 = distinct !DISubprogram(name: "k_spin_unlock", scope: !328, file: !328, line: 189, type: !8466, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8468)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{null, !8410, !8390}
!8468 = !{!8469, !8464}
!8469 = !DILocalVariable(name: "l", arg: 1, scope: !8465, file: !328, line: 189, type: !8410)
!8470 = !DILocation(line: 0, scope: !8465, inlinedAt: !8471)
!8471 = distinct !DILocation(line: 232, column: 2, scope: !8379)
!8472 = !DILocation(line: 194, column: 2, scope: !8473, inlinedAt: !8471)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !328, line: 194, column: 2)
!8474 = distinct !DILexicalBlock(scope: !8465, file: !328, line: 194, column: 2)
!8475 = !DILocation(line: 194, column: 2, scope: !8474, inlinedAt: !8471)
!8476 = !DILocation(line: 194, column: 2, scope: !8477, inlinedAt: !8471)
!8477 = distinct !DILexicalBlock(scope: !8473, file: !328, line: 194, column: 2)
!8478 = !DILocalVariable(name: "key", arg: 1, scope: !8479, file: !6230, line: 84, type: !32)
!8479 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8480)
!8480 = !{!8478}
!8481 = !DILocation(line: 0, scope: !8479, inlinedAt: !8482)
!8482 = distinct !DILocation(line: 215, column: 2, scope: !8465, inlinedAt: !8471)
!8483 = !DILocation(line: 95, column: 2, scope: !8479, inlinedAt: !8482)
!8484 = !{i64 2951994}
!8485 = !DILocation(line: 234, column: 1, scope: !8379)
!8486 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1662, file: !1662, line: 236, type: !6196, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8487)
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "key", scope: !8486, file: !1662, line: 242, type: !8390)
!8489 = !DILocalVariable(name: "cyc", scope: !8486, file: !1662, line: 243, type: !156)
!8490 = !DILocation(line: 0, scope: !8407, inlinedAt: !8491)
!8491 = distinct !DILocation(line: 242, column: 25, scope: !8486)
!8492 = !DILocation(line: 55, column: 2, scope: !8416, inlinedAt: !8493)
!8493 = distinct !DILocation(line: 145, column: 10, scope: !8407, inlinedAt: !8491)
!8494 = !DILocation(line: 0, scope: !8416, inlinedAt: !8493)
!8495 = !DILocation(line: 148, column: 2, scope: !8424, inlinedAt: !8491)
!8496 = !DILocation(line: 148, column: 2, scope: !8425, inlinedAt: !8491)
!8497 = !DILocation(line: 148, column: 2, scope: !8428, inlinedAt: !8491)
!8498 = !DILocation(line: 160, column: 2, scope: !8407, inlinedAt: !8491)
!8499 = !DILocation(line: 0, scope: !8486)
!8500 = !DILocation(line: 243, column: 17, scope: !8486)
!8501 = !DILocation(line: 243, column: 29, scope: !8486)
!8502 = !DILocation(line: 243, column: 43, scope: !8486)
!8503 = !DILocation(line: 0, scope: !8465, inlinedAt: !8504)
!8504 = distinct !DILocation(line: 245, column: 2, scope: !8486)
!8505 = !DILocation(line: 194, column: 2, scope: !8473, inlinedAt: !8504)
!8506 = !DILocation(line: 194, column: 2, scope: !8474, inlinedAt: !8504)
!8507 = !DILocation(line: 194, column: 2, scope: !8477, inlinedAt: !8504)
!8508 = !DILocation(line: 243, column: 27, scope: !8486)
!8509 = !DILocation(line: 243, column: 41, scope: !8486)
!8510 = !DILocation(line: 0, scope: !8479, inlinedAt: !8511)
!8511 = distinct !DILocation(line: 215, column: 2, scope: !8465, inlinedAt: !8504)
!8512 = !DILocation(line: 95, column: 2, scope: !8479, inlinedAt: !8511)
!8513 = !DILocation(line: 246, column: 13, scope: !8486)
!8514 = !DILocation(line: 246, column: 2, scope: !8486)
!8515 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1662, file: !1662, line: 249, type: !6196, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !8516)
!8516 = !{!8517, !8518}
!8517 = !DILocalVariable(name: "key", scope: !8515, file: !1662, line: 251, type: !8390)
!8518 = !DILocalVariable(name: "ret", scope: !8515, file: !1662, line: 252, type: !156)
!8519 = !DILocation(line: 0, scope: !8407, inlinedAt: !8520)
!8520 = distinct !DILocation(line: 251, column: 25, scope: !8515)
!8521 = !DILocation(line: 55, column: 2, scope: !8416, inlinedAt: !8522)
!8522 = distinct !DILocation(line: 145, column: 10, scope: !8407, inlinedAt: !8520)
!8523 = !DILocation(line: 0, scope: !8416, inlinedAt: !8522)
!8524 = !DILocation(line: 148, column: 2, scope: !8424, inlinedAt: !8520)
!8525 = !DILocation(line: 148, column: 2, scope: !8425, inlinedAt: !8520)
!8526 = !DILocation(line: 148, column: 2, scope: !8428, inlinedAt: !8520)
!8527 = !DILocation(line: 160, column: 2, scope: !8407, inlinedAt: !8520)
!8528 = !DILocation(line: 0, scope: !8515)
!8529 = !DILocation(line: 252, column: 17, scope: !8515)
!8530 = !DILocation(line: 252, column: 29, scope: !8515)
!8531 = !DILocation(line: 0, scope: !8465, inlinedAt: !8532)
!8532 = distinct !DILocation(line: 254, column: 2, scope: !8515)
!8533 = !DILocation(line: 194, column: 2, scope: !8473, inlinedAt: !8532)
!8534 = !DILocation(line: 194, column: 2, scope: !8474, inlinedAt: !8532)
!8535 = !DILocation(line: 194, column: 2, scope: !8477, inlinedAt: !8532)
!8536 = !DILocation(line: 252, column: 27, scope: !8515)
!8537 = !DILocation(line: 0, scope: !8479, inlinedAt: !8538)
!8538 = distinct !DILocation(line: 215, column: 2, scope: !8465, inlinedAt: !8532)
!8539 = !DILocation(line: 95, column: 2, scope: !8479, inlinedAt: !8538)
!8540 = !DILocation(line: 255, column: 2, scope: !8515)
!8541 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1662, file: !1662, line: 258, type: !359, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !1933)
!8542 = !DILocation(line: 260, column: 6, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8541, file: !1662, line: 260, column: 6)
!8544 = !DILocation(line: 260, column: 16, scope: !8543)
!8545 = !DILocation(line: 260, column: 6, scope: !8541)
!8546 = !DILocation(line: 261, column: 17, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8543, file: !1662, line: 260, column: 34)
!8548 = !DILocation(line: 262, column: 2, scope: !8547)
!8549 = !DILocation(line: 263, column: 1, scope: !8541)
!8550 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1662, file: !1662, line: 265, type: !359, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1437, retainedNodes: !1933)
!8551 = !DILocation(line: 267, column: 16, scope: !8550)
!8552 = !DILocation(line: 268, column: 1, scope: !8550)
!8553 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8554, file: !8554, line: 9, type: !8555, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !8585)
!8554 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!118, !8557, !143, !8584}
!8557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8558, size: 32)
!8558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8559)
!8559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1362, line: 60, size: 64, elements: !8560)
!8560 = !{!8561, !8583}
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8559, file: !1362, line: 69, baseType: !8562, size: 32)
!8562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8563, size: 32)
!8563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8564)
!8564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1362, line: 50, size: 64, elements: !8565)
!8565 = !{!8566, !8581, !8582}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8564, file: !1362, line: 52, baseType: !8567, size: 32)
!8567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8568, size: 32)
!8568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8569)
!8569 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1117, line: 64, baseType: !8570)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1117, line: 59, size: 160, elements: !8571)
!8571 = !{!8572, !8580}
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8570, file: !1117, line: 60, baseType: !8573, size: 128)
!8573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1117, line: 51, size: 128, elements: !8574)
!8574 = !{!8575, !8576, !8577, !8578, !8579}
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8573, file: !1117, line: 52, baseType: !156, size: 32)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8573, file: !1117, line: 53, baseType: !156, size: 32, offset: 32)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8573, file: !1117, line: 54, baseType: !156, size: 32, offset: 64)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8573, file: !1117, line: 55, baseType: !143, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8573, file: !1117, line: 56, baseType: !156, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8570, file: !1117, line: 61, baseType: !156, size: 32, offset: 128)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8564, file: !1362, line: 54, baseType: !143, size: 8, offset: 32)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8564, file: !1362, line: 56, baseType: !143, size: 8, offset: 40)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8559, file: !1362, line: 71, baseType: !143, size: 8, offset: 32)
!8584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 32)
!8585 = !{!8586, !8587, !8588}
!8586 = !DILocalVariable(name: "config", arg: 1, scope: !8553, file: !8554, line: 9, type: !8557)
!8587 = !DILocalVariable(name: "id", arg: 2, scope: !8553, file: !8554, line: 9, type: !143)
!8588 = !DILocalVariable(name: "state", arg: 3, scope: !8553, file: !8554, line: 10, type: !8584)
!8589 = !DILocation(line: 0, scope: !8553)
!8590 = !DILocation(line: 12, column: 20, scope: !8553)
!8591 = !DILocation(line: 13, column: 27, scope: !8553)
!8592 = !DILocation(line: 13, column: 42, scope: !8553)
!8593 = !DILocation(line: 13, column: 19, scope: !8553)
!8594 = !DILocation(line: 13, column: 16, scope: !8553)
!8595 = !DILocation(line: 13, column: 2, scope: !8553)
!8596 = distinct !{!8596, !8595, !8597}
!8597 = !DILocation(line: 19, column: 2, scope: !8553)
!8598 = !DILocation(line: 14, column: 23, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !8554, line: 14, column: 7)
!8600 = distinct !DILexicalBlock(scope: !8553, file: !8554, line: 13, column: 54)
!8601 = !DILocation(line: 14, column: 10, scope: !8599)
!8602 = !DILocation(line: 18, column: 11, scope: !8600)
!8603 = !DILocation(line: 14, column: 7, scope: !8600)
!8604 = !DILocation(line: 22, column: 1, scope: !8553)
!8605 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1703, file: !1703, line: 51, type: !1709, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !8606)
!8606 = !{!8607}
!8607 = !DILocalVariable(name: "dev", arg: 1, scope: !8605, file: !1703, line: 51, type: !1711)
!8608 = !DILocation(line: 0, scope: !8605)
!8609 = !DILocation(line: 66, column: 2, scope: !8605)
!8610 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1703, file: !1703, line: 10, type: !8611, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1699, retainedNodes: !8627)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!118, !8613, !143, !22}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8614, size: 32)
!8614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8615)
!8615 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1117, line: 64, baseType: !8616)
!8616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1117, line: 59, size: 160, elements: !8617)
!8617 = !{!8618, !8626}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8616, file: !1117, line: 60, baseType: !8619, size: 128)
!8619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1117, line: 51, size: 128, elements: !8620)
!8620 = !{!8621, !8622, !8623, !8624, !8625}
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !8619, file: !1117, line: 52, baseType: !156, size: 32)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !8619, file: !1117, line: 53, baseType: !156, size: 32, offset: 32)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !8619, file: !1117, line: 54, baseType: !156, size: 32, offset: 64)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !8619, file: !1117, line: 55, baseType: !143, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !8619, file: !1117, line: 56, baseType: !156, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8616, file: !1117, line: 61, baseType: !156, size: 32, offset: 128)
!8627 = !{!8628, !8629, !8630, !8631, !8633, !8636, !8637, !8638, !8639, !8640}
!8628 = !DILocalVariable(name: "pins", arg: 1, scope: !8610, file: !1703, line: 10, type: !8613)
!8629 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8610, file: !1703, line: 10, type: !143)
!8630 = !DILocalVariable(name: "reg", arg: 3, scope: !8610, file: !1703, line: 11, type: !22)
!8631 = !DILocalVariable(name: "i", scope: !8632, file: !1703, line: 14, type: !143)
!8632 = distinct !DILexicalBlock(scope: !8610, file: !1703, line: 14, column: 2)
!8633 = !DILocalVariable(name: "mux_register", scope: !8634, file: !1703, line: 15, type: !156)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !1703, line: 14, column: 41)
!8635 = distinct !DILexicalBlock(scope: !8632, file: !1703, line: 14, column: 2)
!8636 = !DILocalVariable(name: "mux_mode", scope: !8634, file: !1703, line: 16, type: !156)
!8637 = !DILocalVariable(name: "input_register", scope: !8634, file: !1703, line: 17, type: !156)
!8638 = !DILocalVariable(name: "input_daisy", scope: !8634, file: !1703, line: 18, type: !156)
!8639 = !DILocalVariable(name: "config_register", scope: !8634, file: !1703, line: 19, type: !156)
!8640 = !DILocalVariable(name: "pin_ctrl_flags", scope: !8634, file: !1703, line: 20, type: !156)
!8641 = !DILocation(line: 0, scope: !8610)
!8642 = !DILocation(line: 0, scope: !8632)
!8643 = !DILocation(line: 14, column: 25, scope: !8635)
!8644 = !DILocation(line: 14, column: 2, scope: !8632)
!8645 = !DILocation(line: 48, column: 2, scope: !8610)
!8646 = !DILocation(line: 15, column: 42, scope: !8634)
!8647 = !DILocation(line: 0, scope: !8634)
!8648 = !DILocation(line: 16, column: 38, scope: !8634)
!8649 = !DILocation(line: 17, column: 44, scope: !8634)
!8650 = !DILocation(line: 19, column: 45, scope: !8634)
!8651 = !DILocation(line: 20, column: 37, scope: !8634)
!8652 = !DILocation(line: 35, column: 4, scope: !8634)
!8653 = !DILocation(line: 36, column: 4, scope: !8634)
!8654 = !DILocation(line: 35, column: 45, scope: !8634)
!8655 = !DILocation(line: 34, column: 5, scope: !8634)
!8656 = !DILocation(line: 34, column: 53, scope: !8634)
!8657 = !DILocation(line: 37, column: 7, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8634, file: !1703, line: 37, column: 7)
!8659 = !DILocation(line: 37, column: 7, scope: !8634)
!8660 = !DILocation(line: 18, column: 41, scope: !8634)
!8661 = !DILocation(line: 39, column: 5, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !1703, line: 37, column: 23)
!8663 = !DILocation(line: 38, column: 6, scope: !8662)
!8664 = !DILocation(line: 38, column: 56, scope: !8662)
!8665 = !DILocation(line: 40, column: 3, scope: !8662)
!8666 = !DILocation(line: 41, column: 7, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8634, file: !1703, line: 41, column: 7)
!8668 = !DILocation(line: 41, column: 7, scope: !8634)
!8669 = !DILocation(line: 43, column: 20, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8667, file: !1703, line: 41, column: 24)
!8671 = !DILocation(line: 42, column: 6, scope: !8670)
!8672 = !DILocation(line: 42, column: 57, scope: !8670)
!8673 = !DILocation(line: 44, column: 3, scope: !8670)
!8674 = !DILocation(line: 14, column: 37, scope: !8635)
!8675 = distinct !{!8675, !8644, !8676}
!8676 = !DILocation(line: 47, column: 2, scope: !8632)
!8677 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !8678, file: !8678, line: 43, type: !8679, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8733)
!8678 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8679 = !DISubroutineType(types: !8680)
!8680 = !{null, !8681, !156, !156, !156}
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 32)
!8682 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !725, line: 4575, baseType: !8683)
!8683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 4532, size: 390144, elements: !8684)
!8684 = !{!8685, !8686, !8687, !8688, !8689, !8690, !8698, !8699, !8707, !8708}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !8683, file: !725, line: 4533, baseType: !729, size: 32)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !8683, file: !725, line: 4534, baseType: !729, size: 32, offset: 32)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !8683, file: !725, line: 4535, baseType: !729, size: 32, offset: 64)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !8683, file: !725, line: 4536, baseType: !729, size: 32, offset: 96)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8683, file: !725, line: 4537, baseType: !734, size: 16256, offset: 128)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8683, file: !725, line: 4543, baseType: !8691, size: 4224, offset: 16384)
!8691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8692, size: 4224, elements: !745)
!8692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8683, file: !725, line: 4538, size: 128, elements: !8693)
!8693 = !{!8694, !8695, !8696, !8697}
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !8692, file: !725, line: 4539, baseType: !729, size: 32)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !8692, file: !725, line: 4540, baseType: !729, size: 32, offset: 32)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !8692, file: !725, line: 4541, baseType: !729, size: 32, offset: 64)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !8692, file: !725, line: 4542, baseType: !729, size: 32, offset: 96)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !8683, file: !725, line: 4544, baseType: !748, size: 110464, offset: 20608)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8683, file: !725, line: 4550, baseType: !8700, size: 24448, offset: 131072)
!8700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8701, size: 24448, elements: !759)
!8701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8683, file: !725, line: 4545, size: 128, elements: !8702)
!8702 = !{!8703, !8704, !8705, !8706}
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !8701, file: !725, line: 4546, baseType: !729, size: 32)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !8701, file: !725, line: 4547, baseType: !729, size: 32, offset: 32)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !8701, file: !725, line: 4548, baseType: !729, size: 32, offset: 64)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !8701, file: !725, line: 4549, baseType: !729, size: 32, offset: 96)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !8683, file: !725, line: 4551, baseType: !762, size: 106624, offset: 155520)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8683, file: !725, line: 4574, baseType: !8709, size: 128000, offset: 262144)
!8709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8710, size: 128000, elements: !793)
!8710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8683, file: !725, line: 4552, size: 1024, elements: !8711)
!8711 = !{!8712, !8713, !8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8727, !8728, !8729, !8730, !8731, !8732}
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !8710, file: !725, line: 4553, baseType: !729, size: 32)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !8710, file: !725, line: 4554, baseType: !729, size: 32, offset: 32)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !8710, file: !725, line: 4555, baseType: !729, size: 32, offset: 64)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !8710, file: !725, line: 4556, baseType: !729, size: 32, offset: 96)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !8710, file: !725, line: 4557, baseType: !729, size: 32, offset: 128)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !8710, file: !725, line: 4558, baseType: !729, size: 32, offset: 160)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !8710, file: !725, line: 4559, baseType: !729, size: 32, offset: 192)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !8710, file: !725, line: 4560, baseType: !729, size: 32, offset: 224)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !8710, file: !725, line: 4561, baseType: !729, size: 32, offset: 256)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !8710, file: !725, line: 4562, baseType: !729, size: 32, offset: 288)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !8710, file: !725, line: 4563, baseType: !729, size: 32, offset: 320)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !8710, file: !725, line: 4564, baseType: !729, size: 32, offset: 352)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !8710, file: !725, line: 4565, baseType: !729, size: 32, offset: 384)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !8710, file: !725, line: 4566, baseType: !729, size: 32, offset: 416)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !8710, file: !725, line: 4567, baseType: !729, size: 32, offset: 448)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !8710, file: !725, line: 4568, baseType: !729, size: 32, offset: 480)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !8710, file: !725, line: 4569, baseType: !786, size: 384, offset: 512)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !8710, file: !725, line: 4570, baseType: !729, size: 32, offset: 896)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !8710, file: !725, line: 4571, baseType: !729, size: 32, offset: 928)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !8710, file: !725, line: 4572, baseType: !729, size: 32, offset: 960)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !8710, file: !725, line: 4573, baseType: !729, size: 32, offset: 992)
!8733 = !{!8734, !8735, !8736, !8737}
!8734 = !DILocalVariable(name: "base", arg: 1, scope: !8677, file: !8678, line: 43, type: !8681)
!8735 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8677, file: !8678, line: 43, type: !156)
!8736 = !DILocalVariable(name: "pre", arg: 3, scope: !8677, file: !8678, line: 43, type: !156)
!8737 = !DILocalVariable(name: "post", arg: 4, scope: !8677, file: !8678, line: 43, type: !156)
!8738 = !DILocation(line: 0, scope: !8677)
!8739 = !DILocation(line: 45, column: 5, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !8678, line: 45, column: 5)
!8741 = distinct !DILexicalBlock(scope: !8677, file: !8678, line: 45, column: 5)
!8742 = !DILocation(line: 45, column: 5, scope: !8741)
!8743 = !DILocation(line: 45, column: 5, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8740, file: !8678, line: 45, column: 5)
!8745 = !DILocation(line: 46, column: 5, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !8678, line: 46, column: 5)
!8747 = distinct !DILexicalBlock(scope: !8677, file: !8678, line: 46, column: 5)
!8748 = !DILocation(line: 46, column: 5, scope: !8747)
!8749 = !DILocation(line: 46, column: 5, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8746, file: !8678, line: 46, column: 5)
!8751 = !DILocation(line: 48, column: 25, scope: !8677)
!8752 = !DILocation(line: 48, column: 42, scope: !8677)
!8753 = !DILocation(line: 50, column: 24, scope: !8677)
!8754 = !DILocation(line: 49, column: 94, scope: !8677)
!8755 = !DILocation(line: 50, column: 54, scope: !8677)
!8756 = !DILocation(line: 48, column: 22, scope: !8677)
!8757 = !DILocation(line: 51, column: 1, scope: !8677)
!8758 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !8678, file: !8678, line: 59, type: !8759, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{null, !8681, !156, !1388, !1388}
!8761 = !{!8762, !8763, !8764, !8765}
!8762 = !DILocalVariable(name: "base", arg: 1, scope: !8758, file: !8678, line: 59, type: !8681)
!8763 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8758, file: !8678, line: 59, type: !156)
!8764 = !DILocalVariable(name: "pre", arg: 3, scope: !8758, file: !8678, line: 59, type: !1388)
!8765 = !DILocalVariable(name: "post", arg: 4, scope: !8758, file: !8678, line: 59, type: !1388)
!8766 = !DILocation(line: 0, scope: !8758)
!8767 = !DILocation(line: 61, column: 5, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !8678, line: 61, column: 5)
!8769 = distinct !DILexicalBlock(scope: !8758, file: !8678, line: 61, column: 5)
!8770 = !DILocation(line: 61, column: 5, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8768, file: !8678, line: 61, column: 5)
!8772 = !DILocation(line: 63, column: 13, scope: !8758)
!8773 = !DILocation(line: 63, column: 63, scope: !8758)
!8774 = !DILocation(line: 63, column: 10, scope: !8758)
!8775 = !DILocation(line: 64, column: 14, scope: !8758)
!8776 = !DILocation(line: 64, column: 31, scope: !8758)
!8777 = !DILocation(line: 64, column: 11, scope: !8758)
!8778 = !DILocation(line: 65, column: 1, scope: !8758)
!8779 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !8678, file: !8678, line: 73, type: !8780, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !8782)
!8780 = !DISubroutineType(types: !8781)
!8781 = !{null, !8681, !156, !156, !156, !156}
!8782 = !{!8783, !8784, !8785, !8786, !8787}
!8783 = !DILocalVariable(name: "base", arg: 1, scope: !8779, file: !8678, line: 73, type: !8681)
!8784 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !8779, file: !8678, line: 73, type: !156)
!8785 = !DILocalVariable(name: "mux", arg: 3, scope: !8779, file: !8678, line: 73, type: !156)
!8786 = !DILocalVariable(name: "pre", arg: 4, scope: !8779, file: !8678, line: 73, type: !156)
!8787 = !DILocalVariable(name: "post", arg: 5, scope: !8779, file: !8678, line: 73, type: !156)
!8788 = !DILocation(line: 0, scope: !8779)
!8789 = !DILocation(line: 75, column: 5, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8678, line: 75, column: 5)
!8791 = distinct !DILexicalBlock(scope: !8779, file: !8678, line: 75, column: 5)
!8792 = !DILocation(line: 75, column: 5, scope: !8791)
!8793 = !DILocation(line: 75, column: 5, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8790, file: !8678, line: 75, column: 5)
!8795 = !DILocation(line: 76, column: 5, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8678, line: 76, column: 5)
!8797 = distinct !DILexicalBlock(scope: !8779, file: !8678, line: 76, column: 5)
!8798 = !DILocation(line: 76, column: 5, scope: !8797)
!8799 = !DILocation(line: 76, column: 5, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !8678, line: 76, column: 5)
!8801 = !DILocation(line: 78, column: 25, scope: !8779)
!8802 = !DILocation(line: 78, column: 42, scope: !8779)
!8803 = !DILocation(line: 80, column: 24, scope: !8779)
!8804 = !DILocation(line: 80, column: 51, scope: !8779)
!8805 = !DILocation(line: 79, column: 121, scope: !8779)
!8806 = !DILocation(line: 80, column: 49, scope: !8779)
!8807 = !DILocation(line: 80, column: 81, scope: !8779)
!8808 = !DILocation(line: 78, column: 22, scope: !8779)
!8809 = !DILocation(line: 81, column: 1, scope: !8779)
!8810 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !8811, file: !8811, line: 43, type: !8812, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8814)
!8811 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8812 = !DISubroutineType(types: !8813)
!8813 = !{!156, !2732}
!8814 = !{!8815}
!8815 = !DILocalVariable(name: "base", arg: 1, scope: !8810, file: !8811, line: 43, type: !2732)
!8816 = !DILocation(line: 0, scope: !8810)
!8817 = !DILocation(line: 45, column: 9, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8810, file: !8811, line: 45, column: 9)
!8819 = !DILocation(line: 45, column: 9, scope: !8810)
!8820 = !DILocation(line: 48, column: 26, scope: !8810)
!8821 = !DILocation(line: 48, column: 45, scope: !8810)
!8822 = !DILocation(line: 48, column: 23, scope: !8810)
!8823 = !DILocation(line: 48, column: 5, scope: !8810)
!8824 = !DILocation(line: 49, column: 1, scope: !8810)
!8825 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2723, file: !2723, line: 220, type: !8826, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8828)
!8826 = !DISubroutineType(types: !8827)
!8827 = !{!146, !2732, !156}
!8828 = !{!8829, !8830}
!8829 = !DILocalVariable(name: "base", arg: 1, scope: !8825, file: !2723, line: 220, type: !2732)
!8830 = !DILocalVariable(name: "pllControl", arg: 2, scope: !8825, file: !2723, line: 220, type: !156)
!8831 = !DILocation(line: 0, scope: !8825)
!8832 = !DILocation(line: 222, column: 19, scope: !8825)
!8833 = !DILocation(line: 222, column: 58, scope: !8825)
!8834 = !DILocation(line: 222, column: 12, scope: !8825)
!8835 = !DILocation(line: 222, column: 5, scope: !8825)
!8836 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !8811, file: !8811, line: 57, type: !8812, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8837)
!8837 = !{!8838}
!8838 = !DILocalVariable(name: "base", arg: 1, scope: !8836, file: !8811, line: 57, type: !2732)
!8839 = !DILocation(line: 0, scope: !8836)
!8840 = !DILocation(line: 59, column: 9, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !8811, line: 59, column: 9)
!8842 = !DILocation(line: 59, column: 9, scope: !8836)
!8843 = !DILocation(line: 62, column: 9, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8836, file: !8811, line: 62, column: 9)
!8845 = !DILocation(line: 62, column: 28, scope: !8844)
!8846 = !DILocation(line: 0, scope: !8844)
!8847 = !DILocation(line: 66, column: 1, scope: !8836)
!8848 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !8811, file: !8811, line: 74, type: !8812, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852, !8853}
!8850 = !DILocalVariable(name: "base", arg: 1, scope: !8848, file: !8811, line: 74, type: !2732)
!8851 = !DILocalVariable(name: "divSelect", scope: !8848, file: !8811, line: 76, type: !143)
!8852 = !DILocalVariable(name: "divTestSelect", scope: !8848, file: !8811, line: 76, type: !143)
!8853 = !DILocalVariable(name: "factor", scope: !8848, file: !8811, line: 77, type: !2795)
!8854 = !DILocation(line: 0, scope: !8848)
!8855 = !DILocation(line: 79, column: 9, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8848, file: !8811, line: 79, column: 9)
!8857 = !DILocation(line: 79, column: 9, scope: !8848)
!8858 = !DILocation(line: 82, column: 17, scope: !8848)
!8859 = !DILocation(line: 83, column: 22, scope: !8848)
!8860 = !DILocation(line: 83, column: 100, scope: !8848)
!8861 = !DILocation(line: 83, column: 21, scope: !8848)
!8862 = !DILocation(line: 86, column: 5, scope: !8848)
!8863 = !DILocation(line: 100, column: 9, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8848, file: !8811, line: 100, column: 9)
!8865 = !DILocation(line: 100, column: 41, scope: !8864)
!8866 = !DILocation(line: 100, column: 9, scope: !8848)
!8867 = !DILocation(line: 102, column: 27, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !8811, line: 101, column: 5)
!8869 = !DILocation(line: 102, column: 59, scope: !8868)
!8870 = !DILocation(line: 102, column: 19, scope: !8868)
!8871 = !DILocation(line: 103, column: 27, scope: !8868)
!8872 = !DILocation(line: 103, column: 62, scope: !8868)
!8873 = !DILocation(line: 103, column: 19, scope: !8868)
!8874 = !DILocation(line: 102, column: 95, scope: !8868)
!8875 = !DILocation(line: 104, column: 27, scope: !8868)
!8876 = !DILocation(line: 104, column: 60, scope: !8868)
!8877 = !DILocation(line: 104, column: 19, scope: !8868)
!8878 = !DILocation(line: 103, column: 98, scope: !8868)
!8879 = !DILocation(line: 105, column: 39, scope: !8868)
!8880 = !DILocation(line: 105, column: 27, scope: !8868)
!8881 = !DILocation(line: 105, column: 60, scope: !8868)
!8882 = !DILocation(line: 105, column: 70, scope: !8868)
!8883 = !DILocation(line: 105, column: 57, scope: !8868)
!8884 = !DILocation(line: 105, column: 16, scope: !8868)
!8885 = !DILocation(line: 105, column: 9, scope: !8868)
!8886 = !DILocation(line: 109, column: 28, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8864, file: !8811, line: 108, column: 5)
!8888 = !DILocation(line: 109, column: 48, scope: !8887)
!8889 = !DILocation(line: 109, column: 46, scope: !8887)
!8890 = !DILocation(line: 109, column: 9, scope: !8887)
!8891 = !DILocation(line: 111, column: 1, scope: !8848)
!8892 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !8811, file: !8811, line: 119, type: !8812, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8893)
!8893 = !{!8894}
!8894 = !DILocalVariable(name: "base", arg: 1, scope: !8892, file: !8811, line: 119, type: !2732)
!8895 = !DILocation(line: 0, scope: !8892)
!8896 = !DILocation(line: 121, column: 9, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8892, file: !8811, line: 121, column: 9)
!8898 = !DILocation(line: 125, column: 1, scope: !8892)
!8899 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !8811, file: !8811, line: 133, type: !8812, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8900)
!8900 = !{!8901, !8902, !8903, !8904, !8905}
!8901 = !DILocalVariable(name: "base", arg: 1, scope: !8899, file: !8811, line: 133, type: !2732)
!8902 = !DILocalVariable(name: "divSelect", scope: !8899, file: !8811, line: 135, type: !143)
!8903 = !DILocalVariable(name: "divPostSelect", scope: !8899, file: !8811, line: 135, type: !143)
!8904 = !DILocalVariable(name: "divTestSelect", scope: !8899, file: !8811, line: 135, type: !143)
!8905 = !DILocalVariable(name: "factor", scope: !8899, file: !8811, line: 136, type: !2795)
!8906 = !DILocation(line: 0, scope: !8899)
!8907 = !DILocation(line: 138, column: 9, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8899, file: !8811, line: 138, column: 9)
!8909 = !DILocation(line: 138, column: 9, scope: !8899)
!8910 = !DILocation(line: 141, column: 17, scope: !8899)
!8911 = !DILocation(line: 142, column: 22, scope: !8899)
!8912 = !DILocation(line: 142, column: 101, scope: !8899)
!8913 = !DILocation(line: 142, column: 21, scope: !8899)
!8914 = !DILocation(line: 144, column: 22, scope: !8899)
!8915 = !DILocation(line: 144, column: 104, scope: !8899)
!8916 = !DILocation(line: 144, column: 21, scope: !8899)
!8917 = !DILocation(line: 147, column: 5, scope: !8899)
!8918 = !DILocation(line: 161, column: 5, scope: !8899)
!8919 = !DILocation(line: 175, column: 9, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8899, file: !8811, line: 175, column: 9)
!8921 = !DILocation(line: 175, column: 43, scope: !8920)
!8922 = !DILocation(line: 175, column: 9, scope: !8899)
!8923 = !DILocation(line: 177, column: 27, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8920, file: !8811, line: 176, column: 5)
!8925 = !DILocation(line: 177, column: 61, scope: !8924)
!8926 = !DILocation(line: 177, column: 19, scope: !8924)
!8927 = !DILocation(line: 178, column: 27, scope: !8924)
!8928 = !DILocation(line: 178, column: 64, scope: !8924)
!8929 = !DILocation(line: 178, column: 19, scope: !8924)
!8930 = !DILocation(line: 177, column: 99, scope: !8924)
!8931 = !DILocation(line: 179, column: 27, scope: !8924)
!8932 = !DILocation(line: 179, column: 62, scope: !8924)
!8933 = !DILocation(line: 179, column: 19, scope: !8924)
!8934 = !DILocation(line: 178, column: 102, scope: !8924)
!8935 = !DILocation(line: 180, column: 40, scope: !8924)
!8936 = !DILocation(line: 180, column: 58, scope: !8924)
!8937 = !DILocation(line: 180, column: 27, scope: !8924)
!8938 = !DILocation(line: 180, column: 79, scope: !8924)
!8939 = !DILocation(line: 180, column: 89, scope: !8924)
!8940 = !DILocation(line: 180, column: 76, scope: !8924)
!8941 = !DILocation(line: 180, column: 16, scope: !8924)
!8942 = !DILocation(line: 180, column: 9, scope: !8924)
!8943 = !DILocation(line: 184, column: 29, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8920, file: !8811, line: 183, column: 5)
!8945 = !DILocation(line: 184, column: 47, scope: !8944)
!8946 = !DILocation(line: 184, column: 67, scope: !8944)
!8947 = !DILocation(line: 184, column: 65, scope: !8944)
!8948 = !DILocation(line: 184, column: 9, scope: !8944)
!8949 = !DILocation(line: 186, column: 1, scope: !8899)
!8950 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !8811, file: !8811, line: 194, type: !8812, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !8951)
!8951 = !{!8952, !8953, !8954, !8955, !8956}
!8952 = !DILocalVariable(name: "base", arg: 1, scope: !8950, file: !8811, line: 194, type: !2732)
!8953 = !DILocalVariable(name: "divSelect", scope: !8950, file: !8811, line: 196, type: !143)
!8954 = !DILocalVariable(name: "divPostSelect", scope: !8950, file: !8811, line: 196, type: !143)
!8955 = !DILocalVariable(name: "divTestSelect", scope: !8950, file: !8811, line: 196, type: !143)
!8956 = !DILocalVariable(name: "factor", scope: !8950, file: !8811, line: 197, type: !2795)
!8957 = !DILocation(line: 0, scope: !8950)
!8958 = !DILocation(line: 199, column: 9, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8950, file: !8811, line: 199, column: 9)
!8960 = !DILocation(line: 199, column: 9, scope: !8950)
!8961 = !DILocation(line: 202, column: 17, scope: !8950)
!8962 = !DILocation(line: 203, column: 22, scope: !8950)
!8963 = !DILocation(line: 203, column: 101, scope: !8950)
!8964 = !DILocation(line: 203, column: 21, scope: !8950)
!8965 = !DILocation(line: 205, column: 22, scope: !8950)
!8966 = !DILocation(line: 205, column: 104, scope: !8950)
!8967 = !DILocation(line: 205, column: 21, scope: !8950)
!8968 = !DILocation(line: 208, column: 5, scope: !8950)
!8969 = !DILocation(line: 222, column: 5, scope: !8950)
!8970 = !DILocation(line: 236, column: 9, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8950, file: !8811, line: 236, column: 9)
!8972 = !DILocation(line: 236, column: 43, scope: !8971)
!8973 = !DILocation(line: 236, column: 9, scope: !8950)
!8974 = !DILocation(line: 238, column: 27, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !8811, line: 237, column: 5)
!8976 = !DILocation(line: 238, column: 61, scope: !8975)
!8977 = !DILocation(line: 238, column: 19, scope: !8975)
!8978 = !DILocation(line: 239, column: 27, scope: !8975)
!8979 = !DILocation(line: 239, column: 64, scope: !8975)
!8980 = !DILocation(line: 239, column: 19, scope: !8975)
!8981 = !DILocation(line: 238, column: 99, scope: !8975)
!8982 = !DILocation(line: 240, column: 27, scope: !8975)
!8983 = !DILocation(line: 240, column: 62, scope: !8975)
!8984 = !DILocation(line: 240, column: 19, scope: !8975)
!8985 = !DILocation(line: 239, column: 102, scope: !8975)
!8986 = !DILocation(line: 241, column: 40, scope: !8975)
!8987 = !DILocation(line: 241, column: 58, scope: !8975)
!8988 = !DILocation(line: 241, column: 27, scope: !8975)
!8989 = !DILocation(line: 241, column: 79, scope: !8975)
!8990 = !DILocation(line: 241, column: 89, scope: !8975)
!8991 = !DILocation(line: 241, column: 76, scope: !8975)
!8992 = !DILocation(line: 241, column: 16, scope: !8975)
!8993 = !DILocation(line: 241, column: 9, scope: !8975)
!8994 = !DILocation(line: 245, column: 29, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8971, file: !8811, line: 244, column: 5)
!8996 = !DILocation(line: 245, column: 47, scope: !8995)
!8997 = !DILocation(line: 245, column: 67, scope: !8995)
!8998 = !DILocation(line: 245, column: 65, scope: !8995)
!8999 = !DILocation(line: 245, column: 9, scope: !8995)
!9000 = !DILocation(line: 247, column: 1, scope: !8950)
!9001 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !8811, file: !8811, line: 255, type: !9002, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !9004)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{!156, !2732, !156}
!9004 = !{!9005, !9006, !9007, !9008}
!9005 = !DILocalVariable(name: "base", arg: 1, scope: !9001, file: !8811, line: 255, type: !2732)
!9006 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9001, file: !8811, line: 255, type: !156)
!9007 = !DILocalVariable(name: "main", scope: !9001, file: !8811, line: 257, type: !156)
!9008 = !DILocalVariable(name: "frac", scope: !9001, file: !8811, line: 257, type: !156)
!9009 = !DILocation(line: 0, scope: !9001)
!9010 = !DILocation(line: 260, column: 5, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !8811, line: 260, column: 5)
!9012 = distinct !DILexicalBlock(scope: !9001, file: !8811, line: 260, column: 5)
!9013 = !DILocation(line: 260, column: 5, scope: !9012)
!9014 = !DILocation(line: 260, column: 5, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9011, file: !8811, line: 260, column: 5)
!9016 = !DILocation(line: 262, column: 12, scope: !9001)
!9017 = !DILocation(line: 263, column: 12, scope: !9001)
!9018 = !DILocation(line: 265, column: 17, scope: !9001)
!9019 = !DILocation(line: 265, column: 24, scope: !9001)
!9020 = !DILocation(line: 265, column: 5, scope: !9001)
!9021 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2723, file: !2723, line: 373, type: !9002, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !9022)
!9022 = !{!9023, !9024}
!9023 = !DILocalVariable(name: "base", arg: 1, scope: !9021, file: !2723, line: 373, type: !2732)
!9024 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9021, file: !2723, line: 373, type: !156)
!9025 = !DILocation(line: 0, scope: !9021)
!9026 = !DILocation(line: 375, column: 13, scope: !9021)
!9027 = !DILocation(line: 375, column: 52, scope: !9021)
!9028 = !DILocation(line: 375, column: 49, scope: !9021)
!9029 = !DILocation(line: 375, column: 85, scope: !9021)
!9030 = !DILocation(line: 375, column: 5, scope: !9021)
!9031 = distinct !DISubprogram(name: "GPIO_Init", scope: !9032, file: !9032, line: 47, type: !9033, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !9057)
!9032 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9033 = !DISubroutineType(types: !9034)
!9034 = !{null, !9035, !9047}
!9035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9036, size: 32)
!9036 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !725, line: 19729, baseType: !9037)
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 19720, size: 256, elements: !9038)
!9038 = !{!9039, !9040, !9041, !9042, !9043, !9044, !9045, !9046}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !9037, file: !725, line: 19721, baseType: !729, size: 32)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !9037, file: !725, line: 19722, baseType: !729, size: 32, offset: 32)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !9037, file: !725, line: 19723, baseType: !800, size: 32, offset: 64)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9037, file: !725, line: 19724, baseType: !729, size: 32, offset: 96)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9037, file: !725, line: 19725, baseType: !729, size: 32, offset: 128)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !9037, file: !725, line: 19726, baseType: !729, size: 32, offset: 160)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !9037, file: !725, line: 19727, baseType: !729, size: 32, offset: 192)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !9037, file: !725, line: 19728, baseType: !729, size: 32, offset: 224)
!9047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9048, size: 32)
!9048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9049)
!9049 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !980, line: 78, baseType: !9050)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !980, line: 73, size: 96, elements: !9051)
!9051 = !{!9052, !9053, !9055}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9050, file: !980, line: 75, baseType: !156, size: 32)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9050, file: !980, line: 76, baseType: !9054, size: 32, offset: 32)
!9054 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !980, line: 53, baseType: !2799)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !9050, file: !980, line: 77, baseType: !9056, size: 32, offset: 64)
!9056 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !980, line: 63, baseType: !2803)
!9057 = !{!9058, !9059, !9060, !9061}
!9058 = !DILocalVariable(name: "base", arg: 1, scope: !9031, file: !9032, line: 47, type: !9035)
!9059 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9031, file: !9032, line: 47, type: !9047)
!9060 = !DILocalVariable(name: "pin", scope: !9031, file: !9032, line: 49, type: !156)
!9061 = !DILocalVariable(name: "icr", scope: !9031, file: !9032, line: 50, type: !849)
!9062 = !DILocation(line: 0, scope: !9031)
!9063 = !DILocation(line: 53, column: 5, scope: !9031)
!9064 = !DILocation(line: 53, column: 24, scope: !9031)
!9065 = !DILocation(line: 54, column: 2, scope: !9031)
!9066 = !DILocation(line: 54, column: 26, scope: !9031)
!9067 = !DILocation(line: 57, column: 23, scope: !9031)
!9068 = !DILocation(line: 60, column: 21, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9031, file: !9032, line: 60, column: 9)
!9070 = !DILocation(line: 60, column: 31, scope: !9069)
!9071 = !DILocation(line: 0, scope: !9069)
!9072 = !DILocation(line: 60, column: 9, scope: !9031)
!9073 = !DILocation(line: 61, column: 9, scope: !9069)
!9074 = !DILocation(line: 61, column: 29, scope: !9069)
!9075 = !DILocation(line: 63, column: 32, scope: !9069)
!9076 = !DILocation(line: 63, column: 9, scope: !9069)
!9077 = !DILocation(line: 63, column: 29, scope: !9069)
!9078 = !DILocation(line: 66, column: 12, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9031, file: !9032, line: 66, column: 8)
!9080 = !DILocation(line: 66, column: 8, scope: !9031)
!9081 = !DILocation(line: 73, column: 24, scope: !9031)
!9082 = !DILocation(line: 73, column: 5, scope: !9031)
!9083 = !DILocation(line: 77, column: 30, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !9032, line: 76, column: 9)
!9085 = distinct !DILexicalBlock(scope: !9031, file: !9032, line: 74, column: 5)
!9086 = !DILocation(line: 77, column: 26, scope: !9084)
!9087 = !DILocation(line: 77, column: 21, scope: !9084)
!9088 = !DILocation(line: 77, column: 18, scope: !9084)
!9089 = !DILocation(line: 78, column: 13, scope: !9084)
!9090 = !DILocation(line: 82, column: 21, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9085, file: !9032, line: 81, column: 9)
!9092 = !DILocation(line: 82, column: 38, scope: !9091)
!9093 = !DILocation(line: 82, column: 34, scope: !9091)
!9094 = !DILocation(line: 82, column: 29, scope: !9091)
!9095 = !DILocation(line: 82, column: 26, scope: !9091)
!9096 = !DILocation(line: 82, column: 53, scope: !9091)
!9097 = !DILocation(line: 82, column: 47, scope: !9091)
!9098 = !DILocation(line: 83, column: 13, scope: !9091)
!9099 = !DILocation(line: 87, column: 21, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9085, file: !9032, line: 86, column: 9)
!9101 = !DILocation(line: 87, column: 38, scope: !9100)
!9102 = !DILocation(line: 87, column: 34, scope: !9100)
!9103 = !DILocation(line: 87, column: 29, scope: !9100)
!9104 = !DILocation(line: 87, column: 26, scope: !9100)
!9105 = !DILocation(line: 87, column: 53, scope: !9100)
!9106 = !DILocation(line: 87, column: 47, scope: !9100)
!9107 = !DILocation(line: 88, column: 13, scope: !9100)
!9108 = !DILocation(line: 92, column: 29, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9085, file: !9032, line: 91, column: 9)
!9110 = !DILocation(line: 92, column: 25, scope: !9109)
!9111 = !DILocation(line: 92, column: 18, scope: !9109)
!9112 = !DILocation(line: 93, column: 13, scope: !9109)
!9113 = !DILocation(line: 0, scope: !9085)
!9114 = !DILocation(line: 100, column: 1, scope: !9031)
!9115 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !9032, file: !9032, line: 111, type: !9116, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !9119)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{null, !9035, !156, !9118}
!9118 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !980, line: 70, baseType: !979)
!9119 = !{!9120, !9121, !9122}
!9120 = !DILocalVariable(name: "base", arg: 1, scope: !9115, file: !9032, line: 111, type: !9035)
!9121 = !DILocalVariable(name: "pin", arg: 2, scope: !9115, file: !9032, line: 111, type: !156)
!9122 = !DILocalVariable(name: "pinVal", arg: 3, scope: !9115, file: !9032, line: 111, type: !9118)
!9123 = !DILocation(line: 0, scope: !9115)
!9124 = !DILocation(line: 113, column: 5, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9126, file: !9032, line: 113, column: 5)
!9126 = distinct !DILexicalBlock(scope: !9115, file: !9032, line: 113, column: 5)
!9127 = !DILocation(line: 113, column: 5, scope: !9126)
!9128 = !DILocation(line: 113, column: 5, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9125, file: !9032, line: 113, column: 5)
!9130 = !DILocation(line: 114, column: 16, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9115, file: !9032, line: 114, column: 9)
!9132 = !DILocation(line: 0, scope: !9131)
!9133 = !DILocation(line: 114, column: 9, scope: !9115)
!9134 = !DILocation(line: 116, column: 9, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !9032, line: 115, column: 5)
!9136 = !DILocation(line: 116, column: 27, scope: !9135)
!9137 = !DILocation(line: 117, column: 5, scope: !9135)
!9138 = !DILocation(line: 120, column: 30, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9131, file: !9032, line: 119, column: 5)
!9140 = !DILocation(line: 120, column: 9, scope: !9139)
!9141 = !DILocation(line: 120, column: 27, scope: !9139)
!9142 = !DILocation(line: 122, column: 1, scope: !9115)
!9143 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !9032, file: !9032, line: 133, type: !9144, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{null, !9035, !156, !146}
!9146 = !{!9147, !9148, !9149}
!9147 = !DILocalVariable(name: "base", arg: 1, scope: !9143, file: !9032, line: 133, type: !9035)
!9148 = !DILocalVariable(name: "pin", arg: 2, scope: !9143, file: !9032, line: 133, type: !156)
!9149 = !DILocalVariable(name: "enable", arg: 3, scope: !9143, file: !9032, line: 133, type: !146)
!9150 = !DILocation(line: 0, scope: !9143)
!9151 = !DILocation(line: 135, column: 5, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !9032, line: 135, column: 5)
!9153 = distinct !DILexicalBlock(scope: !9143, file: !9032, line: 135, column: 5)
!9154 = !DILocation(line: 135, column: 5, scope: !9153)
!9155 = !DILocation(line: 135, column: 5, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9152, file: !9032, line: 135, column: 5)
!9157 = !DILocation(line: 0, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9143, file: !9032, line: 137, column: 8)
!9159 = !DILocation(line: 137, column: 8, scope: !9143)
!9160 = !DILocation(line: 138, column: 9, scope: !9158)
!9161 = !DILocation(line: 138, column: 28, scope: !9158)
!9162 = !DILocation(line: 140, column: 31, scope: !9158)
!9163 = !DILocation(line: 140, column: 9, scope: !9158)
!9164 = !DILocation(line: 140, column: 28, scope: !9158)
!9165 = !DILocation(line: 141, column: 1, scope: !9143)
!9166 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !9032, file: !9032, line: 150, type: !9144, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !9167)
!9167 = !{!9168, !9169, !9170}
!9168 = !DILocalVariable(name: "base", arg: 1, scope: !9166, file: !9032, line: 150, type: !9035)
!9169 = !DILocalVariable(name: "pin", arg: 2, scope: !9166, file: !9032, line: 150, type: !156)
!9170 = !DILocalVariable(name: "enable", arg: 3, scope: !9166, file: !9032, line: 150, type: !146)
!9171 = !DILocation(line: 0, scope: !9166)
!9172 = !DILocation(line: 152, column: 5, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !9032, line: 152, column: 5)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !9032, line: 152, column: 5)
!9175 = !DILocation(line: 152, column: 5, scope: !9174)
!9176 = !DILocation(line: 152, column: 5, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9173, file: !9032, line: 152, column: 5)
!9178 = !DILocation(line: 0, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9166, file: !9032, line: 154, column: 8)
!9180 = !DILocation(line: 154, column: 8, scope: !9166)
!9181 = !DILocation(line: 155, column: 9, scope: !9179)
!9182 = !DILocation(line: 155, column: 33, scope: !9179)
!9183 = !DILocation(line: 157, column: 36, scope: !9179)
!9184 = !DILocation(line: 157, column: 9, scope: !9179)
!9185 = !DILocation(line: 157, column: 33, scope: !9179)
!9186 = !DILocation(line: 158, column: 1, scope: !9166)
!9187 = distinct !DISubprogram(name: "UART_Init", scope: !9188, file: !9188, line: 47, type: !9189, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9225)
!9188 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9189 = !DISubroutineType(types: !9190)
!9190 = !{null, !9191, !9214}
!9191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9192, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !725, line: 41342, baseType: !9193)
!9193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 41322, size: 1504, elements: !9194)
!9194 = !{!9195, !9196, !9197, !9198, !9199, !9200, !9201, !9202, !9203, !9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9193, file: !725, line: 41323, baseType: !800, size: 32)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9193, file: !725, line: 41324, baseType: !1330, size: 480, offset: 32)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9193, file: !725, line: 41325, baseType: !729, size: 32, offset: 512)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9193, file: !725, line: 41326, baseType: !1330, size: 480, offset: 544)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9193, file: !725, line: 41327, baseType: !729, size: 32, offset: 1024)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9193, file: !725, line: 41328, baseType: !729, size: 32, offset: 1056)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9193, file: !725, line: 41329, baseType: !729, size: 32, offset: 1088)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9193, file: !725, line: 41330, baseType: !729, size: 32, offset: 1120)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9193, file: !725, line: 41331, baseType: !729, size: 32, offset: 1152)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9193, file: !725, line: 41332, baseType: !729, size: 32, offset: 1184)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9193, file: !725, line: 41333, baseType: !729, size: 32, offset: 1216)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9193, file: !725, line: 41334, baseType: !729, size: 32, offset: 1248)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9193, file: !725, line: 41335, baseType: !729, size: 32, offset: 1280)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9193, file: !725, line: 41336, baseType: !729, size: 32, offset: 1312)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9193, file: !725, line: 41337, baseType: !729, size: 32, offset: 1344)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9193, file: !725, line: 41338, baseType: !800, size: 32, offset: 1376)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9193, file: !725, line: 41339, baseType: !729, size: 32, offset: 1408)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9193, file: !725, line: 41340, baseType: !729, size: 32, offset: 1440)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9193, file: !725, line: 41341, baseType: !729, size: 32, offset: 1472)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 32)
!9215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9216)
!9216 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1160, line: 57, baseType: !9217)
!9217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1160, line: 49, size: 192, elements: !9218)
!9218 = !{!9219, !9220, !9221, !9222, !9223, !9224}
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9217, file: !1160, line: 51, baseType: !156, size: 32)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9217, file: !1160, line: 52, baseType: !156, size: 32, offset: 32)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9217, file: !1160, line: 53, baseType: !156, size: 32, offset: 64)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9217, file: !1160, line: 54, baseType: !156, size: 32, offset: 96)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9217, file: !1160, line: 55, baseType: !156, size: 32, offset: 128)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9217, file: !1160, line: 56, baseType: !156, size: 32, offset: 160)
!9225 = !{!9226, !9227}
!9226 = !DILocalVariable(name: "base", arg: 1, scope: !9187, file: !9188, line: 47, type: !9191)
!9227 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9187, file: !9188, line: 47, type: !9214)
!9228 = !DILocation(line: 0, scope: !9187)
!9229 = !DILocation(line: 49, column: 5, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !9188, line: 49, column: 5)
!9231 = distinct !DILexicalBlock(scope: !9187, file: !9188, line: 49, column: 5)
!9232 = !DILocation(line: 49, column: 5, scope: !9231)
!9233 = !DILocation(line: 49, column: 5, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9230, file: !9188, line: 49, column: 5)
!9235 = !DILocation(line: 52, column: 5, scope: !9187)
!9236 = !DILocation(line: 52, column: 25, scope: !9187)
!9237 = !DILocation(line: 55, column: 5, scope: !9187)
!9238 = !DILocation(line: 60, column: 41, scope: !9187)
!9239 = !DILocation(line: 61, column: 41, scope: !9187)
!9240 = !DILocation(line: 62, column: 41, scope: !9187)
!9241 = !DILocation(line: 63, column: 41, scope: !9187)
!9242 = !DILocation(line: 60, column: 5, scope: !9187)
!9243 = !DILocation(line: 60, column: 25, scope: !9187)
!9244 = !DILocation(line: 61, column: 52, scope: !9187)
!9245 = !DILocation(line: 62, column: 52, scope: !9187)
!9246 = !DILocation(line: 63, column: 52, scope: !9187)
!9247 = !DILocation(line: 68, column: 5, scope: !9187)
!9248 = !DILocation(line: 68, column: 25, scope: !9187)
!9249 = !DILocation(line: 72, column: 40, scope: !9187)
!9250 = !DILocation(line: 72, column: 63, scope: !9187)
!9251 = !DILocation(line: 72, column: 5, scope: !9187)
!9252 = !DILocation(line: 73, column: 1, scope: !9187)
!9253 = distinct !DISubprogram(name: "UART_Deinit", scope: !9188, file: !9188, line: 82, type: !9254, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9256)
!9254 = !DISubroutineType(types: !9255)
!9255 = !{null, !9191}
!9256 = !{!9257}
!9257 = !DILocalVariable(name: "base", arg: 1, scope: !9253, file: !9188, line: 82, type: !9191)
!9258 = !DILocation(line: 0, scope: !9253)
!9259 = !DILocation(line: 85, column: 5, scope: !9253)
!9260 = !DILocation(line: 85, column: 25, scope: !9253)
!9261 = !DILocation(line: 88, column: 26, scope: !9253)
!9262 = !DILocation(line: 89, column: 5, scope: !9253)
!9263 = !DILocation(line: 89, column: 26, scope: !9253)
!9264 = !DILocation(line: 90, column: 5, scope: !9253)
!9265 = !DILocation(line: 90, column: 26, scope: !9253)
!9266 = !DILocation(line: 93, column: 5, scope: !9253)
!9267 = !DILocation(line: 93, column: 26, scope: !9253)
!9268 = !DILocation(line: 94, column: 5, scope: !9253)
!9269 = !DILocation(line: 94, column: 26, scope: !9253)
!9270 = !DILocation(line: 95, column: 5, scope: !9253)
!9271 = !DILocation(line: 95, column: 26, scope: !9253)
!9272 = !DILocation(line: 96, column: 5, scope: !9253)
!9273 = !DILocation(line: 96, column: 26, scope: !9253)
!9274 = !DILocation(line: 97, column: 5, scope: !9253)
!9275 = !DILocation(line: 97, column: 26, scope: !9253)
!9276 = !DILocation(line: 98, column: 5, scope: !9253)
!9277 = !DILocation(line: 98, column: 26, scope: !9253)
!9278 = !DILocation(line: 99, column: 5, scope: !9253)
!9279 = !DILocation(line: 99, column: 26, scope: !9253)
!9280 = !DILocation(line: 103, column: 25, scope: !9253)
!9281 = !DILocation(line: 104, column: 5, scope: !9253)
!9282 = !DILocation(line: 104, column: 14, scope: !9253)
!9283 = !DILocation(line: 104, column: 34, scope: !9253)
!9284 = !DILocation(line: 104, column: 12, scope: !9253)
!9285 = distinct !{!9285, !9281, !9286}
!9286 = !DILocation(line: 104, column: 57, scope: !9253)
!9287 = !DILocation(line: 105, column: 1, scope: !9253)
!9288 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !9188, file: !9188, line: 113, type: !9289, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9291)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{null, !9191, !156, !156}
!9291 = !{!9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300, !9303, !9304}
!9292 = !DILocalVariable(name: "base", arg: 1, scope: !9288, file: !9188, line: 113, type: !9191)
!9293 = !DILocalVariable(name: "clockRate", arg: 2, scope: !9288, file: !9188, line: 113, type: !156)
!9294 = !DILocalVariable(name: "baudRate", arg: 3, scope: !9288, file: !9188, line: 113, type: !156)
!9295 = !DILocalVariable(name: "numerator", scope: !9288, file: !9188, line: 115, type: !156)
!9296 = !DILocalVariable(name: "denominator", scope: !9288, file: !9188, line: 116, type: !156)
!9297 = !DILocalVariable(name: "divisor", scope: !9288, file: !9188, line: 117, type: !156)
!9298 = !DILocalVariable(name: "refFreqDiv", scope: !9288, file: !9188, line: 118, type: !156)
!9299 = !DILocalVariable(name: "divider", scope: !9288, file: !9188, line: 119, type: !156)
!9300 = !DILocalVariable(name: "m", scope: !9301, file: !9188, line: 141, type: !156)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !9188, line: 140, column: 5)
!9302 = distinct !DILexicalBlock(scope: !9288, file: !9188, line: 138, column: 9)
!9303 = !DILocalVariable(name: "n", scope: !9301, file: !9188, line: 142, type: !156)
!9304 = !DILocalVariable(name: "max", scope: !9301, file: !9188, line: 143, type: !156)
!9305 = !DILocation(line: 0, scope: !9288)
!9306 = !DILocation(line: 123, column: 28, scope: !9288)
!9307 = !DILocation(line: 126, column: 24, scope: !9288)
!9308 = !DILocation(line: 126, column: 5, scope: !9288)
!9309 = !DILocation(line: 129, column: 33, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9288, file: !9188, line: 127, column: 5)
!9311 = distinct !{!9311, !9308, !9312}
!9312 = !DILocation(line: 131, column: 5, scope: !9288)
!9313 = !DILocation(line: 133, column: 27, scope: !9288)
!9314 = !DILocation(line: 134, column: 35, scope: !9288)
!9315 = !DILocation(line: 138, column: 20, scope: !9302)
!9316 = !DILocation(line: 138, column: 48, scope: !9302)
!9317 = !DILocation(line: 141, column: 33, scope: !9301)
!9318 = !DILocation(line: 141, column: 38, scope: !9301)
!9319 = !DILocation(line: 141, column: 65, scope: !9301)
!9320 = !DILocation(line: 0, scope: !9301)
!9321 = !DILocation(line: 142, column: 35, scope: !9301)
!9322 = !DILocation(line: 142, column: 40, scope: !9301)
!9323 = !DILocation(line: 142, column: 61, scope: !9301)
!9324 = !DILocation(line: 143, column: 26, scope: !9301)
!9325 = !DILocation(line: 143, column: 24, scope: !9301)
!9326 = !DILocation(line: 144, column: 19, scope: !9301)
!9327 = !DILocation(line: 145, column: 21, scope: !9301)
!9328 = !DILocation(line: 146, column: 15, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9301, file: !9188, line: 146, column: 13)
!9330 = !DILocation(line: 146, column: 13, scope: !9301)
!9331 = !DILocation(line: 148, column: 15, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9301, file: !9188, line: 148, column: 13)
!9333 = !DILocation(line: 148, column: 13, scope: !9301)
!9334 = !DILocation(line: 150, column: 5, scope: !9301)
!9335 = !DILocation(line: 151, column: 26, scope: !9288)
!9336 = !DILocation(line: 151, column: 31, scope: !9288)
!9337 = !DILocation(line: 151, column: 52, scope: !9288)
!9338 = !DILocation(line: 153, column: 5, scope: !9288)
!9339 = !DILocation(line: 0, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9288, file: !9188, line: 154, column: 5)
!9341 = !DILocation(line: 180, column: 5, scope: !9288)
!9342 = !DILocation(line: 180, column: 25, scope: !9288)
!9343 = !DILocation(line: 181, column: 25, scope: !9288)
!9344 = !DILocation(line: 182, column: 27, scope: !9288)
!9345 = !DILocation(line: 182, column: 5, scope: !9288)
!9346 = !DILocation(line: 182, column: 25, scope: !9288)
!9347 = !DILocation(line: 183, column: 27, scope: !9288)
!9348 = !DILocation(line: 183, column: 5, scope: !9288)
!9349 = !DILocation(line: 183, column: 25, scope: !9288)
!9350 = !DILocation(line: 184, column: 28, scope: !9288)
!9351 = !DILocation(line: 184, column: 5, scope: !9288)
!9352 = !DILocation(line: 184, column: 26, scope: !9288)
!9353 = !DILocation(line: 185, column: 1, scope: !9288)
!9354 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !9188, file: !9188, line: 194, type: !9355, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9357)
!9355 = !DISubroutineType(types: !9356)
!9356 = !{null, !9191, !156, !146}
!9357 = !{!9358, !9359, !9360}
!9358 = !DILocalVariable(name: "base", arg: 1, scope: !9354, file: !9188, line: 194, type: !9191)
!9359 = !DILocalVariable(name: "direction", arg: 2, scope: !9354, file: !9188, line: 194, type: !156)
!9360 = !DILocalVariable(name: "invert", arg: 3, scope: !9354, file: !9188, line: 194, type: !146)
!9361 = !DILocation(line: 0, scope: !9354)
!9362 = !DILocation(line: 196, column: 5, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !9188, line: 196, column: 5)
!9364 = distinct !DILexicalBlock(scope: !9354, file: !9188, line: 196, column: 5)
!9365 = !DILocation(line: 196, column: 5, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9363, file: !9188, line: 196, column: 5)
!9367 = !DILocation(line: 198, column: 9, scope: !9354)
!9368 = !DILocation(line: 200, column: 13, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !9188, line: 199, column: 5)
!9370 = distinct !DILexicalBlock(scope: !9354, file: !9188, line: 198, column: 9)
!9371 = !DILocation(line: 201, column: 13, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9369, file: !9188, line: 200, column: 13)
!9373 = !DILocation(line: 201, column: 33, scope: !9372)
!9374 = !DILocation(line: 202, column: 13, scope: !9369)
!9375 = !DILocation(line: 203, column: 13, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9369, file: !9188, line: 202, column: 13)
!9377 = !DILocation(line: 203, column: 33, scope: !9376)
!9378 = !DILocation(line: 207, column: 13, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9370, file: !9188, line: 206, column: 5)
!9380 = !DILocation(line: 208, column: 13, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9379, file: !9188, line: 207, column: 13)
!9382 = !DILocation(line: 208, column: 33, scope: !9381)
!9383 = !DILocation(line: 209, column: 13, scope: !9379)
!9384 = !DILocation(line: 210, column: 13, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !9188, line: 209, column: 13)
!9386 = !DILocation(line: 210, column: 33, scope: !9385)
!9387 = !DILocation(line: 212, column: 1, scope: !9354)
!9388 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !9188, file: !9188, line: 224, type: !9389, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9391)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{null, !9191, !146}
!9391 = !{!9392, !9393}
!9392 = !DILocalVariable(name: "base", arg: 1, scope: !9388, file: !9188, line: 224, type: !9191)
!9393 = !DILocalVariable(name: "enable", arg: 2, scope: !9388, file: !9188, line: 224, type: !146)
!9394 = !DILocation(line: 0, scope: !9388)
!9395 = !DILocation(line: 0, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9388, file: !9188, line: 226, column: 9)
!9397 = !DILocation(line: 226, column: 9, scope: !9388)
!9398 = !DILocation(line: 230, column: 1, scope: !9388)
!9399 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !9188, file: !9188, line: 239, type: !9389, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9400)
!9400 = !{!9401, !9402}
!9401 = !DILocalVariable(name: "base", arg: 1, scope: !9399, file: !9188, line: 239, type: !9191)
!9402 = !DILocalVariable(name: "enable", arg: 2, scope: !9399, file: !9188, line: 239, type: !146)
!9403 = !DILocation(line: 0, scope: !9399)
!9404 = !DILocation(line: 0, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9399, file: !9188, line: 241, column: 9)
!9406 = !DILocation(line: 241, column: 9, scope: !9399)
!9407 = !DILocation(line: 245, column: 1, scope: !9399)
!9408 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !9188, file: !9188, line: 258, type: !9355, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9409)
!9409 = !{!9410, !9411, !9412, !9413, !9414}
!9410 = !DILocalVariable(name: "base", arg: 1, scope: !9408, file: !9188, line: 258, type: !9191)
!9411 = !DILocalVariable(name: "intSource", arg: 2, scope: !9408, file: !9188, line: 258, type: !156)
!9412 = !DILocalVariable(name: "enable", arg: 3, scope: !9408, file: !9188, line: 258, type: !146)
!9413 = !DILocalVariable(name: "uart_reg", scope: !9408, file: !9188, line: 260, type: !849)
!9414 = !DILocalVariable(name: "uart_mask", scope: !9408, file: !9188, line: 261, type: !156)
!9415 = !DILocation(line: 0, scope: !9408)
!9416 = !DILocation(line: 263, column: 29, scope: !9408)
!9417 = !DILocation(line: 263, column: 57, scope: !9408)
!9418 = !DILocation(line: 263, column: 44, scope: !9408)
!9419 = !DILocation(line: 263, column: 16, scope: !9408)
!9420 = !DILocation(line: 264, column: 34, scope: !9408)
!9421 = !DILocation(line: 264, column: 20, scope: !9408)
!9422 = !DILocation(line: 266, column: 9, scope: !9408)
!9423 = !DILocation(line: 267, column: 19, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9408, file: !9188, line: 266, column: 9)
!9425 = !DILocation(line: 267, column: 9, scope: !9424)
!9426 = !DILocation(line: 269, column: 22, scope: !9424)
!9427 = !DILocation(line: 269, column: 19, scope: !9424)
!9428 = !DILocation(line: 0, scope: !9424)
!9429 = !DILocation(line: 270, column: 1, scope: !9408)
!9430 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !9188, file: !9188, line: 299, type: !9431, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9433)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{null, !9191, !156}
!9433 = !{!9434, !9435, !9436, !9437}
!9434 = !DILocalVariable(name: "base", arg: 1, scope: !9430, file: !9188, line: 299, type: !9191)
!9435 = !DILocalVariable(name: "flag", arg: 2, scope: !9430, file: !9188, line: 299, type: !156)
!9436 = !DILocalVariable(name: "uart_reg", scope: !9430, file: !9188, line: 301, type: !849)
!9437 = !DILocalVariable(name: "uart_mask", scope: !9430, file: !9188, line: 302, type: !156)
!9438 = !DILocation(line: 0, scope: !9430)
!9439 = !DILocation(line: 304, column: 29, scope: !9430)
!9440 = !DILocation(line: 304, column: 52, scope: !9430)
!9441 = !DILocation(line: 304, column: 44, scope: !9430)
!9442 = !DILocation(line: 304, column: 16, scope: !9430)
!9443 = !DILocation(line: 305, column: 29, scope: !9430)
!9444 = !DILocation(line: 305, column: 20, scope: !9430)
!9445 = !DILocation(line: 308, column: 15, scope: !9430)
!9446 = !DILocation(line: 309, column: 1, scope: !9430)
!9447 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !9188, file: !9188, line: 322, type: !9355, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9448)
!9448 = !{!9449, !9450, !9451, !9452, !9453}
!9449 = !DILocalVariable(name: "base", arg: 1, scope: !9447, file: !9188, line: 322, type: !9191)
!9450 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !9447, file: !9188, line: 322, type: !156)
!9451 = !DILocalVariable(name: "enable", arg: 3, scope: !9447, file: !9188, line: 322, type: !146)
!9452 = !DILocalVariable(name: "uart_reg", scope: !9447, file: !9188, line: 324, type: !849)
!9453 = !DILocalVariable(name: "uart_mask", scope: !9447, file: !9188, line: 325, type: !156)
!9454 = !DILocation(line: 0, scope: !9447)
!9455 = !DILocation(line: 327, column: 29, scope: !9447)
!9456 = !DILocation(line: 327, column: 57, scope: !9447)
!9457 = !DILocation(line: 327, column: 44, scope: !9447)
!9458 = !DILocation(line: 327, column: 16, scope: !9447)
!9459 = !DILocation(line: 328, column: 34, scope: !9447)
!9460 = !DILocation(line: 328, column: 20, scope: !9447)
!9461 = !DILocation(line: 329, column: 9, scope: !9447)
!9462 = !DILocation(line: 330, column: 19, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9447, file: !9188, line: 329, column: 9)
!9464 = !DILocation(line: 330, column: 9, scope: !9463)
!9465 = !DILocation(line: 332, column: 22, scope: !9463)
!9466 = !DILocation(line: 332, column: 19, scope: !9463)
!9467 = !DILocation(line: 0, scope: !9463)
!9468 = !DILocation(line: 333, column: 1, scope: !9447)
!9469 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !9188, file: !9188, line: 345, type: !9389, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9470)
!9470 = !{!9471, !9472}
!9471 = !DILocalVariable(name: "base", arg: 1, scope: !9469, file: !9188, line: 345, type: !9191)
!9472 = !DILocalVariable(name: "enable", arg: 2, scope: !9469, file: !9188, line: 345, type: !146)
!9473 = !DILocation(line: 0, scope: !9469)
!9474 = !DILocation(line: 0, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9469, file: !9188, line: 347, column: 9)
!9476 = !DILocation(line: 347, column: 9, scope: !9469)
!9477 = !DILocation(line: 351, column: 1, scope: !9469)
!9478 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !9188, file: !9188, line: 362, type: !9389, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9479)
!9479 = !{!9480, !9481}
!9480 = !DILocalVariable(name: "base", arg: 1, scope: !9478, file: !9188, line: 362, type: !9191)
!9481 = !DILocalVariable(name: "enable", arg: 2, scope: !9478, file: !9188, line: 362, type: !146)
!9482 = !DILocation(line: 0, scope: !9478)
!9483 = !DILocation(line: 0, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9478, file: !9188, line: 364, column: 9)
!9485 = !DILocation(line: 364, column: 9, scope: !9478)
!9486 = !DILocation(line: 368, column: 1, scope: !9478)
!9487 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !9188, file: !9188, line: 379, type: !9389, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9488)
!9488 = !{!9489, !9490}
!9489 = !DILocalVariable(name: "base", arg: 1, scope: !9487, file: !9188, line: 379, type: !9191)
!9490 = !DILocalVariable(name: "active", arg: 2, scope: !9487, file: !9188, line: 379, type: !146)
!9491 = !DILocation(line: 0, scope: !9487)
!9492 = !DILocation(line: 0, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9487, file: !9188, line: 381, column: 9)
!9494 = !DILocation(line: 381, column: 9, scope: !9487)
!9495 = !DILocation(line: 385, column: 1, scope: !9487)
!9496 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !9188, file: !9188, line: 394, type: !9431, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9497)
!9497 = !{!9498, !9499}
!9498 = !DILocalVariable(name: "base", arg: 1, scope: !9496, file: !9188, line: 394, type: !9191)
!9499 = !DILocalVariable(name: "mode", arg: 2, scope: !9496, file: !9188, line: 394, type: !156)
!9500 = !DILocation(line: 0, scope: !9496)
!9501 = !DILocation(line: 396, column: 5, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !9188, line: 396, column: 5)
!9503 = distinct !DILexicalBlock(scope: !9496, file: !9188, line: 396, column: 5)
!9504 = !DILocation(line: 396, column: 5, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9502, file: !9188, line: 396, column: 5)
!9506 = !DILocation(line: 0, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9496, file: !9188, line: 398, column: 9)
!9508 = !DILocation(line: 398, column: 9, scope: !9496)
!9509 = !DILocation(line: 402, column: 1, scope: !9496)
!9510 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !9188, file: !9188, line: 412, type: !9389, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9511)
!9511 = !{!9512, !9513}
!9512 = !DILocalVariable(name: "base", arg: 1, scope: !9510, file: !9188, line: 412, type: !9191)
!9513 = !DILocalVariable(name: "active", arg: 2, scope: !9510, file: !9188, line: 412, type: !146)
!9514 = !DILocation(line: 0, scope: !9510)
!9515 = !DILocation(line: 0, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9510, file: !9188, line: 414, column: 9)
!9517 = !DILocation(line: 414, column: 9, scope: !9510)
!9518 = !DILocation(line: 418, column: 1, scope: !9510)
!9519 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !9188, file: !9188, line: 427, type: !9389, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9520)
!9520 = !{!9521, !9522}
!9521 = !DILocalVariable(name: "base", arg: 1, scope: !9519, file: !9188, line: 427, type: !9191)
!9522 = !DILocalVariable(name: "active", arg: 2, scope: !9519, file: !9188, line: 427, type: !146)
!9523 = !DILocation(line: 0, scope: !9519)
!9524 = !DILocation(line: 0, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9519, file: !9188, line: 429, column: 9)
!9526 = !DILocation(line: 429, column: 9, scope: !9519)
!9527 = !DILocation(line: 433, column: 1, scope: !9519)
!9528 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !9188, file: !9188, line: 442, type: !9389, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9529)
!9529 = !{!9530, !9531}
!9530 = !DILocalVariable(name: "base", arg: 1, scope: !9528, file: !9188, line: 442, type: !9191)
!9531 = !DILocalVariable(name: "active", arg: 2, scope: !9528, file: !9188, line: 442, type: !146)
!9532 = !DILocation(line: 0, scope: !9528)
!9533 = !DILocation(line: 0, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9528, file: !9188, line: 444, column: 9)
!9535 = !DILocation(line: 444, column: 9, scope: !9528)
!9536 = !DILocation(line: 448, column: 1, scope: !9528)
!9537 = distinct !DISubprogram(name: "UART_Putchar9", scope: !9188, file: !9188, line: 460, type: !9538, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9540)
!9538 = !DISubroutineType(types: !9539)
!9539 = !{null, !9191, !279}
!9540 = !{!9541, !9542}
!9541 = !DILocalVariable(name: "base", arg: 1, scope: !9537, file: !9188, line: 460, type: !9191)
!9542 = !DILocalVariable(name: "data", arg: 2, scope: !9537, file: !9188, line: 460, type: !279)
!9543 = !DILocation(line: 0, scope: !9537)
!9544 = !DILocation(line: 462, column: 5, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !9188, line: 462, column: 5)
!9546 = distinct !DILexicalBlock(scope: !9537, file: !9188, line: 462, column: 5)
!9547 = !DILocation(line: 462, column: 5, scope: !9546)
!9548 = !DILocation(line: 462, column: 5, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !9188, line: 462, column: 5)
!9550 = !DILocation(line: 0, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9537, file: !9188, line: 464, column: 9)
!9552 = !DILocation(line: 464, column: 9, scope: !9537)
!9553 = !DILocation(line: 468, column: 33, scope: !9537)
!9554 = !DILocation(line: 468, column: 5, scope: !9537)
!9555 = !DILocation(line: 468, column: 25, scope: !9537)
!9556 = !DILocation(line: 469, column: 1, scope: !9537)
!9557 = distinct !DISubprogram(name: "UART_Getchar9", scope: !9188, file: !9188, line: 478, type: !9558, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9560)
!9558 = !DISubroutineType(types: !9559)
!9559 = !{!279, !9191}
!9560 = !{!9561, !9562}
!9561 = !DILocalVariable(name: "base", arg: 1, scope: !9557, file: !9188, line: 478, type: !9191)
!9562 = !DILocalVariable(name: "rxData", scope: !9557, file: !9188, line: 480, type: !279)
!9563 = !DILocation(line: 0, scope: !9557)
!9564 = !DILocation(line: 480, column: 23, scope: !9557)
!9565 = !DILocation(line: 482, column: 9, scope: !9557)
!9566 = !DILocation(line: 491, column: 5, scope: !9557)
!9567 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !9188, file: !9188, line: 501, type: !9389, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9568)
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "base", arg: 1, scope: !9567, file: !9188, line: 501, type: !9191)
!9570 = !DILocalVariable(name: "enable", arg: 2, scope: !9567, file: !9188, line: 501, type: !146)
!9571 = !DILocation(line: 0, scope: !9567)
!9572 = !DILocation(line: 0, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !9188, line: 503, column: 9)
!9574 = !DILocation(line: 503, column: 9, scope: !9567)
!9575 = !DILocation(line: 507, column: 1, scope: !9567)
!9576 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !9188, file: !9188, line: 516, type: !9389, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9577)
!9577 = !{!9578, !9579}
!9578 = !DILocalVariable(name: "base", arg: 1, scope: !9576, file: !9188, line: 516, type: !9191)
!9579 = !DILocalVariable(name: "enable", arg: 2, scope: !9576, file: !9188, line: 516, type: !146)
!9580 = !DILocation(line: 0, scope: !9576)
!9581 = !DILocation(line: 0, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9576, file: !9188, line: 518, column: 9)
!9583 = !DILocation(line: 518, column: 9, scope: !9576)
!9584 = !DILocation(line: 522, column: 1, scope: !9576)
!9585 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !9188, file: !9188, line: 534, type: !9389, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9586)
!9586 = !{!9587, !9588}
!9587 = !DILocalVariable(name: "base", arg: 1, scope: !9585, file: !9188, line: 534, type: !9191)
!9588 = !DILocalVariable(name: "enable", arg: 2, scope: !9585, file: !9188, line: 534, type: !146)
!9589 = !DILocation(line: 0, scope: !9585)
!9590 = !DILocation(line: 0, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9585, file: !9188, line: 536, column: 9)
!9592 = !DILocation(line: 536, column: 9, scope: !9585)
!9593 = !DILocation(line: 540, column: 1, scope: !9585)
!9594 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !9188, file: !9188, line: 550, type: !9431, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9595)
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "base", arg: 1, scope: !9594, file: !9188, line: 550, type: !9191)
!9597 = !DILocalVariable(name: "voteClock", arg: 2, scope: !9594, file: !9188, line: 550, type: !156)
!9598 = !DILocation(line: 0, scope: !9594)
!9599 = !DILocation(line: 552, column: 5, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !9188, line: 552, column: 5)
!9601 = distinct !DILexicalBlock(scope: !9594, file: !9188, line: 552, column: 5)
!9602 = !DILocation(line: 552, column: 5, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !9188, line: 552, column: 5)
!9604 = !DILocation(line: 0, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9594, file: !9188, line: 555, column: 9)
!9606 = !DILocation(line: 555, column: 9, scope: !9594)
!9607 = !DILocation(line: 559, column: 1, scope: !9594)
!9608 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !9188, file: !9188, line: 571, type: !9389, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9609)
!9609 = !{!9610, !9611}
!9610 = !DILocalVariable(name: "base", arg: 1, scope: !9608, file: !9188, line: 571, type: !9191)
!9611 = !DILocalVariable(name: "enable", arg: 2, scope: !9608, file: !9188, line: 571, type: !146)
!9612 = !DILocation(line: 0, scope: !9608)
!9613 = !DILocation(line: 0, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9608, file: !9188, line: 573, column: 9)
!9615 = !DILocation(line: 573, column: 9, scope: !9608)
!9616 = !DILocation(line: 577, column: 1, scope: !9608)
!9617 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !9188, file: !9188, line: 587, type: !9389, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9618)
!9618 = !{!9619, !9620}
!9619 = !DILocalVariable(name: "base", arg: 1, scope: !9617, file: !9188, line: 587, type: !9191)
!9620 = !DILocalVariable(name: "active", arg: 2, scope: !9617, file: !9188, line: 587, type: !146)
!9621 = !DILocation(line: 0, scope: !9617)
!9622 = !DILocation(line: 0, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9617, file: !9188, line: 589, column: 9)
!9624 = !DILocation(line: 589, column: 9, scope: !9617)
!9625 = !DILocation(line: 593, column: 1, scope: !9617)
!9626 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !9188, file: !9188, line: 602, type: !9389, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !9627)
!9627 = !{!9628, !9629}
!9628 = !DILocalVariable(name: "base", arg: 1, scope: !9626, file: !9188, line: 602, type: !9191)
!9629 = !DILocalVariable(name: "enable", arg: 2, scope: !9626, file: !9188, line: 602, type: !146)
!9630 = !DILocation(line: 0, scope: !9626)
!9631 = !DILocation(line: 0, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9626, file: !9188, line: 604, column: 9)
!9633 = !DILocation(line: 604, column: 9, scope: !9626)
!9634 = !DILocation(line: 608, column: 1, scope: !9626)
!9635 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !9636, file: !9636, line: 42, type: !9637, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9653)
!9636 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9637 = !DISubroutineType(types: !9638)
!9638 = !{!156, !9639}
!9639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9640, size: 32)
!9640 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !725, line: 20831, baseType: !9641)
!9641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 20820, size: 320, elements: !9642)
!9642 = !{!9643, !9644, !9645, !9646, !9647, !9648, !9649, !9650, !9651, !9652}
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !9641, file: !725, line: 20821, baseType: !729, size: 32)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !9641, file: !725, line: 20822, baseType: !729, size: 32, offset: 32)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !9641, file: !725, line: 20823, baseType: !729, size: 32, offset: 64)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !9641, file: !725, line: 20824, baseType: !729, size: 32, offset: 96)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !9641, file: !725, line: 20825, baseType: !729, size: 32, offset: 128)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !9641, file: !725, line: 20826, baseType: !729, size: 32, offset: 160)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !9641, file: !725, line: 20827, baseType: !729, size: 32, offset: 192)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9641, file: !725, line: 20828, baseType: !800, size: 32, offset: 224)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9641, file: !725, line: 20829, baseType: !800, size: 32, offset: 256)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !9641, file: !725, line: 20830, baseType: !800, size: 32, offset: 288)
!9653 = !{!9654, !9655, !9656, !9657, !9658}
!9654 = !DILocalVariable(name: "base", arg: 1, scope: !9635, file: !9636, line: 42, type: !9639)
!9655 = !DILocalVariable(name: "root", scope: !9635, file: !9636, line: 44, type: !156)
!9656 = !DILocalVariable(name: "hz", scope: !9635, file: !9636, line: 45, type: !156)
!9657 = !DILocalVariable(name: "pre", scope: !9635, file: !9636, line: 46, type: !156)
!9658 = !DILocalVariable(name: "post", scope: !9635, file: !9636, line: 46, type: !156)
!9659 = !DILocation(line: 0, scope: !9635)
!9660 = !DILocation(line: 46, column: 2, scope: !9635)
!9661 = !DILocation(line: 48, column: 10, scope: !9635)
!9662 = !DILocation(line: 48, column: 2, scope: !9635)
!9663 = !DILocation(line: 56, column: 3, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9635, file: !9636, line: 48, column: 26)
!9665 = !DILocation(line: 0, scope: !9664)
!9666 = !DILocation(line: 61, column: 2, scope: !9635)
!9667 = !DILocation(line: 66, column: 8, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9635, file: !9636, line: 61, column: 16)
!9669 = !DILocation(line: 67, column: 3, scope: !9668)
!9670 = !DILocation(line: 0, scope: !9668)
!9671 = !DILocation(line: 72, column: 15, scope: !9635)
!9672 = !DILocation(line: 72, column: 19, scope: !9635)
!9673 = !DILocation(line: 72, column: 12, scope: !9635)
!9674 = !DILocation(line: 72, column: 27, scope: !9635)
!9675 = !DILocation(line: 72, column: 32, scope: !9635)
!9676 = !DILocation(line: 72, column: 24, scope: !9635)
!9677 = !DILocation(line: 72, column: 2, scope: !9635)
!9678 = !DILocation(line: 73, column: 1, scope: !9635)
!9679 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !441, file: !441, line: 368, type: !9680, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!156, !2836, !156}
!9682 = !{!9683, !9684}
!9683 = !DILocalVariable(name: "base", arg: 1, scope: !9679, file: !441, line: 368, type: !2836)
!9684 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9679, file: !441, line: 368, type: !156)
!9685 = !DILocation(line: 0, scope: !9679)
!9686 = !DILocation(line: 370, column: 13, scope: !9679)
!9687 = !DILocation(line: 370, column: 58, scope: !9679)
!9688 = !DILocation(line: 370, column: 5, scope: !9679)
!9689 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !9636, file: !9636, line: 81, type: !9690, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9710)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!156, !9692}
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9693, size: 32)
!9693 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !725, line: 12462, baseType: !9694)
!9694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 12450, size: 544, elements: !9695)
!9695 = !{!9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9709}
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !9694, file: !725, line: 12451, baseType: !800, size: 32)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !9694, file: !725, line: 12452, baseType: !729, size: 32, offset: 32)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !9694, file: !725, line: 12453, baseType: !729, size: 32, offset: 64)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !9694, file: !725, line: 12454, baseType: !729, size: 32, offset: 96)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !9694, file: !725, line: 12455, baseType: !729, size: 32, offset: 128)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !9694, file: !725, line: 12456, baseType: !729, size: 32, offset: 160)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !9694, file: !725, line: 12457, baseType: !729, size: 32, offset: 192)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !9694, file: !725, line: 12458, baseType: !729, size: 32, offset: 224)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !9694, file: !725, line: 12459, baseType: !729, size: 32, offset: 256)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9694, file: !725, line: 12460, baseType: !9706, size: 224, offset: 288)
!9706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 224, elements: !9707)
!9707 = !{!9708}
!9708 = !DISubrange(count: 28)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !9694, file: !725, line: 12461, baseType: !729, size: 32, offset: 512)
!9710 = !{!9711, !9712, !9713, !9714, !9715}
!9711 = !DILocalVariable(name: "base", arg: 1, scope: !9689, file: !9636, line: 81, type: !9692)
!9712 = !DILocalVariable(name: "root", scope: !9689, file: !9636, line: 83, type: !156)
!9713 = !DILocalVariable(name: "hz", scope: !9689, file: !9636, line: 84, type: !156)
!9714 = !DILocalVariable(name: "pre", scope: !9689, file: !9636, line: 85, type: !156)
!9715 = !DILocalVariable(name: "post", scope: !9689, file: !9636, line: 85, type: !156)
!9716 = !DILocation(line: 0, scope: !9689)
!9717 = !DILocation(line: 85, column: 2, scope: !9689)
!9718 = !DILocation(line: 87, column: 10, scope: !9689)
!9719 = !DILocation(line: 87, column: 2, scope: !9689)
!9720 = !DILocation(line: 95, column: 3, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9689, file: !9636, line: 87, column: 26)
!9722 = !DILocation(line: 0, scope: !9721)
!9723 = !DILocation(line: 100, column: 2, scope: !9689)
!9724 = !DILocation(line: 105, column: 8, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9689, file: !9636, line: 100, column: 16)
!9726 = !DILocation(line: 106, column: 3, scope: !9725)
!9727 = !DILocation(line: 0, scope: !9725)
!9728 = !DILocation(line: 111, column: 15, scope: !9689)
!9729 = !DILocation(line: 111, column: 19, scope: !9689)
!9730 = !DILocation(line: 111, column: 12, scope: !9689)
!9731 = !DILocation(line: 111, column: 27, scope: !9689)
!9732 = !DILocation(line: 111, column: 32, scope: !9689)
!9733 = !DILocation(line: 111, column: 24, scope: !9689)
!9734 = !DILocation(line: 111, column: 2, scope: !9689)
!9735 = !DILocation(line: 112, column: 1, scope: !9689)
!9736 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !9636, file: !9636, line: 120, type: !9737, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9781)
!9737 = !DISubroutineType(types: !9738)
!9738 = !{!156, !9739}
!9739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9740, size: 32)
!9740 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !725, line: 3477, baseType: !9741)
!9741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 3446, size: 20256, elements: !9742)
!9742 = !{!9743, !9744, !9745, !9746, !9748, !9749, !9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9758, !9759, !9761, !9762, !9763, !9764, !9765, !9775, !9777, !9779, !9780}
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !9741, file: !725, line: 3447, baseType: !729, size: 32)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !9741, file: !725, line: 3448, baseType: !729, size: 32, offset: 32)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !9741, file: !725, line: 3449, baseType: !729, size: 32, offset: 64)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9741, file: !725, line: 3450, baseType: !9747, size: 32, offset: 96)
!9747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 32, elements: !1650)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !9741, file: !725, line: 3451, baseType: !729, size: 32, offset: 128)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !9741, file: !725, line: 3452, baseType: !729, size: 32, offset: 160)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !9741, file: !725, line: 3453, baseType: !729, size: 32, offset: 192)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !9741, file: !725, line: 3454, baseType: !729, size: 32, offset: 224)
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !9741, file: !725, line: 3455, baseType: !729, size: 32, offset: 256)
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !9741, file: !725, line: 3456, baseType: !729, size: 32, offset: 288)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !9741, file: !725, line: 3457, baseType: !729, size: 32, offset: 320)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !9741, file: !725, line: 3458, baseType: !729, size: 32, offset: 352)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !9741, file: !725, line: 3459, baseType: !729, size: 32, offset: 384)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !9741, file: !725, line: 3460, baseType: !729, size: 32, offset: 416)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !9741, file: !725, line: 3461, baseType: !800, size: 32, offset: 448)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9741, file: !725, line: 3462, baseType: !9760, size: 64, offset: 480)
!9760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !1596)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !9741, file: !725, line: 3463, baseType: !800, size: 32, offset: 544)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !9741, file: !725, line: 3464, baseType: !729, size: 32, offset: 576)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !9741, file: !725, line: 3465, baseType: !800, size: 32, offset: 608)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9741, file: !725, line: 3466, baseType: !786, size: 384, offset: 640)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !9741, file: !725, line: 3472, baseType: !9766, size: 8192, offset: 1024)
!9766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9767, size: 8192, elements: !9773)
!9767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9741, file: !725, line: 3467, size: 128, elements: !9768)
!9768 = !{!9769, !9770, !9771, !9772}
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !9767, file: !725, line: 3468, baseType: !729, size: 32)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !9767, file: !725, line: 3469, baseType: !729, size: 32, offset: 32)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !9767, file: !725, line: 3470, baseType: !729, size: 32, offset: 64)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !9767, file: !725, line: 3471, baseType: !729, size: 32, offset: 96)
!9773 = !{!9774}
!9774 = !DISubrange(count: 64)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9741, file: !725, line: 3473, baseType: !9776, size: 8192, offset: 9216)
!9776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 8192, elements: !377)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !9741, file: !725, line: 3474, baseType: !9778, size: 2048, offset: 17408)
!9778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 2048, elements: !9773)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !9741, file: !725, line: 3475, baseType: !2737, size: 768, offset: 19456)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !9741, file: !725, line: 3476, baseType: !729, size: 32, offset: 20224)
!9781 = !{!9782, !9783, !9784, !9785, !9786}
!9782 = !DILocalVariable(name: "base", arg: 1, scope: !9736, file: !9636, line: 120, type: !9739)
!9783 = !DILocalVariable(name: "root", scope: !9736, file: !9636, line: 122, type: !156)
!9784 = !DILocalVariable(name: "hz", scope: !9736, file: !9636, line: 123, type: !156)
!9785 = !DILocalVariable(name: "pre", scope: !9736, file: !9636, line: 124, type: !156)
!9786 = !DILocalVariable(name: "post", scope: !9736, file: !9636, line: 124, type: !156)
!9787 = !DILocation(line: 0, scope: !9736)
!9788 = !DILocation(line: 124, column: 2, scope: !9736)
!9789 = !DILocation(line: 126, column: 10, scope: !9736)
!9790 = !DILocation(line: 126, column: 2, scope: !9736)
!9791 = !DILocation(line: 134, column: 3, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9736, file: !9636, line: 126, column: 26)
!9793 = !DILocation(line: 0, scope: !9792)
!9794 = !DILocation(line: 139, column: 2, scope: !9736)
!9795 = !DILocation(line: 144, column: 8, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9736, file: !9636, line: 139, column: 16)
!9797 = !DILocation(line: 144, column: 45, scope: !9796)
!9798 = !DILocation(line: 145, column: 3, scope: !9796)
!9799 = !DILocation(line: 147, column: 8, scope: !9796)
!9800 = !DILocation(line: 148, column: 3, scope: !9796)
!9801 = !DILocation(line: 0, scope: !9796)
!9802 = !DILocation(line: 153, column: 15, scope: !9736)
!9803 = !DILocation(line: 153, column: 19, scope: !9736)
!9804 = !DILocation(line: 153, column: 12, scope: !9736)
!9805 = !DILocation(line: 153, column: 27, scope: !9736)
!9806 = !DILocation(line: 153, column: 32, scope: !9736)
!9807 = !DILocation(line: 153, column: 24, scope: !9736)
!9808 = !DILocation(line: 153, column: 2, scope: !9736)
!9809 = !DILocation(line: 154, column: 1, scope: !9736)
!9810 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !9636, file: !9636, line: 162, type: !9811, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9827)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!156, !9813}
!9813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9814, size: 32)
!9814 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !725, line: 21082, baseType: !9815)
!9815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 21072, size: 144, elements: !9816)
!9816 = !{!9817, !9818, !9820, !9821, !9822, !9823, !9824, !9825, !9826}
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !9815, file: !725, line: 21073, baseType: !843, size: 16)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9815, file: !725, line: 21074, baseType: !9819, size: 16, offset: 16)
!9819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 16, elements: !256)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !9815, file: !725, line: 21075, baseType: !843, size: 16, offset: 32)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9815, file: !725, line: 21076, baseType: !9819, size: 16, offset: 48)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !9815, file: !725, line: 21077, baseType: !843, size: 16, offset: 64)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9815, file: !725, line: 21078, baseType: !9819, size: 16, offset: 80)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !9815, file: !725, line: 21079, baseType: !843, size: 16, offset: 96)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !9815, file: !725, line: 21080, baseType: !9819, size: 16, offset: 112)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !9815, file: !725, line: 21081, baseType: !843, size: 16, offset: 128)
!9827 = !{!9828, !9829, !9830, !9831, !9832}
!9828 = !DILocalVariable(name: "base", arg: 1, scope: !9810, file: !9636, line: 162, type: !9813)
!9829 = !DILocalVariable(name: "root", scope: !9810, file: !9636, line: 164, type: !156)
!9830 = !DILocalVariable(name: "hz", scope: !9810, file: !9636, line: 165, type: !156)
!9831 = !DILocalVariable(name: "pre", scope: !9810, file: !9636, line: 166, type: !156)
!9832 = !DILocalVariable(name: "post", scope: !9810, file: !9636, line: 166, type: !156)
!9833 = !DILocation(line: 0, scope: !9810)
!9834 = !DILocation(line: 166, column: 2, scope: !9810)
!9835 = !DILocation(line: 168, column: 10, scope: !9810)
!9836 = !DILocation(line: 168, column: 2, scope: !9810)
!9837 = !DILocation(line: 0, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9810, file: !9636, line: 168, column: 26)
!9839 = !DILocation(line: 189, column: 2, scope: !9810)
!9840 = !DILocation(line: 194, column: 8, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9810, file: !9636, line: 189, column: 16)
!9842 = !DILocation(line: 194, column: 45, scope: !9841)
!9843 = !DILocation(line: 195, column: 3, scope: !9841)
!9844 = !DILocation(line: 0, scope: !9841)
!9845 = !DILocation(line: 200, column: 15, scope: !9810)
!9846 = !DILocation(line: 200, column: 19, scope: !9810)
!9847 = !DILocation(line: 200, column: 12, scope: !9810)
!9848 = !DILocation(line: 200, column: 27, scope: !9810)
!9849 = !DILocation(line: 200, column: 32, scope: !9810)
!9850 = !DILocation(line: 200, column: 24, scope: !9810)
!9851 = !DILocation(line: 200, column: 2, scope: !9810)
!9852 = !DILocation(line: 201, column: 1, scope: !9810)
!9853 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !9636, file: !9636, line: 209, type: !9854, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !9879)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!156, !9856}
!9856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9857, size: 32)
!9857 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !725, line: 41342, baseType: !9858)
!9858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !725, line: 41322, size: 1504, elements: !9859)
!9859 = !{!9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878}
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9858, file: !725, line: 41323, baseType: !800, size: 32)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9858, file: !725, line: 41324, baseType: !1330, size: 480, offset: 32)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9858, file: !725, line: 41325, baseType: !729, size: 32, offset: 512)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9858, file: !725, line: 41326, baseType: !1330, size: 480, offset: 544)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9858, file: !725, line: 41327, baseType: !729, size: 32, offset: 1024)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9858, file: !725, line: 41328, baseType: !729, size: 32, offset: 1056)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9858, file: !725, line: 41329, baseType: !729, size: 32, offset: 1088)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9858, file: !725, line: 41330, baseType: !729, size: 32, offset: 1120)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9858, file: !725, line: 41331, baseType: !729, size: 32, offset: 1152)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9858, file: !725, line: 41332, baseType: !729, size: 32, offset: 1184)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9858, file: !725, line: 41333, baseType: !729, size: 32, offset: 1216)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9858, file: !725, line: 41334, baseType: !729, size: 32, offset: 1248)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9858, file: !725, line: 41335, baseType: !729, size: 32, offset: 1280)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9858, file: !725, line: 41336, baseType: !729, size: 32, offset: 1312)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9858, file: !725, line: 41337, baseType: !729, size: 32, offset: 1344)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9858, file: !725, line: 41338, baseType: !800, size: 32, offset: 1376)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9858, file: !725, line: 41339, baseType: !729, size: 32, offset: 1408)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9858, file: !725, line: 41340, baseType: !729, size: 32, offset: 1440)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9858, file: !725, line: 41341, baseType: !729, size: 32, offset: 1472)
!9879 = !{!9880, !9881, !9882, !9883, !9884}
!9880 = !DILocalVariable(name: "base", arg: 1, scope: !9853, file: !9636, line: 209, type: !9856)
!9881 = !DILocalVariable(name: "root", scope: !9853, file: !9636, line: 211, type: !156)
!9882 = !DILocalVariable(name: "hz", scope: !9853, file: !9636, line: 212, type: !156)
!9883 = !DILocalVariable(name: "pre", scope: !9853, file: !9636, line: 213, type: !156)
!9884 = !DILocalVariable(name: "post", scope: !9853, file: !9636, line: 213, type: !156)
!9885 = !DILocation(line: 0, scope: !9853)
!9886 = !DILocation(line: 213, column: 2, scope: !9853)
!9887 = !DILocation(line: 215, column: 10, scope: !9853)
!9888 = !DILocation(line: 215, column: 2, scope: !9853)
!9889 = !DILocation(line: 223, column: 3, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9853, file: !9636, line: 215, column: 26)
!9891 = !DILocation(line: 227, column: 3, scope: !9890)
!9892 = !DILocation(line: 231, column: 3, scope: !9890)
!9893 = !DILocation(line: 235, column: 3, scope: !9890)
!9894 = !DILocation(line: 239, column: 3, scope: !9890)
!9895 = !DILocation(line: 243, column: 3, scope: !9890)
!9896 = !DILocation(line: 0, scope: !9890)
!9897 = !DILocation(line: 248, column: 2, scope: !9853)
!9898 = !DILocation(line: 253, column: 8, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9853, file: !9636, line: 248, column: 16)
!9900 = !DILocation(line: 253, column: 45, scope: !9899)
!9901 = !DILocation(line: 254, column: 3, scope: !9899)
!9902 = !DILocation(line: 256, column: 8, scope: !9899)
!9903 = !DILocation(line: 257, column: 3, scope: !9899)
!9904 = !DILocation(line: 0, scope: !9899)
!9905 = !DILocation(line: 262, column: 15, scope: !9853)
!9906 = !DILocation(line: 262, column: 19, scope: !9853)
!9907 = !DILocation(line: 262, column: 12, scope: !9853)
!9908 = !DILocation(line: 262, column: 27, scope: !9853)
!9909 = !DILocation(line: 262, column: 32, scope: !9853)
!9910 = !DILocation(line: 262, column: 24, scope: !9853)
!9911 = !DILocation(line: 262, column: 2, scope: !9853)
!9912 = !DILocation(line: 263, column: 1, scope: !9853)
!9913 = distinct !DISubprogram(name: "z_device_state_init", scope: !9914, file: !9914, line: 23, type: !359, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !9915)
!9914 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9915 = !{!9916}
!9916 = !DILocalVariable(name: "dev", scope: !9913, file: !9914, line: 25, type: !9917)
!9917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9918, size: 32)
!9918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9919)
!9919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !9920)
!9920 = !{!9921, !9922, !9923, !9924, !9930, !9931}
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9919, file: !130, line: 380, baseType: !133, size: 32)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !9919, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !9919, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9919, file: !130, line: 386, baseType: !9925, size: 32, offset: 96)
!9925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9926, size: 32)
!9926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !9927)
!9927 = !{!9928, !9929}
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !9926, file: !130, line: 359, baseType: !143, size: 8)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !9926, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9919, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !9919, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!9932 = !DILocation(line: 0, scope: !9913)
!9933 = !DILocation(line: 31, column: 1, scope: !9913)
!9934 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !9914, file: !9914, line: 33, type: !9935, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !9937)
!9935 = !DISubroutineType(types: !9936)
!9936 = !{!9917, !133}
!9937 = !{!9938, !9939}
!9938 = !DILocalVariable(name: "name", arg: 1, scope: !9934, file: !9914, line: 33, type: !133)
!9939 = !DILocalVariable(name: "dev", scope: !9934, file: !9914, line: 35, type: !9917)
!9940 = !DILocation(line: 0, scope: !9934)
!9941 = !DILocation(line: 40, column: 12, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9934, file: !9914, line: 40, column: 6)
!9943 = !DILocation(line: 40, column: 21, scope: !9942)
!9944 = !DILocation(line: 40, column: 25, scope: !9942)
!9945 = !DILocation(line: 40, column: 33, scope: !9942)
!9946 = !DILocation(line: 40, column: 6, scope: !9934)
!9947 = !DILocation(line: 55, column: 2, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9934, file: !9914, line: 55, column: 2)
!9949 = !DILocation(line: 50, column: 7, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !9914, line: 50, column: 7)
!9951 = distinct !DILexicalBlock(scope: !9952, file: !9914, line: 49, column: 57)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !9914, line: 49, column: 2)
!9953 = distinct !DILexicalBlock(scope: !9934, file: !9914, line: 49, column: 2)
!9954 = !DILocation(line: 50, column: 30, scope: !9950)
!9955 = !DILocation(line: 50, column: 39, scope: !9950)
!9956 = !DILocation(line: 50, column: 44, scope: !9950)
!9957 = !DILocation(line: 50, column: 7, scope: !9951)
!9958 = !DILocation(line: 49, column: 53, scope: !9952)
!9959 = !DILocation(line: 49, column: 33, scope: !9952)
!9960 = !DILocation(line: 49, column: 2, scope: !9953)
!9961 = distinct !{!9961, !9960, !9962}
!9962 = !DILocation(line: 53, column: 2, scope: !9953)
!9963 = !DILocation(line: 56, column: 7, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !9914, line: 56, column: 7)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !9914, line: 55, column: 57)
!9966 = distinct !DILexicalBlock(scope: !9948, file: !9914, line: 55, column: 2)
!9967 = !DILocation(line: 56, column: 30, scope: !9964)
!9968 = !DILocation(line: 56, column: 52, scope: !9964)
!9969 = !DILocation(line: 56, column: 34, scope: !9964)
!9970 = !DILocation(line: 56, column: 58, scope: !9964)
!9971 = !DILocation(line: 56, column: 7, scope: !9965)
!9972 = !DILocation(line: 55, column: 53, scope: !9966)
!9973 = !DILocation(line: 55, column: 33, scope: !9966)
!9974 = distinct !{!9974, !9947, !9975}
!9975 = !DILocation(line: 59, column: 2, scope: !9948)
!9976 = !DILocation(line: 62, column: 1, scope: !9934)
!9977 = distinct !DISubprogram(name: "z_device_is_ready", scope: !9914, file: !9914, line: 93, type: !9978, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!146, !9917}
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "dev", arg: 1, scope: !9977, file: !9914, line: 93, type: !9917)
!9982 = !DILocation(line: 0, scope: !9977)
!9983 = !DILocation(line: 99, column: 10, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9977, file: !9914, line: 99, column: 6)
!9985 = !DILocation(line: 99, column: 6, scope: !9977)
!9986 = !DILocation(line: 103, column: 14, scope: !9977)
!9987 = !DILocation(line: 103, column: 21, scope: !9977)
!9988 = !DILocation(line: 103, column: 33, scope: !9977)
!9989 = !DILocation(line: 103, column: 49, scope: !9977)
!9990 = !DILocation(line: 103, column: 58, scope: !9977)
!9991 = !DILocation(line: 104, column: 1, scope: !9977)
!9992 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !9914, file: !9914, line: 87, type: !9993, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !9996)
!9993 = !DISubroutineType(types: !9994)
!9994 = !{!323, !9995}
!9995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9917, size: 32)
!9996 = !{!9997}
!9997 = !DILocalVariable(name: "devices", arg: 1, scope: !9992, file: !9914, line: 87, type: !9995)
!9998 = !DILocation(line: 0, scope: !9992)
!9999 = !DILocation(line: 89, column: 11, scope: !9992)
!10000 = !DILocation(line: 90, column: 2, scope: !9992)
!10001 = distinct !DISubprogram(name: "device_required_foreach", scope: !9914, file: !9914, line: 125, type: !10002, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10008)
!10002 = !DISubroutineType(types: !10003)
!10003 = !{!118, !9917, !10004, !117}
!10004 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !130, line: 471, baseType: !10005)
!10005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10006, size: 32)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!118, !9917, !117}
!10008 = !{!10009, !10010, !10011, !10012, !10013}
!10009 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !9914, line: 125, type: !9917)
!10010 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10001, file: !9914, line: 126, type: !10004)
!10011 = !DILocalVariable(name: "context", arg: 3, scope: !10001, file: !9914, line: 127, type: !117)
!10012 = !DILocalVariable(name: "handle_count", scope: !10001, file: !9914, line: 129, type: !323)
!10013 = !DILocalVariable(name: "handles", scope: !10001, file: !9914, line: 130, type: !149)
!10014 = !DILocation(line: 0, scope: !10001)
!10015 = !DILocation(line: 129, column: 2, scope: !10001)
!10016 = !DILocation(line: 129, column: 9, scope: !10001)
!10017 = !DILocation(line: 130, column: 35, scope: !10001)
!10018 = !DILocation(line: 132, column: 33, scope: !10001)
!10019 = !DILocation(line: 132, column: 9, scope: !10001)
!10020 = !DILocation(line: 133, column: 1, scope: !10001)
!10021 = !DILocation(line: 132, column: 2, scope: !10001)
!10022 = distinct !DISubprogram(name: "device_required_handles_get", scope: !130, file: !130, line: 493, type: !10023, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10025)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{!149, !9917, !2399}
!10025 = !{!10026, !10027, !10028, !10029}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10022, file: !130, line: 493, type: !9917)
!10027 = !DILocalVariable(name: "count", arg: 2, scope: !10022, file: !130, line: 493, type: !2399)
!10028 = !DILocalVariable(name: "rv", scope: !10022, file: !130, line: 495, type: !149)
!10029 = !DILocalVariable(name: "i", scope: !10030, file: !130, line: 498, type: !323)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !130, line: 497, column: 18)
!10031 = distinct !DILexicalBlock(scope: !10022, file: !130, line: 497, column: 6)
!10032 = !DILocation(line: 0, scope: !10022)
!10033 = !DILocation(line: 495, column: 35, scope: !10022)
!10034 = !DILocation(line: 497, column: 9, scope: !10031)
!10035 = !DILocation(line: 497, column: 6, scope: !10022)
!10036 = !DILocation(line: 0, scope: !10030)
!10037 = !DILocation(line: 500, column: 11, scope: !10030)
!10038 = !DILocation(line: 500, column: 40, scope: !10030)
!10039 = !DILocation(line: 502, column: 4, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10030, file: !130, line: 501, column: 40)
!10041 = distinct !{!10041, !10042, !10043}
!10042 = !DILocation(line: 500, column: 3, scope: !10030)
!10043 = !DILocation(line: 503, column: 3, scope: !10030)
!10044 = !DILocation(line: 504, column: 10, scope: !10030)
!10045 = !DILocation(line: 505, column: 2, scope: !10030)
!10046 = !DILocation(line: 507, column: 2, scope: !10022)
!10047 = distinct !DISubprogram(name: "device_visitor", scope: !9914, file: !9914, line: 106, type: !10048, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!118, !149, !323, !10004, !117}
!10050 = !{!10051, !10052, !10053, !10054, !10055, !10057, !10060, !10061}
!10051 = !DILocalVariable(name: "handles", arg: 1, scope: !10047, file: !9914, line: 106, type: !149)
!10052 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10047, file: !9914, line: 107, type: !323)
!10053 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10047, file: !9914, line: 108, type: !10004)
!10054 = !DILocalVariable(name: "context", arg: 4, scope: !10047, file: !9914, line: 109, type: !117)
!10055 = !DILocalVariable(name: "i", scope: !10056, file: !9914, line: 112, type: !323)
!10056 = distinct !DILexicalBlock(scope: !10047, file: !9914, line: 112, column: 2)
!10057 = !DILocalVariable(name: "dh", scope: !10058, file: !9914, line: 113, type: !151)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !9914, line: 112, column: 44)
!10059 = distinct !DILexicalBlock(scope: !10056, file: !9914, line: 112, column: 2)
!10060 = !DILocalVariable(name: "rdev", scope: !10058, file: !9914, line: 114, type: !9917)
!10061 = !DILocalVariable(name: "rc", scope: !10058, file: !9914, line: 115, type: !118)
!10062 = !DILocation(line: 0, scope: !10047)
!10063 = !DILocation(line: 0, scope: !10056)
!10064 = !DILocation(line: 112, column: 23, scope: !10059)
!10065 = !DILocation(line: 112, column: 2, scope: !10056)
!10066 = distinct !{!10066, !10065, !10067}
!10067 = !DILocation(line: 120, column: 2, scope: !10056)
!10068 = !DILocation(line: 113, column: 24, scope: !10058)
!10069 = !DILocation(line: 0, scope: !10058)
!10070 = !DILocation(line: 114, column: 31, scope: !10058)
!10071 = !DILocation(line: 115, column: 12, scope: !10058)
!10072 = !DILocation(line: 117, column: 10, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10058, file: !9914, line: 117, column: 7)
!10074 = !DILocation(line: 112, column: 39, scope: !10059)
!10075 = !DILocation(line: 123, column: 1, scope: !10047)
!10076 = distinct !DISubprogram(name: "device_from_handle", scope: !130, file: !130, line: 439, type: !10077, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!9917, !151}
!10079 = !{!10080, !10081, !10082}
!10080 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10076, file: !130, line: 439, type: !151)
!10081 = !DILocalVariable(name: "dev", scope: !10076, file: !130, line: 443, type: !9917)
!10082 = !DILocalVariable(name: "numdev", scope: !10076, file: !130, line: 444, type: !323)
!10083 = !DILocation(line: 0, scope: !10076)
!10084 = !DILocation(line: 446, column: 7, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10076, file: !130, line: 446, column: 6)
!10086 = !DILocation(line: 446, column: 18, scope: !10085)
!10087 = !DILocation(line: 446, column: 23, scope: !10085)
!10088 = !DILocation(line: 450, column: 2, scope: !10076)
!10089 = distinct !DISubprogram(name: "device_supported_foreach", scope: !9914, file: !9914, line: 135, type: !10002, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10090)
!10090 = !{!10091, !10092, !10093, !10094, !10095}
!10091 = !DILocalVariable(name: "dev", arg: 1, scope: !10089, file: !9914, line: 135, type: !9917)
!10092 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10089, file: !9914, line: 136, type: !10004)
!10093 = !DILocalVariable(name: "context", arg: 3, scope: !10089, file: !9914, line: 137, type: !117)
!10094 = !DILocalVariable(name: "handle_count", scope: !10089, file: !9914, line: 139, type: !323)
!10095 = !DILocalVariable(name: "handles", scope: !10089, file: !9914, line: 140, type: !149)
!10096 = !DILocation(line: 0, scope: !10089)
!10097 = !DILocation(line: 139, column: 2, scope: !10089)
!10098 = !DILocation(line: 139, column: 9, scope: !10089)
!10099 = !DILocation(line: 140, column: 35, scope: !10089)
!10100 = !DILocation(line: 142, column: 33, scope: !10089)
!10101 = !DILocation(line: 142, column: 9, scope: !10089)
!10102 = !DILocation(line: 143, column: 1, scope: !10089)
!10103 = !DILocation(line: 142, column: 2, scope: !10089)
!10104 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !130, file: !130, line: 573, type: !10023, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2947, retainedNodes: !10105)
!10105 = !{!10106, !10107, !10108, !10109, !10110}
!10106 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !130, line: 573, type: !9917)
!10107 = !DILocalVariable(name: "count", arg: 2, scope: !10104, file: !130, line: 573, type: !2399)
!10108 = !DILocalVariable(name: "rv", scope: !10104, file: !130, line: 575, type: !149)
!10109 = !DILocalVariable(name: "region", scope: !10104, file: !130, line: 576, type: !323)
!10110 = !DILocalVariable(name: "i", scope: !10104, file: !130, line: 577, type: !323)
!10111 = !DILocation(line: 0, scope: !10104)
!10112 = !DILocation(line: 575, column: 35, scope: !10104)
!10113 = !DILocation(line: 579, column: 9, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10104, file: !130, line: 579, column: 6)
!10115 = !DILocation(line: 579, column: 6, scope: !10104)
!10116 = !DILocation(line: 582, column: 8, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !130, line: 582, column: 8)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !130, line: 581, column: 23)
!10119 = distinct !DILexicalBlock(scope: !10114, file: !130, line: 579, column: 18)
!10120 = !DILocation(line: 582, column: 12, scope: !10117)
!10121 = !DILocation(line: 585, column: 6, scope: !10118)
!10122 = !DILocation(line: 0, scope: !10119)
!10123 = !DILocation(line: 581, column: 17, scope: !10119)
!10124 = !DILocation(line: 581, column: 3, scope: !10119)
!10125 = !DILocation(line: 588, column: 10, scope: !10119)
!10126 = !DILocation(line: 588, column: 16, scope: !10119)
!10127 = !DILocation(line: 589, column: 4, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10119, file: !130, line: 588, column: 39)
!10129 = !DILocation(line: 588, column: 3, scope: !10119)
!10130 = distinct !{!10130, !10129, !10131}
!10131 = !DILocation(line: 590, column: 3, scope: !10119)
!10132 = !DILocation(line: 591, column: 10, scope: !10119)
!10133 = !DILocation(line: 592, column: 2, scope: !10119)
!10134 = !DILocation(line: 575, column: 25, scope: !10104)
!10135 = !DILocation(line: 594, column: 2, scope: !10104)
!10136 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1732, file: !1732, line: 49, type: !10137, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1729, retainedNodes: !1933)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!2392}
!10139 = !DILocation(line: 51, column: 10, scope: !10136)
!10140 = !DILocation(line: 51, column: 20, scope: !10136)
!10141 = !DILocation(line: 51, column: 2, scope: !10136)
!10142 = distinct !DISubprogram(name: "coredump", scope: !2954, file: !2954, line: 209, type: !10143, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10285)
!10143 = !DISubroutineType(types: !10144)
!10144 = !{null, !32, !10145, !10189}
!10145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10146, size: 32)
!10146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10147)
!10147 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2527, line: 141, baseType: !10148)
!10148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2527, line: 97, size: 256, elements: !10149)
!10149 = !{!10150}
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10148, file: !2527, line: 107, baseType: !10151, size: 256)
!10151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2527, line: 98, size: 256, elements: !10152)
!10152 = !{!10153, !10158, !10163, !10168, !10173, !10178, !10183, !10188}
!10153 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 99, baseType: !10154, size: 32)
!10154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 99, size: 32, elements: !10155)
!10155 = !{!10156, !10157}
!10156 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10154, file: !2527, line: 99, baseType: !156, size: 32)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10154, file: !2527, line: 99, baseType: !156, size: 32)
!10158 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 100, baseType: !10159, size: 32, offset: 32)
!10159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 100, size: 32, elements: !10160)
!10160 = !{!10161, !10162}
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10159, file: !2527, line: 100, baseType: !156, size: 32)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10159, file: !2527, line: 100, baseType: !156, size: 32)
!10163 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 101, baseType: !10164, size: 32, offset: 64)
!10164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 101, size: 32, elements: !10165)
!10165 = !{!10166, !10167}
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10164, file: !2527, line: 101, baseType: !156, size: 32)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10164, file: !2527, line: 101, baseType: !156, size: 32)
!10168 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 102, baseType: !10169, size: 32, offset: 96)
!10169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 102, size: 32, elements: !10170)
!10170 = !{!10171, !10172}
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10169, file: !2527, line: 102, baseType: !156, size: 32)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10169, file: !2527, line: 102, baseType: !156, size: 32)
!10173 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 103, baseType: !10174, size: 32, offset: 128)
!10174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 103, size: 32, elements: !10175)
!10175 = !{!10176, !10177}
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10174, file: !2527, line: 103, baseType: !156, size: 32)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10174, file: !2527, line: 103, baseType: !156, size: 32)
!10178 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 104, baseType: !10179, size: 32, offset: 160)
!10179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 104, size: 32, elements: !10180)
!10180 = !{!10181, !10182}
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10179, file: !2527, line: 104, baseType: !156, size: 32)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10179, file: !2527, line: 104, baseType: !156, size: 32)
!10183 = !DIDerivedType(tag: DW_TAG_member, scope: !10151, file: !2527, line: 105, baseType: !10184, size: 32, offset: 192)
!10184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10151, file: !2527, line: 105, size: 32, elements: !10185)
!10185 = !{!10186, !10187}
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10184, file: !2527, line: 105, baseType: !156, size: 32)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10184, file: !2527, line: 105, baseType: !156, size: 32)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10151, file: !2527, line: 106, baseType: !156, size: 32, offset: 224)
!10189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10190, size: 32)
!10190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !10191)
!10191 = !{!10192, !10250, !10262, !10263, !10264, !10265, !10280}
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10190, file: !225, line: 247, baseType: !10193, size: 384)
!10193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !10194)
!10194 = !{!10195, !10219, !10226, !10227, !10228, !10237, !10238, !10239}
!10195 = !DIDerivedType(tag: DW_TAG_member, scope: !10193, file: !225, line: 60, baseType: !10196, size: 64)
!10196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10193, file: !225, line: 60, size: 64, elements: !10197)
!10197 = !{!10198, !10213}
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10196, file: !225, line: 61, baseType: !10199, size: 64)
!10199 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !10200)
!10200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !10201)
!10201 = !{!10202, !10208}
!10202 = !DIDerivedType(tag: DW_TAG_member, scope: !10200, file: !235, line: 38, baseType: !10203, size: 32)
!10203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10200, file: !235, line: 38, size: 32, elements: !10204)
!10204 = !{!10205, !10207}
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10203, file: !235, line: 39, baseType: !10206, size: 32)
!10206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10200, size: 32)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10203, file: !235, line: 40, baseType: !10206, size: 32)
!10208 = !DIDerivedType(tag: DW_TAG_member, scope: !10200, file: !235, line: 42, baseType: !10209, size: 32, offset: 32)
!10209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10200, file: !235, line: 42, size: 32, elements: !10210)
!10210 = !{!10211, !10212}
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10209, file: !235, line: 43, baseType: !10206, size: 32)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10209, file: !235, line: 44, baseType: !10206, size: 32)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10196, file: !225, line: 62, baseType: !10214, size: 64)
!10214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !10215)
!10215 = !{!10216}
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10214, file: !251, line: 50, baseType: !10217, size: 64)
!10217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10218, size: 64, elements: !256)
!10218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10214, size: 32)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10193, file: !225, line: 68, baseType: !10220, size: 32, offset: 64)
!10220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10221, size: 32)
!10221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !10222)
!10222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !10223)
!10223 = !{!10224}
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10222, file: !261, line: 232, baseType: !10225, size: 64)
!10225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !10200)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10193, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10193, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!10228 = !DIDerivedType(tag: DW_TAG_member, scope: !10193, file: !225, line: 90, baseType: !10229, size: 16, offset: 112)
!10229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10193, file: !225, line: 90, size: 16, elements: !10230)
!10230 = !{!10231, !10236}
!10231 = !DIDerivedType(tag: DW_TAG_member, scope: !10229, file: !225, line: 91, baseType: !10232, size: 16)
!10232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10229, file: !225, line: 91, size: 16, elements: !10233)
!10233 = !{!10234, !10235}
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10232, file: !225, line: 96, baseType: !275, size: 8)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10232, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10229, file: !225, line: 100, baseType: !279, size: 16)
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10193, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10193, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10193, file: !225, line: 131, baseType: !10240, size: 192, offset: 192)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !10241)
!10241 = !{!10242, !10243, !10249}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10240, file: !261, line: 245, baseType: !10199, size: 64)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10240, file: !261, line: 246, baseType: !10244, size: 32, offset: 64)
!10244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !10245)
!10245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10246, size: 32)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{null, !10248}
!10248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10240, size: 32)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10240, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10190, file: !225, line: 250, baseType: !10251, size: 288, offset: 384)
!10251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !10252)
!10252 = !{!10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10251, file: !296, line: 26, baseType: !156, size: 32)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10251, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10251, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10251, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10251, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10251, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10251, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10251, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10251, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10190, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10190, file: !225, line: 256, baseType: !10221, size: 64, offset: 704)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10190, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10190, file: !225, line: 325, baseType: !10266, size: 32, offset: 800)
!10266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10267, size: 32)
!10267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !10268)
!10268 = !{!10269, !10275, !10276}
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10267, file: !220, line: 5074, baseType: !10270, size: 96)
!10270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !10271)
!10271 = !{!10272, !10273, !10274}
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10270, file: !316, line: 57, baseType: !319, size: 32)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10270, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10270, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10267, file: !220, line: 5075, baseType: !10221, size: 64, offset: 96)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10267, file: !220, line: 5076, baseType: !10277, size: 32, offset: 160)
!10277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !10278)
!10278 = !{!10279}
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10277, file: !328, line: 52, baseType: !22, size: 32)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10190, file: !225, line: 343, baseType: !10281, size: 64, offset: 832)
!10281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !10282)
!10282 = !{!10283, !10284}
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10281, file: !296, line: 63, baseType: !156, size: 32)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10281, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!10285 = !{!10286, !10287, !10288}
!10286 = !DILocalVariable(name: "reason", arg: 1, scope: !10142, file: !2954, line: 209, type: !32)
!10287 = !DILocalVariable(name: "esf", arg: 2, scope: !10142, file: !2954, line: 209, type: !10145)
!10288 = !DILocalVariable(name: "thread", arg: 3, scope: !10142, file: !2954, line: 210, type: !10189)
!10289 = !DILocation(line: 0, scope: !10142)
!10290 = !DILocation(line: 212, column: 1, scope: !10142)
!10291 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2954, file: !2954, line: 214, type: !10292, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{null, !22, !22}
!10294 = !{!10295, !10296}
!10295 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10291, file: !2954, line: 214, type: !22)
!10296 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10291, file: !2954, line: 214, type: !22)
!10297 = !DILocation(line: 0, scope: !10291)
!10298 = !DILocation(line: 216, column: 1, scope: !10291)
!10299 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2954, file: !2954, line: 218, type: !10300, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10302)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{null, !940, !323}
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "buf", arg: 1, scope: !10299, file: !2954, line: 218, type: !940)
!10304 = !DILocalVariable(name: "buflen", arg: 2, scope: !10299, file: !2954, line: 218, type: !323)
!10305 = !DILocation(line: 0, scope: !10299)
!10306 = !DILocation(line: 220, column: 1, scope: !10299)
!10307 = distinct !DISubprogram(name: "coredump_query", scope: !2954, file: !2954, line: 222, type: !10308, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10310)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{!118, !2953, !117}
!10310 = !{!10311, !10312}
!10311 = !DILocalVariable(name: "query_id", arg: 1, scope: !10307, file: !2954, line: 222, type: !2953)
!10312 = !DILocalVariable(name: "arg", arg: 2, scope: !10307, file: !2954, line: 222, type: !117)
!10313 = !DILocation(line: 0, scope: !10307)
!10314 = !DILocation(line: 224, column: 2, scope: !10307)
!10315 = distinct !DISubprogram(name: "coredump_cmd", scope: !2954, file: !2954, line: 227, type: !10316, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10318)
!10316 = !DISubroutineType(types: !10317)
!10317 = !{!118, !2960, !117}
!10318 = !{!10319, !10320}
!10319 = !DILocalVariable(name: "query_id", arg: 1, scope: !10315, file: !2954, line: 227, type: !2960)
!10320 = !DILocalVariable(name: "arg", arg: 2, scope: !10315, file: !2954, line: 227, type: !117)
!10321 = !DILocation(line: 0, scope: !10315)
!10322 = !DILocation(line: 229, column: 2, scope: !10315)
!10323 = distinct !DISubprogram(name: "arch_system_halt", scope: !10324, file: !10324, line: 23, type: !6060, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10325)
!10324 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10325 = !{!10326}
!10326 = !DILocalVariable(name: "reason", arg: 1, scope: !10323, file: !10324, line: 23, type: !32)
!10327 = !DILocation(line: 0, scope: !10323)
!10328 = !DILocation(line: 55, column: 2, scope: !10329, inlinedAt: !10333)
!10329 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10330)
!10330 = !{!10331, !10332}
!10331 = !DILocalVariable(name: "key", scope: !10329, file: !6230, line: 44, type: !32)
!10332 = !DILocalVariable(name: "tmp", scope: !10329, file: !6230, line: 53, type: !32)
!10333 = distinct !DILocation(line: 31, column: 8, scope: !10323)
!10334 = !{i64 2844990}
!10335 = !DILocation(line: 0, scope: !10329, inlinedAt: !10333)
!10336 = !DILocation(line: 32, column: 2, scope: !10323)
!10337 = !DILocation(line: 32, column: 2, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !10324, line: 32, column: 2)
!10339 = distinct !DILexicalBlock(scope: !10323, file: !10324, line: 32, column: 2)
!10340 = distinct !{!10340, !10341, !10342}
!10341 = !DILocation(line: 32, column: 2, scope: !10339)
!10342 = !DILocation(line: 34, column: 2, scope: !10339)
!10343 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10324, file: !10324, line: 39, type: !10344, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{null, !32, !10145}
!10346 = !{!10347, !10348}
!10347 = !DILocalVariable(name: "reason", arg: 1, scope: !10343, file: !10324, line: 39, type: !32)
!10348 = !DILocalVariable(name: "esf", arg: 2, scope: !10343, file: !10324, line: 40, type: !10145)
!10349 = !DILocation(line: 0, scope: !10343)
!10350 = !DILocation(line: 46, column: 2, scope: !10343)
!10351 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10324, file: !10324, line: 81, type: !6060, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10352)
!10352 = !{!10353}
!10353 = !DILocalVariable(name: "reason", arg: 1, scope: !10351, file: !10324, line: 81, type: !32)
!10354 = !DILocation(line: 0, scope: !10351)
!10355 = !DILocation(line: 83, column: 2, scope: !10351)
!10356 = distinct !DISubprogram(name: "z_fatal_error", scope: !10324, file: !10324, line: 96, type: !10344, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10357)
!10357 = !{!10358, !10359, !10360, !10361}
!10358 = !DILocalVariable(name: "reason", arg: 1, scope: !10356, file: !10324, line: 96, type: !32)
!10359 = !DILocalVariable(name: "esf", arg: 2, scope: !10356, file: !10324, line: 96, type: !10145)
!10360 = !DILocalVariable(name: "key", scope: !10356, file: !10324, line: 102, type: !32)
!10361 = !DILocalVariable(name: "thread", scope: !10356, file: !10324, line: 103, type: !10189)
!10362 = !DILocation(line: 0, scope: !10356)
!10363 = !DILocation(line: 55, column: 2, scope: !10329, inlinedAt: !10364)
!10364 = distinct !DILocation(line: 102, column: 21, scope: !10356)
!10365 = !DILocation(line: 0, scope: !10329, inlinedAt: !10364)
!10366 = !DILocation(line: 131, column: 2, scope: !10356)
!10367 = !DILocation(line: 147, column: 3, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !10324, line: 147, column: 3)
!10369 = distinct !DILexicalBlock(scope: !10370, file: !10324, line: 147, column: 3)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !10324, line: 146, column: 32)
!10371 = distinct !DILexicalBlock(scope: !10356, file: !10324, line: 146, column: 6)
!10372 = !DILocation(line: 147, column: 3, scope: !10369)
!10373 = !DILocation(line: 147, column: 3, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10368, file: !10324, line: 147, column: 3)
!10375 = !DILocation(line: 104, column: 4, scope: !10356)
!10376 = !DILocalVariable(name: "key", arg: 1, scope: !10377, file: !6230, line: 84, type: !32)
!10377 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10378)
!10378 = !{!10376}
!10379 = !DILocation(line: 0, scope: !10377, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 186, column: 2, scope: !10356)
!10381 = !DILocation(line: 95, column: 2, scope: !10377, inlinedAt: !10380)
!10382 = !{i64 2845807}
!10383 = !DILocation(line: 189, column: 3, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !10324, line: 188, column: 41)
!10385 = distinct !DILexicalBlock(scope: !10356, file: !10324, line: 188, column: 6)
!10386 = !DILocation(line: 191, column: 1, scope: !10356)
!10387 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !10388, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !1933)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!10390}
!10390 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !10189)
!10391 = !DILocation(line: 535, column: 9, scope: !10387)
!10392 = !DILocation(line: 535, column: 2, scope: !10387)
!10393 = distinct !DISubprogram(name: "k_thread_abort", scope: !3295, file: !3295, line: 188, type: !10394, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10396)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{null, !10390}
!10396 = !{!10397}
!10397 = !DILocalVariable(name: "thread", arg: 1, scope: !10393, file: !3295, line: 188, type: !10390)
!10398 = !DILocation(line: 0, scope: !10393)
!10399 = !DILocation(line: 197, column: 2, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10393, file: !3295, line: 197, column: 2)
!10401 = !{i64 2151044132}
!10402 = !DILocation(line: 198, column: 2, scope: !10393)
!10403 = !DILocation(line: 199, column: 1, scope: !10393)
!10404 = distinct !DISubprogram(name: "z_current_get", scope: !3295, file: !3295, line: 173, type: !10388, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !1933)
!10405 = !DILocation(line: 180, column: 2, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10404, file: !3295, line: 180, column: 2)
!10407 = !{i64 2151044064}
!10408 = !DILocation(line: 181, column: 9, scope: !10404)
!10409 = !DILocation(line: 181, column: 2, scope: !10404)
!10410 = distinct !DISubprogram(name: "z_early_memset", scope: !1739, file: !1739, line: 108, type: !10411, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10413)
!10411 = !DISubroutineType(types: !10412)
!10412 = !{null, !117, !118, !323}
!10413 = !{!10414, !10415, !10416}
!10414 = !DILocalVariable(name: "dst", arg: 1, scope: !10410, file: !1739, line: 108, type: !117)
!10415 = !DILocalVariable(name: "c", arg: 2, scope: !10410, file: !1739, line: 108, type: !118)
!10416 = !DILocalVariable(name: "n", arg: 3, scope: !10410, file: !1739, line: 108, type: !323)
!10417 = !DILocation(line: 0, scope: !10410)
!10418 = !DILocation(line: 110, column: 9, scope: !10410)
!10419 = !DILocation(line: 111, column: 1, scope: !10410)
!10420 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1739, file: !1739, line: 121, type: !10421, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{null, !117, !13, !323}
!10423 = !{!10424, !10425, !10426}
!10424 = !DILocalVariable(name: "dst", arg: 1, scope: !10420, file: !1739, line: 121, type: !117)
!10425 = !DILocalVariable(name: "src", arg: 2, scope: !10420, file: !1739, line: 121, type: !13)
!10426 = !DILocalVariable(name: "n", arg: 3, scope: !10420, file: !1739, line: 121, type: !323)
!10427 = !DILocation(line: 0, scope: !10420)
!10428 = !DILocation(line: 123, column: 9, scope: !10420)
!10429 = !DILocation(line: 124, column: 1, scope: !10420)
!10430 = distinct !DISubprogram(name: "z_bss_zero", scope: !1739, file: !1739, line: 132, type: !359, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !1933)
!10431 = !DILocation(line: 143, column: 2, scope: !10430)
!10432 = !DILocation(line: 168, column: 1, scope: !10430)
!10433 = distinct !DISubprogram(name: "z_init_cpu", scope: !1739, file: !1739, line: 372, type: !10434, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{null, !118}
!10436 = !{!10437}
!10437 = !DILocalVariable(name: "id", arg: 1, scope: !10433, file: !1739, line: 372, type: !118)
!10438 = !DILocation(line: 0, scope: !10433)
!10439 = !DILocation(line: 374, column: 2, scope: !10433)
!10440 = !DILocation(line: 375, column: 34, scope: !10433)
!10441 = !DILocation(line: 375, column: 19, scope: !10433)
!10442 = !DILocation(line: 375, column: 31, scope: !10433)
!10443 = !DILocation(line: 376, column: 24, scope: !10433)
!10444 = !DILocation(line: 376, column: 19, scope: !10433)
!10445 = !DILocation(line: 376, column: 22, scope: !10433)
!10446 = !DILocation(line: 378, column: 26, scope: !10433)
!10447 = !DILocation(line: 378, column: 4, scope: !10433)
!10448 = !DILocation(line: 378, column: 50, scope: !10433)
!10449 = !DILocation(line: 377, column: 19, scope: !10433)
!10450 = !DILocation(line: 377, column: 29, scope: !10433)
!10451 = !DILocation(line: 384, column: 1, scope: !10433)
!10452 = distinct !DISubprogram(name: "init_idle_thread", scope: !1739, file: !1739, line: 343, type: !10434, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10453)
!10453 = !{!10454, !10455, !10456, !10459}
!10454 = !DILocalVariable(name: "i", arg: 1, scope: !10452, file: !1739, line: 343, type: !118)
!10455 = !DILocalVariable(name: "thread", scope: !10452, file: !1739, line: 345, type: !1831)
!10456 = !DILocalVariable(name: "stack", scope: !10452, file: !1739, line: 346, type: !10457)
!10457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10458, size: 32)
!10458 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !339, line: 44, baseType: !1942)
!10459 = !DILocalVariable(name: "tname", scope: !10452, file: !1739, line: 358, type: !1060)
!10460 = !DILocation(line: 0, scope: !10452)
!10461 = !DILocation(line: 345, column: 29, scope: !10452)
!10462 = !DILocation(line: 346, column: 28, scope: !10452)
!10463 = !DILocation(line: 362, column: 37, scope: !10452)
!10464 = !DILocation(line: 362, column: 36, scope: !10452)
!10465 = !DILocation(line: 361, column: 2, scope: !10452)
!10466 = !DILocation(line: 365, column: 2, scope: !10452)
!10467 = !DILocation(line: 370, column: 1, scope: !10452)
!10468 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !341, file: !341, line: 331, type: !10469, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10471)
!10469 = !DISubroutineType(types: !10470)
!10470 = !{!1060, !10457}
!10471 = !{!10472}
!10472 = !DILocalVariable(name: "sym", arg: 1, scope: !10468, file: !341, line: 331, type: !10457)
!10473 = !DILocation(line: 0, scope: !10468)
!10474 = !DILocation(line: 333, column: 9, scope: !10468)
!10475 = !DILocation(line: 333, column: 2, scope: !10468)
!10476 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10477, file: !10477, line: 155, type: !10478, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10480)
!10477 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10478 = !DISubroutineType(types: !10479)
!10479 = !{null, !1831}
!10480 = !{!10481}
!10481 = !DILocalVariable(name: "thread", arg: 1, scope: !10476, file: !10477, line: 155, type: !1831)
!10482 = !DILocation(line: 0, scope: !10476)
!10483 = !DILocation(line: 157, column: 15, scope: !10476)
!10484 = !DILocation(line: 157, column: 28, scope: !10476)
!10485 = !DILocation(line: 158, column: 1, scope: !10476)
!10486 = distinct !DISubprogram(name: "z_cstart", scope: !1739, file: !1739, line: 501, type: !359, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10487)
!10487 = !{!10488}
!10488 = !DILocalVariable(name: "dummy_thread", scope: !10486, file: !1739, line: 518, type: !1832)
!10489 = !DILocation(line: 507, column: 2, scope: !10486)
!10490 = !DILocation(line: 43, column: 14, scope: !10491, inlinedAt: !10495)
!10491 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10492, file: !10492, line: 40, type: !359, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10493)
!10492 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10493 = !{!10494}
!10494 = !DILocalVariable(name: "msp", scope: !10491, file: !10492, line: 42, type: !156)
!10495 = distinct !DILocation(line: 44, column: 2, scope: !10496, inlinedAt: !10498)
!10496 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10497, file: !10497, line: 42, type: !359, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !1933)
!10497 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10498 = distinct !DILocation(line: 510, column: 2, scope: !10486)
!10499 = !DILocation(line: 43, column: 3, scope: !10491, inlinedAt: !10495)
!10500 = !DILocation(line: 43, column: 60, scope: !10491, inlinedAt: !10495)
!10501 = !DILocation(line: 0, scope: !10491, inlinedAt: !10495)
!10502 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10503, file: !6109, line: 1153, type: !156)
!10503 = distinct !DISubprogram(name: "__set_MSP", scope: !6109, file: !6109, line: 1153, type: !6206, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10504)
!10504 = !{!10502}
!10505 = !DILocation(line: 0, scope: !10503, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 46, column: 2, scope: !10491, inlinedAt: !10495)
!10507 = !DILocation(line: 1155, column: 3, scope: !10503, inlinedAt: !10506)
!10508 = !{i64 7507748}
!10509 = !DILocation(line: 62, column: 11, scope: !10491, inlinedAt: !10495)
!10510 = !DILocation(line: 102, column: 2, scope: !10511, inlinedAt: !10512)
!10511 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6877, file: !6877, line: 97, type: !359, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !1933)
!10512 = distinct !DILocation(line: 45, column: 2, scope: !10496, inlinedAt: !10498)
!10513 = !DILocation(line: 108, column: 2, scope: !10511, inlinedAt: !10512)
!10514 = !DILocation(line: 112, column: 2, scope: !10511, inlinedAt: !10512)
!10515 = !DILocation(line: 113, column: 2, scope: !10511, inlinedAt: !10512)
!10516 = !DILocation(line: 114, column: 2, scope: !10511, inlinedAt: !10512)
!10517 = !DILocation(line: 116, column: 2, scope: !10511, inlinedAt: !10512)
!10518 = !DILocation(line: 123, column: 13, scope: !10511, inlinedAt: !10512)
!10519 = !DILocation(line: 46, column: 2, scope: !10496, inlinedAt: !10498)
!10520 = !DILocation(line: 47, column: 2, scope: !10496, inlinedAt: !10498)
!10521 = !DILocation(line: 174, column: 12, scope: !10522, inlinedAt: !10523)
!10522 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6877, file: !6877, line: 169, type: !359, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !1933)
!10523 = distinct !DILocation(line: 48, column: 2, scope: !10496, inlinedAt: !10498)
!10524 = !DILocation(line: 179, column: 12, scope: !10522, inlinedAt: !10523)
!10525 = !DILocation(line: 518, column: 2, scope: !10486)
!10526 = !DILocation(line: 518, column: 18, scope: !10486)
!10527 = !DILocation(line: 520, column: 2, scope: !10486)
!10528 = !DILocation(line: 523, column: 2, scope: !10486)
!10529 = !DILocation(line: 526, column: 2, scope: !10486)
!10530 = !DILocation(line: 527, column: 2, scope: !10486)
!10531 = !DILocation(line: 543, column: 24, scope: !10486)
!10532 = !DILocation(line: 543, column: 2, scope: !10486)
!10533 = !DILocation(line: 0, scope: !1959)
!10534 = !DILocation(line: 246, column: 15, scope: !1977)
!10535 = !DILocation(line: 246, column: 36, scope: !1976)
!10536 = !DILocation(line: 246, column: 2, scope: !1977)
!10537 = !DILocation(line: 247, column: 37, scope: !1975)
!10538 = !DILocation(line: 0, scope: !1975)
!10539 = !DILocation(line: 248, column: 19, scope: !1975)
!10540 = !DILocation(line: 248, column: 12, scope: !1975)
!10541 = !DILocation(line: 250, column: 11, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !1975, file: !1739, line: 250, column: 7)
!10543 = !DILocation(line: 250, column: 7, scope: !1975)
!10544 = !DILocation(line: 254, column: 11, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !1739, line: 254, column: 8)
!10546 = distinct !DILexicalBlock(scope: !10542, file: !1739, line: 250, column: 20)
!10547 = !DILocation(line: 254, column: 8, scope: !10546)
!10548 = !DILocation(line: 255, column: 9, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10545, file: !1739, line: 254, column: 17)
!10550 = !DILocation(line: 258, column: 9, scope: !10549)
!10551 = !DILocation(line: 261, column: 28, scope: !10549)
!10552 = !DILocation(line: 261, column: 10, scope: !10549)
!10553 = !DILocation(line: 261, column: 17, scope: !10549)
!10554 = !DILocation(line: 261, column: 26, scope: !10549)
!10555 = !DILocation(line: 262, column: 4, scope: !10549)
!10556 = !DILocation(line: 263, column: 9, scope: !10546)
!10557 = !DILocation(line: 263, column: 16, scope: !10546)
!10558 = !DILocation(line: 263, column: 28, scope: !10546)
!10559 = !DILocation(line: 264, column: 3, scope: !10546)
!10560 = !DILocation(line: 246, column: 60, scope: !1976)
!10561 = distinct !{!10561, !10536, !10562}
!10562 = !DILocation(line: 265, column: 2, scope: !1977)
!10563 = !DILocation(line: 266, column: 1, scope: !1959)
!10564 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1583, file: !1583, line: 1814, type: !6149, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10565)
!10565 = !{!10566, !10567}
!10566 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10564, file: !1583, line: 1814, type: !2421)
!10567 = !DILocalVariable(name: "priority", arg: 2, scope: !10564, file: !1583, line: 1814, type: !156)
!10568 = !DILocation(line: 0, scope: !10564)
!10569 = !DILocation(line: 1822, column: 48, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !1583, line: 1821, column: 3)
!10571 = distinct !DILexicalBlock(scope: !10564, file: !1583, line: 1816, column: 7)
!10572 = !DILocation(line: 1822, column: 32, scope: !10570)
!10573 = !DILocation(line: 1822, column: 40, scope: !10570)
!10574 = !DILocation(line: 1822, column: 5, scope: !10570)
!10575 = !DILocation(line: 1822, column: 46, scope: !10570)
!10576 = !DILocation(line: 1824, column: 1, scope: !10564)
!10577 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10497, file: !10497, line: 32, type: !359, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!10578 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10579, file: !10579, line: 215, type: !10478, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10580)
!10579 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10580 = !{!10581}
!10581 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10578, file: !10579, line: 215, type: !1831)
!10582 = !DILocation(line: 0, scope: !10578)
!10583 = !DILocation(line: 217, column: 21, scope: !10578)
!10584 = !DILocation(line: 217, column: 34, scope: !10578)
!10585 = !DILocation(line: 221, column: 21, scope: !10578)
!10586 = !DILocation(line: 221, column: 34, scope: !10578)
!10587 = !DILocation(line: 230, column: 2, scope: !10578)
!10588 = !DILocation(line: 239, column: 24, scope: !10578)
!10589 = !DILocation(line: 240, column: 1, scope: !10578)
!10590 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1739, file: !1739, line: 399, type: !10591, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!1060}
!10593 = !{!10594}
!10594 = !DILocalVariable(name: "stack_ptr", scope: !10590, file: !1739, line: 401, type: !1060)
!10595 = !DILocation(line: 404, column: 2, scope: !10590)
!10596 = !DILocation(line: 416, column: 24, scope: !10590)
!10597 = !DILocation(line: 418, column: 14, scope: !10590)
!10598 = !DILocation(line: 0, scope: !10590)
!10599 = !DILocation(line: 423, column: 2, scope: !10590)
!10600 = !DILocation(line: 424, column: 2, scope: !10590)
!10601 = !DILocation(line: 426, column: 2, scope: !10590)
!10602 = !DILocation(line: 428, column: 2, scope: !10590)
!10603 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1739, file: !1739, line: 432, type: !10604, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{null, !1060}
!10606 = !{!10607}
!10607 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10603, file: !1739, line: 432, type: !1060)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 435, column: 2, scope: !10603)
!10610 = !DILocation(line: 445, column: 2, scope: !10603)
!10611 = distinct !DISubprogram(name: "bg_thread_main", scope: !1739, file: !1739, line: 277, type: !348, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10612)
!10612 = !{!10613, !10614, !10615}
!10613 = !DILocalVariable(name: "unused1", arg: 1, scope: !10611, file: !1739, line: 277, type: !117)
!10614 = !DILocalVariable(name: "unused2", arg: 2, scope: !10611, file: !1739, line: 277, type: !117)
!10615 = !DILocalVariable(name: "unused3", arg: 3, scope: !10611, file: !1739, line: 277, type: !117)
!10616 = !DILocation(line: 0, scope: !10611)
!10617 = !DILocation(line: 291, column: 20, scope: !10611)
!10618 = !DILocation(line: 293, column: 2, scope: !10611)
!10619 = !DILocation(line: 297, column: 2, scope: !10611)
!10620 = !DILocation(line: 305, column: 2, scope: !10611)
!10621 = !DILocation(line: 307, column: 2, scope: !10611)
!10622 = !DILocation(line: 330, column: 8, scope: !10611)
!10623 = !DILocation(line: 333, column: 34, scope: !10611)
!10624 = !DILocation(line: 339, column: 1, scope: !10611)
!10625 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1986, file: !1986, line: 45, type: !10626, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10634)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{null, !10628, !117}
!10628 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !220, line: 103, baseType: !10629)
!10629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10630, size: 32)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{null, !10632, !117}
!10632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10633, size: 32)
!10633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1991)
!10634 = !{!10635, !10636}
!10635 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10625, file: !1986, line: 45, type: !10628)
!10636 = !DILocalVariable(name: "user_data", arg: 2, scope: !10625, file: !1986, line: 45, type: !117)
!10637 = !DILocation(line: 0, scope: !10625)
!10638 = !DILocation(line: 71, column: 1, scope: !10625)
!10639 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1986, file: !1986, line: 73, type: !10626, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10640)
!10640 = !{!10641, !10642}
!10641 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10639, file: !1986, line: 73, type: !10628)
!10642 = !DILocalVariable(name: "user_data", arg: 2, scope: !10639, file: !1986, line: 73, type: !117)
!10643 = !DILocation(line: 0, scope: !10639)
!10644 = !DILocation(line: 95, column: 1, scope: !10639)
!10645 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1986, file: !1986, line: 97, type: !6878, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !1933)
!10646 = !DILocation(line: 1031, column: 3, scope: !10647, inlinedAt: !10650)
!10647 = distinct !DISubprogram(name: "__get_IPSR", scope: !6109, file: !6109, line: 1027, type: !6196, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10648)
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "result", scope: !10647, file: !6109, line: 1029, type: !156)
!10650 = distinct !DILocation(line: 48, column: 10, scope: !10651, inlinedAt: !10652)
!10651 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6877, file: !6877, line: 46, type: !6878, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !1933)
!10652 = distinct !DILocation(line: 99, column: 9, scope: !10645)
!10653 = !{i64 7019592}
!10654 = !DILocation(line: 0, scope: !10647, inlinedAt: !10650)
!10655 = !DILocation(line: 48, column: 9, scope: !10651, inlinedAt: !10652)
!10656 = !DILocation(line: 99, column: 2, scope: !10645)
!10657 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1986, file: !1986, line: 106, type: !359, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !1933)
!10658 = !DILocation(line: 108, column: 2, scope: !10657)
!10659 = !DILocation(line: 108, column: 17, scope: !10657)
!10660 = !DILocation(line: 108, column: 30, scope: !10657)
!10661 = !DILocation(line: 109, column: 1, scope: !10657)
!10662 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1986, file: !1986, line: 116, type: !359, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !1933)
!10663 = !DILocation(line: 118, column: 2, scope: !10662)
!10664 = !DILocation(line: 118, column: 17, scope: !10662)
!10665 = !DILocation(line: 118, column: 30, scope: !10662)
!10666 = !DILocation(line: 119, column: 1, scope: !10662)
!10667 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1986, file: !1986, line: 126, type: !6878, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !1933)
!10668 = !DILocation(line: 128, column: 10, scope: !10667)
!10669 = !DILocation(line: 128, column: 25, scope: !10667)
!10670 = !DILocation(line: 128, column: 38, scope: !10667)
!10671 = !DILocation(line: 128, column: 53, scope: !10667)
!10672 = !DILocation(line: 128, column: 2, scope: !10667)
!10673 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1986, file: !1986, line: 187, type: !10674, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10676)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!118, !1990, !133}
!10676 = !{!10677, !10678}
!10677 = !DILocalVariable(name: "thread", arg: 1, scope: !10673, file: !1986, line: 187, type: !1990)
!10678 = !DILocalVariable(name: "value", arg: 2, scope: !10673, file: !1986, line: 187, type: !133)
!10679 = !DILocation(line: 0, scope: !10673)
!10680 = !DILocation(line: 206, column: 2, scope: !10673)
!10681 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1986, file: !1986, line: 238, type: !10682, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10684)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{!133, !1990}
!10684 = !{!10685}
!10685 = !DILocalVariable(name: "thread", arg: 1, scope: !10681, file: !1986, line: 238, type: !1990)
!10686 = !DILocation(line: 0, scope: !10681)
!10687 = !DILocation(line: 244, column: 2, scope: !10681)
!10688 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1986, file: !1986, line: 248, type: !10689, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10691)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{!118, !1989, !1060, !323}
!10691 = !{!10692, !10693, !10694}
!10692 = !DILocalVariable(name: "thread", arg: 1, scope: !10688, file: !1986, line: 248, type: !1989)
!10693 = !DILocalVariable(name: "buf", arg: 2, scope: !10688, file: !1986, line: 248, type: !1060)
!10694 = !DILocalVariable(name: "size", arg: 3, scope: !10688, file: !1986, line: 248, type: !323)
!10695 = !DILocation(line: 0, scope: !10688)
!10696 = !DILocation(line: 257, column: 2, scope: !10688)
!10697 = !DILocation(line: 0, scope: !1985)
!10698 = !DILocation(line: 281, column: 11, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !1985, file: !1986, line: 281, column: 6)
!10700 = !DILocation(line: 281, column: 20, scope: !10699)
!10701 = !DILocation(line: 275, column: 45, scope: !1985)
!10702 = !DILocation(line: 285, column: 10, scope: !1985)
!10703 = !DILocation(line: 0, scope: !2103)
!10704 = !DILocation(line: 293, column: 39, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !2103, file: !1986, line: 293, column: 2)
!10706 = !DILocation(line: 293, column: 2, scope: !2103)
!10707 = !DILocation(line: 273, column: 14, scope: !1985)
!10708 = !DILocation(line: 309, column: 2, scope: !1985)
!10709 = !DILocation(line: 309, column: 11, scope: !1985)
!10710 = !DILocation(line: 311, column: 2, scope: !1985)
!10711 = !DILocation(line: 293, column: 26, scope: !10705)
!10712 = !DILocation(line: 294, column: 9, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10705, file: !1986, line: 293, column: 54)
!10714 = !DILocation(line: 295, column: 21, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10713, file: !1986, line: 295, column: 7)
!10716 = !DILocation(line: 295, column: 28, scope: !10715)
!10717 = !DILocation(line: 295, column: 7, scope: !10713)
!10718 = !DILocation(line: 299, column: 25, scope: !10713)
!10719 = !DILocation(line: 299, column: 41, scope: !10713)
!10720 = !DILocation(line: 300, column: 7, scope: !10713)
!10721 = !DILocation(line: 300, column: 26, scope: !10713)
!10722 = !DILocation(line: 299, column: 10, scope: !10713)
!10723 = !DILocation(line: 299, column: 7, scope: !10713)
!10724 = !DILocation(line: 302, column: 16, scope: !10713)
!10725 = !DILocation(line: 304, column: 20, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10713, file: !1986, line: 304, column: 7)
!10727 = !DILocation(line: 304, column: 7, scope: !10713)
!10728 = !DILocation(line: 305, column: 26, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10726, file: !1986, line: 304, column: 26)
!10730 = !DILocation(line: 305, column: 42, scope: !10729)
!10731 = !DILocation(line: 305, column: 11, scope: !10729)
!10732 = !DILocation(line: 305, column: 8, scope: !10729)
!10733 = !DILocation(line: 306, column: 3, scope: !10729)
!10734 = !DILocation(line: 293, column: 50, scope: !10705)
!10735 = !DILocation(line: 312, column: 1, scope: !1985)
!10736 = distinct !DISubprogram(name: "copy_bytes", scope: !1986, file: !1986, line: 261, type: !10737, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10739)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{!323, !1060, !323, !133, !323}
!10739 = !{!10740, !10741, !10742, !10743, !10744}
!10740 = !DILocalVariable(name: "dest", arg: 1, scope: !10736, file: !1986, line: 261, type: !1060)
!10741 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10736, file: !1986, line: 261, type: !323)
!10742 = !DILocalVariable(name: "src", arg: 3, scope: !10736, file: !1986, line: 261, type: !133)
!10743 = !DILocalVariable(name: "src_size", arg: 4, scope: !10736, file: !1986, line: 261, type: !323)
!10744 = !DILocalVariable(name: "bytes_to_copy", scope: !10736, file: !1986, line: 263, type: !323)
!10745 = !DILocation(line: 0, scope: !10736)
!10746 = !DILocation(line: 265, column: 18, scope: !10736)
!10747 = !DILocation(line: 266, column: 2, scope: !10736)
!10748 = !DILocation(line: 268, column: 2, scope: !10736)
!10749 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1986, file: !1986, line: 383, type: !10750, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10752)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{null, !1990}
!10752 = !{!10753}
!10753 = !DILocalVariable(name: "thread", arg: 1, scope: !10749, file: !1986, line: 383, type: !1990)
!10754 = !DILocation(line: 0, scope: !10749)
!10755 = !DILocation(line: 387, column: 2, scope: !10749)
!10756 = !DILocation(line: 388, column: 1, scope: !10749)
!10757 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1986, file: !1986, line: 528, type: !10758, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10765)
!10758 = !DISubroutineType(types: !10759)
!10759 = !{!1060, !1990, !10760, !323, !346, !117, !117, !117, !118, !156, !133}
!10760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10761, size: 32)
!10761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !339, line: 44, baseType: !10762)
!10762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !341, line: 47, size: 8, elements: !10763)
!10763 = !{!10764}
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10762, file: !341, line: 48, baseType: !135, size: 8)
!10765 = !{!10766, !10767, !10768, !10769, !10770, !10771, !10772, !10773, !10774, !10775, !10776}
!10766 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10757, file: !1986, line: 528, type: !1990)
!10767 = !DILocalVariable(name: "stack", arg: 2, scope: !10757, file: !1986, line: 529, type: !10760)
!10768 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10757, file: !1986, line: 529, type: !323)
!10769 = !DILocalVariable(name: "entry", arg: 4, scope: !10757, file: !1986, line: 530, type: !346)
!10770 = !DILocalVariable(name: "p1", arg: 5, scope: !10757, file: !1986, line: 531, type: !117)
!10771 = !DILocalVariable(name: "p2", arg: 6, scope: !10757, file: !1986, line: 531, type: !117)
!10772 = !DILocalVariable(name: "p3", arg: 7, scope: !10757, file: !1986, line: 531, type: !117)
!10773 = !DILocalVariable(name: "prio", arg: 8, scope: !10757, file: !1986, line: 532, type: !118)
!10774 = !DILocalVariable(name: "options", arg: 9, scope: !10757, file: !1986, line: 532, type: !156)
!10775 = !DILocalVariable(name: "name", arg: 10, scope: !10757, file: !1986, line: 532, type: !133)
!10776 = !DILocalVariable(name: "stack_ptr", scope: !10757, file: !1986, line: 534, type: !1060)
!10777 = !DILocation(line: 0, scope: !10757)
!10778 = !DILocation(line: 536, column: 2, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !1986, line: 536, column: 2)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !1986, line: 536, column: 2)
!10781 = distinct !DILexicalBlock(scope: !10757, file: !1986, line: 536, column: 2)
!10782 = !DILocation(line: 536, column: 2, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10779, file: !1986, line: 536, column: 2)
!10784 = !DILocation(line: 550, column: 28, scope: !10757)
!10785 = !DILocation(line: 550, column: 2, scope: !10757)
!10786 = !DILocation(line: 553, column: 34, scope: !10757)
!10787 = !DILocation(line: 553, column: 2, scope: !10757)
!10788 = !DILocation(line: 554, column: 14, scope: !10757)
!10789 = !DILocation(line: 564, column: 2, scope: !10757)
!10790 = !DILocation(line: 567, column: 14, scope: !10757)
!10791 = !DILocation(line: 567, column: 24, scope: !10757)
!10792 = !DILocation(line: 612, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10757, file: !1986, line: 612, column: 6)
!10794 = !DILocation(line: 612, column: 6, scope: !10757)
!10795 = !DILocation(line: 627, column: 40, scope: !10757)
!10796 = !DILocation(line: 637, column: 2, scope: !10757)
!10797 = !DILocation(line: 613, column: 15, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10793, file: !1986, line: 612, column: 17)
!10799 = !DILocation(line: 613, column: 29, scope: !10798)
!10800 = !DILocation(line: 638, column: 1, scope: !10757)
!10801 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !10477, file: !10477, line: 78, type: !10802, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10804)
!10802 = !DISubroutineType(types: !10803)
!10803 = !{!146, !117}
!10804 = !{!10805}
!10805 = !DILocalVariable(name: "entry_point", arg: 1, scope: !10801, file: !10477, line: 78, type: !117)
!10806 = !DILocation(line: 0, scope: !10801)
!10807 = !DILocation(line: 80, column: 21, scope: !10801)
!10808 = !DILocation(line: 80, column: 2, scope: !10801)
!10809 = distinct !DISubprogram(name: "z_waitq_init", scope: !10810, file: !10810, line: 47, type: !10811, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10813)
!10810 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10811 = !DISubroutineType(types: !10812)
!10812 = !{null, !2021}
!10813 = !{!10814}
!10814 = !DILocalVariable(name: "w", arg: 1, scope: !10809, file: !10810, line: 47, type: !2021)
!10815 = !DILocation(line: 0, scope: !10809)
!10816 = !DILocation(line: 49, column: 21, scope: !10809)
!10817 = !DILocation(line: 49, column: 2, scope: !10809)
!10818 = !DILocation(line: 50, column: 1, scope: !10809)
!10819 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1986, file: !1986, line: 791, type: !10820, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10823)
!10820 = !DISubroutineType(types: !10821)
!10821 = !{null, !10822, !118, !156, !32}
!10822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!10823 = !{!10824, !10825, !10826, !10827}
!10824 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10819, file: !1986, line: 791, type: !10822)
!10825 = !DILocalVariable(name: "priority", arg: 2, scope: !10819, file: !1986, line: 791, type: !118)
!10826 = !DILocalVariable(name: "initial_state", arg: 3, scope: !10819, file: !1986, line: 792, type: !156)
!10827 = !DILocalVariable(name: "options", arg: 4, scope: !10819, file: !1986, line: 792, type: !32)
!10828 = !DILocation(line: 0, scope: !10819)
!10829 = !DILocation(line: 795, column: 15, scope: !10819)
!10830 = !DILocation(line: 795, column: 25, scope: !10819)
!10831 = !DILocation(line: 796, column: 30, scope: !10819)
!10832 = !DILocation(line: 796, column: 15, scope: !10819)
!10833 = !DILocation(line: 796, column: 28, scope: !10819)
!10834 = !DILocation(line: 797, column: 30, scope: !10819)
!10835 = !DILocation(line: 797, column: 15, scope: !10819)
!10836 = !DILocation(line: 797, column: 28, scope: !10819)
!10837 = !DILocation(line: 799, column: 22, scope: !10819)
!10838 = !DILocation(line: 799, column: 15, scope: !10819)
!10839 = !DILocation(line: 799, column: 20, scope: !10819)
!10840 = !DILocation(line: 801, column: 15, scope: !10819)
!10841 = !DILocation(line: 801, column: 28, scope: !10819)
!10842 = !DILocation(line: 814, column: 2, scope: !10819)
!10843 = !DILocation(line: 815, column: 1, scope: !10819)
!10844 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1986, file: !1986, line: 449, type: !10845, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10847)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!1060, !1990, !10760, !323}
!10847 = !{!10848, !10849, !10850, !10851, !10852, !10853, !10854, !10855}
!10848 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10844, file: !1986, line: 449, type: !1990)
!10849 = !DILocalVariable(name: "stack", arg: 2, scope: !10844, file: !1986, line: 450, type: !10760)
!10850 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10844, file: !1986, line: 450, type: !323)
!10851 = !DILocalVariable(name: "stack_obj_size", scope: !10844, file: !1986, line: 452, type: !323)
!10852 = !DILocalVariable(name: "stack_buf_size", scope: !10844, file: !1986, line: 452, type: !323)
!10853 = !DILocalVariable(name: "stack_ptr", scope: !10844, file: !1986, line: 453, type: !1060)
!10854 = !DILocalVariable(name: "stack_buf_start", scope: !10844, file: !1986, line: 453, type: !1060)
!10855 = !DILocalVariable(name: "delta", scope: !10844, file: !1986, line: 454, type: !323)
!10856 = !DILocation(line: 0, scope: !10844)
!10857 = !DILocation(line: 465, column: 20, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10844, file: !1986, line: 463, column: 2)
!10859 = !DILocation(line: 473, column: 28, scope: !10844)
!10860 = !DILocation(line: 520, column: 2, scope: !10844)
!10861 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !10862, file: !10862, line: 40, type: !10863, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10865)
!10862 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10863 = !DISubroutineType(types: !10864)
!10864 = !{null, !10822}
!10865 = !{!10866}
!10866 = !DILocalVariable(name: "thread_base", arg: 1, scope: !10861, file: !10862, line: 40, type: !10822)
!10867 = !DILocation(line: 0, scope: !10861)
!10868 = !DILocation(line: 42, column: 31, scope: !10861)
!10869 = !DILocation(line: 42, column: 2, scope: !10861)
!10870 = !DILocation(line: 43, column: 1, scope: !10861)
!10871 = distinct !DISubprogram(name: "z_init_timeout", scope: !10862, file: !10862, line: 25, type: !2047, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10872)
!10872 = !{!10873}
!10873 = !DILocalVariable(name: "to", arg: 1, scope: !10871, file: !10862, line: 25, type: !2049)
!10874 = !DILocation(line: 0, scope: !10871)
!10875 = !DILocation(line: 27, column: 22, scope: !10871)
!10876 = !DILocation(line: 27, column: 2, scope: !10871)
!10877 = !DILocation(line: 28, column: 1, scope: !10871)
!10878 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !10879, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10881)
!10879 = !DISubroutineType(types: !10880)
!10880 = !{null, !2089}
!10881 = !{!10882}
!10882 = !DILocalVariable(name: "node", arg: 1, scope: !10878, file: !235, line: 211, type: !2089)
!10883 = !DILocation(line: 0, scope: !10878)
!10884 = !DILocation(line: 213, column: 8, scope: !10878)
!10885 = !DILocation(line: 213, column: 13, scope: !10878)
!10886 = !DILocation(line: 214, column: 8, scope: !10878)
!10887 = !DILocation(line: 214, column: 13, scope: !10878)
!10888 = !DILocation(line: 215, column: 1, scope: !10878)
!10889 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !10890, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10893)
!10890 = !DISubroutineType(types: !10891)
!10891 = !{null, !10892}
!10892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!10893 = !{!10894}
!10894 = !DILocalVariable(name: "list", arg: 1, scope: !10889, file: !235, line: 197, type: !10892)
!10895 = !DILocation(line: 0, scope: !10889)
!10896 = !DILocation(line: 199, column: 8, scope: !10889)
!10897 = !DILocation(line: 199, column: 13, scope: !10889)
!10898 = !DILocation(line: 200, column: 8, scope: !10889)
!10899 = !DILocation(line: 200, column: 13, scope: !10889)
!10900 = !DILocation(line: 201, column: 1, scope: !10889)
!10901 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1986, file: !1986, line: 641, type: !10902, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10908)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!1989, !1990, !10760, !323, !346, !117, !117, !117, !118, !156, !10904}
!10904 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !10905)
!10905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !10906)
!10906 = !{!10907}
!10907 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10905, file: !114, line: 66, baseType: !113, size: 64)
!10908 = !{!10909, !10910, !10911, !10912, !10913, !10914, !10915, !10916, !10917, !10918}
!10909 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10901, file: !1986, line: 641, type: !1990)
!10910 = !DILocalVariable(name: "stack", arg: 2, scope: !10901, file: !1986, line: 642, type: !10760)
!10911 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10901, file: !1986, line: 643, type: !323)
!10912 = !DILocalVariable(name: "entry", arg: 4, scope: !10901, file: !1986, line: 643, type: !346)
!10913 = !DILocalVariable(name: "p1", arg: 5, scope: !10901, file: !1986, line: 644, type: !117)
!10914 = !DILocalVariable(name: "p2", arg: 6, scope: !10901, file: !1986, line: 644, type: !117)
!10915 = !DILocalVariable(name: "p3", arg: 7, scope: !10901, file: !1986, line: 644, type: !117)
!10916 = !DILocalVariable(name: "prio", arg: 8, scope: !10901, file: !1986, line: 645, type: !118)
!10917 = !DILocalVariable(name: "options", arg: 9, scope: !10901, file: !1986, line: 645, type: !156)
!10918 = !DILocalVariable(name: "delay", arg: 10, scope: !10901, file: !1986, line: 645, type: !10904)
!10919 = !DILocation(line: 0, scope: !10901)
!10920 = !DILocation(line: 1031, column: 3, scope: !10647, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 48, column: 10, scope: !10651, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 647, column: 2, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !1986, line: 647, column: 2)
!10924 = distinct !DILexicalBlock(scope: !10901, file: !1986, line: 647, column: 2)
!10925 = !DILocation(line: 0, scope: !10647, inlinedAt: !10921)
!10926 = !DILocation(line: 48, column: 9, scope: !10651, inlinedAt: !10922)
!10927 = !DILocation(line: 647, column: 2, scope: !10924)
!10928 = !DILocation(line: 647, column: 2, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10923, file: !1986, line: 647, column: 2)
!10930 = !DILocation(line: 649, column: 2, scope: !10901)
!10931 = !DILocation(line: 652, column: 7, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10901, file: !1986, line: 652, column: 6)
!10933 = !DILocation(line: 652, column: 6, scope: !10901)
!10934 = !DILocation(line: 653, column: 3, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !1986, line: 652, column: 39)
!10936 = !DILocation(line: 654, column: 2, scope: !10935)
!10937 = !DILocation(line: 656, column: 2, scope: !10901)
!10938 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1986, file: !1986, line: 401, type: !10939, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{null, !1990, !10904}
!10941 = !{!10942, !10943}
!10942 = !DILocalVariable(name: "thread", arg: 1, scope: !10938, file: !1986, line: 401, type: !1990)
!10943 = !DILocalVariable(name: "delay", arg: 2, scope: !10938, file: !1986, line: 401, type: !10904)
!10944 = !DILocation(line: 0, scope: !10938)
!10945 = !DILocation(line: 404, column: 6, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10938, file: !1986, line: 404, column: 6)
!10947 = !DILocation(line: 404, column: 6, scope: !10938)
!10948 = !DILocation(line: 405, column: 3, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10946, file: !1986, line: 404, column: 38)
!10950 = !DILocation(line: 406, column: 2, scope: !10949)
!10951 = !DILocation(line: 407, column: 3, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10946, file: !1986, line: 406, column: 9)
!10953 = !DILocation(line: 413, column: 1, scope: !10938)
!10954 = distinct !DISubprogram(name: "k_thread_start", scope: !3295, file: !3295, line: 205, type: !10955, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{null, !1989}
!10957 = !{!10958}
!10958 = !DILocalVariable(name: "thread", arg: 1, scope: !10954, file: !3295, line: 205, type: !1989)
!10959 = !DILocation(line: 0, scope: !10954)
!10960 = !DILocation(line: 214, column: 2, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10954, file: !3295, line: 214, column: 2)
!10962 = !{i64 2151069356}
!10963 = !DILocation(line: 215, column: 2, scope: !10954)
!10964 = !DILocation(line: 216, column: 1, scope: !10954)
!10965 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10862, file: !10862, line: 47, type: !10939, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10966)
!10966 = !{!10967, !10968}
!10967 = !DILocalVariable(name: "thread", arg: 1, scope: !10965, file: !10862, line: 47, type: !1990)
!10968 = !DILocalVariable(name: "ticks", arg: 2, scope: !10965, file: !10862, line: 47, type: !10904)
!10969 = !DILocation(line: 0, scope: !10965)
!10970 = !DILocation(line: 49, column: 30, scope: !10965)
!10971 = !DILocation(line: 49, column: 2, scope: !10965)
!10972 = !DILocation(line: 50, column: 1, scope: !10965)
!10973 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1986, file: !1986, line: 748, type: !359, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !10974)
!10974 = !{!10975, !10992}
!10975 = !DILocalVariable(name: "thread_data", scope: !10976, file: !1986, line: 750, type: !10977)
!10976 = distinct !DILexicalBlock(scope: !10973, file: !1986, line: 750, column: 2)
!10977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10978, size: 32)
!10978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !10979)
!10979 = !{!10980, !10981, !10982, !10983, !10984, !10985, !10986, !10987, !10988, !10989, !10990, !10991}
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !10978, file: !220, line: 621, baseType: !1990, size: 32)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !10978, file: !220, line: 622, baseType: !10760, size: 32, offset: 32)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !10978, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !10978, file: !220, line: 624, baseType: !346, size: 32, offset: 96)
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !10978, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !10978, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !10978, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !10978, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !10978, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !10978, file: !220, line: 630, baseType: !356, size: 32, offset: 288)
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !10978, file: !220, line: 631, baseType: !358, size: 32, offset: 320)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !10978, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!10992 = !DILocalVariable(name: "thread_data", scope: !10993, file: !1986, line: 781, type: !10977)
!10993 = distinct !DILexicalBlock(scope: !10973, file: !1986, line: 781, column: 2)
!10994 = !DILocation(line: 0, scope: !10976)
!10995 = !DILocation(line: 750, column: 2, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !1986, line: 750, column: 2)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1986, line: 750, column: 2)
!10998 = distinct !DILexicalBlock(scope: !10976, file: !1986, line: 750, column: 2)
!10999 = !DILocation(line: 750, column: 2, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !1986, line: 750, column: 2)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !1986, line: 750, column: 2)
!11002 = !DILocation(line: 750, column: 2, scope: !10997)
!11003 = !DILocation(line: 750, column: 2, scope: !10976)
!11004 = !DILocation(line: 780, column: 2, scope: !10973)
!11005 = !DILocation(line: 0, scope: !10993)
!11006 = !DILocation(line: 781, column: 2, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !1986, line: 781, column: 2)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !1986, line: 781, column: 2)
!11009 = distinct !DILexicalBlock(scope: !10993, file: !1986, line: 781, column: 2)
!11010 = !DILocation(line: 752, column: 17, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10998, file: !1986, line: 750, column: 38)
!11012 = !DILocation(line: 753, column: 17, scope: !11011)
!11013 = !DILocation(line: 754, column: 17, scope: !11011)
!11014 = !DILocation(line: 755, column: 17, scope: !11011)
!11015 = !DILocation(line: 756, column: 17, scope: !11011)
!11016 = !DILocation(line: 757, column: 17, scope: !11011)
!11017 = !DILocation(line: 758, column: 17, scope: !11011)
!11018 = !DILocation(line: 759, column: 17, scope: !11011)
!11019 = !DILocation(line: 760, column: 17, scope: !11011)
!11020 = !DILocation(line: 751, column: 3, scope: !11011)
!11021 = !DILocation(line: 763, column: 16, scope: !11011)
!11022 = !DILocation(line: 763, column: 29, scope: !11011)
!11023 = !DILocation(line: 763, column: 39, scope: !11011)
!11024 = !DILocation(line: 750, column: 2, scope: !10998)
!11025 = !DILocation(line: 750, column: 2, scope: !11001)
!11026 = distinct !{!11026, !11003, !11027}
!11027 = !DILocation(line: 764, column: 2, scope: !10976)
!11028 = !DILocation(line: 781, column: 2, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1986, line: 781, column: 2)
!11030 = distinct !DILexicalBlock(scope: !11007, file: !1986, line: 781, column: 2)
!11031 = !DILocation(line: 781, column: 2, scope: !11008)
!11032 = !DILocation(line: 781, column: 2, scope: !10993)
!11033 = !DILocation(line: 787, column: 2, scope: !10973)
!11034 = !DILocation(line: 788, column: 1, scope: !10973)
!11035 = !DILocation(line: 782, column: 20, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !1986, line: 782, column: 7)
!11037 = distinct !DILexicalBlock(scope: !11009, file: !1986, line: 781, column: 38)
!11038 = !DILocation(line: 782, column: 31, scope: !11036)
!11039 = !DILocation(line: 782, column: 7, scope: !11037)
!11040 = !DILocation(line: 783, column: 37, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !1986, line: 782, column: 51)
!11042 = !DILocation(line: 784, column: 10, scope: !11041)
!11043 = !DILocation(line: 783, column: 4, scope: !11041)
!11044 = !DILocation(line: 785, column: 3, scope: !11041)
!11045 = !DILocation(line: 781, column: 2, scope: !11009)
!11046 = !DILocation(line: 781, column: 2, scope: !11030)
!11047 = distinct !{!11047, !11032, !11048}
!11048 = !DILocation(line: 786, column: 2, scope: !10993)
!11049 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3262, file: !3262, line: 403, type: !3263, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11050)
!11050 = !{!11051}
!11051 = !DILocalVariable(name: "t", arg: 1, scope: !11049, file: !3262, line: 403, type: !213)
!11052 = !DILocation(line: 0, scope: !11049)
!11053 = !DILocalVariable(name: "t", arg: 1, scope: !11054, file: !3262, line: 102, type: !213)
!11054 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3270, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11055)
!11055 = !{!11053, !11056, !11057, !11058, !11059, !11060, !11061, !11062, !11063, !11064, !11065}
!11056 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11054, file: !3262, line: 102, type: !156)
!11057 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11054, file: !3262, line: 103, type: !156)
!11058 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11054, file: !3262, line: 103, type: !146)
!11059 = !DILocalVariable(name: "result32", arg: 5, scope: !11054, file: !3262, line: 104, type: !146)
!11060 = !DILocalVariable(name: "round_up", arg: 6, scope: !11054, file: !3262, line: 104, type: !146)
!11061 = !DILocalVariable(name: "round_off", arg: 7, scope: !11054, file: !3262, line: 105, type: !146)
!11062 = !DILocalVariable(name: "mul_ratio", scope: !11054, file: !3262, line: 107, type: !146)
!11063 = !DILocalVariable(name: "div_ratio", scope: !11054, file: !3262, line: 109, type: !146)
!11064 = !DILocalVariable(name: "off", scope: !11054, file: !3262, line: 116, type: !213)
!11065 = !DILocalVariable(name: "rdivisor", scope: !11066, file: !3262, line: 119, type: !156)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !3262, line: 118, column: 18)
!11067 = distinct !DILexicalBlock(scope: !11054, file: !3262, line: 118, column: 6)
!11068 = !DILocation(line: 0, scope: !11054, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 406, column: 9, scope: !11049)
!11070 = !DILocation(line: 145, column: 13, scope: !11071, inlinedAt: !11069)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !3262, line: 144, column: 10)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !3262, line: 142, column: 7)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3262, line: 141, column: 24)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !3262, line: 141, column: 13)
!11075 = distinct !DILexicalBlock(scope: !11054, file: !3262, line: 134, column: 6)
!11076 = !DILocation(line: 406, column: 2, scope: !11049)
!11077 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1986, file: !1986, line: 817, type: !3678, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11078)
!11078 = !{!11079, !11080, !11081, !11082}
!11079 = !DILocalVariable(name: "entry", arg: 1, scope: !11077, file: !1986, line: 817, type: !346)
!11080 = !DILocalVariable(name: "p1", arg: 2, scope: !11077, file: !1986, line: 818, type: !117)
!11081 = !DILocalVariable(name: "p2", arg: 3, scope: !11077, file: !1986, line: 818, type: !117)
!11082 = !DILocalVariable(name: "p3", arg: 4, scope: !11077, file: !1986, line: 818, type: !117)
!11083 = !DILocation(line: 0, scope: !11077)
!11084 = !DILocation(line: 822, column: 2, scope: !11077)
!11085 = !DILocation(line: 822, column: 17, scope: !11077)
!11086 = !DILocation(line: 822, column: 30, scope: !11077)
!11087 = !DILocation(line: 823, column: 2, scope: !11077)
!11088 = !DILocation(line: 845, column: 2, scope: !11077)
!11089 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !1986, file: !1986, line: 853, type: !11090, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11093)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!146, !11092}
!11092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!11093 = !{!11094, !11095}
!11094 = !DILocalVariable(name: "l", arg: 1, scope: !11089, file: !1986, line: 853, type: !11092)
!11095 = !DILocalVariable(name: "thread_cpu", scope: !11089, file: !1986, line: 855, type: !22)
!11096 = !DILocation(line: 0, scope: !11089)
!11097 = !DILocation(line: 855, column: 28, scope: !11089)
!11098 = !DILocation(line: 857, column: 17, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11089, file: !1986, line: 857, column: 6)
!11100 = !DILocation(line: 857, column: 6, scope: !11089)
!11101 = !DILocation(line: 858, column: 19, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !1986, line: 858, column: 7)
!11103 = distinct !DILexicalBlock(scope: !11099, file: !1986, line: 857, column: 24)
!11104 = !DILocation(line: 858, column: 42, scope: !11102)
!11105 = !DILocation(line: 858, column: 28, scope: !11102)
!11106 = !DILocation(line: 858, column: 25, scope: !11102)
!11107 = !DILocation(line: 858, column: 7, scope: !11103)
!11108 = !DILocation(line: 862, column: 2, scope: !11089)
!11109 = !DILocation(line: 863, column: 1, scope: !11089)
!11110 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !1986, file: !1986, line: 865, type: !11090, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11111)
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "l", arg: 1, scope: !11110, file: !1986, line: 865, type: !11092)
!11113 = !DILocation(line: 0, scope: !11110)
!11114 = !DILocation(line: 867, column: 9, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !1986, line: 867, column: 6)
!11116 = !DILocation(line: 867, column: 38, scope: !11115)
!11117 = !DILocation(line: 867, column: 24, scope: !11115)
!11118 = !DILocation(line: 867, column: 54, scope: !11115)
!11119 = !DILocation(line: 867, column: 43, scope: !11115)
!11120 = !DILocation(line: 867, column: 41, scope: !11115)
!11121 = !DILocation(line: 867, column: 20, scope: !11115)
!11122 = !DILocation(line: 867, column: 6, scope: !11110)
!11123 = !DILocation(line: 870, column: 16, scope: !11110)
!11124 = !DILocation(line: 871, column: 2, scope: !11110)
!11125 = !DILocation(line: 872, column: 1, scope: !11110)
!11126 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !1986, file: !1986, line: 874, type: !11127, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11129)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{null, !11092}
!11129 = !{!11130}
!11130 = !DILocalVariable(name: "l", arg: 1, scope: !11126, file: !1986, line: 874, type: !11092)
!11131 = !DILocation(line: 0, scope: !11126)
!11132 = !DILocation(line: 876, column: 32, scope: !11126)
!11133 = !DILocation(line: 876, column: 18, scope: !11126)
!11134 = !DILocation(line: 876, column: 48, scope: !11126)
!11135 = !DILocation(line: 876, column: 37, scope: !11126)
!11136 = !DILocation(line: 876, column: 35, scope: !11126)
!11137 = !DILocation(line: 876, column: 5, scope: !11126)
!11138 = !DILocation(line: 876, column: 16, scope: !11126)
!11139 = !DILocation(line: 877, column: 1, scope: !11126)
!11140 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1986, file: !1986, line: 888, type: !11141, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!118, !1990}
!11143 = !{!11144}
!11144 = !DILocalVariable(name: "thread", arg: 1, scope: !11140, file: !1986, line: 888, type: !1990)
!11145 = !DILocation(line: 0, scope: !11140)
!11146 = !DILocation(line: 893, column: 2, scope: !11140)
!11147 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1986, file: !1986, line: 897, type: !11148, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11150)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{!118, !1990, !32}
!11150 = !{!11151, !11152}
!11151 = !DILocalVariable(name: "thread", arg: 1, scope: !11147, file: !1986, line: 897, type: !1990)
!11152 = !DILocalVariable(name: "options", arg: 2, scope: !11147, file: !1986, line: 897, type: !32)
!11153 = !DILocation(line: 0, scope: !11147)
!11154 = !DILocation(line: 902, column: 2, scope: !11147)
!11155 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1986, file: !1986, line: 1072, type: !11156, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11161)
!11156 = !DISubroutineType(types: !11157)
!11157 = !{!118, !1989, !11158}
!11158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11159, size: 32)
!11159 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !225, line: 234, baseType: !11160)
!11160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !225, line: 192, elements: !1933)
!11161 = !{!11162, !11163}
!11162 = !DILocalVariable(name: "thread", arg: 1, scope: !11155, file: !1986, line: 1072, type: !1989)
!11163 = !DILocalVariable(name: "stats", arg: 2, scope: !11155, file: !1986, line: 1073, type: !11158)
!11164 = !DILocation(line: 0, scope: !11155)
!11165 = !DILocation(line: 1075, column: 14, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11155, file: !1986, line: 1075, column: 6)
!11167 = !DILocation(line: 1075, column: 23, scope: !11166)
!11168 = !DILocation(line: 1086, column: 1, scope: !11155)
!11169 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1986, file: !1986, line: 1088, type: !11170, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2086, retainedNodes: !11172)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!118, !11158}
!11172 = !{!11173}
!11173 = !DILocalVariable(name: "stats", arg: 1, scope: !11169, file: !1986, line: 1088, type: !11158)
!11174 = !DILocation(line: 0, scope: !11169)
!11175 = !DILocation(line: 1094, column: 12, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11169, file: !1986, line: 1094, column: 6)
!11177 = !DILocation(line: 1120, column: 1, scope: !11169)
!11178 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11179, file: !11179, line: 20, type: !359, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !1933)
!11179 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11180 = !DILocation(line: 30, column: 2, scope: !11178)
!11181 = !DILocation(line: 31, column: 1, scope: !11178)
!11182 = distinct !DISubprogram(name: "idle", scope: !11179, file: !11179, line: 33, type: !348, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !11183)
!11183 = !{!11184, !11185, !11186}
!11184 = !DILocalVariable(name: "unused1", arg: 1, scope: !11182, file: !11179, line: 33, type: !117)
!11185 = !DILocalVariable(name: "unused2", arg: 2, scope: !11182, file: !11179, line: 33, type: !117)
!11186 = !DILocalVariable(name: "unused3", arg: 3, scope: !11182, file: !11179, line: 33, type: !117)
!11187 = !DILocation(line: 0, scope: !11182)
!11188 = !DILocation(line: 39, column: 2, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !11179, line: 39, column: 2)
!11190 = distinct !DILexicalBlock(scope: !11182, file: !11179, line: 39, column: 2)
!11191 = !DILocation(line: 39, column: 2, scope: !11190)
!11192 = !DILocation(line: 39, column: 2, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11189, file: !11179, line: 39, column: 2)
!11194 = !DILocation(line: 55, column: 2, scope: !11195, inlinedAt: !11199)
!11195 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !11196)
!11196 = !{!11197, !11198}
!11197 = !DILocalVariable(name: "key", scope: !11195, file: !6230, line: 44, type: !32)
!11198 = !DILocalVariable(name: "tmp", scope: !11195, file: !6230, line: 53, type: !32)
!11199 = distinct !DILocation(line: 62, column: 10, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11182, file: !11179, line: 41, column: 15)
!11201 = !{i64 2843332}
!11202 = !DILocation(line: 0, scope: !11195, inlinedAt: !11199)
!11203 = !DILocation(line: 86, column: 3, scope: !11200)
!11204 = !DILocation(line: 41, column: 2, scope: !11182)
!11205 = distinct !{!11205, !11204, !11206}
!11206 = !DILocation(line: 105, column: 2, scope: !11182)
!11207 = distinct !DISubprogram(name: "k_cpu_idle", scope: !220, file: !220, line: 5627, type: !359, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !1933)
!11208 = !DILocation(line: 5629, column: 2, scope: !11207)
!11209 = !DILocation(line: 5630, column: 1, scope: !11207)
!11210 = !DISubprogram(name: "arch_cpu_idle", scope: !339, file: !339, line: 167, type: !359, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!11211 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !2986, file: !2986, line: 30, type: !11212, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11214)
!11212 = !DISubroutineType(types: !11213)
!11213 = !{!117, !2995, !146}
!11214 = !{!11215, !11216, !11217, !11218}
!11215 = !DILocalVariable(name: "node", arg: 1, scope: !11211, file: !2986, line: 30, type: !2995)
!11216 = !DILocalVariable(name: "needs_free", arg: 2, scope: !11211, file: !2986, line: 30, type: !146)
!11217 = !DILocalVariable(name: "ret", scope: !11211, file: !2986, line: 32, type: !117)
!11218 = !DILocalVariable(name: "anode", scope: !11219, file: !2986, line: 40, type: !2984)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !2986, line: 34, column: 68)
!11220 = distinct !DILexicalBlock(scope: !11211, file: !2986, line: 34, column: 6)
!11221 = !DILocation(line: 0, scope: !11211)
!11222 = !DILocation(line: 34, column: 12, scope: !11220)
!11223 = !DILocation(line: 34, column: 21, scope: !11220)
!11224 = !DILocation(line: 34, column: 25, scope: !11220)
!11225 = !DILocation(line: 34, column: 52, scope: !11220)
!11226 = !DILocation(line: 34, column: 6, scope: !11211)
!11227 = !DILocation(line: 0, scope: !11219)
!11228 = !DILocation(line: 43, column: 16, scope: !11219)
!11229 = !DILocation(line: 44, column: 7, scope: !11219)
!11230 = !DILocation(line: 42, column: 11, scope: !11219)
!11231 = !DILocation(line: 45, column: 4, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !2986, line: 44, column: 19)
!11233 = distinct !DILexicalBlock(scope: !11219, file: !2986, line: 44, column: 7)
!11234 = !DILocation(line: 46, column: 3, scope: !11232)
!11235 = !DILocation(line: 52, column: 9, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11220, file: !2986, line: 47, column: 9)
!11237 = !DILocation(line: 0, scope: !11220)
!11238 = !DILocation(line: 55, column: 2, scope: !11211)
!11239 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !411, file: !411, line: 270, type: !11240, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11242)
!11240 = !DISubroutineType(types: !11241)
!11241 = !{!143, !2995}
!11242 = !{!11243}
!11243 = !DILocalVariable(name: "node", arg: 1, scope: !11239, file: !411, line: 270, type: !2995)
!11244 = !DILocation(line: 0, scope: !11239)
!11245 = !DILocation(line: 272, column: 15, scope: !11239)
!11246 = !DILocation(line: 272, column: 9, scope: !11239)
!11247 = !DILocation(line: 272, column: 2, scope: !11239)
!11248 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !2986, file: !2986, line: 58, type: !11249, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11270)
!11249 = !DISubroutineType(types: !11250)
!11250 = !{null, !11251}
!11251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11252, size: 32)
!11252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !11253)
!11253 = !{!11254, !11260, !11264}
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !11252, file: !220, line: 1710, baseType: !11255, size: 64)
!11255 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !411, line: 46, baseType: !11256)
!11256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !411, line: 41, size: 64, elements: !11257)
!11257 = !{!11258, !11259}
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11256, file: !411, line: 42, baseType: !2995, size: 32)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11256, file: !411, line: 43, baseType: !2995, size: 32, offset: 32)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11252, file: !220, line: 1711, baseType: !11261, size: 32, offset: 64)
!11261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !11262)
!11262 = !{!11263}
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11261, file: !328, line: 52, baseType: !22, size: 32)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11252, file: !220, line: 1712, baseType: !11265, size: 64, offset: 96)
!11265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !11266)
!11266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !11267)
!11267 = !{!11268}
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11266, file: !261, line: 232, baseType: !11269, size: 64)
!11269 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2998)
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "queue", arg: 1, scope: !11248, file: !2986, line: 58, type: !11251)
!11272 = !DILocation(line: 0, scope: !11248)
!11273 = !DILocation(line: 60, column: 26, scope: !11248)
!11274 = !DILocation(line: 60, column: 2, scope: !11248)
!11275 = !DILocation(line: 61, column: 16, scope: !11248)
!11276 = !DILocation(line: 62, column: 23, scope: !11248)
!11277 = !DILocation(line: 62, column: 2, scope: !11248)
!11278 = !DILocation(line: 70, column: 1, scope: !11248)
!11279 = distinct !DISubprogram(name: "sys_sflist_init", scope: !411, file: !411, line: 202, type: !11280, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11283)
!11280 = !DISubroutineType(types: !11281)
!11281 = !{null, !11282}
!11282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11255, size: 32)
!11283 = !{!11284}
!11284 = !DILocalVariable(name: "list", arg: 1, scope: !11279, file: !411, line: 202, type: !11282)
!11285 = !DILocation(line: 0, scope: !11279)
!11286 = !DILocation(line: 204, column: 8, scope: !11279)
!11287 = !DILocation(line: 204, column: 13, scope: !11279)
!11288 = !DILocation(line: 205, column: 8, scope: !11279)
!11289 = !DILocation(line: 205, column: 13, scope: !11279)
!11290 = !DILocation(line: 206, column: 1, scope: !11279)
!11291 = distinct !DISubprogram(name: "z_waitq_init", scope: !10810, file: !10810, line: 47, type: !11292, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11295)
!11292 = !DISubroutineType(types: !11293)
!11293 = !{null, !11294}
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11265, size: 32)
!11295 = !{!11296}
!11296 = !DILocalVariable(name: "w", arg: 1, scope: !11291, file: !10810, line: 47, type: !11294)
!11297 = !DILocation(line: 0, scope: !11291)
!11298 = !DILocation(line: 49, column: 21, scope: !11291)
!11299 = !DILocation(line: 49, column: 2, scope: !11291)
!11300 = !DILocation(line: 50, column: 1, scope: !11291)
!11301 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !11302, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11305)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{null, !11304}
!11304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11269, size: 32)
!11305 = !{!11306}
!11306 = !DILocalVariable(name: "list", arg: 1, scope: !11301, file: !235, line: 197, type: !11304)
!11307 = !DILocation(line: 0, scope: !11301)
!11308 = !DILocation(line: 199, column: 8, scope: !11301)
!11309 = !DILocation(line: 199, column: 13, scope: !11301)
!11310 = !DILocation(line: 200, column: 8, scope: !11301)
!11311 = !DILocation(line: 200, column: 13, scope: !11301)
!11312 = !DILocation(line: 201, column: 1, scope: !11301)
!11313 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !2986, file: !2986, line: 94, type: !11249, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11314)
!11314 = !{!11315, !11316, !11321}
!11315 = !DILocalVariable(name: "queue", arg: 1, scope: !11313, file: !2986, line: 94, type: !11251)
!11316 = !DILocalVariable(name: "key", scope: !11313, file: !2986, line: 98, type: !11317)
!11317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !328, line: 106, baseType: !11318)
!11318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !328, line: 32, size: 32, elements: !11319)
!11319 = !{!11320}
!11320 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11318, file: !328, line: 33, baseType: !118, size: 32)
!11321 = !DILocalVariable(name: "first_pending_thread", scope: !11313, file: !2986, line: 99, type: !11322)
!11322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11323, size: 32)
!11323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !11324)
!11324 = !{!11325, !11363, !11375, !11376, !11377, !11378, !11390}
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11323, file: !225, line: 247, baseType: !11326, size: 384)
!11326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !11327)
!11327 = !{!11328, !11338, !11339, !11340, !11341, !11350, !11351, !11352}
!11328 = !DIDerivedType(tag: DW_TAG_member, scope: !11326, file: !225, line: 60, baseType: !11329, size: 64)
!11329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11326, file: !225, line: 60, size: 64, elements: !11330)
!11330 = !{!11331, !11332}
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11329, file: !225, line: 61, baseType: !2997, size: 64)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11329, file: !225, line: 62, baseType: !11333, size: 64)
!11333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !11334)
!11334 = !{!11335}
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11333, file: !251, line: 50, baseType: !11336, size: 64)
!11336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11337, size: 64, elements: !256)
!11337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11333, size: 32)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11326, file: !225, line: 68, baseType: !11294, size: 32, offset: 64)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11326, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11326, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!11341 = !DIDerivedType(tag: DW_TAG_member, scope: !11326, file: !225, line: 90, baseType: !11342, size: 16, offset: 112)
!11342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11326, file: !225, line: 90, size: 16, elements: !11343)
!11343 = !{!11344, !11349}
!11344 = !DIDerivedType(tag: DW_TAG_member, scope: !11342, file: !225, line: 91, baseType: !11345, size: 16)
!11345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11342, file: !225, line: 91, size: 16, elements: !11346)
!11346 = !{!11347, !11348}
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11345, file: !225, line: 96, baseType: !275, size: 8)
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11345, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11342, file: !225, line: 100, baseType: !279, size: 16)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11326, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11326, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11326, file: !225, line: 131, baseType: !11353, size: 192, offset: 192)
!11353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !11354)
!11354 = !{!11355, !11356, !11362}
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11353, file: !261, line: 245, baseType: !2997, size: 64)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11353, file: !261, line: 246, baseType: !11357, size: 32, offset: 64)
!11357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !11358)
!11358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11359, size: 32)
!11359 = !DISubroutineType(types: !11360)
!11360 = !{null, !11361}
!11361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11353, size: 32)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11353, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11323, file: !225, line: 250, baseType: !11364, size: 288, offset: 384)
!11364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !11365)
!11365 = !{!11366, !11367, !11368, !11369, !11370, !11371, !11372, !11373, !11374}
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11364, file: !296, line: 26, baseType: !156, size: 32)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11364, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11364, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11364, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11364, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11364, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11364, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11364, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11364, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11323, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11323, file: !225, line: 256, baseType: !11265, size: 64, offset: 704)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11323, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11323, file: !225, line: 325, baseType: !11379, size: 32, offset: 800)
!11379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11380, size: 32)
!11380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !11381)
!11381 = !{!11382, !11388, !11389}
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11380, file: !220, line: 5074, baseType: !11383, size: 96)
!11383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !11384)
!11384 = !{!11385, !11386, !11387}
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11383, file: !316, line: 57, baseType: !319, size: 32)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11383, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11383, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11380, file: !220, line: 5075, baseType: !11265, size: 64, offset: 96)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11380, file: !220, line: 5076, baseType: !11261, size: 32, offset: 160)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11323, file: !225, line: 343, baseType: !11391, size: 64, offset: 832)
!11391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !11392)
!11392 = !{!11393, !11394}
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11391, file: !296, line: 63, baseType: !156, size: 32)
!11394 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11391, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!11395 = !DILocation(line: 0, scope: !11313)
!11396 = !DILocation(line: 98, column: 45, scope: !11313)
!11397 = !DILocalVariable(name: "l", arg: 1, scope: !11398, file: !328, line: 136, type: !11401)
!11398 = distinct !DISubprogram(name: "k_spin_lock", scope: !328, file: !328, line: 136, type: !11399, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11402)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!11317, !11401}
!11401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11261, size: 32)
!11402 = !{!11397, !11403}
!11403 = !DILocalVariable(name: "k", scope: !11398, file: !328, line: 139, type: !11317)
!11404 = !DILocation(line: 0, scope: !11398, inlinedAt: !11405)
!11405 = distinct !DILocation(line: 98, column: 25, scope: !11313)
!11406 = !DILocation(line: 55, column: 2, scope: !11407, inlinedAt: !11411)
!11407 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11408)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "key", scope: !11407, file: !6230, line: 44, type: !32)
!11410 = !DILocalVariable(name: "tmp", scope: !11407, file: !6230, line: 53, type: !32)
!11411 = distinct !DILocation(line: 145, column: 10, scope: !11398, inlinedAt: !11405)
!11412 = !{i64 2851073}
!11413 = !DILocation(line: 0, scope: !11407, inlinedAt: !11411)
!11414 = !DILocation(line: 148, column: 2, scope: !11415, inlinedAt: !11405)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !328, line: 148, column: 2)
!11416 = distinct !DILexicalBlock(scope: !11398, file: !328, line: 148, column: 2)
!11417 = !DILocation(line: 148, column: 2, scope: !11416, inlinedAt: !11405)
!11418 = !DILocation(line: 148, column: 2, scope: !11419, inlinedAt: !11405)
!11419 = distinct !DILexicalBlock(scope: !11415, file: !328, line: 148, column: 2)
!11420 = !DILocation(line: 160, column: 2, scope: !11398, inlinedAt: !11405)
!11421 = !DILocation(line: 101, column: 55, scope: !11313)
!11422 = !DILocation(line: 101, column: 25, scope: !11313)
!11423 = !DILocation(line: 103, column: 27, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11313, file: !2986, line: 103, column: 6)
!11425 = !DILocation(line: 103, column: 6, scope: !11313)
!11426 = !DILocation(line: 104, column: 3, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11424, file: !2986, line: 103, column: 36)
!11428 = !DILocation(line: 105, column: 2, scope: !11427)
!11429 = !DILocation(line: 108, column: 2, scope: !11313)
!11430 = !DILocation(line: 109, column: 1, scope: !11313)
!11431 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !2986, file: !2986, line: 81, type: !11432, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11434)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{null, !11322, !117}
!11434 = !{!11435, !11436}
!11435 = !DILocalVariable(name: "thread", arg: 1, scope: !11431, file: !2986, line: 81, type: !11322)
!11436 = !DILocalVariable(name: "data", arg: 2, scope: !11431, file: !2986, line: 81, type: !117)
!11437 = !DILocation(line: 0, scope: !11431)
!11438 = !DILocalVariable(name: "thread", arg: 1, scope: !11439, file: !11440, line: 134, type: !11322)
!11439 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11440, file: !11440, line: 134, type: !11441, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11443)
!11440 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11441 = !DISubroutineType(types: !11442)
!11442 = !{null, !11322, !32, !117}
!11443 = !{!11438, !11444, !11445}
!11444 = !DILocalVariable(name: "value", arg: 2, scope: !11439, file: !11440, line: 135, type: !32)
!11445 = !DILocalVariable(name: "data", arg: 3, scope: !11439, file: !11440, line: 136, type: !117)
!11446 = !DILocation(line: 0, scope: !11439, inlinedAt: !11447)
!11447 = distinct !DILocation(line: 83, column: 2, scope: !11431)
!11448 = !DILocalVariable(name: "thread", arg: 1, scope: !11449, file: !10497, line: 65, type: !11322)
!11449 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10497, file: !10497, line: 65, type: !11450, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11452)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{null, !11322, !32}
!11452 = !{!11448, !11453}
!11453 = !DILocalVariable(name: "value", arg: 2, scope: !11449, file: !10497, line: 65, type: !32)
!11454 = !DILocation(line: 0, scope: !11449, inlinedAt: !11455)
!11455 = distinct !DILocation(line: 138, column: 2, scope: !11439, inlinedAt: !11447)
!11456 = !DILocation(line: 67, column: 15, scope: !11449, inlinedAt: !11455)
!11457 = !DILocation(line: 67, column: 33, scope: !11449, inlinedAt: !11455)
!11458 = !DILocation(line: 139, column: 15, scope: !11439, inlinedAt: !11447)
!11459 = !DILocation(line: 139, column: 25, scope: !11439, inlinedAt: !11447)
!11460 = !DILocation(line: 84, column: 2, scope: !11431)
!11461 = !DILocation(line: 85, column: 1, scope: !11431)
!11462 = distinct !DISubprogram(name: "k_queue_insert", scope: !2986, file: !2986, line: 175, type: !11463, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11465)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{null, !11251, !117, !117}
!11465 = !{!11466, !11467, !11468}
!11466 = !DILocalVariable(name: "queue", arg: 1, scope: !11462, file: !2986, line: 175, type: !11251)
!11467 = !DILocalVariable(name: "prev", arg: 2, scope: !11462, file: !2986, line: 175, type: !117)
!11468 = !DILocalVariable(name: "data", arg: 3, scope: !11462, file: !2986, line: 175, type: !117)
!11469 = !DILocation(line: 0, scope: !11462)
!11470 = !DILocation(line: 179, column: 8, scope: !11462)
!11471 = !DILocation(line: 182, column: 1, scope: !11462)
!11472 = distinct !DISubprogram(name: "queue_insert", scope: !2986, file: !2986, line: 120, type: !11473, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11475)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{!356, !11251, !117, !117, !146, !146}
!11475 = !{!11476, !11477, !11478, !11479, !11480, !11481, !11482, !11483}
!11476 = !DILocalVariable(name: "queue", arg: 1, scope: !11472, file: !2986, line: 120, type: !11251)
!11477 = !DILocalVariable(name: "prev", arg: 2, scope: !11472, file: !2986, line: 120, type: !117)
!11478 = !DILocalVariable(name: "data", arg: 3, scope: !11472, file: !2986, line: 120, type: !117)
!11479 = !DILocalVariable(name: "alloc", arg: 4, scope: !11472, file: !2986, line: 121, type: !146)
!11480 = !DILocalVariable(name: "is_append", arg: 5, scope: !11472, file: !2986, line: 121, type: !146)
!11481 = !DILocalVariable(name: "first_pending_thread", scope: !11472, file: !2986, line: 123, type: !11322)
!11482 = !DILocalVariable(name: "key", scope: !11472, file: !2986, line: 124, type: !11317)
!11483 = !DILocalVariable(name: "anode", scope: !11484, file: !2986, line: 146, type: !2984)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !2986, line: 145, column: 13)
!11485 = distinct !DILexicalBlock(scope: !11472, file: !2986, line: 145, column: 6)
!11486 = !DILocation(line: 0, scope: !11472)
!11487 = !DILocation(line: 124, column: 45, scope: !11472)
!11488 = !DILocation(line: 0, scope: !11398, inlinedAt: !11489)
!11489 = distinct !DILocation(line: 124, column: 25, scope: !11472)
!11490 = !DILocation(line: 55, column: 2, scope: !11407, inlinedAt: !11491)
!11491 = distinct !DILocation(line: 145, column: 10, scope: !11398, inlinedAt: !11489)
!11492 = !DILocation(line: 0, scope: !11407, inlinedAt: !11491)
!11493 = !DILocation(line: 148, column: 2, scope: !11415, inlinedAt: !11489)
!11494 = !DILocation(line: 148, column: 2, scope: !11416, inlinedAt: !11489)
!11495 = !DILocation(line: 148, column: 2, scope: !11419, inlinedAt: !11489)
!11496 = !DILocation(line: 160, column: 2, scope: !11398, inlinedAt: !11489)
!11497 = !DILocation(line: 128, column: 6, scope: !11472)
!11498 = !DILocation(line: 129, column: 39, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !2986, line: 128, column: 17)
!11500 = distinct !DILexicalBlock(scope: !11472, file: !2986, line: 128, column: 6)
!11501 = !DILocation(line: 129, column: 10, scope: !11499)
!11502 = !DILocation(line: 130, column: 2, scope: !11499)
!11503 = !DILocation(line: 131, column: 55, scope: !11472)
!11504 = !DILocation(line: 131, column: 25, scope: !11472)
!11505 = !DILocation(line: 133, column: 27, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11472, file: !2986, line: 133, column: 6)
!11507 = !DILocation(line: 133, column: 6, scope: !11472)
!11508 = !DILocation(line: 136, column: 3, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11506, file: !2986, line: 133, column: 36)
!11510 = !DILocation(line: 137, column: 3, scope: !11509)
!11511 = !DILocation(line: 141, column: 3, scope: !11509)
!11512 = !DILocation(line: 145, column: 6, scope: !11472)
!11513 = !DILocation(line: 148, column: 11, scope: !11484)
!11514 = !DILocation(line: 0, scope: !11484)
!11515 = !DILocation(line: 149, column: 13, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11484, file: !2986, line: 149, column: 7)
!11517 = !DILocation(line: 149, column: 7, scope: !11484)
!11518 = !DILocalVariable(name: "key", arg: 2, scope: !11519, file: !328, line: 190, type: !11317)
!11519 = distinct !DISubprogram(name: "k_spin_unlock", scope: !328, file: !328, line: 189, type: !11520, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11522)
!11520 = !DISubroutineType(types: !11521)
!11521 = !{null, !11401, !11317}
!11522 = !{!11523, !11518}
!11523 = !DILocalVariable(name: "l", arg: 1, scope: !11519, file: !328, line: 189, type: !11401)
!11524 = !DILocation(line: 0, scope: !11519, inlinedAt: !11525)
!11525 = distinct !DILocation(line: 150, column: 4, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11516, file: !2986, line: 149, column: 22)
!11527 = !DILocation(line: 194, column: 2, scope: !11528, inlinedAt: !11525)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !328, line: 194, column: 2)
!11529 = distinct !DILexicalBlock(scope: !11519, file: !328, line: 194, column: 2)
!11530 = !DILocation(line: 194, column: 2, scope: !11529, inlinedAt: !11525)
!11531 = !DILocation(line: 194, column: 2, scope: !11532, inlinedAt: !11525)
!11532 = distinct !DILexicalBlock(scope: !11528, file: !328, line: 194, column: 2)
!11533 = !DILocalVariable(name: "key", arg: 1, scope: !11534, file: !6230, line: 84, type: !32)
!11534 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11535)
!11535 = !{!11533}
!11536 = !DILocation(line: 0, scope: !11534, inlinedAt: !11537)
!11537 = distinct !DILocation(line: 215, column: 2, scope: !11519, inlinedAt: !11525)
!11538 = !DILocation(line: 95, column: 2, scope: !11534, inlinedAt: !11537)
!11539 = !{i64 2851890}
!11540 = !DILocation(line: 157, column: 10, scope: !11484)
!11541 = !DILocation(line: 157, column: 15, scope: !11484)
!11542 = !DILocation(line: 158, column: 27, scope: !11484)
!11543 = !DILocation(line: 158, column: 3, scope: !11484)
!11544 = !DILocation(line: 161, column: 19, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11485, file: !2986, line: 160, column: 9)
!11546 = !DILocation(line: 161, column: 3, scope: !11545)
!11547 = !DILocation(line: 166, column: 42, scope: !11472)
!11548 = !DILocation(line: 166, column: 28, scope: !11472)
!11549 = !DILocation(line: 166, column: 36, scope: !11472)
!11550 = !DILocation(line: 166, column: 2, scope: !11472)
!11551 = !DILocation(line: 168, column: 2, scope: !11472)
!11552 = !DILocation(line: 172, column: 2, scope: !11472)
!11553 = !DILocation(line: 173, column: 1, scope: !11472)
!11554 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !411, file: !411, line: 255, type: !11555, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11557)
!11555 = !DISubroutineType(types: !11556)
!11556 = !{!2995, !11282}
!11557 = !{!11558}
!11558 = !DILocalVariable(name: "list", arg: 1, scope: !11554, file: !411, line: 255, type: !11282)
!11559 = !DILocation(line: 0, scope: !11554)
!11560 = !DILocation(line: 257, column: 15, scope: !11554)
!11561 = !DILocation(line: 257, column: 2, scope: !11554)
!11562 = distinct !DISubprogram(name: "z_thread_malloc", scope: !11440, file: !11440, line: 102, type: !11563, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11564)
!11563 = !DISubroutineType(types: !2949)
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "size", arg: 1, scope: !11562, file: !11440, line: 102, type: !323)
!11566 = !DILocation(line: 0, scope: !11562)
!11567 = !DILocation(line: 104, column: 9, scope: !11562)
!11568 = !DILocation(line: 104, column: 2, scope: !11562)
!11569 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !411, file: !411, line: 288, type: !11570, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11572)
!11570 = !DISubroutineType(types: !11571)
!11571 = !{null, !2995, !143}
!11572 = !{!11573, !11574}
!11573 = !DILocalVariable(name: "node", arg: 1, scope: !11569, file: !411, line: 288, type: !2995)
!11574 = !DILocalVariable(name: "flags", arg: 2, scope: !11569, file: !411, line: 288, type: !143)
!11575 = !DILocation(line: 0, scope: !11569)
!11576 = !DILocation(line: 290, column: 2, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !411, line: 290, column: 2)
!11578 = distinct !DILexicalBlock(scope: !11569, file: !411, line: 290, column: 2)
!11579 = !DILocation(line: 290, column: 2, scope: !11578)
!11580 = !DILocation(line: 290, column: 2, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11577, file: !411, line: 290, column: 2)
!11582 = !DILocation(line: 291, column: 8, scope: !11569)
!11583 = !DILocation(line: 291, column: 23, scope: !11569)
!11584 = !DILocation(line: 292, column: 1, scope: !11569)
!11585 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !411, file: !411, line: 420, type: !11586, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{null, !11282, !2995, !2995}
!11588 = !{!11589, !11590, !11591}
!11589 = !DILocalVariable(name: "list", arg: 1, scope: !11585, file: !411, line: 420, type: !11282)
!11590 = !DILocalVariable(name: "prev", arg: 2, scope: !11585, file: !411, line: 420, type: !2995)
!11591 = !DILocalVariable(name: "node", arg: 3, scope: !11585, file: !411, line: 420, type: !2995)
!11592 = !DILocation(line: 0, scope: !11585)
!11593 = !DILocation(line: 420, column: 1, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11585, file: !411, line: 420, column: 1)
!11595 = !DILocation(line: 420, column: 1, scope: !11585)
!11596 = !DILocation(line: 420, column: 1, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11594, file: !411, line: 420, column: 1)
!11598 = !DILocation(line: 420, column: 1, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11594, file: !411, line: 420, column: 1)
!11600 = !DILocation(line: 420, column: 1, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11599, file: !411, line: 420, column: 1)
!11602 = !DILocation(line: 420, column: 1, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11599, file: !411, line: 420, column: 1)
!11604 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !411, file: !411, line: 360, type: !11605, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11607)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{null, !11282, !2995}
!11607 = !{!11608, !11609}
!11608 = !DILocalVariable(name: "list", arg: 1, scope: !11604, file: !411, line: 360, type: !11282)
!11609 = !DILocalVariable(name: "node", arg: 2, scope: !11604, file: !411, line: 360, type: !2995)
!11610 = !DILocation(line: 0, scope: !11604)
!11611 = !DILocation(line: 360, column: 1, scope: !11604)
!11612 = !DILocation(line: 360, column: 1, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11604, file: !411, line: 360, column: 1)
!11614 = !DILocation(line: 360, column: 1, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11613, file: !411, line: 360, column: 1)
!11616 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !411, file: !411, line: 211, type: !11617, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11619)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!2995, !2995}
!11619 = !{!11620}
!11620 = !DILocalVariable(name: "node", arg: 1, scope: !11616, file: !411, line: 211, type: !2995)
!11621 = !DILocation(line: 0, scope: !11616)
!11622 = !DILocation(line: 213, column: 32, scope: !11616)
!11623 = !DILocation(line: 213, column: 47, scope: !11616)
!11624 = !DILocation(line: 213, column: 9, scope: !11616)
!11625 = !DILocation(line: 213, column: 2, scope: !11616)
!11626 = distinct !DISubprogram(name: "sys_sflist_append", scope: !411, file: !411, line: 373, type: !11605, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11627)
!11627 = !{!11628, !11629}
!11628 = !DILocalVariable(name: "list", arg: 1, scope: !11626, file: !411, line: 373, type: !11282)
!11629 = !DILocalVariable(name: "node", arg: 2, scope: !11626, file: !411, line: 373, type: !2995)
!11630 = !DILocation(line: 0, scope: !11626)
!11631 = !DILocation(line: 373, column: 1, scope: !11626)
!11632 = !DILocation(line: 373, column: 1, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11626, file: !411, line: 373, column: 1)
!11634 = !DILocation(line: 373, column: 1, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11633, file: !411, line: 373, column: 1)
!11636 = !DILocation(line: 373, column: 1, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !411, line: 373, column: 1)
!11638 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !411, file: !411, line: 218, type: !11639, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11641)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{null, !2995, !2995}
!11641 = !{!11642, !11643, !11644}
!11642 = !DILocalVariable(name: "parent", arg: 1, scope: !11638, file: !411, line: 218, type: !2995)
!11643 = !DILocalVariable(name: "child", arg: 2, scope: !11638, file: !411, line: 219, type: !2995)
!11644 = !DILocalVariable(name: "cur_flags", scope: !11638, file: !411, line: 221, type: !143)
!11645 = !DILocation(line: 0, scope: !11638)
!11646 = !DILocation(line: 221, column: 22, scope: !11638)
!11647 = !DILocation(line: 223, column: 27, scope: !11638)
!11648 = !DILocation(line: 223, column: 39, scope: !11638)
!11649 = !DILocation(line: 223, column: 37, scope: !11638)
!11650 = !DILocation(line: 223, column: 10, scope: !11638)
!11651 = !DILocation(line: 223, column: 25, scope: !11638)
!11652 = !DILocation(line: 224, column: 1, scope: !11638)
!11653 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !411, file: !411, line: 231, type: !11605, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11654)
!11654 = !{!11655, !11656}
!11655 = !DILocalVariable(name: "list", arg: 1, scope: !11653, file: !411, line: 231, type: !11282)
!11656 = !DILocalVariable(name: "node", arg: 2, scope: !11653, file: !411, line: 231, type: !2995)
!11657 = !DILocation(line: 0, scope: !11653)
!11658 = !DILocation(line: 233, column: 8, scope: !11653)
!11659 = !DILocation(line: 233, column: 13, scope: !11653)
!11660 = !DILocation(line: 234, column: 1, scope: !11653)
!11661 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !411, file: !411, line: 226, type: !11605, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11662)
!11662 = !{!11663, !11664}
!11663 = !DILocalVariable(name: "list", arg: 1, scope: !11661, file: !411, line: 226, type: !11282)
!11664 = !DILocalVariable(name: "node", arg: 2, scope: !11661, file: !411, line: 226, type: !2995)
!11665 = !DILocation(line: 0, scope: !11661)
!11666 = !DILocation(line: 228, column: 8, scope: !11661)
!11667 = !DILocation(line: 228, column: 13, scope: !11661)
!11668 = !DILocation(line: 229, column: 1, scope: !11661)
!11669 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !411, file: !411, line: 243, type: !11555, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11670)
!11670 = !{!11671}
!11671 = !DILocalVariable(name: "list", arg: 1, scope: !11669, file: !411, line: 243, type: !11282)
!11672 = !DILocation(line: 0, scope: !11669)
!11673 = !DILocation(line: 245, column: 15, scope: !11669)
!11674 = !DILocation(line: 245, column: 2, scope: !11669)
!11675 = distinct !DISubprogram(name: "k_queue_append", scope: !2986, file: !2986, line: 184, type: !11676, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11678)
!11676 = !DISubroutineType(types: !11677)
!11677 = !{null, !11251, !117}
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "queue", arg: 1, scope: !11675, file: !2986, line: 184, type: !11251)
!11680 = !DILocalVariable(name: "data", arg: 2, scope: !11675, file: !2986, line: 184, type: !117)
!11681 = !DILocation(line: 0, scope: !11675)
!11682 = !DILocation(line: 188, column: 8, scope: !11675)
!11683 = !DILocation(line: 191, column: 1, scope: !11675)
!11684 = distinct !DISubprogram(name: "k_queue_prepend", scope: !2986, file: !2986, line: 193, type: !11676, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11685)
!11685 = !{!11686, !11687}
!11686 = !DILocalVariable(name: "queue", arg: 1, scope: !11684, file: !2986, line: 193, type: !11251)
!11687 = !DILocalVariable(name: "data", arg: 2, scope: !11684, file: !2986, line: 193, type: !117)
!11688 = !DILocation(line: 0, scope: !11684)
!11689 = !DILocation(line: 197, column: 8, scope: !11684)
!11690 = !DILocation(line: 200, column: 1, scope: !11684)
!11691 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !2986, file: !2986, line: 202, type: !11692, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11694)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!356, !11251, !117}
!11694 = !{!11695, !11696, !11697}
!11695 = !DILocalVariable(name: "queue", arg: 1, scope: !11691, file: !2986, line: 202, type: !11251)
!11696 = !DILocalVariable(name: "data", arg: 2, scope: !11691, file: !2986, line: 202, type: !117)
!11697 = !DILocalVariable(name: "ret", scope: !11691, file: !2986, line: 206, type: !356)
!11698 = !DILocation(line: 0, scope: !11691)
!11699 = !DILocation(line: 206, column: 16, scope: !11691)
!11700 = !DILocation(line: 210, column: 2, scope: !11691)
!11701 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !2986, file: !2986, line: 223, type: !11692, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11702)
!11702 = !{!11703, !11704, !11705}
!11703 = !DILocalVariable(name: "queue", arg: 1, scope: !11701, file: !2986, line: 223, type: !11251)
!11704 = !DILocalVariable(name: "data", arg: 2, scope: !11701, file: !2986, line: 223, type: !117)
!11705 = !DILocalVariable(name: "ret", scope: !11701, file: !2986, line: 227, type: !356)
!11706 = !DILocation(line: 0, scope: !11701)
!11707 = !DILocation(line: 227, column: 16, scope: !11701)
!11708 = !DILocation(line: 231, column: 2, scope: !11701)
!11709 = distinct !DISubprogram(name: "k_queue_append_list", scope: !2986, file: !2986, line: 244, type: !11710, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11712)
!11710 = !DISubroutineType(types: !11711)
!11711 = !{!118, !11251, !117, !117}
!11712 = !{!11713, !11714, !11715, !11716, !11717}
!11713 = !DILocalVariable(name: "queue", arg: 1, scope: !11709, file: !2986, line: 244, type: !11251)
!11714 = !DILocalVariable(name: "head", arg: 2, scope: !11709, file: !2986, line: 244, type: !117)
!11715 = !DILocalVariable(name: "tail", arg: 3, scope: !11709, file: !2986, line: 244, type: !117)
!11716 = !DILocalVariable(name: "key", scope: !11709, file: !2986, line: 255, type: !11317)
!11717 = !DILocalVariable(name: "thread", scope: !11709, file: !2986, line: 256, type: !11322)
!11718 = !DILocation(line: 0, scope: !11709)
!11719 = !DILocation(line: 249, column: 2, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11709, file: !2986, line: 249, column: 2)
!11721 = !DILocation(line: 255, column: 45, scope: !11709)
!11722 = !DILocation(line: 0, scope: !11398, inlinedAt: !11723)
!11723 = distinct !DILocation(line: 255, column: 25, scope: !11709)
!11724 = !DILocation(line: 55, column: 2, scope: !11407, inlinedAt: !11725)
!11725 = distinct !DILocation(line: 145, column: 10, scope: !11398, inlinedAt: !11723)
!11726 = !DILocation(line: 0, scope: !11407, inlinedAt: !11725)
!11727 = !DILocation(line: 148, column: 2, scope: !11415, inlinedAt: !11723)
!11728 = !DILocation(line: 148, column: 2, scope: !11416, inlinedAt: !11723)
!11729 = !DILocation(line: 148, column: 2, scope: !11419, inlinedAt: !11723)
!11730 = !DILocation(line: 160, column: 2, scope: !11398, inlinedAt: !11723)
!11731 = !DILocation(line: 259, column: 42, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !2986, line: 258, column: 20)
!11733 = distinct !DILexicalBlock(scope: !11709, file: !2986, line: 258, column: 6)
!11734 = !DILocation(line: 259, column: 12, scope: !11732)
!11735 = !DILocation(line: 262, column: 24, scope: !11709)
!11736 = !DILocation(line: 262, column: 2, scope: !11709)
!11737 = !DILocation(line: 263, column: 3, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11709, file: !2986, line: 262, column: 45)
!11739 = !DILocation(line: 264, column: 11, scope: !11738)
!11740 = !DILocation(line: 264, column: 10, scope: !11738)
!11741 = !DILocation(line: 265, column: 12, scope: !11738)
!11742 = !DILocation(line: 262, column: 15, scope: !11709)
!11743 = distinct !{!11743, !11736, !11744}
!11744 = !DILocation(line: 266, column: 2, scope: !11709)
!11745 = !DILocation(line: 268, column: 6, scope: !11709)
!11746 = !DILocation(line: 269, column: 34, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !2986, line: 268, column: 20)
!11748 = distinct !DILexicalBlock(scope: !11709, file: !2986, line: 268, column: 6)
!11749 = !DILocation(line: 269, column: 3, scope: !11747)
!11750 = !DILocation(line: 270, column: 2, scope: !11747)
!11751 = !DILocation(line: 275, column: 2, scope: !11709)
!11752 = !DILocation(line: 277, column: 1, scope: !11709)
!11753 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !411, file: !411, line: 391, type: !11754, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11756)
!11754 = !DISubroutineType(types: !11755)
!11755 = !{null, !11282, !117, !117}
!11756 = !{!11757, !11758, !11759}
!11757 = !DILocalVariable(name: "list", arg: 1, scope: !11753, file: !411, line: 391, type: !11282)
!11758 = !DILocalVariable(name: "head", arg: 2, scope: !11753, file: !411, line: 391, type: !117)
!11759 = !DILocalVariable(name: "tail", arg: 3, scope: !11753, file: !411, line: 391, type: !117)
!11760 = !DILocation(line: 0, scope: !11753)
!11761 = !DILocation(line: 391, column: 1, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11753, file: !411, line: 391, column: 1)
!11763 = !DILocation(line: 391, column: 1, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !411, line: 391, column: 1)
!11765 = distinct !DILexicalBlock(scope: !11762, file: !411, line: 391, column: 1)
!11766 = !DILocation(line: 0, scope: !11764)
!11767 = !DILocation(line: 391, column: 1, scope: !11765)
!11768 = !DILocation(line: 391, column: 1, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !411, line: 391, column: 1)
!11770 = !DILocation(line: 391, column: 1, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11764, file: !411, line: 391, column: 1)
!11772 = !DILocation(line: 391, column: 1, scope: !11753)
!11773 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !2986, file: !2986, line: 279, type: !11774, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11788)
!11774 = !DISubroutineType(types: !11775)
!11775 = !{!118, !11251, !11776}
!11776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11777, size: 32)
!11777 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !11778)
!11778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !11779)
!11779 = !{!11780, !11787}
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11778, file: !187, line: 36, baseType: !11781, size: 32)
!11781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11782, size: 32)
!11782 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !11783)
!11783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !11784)
!11784 = !{!11785}
!11785 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11783, file: !187, line: 30, baseType: !11786, size: 32)
!11786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11783, size: 32)
!11787 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11778, file: !187, line: 37, baseType: !11781, size: 32, offset: 32)
!11788 = !{!11789, !11790, !11791}
!11789 = !DILocalVariable(name: "queue", arg: 1, scope: !11773, file: !2986, line: 279, type: !11251)
!11790 = !DILocalVariable(name: "list", arg: 2, scope: !11773, file: !2986, line: 279, type: !11776)
!11791 = !DILocalVariable(name: "ret", scope: !11773, file: !2986, line: 281, type: !118)
!11792 = !DILocation(line: 0, scope: !11773)
!11793 = !DILocation(line: 286, column: 2, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11773, file: !2986, line: 286, column: 2)
!11795 = !DILocation(line: 286, column: 2, scope: !11773)
!11796 = !DILocation(line: 301, column: 41, scope: !11773)
!11797 = !DILocation(line: 301, column: 53, scope: !11773)
!11798 = !DILocation(line: 301, column: 8, scope: !11773)
!11799 = !DILocation(line: 302, column: 2, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11773, file: !2986, line: 302, column: 2)
!11801 = !DILocation(line: 302, column: 2, scope: !11773)
!11802 = !DILocation(line: 307, column: 2, scope: !11773)
!11803 = !DILocation(line: 311, column: 2, scope: !11773)
!11804 = !DILocation(line: 312, column: 1, scope: !11773)
!11805 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !11806, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11808)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{!146, !11776}
!11808 = !{!11809}
!11809 = !DILocalVariable(name: "list", arg: 1, scope: !11805, file: !187, line: 261, type: !11776)
!11810 = !DILocation(line: 0, scope: !11805)
!11811 = !DILocation(line: 261, column: 1, scope: !11805)
!11812 = distinct !DISubprogram(name: "sys_slist_init", scope: !187, file: !187, line: 196, type: !11813, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11815)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{null, !11776}
!11815 = !{!11816}
!11816 = !DILocalVariable(name: "list", arg: 1, scope: !11812, file: !187, line: 196, type: !11776)
!11817 = !DILocation(line: 0, scope: !11812)
!11818 = !DILocation(line: 198, column: 8, scope: !11812)
!11819 = !DILocation(line: 198, column: 13, scope: !11812)
!11820 = !DILocation(line: 199, column: 8, scope: !11812)
!11821 = !DILocation(line: 199, column: 13, scope: !11812)
!11822 = !DILocation(line: 200, column: 1, scope: !11812)
!11823 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !11824, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11826)
!11824 = !DISubroutineType(types: !11825)
!11825 = !{!11781, !11776}
!11826 = !{!11827}
!11827 = !DILocalVariable(name: "list", arg: 1, scope: !11823, file: !187, line: 231, type: !11776)
!11828 = !DILocation(line: 0, scope: !11823)
!11829 = !DILocation(line: 233, column: 15, scope: !11823)
!11830 = !DILocation(line: 233, column: 2, scope: !11823)
!11831 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !2986, file: !2986, line: 314, type: !11832, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11838)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{!117, !11251, !11834}
!11834 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !11835)
!11835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !11836)
!11836 = !{!11837}
!11837 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11835, file: !114, line: 66, baseType: !113, size: 64)
!11838 = !{!11839, !11840, !11841, !11842, !11843, !11846}
!11839 = !DILocalVariable(name: "queue", arg: 1, scope: !11831, file: !2986, line: 314, type: !11251)
!11840 = !DILocalVariable(name: "timeout", arg: 2, scope: !11831, file: !2986, line: 314, type: !11834)
!11841 = !DILocalVariable(name: "key", scope: !11831, file: !2986, line: 316, type: !11317)
!11842 = !DILocalVariable(name: "data", scope: !11831, file: !2986, line: 317, type: !117)
!11843 = !DILocalVariable(name: "node", scope: !11844, file: !2986, line: 322, type: !2995)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !2986, line: 321, column: 52)
!11845 = distinct !DILexicalBlock(scope: !11831, file: !2986, line: 321, column: 6)
!11846 = !DILocalVariable(name: "ret", scope: !11831, file: !2986, line: 343, type: !118)
!11847 = !DILocation(line: 0, scope: !11831)
!11848 = !DILocation(line: 316, column: 45, scope: !11831)
!11849 = !DILocation(line: 0, scope: !11398, inlinedAt: !11850)
!11850 = distinct !DILocation(line: 316, column: 25, scope: !11831)
!11851 = !DILocation(line: 55, column: 2, scope: !11407, inlinedAt: !11852)
!11852 = distinct !DILocation(line: 145, column: 10, scope: !11398, inlinedAt: !11850)
!11853 = !DILocation(line: 0, scope: !11407, inlinedAt: !11852)
!11854 = !DILocation(line: 148, column: 2, scope: !11415, inlinedAt: !11850)
!11855 = !DILocation(line: 148, column: 2, scope: !11416, inlinedAt: !11850)
!11856 = !DILocation(line: 148, column: 2, scope: !11419, inlinedAt: !11850)
!11857 = !DILocation(line: 160, column: 2, scope: !11398, inlinedAt: !11850)
!11858 = !DILocation(line: 321, column: 6, scope: !11845)
!11859 = !DILocation(line: 321, column: 6, scope: !11831)
!11860 = !{!"branch_weights", i32 1, i32 2000}
!11861 = !DILocation(line: 324, column: 10, scope: !11844)
!11862 = !DILocation(line: 0, scope: !11844)
!11863 = !DILocation(line: 325, column: 10, scope: !11844)
!11864 = !DILocation(line: 0, scope: !11519, inlinedAt: !11865)
!11865 = distinct !DILocation(line: 326, column: 3, scope: !11844)
!11866 = !DILocation(line: 194, column: 2, scope: !11528, inlinedAt: !11865)
!11867 = !DILocation(line: 194, column: 2, scope: !11529, inlinedAt: !11865)
!11868 = !DILocation(line: 194, column: 2, scope: !11532, inlinedAt: !11865)
!11869 = !DILocation(line: 0, scope: !11534, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 215, column: 2, scope: !11519, inlinedAt: !11865)
!11871 = !DILocation(line: 95, column: 2, scope: !11534, inlinedAt: !11870)
!11872 = !DILocation(line: 335, column: 6, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11831, file: !2986, line: 335, column: 6)
!11874 = !DILocation(line: 335, column: 6, scope: !11831)
!11875 = !DILocation(line: 0, scope: !11519, inlinedAt: !11876)
!11876 = distinct !DILocation(line: 336, column: 3, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11873, file: !2986, line: 335, column: 40)
!11878 = !DILocation(line: 194, column: 2, scope: !11528, inlinedAt: !11876)
!11879 = !DILocation(line: 194, column: 2, scope: !11529, inlinedAt: !11876)
!11880 = !DILocation(line: 194, column: 2, scope: !11532, inlinedAt: !11876)
!11881 = !DILocation(line: 0, scope: !11534, inlinedAt: !11882)
!11882 = distinct !DILocation(line: 215, column: 2, scope: !11519, inlinedAt: !11876)
!11883 = !DILocation(line: 95, column: 2, scope: !11534, inlinedAt: !11882)
!11884 = !DILocation(line: 340, column: 3, scope: !11877)
!11885 = !DILocation(line: 343, column: 51, scope: !11831)
!11886 = !DILocation(line: 343, column: 12, scope: !11831)
!11887 = !DILocation(line: 348, column: 14, scope: !11831)
!11888 = !DILocation(line: 348, column: 9, scope: !11831)
!11889 = !DILocation(line: 348, column: 29, scope: !11831)
!11890 = !DILocation(line: 348, column: 44, scope: !11831)
!11891 = !DILocation(line: 349, column: 1, scope: !11831)
!11892 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !411, file: !411, line: 323, type: !11893, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11895)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{!146, !11282}
!11895 = !{!11896}
!11896 = !DILocalVariable(name: "list", arg: 1, scope: !11892, file: !411, line: 323, type: !11282)
!11897 = !DILocation(line: 0, scope: !11892)
!11898 = !DILocation(line: 323, column: 1, scope: !11892)
!11899 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !411, file: !411, line: 434, type: !11555, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11900)
!11900 = !{!11901, !11902}
!11901 = !DILocalVariable(name: "list", arg: 1, scope: !11899, file: !411, line: 434, type: !11282)
!11902 = !DILocalVariable(name: "node", scope: !11899, file: !411, line: 434, type: !2995)
!11903 = !DILocation(line: 0, scope: !11899)
!11904 = !DILocation(line: 434, column: 1, scope: !11899)
!11905 = !DILocation(line: 434, column: 1, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11899, file: !411, line: 434, column: 1)
!11907 = !DILocation(line: 434, column: 1, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11906, file: !411, line: 434, column: 1)
!11909 = distinct !DISubprogram(name: "k_queue_remove", scope: !2986, file: !2986, line: 351, type: !11910, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11912)
!11910 = !DISubroutineType(types: !11911)
!11911 = !{!146, !11251, !117}
!11912 = !{!11913, !11914, !11915}
!11913 = !DILocalVariable(name: "queue", arg: 1, scope: !11909, file: !2986, line: 351, type: !11251)
!11914 = !DILocalVariable(name: "data", arg: 2, scope: !11909, file: !2986, line: 351, type: !117)
!11915 = !DILocalVariable(name: "ret", scope: !11909, file: !2986, line: 355, type: !146)
!11916 = !DILocation(line: 0, scope: !11909)
!11917 = !DILocation(line: 355, column: 48, scope: !11909)
!11918 = !DILocation(line: 355, column: 56, scope: !11909)
!11919 = !DILocation(line: 355, column: 13, scope: !11909)
!11920 = !DILocation(line: 359, column: 2, scope: !11909)
!11921 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !411, file: !411, line: 478, type: !11922, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!146, !11282, !2995}
!11924 = !{!11925, !11926, !11927, !11928}
!11925 = !DILocalVariable(name: "list", arg: 1, scope: !11921, file: !411, line: 478, type: !11282)
!11926 = !DILocalVariable(name: "node", arg: 2, scope: !11921, file: !411, line: 478, type: !2995)
!11927 = !DILocalVariable(name: "prev", scope: !11921, file: !411, line: 478, type: !2995)
!11928 = !DILocalVariable(name: "test", scope: !11921, file: !411, line: 478, type: !2995)
!11929 = !DILocation(line: 0, scope: !11921)
!11930 = !DILocation(line: 478, column: 1, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11921, file: !411, line: 478, column: 1)
!11932 = !DILocation(line: 478, column: 1, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11931, file: !411, line: 478, column: 1)
!11934 = !DILocation(line: 478, column: 1, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !411, line: 478, column: 1)
!11936 = distinct !DILexicalBlock(scope: !11933, file: !411, line: 478, column: 1)
!11937 = !DILocation(line: 478, column: 1, scope: !11936)
!11938 = distinct !{!11938, !11930, !11930}
!11939 = !DILocation(line: 478, column: 1, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11935, file: !411, line: 478, column: 1)
!11941 = !DILocation(line: 478, column: 1, scope: !11921)
!11942 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !411, file: !411, line: 463, type: !11586, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11943)
!11943 = !{!11944, !11945, !11946}
!11944 = !DILocalVariable(name: "list", arg: 1, scope: !11942, file: !411, line: 463, type: !11282)
!11945 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11942, file: !411, line: 463, type: !2995)
!11946 = !DILocalVariable(name: "node", arg: 3, scope: !11942, file: !411, line: 463, type: !2995)
!11947 = !DILocation(line: 0, scope: !11942)
!11948 = !DILocation(line: 463, column: 1, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11942, file: !411, line: 463, column: 1)
!11950 = !DILocation(line: 0, scope: !11949)
!11951 = !DILocation(line: 463, column: 1, scope: !11942)
!11952 = !DILocation(line: 463, column: 1, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11949, file: !411, line: 463, column: 1)
!11954 = !DILocation(line: 463, column: 1, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11953, file: !411, line: 463, column: 1)
!11956 = !DILocation(line: 463, column: 1, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11955, file: !411, line: 463, column: 1)
!11958 = !DILocation(line: 463, column: 1, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11949, file: !411, line: 463, column: 1)
!11960 = !DILocation(line: 463, column: 1, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11959, file: !411, line: 463, column: 1)
!11962 = !DILocation(line: 463, column: 1, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11961, file: !411, line: 463, column: 1)
!11964 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !411, file: !411, line: 347, type: !11617, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11965)
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "node", arg: 1, scope: !11964, file: !411, line: 347, type: !2995)
!11967 = !DILocation(line: 0, scope: !11964)
!11968 = !DILocation(line: 347, column: 1, scope: !11964)
!11969 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !411, file: !411, line: 336, type: !11617, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11970)
!11970 = !{!11971}
!11971 = !DILocalVariable(name: "node", arg: 1, scope: !11969, file: !411, line: 336, type: !2995)
!11972 = !DILocation(line: 0, scope: !11969)
!11973 = !DILocation(line: 336, column: 1, scope: !11969)
!11974 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !2986, file: !2986, line: 362, type: !11910, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11975)
!11975 = !{!11976, !11977, !11978}
!11976 = !DILocalVariable(name: "queue", arg: 1, scope: !11974, file: !2986, line: 362, type: !11251)
!11977 = !DILocalVariable(name: "data", arg: 2, scope: !11974, file: !2986, line: 362, type: !117)
!11978 = !DILocalVariable(name: "test", scope: !11974, file: !2986, line: 366, type: !2995)
!11979 = !DILocation(line: 0, scope: !11974)
!11980 = !DILocation(line: 368, column: 2, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11974, file: !2986, line: 368, column: 2)
!11982 = !DILocation(line: 368, column: 2, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11981, file: !2986, line: 368, column: 2)
!11984 = !DILocation(line: 369, column: 12, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !2986, line: 369, column: 7)
!11986 = distinct !DILexicalBlock(scope: !11983, file: !2986, line: 368, column: 49)
!11987 = !DILocation(line: 369, column: 7, scope: !11986)
!11988 = distinct !{!11988, !11980, !11989}
!11989 = !DILocation(line: 374, column: 2, scope: !11981)
!11990 = !DILocation(line: 376, column: 2, scope: !11974)
!11991 = !DILocation(line: 380, column: 2, scope: !11974)
!11992 = !DILocation(line: 381, column: 1, scope: !11974)
!11993 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !2986, file: !2986, line: 383, type: !11994, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !11996)
!11994 = !DISubroutineType(types: !11995)
!11995 = !{!117, !11251}
!11996 = !{!11997, !11998}
!11997 = !DILocalVariable(name: "queue", arg: 1, scope: !11993, file: !2986, line: 383, type: !11251)
!11998 = !DILocalVariable(name: "ret", scope: !11993, file: !2986, line: 385, type: !117)
!11999 = !DILocation(line: 0, scope: !11993)
!12000 = !DILocation(line: 385, column: 61, scope: !11993)
!12001 = !DILocation(line: 385, column: 32, scope: !11993)
!12002 = !DILocation(line: 385, column: 14, scope: !11993)
!12003 = !DILocation(line: 389, column: 2, scope: !11993)
!12004 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !2986, file: !2986, line: 392, type: !11994, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2970, retainedNodes: !12005)
!12005 = !{!12006, !12007}
!12006 = !DILocalVariable(name: "queue", arg: 1, scope: !12004, file: !2986, line: 392, type: !11251)
!12007 = !DILocalVariable(name: "ret", scope: !12004, file: !2986, line: 394, type: !117)
!12008 = !DILocation(line: 0, scope: !12004)
!12009 = !DILocation(line: 394, column: 61, scope: !12004)
!12010 = !DILocation(line: 394, column: 32, scope: !12004)
!12011 = !DILocation(line: 394, column: 14, scope: !12004)
!12012 = !DILocation(line: 398, column: 2, scope: !12004)
!12013 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2211, file: !2211, line: 93, type: !12014, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12016)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{!356, !2110, !2110}
!12016 = !{!12017, !12018, !12019, !12020}
!12017 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12013, file: !2211, line: 93, type: !2110)
!12018 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12013, file: !2211, line: 94, type: !2110)
!12019 = !DILocalVariable(name: "b1", scope: !12013, file: !2211, line: 97, type: !356)
!12020 = !DILocalVariable(name: "b2", scope: !12013, file: !2211, line: 98, type: !356)
!12021 = !DILocation(line: 0, scope: !12013)
!12022 = !DILocation(line: 97, column: 30, scope: !12013)
!12023 = !DILocation(line: 98, column: 30, scope: !12013)
!12024 = !DILocation(line: 100, column: 9, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12013, file: !2211, line: 100, column: 6)
!12026 = !DILocation(line: 100, column: 6, scope: !12013)
!12027 = !DILocation(line: 125, column: 1, scope: !12013)
!12028 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2211, file: !2211, line: 428, type: !12029, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12031)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{null, !2110}
!12031 = !{!12032}
!12032 = !DILocalVariable(name: "curr", arg: 1, scope: !12028, file: !2211, line: 428, type: !2110)
!12033 = !DILocation(line: 0, scope: !12028)
!12034 = !DILocation(line: 434, column: 6, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12028, file: !2211, line: 434, column: 6)
!12036 = !DILocation(line: 434, column: 23, scope: !12035)
!12037 = !DILocation(line: 434, column: 6, scope: !12028)
!12038 = !DILocation(line: 435, column: 50, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12035, file: !2211, line: 434, column: 29)
!12040 = !DILocation(line: 435, column: 48, scope: !12039)
!12041 = !DILocation(line: 435, column: 29, scope: !12039)
!12042 = !DILocation(line: 436, column: 24, scope: !12039)
!12043 = !DILocation(line: 436, column: 3, scope: !12039)
!12044 = !DILocation(line: 437, column: 2, scope: !12039)
!12045 = !DILocation(line: 438, column: 1, scope: !12028)
!12046 = distinct !DISubprogram(name: "slice_time", scope: !2211, file: !2211, line: 407, type: !12047, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12049)
!12047 = !DISubroutineType(types: !12048)
!12048 = !{!118, !2110}
!12049 = !{!12050, !12051}
!12050 = !DILocalVariable(name: "curr", arg: 1, scope: !12046, file: !2211, line: 407, type: !2110)
!12051 = !DILocalVariable(name: "ret", scope: !12046, file: !2211, line: 409, type: !118)
!12052 = !DILocation(line: 0, scope: !12046)
!12053 = !DILocation(line: 409, column: 12, scope: !12046)
!12054 = !DILocation(line: 416, column: 2, scope: !12046)
!12055 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2211, file: !2211, line: 440, type: !12056, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12058)
!12056 = !DISubroutineType(types: !12057)
!12057 = !{null, !356, !118}
!12058 = !{!12059, !12060, !12061, !12067}
!12059 = !DILocalVariable(name: "slice", arg: 1, scope: !12055, file: !2211, line: 440, type: !356)
!12060 = !DILocalVariable(name: "prio", arg: 2, scope: !12055, file: !2211, line: 440, type: !118)
!12061 = !DILocalVariable(name: "__i", scope: !12062, file: !2211, line: 442, type: !12063)
!12062 = distinct !DILexicalBlock(scope: !12055, file: !2211, line: 442, column: 2)
!12063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !328, line: 106, baseType: !12064)
!12064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !328, line: 32, size: 32, elements: !12065)
!12065 = !{!12066}
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12064, file: !328, line: 33, baseType: !118, size: 32)
!12067 = !DILocalVariable(name: "__key", scope: !12062, file: !2211, line: 442, type: !12063)
!12068 = !DILocation(line: 0, scope: !12055)
!12069 = !DILocation(line: 0, scope: !12062)
!12070 = !DILocalVariable(name: "l", arg: 1, scope: !12071, file: !328, line: 136, type: !12074)
!12071 = distinct !DISubprogram(name: "k_spin_lock", scope: !328, file: !328, line: 136, type: !12072, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12075)
!12072 = !DISubroutineType(types: !12073)
!12073 = !{!12063, !12074}
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!12075 = !{!12070, !12076}
!12076 = !DILocalVariable(name: "k", scope: !12071, file: !328, line: 139, type: !12063)
!12077 = !DILocation(line: 0, scope: !12071, inlinedAt: !12078)
!12078 = distinct !DILocation(line: 442, column: 2, scope: !12062)
!12079 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12084)
!12080 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12081)
!12081 = !{!12082, !12083}
!12082 = !DILocalVariable(name: "key", scope: !12080, file: !6230, line: 44, type: !32)
!12083 = !DILocalVariable(name: "tmp", scope: !12080, file: !6230, line: 53, type: !32)
!12084 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12078)
!12085 = !{i64 2887303}
!12086 = !DILocation(line: 0, scope: !12080, inlinedAt: !12084)
!12087 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12078)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !328, line: 148, column: 2)
!12089 = distinct !DILexicalBlock(scope: !12071, file: !328, line: 148, column: 2)
!12090 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12078)
!12091 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12078)
!12092 = distinct !DILexicalBlock(scope: !12088, file: !328, line: 148, column: 2)
!12093 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12078)
!12094 = !DILocation(line: 443, column: 29, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !2211, line: 442, column: 26)
!12096 = distinct !DILexicalBlock(scope: !12062, file: !2211, line: 442, column: 2)
!12097 = !DILocation(line: 444, column: 17, scope: !12095)
!12098 = !DILocation(line: 445, column: 51, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12095, file: !2211, line: 445, column: 7)
!12100 = !DILocation(line: 445, column: 7, scope: !12095)
!12101 = !DILocation(line: 0, scope: !12095)
!12102 = !DILocation(line: 451, column: 18, scope: !12095)
!12103 = !DILocation(line: 452, column: 3, scope: !12095)
!12104 = !DILocalVariable(name: "key", arg: 2, scope: !12105, file: !328, line: 190, type: !12063)
!12105 = distinct !DISubprogram(name: "k_spin_unlock", scope: !328, file: !328, line: 189, type: !12106, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12108)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{null, !12074, !12063}
!12108 = !{!12109, !12104}
!12109 = !DILocalVariable(name: "l", arg: 1, scope: !12105, file: !328, line: 189, type: !12074)
!12110 = !DILocation(line: 0, scope: !12105, inlinedAt: !12111)
!12111 = distinct !DILocation(line: 442, column: 2, scope: !12096)
!12112 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12111)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !328, line: 194, column: 2)
!12114 = distinct !DILexicalBlock(scope: !12105, file: !328, line: 194, column: 2)
!12115 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12111)
!12116 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12111)
!12117 = distinct !DILexicalBlock(scope: !12113, file: !328, line: 194, column: 2)
!12118 = !DILocalVariable(name: "key", arg: 1, scope: !12119, file: !6230, line: 84, type: !32)
!12119 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12120)
!12120 = !{!12118}
!12121 = !DILocation(line: 0, scope: !12119, inlinedAt: !12122)
!12122 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12111)
!12123 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12122)
!12124 = !{i64 2888120}
!12125 = !DILocation(line: 454, column: 1, scope: !12055)
!12126 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3262, file: !3262, line: 389, type: !12127, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12129)
!12127 = !DISubroutineType(types: !12128)
!12128 = !{!156, !156}
!12129 = !{!12130}
!12130 = !DILocalVariable(name: "t", arg: 1, scope: !12126, file: !3262, line: 389, type: !156)
!12131 = !DILocation(line: 0, scope: !12126)
!12132 = !DILocalVariable(name: "t", arg: 1, scope: !12133, file: !3262, line: 102, type: !213)
!12133 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3270, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12134)
!12134 = !{!12132, !12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143, !12144}
!12135 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12133, file: !3262, line: 102, type: !156)
!12136 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12133, file: !3262, line: 103, type: !156)
!12137 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12133, file: !3262, line: 103, type: !146)
!12138 = !DILocalVariable(name: "result32", arg: 5, scope: !12133, file: !3262, line: 104, type: !146)
!12139 = !DILocalVariable(name: "round_up", arg: 6, scope: !12133, file: !3262, line: 104, type: !146)
!12140 = !DILocalVariable(name: "round_off", arg: 7, scope: !12133, file: !3262, line: 105, type: !146)
!12141 = !DILocalVariable(name: "mul_ratio", scope: !12133, file: !3262, line: 107, type: !146)
!12142 = !DILocalVariable(name: "div_ratio", scope: !12133, file: !3262, line: 109, type: !146)
!12143 = !DILocalVariable(name: "off", scope: !12133, file: !3262, line: 116, type: !213)
!12144 = !DILocalVariable(name: "rdivisor", scope: !12145, file: !3262, line: 119, type: !156)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3262, line: 118, column: 18)
!12146 = distinct !DILexicalBlock(scope: !12133, file: !3262, line: 118, column: 6)
!12147 = !DILocation(line: 0, scope: !12133, inlinedAt: !12148)
!12148 = distinct !DILocation(line: 392, column: 9, scope: !12126)
!12149 = !DILocation(line: 143, column: 25, scope: !12150, inlinedAt: !12148)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !3262, line: 142, column: 17)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !3262, line: 142, column: 7)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !3262, line: 141, column: 24)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !3262, line: 141, column: 13)
!12154 = distinct !DILexicalBlock(scope: !12133, file: !3262, line: 134, column: 6)
!12155 = !DILocation(line: 392, column: 2, scope: !12126)
!12156 = distinct !DISubprogram(name: "z_time_slice", scope: !2211, file: !2211, line: 502, type: !10434, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12157)
!12157 = !{!12158, !12159}
!12158 = !DILocalVariable(name: "ticks", arg: 1, scope: !12156, file: !2211, line: 502, type: !118)
!12159 = !DILocalVariable(name: "key", scope: !12156, file: !2211, line: 511, type: !12063)
!12160 = !DILocation(line: 0, scope: !12156)
!12161 = !DILocation(line: 0, scope: !12071, inlinedAt: !12162)
!12162 = distinct !DILocation(line: 511, column: 25, scope: !12156)
!12163 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12162)
!12165 = !DILocation(line: 0, scope: !12080, inlinedAt: !12164)
!12166 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12162)
!12167 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12162)
!12168 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12162)
!12169 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12162)
!12170 = !DILocation(line: 514, column: 6, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12156, file: !2211, line: 514, column: 6)
!12172 = !DILocation(line: 514, column: 25, scope: !12171)
!12173 = !DILocation(line: 514, column: 22, scope: !12171)
!12174 = !DILocation(line: 514, column: 6, scope: !12156)
!12175 = !DILocation(line: 515, column: 3, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12171, file: !2211, line: 514, column: 35)
!12177 = !DILocation(line: 0, scope: !12105, inlinedAt: !12178)
!12178 = distinct !DILocation(line: 516, column: 3, scope: !12176)
!12179 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12178)
!12180 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12178)
!12181 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12178)
!12182 = !DILocation(line: 0, scope: !12119, inlinedAt: !12183)
!12183 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12178)
!12184 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12183)
!12185 = !DILocation(line: 517, column: 3, scope: !12176)
!12186 = !DILocation(line: 519, column: 18, scope: !12156)
!12187 = !DILocation(line: 522, column: 6, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12156, file: !2211, line: 522, column: 6)
!12189 = !DILocation(line: 522, column: 27, scope: !12188)
!12190 = !DILocation(line: 522, column: 30, scope: !12188)
!12191 = !DILocation(line: 522, column: 6, scope: !12156)
!12192 = !DILocation(line: 523, column: 30, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !2211, line: 523, column: 7)
!12194 = distinct !DILexicalBlock(scope: !12188, file: !2211, line: 522, column: 51)
!12195 = !DILocation(line: 523, column: 13, scope: !12193)
!12196 = !DILocation(line: 523, column: 7, scope: !12194)
!12197 = !DILocation(line: 530, column: 10, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12193, file: !2211, line: 523, column: 43)
!12199 = !DILocation(line: 531, column: 3, scope: !12198)
!12200 = !DILocation(line: 532, column: 30, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12193, file: !2211, line: 531, column: 10)
!12202 = !DILocation(line: 535, column: 29, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12188, file: !2211, line: 534, column: 9)
!12204 = !DILocation(line: 0, scope: !12105, inlinedAt: !12205)
!12205 = distinct !DILocation(line: 537, column: 2, scope: !12156)
!12206 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12205)
!12207 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12205)
!12208 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12205)
!12209 = !DILocation(line: 0, scope: !12119, inlinedAt: !12210)
!12210 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12205)
!12211 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12210)
!12212 = !DILocation(line: 538, column: 1, scope: !12156)
!12213 = distinct !DISubprogram(name: "sliceable", scope: !2211, file: !2211, line: 468, type: !12214, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12216)
!12214 = !DISubroutineType(types: !12215)
!12215 = !{!146, !2110}
!12216 = !{!12217, !12218}
!12217 = !DILocalVariable(name: "thread", arg: 1, scope: !12213, file: !2211, line: 468, type: !2110)
!12218 = !DILocalVariable(name: "ret", scope: !12213, file: !2211, line: 470, type: !146)
!12219 = !DILocation(line: 0, scope: !12213)
!12220 = !DILocation(line: 470, column: 13, scope: !12213)
!12221 = !DILocation(line: 471, column: 3, scope: !12213)
!12222 = !DILocation(line: 471, column: 7, scope: !12213)
!12223 = !DILocation(line: 472, column: 3, scope: !12213)
!12224 = !DILocation(line: 472, column: 37, scope: !12213)
!12225 = !DILocation(line: 472, column: 24, scope: !12213)
!12226 = !DILocation(line: 472, column: 43, scope: !12213)
!12227 = !DILocation(line: 472, column: 7, scope: !12213)
!12228 = !DILocation(line: 473, column: 3, scope: !12213)
!12229 = !DILocation(line: 473, column: 7, scope: !12213)
!12230 = !DILocation(line: 473, column: 6, scope: !12213)
!12231 = !DILocation(line: 479, column: 2, scope: !12213)
!12232 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2211, file: !2211, line: 482, type: !12233, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12235)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!12063, !12063}
!12235 = !{!12236, !12237}
!12236 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12232, file: !2211, line: 482, type: !12063)
!12237 = !DILocalVariable(name: "curr", scope: !12232, file: !2211, line: 484, type: !2110)
!12238 = !DILocation(line: 0, scope: !12232)
!12239 = !DILocation(line: 484, column: 26, scope: !12232)
!12240 = !DILocation(line: 493, column: 7, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12232, file: !2211, line: 493, column: 6)
!12242 = !DILocation(line: 493, column: 6, scope: !12232)
!12243 = !DILocation(line: 494, column: 3, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12241, file: !2211, line: 493, column: 49)
!12245 = !DILocation(line: 495, column: 2, scope: !12244)
!12246 = !DILocation(line: 496, column: 2, scope: !12232)
!12247 = !DILocation(line: 499, column: 1, scope: !12232)
!12248 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10477, file: !10477, line: 106, type: !12214, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12249)
!12249 = !{!12250, !12251}
!12250 = !DILocalVariable(name: "thread", arg: 1, scope: !12248, file: !10477, line: 106, type: !2110)
!12251 = !DILocalVariable(name: "state", scope: !12248, file: !10477, line: 108, type: !143)
!12252 = !DILocation(line: 0, scope: !12248)
!12253 = !DILocation(line: 108, column: 31, scope: !12248)
!12254 = !DILocation(line: 110, column: 16, scope: !12248)
!12255 = !DILocation(line: 111, column: 41, scope: !12248)
!12256 = !DILocation(line: 110, column: 2, scope: !12248)
!12257 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2211, file: !2211, line: 393, type: !12029, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12258)
!12258 = !{!12259}
!12259 = !DILocalVariable(name: "thread", arg: 1, scope: !12257, file: !2211, line: 393, type: !2110)
!12260 = !DILocation(line: 0, scope: !12257)
!12261 = !DILocation(line: 395, column: 6, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12257, file: !2211, line: 395, column: 6)
!12263 = !DILocation(line: 395, column: 6, scope: !12257)
!12264 = !DILocalVariable(name: "thread", arg: 1, scope: !12265, file: !2211, line: 264, type: !2110)
!12265 = distinct !DISubprogram(name: "dequeue_thread", scope: !2211, file: !2211, line: 264, type: !12029, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12266)
!12266 = !{!12264}
!12267 = !DILocation(line: 0, scope: !12265, inlinedAt: !12268)
!12268 = distinct !DILocation(line: 396, column: 3, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12262, file: !2211, line: 395, column: 34)
!12270 = !DILocation(line: 266, column: 15, scope: !12265, inlinedAt: !12268)
!12271 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !12268)
!12272 = !DILocalVariable(name: "thread", arg: 1, scope: !12273, file: !2211, line: 232, type: !2110)
!12273 = distinct !DISubprogram(name: "runq_remove", scope: !2211, file: !2211, line: 232, type: !12029, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12274)
!12274 = !{!12272}
!12275 = !DILocation(line: 0, scope: !12273, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !12268)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !2211, line: 267, column: 35)
!12278 = distinct !DILexicalBlock(scope: !12265, file: !2211, line: 267, column: 6)
!12279 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !12276)
!12280 = !DILocation(line: 397, column: 2, scope: !12269)
!12281 = !DILocalVariable(name: "thread", arg: 1, scope: !12282, file: !2211, line: 250, type: !2110)
!12282 = distinct !DISubprogram(name: "queue_thread", scope: !2211, file: !2211, line: 250, type: !12029, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12283)
!12283 = !{!12281}
!12284 = !DILocation(line: 0, scope: !12282, inlinedAt: !12285)
!12285 = distinct !DILocation(line: 398, column: 2, scope: !12257)
!12286 = !DILocation(line: 252, column: 15, scope: !12282, inlinedAt: !12285)
!12287 = !DILocation(line: 252, column: 28, scope: !12282, inlinedAt: !12285)
!12288 = !DILocalVariable(name: "thread", arg: 1, scope: !12289, file: !2211, line: 227, type: !2110)
!12289 = distinct !DISubprogram(name: "runq_add", scope: !2211, file: !2211, line: 227, type: !12029, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12290)
!12290 = !{!12288}
!12291 = !DILocation(line: 0, scope: !12289, inlinedAt: !12292)
!12292 = distinct !DILocation(line: 254, column: 3, scope: !12293, inlinedAt: !12285)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !2211, line: 253, column: 35)
!12294 = distinct !DILexicalBlock(scope: !12282, file: !2211, line: 253, column: 6)
!12295 = !DILocalVariable(name: "pq", arg: 1, scope: !12296, file: !2211, line: 181, type: !12299)
!12296 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2211, file: !2211, line: 181, type: !12297, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12300)
!12297 = !DISubroutineType(types: !12298)
!12298 = !{null, !12299, !2110}
!12299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!12300 = !{!12295, !12301, !12302}
!12301 = !DILocalVariable(name: "thread", arg: 2, scope: !12296, file: !2211, line: 182, type: !2110)
!12302 = !DILocalVariable(name: "t", scope: !12296, file: !2211, line: 184, type: !2110)
!12303 = !DILocation(line: 0, scope: !12296, inlinedAt: !12304)
!12304 = distinct !DILocation(line: 229, column: 2, scope: !12289, inlinedAt: !12292)
!12305 = !DILocation(line: 186, column: 2, scope: !12306, inlinedAt: !12304)
!12306 = distinct !DILexicalBlock(scope: !12307, file: !2211, line: 186, column: 2)
!12307 = distinct !DILexicalBlock(scope: !12296, file: !2211, line: 186, column: 2)
!12308 = !DILocation(line: 186, column: 2, scope: !12307, inlinedAt: !12304)
!12309 = !DILocation(line: 186, column: 2, scope: !12310, inlinedAt: !12304)
!12310 = distinct !DILexicalBlock(scope: !12306, file: !2211, line: 186, column: 2)
!12311 = !DILocation(line: 188, column: 2, scope: !12312, inlinedAt: !12304)
!12312 = distinct !DILexicalBlock(scope: !12296, file: !2211, line: 188, column: 2)
!12313 = !DILocation(line: 188, column: 2, scope: !12314, inlinedAt: !12304)
!12314 = distinct !DILexicalBlock(scope: !12312, file: !2211, line: 188, column: 2)
!12315 = !DILocation(line: 0, scope: !12312, inlinedAt: !12304)
!12316 = !DILocation(line: 189, column: 7, scope: !12317, inlinedAt: !12304)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !2211, line: 189, column: 7)
!12318 = distinct !DILexicalBlock(scope: !12314, file: !2211, line: 188, column: 56)
!12319 = !DILocation(line: 189, column: 35, scope: !12317, inlinedAt: !12304)
!12320 = !DILocation(line: 189, column: 7, scope: !12318, inlinedAt: !12304)
!12321 = !DILocation(line: 191, column: 21, scope: !12322, inlinedAt: !12304)
!12322 = distinct !DILexicalBlock(scope: !12317, file: !2211, line: 189, column: 40)
!12323 = !DILocation(line: 190, column: 4, scope: !12322, inlinedAt: !12304)
!12324 = !DILocation(line: 192, column: 4, scope: !12322, inlinedAt: !12304)
!12325 = distinct !{!12325, !12311, !12326}
!12326 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12304)
!12327 = !DILocation(line: 196, column: 37, scope: !12296, inlinedAt: !12304)
!12328 = !DILocation(line: 196, column: 2, scope: !12296, inlinedAt: !12304)
!12329 = !DILocation(line: 197, column: 1, scope: !12296, inlinedAt: !12304)
!12330 = !DILocation(line: 399, column: 25, scope: !12257)
!12331 = !DILocation(line: 399, column: 22, scope: !12257)
!12332 = !DILocation(line: 399, column: 2, scope: !12257)
!12333 = !DILocation(line: 400, column: 1, scope: !12257)
!12334 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10477, file: !10477, line: 136, type: !12214, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12335)
!12335 = !{!12336}
!12336 = !DILocalVariable(name: "thread", arg: 1, scope: !12334, file: !10477, line: 136, type: !2110)
!12337 = !DILocation(line: 0, scope: !12334)
!12338 = !DILocation(line: 138, column: 9, scope: !12334)
!12339 = !DILocation(line: 138, column: 2, scope: !12334)
!12340 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2211, file: !2211, line: 1137, type: !12297, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12341)
!12341 = !{!12342, !12343}
!12342 = !DILocalVariable(name: "pq", arg: 1, scope: !12340, file: !2211, line: 1137, type: !12299)
!12343 = !DILocalVariable(name: "thread", arg: 2, scope: !12340, file: !2211, line: 1137, type: !2110)
!12344 = !DILocation(line: 0, scope: !12340)
!12345 = !DILocation(line: 1139, column: 2, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !2211, line: 1139, column: 2)
!12347 = distinct !DILexicalBlock(scope: !12340, file: !2211, line: 1139, column: 2)
!12348 = !DILocation(line: 1139, column: 2, scope: !12347)
!12349 = !DILocation(line: 1139, column: 2, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12346, file: !2211, line: 1139, column: 2)
!12351 = !DILocation(line: 1141, column: 33, scope: !12340)
!12352 = !DILocation(line: 1141, column: 2, scope: !12340)
!12353 = !DILocation(line: 1142, column: 1, scope: !12340)
!12354 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10477, file: !10477, line: 83, type: !12214, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12355)
!12355 = !{!12356}
!12356 = !DILocalVariable(name: "thread", arg: 1, scope: !12354, file: !10477, line: 83, type: !2110)
!12357 = !DILocation(line: 0, scope: !12354)
!12358 = !DILocation(line: 89, column: 16, scope: !12354)
!12359 = !DILocation(line: 89, column: 2, scope: !12354)
!12360 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !12361, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12363)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!2207, !12299}
!12363 = !{!12364}
!12364 = !DILocalVariable(name: "list", arg: 1, scope: !12360, file: !235, line: 294, type: !12299)
!12365 = !DILocation(line: 0, scope: !12360)
!12366 = !DILocation(line: 296, column: 9, scope: !12360)
!12367 = !DILocation(line: 296, column: 49, scope: !12360)
!12368 = !DILocation(line: 296, column: 2, scope: !12360)
!12369 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !12370, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12372)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{null, !2207, !2207}
!12372 = !{!12373, !12374, !12375}
!12373 = !DILocalVariable(name: "successor", arg: 1, scope: !12369, file: !235, line: 443, type: !2207)
!12374 = !DILocalVariable(name: "node", arg: 2, scope: !12369, file: !235, line: 443, type: !2207)
!12375 = !DILocalVariable(name: "prev", scope: !12369, file: !235, line: 445, type: !12376)
!12376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2207)
!12377 = !DILocation(line: 0, scope: !12369)
!12378 = !DILocation(line: 445, column: 39, scope: !12369)
!12379 = !DILocation(line: 447, column: 8, scope: !12369)
!12380 = !DILocation(line: 447, column: 13, scope: !12369)
!12381 = !DILocation(line: 448, column: 8, scope: !12369)
!12382 = !DILocation(line: 448, column: 13, scope: !12369)
!12383 = !DILocation(line: 449, column: 8, scope: !12369)
!12384 = !DILocation(line: 449, column: 13, scope: !12369)
!12385 = !DILocation(line: 450, column: 18, scope: !12369)
!12386 = !DILocation(line: 451, column: 1, scope: !12369)
!12387 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !12388, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12390)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!2207, !12299, !2207}
!12390 = !{!12391, !12392}
!12391 = !DILocalVariable(name: "list", arg: 1, scope: !12387, file: !235, line: 341, type: !12299)
!12392 = !DILocalVariable(name: "node", arg: 2, scope: !12387, file: !235, line: 342, type: !2207)
!12393 = !DILocation(line: 0, scope: !12387)
!12394 = !DILocation(line: 344, column: 15, scope: !12387)
!12395 = !DILocation(line: 344, column: 9, scope: !12387)
!12396 = !DILocation(line: 344, column: 26, scope: !12387)
!12397 = !DILocation(line: 344, column: 2, scope: !12387)
!12398 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !12399, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12401)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{null, !12299, !2207}
!12401 = !{!12402, !12403, !12404}
!12402 = !DILocalVariable(name: "list", arg: 1, scope: !12398, file: !235, line: 404, type: !12299)
!12403 = !DILocalVariable(name: "node", arg: 2, scope: !12398, file: !235, line: 404, type: !2207)
!12404 = !DILocalVariable(name: "tail", scope: !12398, file: !235, line: 406, type: !12376)
!12405 = !DILocation(line: 0, scope: !12398)
!12406 = !DILocation(line: 406, column: 34, scope: !12398)
!12407 = !DILocation(line: 408, column: 8, scope: !12398)
!12408 = !DILocation(line: 408, column: 13, scope: !12398)
!12409 = !DILocation(line: 409, column: 8, scope: !12398)
!12410 = !DILocation(line: 409, column: 13, scope: !12398)
!12411 = !DILocation(line: 411, column: 8, scope: !12398)
!12412 = !DILocation(line: 411, column: 13, scope: !12398)
!12413 = !DILocation(line: 412, column: 13, scope: !12398)
!12414 = !DILocation(line: 413, column: 1, scope: !12398)
!12415 = distinct !DISubprogram(name: "update_cache", scope: !2211, file: !2211, line: 559, type: !10434, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12416)
!12416 = !{!12417, !12418}
!12417 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12415, file: !2211, line: 559, type: !118)
!12418 = !DILocalVariable(name: "thread", scope: !12415, file: !2211, line: 562, type: !2110)
!12419 = !DILocation(line: 0, scope: !12415)
!12420 = !DILocation(line: 239, column: 9, scope: !12421, inlinedAt: !12424)
!12421 = distinct !DISubprogram(name: "runq_best", scope: !2211, file: !2211, line: 237, type: !12422, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!12422 = !DISubroutineType(types: !12423)
!12423 = !{!2110}
!12424 = distinct !DILocation(line: 314, column: 28, scope: !12425, inlinedAt: !12428)
!12425 = distinct !DISubprogram(name: "next_up", scope: !2211, file: !2211, line: 312, type: !12422, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12426)
!12426 = !{!12427}
!12427 = !DILocalVariable(name: "thread", scope: !12425, file: !2211, line: 314, type: !2110)
!12428 = distinct !DILocation(line: 562, column: 28, scope: !12415)
!12429 = !DILocation(line: 0, scope: !12425, inlinedAt: !12428)
!12430 = !DILocation(line: 340, column: 17, scope: !12425, inlinedAt: !12428)
!12431 = !DILocation(line: 340, column: 9, scope: !12425, inlinedAt: !12428)
!12432 = !DILocalVariable(name: "thread", arg: 1, scope: !12433, file: !2211, line: 127, type: !2110)
!12433 = distinct !DISubprogram(name: "should_preempt", scope: !2211, file: !2211, line: 127, type: !12434, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12436)
!12434 = !DISubroutineType(types: !12435)
!12435 = !{!146, !2110, !118}
!12436 = !{!12432, !12437}
!12437 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12433, file: !2211, line: 128, type: !118)
!12438 = !DILocation(line: 0, scope: !12433, inlinedAt: !12439)
!12439 = distinct !DILocation(line: 564, column: 6, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12415, file: !2211, line: 564, column: 6)
!12441 = !DILocation(line: 133, column: 17, scope: !12442, inlinedAt: !12439)
!12442 = distinct !DILexicalBlock(scope: !12433, file: !2211, line: 133, column: 6)
!12443 = !DILocation(line: 0, scope: !12440)
!12444 = !DILocation(line: 133, column: 6, scope: !12433, inlinedAt: !12439)
!12445 = !DILocation(line: 137, column: 2, scope: !12446, inlinedAt: !12439)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !2211, line: 137, column: 2)
!12447 = distinct !DILexicalBlock(scope: !12433, file: !2211, line: 137, column: 2)
!12448 = !DILocation(line: 137, column: 2, scope: !12447, inlinedAt: !12439)
!12449 = !DILocation(line: 137, column: 2, scope: !12450, inlinedAt: !12439)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !2211, line: 137, column: 2)
!12451 = !DILocation(line: 140, column: 6, scope: !12452, inlinedAt: !12439)
!12452 = distinct !DILexicalBlock(scope: !12433, file: !2211, line: 140, column: 6)
!12453 = !DILocation(line: 140, column: 6, scope: !12433, inlinedAt: !12439)
!12454 = !DILocation(line: 150, column: 9, scope: !12455, inlinedAt: !12439)
!12455 = distinct !DILexicalBlock(scope: !12433, file: !2211, line: 149, column: 6)
!12456 = !DILocation(line: 149, column: 6, scope: !12433, inlinedAt: !12439)
!12457 = !DILocation(line: 157, column: 6, scope: !12458, inlinedAt: !12439)
!12458 = distinct !DILexicalBlock(scope: !12433, file: !2211, line: 157, column: 6)
!12459 = !DILocation(line: 564, column: 6, scope: !12415)
!12460 = !DILocation(line: 566, column: 14, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !2211, line: 566, column: 7)
!12462 = distinct !DILexicalBlock(scope: !12440, file: !2211, line: 564, column: 42)
!12463 = !DILocation(line: 566, column: 7, scope: !12462)
!12464 = !DILocation(line: 567, column: 4, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12461, file: !2211, line: 566, column: 27)
!12466 = !DILocation(line: 568, column: 3, scope: !12465)
!12467 = !DILocation(line: 585, column: 1, scope: !12415)
!12468 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2211, file: !2211, line: 1144, type: !12469, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12471)
!12469 = !DISubroutineType(types: !12470)
!12470 = !{!2110, !12299}
!12471 = !{!12472, !12473, !12474}
!12472 = !DILocalVariable(name: "pq", arg: 1, scope: !12468, file: !2211, line: 1144, type: !12299)
!12473 = !DILocalVariable(name: "thread", scope: !12468, file: !2211, line: 1146, type: !2110)
!12474 = !DILocalVariable(name: "n", scope: !12468, file: !2211, line: 1147, type: !2207)
!12475 = !DILocation(line: 0, scope: !12468)
!12476 = !DILocation(line: 1147, column: 19, scope: !12468)
!12477 = !DILocation(line: 1152, column: 2, scope: !12468)
!12478 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10477, file: !10477, line: 115, type: !12214, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12479)
!12479 = !{!12480}
!12480 = !DILocalVariable(name: "thread", arg: 1, scope: !12478, file: !10477, line: 115, type: !2110)
!12481 = !DILocation(line: 0, scope: !12478)
!12482 = !DILocation(line: 117, column: 46, scope: !12478)
!12483 = !DILocation(line: 117, column: 10, scope: !12478)
!12484 = !DILocation(line: 117, column: 9, scope: !12478)
!12485 = !DILocation(line: 117, column: 2, scope: !12478)
!12486 = distinct !DISubprogram(name: "is_preempt", scope: !2211, file: !2211, line: 62, type: !12047, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12487)
!12487 = !{!12488}
!12488 = !DILocalVariable(name: "thread", arg: 1, scope: !12486, file: !2211, line: 62, type: !2110)
!12489 = !DILocation(line: 0, scope: !12486)
!12490 = !DILocation(line: 65, column: 22, scope: !12486)
!12491 = !DILocation(line: 65, column: 30, scope: !12486)
!12492 = !DILocation(line: 65, column: 2, scope: !12486)
!12493 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10862, file: !10862, line: 35, type: !12494, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12498)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!146, !12496}
!12496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12497, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!12498 = !{!12499}
!12499 = !DILocalVariable(name: "to", arg: 1, scope: !12493, file: !10862, line: 35, type: !12496)
!12500 = !DILocation(line: 0, scope: !12493)
!12501 = !DILocation(line: 37, column: 35, scope: !12493)
!12502 = !DILocation(line: 37, column: 10, scope: !12493)
!12503 = !DILocation(line: 37, column: 9, scope: !12493)
!12504 = !DILocation(line: 37, column: 2, scope: !12493)
!12505 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !12506, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12510)
!12506 = !DISubroutineType(types: !12507)
!12507 = !{!146, !12508}
!12508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12509, size: 32)
!12509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2120)
!12510 = !{!12511}
!12511 = !DILocalVariable(name: "node", arg: 1, scope: !12505, file: !235, line: 225, type: !12508)
!12512 = !DILocation(line: 0, scope: !12505)
!12513 = !DILocation(line: 227, column: 15, scope: !12505)
!12514 = !DILocation(line: 227, column: 20, scope: !12505)
!12515 = !DILocation(line: 227, column: 2, scope: !12505)
!12516 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !12388, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12517)
!12517 = !{!12518, !12519}
!12518 = !DILocalVariable(name: "list", arg: 1, scope: !12516, file: !235, line: 325, type: !12299)
!12519 = !DILocalVariable(name: "node", arg: 2, scope: !12516, file: !235, line: 326, type: !2207)
!12520 = !DILocation(line: 0, scope: !12516)
!12521 = !DILocation(line: 328, column: 24, scope: !12516)
!12522 = !DILocation(line: 328, column: 15, scope: !12516)
!12523 = !DILocation(line: 328, column: 9, scope: !12516)
!12524 = !DILocation(line: 328, column: 45, scope: !12516)
!12525 = !DILocation(line: 328, column: 2, scope: !12516)
!12526 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !12527, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12529)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{!146, !12299}
!12529 = !{!12530}
!12530 = !DILocalVariable(name: "list", arg: 1, scope: !12526, file: !235, line: 266, type: !12299)
!12531 = !DILocation(line: 0, scope: !12526)
!12532 = !DILocation(line: 268, column: 15, scope: !12526)
!12533 = !DILocation(line: 268, column: 20, scope: !12526)
!12534 = !DILocation(line: 268, column: 2, scope: !12526)
!12535 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !12536, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12538)
!12536 = !DISubroutineType(types: !12537)
!12537 = !{null, !2207}
!12538 = !{!12539, !12540, !12541}
!12539 = !DILocalVariable(name: "node", arg: 1, scope: !12535, file: !235, line: 496, type: !2207)
!12540 = !DILocalVariable(name: "prev", scope: !12535, file: !235, line: 498, type: !12376)
!12541 = !DILocalVariable(name: "next", scope: !12535, file: !235, line: 499, type: !12376)
!12542 = !DILocation(line: 0, scope: !12535)
!12543 = !DILocation(line: 498, column: 34, scope: !12535)
!12544 = !DILocation(line: 499, column: 34, scope: !12535)
!12545 = !DILocation(line: 501, column: 8, scope: !12535)
!12546 = !DILocation(line: 501, column: 13, scope: !12535)
!12547 = !DILocation(line: 502, column: 8, scope: !12535)
!12548 = !DILocation(line: 502, column: 13, scope: !12535)
!12549 = !DILocation(line: 503, column: 2, scope: !12535)
!12550 = !DILocation(line: 504, column: 1, scope: !12535)
!12551 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !12536, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12552)
!12552 = !{!12553}
!12553 = !DILocalVariable(name: "node", arg: 1, scope: !12551, file: !235, line: 211, type: !2207)
!12554 = !DILocation(line: 0, scope: !12551)
!12555 = !DILocation(line: 213, column: 8, scope: !12551)
!12556 = !DILocation(line: 213, column: 13, scope: !12551)
!12557 = !DILocation(line: 214, column: 8, scope: !12551)
!12558 = !DILocation(line: 214, column: 13, scope: !12551)
!12559 = !DILocation(line: 215, column: 1, scope: !12551)
!12560 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10477, file: !10477, line: 131, type: !12561, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!146, !2110, !156}
!12563 = !{!12564, !12565}
!12564 = !DILocalVariable(name: "thread", arg: 1, scope: !12560, file: !10477, line: 131, type: !2110)
!12565 = !DILocalVariable(name: "state", arg: 2, scope: !12560, file: !10477, line: 131, type: !156)
!12566 = !DILocation(line: 0, scope: !12560)
!12567 = !DILocation(line: 133, column: 23, scope: !12560)
!12568 = !DILocation(line: 133, column: 10, scope: !12560)
!12569 = !DILocation(line: 133, column: 36, scope: !12560)
!12570 = !DILocation(line: 133, column: 45, scope: !12560)
!12571 = !DILocation(line: 133, column: 2, scope: !12560)
!12572 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10477, file: !10477, line: 211, type: !12573, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12575)
!12573 = !DISubroutineType(types: !12574)
!12574 = !{!146, !118, !118}
!12575 = !{!12576, !12577}
!12576 = !DILocalVariable(name: "prio", arg: 1, scope: !12572, file: !10477, line: 211, type: !118)
!12577 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12572, file: !10477, line: 211, type: !118)
!12578 = !DILocation(line: 0, scope: !12572)
!12579 = !DILocation(line: 213, column: 9, scope: !12572)
!12580 = !DILocation(line: 213, column: 2, scope: !12572)
!12581 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10477, file: !10477, line: 206, type: !12573, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12582)
!12582 = !{!12583, !12584}
!12583 = !DILocalVariable(name: "prio1", arg: 1, scope: !12581, file: !10477, line: 206, type: !118)
!12584 = !DILocalVariable(name: "prio2", arg: 2, scope: !12581, file: !10477, line: 206, type: !118)
!12585 = !DILocation(line: 0, scope: !12581)
!12586 = !DILocation(line: 208, column: 15, scope: !12581)
!12587 = !DILocation(line: 208, column: 2, scope: !12581)
!12588 = distinct !DISubprogram(name: "z_ready_thread", scope: !2211, file: !2211, line: 635, type: !12029, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12589)
!12589 = !{!12590, !12591, !12593}
!12590 = !DILocalVariable(name: "thread", arg: 1, scope: !12588, file: !2211, line: 635, type: !2110)
!12591 = !DILocalVariable(name: "__i", scope: !12592, file: !2211, line: 637, type: !12063)
!12592 = distinct !DILexicalBlock(scope: !12588, file: !2211, line: 637, column: 2)
!12593 = !DILocalVariable(name: "__key", scope: !12592, file: !2211, line: 637, type: !12063)
!12594 = !DILocation(line: 0, scope: !12588)
!12595 = !DILocation(line: 0, scope: !12592)
!12596 = !DILocation(line: 0, scope: !12071, inlinedAt: !12597)
!12597 = distinct !DILocation(line: 637, column: 2, scope: !12592)
!12598 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12599)
!12599 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12597)
!12600 = !DILocation(line: 0, scope: !12080, inlinedAt: !12599)
!12601 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12597)
!12602 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12597)
!12603 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12597)
!12604 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12597)
!12605 = !DILocation(line: 639, column: 4, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !2211, line: 638, column: 41)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !2211, line: 638, column: 7)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !2211, line: 637, column: 26)
!12609 = distinct !DILexicalBlock(scope: !12592, file: !2211, line: 637, column: 2)
!12610 = !DILocation(line: 0, scope: !12105, inlinedAt: !12611)
!12611 = distinct !DILocation(line: 637, column: 2, scope: !12609)
!12612 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12611)
!12613 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12611)
!12614 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12611)
!12615 = !DILocation(line: 0, scope: !12119, inlinedAt: !12616)
!12616 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12611)
!12617 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12616)
!12618 = !DILocation(line: 642, column: 1, scope: !12588)
!12619 = distinct !DISubprogram(name: "ready_thread", scope: !2211, file: !2211, line: 617, type: !12029, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12620)
!12620 = !{!12621}
!12621 = !DILocalVariable(name: "thread", arg: 1, scope: !12619, file: !2211, line: 617, type: !2110)
!12622 = !DILocation(line: 0, scope: !12619)
!12623 = !DILocation(line: 626, column: 7, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12619, file: !2211, line: 626, column: 6)
!12625 = !DILocation(line: 626, column: 34, scope: !12624)
!12626 = !DILocation(line: 626, column: 37, scope: !12624)
!12627 = !DILocation(line: 626, column: 6, scope: !12619)
!12628 = !DILocation(line: 0, scope: !12282, inlinedAt: !12629)
!12629 = distinct !DILocation(line: 629, column: 3, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12624, file: !2211, line: 626, column: 64)
!12631 = !DILocation(line: 252, column: 15, scope: !12282, inlinedAt: !12629)
!12632 = !DILocation(line: 252, column: 28, scope: !12282, inlinedAt: !12629)
!12633 = !DILocation(line: 0, scope: !12289, inlinedAt: !12634)
!12634 = distinct !DILocation(line: 254, column: 3, scope: !12293, inlinedAt: !12629)
!12635 = !DILocation(line: 0, scope: !12296, inlinedAt: !12636)
!12636 = distinct !DILocation(line: 229, column: 2, scope: !12289, inlinedAt: !12634)
!12637 = !DILocation(line: 186, column: 2, scope: !12306, inlinedAt: !12636)
!12638 = !DILocation(line: 186, column: 2, scope: !12307, inlinedAt: !12636)
!12639 = !DILocation(line: 186, column: 2, scope: !12310, inlinedAt: !12636)
!12640 = !DILocation(line: 188, column: 2, scope: !12312, inlinedAt: !12636)
!12641 = !DILocation(line: 188, column: 2, scope: !12314, inlinedAt: !12636)
!12642 = !DILocation(line: 0, scope: !12312, inlinedAt: !12636)
!12643 = !DILocation(line: 189, column: 7, scope: !12317, inlinedAt: !12636)
!12644 = !DILocation(line: 189, column: 35, scope: !12317, inlinedAt: !12636)
!12645 = !DILocation(line: 189, column: 7, scope: !12318, inlinedAt: !12636)
!12646 = !DILocation(line: 191, column: 21, scope: !12322, inlinedAt: !12636)
!12647 = !DILocation(line: 190, column: 4, scope: !12322, inlinedAt: !12636)
!12648 = !DILocation(line: 192, column: 4, scope: !12322, inlinedAt: !12636)
!12649 = distinct !{!12649, !12640, !12650}
!12650 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !12636)
!12651 = !DILocation(line: 196, column: 37, scope: !12296, inlinedAt: !12636)
!12652 = !DILocation(line: 196, column: 2, scope: !12296, inlinedAt: !12636)
!12653 = !DILocation(line: 197, column: 1, scope: !12296, inlinedAt: !12636)
!12654 = !DILocation(line: 630, column: 3, scope: !12630)
!12655 = !DILocation(line: 632, column: 2, scope: !12630)
!12656 = !DILocation(line: 633, column: 1, scope: !12619)
!12657 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10477, file: !10477, line: 120, type: !12214, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12658)
!12658 = !{!12659}
!12659 = !DILocalVariable(name: "thread", arg: 1, scope: !12657, file: !10477, line: 120, type: !2110)
!12660 = !DILocation(line: 0, scope: !12657)
!12661 = !DILocation(line: 122, column: 12, scope: !12657)
!12662 = !DILocation(line: 122, column: 62, scope: !12657)
!12663 = !DILocation(line: 123, column: 4, scope: !12657)
!12664 = !DILocation(line: 122, column: 2, scope: !12657)
!12665 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2211, file: !2211, line: 644, type: !12029, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12666)
!12666 = !{!12667, !12668, !12670}
!12667 = !DILocalVariable(name: "thread", arg: 1, scope: !12665, file: !2211, line: 644, type: !2110)
!12668 = !DILocalVariable(name: "__i", scope: !12669, file: !2211, line: 646, type: !12063)
!12669 = distinct !DILexicalBlock(scope: !12665, file: !2211, line: 646, column: 2)
!12670 = !DILocalVariable(name: "__key", scope: !12669, file: !2211, line: 646, type: !12063)
!12671 = !DILocation(line: 0, scope: !12665)
!12672 = !DILocation(line: 0, scope: !12669)
!12673 = !DILocation(line: 0, scope: !12071, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 646, column: 2, scope: !12669)
!12675 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12674)
!12677 = !DILocation(line: 0, scope: !12080, inlinedAt: !12676)
!12678 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12674)
!12679 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12674)
!12680 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12674)
!12681 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12674)
!12682 = !DILocation(line: 647, column: 3, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !2211, line: 646, column: 26)
!12684 = distinct !DILexicalBlock(scope: !12669, file: !2211, line: 646, column: 2)
!12685 = !DILocation(line: 0, scope: !12105, inlinedAt: !12686)
!12686 = distinct !DILocation(line: 646, column: 2, scope: !12684)
!12687 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12686)
!12688 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12686)
!12689 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12686)
!12690 = !DILocation(line: 0, scope: !12119, inlinedAt: !12691)
!12691 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12686)
!12692 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12691)
!12693 = !DILocation(line: 649, column: 1, scope: !12665)
!12694 = distinct !DISubprogram(name: "z_sched_start", scope: !2211, file: !2211, line: 651, type: !12029, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12695)
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "thread", arg: 1, scope: !12694, file: !2211, line: 651, type: !2110)
!12697 = !DILocalVariable(name: "key", scope: !12694, file: !2211, line: 653, type: !12063)
!12698 = !DILocation(line: 0, scope: !12694)
!12699 = !DILocation(line: 0, scope: !12071, inlinedAt: !12700)
!12700 = distinct !DILocation(line: 653, column: 25, scope: !12694)
!12701 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12700)
!12703 = !DILocation(line: 0, scope: !12080, inlinedAt: !12702)
!12704 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12700)
!12705 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12700)
!12706 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12700)
!12707 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12700)
!12708 = !DILocation(line: 655, column: 6, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12694, file: !2211, line: 655, column: 6)
!12710 = !DILocation(line: 655, column: 6, scope: !12694)
!12711 = !DILocation(line: 0, scope: !12105, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 656, column: 3, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12709, file: !2211, line: 655, column: 36)
!12714 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12712)
!12715 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12712)
!12716 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12712)
!12717 = !DILocation(line: 0, scope: !12119, inlinedAt: !12718)
!12718 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12712)
!12719 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12718)
!12720 = !DILocation(line: 657, column: 3, scope: !12713)
!12721 = !DILocation(line: 660, column: 2, scope: !12694)
!12722 = !DILocation(line: 661, column: 2, scope: !12694)
!12723 = !DILocation(line: 662, column: 2, scope: !12694)
!12724 = !DILocation(line: 663, column: 1, scope: !12694)
!12725 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10477, file: !10477, line: 126, type: !12214, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12726)
!12726 = !{!12727}
!12727 = !DILocalVariable(name: "thread", arg: 1, scope: !12725, file: !10477, line: 126, type: !2110)
!12728 = !DILocation(line: 0, scope: !12725)
!12729 = !DILocation(line: 128, column: 23, scope: !12725)
!12730 = !DILocation(line: 128, column: 36, scope: !12725)
!12731 = !DILocation(line: 128, column: 56, scope: !12725)
!12732 = !DILocation(line: 128, column: 2, scope: !12725)
!12733 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10477, file: !10477, line: 155, type: !12029, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12734)
!12734 = !{!12735}
!12735 = !DILocalVariable(name: "thread", arg: 1, scope: !12733, file: !10477, line: 155, type: !2110)
!12736 = !DILocation(line: 0, scope: !12733)
!12737 = !DILocation(line: 157, column: 15, scope: !12733)
!12738 = !DILocation(line: 157, column: 28, scope: !12733)
!12739 = !DILocation(line: 158, column: 1, scope: !12733)
!12740 = distinct !DISubprogram(name: "z_reschedule", scope: !2211, file: !2211, line: 967, type: !12106, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12741)
!12741 = !{!12742, !12743}
!12742 = !DILocalVariable(name: "lock", arg: 1, scope: !12740, file: !2211, line: 967, type: !12074)
!12743 = !DILocalVariable(name: "key", arg: 2, scope: !12740, file: !2211, line: 967, type: !12063)
!12744 = !DILocation(line: 0, scope: !12740)
!12745 = !DILocation(line: 969, column: 6, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12740, file: !2211, line: 969, column: 6)
!12747 = !DILocation(line: 969, column: 23, scope: !12746)
!12748 = !DILocation(line: 969, column: 26, scope: !12746)
!12749 = !DILocation(line: 969, column: 6, scope: !12740)
!12750 = !DILocalVariable(name: "key", arg: 2, scope: !12751, file: !10579, line: 193, type: !12063)
!12751 = distinct !DISubprogram(name: "z_swap", scope: !10579, file: !10579, line: 193, type: !12752, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12754)
!12752 = !DISubroutineType(types: !12753)
!12753 = !{!118, !12074, !12063}
!12754 = !{!12755, !12750}
!12755 = !DILocalVariable(name: "lock", arg: 1, scope: !12751, file: !10579, line: 193, type: !12074)
!12756 = !DILocation(line: 0, scope: !12751, inlinedAt: !12757)
!12757 = distinct !DILocation(line: 970, column: 3, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12746, file: !2211, line: 969, column: 39)
!12759 = !DILocalVariable(name: "l", arg: 1, scope: !12760, file: !328, line: 221, type: !12074)
!12760 = distinct !DISubprogram(name: "k_spin_release", scope: !328, file: !328, line: 221, type: !12761, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12763)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{null, !12074}
!12763 = !{!12759}
!12764 = !DILocation(line: 0, scope: !12760, inlinedAt: !12765)
!12765 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !12757)
!12766 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !12765)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !328, line: 225, column: 2)
!12768 = distinct !DILexicalBlock(scope: !12760, file: !328, line: 225, column: 2)
!12769 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !12765)
!12770 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !12765)
!12771 = distinct !DILexicalBlock(scope: !12767, file: !328, line: 225, column: 2)
!12772 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !12757)
!12773 = !DILocation(line: 971, column: 2, scope: !12758)
!12774 = !DILocation(line: 0, scope: !12105, inlinedAt: !12775)
!12775 = distinct !DILocation(line: 972, column: 3, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12746, file: !2211, line: 971, column: 9)
!12777 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12775)
!12778 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12775)
!12779 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12775)
!12780 = !DILocation(line: 0, scope: !12119, inlinedAt: !12781)
!12781 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12775)
!12782 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12781)
!12783 = !DILocation(line: 975, column: 1, scope: !12740)
!12784 = distinct !DISubprogram(name: "resched", scope: !2211, file: !2211, line: 940, type: !12785, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12787)
!12785 = !DISubroutineType(types: !12786)
!12786 = !{!146, !156}
!12787 = !{!12788}
!12788 = !DILocalVariable(name: "key", arg: 1, scope: !12784, file: !2211, line: 940, type: !156)
!12789 = !DILocation(line: 0, scope: !12784)
!12790 = !DILocalVariable(name: "key", arg: 1, scope: !12791, file: !6230, line: 112, type: !32)
!12791 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6230, file: !6230, line: 112, type: !12792, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12794)
!12792 = !DISubroutineType(types: !12793)
!12793 = !{!146, !32}
!12794 = !{!12790}
!12795 = !DILocation(line: 0, scope: !12791, inlinedAt: !12796)
!12796 = distinct !DILocation(line: 946, column: 9, scope: !12784)
!12797 = !DILocation(line: 115, column: 13, scope: !12791, inlinedAt: !12796)
!12798 = !DILocation(line: 946, column: 32, scope: !12784)
!12799 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !12803)
!12800 = distinct !DISubprogram(name: "__get_IPSR", scope: !6109, file: !6109, line: 1027, type: !6196, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12801)
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "result", scope: !12800, file: !6109, line: 1029, type: !156)
!12803 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !12805)
!12804 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6877, file: !6877, line: 46, type: !6878, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!12805 = distinct !DILocation(line: 946, column: 36, scope: !12784)
!12806 = !{i64 7014708}
!12807 = !DILocation(line: 0, scope: !12800, inlinedAt: !12803)
!12808 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !12805)
!12809 = !DILocation(line: 946, column: 2, scope: !12784)
!12810 = distinct !DISubprogram(name: "need_swap", scope: !2211, file: !2211, line: 953, type: !6878, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12811)
!12811 = !{!12812}
!12812 = !DILocalVariable(name: "new_thread", scope: !12810, file: !2211, line: 959, type: !2110)
!12813 = !DILocation(line: 962, column: 31, scope: !12810)
!12814 = !DILocation(line: 0, scope: !12810)
!12815 = !DILocation(line: 963, column: 23, scope: !12810)
!12816 = !DILocation(line: 963, column: 20, scope: !12810)
!12817 = !DILocation(line: 963, column: 2, scope: !12810)
!12818 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10579, file: !10579, line: 181, type: !6119, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12819)
!12819 = !{!12820, !12821}
!12820 = !DILocalVariable(name: "key", arg: 1, scope: !12818, file: !10579, line: 181, type: !32)
!12821 = !DILocalVariable(name: "ret", scope: !12818, file: !10579, line: 183, type: !118)
!12822 = !DILocation(line: 0, scope: !12818)
!12823 = !DILocation(line: 185, column: 8, scope: !12818)
!12824 = !DILocation(line: 186, column: 2, scope: !12818)
!12825 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2211, file: !2211, line: 665, type: !12029, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12826)
!12826 = !{!12827, !12828, !12830}
!12827 = !DILocalVariable(name: "thread", arg: 1, scope: !12825, file: !2211, line: 665, type: !2110)
!12828 = !DILocalVariable(name: "__i", scope: !12829, file: !2211, line: 671, type: !12063)
!12829 = distinct !DILexicalBlock(scope: !12825, file: !2211, line: 671, column: 2)
!12830 = !DILocalVariable(name: "__key", scope: !12829, file: !2211, line: 671, type: !12063)
!12831 = !DILocation(line: 0, scope: !12825)
!12832 = !DILocation(line: 669, column: 8, scope: !12825)
!12833 = !DILocation(line: 0, scope: !12829)
!12834 = !DILocation(line: 0, scope: !12071, inlinedAt: !12835)
!12835 = distinct !DILocation(line: 671, column: 2, scope: !12829)
!12836 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12837)
!12837 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12835)
!12838 = !DILocation(line: 0, scope: !12080, inlinedAt: !12837)
!12839 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12835)
!12840 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12835)
!12841 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12835)
!12842 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12835)
!12843 = !DILocation(line: 672, column: 7, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !2211, line: 672, column: 7)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !2211, line: 671, column: 26)
!12846 = distinct !DILexicalBlock(scope: !12829, file: !2211, line: 671, column: 2)
!12847 = !DILocation(line: 672, column: 7, scope: !12845)
!12848 = !DILocation(line: 0, scope: !12265, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 673, column: 4, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12844, file: !2211, line: 672, column: 35)
!12851 = !DILocation(line: 266, column: 15, scope: !12265, inlinedAt: !12849)
!12852 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !12849)
!12853 = !DILocation(line: 0, scope: !12273, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !12849)
!12855 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !12854)
!12856 = !DILocation(line: 674, column: 3, scope: !12850)
!12857 = !DILocation(line: 675, column: 3, scope: !12845)
!12858 = !DILocation(line: 676, column: 26, scope: !12845)
!12859 = !DILocation(line: 676, column: 23, scope: !12845)
!12860 = !DILocation(line: 676, column: 3, scope: !12845)
!12861 = !DILocation(line: 0, scope: !12105, inlinedAt: !12862)
!12862 = distinct !DILocation(line: 671, column: 2, scope: !12846)
!12863 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12862)
!12864 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12862)
!12865 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12862)
!12866 = !DILocation(line: 0, scope: !12119, inlinedAt: !12867)
!12867 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12862)
!12868 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12867)
!12869 = !DILocation(line: 679, column: 16, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12825, file: !2211, line: 679, column: 6)
!12871 = !DILocation(line: 679, column: 13, scope: !12870)
!12872 = !DILocation(line: 679, column: 6, scope: !12825)
!12873 = !DILocation(line: 680, column: 3, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12870, file: !2211, line: 679, column: 26)
!12875 = !DILocation(line: 681, column: 2, scope: !12874)
!12876 = !DILocation(line: 684, column: 1, scope: !12825)
!12877 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !10862, file: !10862, line: 52, type: !12047, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12878)
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "thread", arg: 1, scope: !12877, file: !10862, line: 52, type: !2110)
!12880 = !DILocation(line: 0, scope: !12877)
!12881 = !DILocation(line: 54, column: 39, scope: !12877)
!12882 = !DILocation(line: 54, column: 9, scope: !12877)
!12883 = !DILocation(line: 54, column: 2, scope: !12877)
!12884 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10477, file: !10477, line: 141, type: !12029, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12885)
!12885 = !{!12886}
!12886 = !DILocalVariable(name: "thread", arg: 1, scope: !12884, file: !10477, line: 141, type: !2110)
!12887 = !DILocation(line: 0, scope: !12884)
!12888 = !DILocation(line: 143, column: 15, scope: !12884)
!12889 = !DILocation(line: 143, column: 28, scope: !12884)
!12890 = !DILocation(line: 146, column: 1, scope: !12884)
!12891 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10477, file: !10477, line: 73, type: !359, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!12892 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12893)
!12893 = distinct !DILocation(line: 75, column: 30, scope: !12891)
!12894 = !DILocation(line: 0, scope: !12080, inlinedAt: !12893)
!12895 = !DILocation(line: 75, column: 9, scope: !12891)
!12896 = !DILocation(line: 76, column: 1, scope: !12891)
!12897 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2211, file: !2211, line: 977, type: !6206, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12898)
!12898 = !{!12899}
!12899 = !DILocalVariable(name: "key", arg: 1, scope: !12897, file: !2211, line: 977, type: !156)
!12900 = !DILocation(line: 0, scope: !12897)
!12901 = !DILocation(line: 979, column: 6, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !2211, line: 979, column: 6)
!12903 = !DILocation(line: 979, column: 6, scope: !12897)
!12904 = !DILocation(line: 980, column: 3, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12902, file: !2211, line: 979, column: 20)
!12906 = !DILocation(line: 981, column: 2, scope: !12905)
!12907 = !DILocation(line: 0, scope: !12119, inlinedAt: !12908)
!12908 = distinct !DILocation(line: 982, column: 3, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12902, file: !2211, line: 981, column: 9)
!12910 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12908)
!12911 = !DILocation(line: 985, column: 1, scope: !12897)
!12912 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2211, file: !2211, line: 695, type: !12029, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12913)
!12913 = !{!12914, !12915}
!12914 = !DILocalVariable(name: "thread", arg: 1, scope: !12912, file: !2211, line: 695, type: !2110)
!12915 = !DILocalVariable(name: "key", scope: !12912, file: !2211, line: 699, type: !12063)
!12916 = !DILocation(line: 0, scope: !12912)
!12917 = !DILocation(line: 0, scope: !12071, inlinedAt: !12918)
!12918 = distinct !DILocation(line: 699, column: 25, scope: !12912)
!12919 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12920)
!12920 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12918)
!12921 = !DILocation(line: 0, scope: !12080, inlinedAt: !12920)
!12922 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12918)
!12923 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12918)
!12924 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12918)
!12925 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12918)
!12926 = !DILocation(line: 702, column: 7, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12912, file: !2211, line: 702, column: 6)
!12928 = !DILocation(line: 702, column: 6, scope: !12912)
!12929 = !DILocation(line: 0, scope: !12105, inlinedAt: !12930)
!12930 = distinct !DILocation(line: 703, column: 3, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12927, file: !2211, line: 702, column: 38)
!12932 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12930)
!12933 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12930)
!12934 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12930)
!12935 = !DILocation(line: 0, scope: !12119, inlinedAt: !12936)
!12936 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12930)
!12937 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12936)
!12938 = !DILocation(line: 704, column: 3, scope: !12931)
!12939 = !DILocation(line: 707, column: 2, scope: !12912)
!12940 = !DILocation(line: 708, column: 2, scope: !12912)
!12941 = !DILocation(line: 710, column: 2, scope: !12912)
!12942 = !DILocation(line: 713, column: 1, scope: !12912)
!12943 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10477, file: !10477, line: 96, type: !12214, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12944)
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "thread", arg: 1, scope: !12943, file: !10477, line: 96, type: !2110)
!12946 = !DILocation(line: 0, scope: !12943)
!12947 = !DILocation(line: 98, column: 23, scope: !12943)
!12948 = !DILocation(line: 98, column: 36, scope: !12943)
!12949 = !DILocation(line: 98, column: 57, scope: !12943)
!12950 = !DILocation(line: 98, column: 2, scope: !12943)
!12951 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10477, file: !10477, line: 148, type: !12029, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12952)
!12952 = !{!12953}
!12953 = !DILocalVariable(name: "thread", arg: 1, scope: !12951, file: !10477, line: 148, type: !2110)
!12954 = !DILocation(line: 0, scope: !12951)
!12955 = !DILocation(line: 150, column: 15, scope: !12951)
!12956 = !DILocation(line: 150, column: 28, scope: !12951)
!12957 = !DILocation(line: 153, column: 1, scope: !12951)
!12958 = distinct !DISubprogram(name: "z_pend_thread", scope: !2211, file: !2211, line: 770, type: !12959, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !12965)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{null, !2110, !2141, !12961}
!12961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !12962)
!12962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !12963)
!12963 = !{!12964}
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12962, file: !114, line: 66, baseType: !113, size: 64)
!12965 = !{!12966, !12967, !12968, !12969, !12971}
!12966 = !DILocalVariable(name: "thread", arg: 1, scope: !12958, file: !2211, line: 770, type: !2110)
!12967 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12958, file: !2211, line: 770, type: !2141)
!12968 = !DILocalVariable(name: "timeout", arg: 3, scope: !12958, file: !2211, line: 771, type: !12961)
!12969 = !DILocalVariable(name: "__i", scope: !12970, file: !2211, line: 774, type: !12063)
!12970 = distinct !DILexicalBlock(scope: !12958, file: !2211, line: 774, column: 2)
!12971 = !DILocalVariable(name: "__key", scope: !12970, file: !2211, line: 774, type: !12063)
!12972 = !DILocation(line: 0, scope: !12958)
!12973 = !DILocation(line: 773, column: 2, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12975, file: !2211, line: 773, column: 2)
!12975 = distinct !DILexicalBlock(scope: !12958, file: !2211, line: 773, column: 2)
!12976 = !DILocation(line: 773, column: 2, scope: !12975)
!12977 = !DILocation(line: 773, column: 2, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12974, file: !2211, line: 773, column: 2)
!12979 = !DILocation(line: 0, scope: !12970)
!12980 = !DILocation(line: 0, scope: !12071, inlinedAt: !12981)
!12981 = distinct !DILocation(line: 774, column: 2, scope: !12970)
!12982 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !12983)
!12983 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !12981)
!12984 = !DILocation(line: 0, scope: !12080, inlinedAt: !12983)
!12985 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !12981)
!12986 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12981)
!12987 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12981)
!12988 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !12981)
!12989 = !DILocation(line: 775, column: 3, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !2211, line: 774, column: 26)
!12991 = distinct !DILexicalBlock(scope: !12970, file: !2211, line: 774, column: 2)
!12992 = !DILocation(line: 0, scope: !12105, inlinedAt: !12993)
!12993 = distinct !DILocation(line: 774, column: 2, scope: !12991)
!12994 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !12993)
!12995 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !12993)
!12996 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !12993)
!12997 = !DILocation(line: 0, scope: !12119, inlinedAt: !12998)
!12998 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !12993)
!12999 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !12998)
!13000 = !DILocation(line: 777, column: 1, scope: !12958)
!13001 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2211, file: !2211, line: 79, type: !12214, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13002)
!13002 = !{!13003}
!13003 = !DILocalVariable(name: "thread", arg: 1, scope: !13001, file: !2211, line: 79, type: !2110)
!13004 = !DILocation(line: 0, scope: !13001)
!13005 = !DILocation(line: 81, column: 23, scope: !13001)
!13006 = !DILocation(line: 81, column: 36, scope: !13001)
!13007 = !DILocation(line: 81, column: 53, scope: !13001)
!13008 = !DILocation(line: 81, column: 2, scope: !13001)
!13009 = distinct !DISubprogram(name: "pend_locked", scope: !2211, file: !2211, line: 760, type: !12959, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13010)
!13010 = !{!13011, !13012, !13013}
!13011 = !DILocalVariable(name: "thread", arg: 1, scope: !13009, file: !2211, line: 760, type: !2110)
!13012 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13009, file: !2211, line: 760, type: !2141)
!13013 = !DILocalVariable(name: "timeout", arg: 3, scope: !13009, file: !2211, line: 761, type: !12961)
!13014 = !DILocation(line: 0, scope: !13009)
!13015 = !DILocation(line: 766, column: 2, scope: !13009)
!13016 = !DILocation(line: 767, column: 2, scope: !13009)
!13017 = !DILocation(line: 768, column: 1, scope: !13009)
!13018 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2211, file: !2211, line: 740, type: !13019, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13021)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{null, !2110, !2141}
!13021 = !{!13022, !13023}
!13022 = !DILocalVariable(name: "thread", arg: 1, scope: !13018, file: !2211, line: 740, type: !2110)
!13023 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13018, file: !2211, line: 740, type: !2141)
!13024 = !DILocation(line: 0, scope: !13018)
!13025 = !DILocation(line: 742, column: 2, scope: !13018)
!13026 = !DILocation(line: 743, column: 2, scope: !13018)
!13027 = !DILocation(line: 747, column: 13, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13018, file: !2211, line: 747, column: 6)
!13029 = !DILocation(line: 747, column: 6, scope: !13018)
!13030 = !DILocation(line: 748, column: 16, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13028, file: !2211, line: 747, column: 22)
!13032 = !DILocation(line: 748, column: 26, scope: !13031)
!13033 = !DILocation(line: 749, column: 28, scope: !13031)
!13034 = !DILocation(line: 0, scope: !12296, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 749, column: 3, scope: !13031)
!13036 = !DILocation(line: 186, column: 2, scope: !12306, inlinedAt: !13035)
!13037 = !DILocation(line: 186, column: 2, scope: !12307, inlinedAt: !13035)
!13038 = !DILocation(line: 186, column: 2, scope: !12310, inlinedAt: !13035)
!13039 = !DILocation(line: 188, column: 2, scope: !12312, inlinedAt: !13035)
!13040 = !DILocation(line: 188, column: 2, scope: !12314, inlinedAt: !13035)
!13041 = !DILocation(line: 0, scope: !12312, inlinedAt: !13035)
!13042 = !DILocation(line: 189, column: 7, scope: !12317, inlinedAt: !13035)
!13043 = !DILocation(line: 189, column: 35, scope: !12317, inlinedAt: !13035)
!13044 = !DILocation(line: 189, column: 7, scope: !12318, inlinedAt: !13035)
!13045 = !DILocation(line: 191, column: 21, scope: !12322, inlinedAt: !13035)
!13046 = !DILocation(line: 190, column: 4, scope: !12322, inlinedAt: !13035)
!13047 = !DILocation(line: 192, column: 4, scope: !12322, inlinedAt: !13035)
!13048 = distinct !{!13048, !13039, !13049}
!13049 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !13035)
!13050 = !DILocation(line: 196, column: 37, scope: !12296, inlinedAt: !13035)
!13051 = !DILocation(line: 196, column: 2, scope: !12296, inlinedAt: !13035)
!13052 = !DILocation(line: 197, column: 1, scope: !12296, inlinedAt: !13035)
!13053 = !DILocation(line: 751, column: 1, scope: !13018)
!13054 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2211, file: !2211, line: 753, type: !13055, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{null, !2110, !12961}
!13057 = !{!13058, !13059}
!13058 = !DILocalVariable(name: "thread", arg: 1, scope: !13054, file: !2211, line: 753, type: !2110)
!13059 = !DILocalVariable(name: "timeout", arg: 2, scope: !13054, file: !2211, line: 753, type: !12961)
!13060 = !DILocation(line: 0, scope: !13054)
!13061 = !DILocation(line: 755, column: 7, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13054, file: !2211, line: 755, column: 6)
!13063 = !DILocation(line: 755, column: 6, scope: !13054)
!13064 = !DILocation(line: 756, column: 3, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13062, file: !2211, line: 755, column: 41)
!13066 = !DILocation(line: 757, column: 2, scope: !13065)
!13067 = !DILocation(line: 758, column: 1, scope: !13054)
!13068 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !10862, file: !10862, line: 47, type: !13055, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13069)
!13069 = !{!13070, !13071}
!13070 = !DILocalVariable(name: "thread", arg: 1, scope: !13068, file: !10862, line: 47, type: !2110)
!13071 = !DILocalVariable(name: "ticks", arg: 2, scope: !13068, file: !10862, line: 47, type: !12961)
!13072 = !DILocation(line: 0, scope: !13068)
!13073 = !DILocation(line: 49, column: 30, scope: !13068)
!13074 = !DILocation(line: 49, column: 2, scope: !13068)
!13075 = !DILocation(line: 50, column: 1, scope: !13068)
!13076 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2211, file: !2211, line: 795, type: !2167, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13077)
!13077 = !{!13078, !13079, !13080, !13082, !13083}
!13078 = !DILocalVariable(name: "timeout", arg: 1, scope: !13076, file: !2211, line: 795, type: !2169)
!13079 = !DILocalVariable(name: "thread", scope: !13076, file: !2211, line: 797, type: !2110)
!13080 = !DILocalVariable(name: "__i", scope: !13081, file: !2211, line: 800, type: !12063)
!13081 = distinct !DILexicalBlock(scope: !13076, file: !2211, line: 800, column: 2)
!13082 = !DILocalVariable(name: "__key", scope: !13081, file: !2211, line: 800, type: !12063)
!13083 = !DILocalVariable(name: "killed", scope: !13084, file: !2211, line: 801, type: !146)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !2211, line: 800, column: 26)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !2211, line: 800, column: 2)
!13086 = !DILocation(line: 0, scope: !13076)
!13087 = !DILocation(line: 797, column: 28, scope: !13076)
!13088 = !DILocation(line: 0, scope: !13081)
!13089 = !DILocation(line: 0, scope: !12071, inlinedAt: !13090)
!13090 = distinct !DILocation(line: 800, column: 2, scope: !13081)
!13091 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13092)
!13092 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13090)
!13093 = !DILocation(line: 0, scope: !12080, inlinedAt: !13092)
!13094 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13090)
!13095 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13090)
!13096 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13090)
!13097 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13090)
!13098 = !DILocation(line: 801, column: 27, scope: !13084)
!13099 = !DILocation(line: 801, column: 32, scope: !13084)
!13100 = !DILocation(line: 801, column: 61, scope: !13084)
!13101 = !DILocation(line: 0, scope: !13084)
!13102 = !DILocation(line: 804, column: 7, scope: !13084)
!13103 = !DILocation(line: 805, column: 21, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !2211, line: 805, column: 8)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !2211, line: 804, column: 16)
!13106 = distinct !DILexicalBlock(scope: !13084, file: !2211, line: 804, column: 7)
!13107 = !DILocation(line: 805, column: 31, scope: !13104)
!13108 = !DILocation(line: 805, column: 8, scope: !13105)
!13109 = !DILocation(line: 806, column: 5, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13104, file: !2211, line: 805, column: 40)
!13111 = !DILocation(line: 807, column: 4, scope: !13110)
!13112 = !DILocation(line: 808, column: 4, scope: !13105)
!13113 = !DILocation(line: 809, column: 4, scope: !13105)
!13114 = !DILocation(line: 810, column: 4, scope: !13105)
!13115 = !DILocation(line: 811, column: 3, scope: !13105)
!13116 = !DILocation(line: 0, scope: !12105, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 800, column: 2, scope: !13085)
!13118 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13117)
!13119 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13117)
!13120 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13117)
!13121 = !DILocation(line: 0, scope: !12119, inlinedAt: !13122)
!13122 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13117)
!13123 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13122)
!13124 = !DILocation(line: 813, column: 1, scope: !13076)
!13125 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2211, file: !2211, line: 779, type: !12029, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13126)
!13126 = !{!13127}
!13127 = !DILocalVariable(name: "thread", arg: 1, scope: !13125, file: !2211, line: 779, type: !2110)
!13128 = !DILocation(line: 0, scope: !13125)
!13129 = !DILocation(line: 781, column: 21, scope: !13125)
!13130 = !DILocation(line: 781, column: 2, scope: !13125)
!13131 = !DILocation(line: 782, column: 2, scope: !13125)
!13132 = !DILocation(line: 783, column: 15, scope: !13125)
!13133 = !DILocation(line: 783, column: 25, scope: !13125)
!13134 = !DILocation(line: 784, column: 1, scope: !13125)
!13135 = distinct !DISubprogram(name: "pended_on_thread", scope: !2211, file: !2211, line: 724, type: !13136, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13138)
!13136 = !DISubroutineType(types: !13137)
!13137 = !{!2141, !2110}
!13138 = !{!13139}
!13139 = !DILocalVariable(name: "thread", arg: 1, scope: !13135, file: !2211, line: 724, type: !2110)
!13140 = !DILocation(line: 0, scope: !13135)
!13141 = !DILocation(line: 726, column: 2, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !2211, line: 726, column: 2)
!13143 = distinct !DILexicalBlock(scope: !13135, file: !2211, line: 726, column: 2)
!13144 = !DILocation(line: 726, column: 2, scope: !13143)
!13145 = !DILocation(line: 726, column: 2, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13142, file: !2211, line: 726, column: 2)
!13147 = !DILocation(line: 728, column: 2, scope: !13135)
!13148 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10477, file: !10477, line: 165, type: !12029, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13149)
!13149 = !{!13150}
!13150 = !DILocalVariable(name: "thread", arg: 1, scope: !13148, file: !10477, line: 165, type: !2110)
!13151 = !DILocation(line: 0, scope: !13148)
!13152 = !DILocation(line: 167, column: 15, scope: !13148)
!13153 = !DILocation(line: 167, column: 28, scope: !13148)
!13154 = !DILocation(line: 168, column: 1, scope: !13148)
!13155 = distinct !DISubprogram(name: "unready_thread", scope: !2211, file: !2211, line: 731, type: !12029, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13156)
!13156 = !{!13157}
!13157 = !DILocalVariable(name: "thread", arg: 1, scope: !13155, file: !2211, line: 731, type: !2110)
!13158 = !DILocation(line: 0, scope: !13155)
!13159 = !DILocation(line: 733, column: 6, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13155, file: !2211, line: 733, column: 6)
!13161 = !DILocation(line: 733, column: 6, scope: !13155)
!13162 = !DILocation(line: 0, scope: !12265, inlinedAt: !13163)
!13163 = distinct !DILocation(line: 734, column: 3, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13160, file: !2211, line: 733, column: 34)
!13165 = !DILocation(line: 266, column: 15, scope: !12265, inlinedAt: !13163)
!13166 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !13163)
!13167 = !DILocation(line: 0, scope: !12273, inlinedAt: !13168)
!13168 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !13163)
!13169 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !13168)
!13170 = !DILocation(line: 735, column: 2, scope: !13164)
!13171 = !DILocation(line: 736, column: 25, scope: !13155)
!13172 = !DILocation(line: 736, column: 22, scope: !13155)
!13173 = !DILocation(line: 736, column: 2, scope: !13155)
!13174 = !DILocation(line: 737, column: 1, scope: !13155)
!13175 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10477, file: !10477, line: 160, type: !12029, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13176)
!13176 = !{!13177}
!13177 = !DILocalVariable(name: "thread", arg: 1, scope: !13175, file: !10477, line: 160, type: !2110)
!13178 = !DILocation(line: 0, scope: !13175)
!13179 = !DILocation(line: 162, column: 15, scope: !13175)
!13180 = !DILocation(line: 162, column: 28, scope: !13175)
!13181 = !DILocation(line: 163, column: 1, scope: !13175)
!13182 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2211, file: !2211, line: 786, type: !12029, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13183)
!13183 = !{!13184, !13185, !13187}
!13184 = !DILocalVariable(name: "thread", arg: 1, scope: !13182, file: !2211, line: 786, type: !2110)
!13185 = !DILocalVariable(name: "__i", scope: !13186, file: !2211, line: 788, type: !12063)
!13186 = distinct !DILexicalBlock(scope: !13182, file: !2211, line: 788, column: 2)
!13187 = !DILocalVariable(name: "__key", scope: !13186, file: !2211, line: 788, type: !12063)
!13188 = !DILocation(line: 0, scope: !13182)
!13189 = !DILocation(line: 0, scope: !13186)
!13190 = !DILocation(line: 0, scope: !12071, inlinedAt: !13191)
!13191 = distinct !DILocation(line: 788, column: 2, scope: !13186)
!13192 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13193)
!13193 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13191)
!13194 = !DILocation(line: 0, scope: !12080, inlinedAt: !13193)
!13195 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13191)
!13196 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13191)
!13197 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13191)
!13198 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13191)
!13199 = !DILocation(line: 789, column: 3, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !2211, line: 788, column: 26)
!13201 = distinct !DILexicalBlock(scope: !13186, file: !2211, line: 788, column: 2)
!13202 = !DILocation(line: 0, scope: !12105, inlinedAt: !13203)
!13203 = distinct !DILocation(line: 788, column: 2, scope: !13201)
!13204 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13203)
!13205 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13203)
!13206 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13203)
!13207 = !DILocation(line: 0, scope: !12119, inlinedAt: !13208)
!13208 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13203)
!13209 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13208)
!13210 = !DILocation(line: 791, column: 1, scope: !13182)
!13211 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2211, file: !2211, line: 816, type: !13212, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13214)
!13212 = !DISubroutineType(types: !13213)
!13213 = !{!118, !156, !2141, !12961}
!13214 = !{!13215, !13216, !13217, !13218, !13219, !13221}
!13215 = !DILocalVariable(name: "key", arg: 1, scope: !13211, file: !2211, line: 816, type: !156)
!13216 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13211, file: !2211, line: 816, type: !2141)
!13217 = !DILocalVariable(name: "timeout", arg: 3, scope: !13211, file: !2211, line: 816, type: !12961)
!13218 = !DILocalVariable(name: "ret", scope: !13211, file: !2211, line: 828, type: !118)
!13219 = !DILocalVariable(name: "__i", scope: !13220, file: !2211, line: 829, type: !12063)
!13220 = distinct !DILexicalBlock(scope: !13211, file: !2211, line: 829, column: 2)
!13221 = !DILocalVariable(name: "__key", scope: !13220, file: !2211, line: 829, type: !12063)
!13222 = !DILocation(line: 0, scope: !13211)
!13223 = !DILocation(line: 823, column: 14, scope: !13211)
!13224 = !DILocation(line: 823, column: 2, scope: !13211)
!13225 = !DILocation(line: 826, column: 20, scope: !13211)
!13226 = !DILocation(line: 826, column: 18, scope: !13211)
!13227 = !DILocation(line: 828, column: 12, scope: !13211)
!13228 = !DILocation(line: 0, scope: !13220)
!13229 = !DILocation(line: 0, scope: !12071, inlinedAt: !13230)
!13230 = distinct !DILocation(line: 829, column: 2, scope: !13220)
!13231 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13232)
!13232 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13230)
!13233 = !DILocation(line: 0, scope: !12080, inlinedAt: !13232)
!13234 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13230)
!13235 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13230)
!13236 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13230)
!13237 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13230)
!13238 = !DILocation(line: 830, column: 7, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !2211, line: 830, column: 7)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !2211, line: 829, column: 26)
!13241 = distinct !DILexicalBlock(scope: !13220, file: !2211, line: 829, column: 2)
!13242 = !DILocation(line: 830, column: 26, scope: !13239)
!13243 = !DILocation(line: 830, column: 23, scope: !13239)
!13244 = !DILocation(line: 830, column: 7, scope: !13240)
!13245 = !DILocation(line: 831, column: 20, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13239, file: !2211, line: 830, column: 36)
!13247 = !DILocation(line: 832, column: 3, scope: !13246)
!13248 = !DILocation(line: 0, scope: !12105, inlinedAt: !13249)
!13249 = distinct !DILocation(line: 829, column: 2, scope: !13241)
!13250 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13249)
!13251 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13249)
!13252 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13249)
!13253 = !DILocation(line: 0, scope: !12119, inlinedAt: !13254)
!13254 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13249)
!13255 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13254)
!13256 = !DILocation(line: 834, column: 2, scope: !13211)
!13257 = distinct !DISubprogram(name: "z_pend_curr", scope: !2211, file: !2211, line: 840, type: !13258, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13260)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{!118, !12074, !12063, !2141, !12961}
!13260 = !{!13261, !13262, !13263, !13264}
!13261 = !DILocalVariable(name: "lock", arg: 1, scope: !13257, file: !2211, line: 840, type: !12074)
!13262 = !DILocalVariable(name: "key", arg: 2, scope: !13257, file: !2211, line: 840, type: !12063)
!13263 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13257, file: !2211, line: 841, type: !2141)
!13264 = !DILocalVariable(name: "timeout", arg: 4, scope: !13257, file: !2211, line: 841, type: !12961)
!13265 = !DILocation(line: 0, scope: !13257)
!13266 = !DILocation(line: 844, column: 20, scope: !13257)
!13267 = !DILocation(line: 844, column: 18, scope: !13257)
!13268 = !DILocation(line: 846, column: 2, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !2211, line: 846, column: 2)
!13270 = distinct !DILexicalBlock(scope: !13257, file: !2211, line: 846, column: 2)
!13271 = !DILocation(line: 846, column: 2, scope: !13270)
!13272 = !DILocation(line: 846, column: 2, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13269, file: !2211, line: 846, column: 2)
!13274 = !DILocation(line: 0, scope: !12071, inlinedAt: !13275)
!13275 = distinct !DILocation(line: 856, column: 9, scope: !13257)
!13276 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13277)
!13277 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13275)
!13278 = !DILocation(line: 0, scope: !12080, inlinedAt: !13277)
!13279 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13275)
!13280 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13275)
!13281 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13275)
!13282 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13275)
!13283 = !DILocation(line: 857, column: 14, scope: !13257)
!13284 = !DILocation(line: 857, column: 2, scope: !13257)
!13285 = !DILocation(line: 0, scope: !12760, inlinedAt: !13286)
!13286 = distinct !DILocation(line: 858, column: 2, scope: !13257)
!13287 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !13286)
!13288 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !13286)
!13289 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !13286)
!13290 = !DILocation(line: 0, scope: !12751, inlinedAt: !13291)
!13291 = distinct !DILocation(line: 859, column: 9, scope: !13257)
!13292 = !DILocation(line: 0, scope: !12760, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !13291)
!13294 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !13293)
!13295 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !13293)
!13296 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !13293)
!13297 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !13291)
!13298 = !DILocation(line: 859, column: 2, scope: !13257)
!13299 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2211, file: !2211, line: 862, type: !13300, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13302)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{!2110, !2141}
!13302 = !{!13303, !13304, !13305, !13307}
!13303 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13299, file: !2211, line: 862, type: !2141)
!13304 = !DILocalVariable(name: "thread", scope: !13299, file: !2211, line: 864, type: !2110)
!13305 = !DILocalVariable(name: "__i", scope: !13306, file: !2211, line: 866, type: !12063)
!13306 = distinct !DILexicalBlock(scope: !13299, file: !2211, line: 866, column: 2)
!13307 = !DILocalVariable(name: "__key", scope: !13306, file: !2211, line: 866, type: !12063)
!13308 = !DILocation(line: 0, scope: !13299)
!13309 = !DILocation(line: 0, scope: !13306)
!13310 = !DILocation(line: 0, scope: !12071, inlinedAt: !13311)
!13311 = distinct !DILocation(line: 866, column: 2, scope: !13306)
!13312 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13313)
!13313 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13311)
!13314 = !DILocation(line: 0, scope: !12080, inlinedAt: !13313)
!13315 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13311)
!13316 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13311)
!13317 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13311)
!13318 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13311)
!13319 = !DILocation(line: 867, column: 12, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !2211, line: 866, column: 26)
!13321 = distinct !DILexicalBlock(scope: !13306, file: !2211, line: 866, column: 2)
!13322 = !DILocation(line: 869, column: 14, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !2211, line: 869, column: 7)
!13324 = !DILocation(line: 869, column: 7, scope: !13320)
!13325 = !DILocation(line: 870, column: 4, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13323, file: !2211, line: 869, column: 23)
!13327 = !DILocation(line: 871, column: 3, scope: !13326)
!13328 = !DILocation(line: 0, scope: !12105, inlinedAt: !13329)
!13329 = distinct !DILocation(line: 866, column: 2, scope: !13321)
!13330 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13329)
!13331 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13329)
!13332 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13329)
!13333 = !DILocation(line: 0, scope: !12119, inlinedAt: !13334)
!13334 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13329)
!13335 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13334)
!13336 = !DILocation(line: 874, column: 2, scope: !13299)
!13337 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2211, file: !2211, line: 877, type: !13300, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13338)
!13338 = !{!13339, !13340, !13341, !13343}
!13339 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13337, file: !2211, line: 877, type: !2141)
!13340 = !DILocalVariable(name: "thread", scope: !13337, file: !2211, line: 879, type: !2110)
!13341 = !DILocalVariable(name: "__i", scope: !13342, file: !2211, line: 881, type: !12063)
!13342 = distinct !DILexicalBlock(scope: !13337, file: !2211, line: 881, column: 2)
!13343 = !DILocalVariable(name: "__key", scope: !13342, file: !2211, line: 881, type: !12063)
!13344 = !DILocation(line: 0, scope: !13337)
!13345 = !DILocation(line: 0, scope: !13342)
!13346 = !DILocation(line: 0, scope: !12071, inlinedAt: !13347)
!13347 = distinct !DILocation(line: 881, column: 2, scope: !13342)
!13348 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13349)
!13349 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13347)
!13350 = !DILocation(line: 0, scope: !12080, inlinedAt: !13349)
!13351 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13347)
!13352 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13347)
!13353 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13347)
!13354 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13347)
!13355 = !DILocation(line: 882, column: 12, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13357, file: !2211, line: 881, column: 26)
!13357 = distinct !DILexicalBlock(scope: !13342, file: !2211, line: 881, column: 2)
!13358 = !DILocation(line: 884, column: 14, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13356, file: !2211, line: 884, column: 7)
!13360 = !DILocation(line: 884, column: 7, scope: !13356)
!13361 = !DILocation(line: 885, column: 4, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13359, file: !2211, line: 884, column: 23)
!13363 = !DILocation(line: 886, column: 10, scope: !13362)
!13364 = !DILocation(line: 887, column: 3, scope: !13362)
!13365 = !DILocation(line: 0, scope: !12105, inlinedAt: !13366)
!13366 = distinct !DILocation(line: 881, column: 2, scope: !13357)
!13367 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13366)
!13368 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13366)
!13369 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13366)
!13370 = !DILocation(line: 0, scope: !12119, inlinedAt: !13371)
!13371 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13366)
!13372 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13371)
!13373 = !DILocation(line: 890, column: 2, scope: !13337)
!13374 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2211, file: !2211, line: 893, type: !12029, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13375)
!13375 = !{!13376}
!13376 = !DILocalVariable(name: "thread", arg: 1, scope: !13374, file: !2211, line: 893, type: !2110)
!13377 = !DILocation(line: 0, scope: !13374)
!13378 = !DILocation(line: 0, scope: !13182, inlinedAt: !13379)
!13379 = distinct !DILocation(line: 895, column: 2, scope: !13374)
!13380 = !DILocation(line: 0, scope: !13186, inlinedAt: !13379)
!13381 = !DILocation(line: 0, scope: !12071, inlinedAt: !13382)
!13382 = distinct !DILocation(line: 788, column: 2, scope: !13186, inlinedAt: !13379)
!13383 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13382)
!13385 = !DILocation(line: 0, scope: !12080, inlinedAt: !13384)
!13386 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13382)
!13387 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13382)
!13388 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13382)
!13389 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13382)
!13390 = !DILocation(line: 789, column: 3, scope: !13200, inlinedAt: !13379)
!13391 = !DILocation(line: 0, scope: !12105, inlinedAt: !13392)
!13392 = distinct !DILocation(line: 788, column: 2, scope: !13201, inlinedAt: !13379)
!13393 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13392)
!13394 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13392)
!13395 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13392)
!13396 = !DILocation(line: 0, scope: !12119, inlinedAt: !13397)
!13397 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13392)
!13398 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13397)
!13399 = !DILocation(line: 896, column: 8, scope: !13374)
!13400 = !DILocation(line: 897, column: 1, scope: !13374)
!13401 = distinct !DISubprogram(name: "z_set_prio", scope: !2211, file: !2211, line: 902, type: !12434, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13402)
!13402 = !{!13403, !13404, !13405, !13406, !13408}
!13403 = !DILocalVariable(name: "thread", arg: 1, scope: !13401, file: !2211, line: 902, type: !2110)
!13404 = !DILocalVariable(name: "prio", arg: 2, scope: !13401, file: !2211, line: 902, type: !118)
!13405 = !DILocalVariable(name: "need_sched", scope: !13401, file: !2211, line: 904, type: !146)
!13406 = !DILocalVariable(name: "__i", scope: !13407, file: !2211, line: 906, type: !12063)
!13407 = distinct !DILexicalBlock(scope: !13401, file: !2211, line: 906, column: 2)
!13408 = !DILocalVariable(name: "__key", scope: !13407, file: !2211, line: 906, type: !12063)
!13409 = !DILocation(line: 0, scope: !13401)
!13410 = !DILocation(line: 0, scope: !13407)
!13411 = !DILocation(line: 0, scope: !12071, inlinedAt: !13412)
!13412 = distinct !DILocation(line: 906, column: 2, scope: !13407)
!13413 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13414)
!13414 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13412)
!13415 = !DILocation(line: 0, scope: !12080, inlinedAt: !13414)
!13416 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13412)
!13417 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13412)
!13418 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13412)
!13419 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13412)
!13420 = !DILocation(line: 907, column: 16, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13422, file: !2211, line: 906, column: 26)
!13422 = distinct !DILexicalBlock(scope: !13407, file: !2211, line: 906, column: 2)
!13423 = !DILocation(line: 909, column: 7, scope: !13421)
!13424 = !DILocation(line: 0, scope: !12265, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 912, column: 5, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !2211, line: 911, column: 63)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !2211, line: 911, column: 8)
!13428 = distinct !DILexicalBlock(scope: !13429, file: !2211, line: 909, column: 19)
!13429 = distinct !DILexicalBlock(scope: !13421, file: !2211, line: 909, column: 7)
!13430 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !13425)
!13431 = !DILocation(line: 0, scope: !12273, inlinedAt: !13432)
!13432 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !13425)
!13433 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !13432)
!13434 = !DILocation(line: 913, column: 23, scope: !13426)
!13435 = !DILocation(line: 0, scope: !12282, inlinedAt: !13436)
!13436 = distinct !DILocation(line: 914, column: 5, scope: !13426)
!13437 = !DILocation(line: 252, column: 28, scope: !12282, inlinedAt: !13436)
!13438 = !DILocation(line: 0, scope: !12289, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 254, column: 3, scope: !12293, inlinedAt: !13436)
!13440 = !DILocation(line: 0, scope: !12296, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 229, column: 2, scope: !12289, inlinedAt: !13439)
!13442 = !DILocation(line: 186, column: 2, scope: !12306, inlinedAt: !13441)
!13443 = !DILocation(line: 186, column: 2, scope: !12307, inlinedAt: !13441)
!13444 = !DILocation(line: 186, column: 2, scope: !12310, inlinedAt: !13441)
!13445 = !DILocation(line: 188, column: 2, scope: !12312, inlinedAt: !13441)
!13446 = !DILocation(line: 188, column: 2, scope: !12314, inlinedAt: !13441)
!13447 = !DILocation(line: 0, scope: !12312, inlinedAt: !13441)
!13448 = !DILocation(line: 189, column: 7, scope: !12317, inlinedAt: !13441)
!13449 = !DILocation(line: 189, column: 35, scope: !12317, inlinedAt: !13441)
!13450 = !DILocation(line: 189, column: 7, scope: !12318, inlinedAt: !13441)
!13451 = !DILocation(line: 190, column: 4, scope: !12322, inlinedAt: !13441)
!13452 = !DILocation(line: 192, column: 4, scope: !12322, inlinedAt: !13441)
!13453 = distinct !{!13453, !13445, !13454}
!13454 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !13441)
!13455 = !DILocation(line: 196, column: 2, scope: !12296, inlinedAt: !13441)
!13456 = !DILocation(line: 197, column: 1, scope: !12296, inlinedAt: !13441)
!13457 = !DILocation(line: 918, column: 4, scope: !13428)
!13458 = !DILocation(line: 919, column: 3, scope: !13428)
!13459 = !DILocation(line: 920, column: 22, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13429, file: !2211, line: 919, column: 10)
!13461 = !DILocation(line: 0, scope: !12105, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 906, column: 2, scope: !13422)
!13463 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13462)
!13464 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13462)
!13465 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13462)
!13466 = !DILocation(line: 0, scope: !12119, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13462)
!13468 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13467)
!13469 = !DILocation(line: 926, column: 2, scope: !13401)
!13470 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2211, file: !2211, line: 929, type: !13471, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13473)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{null, !2110, !118}
!13473 = !{!13474, !13475, !13476}
!13474 = !DILocalVariable(name: "thread", arg: 1, scope: !13470, file: !2211, line: 929, type: !2110)
!13475 = !DILocalVariable(name: "prio", arg: 2, scope: !13470, file: !2211, line: 929, type: !118)
!13476 = !DILocalVariable(name: "need_sched", scope: !13470, file: !2211, line: 931, type: !146)
!13477 = !DILocation(line: 0, scope: !13470)
!13478 = !DILocation(line: 931, column: 20, scope: !13470)
!13479 = !DILocation(line: 935, column: 17, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13470, file: !2211, line: 935, column: 6)
!13481 = !DILocation(line: 935, column: 20, scope: !13480)
!13482 = !DILocation(line: 935, column: 35, scope: !13480)
!13483 = !DILocation(line: 935, column: 48, scope: !13480)
!13484 = !DILocation(line: 935, column: 6, scope: !13470)
!13485 = !DILocation(line: 936, column: 3, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13480, file: !2211, line: 935, column: 55)
!13487 = !DILocation(line: 937, column: 2, scope: !13486)
!13488 = !DILocation(line: 938, column: 1, scope: !13470)
!13489 = distinct !DISubprogram(name: "k_sched_lock", scope: !2211, file: !2211, line: 987, type: !359, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13490)
!13490 = !{!13491, !13493}
!13491 = !DILocalVariable(name: "__i", scope: !13492, file: !2211, line: 989, type: !12063)
!13492 = distinct !DILexicalBlock(scope: !13489, file: !2211, line: 989, column: 2)
!13493 = !DILocalVariable(name: "__key", scope: !13492, file: !2211, line: 989, type: !12063)
!13494 = !DILocation(line: 0, scope: !13492)
!13495 = !DILocation(line: 0, scope: !12071, inlinedAt: !13496)
!13496 = distinct !DILocation(line: 989, column: 2, scope: !13492)
!13497 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13496)
!13499 = !DILocation(line: 0, scope: !12080, inlinedAt: !13498)
!13500 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13496)
!13501 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13496)
!13502 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13496)
!13503 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13496)
!13504 = !DILocation(line: 992, column: 3, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !2211, line: 989, column: 26)
!13506 = distinct !DILexicalBlock(scope: !13492, file: !2211, line: 989, column: 2)
!13507 = !DILocation(line: 0, scope: !12105, inlinedAt: !13508)
!13508 = distinct !DILocation(line: 989, column: 2, scope: !13506)
!13509 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13508)
!13510 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13508)
!13511 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13508)
!13512 = !DILocation(line: 0, scope: !12119, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13508)
!13514 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13513)
!13515 = !DILocation(line: 994, column: 1, scope: !13489)
!13516 = distinct !DISubprogram(name: "z_sched_lock", scope: !10477, file: !10477, line: 251, type: !359, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!13517 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13518)
!13518 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13519)
!13519 = distinct !DILocation(line: 253, column: 2, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !10477, line: 253, column: 2)
!13521 = distinct !DILexicalBlock(scope: !13516, file: !10477, line: 253, column: 2)
!13522 = !DILocation(line: 0, scope: !12800, inlinedAt: !13518)
!13523 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13519)
!13524 = !DILocation(line: 253, column: 2, scope: !13521)
!13525 = !DILocation(line: 253, column: 2, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13520, file: !10477, line: 253, column: 2)
!13527 = !DILocation(line: 254, column: 2, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !10477, line: 254, column: 2)
!13529 = distinct !DILexicalBlock(scope: !13516, file: !10477, line: 254, column: 2)
!13530 = !DILocation(line: 254, column: 2, scope: !13529)
!13531 = !DILocation(line: 254, column: 2, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13528, file: !10477, line: 254, column: 2)
!13533 = !DILocation(line: 256, column: 2, scope: !13516)
!13534 = !DILocation(line: 258, column: 2, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13516, file: !10477, line: 258, column: 2)
!13536 = !{i64 2154800429}
!13537 = !DILocation(line: 259, column: 1, scope: !13516)
!13538 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2211, file: !2211, line: 996, type: !359, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13539)
!13539 = !{!13540, !13542}
!13540 = !DILocalVariable(name: "__i", scope: !13541, file: !2211, line: 998, type: !12063)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !2211, line: 998, column: 2)
!13542 = !DILocalVariable(name: "__key", scope: !13541, file: !2211, line: 998, type: !12063)
!13543 = !DILocation(line: 0, scope: !13541)
!13544 = !DILocation(line: 0, scope: !12071, inlinedAt: !13545)
!13545 = distinct !DILocation(line: 998, column: 2, scope: !13541)
!13546 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13547)
!13547 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13545)
!13548 = !DILocation(line: 0, scope: !12080, inlinedAt: !13547)
!13549 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13545)
!13550 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13545)
!13551 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13545)
!13552 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13545)
!13553 = !DILocation(line: 999, column: 3, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !2211, line: 999, column: 3)
!13555 = distinct !DILexicalBlock(scope: !13556, file: !2211, line: 999, column: 3)
!13556 = distinct !DILexicalBlock(scope: !13557, file: !2211, line: 998, column: 26)
!13557 = distinct !DILexicalBlock(scope: !13541, file: !2211, line: 998, column: 2)
!13558 = !DILocation(line: 999, column: 3, scope: !13555)
!13559 = !DILocation(line: 999, column: 3, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13554, file: !2211, line: 999, column: 3)
!13561 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13562)
!13562 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13563)
!13563 = distinct !DILocation(line: 1000, column: 3, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !2211, line: 1000, column: 3)
!13565 = distinct !DILexicalBlock(scope: !13556, file: !2211, line: 1000, column: 3)
!13566 = !DILocation(line: 0, scope: !12800, inlinedAt: !13562)
!13567 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13563)
!13568 = !DILocation(line: 1000, column: 3, scope: !13565)
!13569 = !DILocation(line: 1000, column: 3, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13564, file: !2211, line: 1000, column: 3)
!13571 = !DILocation(line: 1002, column: 5, scope: !13556)
!13572 = !DILocation(line: 1002, column: 20, scope: !13556)
!13573 = !DILocation(line: 1002, column: 3, scope: !13556)
!13574 = !DILocation(line: 1003, column: 3, scope: !13556)
!13575 = !DILocation(line: 0, scope: !12105, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 998, column: 2, scope: !13557)
!13577 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !13576)
!13578 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !13576)
!13579 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !13576)
!13580 = !DILocation(line: 0, scope: !12119, inlinedAt: !13581)
!13581 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !13576)
!13582 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !13581)
!13583 = !DILocation(line: 1011, column: 2, scope: !13538)
!13584 = !DILocation(line: 1012, column: 1, scope: !13538)
!13585 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2211, file: !2211, line: 1014, type: !12422, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!13586 = !DILocation(line: 1028, column: 25, scope: !13585)
!13587 = !DILocation(line: 1028, column: 2, scope: !13585)
!13588 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2211, file: !2211, line: 1155, type: !13589, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13591)
!13589 = !DISubroutineType(types: !13590)
!13590 = !{!146, !2139, !2139}
!13591 = !{!13592, !13593, !13594, !13595, !13596}
!13592 = !DILocalVariable(name: "a", arg: 1, scope: !13588, file: !2211, line: 1155, type: !2139)
!13593 = !DILocalVariable(name: "b", arg: 2, scope: !13588, file: !2211, line: 1155, type: !2139)
!13594 = !DILocalVariable(name: "thread_a", scope: !13588, file: !2211, line: 1157, type: !2110)
!13595 = !DILocalVariable(name: "thread_b", scope: !13588, file: !2211, line: 1157, type: !2110)
!13596 = !DILocalVariable(name: "cmp", scope: !13588, file: !2211, line: 1158, type: !356)
!13597 = !DILocation(line: 0, scope: !13588)
!13598 = !DILocation(line: 1160, column: 13, scope: !13588)
!13599 = !DILocation(line: 1161, column: 13, scope: !13588)
!13600 = !DILocation(line: 1163, column: 8, scope: !13588)
!13601 = !DILocation(line: 1165, column: 10, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13588, file: !2211, line: 1165, column: 6)
!13603 = !DILocation(line: 1165, column: 6, scope: !13588)
!13604 = !DILocation(line: 1167, column: 17, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13602, file: !2211, line: 1167, column: 13)
!13606 = !DILocation(line: 1167, column: 13, scope: !13602)
!13607 = !DILocation(line: 1170, column: 25, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13605, file: !2211, line: 1169, column: 9)
!13609 = !DILocation(line: 1170, column: 52, scope: !13608)
!13610 = !DILocation(line: 1170, column: 35, scope: !13608)
!13611 = !DILocation(line: 1170, column: 3, scope: !13608)
!13612 = !DILocation(line: 0, scope: !13602)
!13613 = !DILocation(line: 1173, column: 1, scope: !13588)
!13614 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2211, file: !2211, line: 1175, type: !13615, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13630)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{null, !13617, !2110}
!13617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13618, size: 32)
!13618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13619, line: 37, size: 128, elements: !13620)
!13619 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13620 = !{!13621, !13629}
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13618, file: !13619, line: 38, baseType: !13622, size: 96)
!13622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !251, line: 83, size: 96, elements: !13623)
!13623 = !{!13624, !13625, !13628}
!13624 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13622, file: !251, line: 84, baseType: !2139, size: 32)
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13622, file: !251, line: 85, baseType: !13626, size: 32, offset: 32)
!13626 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !251, line: 81, baseType: !13627)
!13627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13589, size: 32)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13622, file: !251, line: 86, baseType: !118, size: 32, offset: 64)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13618, file: !13619, line: 39, baseType: !118, size: 32, offset: 96)
!13630 = !{!13631, !13632, !13633, !13634, !13643}
!13631 = !DILocalVariable(name: "pq", arg: 1, scope: !13614, file: !2211, line: 1175, type: !13617)
!13632 = !DILocalVariable(name: "thread", arg: 2, scope: !13614, file: !2211, line: 1175, type: !2110)
!13633 = !DILocalVariable(name: "t", scope: !13614, file: !2211, line: 1177, type: !2110)
!13634 = !DILocalVariable(name: "__f", scope: !13635, file: !2211, line: 1190, type: !13638)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !2211, line: 1190, column: 3)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !2211, line: 1189, column: 27)
!13637 = distinct !DILexicalBlock(scope: !13614, file: !2211, line: 1189, column: 6)
!13638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !251, line: 155, size: 96, elements: !13639)
!13639 = !{!13640, !13641, !13642}
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13638, file: !251, line: 156, baseType: !2206, size: 32)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13638, file: !251, line: 157, baseType: !940, size: 32, offset: 32)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13638, file: !251, line: 158, baseType: !356, size: 32, offset: 64)
!13643 = !DILocalVariable(name: "n", scope: !13644, file: !2211, line: 1190, type: !2139)
!13644 = distinct !DILexicalBlock(scope: !13645, file: !2211, line: 1190, column: 3)
!13645 = distinct !DILexicalBlock(scope: !13635, file: !2211, line: 1190, column: 3)
!13646 = !DILocation(line: 0, scope: !13614)
!13647 = !DILocation(line: 1179, column: 2, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !2211, line: 1179, column: 2)
!13649 = distinct !DILexicalBlock(scope: !13614, file: !2211, line: 1179, column: 2)
!13650 = !DILocation(line: 1179, column: 2, scope: !13649)
!13651 = !DILocation(line: 1179, column: 2, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13648, file: !2211, line: 1179, column: 2)
!13653 = !DILocation(line: 1181, column: 31, scope: !13614)
!13654 = !DILocation(line: 1181, column: 45, scope: !13614)
!13655 = !DILocation(line: 1181, column: 15, scope: !13614)
!13656 = !DILocation(line: 1181, column: 25, scope: !13614)
!13657 = !DILocation(line: 1189, column: 11, scope: !13637)
!13658 = !DILocation(line: 1189, column: 7, scope: !13637)
!13659 = !DILocation(line: 1189, column: 6, scope: !13614)
!13660 = !DILocation(line: 1190, column: 3, scope: !13635)
!13661 = !DILocation(line: 1190, column: 3, scope: !13644)
!13662 = !DILocation(line: 0, scope: !13644)
!13663 = !DILocation(line: 1190, column: 3, scope: !13645)
!13664 = !DILocation(line: 1193, column: 2, scope: !13636)
!13665 = !DILocation(line: 1191, column: 42, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13645, file: !2211, line: 1190, column: 54)
!13667 = !DILocation(line: 1191, column: 12, scope: !13666)
!13668 = !DILocation(line: 1191, column: 22, scope: !13666)
!13669 = distinct !{!13669, !13660, !13670}
!13670 = !DILocation(line: 1192, column: 3, scope: !13635)
!13671 = !DILocation(line: 1195, column: 17, scope: !13614)
!13672 = !DILocation(line: 1195, column: 37, scope: !13614)
!13673 = !DILocation(line: 1195, column: 2, scope: !13614)
!13674 = !DILocation(line: 1196, column: 1, scope: !13614)
!13675 = !DISubprogram(name: "z_rb_foreach_next", scope: !251, file: !251, line: 176, type: !13676, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!2139, !13678, !13679}
!13678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13622, size: 32)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13638, size: 32)
!13680 = !DISubprogram(name: "rb_insert", scope: !251, file: !251, line: 105, type: !13681, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !13678, !2139}
!13683 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2211, file: !2211, line: 1198, type: !13615, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13684)
!13684 = !{!13685, !13686}
!13685 = !DILocalVariable(name: "pq", arg: 1, scope: !13683, file: !2211, line: 1198, type: !13617)
!13686 = !DILocalVariable(name: "thread", arg: 2, scope: !13683, file: !2211, line: 1198, type: !2110)
!13687 = !DILocation(line: 0, scope: !13683)
!13688 = !DILocation(line: 1200, column: 2, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !2211, line: 1200, column: 2)
!13690 = distinct !DILexicalBlock(scope: !13683, file: !2211, line: 1200, column: 2)
!13691 = !DILocation(line: 1200, column: 2, scope: !13690)
!13692 = !DILocation(line: 1200, column: 2, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13689, file: !2211, line: 1200, column: 2)
!13694 = !DILocation(line: 1202, column: 17, scope: !13683)
!13695 = !DILocation(line: 1202, column: 37, scope: !13683)
!13696 = !DILocation(line: 1202, column: 2, scope: !13683)
!13697 = !DILocation(line: 1204, column: 16, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13683, file: !2211, line: 1204, column: 6)
!13699 = !DILocation(line: 1204, column: 7, scope: !13698)
!13700 = !DILocation(line: 1204, column: 6, scope: !13683)
!13701 = !DILocation(line: 1205, column: 7, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13698, file: !2211, line: 1204, column: 22)
!13703 = !DILocation(line: 1205, column: 22, scope: !13702)
!13704 = !DILocation(line: 1206, column: 2, scope: !13702)
!13705 = !DILocation(line: 1207, column: 1, scope: !13683)
!13706 = !DISubprogram(name: "rb_remove", scope: !251, file: !251, line: 110, type: !13681, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!13707 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2211, file: !2211, line: 1209, type: !13708, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13710)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{!2110, !13617}
!13710 = !{!13711, !13712, !13713}
!13711 = !DILocalVariable(name: "pq", arg: 1, scope: !13707, file: !2211, line: 1209, type: !13617)
!13712 = !DILocalVariable(name: "thread", scope: !13707, file: !2211, line: 1211, type: !2110)
!13713 = !DILocalVariable(name: "n", scope: !13707, file: !2211, line: 1212, type: !2139)
!13714 = !DILocation(line: 0, scope: !13707)
!13715 = !DILocation(line: 1212, column: 37, scope: !13707)
!13716 = !DILocation(line: 1212, column: 21, scope: !13707)
!13717 = !DILocation(line: 1217, column: 2, scope: !13707)
!13718 = distinct !DISubprogram(name: "rb_get_min", scope: !251, file: !251, line: 115, type: !13719, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!2139, !13678}
!13721 = !{!13722}
!13722 = !DILocalVariable(name: "tree", arg: 1, scope: !13718, file: !251, line: 115, type: !13678)
!13723 = !DILocation(line: 0, scope: !13718)
!13724 = !DILocation(line: 117, column: 9, scope: !13718)
!13725 = !DILocation(line: 117, column: 2, scope: !13718)
!13726 = !DISubprogram(name: "z_rb_get_minmax", scope: !251, file: !251, line: 100, type: !13727, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1933)
!13727 = !DISubroutineType(types: !13728)
!13728 = !{!2139, !13678, !143}
!13729 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2211, file: !2211, line: 1246, type: !13730, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13738)
!13730 = !DISubroutineType(types: !13731)
!13731 = !{!2110, !13732}
!13732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13733, size: 32)
!13733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13619, line: 53, size: 2080, elements: !13734)
!13734 = !{!13735, !13737}
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13733, file: !13619, line: 54, baseType: !13736, size: 2048)
!13736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 2048, elements: !803)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13733, file: !13619, line: 55, baseType: !32, size: 32, offset: 2048)
!13738 = !{!13739, !13740, !13741, !13742}
!13739 = !DILocalVariable(name: "pq", arg: 1, scope: !13729, file: !2211, line: 1246, type: !13732)
!13740 = !DILocalVariable(name: "thread", scope: !13729, file: !2211, line: 1252, type: !2110)
!13741 = !DILocalVariable(name: "l", scope: !13729, file: !2211, line: 1253, type: !12299)
!13742 = !DILocalVariable(name: "n", scope: !13729, file: !2211, line: 1254, type: !2207)
!13743 = !DILocation(line: 0, scope: !13729)
!13744 = !DILocation(line: 1248, column: 11, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13729, file: !2211, line: 1248, column: 6)
!13746 = !DILocation(line: 1248, column: 7, scope: !13745)
!13747 = !DILocation(line: 1248, column: 6, scope: !13729)
!13748 = !DILocation(line: 1253, column: 31, scope: !13729)
!13749 = !DILocation(line: 1253, column: 20, scope: !13729)
!13750 = !DILocation(line: 1254, column: 19, scope: !13729)
!13751 = !DILocation(line: 1260, column: 1, scope: !13729)
!13752 = distinct !DISubprogram(name: "z_unpend_all", scope: !2211, file: !2211, line: 1262, type: !13753, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13755)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{!118, !2141}
!13755 = !{!13756, !13757, !13758}
!13756 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13752, file: !2211, line: 1262, type: !2141)
!13757 = !DILocalVariable(name: "need_sched", scope: !13752, file: !2211, line: 1264, type: !118)
!13758 = !DILocalVariable(name: "thread", scope: !13752, file: !2211, line: 1265, type: !2110)
!13759 = !DILocation(line: 0, scope: !13752)
!13760 = !DILocation(line: 1267, column: 19, scope: !13752)
!13761 = !DILocation(line: 1267, column: 41, scope: !13752)
!13762 = !DILocation(line: 1267, column: 2, scope: !13752)
!13763 = !DILocation(line: 1268, column: 3, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13752, file: !2211, line: 1267, column: 50)
!13765 = !DILocation(line: 1269, column: 3, scope: !13764)
!13766 = distinct !{!13766, !13762, !13767}
!13767 = !DILocation(line: 1271, column: 2, scope: !13752)
!13768 = !DILocation(line: 1273, column: 2, scope: !13752)
!13769 = distinct !DISubprogram(name: "z_waitq_head", scope: !10810, file: !10810, line: 52, type: !13300, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13770)
!13770 = !{!13771}
!13771 = !DILocalVariable(name: "w", arg: 1, scope: !13769, file: !10810, line: 52, type: !2141)
!13772 = !DILocation(line: 0, scope: !13769)
!13773 = !DILocation(line: 54, column: 52, scope: !13769)
!13774 = !DILocation(line: 54, column: 28, scope: !13769)
!13775 = !DILocation(line: 54, column: 9, scope: !13769)
!13776 = !DILocation(line: 54, column: 2, scope: !13769)
!13777 = distinct !DISubprogram(name: "init_ready_q", scope: !2211, file: !2211, line: 1276, type: !13778, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13785)
!13778 = !DISubroutineType(types: !13779)
!13779 = !{null, !13780}
!13780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13781, size: 32)
!13781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !13782)
!13782 = !{!13783, !13784}
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13781, file: !261, line: 86, baseType: !2110, size: 32)
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13781, file: !261, line: 90, baseType: !2146, size: 64, offset: 32)
!13785 = !{!13786}
!13786 = !DILocalVariable(name: "rq", arg: 1, scope: !13777, file: !2211, line: 1276, type: !13780)
!13787 = !DILocation(line: 0, scope: !13777)
!13788 = !DILocation(line: 1289, column: 22, scope: !13777)
!13789 = !DILocation(line: 1289, column: 2, scope: !13777)
!13790 = !DILocation(line: 1291, column: 1, scope: !13777)
!13791 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13792, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13794)
!13792 = !DISubroutineType(types: !13793)
!13793 = !{null, !12299}
!13794 = !{!13795}
!13795 = !DILocalVariable(name: "list", arg: 1, scope: !13791, file: !235, line: 197, type: !12299)
!13796 = !DILocation(line: 0, scope: !13791)
!13797 = !DILocation(line: 199, column: 8, scope: !13791)
!13798 = !DILocation(line: 199, column: 13, scope: !13791)
!13799 = !DILocation(line: 200, column: 8, scope: !13791)
!13800 = !DILocation(line: 200, column: 13, scope: !13791)
!13801 = !DILocation(line: 201, column: 1, scope: !13791)
!13802 = distinct !DISubprogram(name: "z_sched_init", scope: !2211, file: !2211, line: 1293, type: !359, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!13803 = !DILocation(line: 1302, column: 2, scope: !13802)
!13804 = !DILocation(line: 1306, column: 2, scope: !13802)
!13805 = !DILocation(line: 1309, column: 1, scope: !13802)
!13806 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2211, file: !2211, line: 1311, type: !13807, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13810)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{!118, !13809}
!13809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2110)
!13810 = !{!13811}
!13811 = !DILocalVariable(name: "thread", arg: 1, scope: !13806, file: !2211, line: 1311, type: !13809)
!13812 = !DILocation(line: 0, scope: !13806)
!13813 = !DILocation(line: 1313, column: 22, scope: !13806)
!13814 = !DILocation(line: 1313, column: 9, scope: !13806)
!13815 = !DILocation(line: 1313, column: 2, scope: !13806)
!13816 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2211, file: !2211, line: 1325, type: !13817, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13819)
!13817 = !DISubroutineType(types: !13818)
!13818 = !{null, !13809, !118}
!13819 = !{!13820, !13821, !13822}
!13820 = !DILocalVariable(name: "thread", arg: 1, scope: !13816, file: !2211, line: 1325, type: !13809)
!13821 = !DILocalVariable(name: "prio", arg: 2, scope: !13816, file: !2211, line: 1325, type: !118)
!13822 = !DILocalVariable(name: "th", scope: !13816, file: !2211, line: 1334, type: !2110)
!13823 = !DILocation(line: 0, scope: !13816)
!13824 = !DILocation(line: 1331, column: 2, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !2211, line: 1331, column: 2)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !2211, line: 1331, column: 2)
!13827 = distinct !DILexicalBlock(scope: !13816, file: !2211, line: 1331, column: 2)
!13828 = !DILocation(line: 1331, column: 2, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13825, file: !2211, line: 1331, column: 2)
!13830 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13831)
!13831 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 1332, column: 2, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !2211, line: 1332, column: 2)
!13834 = distinct !DILexicalBlock(scope: !13816, file: !2211, line: 1332, column: 2)
!13835 = !DILocation(line: 0, scope: !12800, inlinedAt: !13831)
!13836 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13832)
!13837 = !DILocation(line: 1332, column: 2, scope: !13834)
!13838 = !DILocation(line: 1332, column: 2, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13833, file: !2211, line: 1332, column: 2)
!13840 = !DILocation(line: 1336, column: 2, scope: !13816)
!13841 = !DILocation(line: 1337, column: 1, scope: !13816)
!13842 = distinct !DISubprogram(name: "k_can_yield", scope: !2211, file: !2211, line: 1384, type: !6878, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!13843 = !DILocation(line: 1386, column: 11, scope: !13842)
!13844 = !DILocation(line: 1386, column: 29, scope: !13842)
!13845 = !DILocation(line: 1386, column: 32, scope: !13842)
!13846 = !DILocation(line: 1386, column: 46, scope: !13842)
!13847 = !DILocation(line: 1387, column: 28, scope: !13842)
!13848 = !DILocation(line: 1387, column: 4, scope: !13842)
!13849 = !DILocation(line: 1386, column: 2, scope: !13842)
!13850 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !220, file: !220, line: 989, type: !6878, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!13851 = !DILocation(line: 993, column: 10, scope: !13850)
!13852 = !DILocation(line: 993, column: 2, scope: !13850)
!13853 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2211, file: !2211, line: 1390, type: !359, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13854)
!13854 = !{!13855}
!13855 = !DILocalVariable(name: "key", scope: !13853, file: !2211, line: 1396, type: !12063)
!13856 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13857)
!13857 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13858)
!13858 = distinct !DILocation(line: 1392, column: 2, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !2211, line: 1392, column: 2)
!13860 = distinct !DILexicalBlock(scope: !13853, file: !2211, line: 1392, column: 2)
!13861 = !DILocation(line: 0, scope: !12800, inlinedAt: !13857)
!13862 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13858)
!13863 = !DILocation(line: 1392, column: 2, scope: !13860)
!13864 = !DILocation(line: 1392, column: 2, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13859, file: !2211, line: 1392, column: 2)
!13866 = !DILocation(line: 0, scope: !12071, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 1396, column: 25, scope: !13853)
!13868 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13867)
!13870 = !DILocation(line: 0, scope: !12080, inlinedAt: !13869)
!13871 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13867)
!13872 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13867)
!13873 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13867)
!13874 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13867)
!13875 = !DILocation(line: 0, scope: !13853)
!13876 = !DILocation(line: 1400, column: 18, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !2211, line: 1399, column: 36)
!13878 = distinct !DILexicalBlock(scope: !13853, file: !2211, line: 1398, column: 6)
!13879 = !DILocation(line: 0, scope: !12265, inlinedAt: !13880)
!13880 = distinct !DILocation(line: 1400, column: 3, scope: !13877)
!13881 = !DILocation(line: 266, column: 15, scope: !12265, inlinedAt: !13880)
!13882 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !13880)
!13883 = !DILocation(line: 0, scope: !12273, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !13880)
!13885 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !13884)
!13886 = !DILocation(line: 1402, column: 15, scope: !13853)
!13887 = !DILocation(line: 0, scope: !12282, inlinedAt: !13888)
!13888 = distinct !DILocation(line: 1402, column: 2, scope: !13853)
!13889 = !DILocation(line: 252, column: 15, scope: !12282, inlinedAt: !13888)
!13890 = !DILocation(line: 252, column: 28, scope: !12282, inlinedAt: !13888)
!13891 = !DILocation(line: 0, scope: !12289, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 254, column: 3, scope: !12293, inlinedAt: !13888)
!13893 = !DILocation(line: 0, scope: !12296, inlinedAt: !13894)
!13894 = distinct !DILocation(line: 229, column: 2, scope: !12289, inlinedAt: !13892)
!13895 = !DILocation(line: 186, column: 2, scope: !12306, inlinedAt: !13894)
!13896 = !DILocation(line: 186, column: 2, scope: !12307, inlinedAt: !13894)
!13897 = !DILocation(line: 186, column: 2, scope: !12310, inlinedAt: !13894)
!13898 = !DILocation(line: 188, column: 2, scope: !12312, inlinedAt: !13894)
!13899 = !DILocation(line: 188, column: 2, scope: !12314, inlinedAt: !13894)
!13900 = !DILocation(line: 0, scope: !12312, inlinedAt: !13894)
!13901 = !DILocation(line: 189, column: 7, scope: !12317, inlinedAt: !13894)
!13902 = !DILocation(line: 189, column: 35, scope: !12317, inlinedAt: !13894)
!13903 = !DILocation(line: 189, column: 7, scope: !12318, inlinedAt: !13894)
!13904 = !DILocation(line: 191, column: 21, scope: !12322, inlinedAt: !13894)
!13905 = !DILocation(line: 190, column: 4, scope: !12322, inlinedAt: !13894)
!13906 = !DILocation(line: 192, column: 4, scope: !12322, inlinedAt: !13894)
!13907 = distinct !{!13907, !13898, !13908}
!13908 = !DILocation(line: 194, column: 2, scope: !12312, inlinedAt: !13894)
!13909 = !DILocation(line: 196, column: 37, scope: !12296, inlinedAt: !13894)
!13910 = !DILocation(line: 196, column: 2, scope: !12296, inlinedAt: !13894)
!13911 = !DILocation(line: 197, column: 1, scope: !12296, inlinedAt: !13894)
!13912 = !DILocation(line: 1403, column: 2, scope: !13853)
!13913 = !DILocation(line: 0, scope: !12751, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 1404, column: 2, scope: !13853)
!13915 = !DILocation(line: 0, scope: !12760, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !13914)
!13917 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !13916)
!13918 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !13916)
!13919 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !13916)
!13920 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !13914)
!13921 = !DILocation(line: 1405, column: 1, scope: !13853)
!13922 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2211, file: !2211, line: 1459, type: !13923, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13925)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{!356, !12961}
!13925 = !{!13926, !13927, !13928}
!13926 = !DILocalVariable(name: "timeout", arg: 1, scope: !13922, file: !2211, line: 1459, type: !12961)
!13927 = !DILocalVariable(name: "ticks", scope: !13922, file: !2211, line: 1461, type: !113)
!13928 = !DILocalVariable(name: "ret", scope: !13922, file: !2211, line: 1480, type: !356)
!13929 = !DILocation(line: 0, scope: !13922)
!13930 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13931)
!13931 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13932)
!13932 = distinct !DILocation(line: 1463, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !2211, line: 1463, column: 2)
!13934 = distinct !DILexicalBlock(scope: !13922, file: !2211, line: 1463, column: 2)
!13935 = !DILocation(line: 0, scope: !12800, inlinedAt: !13931)
!13936 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13932)
!13937 = !DILocation(line: 1463, column: 2, scope: !13934)
!13938 = !DILocation(line: 1463, column: 2, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13933, file: !2211, line: 1463, column: 2)
!13940 = !DILocation(line: 1468, column: 6, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13922, file: !2211, line: 1468, column: 6)
!13942 = !DILocation(line: 1468, column: 6, scope: !13922)
!13943 = !DILocation(line: 1469, column: 20, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13941, file: !2211, line: 1468, column: 40)
!13945 = !DILocation(line: 1469, column: 3, scope: !13944)
!13946 = !DILocation(line: 1473, column: 3, scope: !13944)
!13947 = !DILocation(line: 1478, column: 10, scope: !13922)
!13948 = !DILocation(line: 1480, column: 16, scope: !13922)
!13949 = !DILocation(line: 1485, column: 1, scope: !13922)
!13950 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3295, file: !3295, line: 310, type: !13951, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13953)
!13951 = !DISubroutineType(types: !13952)
!13952 = !{null, !13809}
!13953 = !{!13954}
!13954 = !DILocalVariable(name: "thread", arg: 1, scope: !13950, file: !3295, line: 310, type: !13809)
!13955 = !DILocation(line: 0, scope: !13950)
!13956 = !DILocation(line: 319, column: 2, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13950, file: !3295, line: 319, column: 2)
!13958 = !{i64 2151086921}
!13959 = !DILocation(line: 320, column: 2, scope: !13950)
!13960 = !DILocation(line: 321, column: 1, scope: !13950)
!13961 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2211, file: !2211, line: 1415, type: !13962, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !13964)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{!356, !113}
!13964 = !{!13965, !13966, !13967, !13968}
!13965 = !DILocalVariable(name: "ticks", arg: 1, scope: !13961, file: !2211, line: 1415, type: !113)
!13966 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13961, file: !2211, line: 1418, type: !156)
!13967 = !DILocalVariable(name: "timeout", scope: !13961, file: !2211, line: 1430, type: !12961)
!13968 = !DILocalVariable(name: "key", scope: !13961, file: !2211, line: 1437, type: !12063)
!13969 = !DILocation(line: 0, scope: !13961)
!13970 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 1420, column: 2, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13974, file: !2211, line: 1420, column: 2)
!13974 = distinct !DILexicalBlock(scope: !13961, file: !2211, line: 1420, column: 2)
!13975 = !DILocation(line: 0, scope: !12800, inlinedAt: !13971)
!13976 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !13972)
!13977 = !DILocation(line: 1420, column: 2, scope: !13974)
!13978 = !DILocation(line: 1420, column: 2, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13973, file: !2211, line: 1420, column: 2)
!13980 = !DILocation(line: 1425, column: 12, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13961, file: !2211, line: 1425, column: 6)
!13982 = !DILocation(line: 1425, column: 6, scope: !13961)
!13983 = !DILocation(line: 1426, column: 3, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !2211, line: 1425, column: 18)
!13985 = !DILocation(line: 1427, column: 3, scope: !13984)
!13986 = !DILocation(line: 1431, column: 24, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13961, file: !2211, line: 1431, column: 6)
!13988 = !DILocation(line: 1431, column: 6, scope: !13961)
!13989 = !DILocation(line: 1432, column: 35, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13987, file: !2211, line: 1431, column: 30)
!13991 = !DILocation(line: 1432, column: 27, scope: !13990)
!13992 = !DILocation(line: 1433, column: 2, scope: !13990)
!13993 = !DILocation(line: 1434, column: 27, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13987, file: !2211, line: 1433, column: 9)
!13995 = !DILocation(line: 0, scope: !13987)
!13996 = !DILocation(line: 0, scope: !12071, inlinedAt: !13997)
!13997 = distinct !DILocation(line: 1437, column: 25, scope: !13961)
!13998 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !13997)
!14000 = !DILocation(line: 0, scope: !12080, inlinedAt: !13999)
!14001 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !13997)
!14002 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !13997)
!14003 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !13997)
!14004 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !13997)
!14005 = !DILocation(line: 1440, column: 20, scope: !13961)
!14006 = !DILocation(line: 1440, column: 18, scope: !13961)
!14007 = !DILocation(line: 1442, column: 2, scope: !13961)
!14008 = !DILocation(line: 1443, column: 23, scope: !13961)
!14009 = !DILocation(line: 1443, column: 2, scope: !13961)
!14010 = !DILocation(line: 1444, column: 29, scope: !13961)
!14011 = !DILocation(line: 1444, column: 2, scope: !13961)
!14012 = !DILocation(line: 0, scope: !12751, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 1446, column: 8, scope: !13961)
!14014 = !DILocation(line: 0, scope: !12760, inlinedAt: !14015)
!14015 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !14013)
!14016 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !14015)
!14017 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !14015)
!14018 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !14015)
!14019 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !14013)
!14020 = !DILocation(line: 1448, column: 2, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14022, file: !2211, line: 1448, column: 2)
!14022 = distinct !DILexicalBlock(scope: !13961, file: !2211, line: 1448, column: 2)
!14023 = !DILocation(line: 1448, column: 2, scope: !14022)
!14024 = !DILocation(line: 1448, column: 2, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14021, file: !2211, line: 1448, column: 2)
!14026 = !DILocation(line: 1450, column: 10, scope: !13961)
!14027 = !DILocation(line: 1450, column: 45, scope: !13961)
!14028 = !DILocation(line: 1450, column: 43, scope: !13961)
!14029 = !DILocation(line: 1451, column: 6, scope: !13961)
!14030 = !DILocation(line: 1457, column: 1, scope: !13961)
!14031 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3262, file: !3262, line: 1103, type: !3263, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14032)
!14032 = !{!14033}
!14033 = !DILocalVariable(name: "t", arg: 1, scope: !14031, file: !3262, line: 1103, type: !213)
!14034 = !DILocation(line: 0, scope: !14031)
!14035 = !DILocation(line: 0, scope: !12133, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 1106, column: 9, scope: !14031)
!14037 = !DILocation(line: 139, column: 13, scope: !14038, inlinedAt: !14036)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !3262, line: 138, column: 10)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !3262, line: 136, column: 7)
!14040 = distinct !DILexicalBlock(scope: !12154, file: !3262, line: 134, column: 17)
!14041 = !DILocation(line: 1106, column: 2, scope: !14031)
!14042 = distinct !DISubprogram(name: "k_yield", scope: !3295, file: !3295, line: 140, type: !359, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!14043 = !DILocation(line: 148, column: 2, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14042, file: !3295, line: 148, column: 2)
!14045 = !{i64 2151086241}
!14046 = !DILocation(line: 149, column: 2, scope: !14042)
!14047 = !DILocation(line: 150, column: 1, scope: !14042)
!14048 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2211, file: !2211, line: 1495, type: !14049, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!356, !118}
!14051 = !{!14052, !14053}
!14052 = !DILocalVariable(name: "us", arg: 1, scope: !14048, file: !2211, line: 1495, type: !118)
!14053 = !DILocalVariable(name: "ticks", scope: !14048, file: !2211, line: 1497, type: !356)
!14054 = !DILocation(line: 0, scope: !14048)
!14055 = !DILocation(line: 1501, column: 31, scope: !14048)
!14056 = !DILocation(line: 1501, column: 10, scope: !14048)
!14057 = !DILocation(line: 1502, column: 23, scope: !14048)
!14058 = !DILocation(line: 1502, column: 10, scope: !14048)
!14059 = !DILocation(line: 1506, column: 31, scope: !14048)
!14060 = !DILocation(line: 1506, column: 9, scope: !14048)
!14061 = !DILocation(line: 1506, column: 2, scope: !14048)
!14062 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3262, file: !3262, line: 571, type: !3263, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14063)
!14063 = !{!14064}
!14064 = !DILocalVariable(name: "t", arg: 1, scope: !14062, file: !3262, line: 571, type: !213)
!14065 = !DILocation(line: 0, scope: !14062)
!14066 = !DILocation(line: 0, scope: !12133, inlinedAt: !14067)
!14067 = distinct !DILocation(line: 574, column: 9, scope: !14062)
!14068 = !DILocation(line: 135, column: 5, scope: !14040, inlinedAt: !14067)
!14069 = !DILocation(line: 139, column: 13, scope: !14038, inlinedAt: !14067)
!14070 = !DILocation(line: 574, column: 2, scope: !14062)
!14071 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3262, file: !3262, line: 1187, type: !3263, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14072)
!14072 = !{!14073}
!14073 = !DILocalVariable(name: "t", arg: 1, scope: !14071, file: !3262, line: 1187, type: !213)
!14074 = !DILocation(line: 0, scope: !14071)
!14075 = !DILocation(line: 0, scope: !12133, inlinedAt: !14076)
!14076 = distinct !DILocation(line: 1190, column: 9, scope: !14071)
!14077 = !DILocation(line: 145, column: 13, scope: !14078, inlinedAt: !14076)
!14078 = distinct !DILexicalBlock(scope: !12151, file: !3262, line: 144, column: 10)
!14079 = !DILocation(line: 1190, column: 2, scope: !14071)
!14080 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2211, file: !2211, line: 1517, type: !13951, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14081)
!14081 = !{!14082}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14080, file: !2211, line: 1517, type: !13809)
!14083 = !DILocation(line: 0, scope: !14080)
!14084 = !DILocation(line: 1521, column: 6, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14080, file: !2211, line: 1521, column: 6)
!14086 = !DILocation(line: 1521, column: 6, scope: !14080)
!14087 = !DILocation(line: 1525, column: 6, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14080, file: !2211, line: 1525, column: 6)
!14089 = !DILocation(line: 1525, column: 37, scope: !14088)
!14090 = !DILocation(line: 1525, column: 6, scope: !14080)
!14091 = !DILocation(line: 1527, column: 20, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2211, line: 1527, column: 7)
!14093 = distinct !DILexicalBlock(scope: !14088, file: !2211, line: 1525, column: 42)
!14094 = !DILocation(line: 1527, column: 33, scope: !14092)
!14095 = !DILocation(line: 1527, column: 7, scope: !14093)
!14096 = !DILocation(line: 1532, column: 2, scope: !14080)
!14097 = !DILocation(line: 1533, column: 2, scope: !14080)
!14098 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 1537, column: 7, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14080, file: !2211, line: 1537, column: 6)
!14102 = !DILocation(line: 0, scope: !12800, inlinedAt: !14099)
!14103 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !14100)
!14104 = !DILocation(line: 1537, column: 6, scope: !14080)
!14105 = !DILocation(line: 1538, column: 3, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14101, file: !2211, line: 1537, column: 25)
!14107 = !DILocation(line: 1539, column: 2, scope: !14106)
!14108 = !DILocation(line: 1540, column: 1, scope: !14080)
!14109 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10477, file: !10477, line: 101, type: !12214, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14110)
!14110 = !{!14111}
!14111 = !DILocalVariable(name: "thread", arg: 1, scope: !14109, file: !10477, line: 101, type: !2110)
!14112 = !DILocation(line: 0, scope: !14109)
!14113 = !DILocation(line: 103, column: 23, scope: !14109)
!14114 = !DILocation(line: 103, column: 36, scope: !14109)
!14115 = !DILocation(line: 103, column: 55, scope: !14109)
!14116 = !DILocation(line: 103, column: 2, scope: !14109)
!14117 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2211, file: !2211, line: 1567, type: !14118, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{!13809}
!14120 = !{!14121}
!14121 = !DILocalVariable(name: "ret", scope: !14117, file: !2211, line: 1577, type: !13809)
!14122 = !DILocation(line: 1577, column: 30, scope: !14117)
!14123 = !DILocation(line: 0, scope: !14117)
!14124 = !DILocation(line: 1582, column: 2, scope: !14117)
!14125 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2211, file: !2211, line: 1593, type: !14126, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !1933)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!118}
!14128 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 1595, column: 10, scope: !14125)
!14131 = !DILocation(line: 0, scope: !12800, inlinedAt: !14129)
!14132 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !14130)
!14133 = !DILocation(line: 1595, column: 27, scope: !14125)
!14134 = !DILocation(line: 1595, column: 41, scope: !14125)
!14135 = !DILocation(line: 1595, column: 30, scope: !14125)
!14136 = !DILocation(line: 1595, column: 2, scope: !14125)
!14137 = distinct !DISubprogram(name: "z_thread_abort", scope: !2211, file: !2211, line: 1725, type: !12029, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14138)
!14138 = !{!14139, !14140}
!14139 = !DILocalVariable(name: "thread", arg: 1, scope: !14137, file: !2211, line: 1725, type: !2110)
!14140 = !DILocalVariable(name: "key", scope: !14137, file: !2211, line: 1727, type: !12063)
!14141 = !DILocation(line: 0, scope: !14137)
!14142 = !DILocation(line: 0, scope: !12071, inlinedAt: !14143)
!14143 = distinct !DILocation(line: 1727, column: 25, scope: !14137)
!14144 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !14143)
!14146 = !DILocation(line: 0, scope: !12080, inlinedAt: !14145)
!14147 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !14143)
!14148 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !14143)
!14149 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !14143)
!14150 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !14143)
!14151 = !DILocation(line: 1729, column: 20, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14137, file: !2211, line: 1729, column: 6)
!14153 = !DILocation(line: 1729, column: 33, scope: !14152)
!14154 = !DILocation(line: 1729, column: 48, scope: !14152)
!14155 = !DILocation(line: 1729, column: 6, scope: !14137)
!14156 = !DILocation(line: 0, scope: !12105, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 1730, column: 3, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14152, file: !2211, line: 1729, column: 54)
!14159 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !14157)
!14160 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !14157)
!14161 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !14157)
!14162 = !DILocation(line: 0, scope: !12119, inlinedAt: !14163)
!14163 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !14157)
!14164 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !14163)
!14165 = !DILocation(line: 1731, column: 3, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !2211, line: 1731, column: 3)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !2211, line: 1731, column: 3)
!14168 = distinct !DILexicalBlock(scope: !14158, file: !2211, line: 1731, column: 3)
!14169 = !DILocation(line: 1736, column: 20, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14137, file: !2211, line: 1736, column: 6)
!14171 = !DILocation(line: 1736, column: 33, scope: !14170)
!14172 = !DILocation(line: 1736, column: 49, scope: !14170)
!14173 = !DILocation(line: 1736, column: 6, scope: !14137)
!14174 = !DILocation(line: 0, scope: !12105, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 1737, column: 3, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14170, file: !2211, line: 1736, column: 56)
!14177 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !14175)
!14178 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !14175)
!14179 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !14175)
!14180 = !DILocation(line: 0, scope: !12119, inlinedAt: !14181)
!14181 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !14175)
!14182 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !14181)
!14183 = !DILocation(line: 1738, column: 3, scope: !14176)
!14184 = !DILocation(line: 1775, column: 2, scope: !14137)
!14185 = !DILocation(line: 1776, column: 16, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14137, file: !2211, line: 1776, column: 6)
!14187 = !DILocation(line: 1776, column: 13, scope: !14186)
!14188 = !DILocation(line: 1776, column: 25, scope: !14186)
!14189 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !14191)
!14191 = distinct !DILocation(line: 1776, column: 29, scope: !14186)
!14192 = !DILocation(line: 0, scope: !12800, inlinedAt: !14190)
!14193 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !14191)
!14194 = !DILocation(line: 1776, column: 6, scope: !14137)
!14195 = !DILocation(line: 0, scope: !12751, inlinedAt: !14196)
!14196 = distinct !DILocation(line: 1777, column: 3, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14186, file: !2211, line: 1776, column: 47)
!14198 = !DILocation(line: 0, scope: !12760, inlinedAt: !14199)
!14199 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !14196)
!14200 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !14199)
!14201 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !14199)
!14202 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !14199)
!14203 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !14196)
!14204 = !DILocation(line: 1778, column: 3, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14206, file: !2211, line: 1778, column: 3)
!14206 = distinct !DILexicalBlock(scope: !14207, file: !2211, line: 1778, column: 3)
!14207 = distinct !DILexicalBlock(scope: !14197, file: !2211, line: 1778, column: 3)
!14208 = !DILocation(line: 0, scope: !12105, inlinedAt: !14209)
!14209 = distinct !DILocation(line: 1780, column: 2, scope: !14137)
!14210 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !14209)
!14211 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !14209)
!14212 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !14209)
!14213 = !DILocation(line: 0, scope: !12119, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !14209)
!14215 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !14214)
!14216 = !DILocation(line: 1781, column: 1, scope: !14137)
!14217 = distinct !DISubprogram(name: "end_thread", scope: !2211, file: !2211, line: 1690, type: !12029, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14218)
!14218 = !{!14219}
!14219 = !DILocalVariable(name: "thread", arg: 1, scope: !14217, file: !2211, line: 1690, type: !2110)
!14220 = !DILocation(line: 0, scope: !14217)
!14221 = !DILocation(line: 1695, column: 20, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14217, file: !2211, line: 1695, column: 6)
!14223 = !DILocation(line: 1695, column: 33, scope: !14222)
!14224 = !DILocation(line: 1695, column: 49, scope: !14222)
!14225 = !DILocation(line: 1695, column: 6, scope: !14217)
!14226 = !DILocation(line: 1697, column: 29, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14222, file: !2211, line: 1695, column: 56)
!14228 = !DILocation(line: 1698, column: 7, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14227, file: !2211, line: 1698, column: 7)
!14230 = !DILocation(line: 1698, column: 7, scope: !14227)
!14231 = !DILocation(line: 0, scope: !12265, inlinedAt: !14232)
!14232 = distinct !DILocation(line: 1699, column: 4, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14229, file: !2211, line: 1698, column: 35)
!14234 = !DILocation(line: 266, column: 28, scope: !12265, inlinedAt: !14232)
!14235 = !DILocation(line: 0, scope: !12273, inlinedAt: !14236)
!14236 = distinct !DILocation(line: 268, column: 3, scope: !12277, inlinedAt: !14232)
!14237 = !DILocation(line: 234, column: 2, scope: !12273, inlinedAt: !14236)
!14238 = !DILocation(line: 1700, column: 3, scope: !14233)
!14239 = !DILocation(line: 1701, column: 20, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14227, file: !2211, line: 1701, column: 7)
!14241 = !DILocation(line: 1701, column: 30, scope: !14240)
!14242 = !DILocation(line: 1701, column: 7, scope: !14227)
!14243 = !DILocation(line: 1702, column: 4, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !2211, line: 1701, column: 39)
!14245 = !DILocation(line: 1703, column: 3, scope: !14244)
!14246 = !DILocation(line: 1704, column: 9, scope: !14227)
!14247 = !DILocation(line: 1705, column: 23, scope: !14227)
!14248 = !DILocation(line: 1705, column: 3, scope: !14227)
!14249 = !DILocation(line: 1706, column: 3, scope: !14227)
!14250 = !DILocation(line: 1722, column: 2, scope: !14227)
!14251 = !DILocation(line: 1723, column: 1, scope: !14217)
!14252 = distinct !DISubprogram(name: "unpend_all", scope: !2211, file: !2211, line: 1674, type: !14253, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14255)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{null, !2141}
!14255 = !{!14256, !14257}
!14256 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14252, file: !2211, line: 1674, type: !2141)
!14257 = !DILocalVariable(name: "thread", scope: !14252, file: !2211, line: 1676, type: !2110)
!14258 = !DILocation(line: 0, scope: !14252)
!14259 = !DILocation(line: 1678, column: 19, scope: !14252)
!14260 = !DILocation(line: 1678, column: 41, scope: !14252)
!14261 = !DILocation(line: 1678, column: 2, scope: !14252)
!14262 = !DILocation(line: 1679, column: 3, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14252, file: !2211, line: 1678, column: 50)
!14264 = !DILocation(line: 1680, column: 9, scope: !14263)
!14265 = !DILocalVariable(name: "thread", arg: 1, scope: !14266, file: !10497, line: 65, type: !2110)
!14266 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10497, file: !10497, line: 65, type: !14267, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14269)
!14267 = !DISubroutineType(types: !14268)
!14268 = !{null, !2110, !32}
!14269 = !{!14265, !14270}
!14270 = !DILocalVariable(name: "value", arg: 2, scope: !14266, file: !10497, line: 65, type: !32)
!14271 = !DILocation(line: 0, scope: !14266, inlinedAt: !14272)
!14272 = distinct !DILocation(line: 1681, column: 3, scope: !14263)
!14273 = !DILocation(line: 67, column: 15, scope: !14266, inlinedAt: !14272)
!14274 = !DILocation(line: 67, column: 33, scope: !14266, inlinedAt: !14272)
!14275 = !DILocation(line: 1682, column: 3, scope: !14263)
!14276 = distinct !{!14276, !14261, !14277}
!14277 = !DILocation(line: 1683, column: 2, scope: !14252)
!14278 = !DILocation(line: 1684, column: 1, scope: !14252)
!14279 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2211, file: !2211, line: 1794, type: !14280, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14282)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!118, !2110, !12961}
!14282 = !{!14283, !14284, !14285, !14286}
!14283 = !DILocalVariable(name: "thread", arg: 1, scope: !14279, file: !2211, line: 1794, type: !2110)
!14284 = !DILocalVariable(name: "timeout", arg: 2, scope: !14279, file: !2211, line: 1794, type: !12961)
!14285 = !DILocalVariable(name: "key", scope: !14279, file: !2211, line: 1796, type: !12063)
!14286 = !DILocalVariable(name: "ret", scope: !14279, file: !2211, line: 1797, type: !118)
!14287 = !DILocation(line: 0, scope: !14279)
!14288 = !DILocation(line: 0, scope: !12071, inlinedAt: !14289)
!14289 = distinct !DILocation(line: 1796, column: 25, scope: !14279)
!14290 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !14291)
!14291 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !14289)
!14292 = !DILocation(line: 0, scope: !12080, inlinedAt: !14291)
!14293 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !14289)
!14294 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !14289)
!14295 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !14289)
!14296 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !14289)
!14297 = !DILocation(line: 1801, column: 20, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14279, file: !2211, line: 1801, column: 6)
!14299 = !DILocation(line: 1801, column: 33, scope: !14298)
!14300 = !DILocation(line: 1801, column: 49, scope: !14298)
!14301 = !DILocation(line: 1801, column: 6, scope: !14279)
!14302 = !DILocation(line: 1803, column: 13, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14298, file: !2211, line: 1803, column: 13)
!14304 = !DILocation(line: 1803, column: 13, scope: !14298)
!14305 = !DILocation(line: 1805, column: 24, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14303, file: !2211, line: 1805, column: 13)
!14307 = !DILocation(line: 1805, column: 21, scope: !14306)
!14308 = !DILocation(line: 1805, column: 34, scope: !14306)
!14309 = !DILocation(line: 1806, column: 20, scope: !14306)
!14310 = !DILocation(line: 1806, column: 44, scope: !14306)
!14311 = !DILocation(line: 1806, column: 30, scope: !14306)
!14312 = !DILocation(line: 1805, column: 13, scope: !14303)
!14313 = !DILocation(line: 1031, column: 3, scope: !12800, inlinedAt: !14314)
!14314 = distinct !DILocation(line: 48, column: 10, scope: !12804, inlinedAt: !14315)
!14315 = distinct !DILocation(line: 1809, column: 3, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14317, file: !2211, line: 1809, column: 3)
!14317 = distinct !DILexicalBlock(scope: !14318, file: !2211, line: 1809, column: 3)
!14318 = distinct !DILexicalBlock(scope: !14306, file: !2211, line: 1808, column: 9)
!14319 = !DILocation(line: 0, scope: !12800, inlinedAt: !14314)
!14320 = !DILocation(line: 48, column: 9, scope: !12804, inlinedAt: !14315)
!14321 = !DILocation(line: 1809, column: 3, scope: !14317)
!14322 = !DILocation(line: 1809, column: 3, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14316, file: !2211, line: 1809, column: 3)
!14324 = !DILocation(line: 1810, column: 23, scope: !14318)
!14325 = !DILocation(line: 1810, column: 42, scope: !14318)
!14326 = !DILocation(line: 1810, column: 3, scope: !14318)
!14327 = !DILocation(line: 1811, column: 22, scope: !14318)
!14328 = !DILocation(line: 1811, column: 3, scope: !14318)
!14329 = !DILocation(line: 0, scope: !12751, inlinedAt: !14330)
!14330 = distinct !DILocation(line: 1814, column: 9, scope: !14318)
!14331 = !DILocation(line: 0, scope: !12760, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 195, column: 2, scope: !12751, inlinedAt: !14330)
!14333 = !DILocation(line: 225, column: 2, scope: !12767, inlinedAt: !14332)
!14334 = !DILocation(line: 225, column: 2, scope: !12768, inlinedAt: !14332)
!14335 = !DILocation(line: 225, column: 2, scope: !12771, inlinedAt: !14332)
!14336 = !DILocation(line: 196, column: 9, scope: !12751, inlinedAt: !14330)
!14337 = !DILocation(line: 1817, column: 3, scope: !14318)
!14338 = !DILocation(line: 0, scope: !14298)
!14339 = !DILocation(line: 0, scope: !12105, inlinedAt: !14340)
!14340 = distinct !DILocation(line: 1822, column: 2, scope: !14279)
!14341 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !14340)
!14342 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !14340)
!14343 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !14340)
!14344 = !DILocation(line: 0, scope: !12119, inlinedAt: !14345)
!14345 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !14340)
!14346 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !14345)
!14347 = !DILocation(line: 1823, column: 2, scope: !14279)
!14348 = !DILocation(line: 1824, column: 1, scope: !14279)
!14349 = distinct !DISubprogram(name: "z_sched_wake", scope: !2211, file: !2211, line: 1882, type: !14350, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!146, !2141, !118, !117}
!14352 = !{!14353, !14354, !14355, !14356, !14357, !14358, !14360}
!14353 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14349, file: !2211, line: 1882, type: !2141)
!14354 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14349, file: !2211, line: 1882, type: !118)
!14355 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14349, file: !2211, line: 1882, type: !117)
!14356 = !DILocalVariable(name: "thread", scope: !14349, file: !2211, line: 1884, type: !2110)
!14357 = !DILocalVariable(name: "ret", scope: !14349, file: !2211, line: 1885, type: !146)
!14358 = !DILocalVariable(name: "__i", scope: !14359, file: !2211, line: 1887, type: !12063)
!14359 = distinct !DILexicalBlock(scope: !14349, file: !2211, line: 1887, column: 2)
!14360 = !DILocalVariable(name: "__key", scope: !14359, file: !2211, line: 1887, type: !12063)
!14361 = !DILocation(line: 0, scope: !14349)
!14362 = !DILocation(line: 0, scope: !14359)
!14363 = !DILocation(line: 0, scope: !12071, inlinedAt: !14364)
!14364 = distinct !DILocation(line: 1887, column: 2, scope: !14359)
!14365 = !DILocation(line: 55, column: 2, scope: !12080, inlinedAt: !14366)
!14366 = distinct !DILocation(line: 145, column: 10, scope: !12071, inlinedAt: !14364)
!14367 = !DILocation(line: 0, scope: !12080, inlinedAt: !14366)
!14368 = !DILocation(line: 148, column: 2, scope: !12088, inlinedAt: !14364)
!14369 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !14364)
!14370 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !14364)
!14371 = !DILocation(line: 160, column: 2, scope: !12071, inlinedAt: !14364)
!14372 = !DILocation(line: 1888, column: 12, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !2211, line: 1887, column: 26)
!14374 = distinct !DILexicalBlock(scope: !14359, file: !2211, line: 1887, column: 2)
!14375 = !DILocation(line: 1890, column: 14, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14373, file: !2211, line: 1890, column: 7)
!14377 = !DILocation(line: 1890, column: 7, scope: !14373)
!14378 = !DILocalVariable(name: "thread", arg: 1, scope: !14379, file: !11440, line: 134, type: !2110)
!14379 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11440, file: !11440, line: 134, type: !14380, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{null, !2110, !32, !117}
!14382 = !{!14378, !14383, !14384}
!14383 = !DILocalVariable(name: "value", arg: 2, scope: !14379, file: !11440, line: 135, type: !32)
!14384 = !DILocalVariable(name: "data", arg: 3, scope: !14379, file: !11440, line: 136, type: !117)
!14385 = !DILocation(line: 0, scope: !14379, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 1891, column: 4, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14376, file: !2211, line: 1890, column: 23)
!14388 = !DILocation(line: 0, scope: !14266, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 138, column: 2, scope: !14379, inlinedAt: !14386)
!14390 = !DILocation(line: 67, column: 15, scope: !14266, inlinedAt: !14389)
!14391 = !DILocation(line: 67, column: 33, scope: !14266, inlinedAt: !14389)
!14392 = !DILocation(line: 139, column: 15, scope: !14379, inlinedAt: !14386)
!14393 = !DILocation(line: 139, column: 25, scope: !14379, inlinedAt: !14386)
!14394 = !DILocation(line: 1894, column: 4, scope: !14387)
!14395 = !DILocation(line: 1895, column: 10, scope: !14387)
!14396 = !DILocation(line: 1896, column: 4, scope: !14387)
!14397 = !DILocation(line: 1898, column: 3, scope: !14387)
!14398 = !DILocation(line: 0, scope: !12105, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 1887, column: 2, scope: !14374)
!14400 = !DILocation(line: 194, column: 2, scope: !12113, inlinedAt: !14399)
!14401 = !DILocation(line: 194, column: 2, scope: !12114, inlinedAt: !14399)
!14402 = !DILocation(line: 194, column: 2, scope: !12117, inlinedAt: !14399)
!14403 = !DILocation(line: 0, scope: !12119, inlinedAt: !14404)
!14404 = distinct !DILocation(line: 215, column: 2, scope: !12105, inlinedAt: !14399)
!14405 = !DILocation(line: 95, column: 2, scope: !12119, inlinedAt: !14404)
!14406 = !DILocation(line: 1901, column: 2, scope: !14349)
!14407 = distinct !DISubprogram(name: "z_sched_wait", scope: !2211, file: !2211, line: 1904, type: !14408, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !14410)
!14408 = !DISubroutineType(types: !14409)
!14409 = !{!118, !12074, !12063, !2141, !12961, !2994}
!14410 = !{!14411, !14412, !14413, !14414, !14415, !14416}
!14411 = !DILocalVariable(name: "lock", arg: 1, scope: !14407, file: !2211, line: 1904, type: !12074)
!14412 = !DILocalVariable(name: "key", arg: 2, scope: !14407, file: !2211, line: 1904, type: !12063)
!14413 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14407, file: !2211, line: 1905, type: !2141)
!14414 = !DILocalVariable(name: "timeout", arg: 4, scope: !14407, file: !2211, line: 1905, type: !12961)
!14415 = !DILocalVariable(name: "data", arg: 5, scope: !14407, file: !2211, line: 1905, type: !2994)
!14416 = !DILocalVariable(name: "ret", scope: !14407, file: !2211, line: 1907, type: !118)
!14417 = !DILocation(line: 0, scope: !14407)
!14418 = !DILocation(line: 1907, column: 12, scope: !14407)
!14419 = !DILocation(line: 1909, column: 11, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14407, file: !2211, line: 1909, column: 6)
!14421 = !DILocation(line: 1909, column: 6, scope: !14407)
!14422 = !DILocation(line: 1910, column: 11, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14420, file: !2211, line: 1909, column: 20)
!14424 = !DILocation(line: 1910, column: 26, scope: !14423)
!14425 = !DILocation(line: 1910, column: 9, scope: !14423)
!14426 = !DILocation(line: 1911, column: 2, scope: !14423)
!14427 = !DILocation(line: 1912, column: 2, scope: !14407)
!14428 = distinct !DISubprogram(name: "z_data_copy", scope: !14429, file: !14429, line: 22, type: !359, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3011, retainedNodes: !1933)
!14429 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14430 = !DILocation(line: 24, column: 2, scope: !14428)
!14431 = !DILocation(line: 27, column: 2, scope: !14428)
!14432 = !DILocation(line: 71, column: 1, scope: !14428)
!14433 = distinct !DISubprogram(name: "z_add_timeout", scope: !2248, file: !2248, line: 88, type: !14434, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14440)
!14434 = !DISubroutineType(types: !14435)
!14435 = !{null, !2221, !2240, !14436}
!14436 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !14437)
!14437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !14438)
!14438 = !{!14439}
!14439 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14437, file: !114, line: 66, baseType: !113, size: 64)
!14440 = !{!14441, !14442, !14443, !14444, !14450, !14451, !14454, !14457}
!14441 = !DILocalVariable(name: "to", arg: 1, scope: !14433, file: !2248, line: 88, type: !2221)
!14442 = !DILocalVariable(name: "fn", arg: 2, scope: !14433, file: !2248, line: 88, type: !2240)
!14443 = !DILocalVariable(name: "timeout", arg: 3, scope: !14433, file: !2248, line: 89, type: !14436)
!14444 = !DILocalVariable(name: "__i", scope: !14445, file: !2248, line: 102, type: !14446)
!14445 = distinct !DILexicalBlock(scope: !14433, file: !2248, line: 102, column: 2)
!14446 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !328, line: 106, baseType: !14447)
!14447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !328, line: 32, size: 32, elements: !14448)
!14448 = !{!14449}
!14449 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14447, file: !328, line: 33, baseType: !118, size: 32)
!14450 = !DILocalVariable(name: "__key", scope: !14445, file: !2248, line: 102, type: !14446)
!14451 = !DILocalVariable(name: "t", scope: !14452, file: !2248, line: 103, type: !2221)
!14452 = distinct !DILexicalBlock(scope: !14453, file: !2248, line: 102, column: 24)
!14453 = distinct !DILexicalBlock(scope: !14445, file: !2248, line: 102, column: 2)
!14454 = !DILocalVariable(name: "ticks", scope: !14455, file: !2248, line: 107, type: !113)
!14455 = distinct !DILexicalBlock(scope: !14456, file: !2248, line: 106, column: 39)
!14456 = distinct !DILexicalBlock(scope: !14452, file: !2248, line: 105, column: 7)
!14457 = !DILocalVariable(name: "next_time", scope: !14458, file: !2248, line: 137, type: !356)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !2248, line: 127, column: 22)
!14459 = distinct !DILexicalBlock(scope: !14452, file: !2248, line: 127, column: 7)
!14460 = !DILocation(line: 0, scope: !14433)
!14461 = !DILocation(line: 91, column: 6, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14433, file: !2248, line: 91, column: 6)
!14463 = !DILocation(line: 91, column: 6, scope: !14433)
!14464 = !DILocation(line: 99, column: 2, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !2248, line: 99, column: 2)
!14466 = distinct !DILexicalBlock(scope: !14433, file: !2248, line: 99, column: 2)
!14467 = !DILocation(line: 99, column: 2, scope: !14466)
!14468 = !DILocation(line: 99, column: 2, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14465, file: !2248, line: 99, column: 2)
!14470 = !DILocation(line: 100, column: 6, scope: !14433)
!14471 = !DILocation(line: 100, column: 9, scope: !14433)
!14472 = !DILocation(line: 0, scope: !14445)
!14473 = !DILocalVariable(name: "l", arg: 1, scope: !14474, file: !328, line: 136, type: !14477)
!14474 = distinct !DISubprogram(name: "k_spin_lock", scope: !328, file: !328, line: 136, type: !14475, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14478)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{!14446, !14477}
!14477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!14478 = !{!14473, !14479}
!14479 = !DILocalVariable(name: "k", scope: !14474, file: !328, line: 139, type: !14446)
!14480 = !DILocation(line: 0, scope: !14474, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 102, column: 2, scope: !14445)
!14482 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14487)
!14483 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14484)
!14484 = !{!14485, !14486}
!14485 = !DILocalVariable(name: "key", scope: !14483, file: !6230, line: 44, type: !32)
!14486 = !DILocalVariable(name: "tmp", scope: !14483, file: !6230, line: 53, type: !32)
!14487 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14481)
!14488 = !{i64 2848845}
!14489 = !DILocation(line: 0, scope: !14483, inlinedAt: !14487)
!14490 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14481)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !328, line: 148, column: 2)
!14492 = distinct !DILexicalBlock(scope: !14474, file: !328, line: 148, column: 2)
!14493 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14481)
!14494 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14481)
!14495 = distinct !DILexicalBlock(scope: !14491, file: !328, line: 148, column: 2)
!14496 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14481)
!14497 = !DILocation(line: 106, column: 33, scope: !14456)
!14498 = !DILocation(line: 105, column: 7, scope: !14452)
!14499 = !DILocation(line: 107, column: 50, scope: !14455)
!14500 = !DILocation(line: 107, column: 48, scope: !14455)
!14501 = !DILocation(line: 0, scope: !14455)
!14502 = !DILocation(line: 109, column: 17, scope: !14455)
!14503 = !DILocation(line: 110, column: 3, scope: !14455)
!14504 = !DILocation(line: 111, column: 31, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14456, file: !2248, line: 110, column: 10)
!14506 = !DILocation(line: 111, column: 37, scope: !14505)
!14507 = !DILocation(line: 111, column: 35, scope: !14505)
!14508 = !DILocation(line: 0, scope: !14456)
!14509 = !DILocation(line: 109, column: 8, scope: !14455)
!14510 = !DILocation(line: 109, column: 15, scope: !14455)
!14511 = !DILocation(line: 114, column: 12, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14452, file: !2248, line: 114, column: 3)
!14513 = !DILocation(line: 0, scope: !14452)
!14514 = !DILocation(line: 114, column: 3, scope: !14512)
!14515 = !DILocation(line: 115, column: 24, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2248, line: 115, column: 8)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !2248, line: 114, column: 45)
!14518 = distinct !DILexicalBlock(scope: !14512, file: !2248, line: 114, column: 3)
!14519 = !DILocation(line: 115, column: 11, scope: !14516)
!14520 = !DILocation(line: 115, column: 18, scope: !14516)
!14521 = !DILocation(line: 115, column: 8, scope: !14517)
!14522 = !DILocation(line: 116, column: 15, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14516, file: !2248, line: 115, column: 32)
!14524 = !DILocation(line: 117, column: 26, scope: !14523)
!14525 = !DILocation(line: 117, column: 5, scope: !14523)
!14526 = !DILocation(line: 123, column: 7, scope: !14452)
!14527 = !DILocation(line: 120, column: 15, scope: !14517)
!14528 = !DILocation(line: 114, column: 36, scope: !14518)
!14529 = distinct !{!14529, !14514, !14530}
!14530 = !DILocation(line: 121, column: 3, scope: !14512)
!14531 = !DILocation(line: 124, column: 4, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !2248, line: 123, column: 18)
!14533 = distinct !DILexicalBlock(scope: !14452, file: !2248, line: 123, column: 7)
!14534 = !DILocation(line: 125, column: 3, scope: !14532)
!14535 = !DILocation(line: 127, column: 13, scope: !14459)
!14536 = !DILocation(line: 127, column: 10, scope: !14459)
!14537 = !DILocation(line: 127, column: 7, scope: !14452)
!14538 = !DILocation(line: 137, column: 24, scope: !14458)
!14539 = !DILocation(line: 0, scope: !14458)
!14540 = !DILocation(line: 139, column: 18, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14458, file: !2248, line: 139, column: 8)
!14542 = !DILocation(line: 139, column: 23, scope: !14541)
!14543 = !DILocation(line: 141, column: 5, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14541, file: !2248, line: 140, column: 48)
!14545 = !DILocation(line: 142, column: 4, scope: !14544)
!14546 = !DILocalVariable(name: "key", arg: 2, scope: !14547, file: !328, line: 190, type: !14446)
!14547 = distinct !DISubprogram(name: "k_spin_unlock", scope: !328, file: !328, line: 189, type: !14548, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14550)
!14548 = !DISubroutineType(types: !14549)
!14549 = !{null, !14477, !14446}
!14550 = !{!14551, !14546}
!14551 = !DILocalVariable(name: "l", arg: 1, scope: !14547, file: !328, line: 189, type: !14477)
!14552 = !DILocation(line: 0, scope: !14547, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 102, column: 2, scope: !14453)
!14554 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14553)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !328, line: 194, column: 2)
!14556 = distinct !DILexicalBlock(scope: !14547, file: !328, line: 194, column: 2)
!14557 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14553)
!14558 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14553)
!14559 = distinct !DILexicalBlock(scope: !14555, file: !328, line: 194, column: 2)
!14560 = !DILocalVariable(name: "key", arg: 1, scope: !14561, file: !6230, line: 84, type: !32)
!14561 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14562)
!14562 = !{!14560}
!14563 = !DILocation(line: 0, scope: !14561, inlinedAt: !14564)
!14564 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14553)
!14565 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14564)
!14566 = !{i64 2849662}
!14567 = !DILocation(line: 148, column: 1, scope: !14433)
!14568 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !14569, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14573)
!14569 = !DISubroutineType(types: !14570)
!14570 = !{!146, !14571}
!14571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14572, size: 32)
!14572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2225)
!14573 = !{!14574}
!14574 = !DILocalVariable(name: "node", arg: 1, scope: !14568, file: !235, line: 225, type: !14571)
!14575 = !DILocation(line: 0, scope: !14568)
!14576 = !DILocation(line: 227, column: 15, scope: !14568)
!14577 = !DILocation(line: 227, column: 20, scope: !14568)
!14578 = !DILocation(line: 227, column: 2, scope: !14568)
!14579 = distinct !DISubprogram(name: "elapsed", scope: !2248, file: !2248, line: 62, type: !14580, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !1933)
!14580 = !DISubroutineType(types: !14581)
!14581 = !{!356}
!14582 = !DILocation(line: 64, column: 9, scope: !14579)
!14583 = !DILocation(line: 64, column: 28, scope: !14579)
!14584 = !DILocation(line: 64, column: 35, scope: !14579)
!14585 = !DILocation(line: 64, column: 2, scope: !14579)
!14586 = distinct !DISubprogram(name: "first", scope: !2248, file: !2248, line: 39, type: !14587, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14589)
!14587 = !DISubroutineType(types: !14588)
!14588 = !{!2221}
!14589 = !{!14590}
!14590 = !DILocalVariable(name: "t", scope: !14586, file: !2248, line: 41, type: !14591)
!14591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!14592 = !DILocation(line: 41, column: 19, scope: !14586)
!14593 = !DILocation(line: 0, scope: !14586)
!14594 = !DILocation(line: 43, column: 9, scope: !14586)
!14595 = !DILocation(line: 43, column: 2, scope: !14586)
!14596 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !14597, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14599)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{null, !14591, !14591}
!14599 = !{!14600, !14601, !14602}
!14600 = !DILocalVariable(name: "successor", arg: 1, scope: !14596, file: !235, line: 443, type: !14591)
!14601 = !DILocalVariable(name: "node", arg: 2, scope: !14596, file: !235, line: 443, type: !14591)
!14602 = !DILocalVariable(name: "prev", scope: !14596, file: !235, line: 445, type: !14603)
!14603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14591)
!14604 = !DILocation(line: 0, scope: !14596)
!14605 = !DILocation(line: 445, column: 39, scope: !14596)
!14606 = !DILocation(line: 447, column: 8, scope: !14596)
!14607 = !DILocation(line: 447, column: 13, scope: !14596)
!14608 = !DILocation(line: 448, column: 8, scope: !14596)
!14609 = !DILocation(line: 448, column: 13, scope: !14596)
!14610 = !DILocation(line: 449, column: 8, scope: !14596)
!14611 = !DILocation(line: 449, column: 13, scope: !14596)
!14612 = !DILocation(line: 450, column: 18, scope: !14596)
!14613 = !DILocation(line: 451, column: 1, scope: !14596)
!14614 = distinct !DISubprogram(name: "next", scope: !2248, file: !2248, line: 46, type: !14615, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14617)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{!2221, !2221}
!14617 = !{!14618, !14619}
!14618 = !DILocalVariable(name: "t", arg: 1, scope: !14614, file: !2248, line: 46, type: !2221)
!14619 = !DILocalVariable(name: "n", scope: !14614, file: !2248, line: 48, type: !14591)
!14620 = !DILocation(line: 0, scope: !14614)
!14621 = !DILocation(line: 48, column: 58, scope: !14614)
!14622 = !DILocation(line: 48, column: 19, scope: !14614)
!14623 = !DILocation(line: 50, column: 9, scope: !14614)
!14624 = !DILocation(line: 50, column: 2, scope: !14614)
!14625 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !14626, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14629)
!14626 = !DISubroutineType(types: !14627)
!14627 = !{null, !14628, !14591}
!14628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!14629 = !{!14630, !14631, !14632}
!14630 = !DILocalVariable(name: "list", arg: 1, scope: !14625, file: !235, line: 404, type: !14628)
!14631 = !DILocalVariable(name: "node", arg: 2, scope: !14625, file: !235, line: 404, type: !14591)
!14632 = !DILocalVariable(name: "tail", scope: !14625, file: !235, line: 406, type: !14603)
!14633 = !DILocation(line: 0, scope: !14625)
!14634 = !DILocation(line: 406, column: 34, scope: !14625)
!14635 = !DILocation(line: 408, column: 8, scope: !14625)
!14636 = !DILocation(line: 408, column: 13, scope: !14625)
!14637 = !DILocation(line: 409, column: 8, scope: !14625)
!14638 = !DILocation(line: 409, column: 13, scope: !14625)
!14639 = !DILocation(line: 411, column: 8, scope: !14625)
!14640 = !DILocation(line: 411, column: 13, scope: !14625)
!14641 = !DILocation(line: 412, column: 13, scope: !14625)
!14642 = !DILocation(line: 413, column: 1, scope: !14625)
!14643 = distinct !DISubprogram(name: "next_timeout", scope: !2248, file: !2248, line: 67, type: !14580, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14644)
!14644 = !{!14645, !14646, !14647}
!14645 = !DILocalVariable(name: "to", scope: !14643, file: !2248, line: 69, type: !2221)
!14646 = !DILocalVariable(name: "ticks_elapsed", scope: !14643, file: !2248, line: 70, type: !356)
!14647 = !DILocalVariable(name: "ret", scope: !14643, file: !2248, line: 71, type: !356)
!14648 = !DILocation(line: 69, column: 24, scope: !14643)
!14649 = !DILocation(line: 0, scope: !14643)
!14650 = !DILocation(line: 70, column: 26, scope: !14643)
!14651 = !DILocation(line: 73, column: 10, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14643, file: !2248, line: 73, column: 6)
!14653 = !DILocation(line: 73, column: 19, scope: !14652)
!14654 = !DILocation(line: 74, column: 21, scope: !14652)
!14655 = !DILocation(line: 74, column: 30, scope: !14652)
!14656 = !DILocation(line: 74, column: 28, scope: !14652)
!14657 = !DILocation(line: 74, column: 45, scope: !14652)
!14658 = !DILocation(line: 73, column: 6, scope: !14643)
!14659 = !DILocation(line: 77, column: 9, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14652, file: !2248, line: 76, column: 9)
!14661 = !DILocation(line: 0, scope: !14652)
!14662 = !DILocation(line: 81, column: 20, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14643, file: !2248, line: 81, column: 6)
!14664 = !DILocation(line: 81, column: 6, scope: !14663)
!14665 = !DILocation(line: 81, column: 32, scope: !14663)
!14666 = !DILocation(line: 85, column: 2, scope: !14643)
!14667 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !14668, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14670)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{!14591, !14628, !14591}
!14670 = !{!14671, !14672}
!14671 = !DILocalVariable(name: "list", arg: 1, scope: !14667, file: !235, line: 341, type: !14628)
!14672 = !DILocalVariable(name: "node", arg: 2, scope: !14667, file: !235, line: 342, type: !14591)
!14673 = !DILocation(line: 0, scope: !14667)
!14674 = !DILocation(line: 344, column: 15, scope: !14667)
!14675 = !DILocation(line: 344, column: 9, scope: !14667)
!14676 = !DILocation(line: 344, column: 26, scope: !14667)
!14677 = !DILocation(line: 344, column: 2, scope: !14667)
!14678 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !14668, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14679)
!14679 = !{!14680, !14681}
!14680 = !DILocalVariable(name: "list", arg: 1, scope: !14678, file: !235, line: 325, type: !14628)
!14681 = !DILocalVariable(name: "node", arg: 2, scope: !14678, file: !235, line: 326, type: !14591)
!14682 = !DILocation(line: 0, scope: !14678)
!14683 = !DILocation(line: 328, column: 24, scope: !14678)
!14684 = !DILocation(line: 328, column: 15, scope: !14678)
!14685 = !DILocation(line: 328, column: 9, scope: !14678)
!14686 = !DILocation(line: 328, column: 45, scope: !14678)
!14687 = !DILocation(line: 328, column: 2, scope: !14678)
!14688 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !14689, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14691)
!14689 = !DISubroutineType(types: !14690)
!14690 = !{!14591, !14628}
!14691 = !{!14692}
!14692 = !DILocalVariable(name: "list", arg: 1, scope: !14688, file: !235, line: 294, type: !14628)
!14693 = !DILocation(line: 0, scope: !14688)
!14694 = !DILocation(line: 296, column: 9, scope: !14688)
!14695 = !DILocation(line: 296, column: 2, scope: !14688)
!14696 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !14697, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14699)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{!146, !14628}
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "list", arg: 1, scope: !14696, file: !235, line: 266, type: !14628)
!14701 = !DILocation(line: 0, scope: !14696)
!14702 = !DILocation(line: 268, column: 15, scope: !14696)
!14703 = !DILocation(line: 268, column: 20, scope: !14696)
!14704 = !DILocation(line: 268, column: 2, scope: !14696)
!14705 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2248, file: !2248, line: 150, type: !14706, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14708)
!14706 = !DISubroutineType(types: !14707)
!14707 = !{!118, !2221}
!14708 = !{!14709, !14710, !14711, !14713}
!14709 = !DILocalVariable(name: "to", arg: 1, scope: !14705, file: !2248, line: 150, type: !2221)
!14710 = !DILocalVariable(name: "ret", scope: !14705, file: !2248, line: 152, type: !118)
!14711 = !DILocalVariable(name: "__i", scope: !14712, file: !2248, line: 154, type: !14446)
!14712 = distinct !DILexicalBlock(scope: !14705, file: !2248, line: 154, column: 2)
!14713 = !DILocalVariable(name: "__key", scope: !14712, file: !2248, line: 154, type: !14446)
!14714 = !DILocation(line: 0, scope: !14705)
!14715 = !DILocation(line: 0, scope: !14712)
!14716 = !DILocation(line: 0, scope: !14474, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 154, column: 2, scope: !14712)
!14718 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14717)
!14720 = !DILocation(line: 0, scope: !14483, inlinedAt: !14719)
!14721 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14717)
!14722 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14717)
!14723 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14717)
!14724 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14717)
!14725 = !DILocation(line: 155, column: 7, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !2248, line: 155, column: 7)
!14727 = distinct !DILexicalBlock(scope: !14728, file: !2248, line: 154, column: 24)
!14728 = distinct !DILexicalBlock(scope: !14712, file: !2248, line: 154, column: 2)
!14729 = !DILocation(line: 155, column: 7, scope: !14727)
!14730 = !DILocation(line: 156, column: 4, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14726, file: !2248, line: 155, column: 39)
!14732 = !DILocation(line: 158, column: 3, scope: !14731)
!14733 = !DILocation(line: 0, scope: !14547, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 154, column: 2, scope: !14728)
!14735 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14734)
!14736 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14734)
!14737 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14734)
!14738 = !DILocation(line: 0, scope: !14561, inlinedAt: !14739)
!14739 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14734)
!14740 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14739)
!14741 = !DILocation(line: 161, column: 2, scope: !14705)
!14742 = distinct !DISubprogram(name: "remove_timeout", scope: !2248, file: !2248, line: 53, type: !2242, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14743)
!14743 = !{!14744}
!14744 = !DILocalVariable(name: "t", arg: 1, scope: !14742, file: !2248, line: 53, type: !2221)
!14745 = !DILocation(line: 0, scope: !14742)
!14746 = !DILocation(line: 55, column: 6, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14742, file: !2248, line: 55, column: 6)
!14748 = !DILocation(line: 55, column: 14, scope: !14747)
!14749 = !DILocation(line: 55, column: 6, scope: !14742)
!14750 = !DILocation(line: 56, column: 25, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14747, file: !2248, line: 55, column: 23)
!14752 = !DILocation(line: 56, column: 12, scope: !14751)
!14753 = !DILocation(line: 56, column: 19, scope: !14751)
!14754 = !DILocation(line: 57, column: 2, scope: !14751)
!14755 = !DILocation(line: 59, column: 23, scope: !14742)
!14756 = !DILocation(line: 59, column: 2, scope: !14742)
!14757 = !DILocation(line: 60, column: 1, scope: !14742)
!14758 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !14759, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14761)
!14759 = !DISubroutineType(types: !14760)
!14760 = !{null, !14591}
!14761 = !{!14762, !14763, !14764}
!14762 = !DILocalVariable(name: "node", arg: 1, scope: !14758, file: !235, line: 496, type: !14591)
!14763 = !DILocalVariable(name: "prev", scope: !14758, file: !235, line: 498, type: !14603)
!14764 = !DILocalVariable(name: "next", scope: !14758, file: !235, line: 499, type: !14603)
!14765 = !DILocation(line: 0, scope: !14758)
!14766 = !DILocation(line: 498, column: 34, scope: !14758)
!14767 = !DILocation(line: 499, column: 34, scope: !14758)
!14768 = !DILocation(line: 501, column: 8, scope: !14758)
!14769 = !DILocation(line: 501, column: 13, scope: !14758)
!14770 = !DILocation(line: 502, column: 8, scope: !14758)
!14771 = !DILocation(line: 502, column: 13, scope: !14758)
!14772 = !DILocation(line: 503, column: 2, scope: !14758)
!14773 = !DILocation(line: 504, column: 1, scope: !14758)
!14774 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !14759, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14775)
!14775 = !{!14776}
!14776 = !DILocalVariable(name: "node", arg: 1, scope: !14774, file: !235, line: 211, type: !14591)
!14777 = !DILocation(line: 0, scope: !14774)
!14778 = !DILocation(line: 213, column: 8, scope: !14774)
!14779 = !DILocation(line: 213, column: 13, scope: !14774)
!14780 = !DILocation(line: 214, column: 8, scope: !14774)
!14781 = !DILocation(line: 214, column: 13, scope: !14774)
!14782 = !DILocation(line: 215, column: 1, scope: !14774)
!14783 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2248, file: !2248, line: 183, type: !14784, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14788)
!14784 = !DISubroutineType(types: !14785)
!14785 = !{!113, !14786}
!14786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14787, size: 32)
!14787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2222)
!14788 = !{!14789, !14790, !14791, !14793}
!14789 = !DILocalVariable(name: "timeout", arg: 1, scope: !14783, file: !2248, line: 183, type: !14786)
!14790 = !DILocalVariable(name: "ticks", scope: !14783, file: !2248, line: 185, type: !113)
!14791 = !DILocalVariable(name: "__i", scope: !14792, file: !2248, line: 187, type: !14446)
!14792 = distinct !DILexicalBlock(scope: !14783, file: !2248, line: 187, column: 2)
!14793 = !DILocalVariable(name: "__key", scope: !14792, file: !2248, line: 187, type: !14446)
!14794 = !DILocation(line: 0, scope: !14783)
!14795 = !DILocation(line: 0, scope: !14792)
!14796 = !DILocation(line: 0, scope: !14474, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 187, column: 2, scope: !14792)
!14798 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14797)
!14800 = !DILocation(line: 0, scope: !14483, inlinedAt: !14799)
!14801 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14797)
!14802 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14797)
!14803 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14797)
!14804 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14797)
!14805 = !DILocation(line: 188, column: 11, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !2248, line: 187, column: 24)
!14807 = distinct !DILexicalBlock(scope: !14792, file: !2248, line: 187, column: 2)
!14808 = !DILocation(line: 0, scope: !14547, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 187, column: 2, scope: !14807)
!14810 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14809)
!14811 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14809)
!14812 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14809)
!14813 = !DILocation(line: 0, scope: !14561, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14809)
!14815 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14814)
!14816 = !DILocation(line: 191, column: 2, scope: !14783)
!14817 = distinct !DISubprogram(name: "timeout_rem", scope: !2248, file: !2248, line: 165, type: !14784, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14818)
!14818 = !{!14819, !14820, !14821}
!14819 = !DILocalVariable(name: "timeout", arg: 1, scope: !14817, file: !2248, line: 165, type: !14786)
!14820 = !DILocalVariable(name: "ticks", scope: !14817, file: !2248, line: 167, type: !113)
!14821 = !DILocalVariable(name: "t", scope: !14822, file: !2248, line: 173, type: !2221)
!14822 = distinct !DILexicalBlock(scope: !14817, file: !2248, line: 173, column: 2)
!14823 = !DILocation(line: 0, scope: !14817)
!14824 = !DILocation(line: 169, column: 6, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14817, file: !2248, line: 169, column: 6)
!14826 = !DILocation(line: 169, column: 6, scope: !14817)
!14827 = !DILocation(line: 173, column: 28, scope: !14822)
!14828 = !DILocation(line: 0, scope: !14822)
!14829 = !DILocation(line: 173, column: 39, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14822, file: !2248, line: 173, column: 2)
!14831 = !DILocation(line: 173, column: 2, scope: !14822)
!14832 = !DILocation(line: 174, column: 15, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14830, file: !2248, line: 173, column: 61)
!14834 = !DILocation(line: 174, column: 9, scope: !14833)
!14835 = !DILocation(line: 175, column: 15, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14833, file: !2248, line: 175, column: 7)
!14837 = !DILocation(line: 175, column: 7, scope: !14833)
!14838 = !DILocation(line: 173, column: 52, scope: !14830)
!14839 = distinct !{!14839, !14831, !14840}
!14840 = !DILocation(line: 178, column: 2, scope: !14822)
!14841 = !DILocation(line: 180, column: 17, scope: !14817)
!14842 = !DILocation(line: 180, column: 15, scope: !14817)
!14843 = !DILocation(line: 180, column: 2, scope: !14817)
!14844 = !DILocation(line: 181, column: 1, scope: !14817)
!14845 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !10862, file: !10862, line: 35, type: !14846, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14848)
!14846 = !DISubroutineType(types: !14847)
!14847 = !{!146, !14786}
!14848 = !{!14849}
!14849 = !DILocalVariable(name: "to", arg: 1, scope: !14845, file: !10862, line: 35, type: !14786)
!14850 = !DILocation(line: 0, scope: !14845)
!14851 = !DILocation(line: 37, column: 35, scope: !14845)
!14852 = !DILocation(line: 37, column: 10, scope: !14845)
!14853 = !DILocation(line: 37, column: 9, scope: !14845)
!14854 = !DILocation(line: 37, column: 2, scope: !14845)
!14855 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2248, file: !2248, line: 194, type: !14784, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14856)
!14856 = !{!14857, !14858, !14859, !14861}
!14857 = !DILocalVariable(name: "timeout", arg: 1, scope: !14855, file: !2248, line: 194, type: !14786)
!14858 = !DILocalVariable(name: "ticks", scope: !14855, file: !2248, line: 196, type: !113)
!14859 = !DILocalVariable(name: "__i", scope: !14860, file: !2248, line: 198, type: !14446)
!14860 = distinct !DILexicalBlock(scope: !14855, file: !2248, line: 198, column: 2)
!14861 = !DILocalVariable(name: "__key", scope: !14860, file: !2248, line: 198, type: !14446)
!14862 = !DILocation(line: 0, scope: !14855)
!14863 = !DILocation(line: 0, scope: !14860)
!14864 = !DILocation(line: 0, scope: !14474, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 198, column: 2, scope: !14860)
!14866 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14867)
!14867 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14865)
!14868 = !DILocation(line: 0, scope: !14483, inlinedAt: !14867)
!14869 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14865)
!14870 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14865)
!14871 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14865)
!14872 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14865)
!14873 = !DILocation(line: 199, column: 11, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !2248, line: 198, column: 24)
!14875 = distinct !DILexicalBlock(scope: !14860, file: !2248, line: 198, column: 2)
!14876 = !DILocation(line: 199, column: 23, scope: !14874)
!14877 = !DILocation(line: 0, scope: !14547, inlinedAt: !14878)
!14878 = distinct !DILocation(line: 198, column: 2, scope: !14875)
!14879 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14878)
!14880 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14878)
!14881 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14878)
!14882 = !DILocation(line: 0, scope: !14561, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14878)
!14884 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14883)
!14885 = !DILocation(line: 199, column: 21, scope: !14874)
!14886 = !DILocation(line: 202, column: 2, scope: !14855)
!14887 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2248, file: !2248, line: 205, type: !14580, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14888)
!14888 = !{!14889, !14890, !14892}
!14889 = !DILocalVariable(name: "ret", scope: !14887, file: !2248, line: 207, type: !356)
!14890 = !DILocalVariable(name: "__i", scope: !14891, file: !2248, line: 209, type: !14446)
!14891 = distinct !DILexicalBlock(scope: !14887, file: !2248, line: 209, column: 2)
!14892 = !DILocalVariable(name: "__key", scope: !14891, file: !2248, line: 209, type: !14446)
!14893 = !DILocation(line: 0, scope: !14887)
!14894 = !DILocation(line: 0, scope: !14891)
!14895 = !DILocation(line: 0, scope: !14474, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 209, column: 2, scope: !14891)
!14897 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14896)
!14899 = !DILocation(line: 0, scope: !14483, inlinedAt: !14898)
!14900 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14896)
!14901 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14896)
!14902 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14896)
!14903 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14896)
!14904 = !DILocation(line: 210, column: 9, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14906, file: !2248, line: 209, column: 24)
!14906 = distinct !DILexicalBlock(scope: !14891, file: !2248, line: 209, column: 2)
!14907 = !DILocation(line: 0, scope: !14547, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 209, column: 2, scope: !14906)
!14909 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14908)
!14910 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14908)
!14911 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14908)
!14912 = !DILocation(line: 0, scope: !14561, inlinedAt: !14913)
!14913 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14908)
!14914 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14913)
!14915 = !DILocation(line: 212, column: 2, scope: !14887)
!14916 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2248, file: !2248, line: 215, type: !8380, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14917)
!14917 = !{!14918, !14919, !14920, !14922, !14923, !14926, !14927}
!14918 = !DILocalVariable(name: "ticks", arg: 1, scope: !14916, file: !2248, line: 215, type: !356)
!14919 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14916, file: !2248, line: 215, type: !146)
!14920 = !DILocalVariable(name: "__i", scope: !14921, file: !2248, line: 217, type: !14446)
!14921 = distinct !DILexicalBlock(scope: !14916, file: !2248, line: 217, column: 2)
!14922 = !DILocalVariable(name: "__key", scope: !14921, file: !2248, line: 217, type: !14446)
!14923 = !DILocalVariable(name: "next_to", scope: !14924, file: !2248, line: 218, type: !118)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !2248, line: 217, column: 24)
!14925 = distinct !DILexicalBlock(scope: !14921, file: !2248, line: 217, column: 2)
!14926 = !DILocalVariable(name: "sooner", scope: !14924, file: !2248, line: 219, type: !146)
!14927 = !DILocalVariable(name: "imminent", scope: !14924, file: !2248, line: 221, type: !146)
!14928 = !DILocation(line: 0, scope: !14916)
!14929 = !DILocation(line: 0, scope: !14921)
!14930 = !DILocation(line: 0, scope: !14474, inlinedAt: !14931)
!14931 = distinct !DILocation(line: 217, column: 2, scope: !14921)
!14932 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14931)
!14934 = !DILocation(line: 0, scope: !14483, inlinedAt: !14933)
!14935 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14931)
!14936 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14931)
!14937 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14931)
!14938 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14931)
!14939 = !DILocation(line: 218, column: 17, scope: !14924)
!14940 = !DILocation(line: 0, scope: !14924)
!14941 = !DILocation(line: 221, column: 27, scope: !14924)
!14942 = !DILocation(line: 233, column: 17, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14924, file: !2248, line: 233, column: 7)
!14944 = !DILocation(line: 234, column: 26, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14943, file: !2248, line: 233, column: 56)
!14946 = !DILocation(line: 234, column: 4, scope: !14945)
!14947 = !DILocation(line: 235, column: 3, scope: !14945)
!14948 = !DILocation(line: 0, scope: !14547, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 217, column: 2, scope: !14925)
!14950 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14949)
!14951 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14949)
!14952 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14949)
!14953 = !DILocation(line: 0, scope: !14561, inlinedAt: !14954)
!14954 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14949)
!14955 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14954)
!14956 = !DILocation(line: 237, column: 1, scope: !14916)
!14957 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2248, file: !2248, line: 239, type: !14958, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14960)
!14958 = !DISubroutineType(types: !14959)
!14959 = !{null, !356}
!14960 = !{!14961, !14962, !14963, !14965}
!14961 = !DILocalVariable(name: "ticks", arg: 1, scope: !14957, file: !2248, line: 239, type: !356)
!14962 = !DILocalVariable(name: "key", scope: !14957, file: !2248, line: 245, type: !14446)
!14963 = !DILocalVariable(name: "t", scope: !14964, file: !2248, line: 262, type: !2221)
!14964 = distinct !DILexicalBlock(scope: !14957, file: !2248, line: 261, column: 67)
!14965 = !DILocalVariable(name: "dt", scope: !14964, file: !2248, line: 263, type: !118)
!14966 = !DILocation(line: 0, scope: !14957)
!14967 = !DILocation(line: 242, column: 2, scope: !14957)
!14968 = !DILocation(line: 0, scope: !14474, inlinedAt: !14969)
!14969 = distinct !DILocation(line: 245, column: 25, scope: !14957)
!14970 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !14971)
!14971 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !14969)
!14972 = !DILocation(line: 0, scope: !14483, inlinedAt: !14971)
!14973 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !14969)
!14974 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !14969)
!14975 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !14969)
!14976 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !14969)
!14977 = !DILocation(line: 261, column: 9, scope: !14957)
!14978 = !DILocation(line: 261, column: 17, scope: !14957)
!14979 = !DILocation(line: 261, column: 25, scope: !14957)
!14980 = !DILocation(line: 261, column: 37, scope: !14957)
!14981 = !DILocation(line: 261, column: 47, scope: !14957)
!14982 = !DILocation(line: 261, column: 44, scope: !14957)
!14983 = !DILocation(line: 261, column: 2, scope: !14957)
!14984 = !DILocation(line: 0, scope: !14964)
!14985 = !DILocation(line: 263, column: 12, scope: !14964)
!14986 = !DILocation(line: 265, column: 16, scope: !14964)
!14987 = !DILocation(line: 265, column: 13, scope: !14964)
!14988 = !DILocation(line: 266, column: 13, scope: !14964)
!14989 = !DILocation(line: 267, column: 3, scope: !14964)
!14990 = !DILocation(line: 0, scope: !14547, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 269, column: 3, scope: !14964)
!14992 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !14991)
!14993 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !14991)
!14994 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !14991)
!14995 = !DILocation(line: 0, scope: !14561, inlinedAt: !14996)
!14996 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !14991)
!14997 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !14996)
!14998 = !DILocation(line: 270, column: 6, scope: !14964)
!14999 = !DILocation(line: 270, column: 3, scope: !14964)
!15000 = !DILocation(line: 0, scope: !14474, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 271, column: 9, scope: !14964)
!15002 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !15001)
!15004 = !DILocation(line: 0, scope: !14483, inlinedAt: !15003)
!15005 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !15001)
!15006 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15001)
!15007 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15001)
!15008 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !15001)
!15009 = !DILocation(line: 272, column: 22, scope: !14964)
!15010 = distinct !{!15010, !14983, !15011}
!15011 = !DILocation(line: 273, column: 2, scope: !14957)
!15012 = !DILocation(line: 276, column: 19, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2248, line: 275, column: 23)
!15014 = distinct !DILexicalBlock(scope: !14957, file: !2248, line: 275, column: 6)
!15015 = !DILocation(line: 277, column: 2, scope: !15013)
!15016 = !DILocation(line: 279, column: 15, scope: !14957)
!15017 = !DILocation(line: 279, column: 12, scope: !14957)
!15018 = !DILocation(line: 280, column: 21, scope: !14957)
!15019 = !DILocation(line: 282, column: 24, scope: !14957)
!15020 = !DILocation(line: 282, column: 2, scope: !14957)
!15021 = !DILocation(line: 0, scope: !14547, inlinedAt: !15022)
!15022 = distinct !DILocation(line: 284, column: 2, scope: !14957)
!15023 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !15022)
!15024 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !15022)
!15025 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !15022)
!15026 = !DILocation(line: 0, scope: !14561, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !15022)
!15028 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !15027)
!15029 = !DILocation(line: 285, column: 1, scope: !14957)
!15030 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2248, file: !2248, line: 287, type: !15031, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !15033)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{!115}
!15033 = !{!15034, !15035, !15037}
!15034 = !DILocalVariable(name: "t", scope: !15030, file: !2248, line: 289, type: !213)
!15035 = !DILocalVariable(name: "__i", scope: !15036, file: !2248, line: 291, type: !14446)
!15036 = distinct !DILexicalBlock(scope: !15030, file: !2248, line: 291, column: 2)
!15037 = !DILocalVariable(name: "__key", scope: !15036, file: !2248, line: 291, type: !14446)
!15038 = !DILocation(line: 0, scope: !15030)
!15039 = !DILocation(line: 0, scope: !15036)
!15040 = !DILocation(line: 0, scope: !14474, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 291, column: 2, scope: !15036)
!15042 = !DILocation(line: 55, column: 2, scope: !14483, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 145, column: 10, scope: !14474, inlinedAt: !15041)
!15044 = !DILocation(line: 0, scope: !14483, inlinedAt: !15043)
!15045 = !DILocation(line: 148, column: 2, scope: !14491, inlinedAt: !15041)
!15046 = !DILocation(line: 148, column: 2, scope: !14492, inlinedAt: !15041)
!15047 = !DILocation(line: 148, column: 2, scope: !14495, inlinedAt: !15041)
!15048 = !DILocation(line: 160, column: 2, scope: !14474, inlinedAt: !15041)
!15049 = !DILocation(line: 292, column: 7, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2248, line: 291, column: 24)
!15051 = distinct !DILexicalBlock(scope: !15036, file: !2248, line: 291, column: 2)
!15052 = !DILocation(line: 292, column: 19, scope: !15050)
!15053 = !DILocation(line: 0, scope: !14547, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 291, column: 2, scope: !15051)
!15055 = !DILocation(line: 194, column: 2, scope: !14555, inlinedAt: !15054)
!15056 = !DILocation(line: 194, column: 2, scope: !14556, inlinedAt: !15054)
!15057 = !DILocation(line: 194, column: 2, scope: !14559, inlinedAt: !15054)
!15058 = !DILocation(line: 0, scope: !14561, inlinedAt: !15059)
!15059 = distinct !DILocation(line: 215, column: 2, scope: !14547, inlinedAt: !15054)
!15060 = !DILocation(line: 95, column: 2, scope: !14561, inlinedAt: !15059)
!15061 = !DILocation(line: 292, column: 17, scope: !15050)
!15062 = !DILocation(line: 294, column: 2, scope: !15030)
!15063 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2248, file: !2248, line: 297, type: !6196, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !1933)
!15064 = !DILocation(line: 300, column: 19, scope: !15063)
!15065 = !DILocation(line: 300, column: 9, scope: !15063)
!15066 = !DILocation(line: 300, column: 2, scope: !15063)
!15067 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2248, file: !2248, line: 306, type: !15031, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !1933)
!15068 = !DILocation(line: 308, column: 9, scope: !15067)
!15069 = !DILocation(line: 308, column: 2, scope: !15067)
!15070 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2248, file: !2248, line: 319, type: !6206, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !15071)
!15071 = !{!15072, !15073, !15074, !15075}
!15072 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15070, file: !2248, line: 319, type: !156)
!15073 = !DILocalVariable(name: "start_cycles", scope: !15070, file: !2248, line: 328, type: !156)
!15074 = !DILocalVariable(name: "cycles_to_wait", scope: !15070, file: !2248, line: 331, type: !156)
!15075 = !DILocalVariable(name: "current_cycles", scope: !15076, file: !2248, line: 338, type: !156)
!15076 = distinct !DILexicalBlock(scope: !15077, file: !2248, line: 337, column: 11)
!15077 = distinct !DILexicalBlock(scope: !15078, file: !2248, line: 337, column: 2)
!15078 = distinct !DILexicalBlock(scope: !15070, file: !2248, line: 337, column: 2)
!15079 = !DILocation(line: 0, scope: !15070)
!15080 = !DILocation(line: 322, column: 19, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15070, file: !2248, line: 322, column: 6)
!15082 = !DILocation(line: 322, column: 6, scope: !15070)
!15083 = !DILocation(line: 328, column: 26, scope: !15070)
!15084 = !DILocation(line: 333, column: 43, scope: !15070)
!15085 = !DILocation(line: 337, column: 2, scope: !15070)
!15086 = !DILocation(line: 338, column: 29, scope: !15076)
!15087 = !DILocation(line: 0, scope: !15076)
!15088 = !DILocation(line: 341, column: 23, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15076, file: !2248, line: 341, column: 7)
!15090 = !DILocation(line: 341, column: 39, scope: !15089)
!15091 = !DILocation(line: 349, column: 1, scope: !15070)
!15092 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !220, file: !220, line: 1675, type: !6196, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !1933)
!15093 = !DILocation(line: 1677, column: 9, scope: !15092)
!15094 = !DILocation(line: 1677, column: 2, scope: !15092)
!15095 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15096, file: !15096, line: 24, type: !6196, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !1933)
!15096 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15097 = !DILocation(line: 26, column: 9, scope: !15095)
!15098 = !DILocation(line: 26, column: 2, scope: !15095)
!15099 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2248, file: !2248, line: 364, type: !15100, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !15102)
!15100 = !DISubroutineType(types: !15101)
!15101 = !{!213, !14436}
!15102 = !{!15103, !15104}
!15103 = !DILocalVariable(name: "timeout", arg: 1, scope: !15099, file: !2248, line: 364, type: !14436)
!15104 = !DILocalVariable(name: "dt", scope: !15099, file: !2248, line: 366, type: !113)
!15105 = !DILocation(line: 0, scope: !15099)
!15106 = !DILocation(line: 368, column: 6, scope: !15099)
!15107 = !DILocation(line: 371, column: 10, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15109, file: !2248, line: 370, column: 47)
!15109 = distinct !DILexicalBlock(scope: !15110, file: !2248, line: 370, column: 13)
!15110 = distinct !DILexicalBlock(scope: !15099, file: !2248, line: 368, column: 6)
!15111 = !DILocation(line: 371, column: 3, scope: !15108)
!15112 = !DILocation(line: 376, column: 58, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15114, file: !2248, line: 376, column: 7)
!15114 = distinct !DILexicalBlock(scope: !15109, file: !2248, line: 372, column: 9)
!15115 = !DILocation(line: 376, column: 7, scope: !15114)
!15116 = !DILocation(line: 376, column: 43, scope: !15113)
!15117 = !DILocation(line: 377, column: 4, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15113, file: !2248, line: 376, column: 64)
!15119 = !DILocation(line: 379, column: 10, scope: !15114)
!15120 = !DILocation(line: 379, column: 33, scope: !15114)
!15121 = !DILocation(line: 379, column: 31, scope: !15114)
!15122 = !DILocation(line: 379, column: 3, scope: !15114)
!15123 = !DILocation(line: 0, scope: !15110)
!15124 = !DILocation(line: 381, column: 1, scope: !15099)
!15125 = distinct !DISubprogram(name: "k_free", scope: !2265, file: !2265, line: 43, type: !6044, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15126)
!15126 = !{!15127, !15128}
!15127 = !DILocalVariable(name: "ptr", arg: 1, scope: !15125, file: !2265, line: 43, type: !117)
!15128 = !DILocalVariable(name: "heap_ref", scope: !15125, file: !2265, line: 45, type: !15129)
!15129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15130, size: 32)
!15130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!15131 = !DILocation(line: 0, scope: !15125)
!15132 = !DILocation(line: 47, column: 10, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15125, file: !2265, line: 47, column: 6)
!15134 = !DILocation(line: 47, column: 6, scope: !15125)
!15135 = !DILocation(line: 49, column: 9, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15133, file: !2265, line: 47, column: 19)
!15137 = !DILocation(line: 53, column: 15, scope: !15136)
!15138 = !DILocation(line: 53, column: 3, scope: !15136)
!15139 = !DILocation(line: 56, column: 2, scope: !15136)
!15140 = !DILocation(line: 57, column: 1, scope: !15125)
!15141 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2265, file: !2265, line: 64, type: !15142, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15144)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{!117, !323, !323}
!15144 = !{!15145, !15146, !15147}
!15145 = !DILocalVariable(name: "align", arg: 1, scope: !15141, file: !2265, line: 64, type: !323)
!15146 = !DILocalVariable(name: "size", arg: 2, scope: !15141, file: !2265, line: 64, type: !323)
!15147 = !DILocalVariable(name: "ret", scope: !15141, file: !2265, line: 75, type: !117)
!15148 = !DILocation(line: 0, scope: !15141)
!15149 = !DILocation(line: 66, column: 2, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !2265, line: 66, column: 2)
!15151 = distinct !DILexicalBlock(scope: !15141, file: !2265, line: 66, column: 2)
!15152 = !DILocation(line: 66, column: 2, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15150, file: !2265, line: 66, column: 2)
!15154 = !DILocation(line: 70, column: 2, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15156, file: !2265, line: 70, column: 2)
!15156 = distinct !DILexicalBlock(scope: !15141, file: !2265, line: 70, column: 2)
!15157 = !DILocation(line: 70, column: 2, scope: !15156)
!15158 = !DILocation(line: 70, column: 2, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15155, file: !2265, line: 70, column: 2)
!15160 = !DILocation(line: 75, column: 14, scope: !15141)
!15161 = !DILocation(line: 79, column: 2, scope: !15141)
!15162 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2265, file: !2265, line: 12, type: !15163, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{!117, !15130, !323, !323}
!15165 = !{!15166, !15167, !15168, !15169, !15170, !15171}
!15166 = !DILocalVariable(name: "heap", arg: 1, scope: !15162, file: !2265, line: 12, type: !15130)
!15167 = !DILocalVariable(name: "align", arg: 2, scope: !15162, file: !2265, line: 12, type: !323)
!15168 = !DILocalVariable(name: "size", arg: 3, scope: !15162, file: !2265, line: 12, type: !323)
!15169 = !DILocalVariable(name: "mem", scope: !15162, file: !2265, line: 14, type: !117)
!15170 = !DILocalVariable(name: "heap_ref", scope: !15162, file: !2265, line: 15, type: !15129)
!15171 = !DILocalVariable(name: "__align", scope: !15162, file: !2265, line: 16, type: !323)
!15172 = !DILocation(line: 0, scope: !15162)
!15173 = !DILocation(line: 24, column: 6, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15162, file: !2265, line: 24, column: 6)
!15175 = !DILocation(line: 24, column: 6, scope: !15162)
!15176 = !DILocation(line: 27, column: 18, scope: !15162)
!15177 = !DILocation(line: 29, column: 44, scope: !15162)
!15178 = !DILocation(line: 29, column: 8, scope: !15162)
!15179 = !DILocation(line: 30, column: 10, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15162, file: !2265, line: 30, column: 6)
!15181 = !DILocation(line: 30, column: 6, scope: !15162)
!15182 = !DILocation(line: 34, column: 13, scope: !15162)
!15183 = !DILocation(line: 35, column: 12, scope: !15162)
!15184 = !DILocation(line: 36, column: 8, scope: !15162)
!15185 = !DILocation(line: 37, column: 2, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15187, file: !2265, line: 37, column: 2)
!15187 = distinct !DILexicalBlock(scope: !15162, file: !2265, line: 37, column: 2)
!15188 = !DILocation(line: 37, column: 2, scope: !15187)
!15189 = !DILocation(line: 37, column: 2, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15186, file: !2265, line: 37, column: 2)
!15191 = !DILocation(line: 41, column: 1, scope: !15162)
!15192 = distinct !DISubprogram(name: "size_add_overflow", scope: !15193, file: !15193, line: 47, type: !15194, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15196)
!15193 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15194 = !DISubroutineType(types: !15195)
!15195 = !{!146, !323, !323, !2399}
!15196 = !{!15197, !15198, !15199}
!15197 = !DILocalVariable(name: "a", arg: 1, scope: !15192, file: !15193, line: 47, type: !323)
!15198 = !DILocalVariable(name: "b", arg: 2, scope: !15192, file: !15193, line: 47, type: !323)
!15199 = !DILocalVariable(name: "result", arg: 3, scope: !15192, file: !15193, line: 47, type: !2399)
!15200 = !DILocation(line: 0, scope: !15192)
!15201 = !DILocation(line: 49, column: 9, scope: !15192)
!15202 = !DILocation(line: 49, column: 2, scope: !15192)
!15203 = distinct !DISubprogram(name: "k_malloc", scope: !2265, file: !2265, line: 82, type: !11563, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15204)
!15204 = !{!15205, !15206}
!15205 = !DILocalVariable(name: "size", arg: 1, scope: !15203, file: !2265, line: 82, type: !323)
!15206 = !DILocalVariable(name: "ret", scope: !15203, file: !2265, line: 86, type: !117)
!15207 = !DILocation(line: 0, scope: !15203)
!15208 = !DILocation(line: 86, column: 14, scope: !15203)
!15209 = !DILocation(line: 90, column: 2, scope: !15203)
!15210 = distinct !DISubprogram(name: "k_calloc", scope: !2265, file: !2265, line: 93, type: !15142, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15211)
!15211 = !{!15212, !15213, !15214, !15215}
!15212 = !DILocalVariable(name: "nmemb", arg: 1, scope: !15210, file: !2265, line: 93, type: !323)
!15213 = !DILocalVariable(name: "size", arg: 2, scope: !15210, file: !2265, line: 93, type: !323)
!15214 = !DILocalVariable(name: "ret", scope: !15210, file: !2265, line: 95, type: !117)
!15215 = !DILocalVariable(name: "bounds", scope: !15210, file: !2265, line: 96, type: !323)
!15216 = !DILocation(line: 0, scope: !15210)
!15217 = !DILocation(line: 96, column: 2, scope: !15210)
!15218 = !DILocation(line: 100, column: 6, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15210, file: !2265, line: 100, column: 6)
!15220 = !DILocation(line: 100, column: 6, scope: !15210)
!15221 = !DILocation(line: 106, column: 17, scope: !15210)
!15222 = !DILocation(line: 106, column: 8, scope: !15210)
!15223 = !DILocation(line: 107, column: 10, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15210, file: !2265, line: 107, column: 6)
!15225 = !DILocation(line: 107, column: 6, scope: !15210)
!15226 = !DILocation(line: 108, column: 9, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15224, file: !2265, line: 107, column: 19)
!15228 = !DILocation(line: 109, column: 2, scope: !15227)
!15229 = !DILocation(line: 114, column: 1, scope: !15210)
!15230 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15193, file: !15193, line: 105, type: !15194, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15231)
!15231 = !{!15232, !15233, !15234}
!15232 = !DILocalVariable(name: "a", arg: 1, scope: !15230, file: !15193, line: 105, type: !323)
!15233 = !DILocalVariable(name: "b", arg: 2, scope: !15230, file: !15193, line: 105, type: !323)
!15234 = !DILocalVariable(name: "result", arg: 3, scope: !15230, file: !15193, line: 105, type: !2399)
!15235 = !DILocation(line: 0, scope: !15230)
!15236 = !DILocation(line: 107, column: 9, scope: !15230)
!15237 = !DILocation(line: 107, column: 2, scope: !15230)
!15238 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2265, file: !2265, line: 116, type: !15239, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15305)
!15239 = !DISubroutineType(types: !15240)
!15240 = !{null, !15241}
!15241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15242, size: 32)
!15242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 896, elements: !15243)
!15243 = !{!15244, !15284, !15296, !15297, !15298, !15299, !15300}
!15244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15242, file: !225, line: 247, baseType: !15245, size: 384)
!15245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !15246)
!15246 = !{!15247, !15258, !15260, !15261, !15262, !15271, !15272, !15273}
!15247 = !DIDerivedType(tag: DW_TAG_member, scope: !15245, file: !225, line: 60, baseType: !15248, size: 64)
!15248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15245, file: !225, line: 60, size: 64, elements: !15249)
!15249 = !{!15250, !15252}
!15250 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15248, file: !225, line: 61, baseType: !15251, size: 64)
!15251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2280)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15248, file: !225, line: 62, baseType: !15253, size: 64)
!15253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !15254)
!15254 = !{!15255}
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15253, file: !251, line: 50, baseType: !15256, size: 64)
!15256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15257, size: 64, elements: !256)
!15257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15253, size: 32)
!15258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15245, file: !225, line: 68, baseType: !15259, size: 32, offset: 64)
!15259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!15260 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15245, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!15261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15245, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!15262 = !DIDerivedType(tag: DW_TAG_member, scope: !15245, file: !225, line: 90, baseType: !15263, size: 16, offset: 112)
!15263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15245, file: !225, line: 90, size: 16, elements: !15264)
!15264 = !{!15265, !15270}
!15265 = !DIDerivedType(tag: DW_TAG_member, scope: !15263, file: !225, line: 91, baseType: !15266, size: 16)
!15266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15263, file: !225, line: 91, size: 16, elements: !15267)
!15267 = !{!15268, !15269}
!15268 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15266, file: !225, line: 96, baseType: !275, size: 8)
!15269 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15266, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!15270 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15263, file: !225, line: 100, baseType: !279, size: 16)
!15271 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15245, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15245, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!15273 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15245, file: !225, line: 131, baseType: !15274, size: 192, offset: 192)
!15274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !15275)
!15275 = !{!15276, !15277, !15283}
!15276 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15274, file: !261, line: 245, baseType: !15251, size: 64)
!15277 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15274, file: !261, line: 246, baseType: !15278, size: 32, offset: 64)
!15278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !15279)
!15279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15280, size: 32)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{null, !15282}
!15282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15274, size: 32)
!15283 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15274, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!15284 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15242, file: !225, line: 250, baseType: !15285, size: 288, offset: 384)
!15285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !15286)
!15286 = !{!15287, !15288, !15289, !15290, !15291, !15292, !15293, !15294, !15295}
!15287 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15285, file: !296, line: 26, baseType: !156, size: 32)
!15288 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15285, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!15289 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15285, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!15290 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15285, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!15291 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15285, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15285, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!15293 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15285, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!15294 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15285, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!15295 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15285, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!15296 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15242, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!15297 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15242, file: !225, line: 256, baseType: !2275, size: 64, offset: 704)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15242, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!15299 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15242, file: !225, line: 325, baseType: !15130, size: 32, offset: 800)
!15300 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15242, file: !225, line: 343, baseType: !15301, size: 64, offset: 832)
!15301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !15302)
!15302 = !{!15303, !15304}
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15301, file: !296, line: 63, baseType: !156, size: 32)
!15304 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15301, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "thread", arg: 1, scope: !15238, file: !2265, line: 116, type: !15241)
!15307 = !DILocation(line: 0, scope: !15238)
!15308 = !DILocation(line: 118, column: 10, scope: !15238)
!15309 = !DILocation(line: 118, column: 24, scope: !15238)
!15310 = !DILocation(line: 119, column: 1, scope: !15238)
!15311 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2265, file: !2265, line: 124, type: !15142, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2259, retainedNodes: !15312)
!15312 = !{!15313, !15314, !15315, !15316}
!15313 = !DILocalVariable(name: "align", arg: 1, scope: !15311, file: !2265, line: 124, type: !323)
!15314 = !DILocalVariable(name: "size", arg: 2, scope: !15311, file: !2265, line: 124, type: !323)
!15315 = !DILocalVariable(name: "ret", scope: !15311, file: !2265, line: 126, type: !117)
!15316 = !DILocalVariable(name: "heap", scope: !15311, file: !2265, line: 127, type: !15130)
!15317 = !DILocation(line: 0, scope: !15311)
!15318 = !DILocation(line: 129, column: 6, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15311, file: !2265, line: 129, column: 6)
!15320 = !DILocation(line: 129, column: 6, scope: !15311)
!15321 = !DILocation(line: 132, column: 10, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15319, file: !2265, line: 131, column: 9)
!15323 = !DILocation(line: 132, column: 20, scope: !15322)
!15324 = !DILocation(line: 135, column: 11, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15311, file: !2265, line: 135, column: 6)
!15326 = !DILocation(line: 135, column: 6, scope: !15311)
!15327 = !DILocation(line: 136, column: 9, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15325, file: !2265, line: 135, column: 20)
!15329 = !DILocation(line: 137, column: 2, scope: !15328)
!15330 = !DILocation(line: 0, scope: !15325)
!15331 = !DILocation(line: 141, column: 2, scope: !15311)
!15332 = distinct !DISubprogram(name: "main", scope: !15333, file: !15333, line: 27, type: !359, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !1933)
!15333 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15334 = !DILocation(line: 38, column: 2, scope: !15335, inlinedAt: !15336)
!15335 = distinct !DISubprogram(name: "arch_nop", scope: !15096, file: !15096, line: 36, type: !359, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3014, retainedNodes: !1933)
!15336 = distinct !DILocation(line: 31, column: 2, scope: !15332)
!15337 = !{i64 2844756}
!15338 = !DILocation(line: 36, column: 1, scope: !15332)
!15339 = distinct !DISubprogram(name: "boot_banner", scope: !15340, file: !15340, line: 26, type: !359, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !1933)
!15340 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15341 = !DILocation(line: 34, column: 2, scope: !15339)
!15342 = !DILocation(line: 36, column: 1, scope: !15339)
!15343 = distinct !DISubprogram(name: "statics_init", scope: !2321, file: !2321, line: 21, type: !858, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15344)
!15344 = !{!15345, !15346}
!15345 = !DILocalVariable(name: "unused", arg: 1, scope: !15343, file: !2321, line: 21, type: !860)
!15346 = !DILocalVariable(name: "h", scope: !15347, file: !2321, line: 24, type: !15348)
!15347 = distinct !DILexicalBlock(scope: !15343, file: !2321, line: 24, column: 2)
!15348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15349, size: 32)
!15349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !15350)
!15350 = !{!15351, !15357, !15363}
!15351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15349, file: !220, line: 5074, baseType: !15352, size: 96)
!15352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !316, line: 56, size: 96, elements: !15353)
!15353 = !{!15354, !15355, !15356}
!15354 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15352, file: !316, line: 57, baseType: !319, size: 32)
!15355 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15352, file: !316, line: 58, baseType: !117, size: 32, offset: 32)
!15356 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15352, file: !316, line: 59, baseType: !323, size: 32, offset: 64)
!15357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15349, file: !220, line: 5075, baseType: !15358, size: 64, offset: 96)
!15358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !15359)
!15359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !15360)
!15360 = !{!15361}
!15361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15359, file: !261, line: 232, baseType: !15362, size: 64)
!15362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2307)
!15363 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15349, file: !220, line: 5076, baseType: !15364, size: 32, offset: 160)
!15364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !328, line: 43, size: 32, elements: !15365)
!15365 = !{!15366}
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15364, file: !328, line: 52, baseType: !22, size: 32)
!15367 = !DILocation(line: 0, scope: !15343)
!15368 = !DILocation(line: 0, scope: !15347)
!15369 = !DILocation(line: 24, column: 2, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15371, file: !2321, line: 24, column: 2)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !2321, line: 24, column: 2)
!15372 = distinct !DILexicalBlock(scope: !15347, file: !2321, line: 24, column: 2)
!15373 = !DILocation(line: 24, column: 2, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15375, file: !2321, line: 24, column: 2)
!15375 = distinct !DILexicalBlock(scope: !15370, file: !2321, line: 24, column: 2)
!15376 = !DILocation(line: 24, column: 2, scope: !15371)
!15377 = !DILocation(line: 24, column: 2, scope: !15347)
!15378 = !DILocation(line: 52, column: 2, scope: !15343)
!15379 = !DILocation(line: 49, column: 27, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !2321, line: 48, column: 3)
!15381 = distinct !DILexicalBlock(scope: !15372, file: !2321, line: 24, column: 36)
!15382 = !DILocation(line: 49, column: 45, scope: !15380)
!15383 = !DILocation(line: 49, column: 4, scope: !15380)
!15384 = !DILocation(line: 24, column: 2, scope: !15372)
!15385 = !DILocation(line: 24, column: 2, scope: !15375)
!15386 = distinct !{!15386, !15377, !15387}
!15387 = !DILocation(line: 51, column: 2, scope: !15347)
!15388 = distinct !DISubprogram(name: "k_heap_init", scope: !2321, file: !2321, line: 13, type: !15389, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15391)
!15389 = !DISubroutineType(types: !15390)
!15390 = !{null, !15348, !117, !323}
!15391 = !{!15392, !15393, !15394}
!15392 = !DILocalVariable(name: "h", arg: 1, scope: !15388, file: !2321, line: 13, type: !15348)
!15393 = !DILocalVariable(name: "mem", arg: 2, scope: !15388, file: !2321, line: 13, type: !117)
!15394 = !DILocalVariable(name: "bytes", arg: 3, scope: !15388, file: !2321, line: 13, type: !323)
!15395 = !DILocation(line: 0, scope: !15388)
!15396 = !DILocation(line: 15, column: 19, scope: !15388)
!15397 = !DILocation(line: 15, column: 2, scope: !15388)
!15398 = !DILocation(line: 16, column: 20, scope: !15388)
!15399 = !DILocation(line: 16, column: 2, scope: !15388)
!15400 = !DILocation(line: 19, column: 1, scope: !15388)
!15401 = distinct !DISubprogram(name: "z_waitq_init", scope: !10810, file: !10810, line: 47, type: !15402, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15405)
!15402 = !DISubroutineType(types: !15403)
!15403 = !{null, !15404}
!15404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15358, size: 32)
!15405 = !{!15406}
!15406 = !DILocalVariable(name: "w", arg: 1, scope: !15401, file: !10810, line: 47, type: !15404)
!15407 = !DILocation(line: 0, scope: !15401)
!15408 = !DILocation(line: 49, column: 21, scope: !15401)
!15409 = !DILocation(line: 49, column: 2, scope: !15401)
!15410 = !DILocation(line: 50, column: 1, scope: !15401)
!15411 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !15412, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15415)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{null, !15414}
!15414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15362, size: 32)
!15415 = !{!15416}
!15416 = !DILocalVariable(name: "list", arg: 1, scope: !15411, file: !235, line: 197, type: !15414)
!15417 = !DILocation(line: 0, scope: !15411)
!15418 = !DILocation(line: 199, column: 8, scope: !15411)
!15419 = !DILocation(line: 199, column: 13, scope: !15411)
!15420 = !DILocation(line: 200, column: 8, scope: !15411)
!15421 = !DILocation(line: 200, column: 13, scope: !15411)
!15422 = !DILocation(line: 201, column: 1, scope: !15411)
!15423 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2321, file: !2321, line: 64, type: !15424, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15430)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{!117, !15348, !323, !323, !15426}
!15426 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !15427)
!15427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !15428)
!15428 = !{!15429}
!15429 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15427, file: !114, line: 66, baseType: !113, size: 64)
!15430 = !{!15431, !15432, !15433, !15434, !15435, !15436, !15437, !15438, !15443}
!15431 = !DILocalVariable(name: "h", arg: 1, scope: !15423, file: !2321, line: 64, type: !15348)
!15432 = !DILocalVariable(name: "align", arg: 2, scope: !15423, file: !2321, line: 64, type: !323)
!15433 = !DILocalVariable(name: "bytes", arg: 3, scope: !15423, file: !2321, line: 64, type: !323)
!15434 = !DILocalVariable(name: "timeout", arg: 4, scope: !15423, file: !2321, line: 65, type: !15426)
!15435 = !DILocalVariable(name: "now", scope: !15423, file: !2321, line: 67, type: !115)
!15436 = !DILocalVariable(name: "end", scope: !15423, file: !2321, line: 67, type: !115)
!15437 = !DILocalVariable(name: "ret", scope: !15423, file: !2321, line: 68, type: !117)
!15438 = !DILocalVariable(name: "key", scope: !15423, file: !2321, line: 72, type: !15439)
!15439 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !328, line: 106, baseType: !15440)
!15440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !328, line: 32, size: 32, elements: !15441)
!15441 = !{!15442}
!15442 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15440, file: !328, line: 33, baseType: !118, size: 32)
!15443 = !DILocalVariable(name: "blocked_alloc", scope: !15423, file: !2321, line: 78, type: !146)
!15444 = !DILocation(line: 0, scope: !15423)
!15445 = !DILocation(line: 67, column: 21, scope: !15423)
!15446 = !DILocation(line: 70, column: 8, scope: !15423)
!15447 = !DILocation(line: 72, column: 41, scope: !15423)
!15448 = !DILocalVariable(name: "l", arg: 1, scope: !15449, file: !328, line: 136, type: !15452)
!15449 = distinct !DISubprogram(name: "k_spin_lock", scope: !328, file: !328, line: 136, type: !15450, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15453)
!15450 = !DISubroutineType(types: !15451)
!15451 = !{!15439, !15452}
!15452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15364, size: 32)
!15453 = !{!15448, !15454}
!15454 = !DILocalVariable(name: "k", scope: !15449, file: !328, line: 139, type: !15439)
!15455 = !DILocation(line: 0, scope: !15449, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 72, column: 25, scope: !15423)
!15457 = !DILocation(line: 55, column: 2, scope: !15458, inlinedAt: !15462)
!15458 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6230, file: !6230, line: 42, type: !7704, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15459)
!15459 = !{!15460, !15461}
!15460 = !DILocalVariable(name: "key", scope: !15458, file: !6230, line: 44, type: !32)
!15461 = !DILocalVariable(name: "tmp", scope: !15458, file: !6230, line: 53, type: !32)
!15462 = distinct !DILocation(line: 145, column: 10, scope: !15449, inlinedAt: !15456)
!15463 = !{i64 2843899}
!15464 = !DILocation(line: 0, scope: !15458, inlinedAt: !15462)
!15465 = !DILocation(line: 148, column: 2, scope: !15466, inlinedAt: !15456)
!15466 = distinct !DILexicalBlock(scope: !15467, file: !328, line: 148, column: 2)
!15467 = distinct !DILexicalBlock(scope: !15449, file: !328, line: 148, column: 2)
!15468 = !DILocation(line: 148, column: 2, scope: !15467, inlinedAt: !15456)
!15469 = !DILocation(line: 148, column: 2, scope: !15470, inlinedAt: !15456)
!15470 = distinct !DILexicalBlock(scope: !15466, file: !328, line: 148, column: 2)
!15471 = !DILocation(line: 160, column: 2, scope: !15449, inlinedAt: !15456)
!15472 = !DILocation(line: 1031, column: 3, scope: !15473, inlinedAt: !15476)
!15473 = distinct !DISubprogram(name: "__get_IPSR", scope: !6109, file: !6109, line: 1027, type: !6196, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15474)
!15474 = !{!15475}
!15475 = !DILocalVariable(name: "result", scope: !15473, file: !6109, line: 1029, type: !156)
!15476 = distinct !DILocation(line: 48, column: 10, scope: !15477, inlinedAt: !15478)
!15477 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6877, file: !6877, line: 46, type: !6878, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !1933)
!15478 = distinct !DILocation(line: 76, column: 2, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !2321, line: 76, column: 2)
!15480 = distinct !DILexicalBlock(scope: !15423, file: !2321, line: 76, column: 2)
!15481 = !{i64 6971304}
!15482 = !DILocation(line: 0, scope: !15473, inlinedAt: !15476)
!15483 = !DILocation(line: 48, column: 9, scope: !15477, inlinedAt: !15478)
!15484 = !DILocation(line: 76, column: 2, scope: !15479)
!15485 = !DILocation(line: 81, column: 9, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15423, file: !2321, line: 80, column: 22)
!15487 = !DILocation(line: 83, column: 9, scope: !15486)
!15488 = !DILocation(line: 85, column: 12, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15486, file: !2321, line: 84, column: 7)
!15490 = !DILocation(line: 85, column: 21, scope: !15489)
!15491 = !DILocation(line: 76, column: 2, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15479, file: !2321, line: 76, column: 2)
!15493 = !DILocation(line: 85, column: 30, scope: !15489)
!15494 = !DILocation(line: 85, column: 37, scope: !15489)
!15495 = !DILocation(line: 84, column: 7, scope: !15486)
!15496 = !DILocation(line: 99, column: 10, scope: !15486)
!15497 = !DILocation(line: 0, scope: !15449, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 101, column: 9, scope: !15486)
!15499 = !DILocation(line: 55, column: 2, scope: !15458, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 145, column: 10, scope: !15449, inlinedAt: !15498)
!15501 = !DILocation(line: 0, scope: !15458, inlinedAt: !15500)
!15502 = !DILocation(line: 148, column: 2, scope: !15466, inlinedAt: !15498)
!15503 = !DILocation(line: 148, column: 2, scope: !15467, inlinedAt: !15498)
!15504 = !DILocation(line: 148, column: 2, scope: !15470, inlinedAt: !15498)
!15505 = !DILocation(line: 160, column: 2, scope: !15449, inlinedAt: !15498)
!15506 = distinct !{!15506, !15507, !15508}
!15507 = !DILocation(line: 80, column: 2, scope: !15423)
!15508 = !DILocation(line: 102, column: 2, scope: !15423)
!15509 = !DILocalVariable(name: "key", arg: 2, scope: !15510, file: !328, line: 190, type: !15439)
!15510 = distinct !DISubprogram(name: "k_spin_unlock", scope: !328, file: !328, line: 189, type: !15511, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15513)
!15511 = !DISubroutineType(types: !15512)
!15512 = !{null, !15452, !15439}
!15513 = !{!15514, !15509}
!15514 = !DILocalVariable(name: "l", arg: 1, scope: !15510, file: !328, line: 189, type: !15452)
!15515 = !DILocation(line: 0, scope: !15510, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 106, column: 2, scope: !15423)
!15517 = !DILocation(line: 194, column: 2, scope: !15518, inlinedAt: !15516)
!15518 = distinct !DILexicalBlock(scope: !15519, file: !328, line: 194, column: 2)
!15519 = distinct !DILexicalBlock(scope: !15510, file: !328, line: 194, column: 2)
!15520 = !DILocation(line: 194, column: 2, scope: !15519, inlinedAt: !15516)
!15521 = !DILocation(line: 194, column: 2, scope: !15522, inlinedAt: !15516)
!15522 = distinct !DILexicalBlock(scope: !15518, file: !328, line: 194, column: 2)
!15523 = !DILocalVariable(name: "key", arg: 1, scope: !15524, file: !6230, line: 84, type: !32)
!15524 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6230, file: !6230, line: 84, type: !6060, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15525)
!15525 = !{!15523}
!15526 = !DILocation(line: 0, scope: !15524, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !15510, inlinedAt: !15516)
!15528 = !DILocation(line: 95, column: 2, scope: !15524, inlinedAt: !15527)
!15529 = !{i64 2844716}
!15530 = !DILocation(line: 107, column: 2, scope: !15423)
!15531 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2321, file: !2321, line: 110, type: !15532, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15534)
!15532 = !DISubroutineType(types: !15533)
!15533 = !{!117, !15348, !323, !15426}
!15534 = !{!15535, !15536, !15537, !15538}
!15535 = !DILocalVariable(name: "h", arg: 1, scope: !15531, file: !2321, line: 110, type: !15348)
!15536 = !DILocalVariable(name: "bytes", arg: 2, scope: !15531, file: !2321, line: 110, type: !323)
!15537 = !DILocalVariable(name: "timeout", arg: 3, scope: !15531, file: !2321, line: 110, type: !15426)
!15538 = !DILocalVariable(name: "ret", scope: !15531, file: !2321, line: 114, type: !117)
!15539 = !DILocation(line: 0, scope: !15531)
!15540 = !DILocation(line: 114, column: 14, scope: !15531)
!15541 = !DILocation(line: 118, column: 2, scope: !15531)
!15542 = distinct !DISubprogram(name: "k_heap_free", scope: !2321, file: !2321, line: 121, type: !15543, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15545)
!15543 = !DISubroutineType(types: !15544)
!15544 = !{null, !15348, !117}
!15545 = !{!15546, !15547, !15548}
!15546 = !DILocalVariable(name: "h", arg: 1, scope: !15542, file: !2321, line: 121, type: !15348)
!15547 = !DILocalVariable(name: "mem", arg: 2, scope: !15542, file: !2321, line: 121, type: !117)
!15548 = !DILocalVariable(name: "key", scope: !15542, file: !2321, line: 123, type: !15439)
!15549 = !DILocation(line: 0, scope: !15542)
!15550 = !DILocation(line: 123, column: 41, scope: !15542)
!15551 = !DILocation(line: 0, scope: !15449, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 123, column: 25, scope: !15542)
!15553 = !DILocation(line: 55, column: 2, scope: !15458, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 145, column: 10, scope: !15449, inlinedAt: !15552)
!15555 = !DILocation(line: 0, scope: !15458, inlinedAt: !15554)
!15556 = !DILocation(line: 148, column: 2, scope: !15466, inlinedAt: !15552)
!15557 = !DILocation(line: 148, column: 2, scope: !15467, inlinedAt: !15552)
!15558 = !DILocation(line: 148, column: 2, scope: !15470, inlinedAt: !15552)
!15559 = !DILocation(line: 160, column: 2, scope: !15449, inlinedAt: !15552)
!15560 = !DILocation(line: 125, column: 20, scope: !15542)
!15561 = !DILocation(line: 125, column: 2, scope: !15542)
!15562 = !DILocation(line: 128, column: 60, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15542, file: !2321, line: 128, column: 6)
!15564 = !DILocation(line: 128, column: 43, scope: !15563)
!15565 = !DILocation(line: 128, column: 68, scope: !15563)
!15566 = !DILocation(line: 128, column: 6, scope: !15542)
!15567 = !DILocation(line: 129, column: 3, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15563, file: !2321, line: 128, column: 74)
!15569 = !DILocation(line: 130, column: 2, scope: !15568)
!15570 = !DILocation(line: 0, scope: !15510, inlinedAt: !15571)
!15571 = distinct !DILocation(line: 131, column: 3, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15563, file: !2321, line: 130, column: 9)
!15573 = !DILocation(line: 194, column: 2, scope: !15518, inlinedAt: !15571)
!15574 = !DILocation(line: 194, column: 2, scope: !15519, inlinedAt: !15571)
!15575 = !DILocation(line: 194, column: 2, scope: !15522, inlinedAt: !15571)
!15576 = !DILocation(line: 0, scope: !15524, inlinedAt: !15577)
!15577 = distinct !DILocation(line: 215, column: 2, scope: !15510, inlinedAt: !15571)
!15578 = !DILocation(line: 95, column: 2, scope: !15524, inlinedAt: !15577)
!15579 = !DILocation(line: 133, column: 1, scope: !15542)
